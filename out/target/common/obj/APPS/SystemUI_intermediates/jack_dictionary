android.support.v4.media.MediaBrowserCompat$SearchCallback -> android.support.v4.media.MediaBrowserCompat$SearchCallback:
    void onError(java.lang.String,android.os.Bundle) -> onError
    void <init>() -> <init>
    void onSearchResult(java.lang.String,android.os.Bundle,java.util.List) -> onSearchResult
android.support.v7.widget.LinearSmoothScroller -> android.support.v7.widget.LinearSmoothScroller:
    float MILLISECONDS_PER_PX -> MILLISECONDS_PER_PX
    android.graphics.PointF mTargetVector -> mTargetVector
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.LinearInterpolator mLinearInterpolator -> mLinearInterpolator
    int mInterimTargetDy -> mInterimTargetDy
    int mInterimTargetDx -> mInterimTargetDx
    void onStop() -> onStop
    int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    void onStart() -> onStart
    int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    int clampApplyScroll(int,int) -> clampApplyScroll
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
    int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    void <init>(android.content.Context) -> <init>
    float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    int getVerticalSnapPreference() -> getVerticalSnapPreference
    int getHorizontalSnapPreference() -> getHorizontalSnapPreference
com.android.systemui.statusbar.phone.StatusBar$8 -> com.android.systemui.statusbar.phone.StatusBar$8:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.recents.views.grid.GridTaskViewThumbnail -> com.android.systemui.recents.views.grid.GridTaskViewThumbnail:
    android.graphics.Path mRestBackgroundOutline -> mRestBackgroundOutline
    android.graphics.Path mThumbnailOutline -> mThumbnailOutline
    boolean mUpdateThumbnailOutline -> mUpdateThumbnailOutline
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void createThumbnailPath(int,int,int,int,android.graphics.Path) -> createThumbnailPath
    void onDraw(android.graphics.Canvas) -> onDraw
    void onTaskViewSizeChanged(int,int) -> onTaskViewSizeChanged
    void updateThumbnailMatrix() -> updateThumbnailMatrix
    void updateThumbnailOutline() -> updateThumbnailOutline
com.android.systemui.recents.RecentsActivity$3 -> com.android.systemui.recents.RecentsActivity$3:
    com.android.systemui.recents.RecentsActivity this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsActivity) -> <init>
    void run() -> run
com.android.settingslib.bluetooth.MapClientProfile -> com.android.settingslib.bluetooth.MapClientProfile:
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    android.os.ParcelUuid[] UUIDS -> UUIDS
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    android.bluetooth.BluetoothMapClient mService -> mService
    java.util.List getConnectedDevices() -> getConnectedDevices
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    boolean -set0(com.android.settingslib.bluetooth.MapClientProfile,boolean) -> -set0
    android.bluetooth.BluetoothMapClient -set1(com.android.settingslib.bluetooth.MapClientProfile,android.bluetooth.BluetoothMapClient) -> -set1
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> <init>
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    android.bluetooth.BluetoothMapClient -get4(com.android.settingslib.bluetooth.MapClientProfile) -> -get4
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.MapClientProfile) -> -get1
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.settingslib.bluetooth.MapClientProfile) -> -get2
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get3(com.android.settingslib.bluetooth.MapClientProfile) -> -get3
    boolean -get0() -> -get0
    void finalize() -> finalize
android.support.v7.widget.TooltipCompat -> android.support.v7.widget.TooltipCompat:
    android.support.v7.widget.TooltipCompat$ViewCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
com.android.systemui.media.RingtonePlayer -> com.android.systemui.media.RingtonePlayer:
    com.android.systemui.media.NotificationPlayer mAsyncPlayer -> mAsyncPlayer
    android.media.IAudioService mAudioService -> mAudioService
    android.media.IRingtonePlayer mCallback -> mCallback
    java.util.HashMap mClients -> mClients
    void <init>() -> <init>
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.content.Context getContextForUser(android.os.UserHandle) -> getContextForUser
    void start() -> start
    com.android.systemui.media.NotificationPlayer -get0(com.android.systemui.media.RingtonePlayer) -> -get0
    java.util.HashMap -get1(com.android.systemui.media.RingtonePlayer) -> -get1
    android.content.Context -wrap0(com.android.systemui.media.RingtonePlayer,android.os.UserHandle) -> -wrap0
com.android.keyguard.AlphaOptimizedImageButton -> com.android.keyguard.AlphaOptimizedImageButton:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
com.android.systemui.DessertCaseView$4 -> com.android.systemui.DessertCaseView$4:
    com.android.systemui.DessertCaseView this$0 -> this$0
    android.view.View val$squatter -> val$squatter
    void <init>(com.android.systemui.DessertCaseView,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewGroupCompat$ViewGroupCompatBaseImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatBaseImpl:
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    void <init>() -> <init>
com.android.systemui.recents.model.TaskKeyStrongCache -> com.android.systemui.recents.model.TaskKeyStrongCache:
    android.util.ArrayMap mCache -> mCache
    void <init>() -> <init>
    void copyEntries(com.android.systemui.recents.model.TaskKeyStrongCache) -> copyEntries
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    void evictAllCache() -> evictAllCache
    java.lang.Object getCacheEntry(int) -> getCacheEntry
    void putCacheEntry(int,java.lang.Object) -> putCacheEntry
    void removeCacheEntry(int) -> removeCacheEntry
android.support.v7.widget.DefaultItemAnimator$2 -> android.support.v7.widget.DefaultItemAnimator$2:
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    java.util.ArrayList val$changes -> val$changes
    void run() -> run
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
android.support.v17.leanback.widget.VerticalGridView -> android.support.v17.leanback.widget.VerticalGridView:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setColumnWidth(android.content.res.TypedArray) -> setColumnWidth
    void setColumnWidth(int) -> setColumnWidth
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void setNumColumns(int) -> setNumColumns
    void initAttributes(android.content.Context,android.util.AttributeSet) -> initAttributes
android.support.v7.app.MediaRouteChooserDialog -> android.support.v7.app.MediaRouteChooserDialog:
    android.support.v7.app.MediaRouteChooserDialog$RouteAdapter mAdapter -> mAdapter
    android.support.v7.app.MediaRouteChooserDialog$MediaRouterCallback mCallback -> mCallback
    android.os.Handler mHandler -> mHandler
    boolean mAttachedToWindow -> mAttachedToWindow
    java.util.ArrayList mRoutes -> mRoutes
    android.support.v7.media.MediaRouteSelector mSelector -> mSelector
    android.support.v7.media.MediaRouter mRouter -> mRouter
    android.widget.TextView mTitleView -> mTitleView
    long mLastUpdateTime -> mLastUpdateTime
    android.widget.ListView mListView -> mListView
    void onAttachedToWindow() -> onAttachedToWindow
    void updateRoutes(java.util.List) -> updateRoutes
    void onCreate(android.os.Bundle) -> onCreate
    void refreshRoutes() -> refreshRoutes
    void <init>(android.content.Context) -> <init>
    void setTitle(java.lang.CharSequence) -> setTitle
    void onFilterRoutes(java.util.List) -> onFilterRoutes
    void setTitle(int) -> setTitle
    void <init>(android.content.Context,int) -> <init>
    void setRouteSelector(android.support.v7.media.MediaRouteSelector) -> setRouteSelector
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onFilterRoute(android.support.v7.media.MediaRouter$RouteInfo) -> onFilterRoute
    void updateLayout() -> updateLayout
com.android.settingslib.bluetooth.CachedBluetoothDevice$Callback -> com.android.settingslib.bluetooth.CachedBluetoothDevice$Callback:
    void onDeviceAttributesChanged() -> onDeviceAttributesChanged
android.support.v4.graphics.TypefaceCompatBaseImpl$2 -> android.support.v4.graphics.TypefaceCompatBaseImpl$2:
    android.support.v4.graphics.TypefaceCompatBaseImpl this$0 -> this$0
    boolean isItalic(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
    boolean isItalic(java.lang.Object) -> isItalic
    void <init>(android.support.v4.graphics.TypefaceCompatBaseImpl) -> <init>
    int getWeight(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    int getWeight(java.lang.Object) -> getWeight
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    boolean mStarted -> mStarted
    int mId -> mId
    boolean mProcessingChange -> mProcessingChange
    boolean mAbandoned -> mAbandoned
    android.support.v4.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> mOnLoadCanceledListener
    void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    void onStopLoading() -> onStopLoading
    void reset() -> reset
    void stopLoading() -> stopLoading
    void onStartLoading() -> onStartLoading
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void startLoading() -> startLoading
    void onReset() -> onReset
    java.lang.String toString() -> toString
    java.lang.String dataToString(java.lang.Object) -> dataToString
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
com.android.systemui.qs.external.TileServiceManager$3 -> com.android.systemui.qs.external.TileServiceManager$3:
    com.android.systemui.qs.external.TileServiceManager this$0 -> this$0
    void <init>(com.android.systemui.qs.external.TileServiceManager) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.settingslib.bluetooth.LocalBluetoothProfileManager$PanStateChangedHandler -> com.android.settingslib.bluetooth.LocalBluetoothProfileManager$PanStateChangedHandler:
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.LocalBluetoothProfileManager,com.android.settingslib.bluetooth.LocalBluetoothProfile) -> <init>
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
android.support.v7.app.AppCompatDelegateImplBase$1 -> android.support.v7.app.AppCompatDelegateImplBase$1:
    java.lang.Thread$UncaughtExceptionHandler val$defHandler -> val$defHandler
    void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
android.support.v7.view.menu.MenuView$ItemView -> android.support.v7.view.menu.MenuView$ItemView:
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
com.android.systemui.volume.ZenModePanel$4 -> com.android.systemui.volume.ZenModePanel$4:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    com.android.systemui.volume.ZenModePanel$ConditionTag val$tag -> val$tag
    android.net.Uri val$conditionId -> val$conditionId
    void <init>(com.android.systemui.volume.ZenModePanel,com.android.systemui.volume.ZenModePanel$ConditionTag,android.net.Uri) -> <init>
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    java.lang.Object getDescription(java.lang.Object) -> getDescription
    long getQueueId(java.lang.Object) -> getQueueId
    void <init>() -> <init>
com.android.systemui.statusbar.DragDownHelper$DragDownCallback -> com.android.systemui.statusbar.DragDownHelper$DragDownCallback:
    boolean isFalsingCheckNeeded() -> isFalsingCheckNeeded
    void onCrossedThreshold(boolean) -> onCrossedThreshold
    void onDragDownReset() -> onDragDownReset
    boolean onDraggedDown(android.view.View,int) -> onDraggedDown
    void onTouchSlopExceeded() -> onTouchSlopExceeded
    void setEmptyDragAmount(float) -> setEmptyDragAmount
com.android.systemui.volume.MediaSessions$H -> com.android.systemui.volume.MediaSessions$H:
    com.android.systemui.volume.MediaSessions this$0 -> this$0
    void <init>(com.android.systemui.volume.MediaSessions,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.android.systemui.volume.MediaSessions,android.os.Looper,com.android.systemui.volume.MediaSessions$H) -> <init>
android.support.v17.leanback.widget.NonOverlappingView -> android.support.v17.leanback.widget.NonOverlappingView:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
com.android.systemui.pip.phone.-$Lambda$_6klcN0VuBwRgNNfNC-wfWLtF9M -> com.android.systemui.pip.phone.-$Lambda$_6klcN0VuBwRgNNfNC-wfWLtF9M:
    boolean -$f0 -> -$f0
    int -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(boolean,int,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.statusbar.NotificationGuts$OnHeightChangedListener -> com.android.systemui.statusbar.NotificationGuts$OnHeightChangedListener:
    void onHeightChanged(com.android.systemui.statusbar.NotificationGuts) -> onHeightChanged
android.support.v17.leanback.widget.FacetProvider -> android.support.v17.leanback.widget.FacetProvider:
    java.lang.Object getFacet(java.lang.Class) -> getFacet
com.android.systemui.recents.Recents$10 -> com.android.systemui.recents.Recents$10:
    com.android.systemui.recents.Recents this$0 -> this$0
    void <init>(com.android.systemui.recents.Recents) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$3 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$3:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.preference.SeekBarPreference$SavedState$1 -> android.support.v7.preference.SeekBarPreference$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v7.preference.SeekBarPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.preference.SeekBarPreference$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.tuner.BatteryPreference -> com.android.systemui.tuner.BatteryPreference:
    java.lang.String mBattery -> mBattery
    boolean mBatteryEnabled -> mBatteryEnabled
    android.util.ArraySet mBlacklist -> mBlacklist
    boolean mHasPercentage -> mHasPercentage
    boolean mHasSetValue -> mHasSetValue
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    boolean persistString(java.lang.String) -> persistString
android.support.v7.widget.ToolbarWidgetWrapper -> android.support.v7.widget.ToolbarWidgetWrapper:
    android.graphics.drawable.Drawable mNavIcon -> mNavIcon
    android.view.View mTabView -> mTabView
    java.lang.CharSequence mHomeDescription -> mHomeDescription
    android.view.Window$Callback mWindowCallback -> mWindowCallback
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.view.View mCustomView -> mCustomView
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    boolean mTitleSet -> mTitleSet
    android.support.v7.widget.Toolbar mToolbar -> mToolbar
    boolean mMenuPrepared -> mMenuPrepared
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> mDefaultNavigationIcon
    int mDisplayOpts -> mDisplayOpts
    android.graphics.drawable.Drawable mLogo -> mLogo
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    int mNavigationMode -> mNavigationMode
    int mDefaultNavigationContentDescription -> mDefaultNavigationContentDescription
    void collapseActionView() -> collapseActionView
    void updateHomeAccessibility() -> updateHomeAccessibility
    void updateToolbarLogo() -> updateToolbarLogo
    void dismissPopupMenus() -> dismissPopupMenus
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    void setTitleInt(java.lang.CharSequence) -> setTitleInt
    void initProgress() -> initProgress
    android.view.ViewGroup getViewGroup() -> getViewGroup
    android.content.Context getContext() -> getContext
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setMenuPrepared() -> setMenuPrepared
    void initIndeterminateProgress() -> initIndeterminateProgress
    void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    void setVisibility(int) -> setVisibility
    void setCollapsible(boolean) -> setCollapsible
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setDisplayOptions(int) -> setDisplayOptions
    boolean showOverflowMenu() -> showOverflowMenu
    int detectDisplayOptions() -> detectDisplayOptions
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void <init>(android.support.v7.widget.Toolbar,boolean,int,int) -> <init>
    void setTitle(java.lang.CharSequence) -> setTitle
    int getNavigationMode() -> getNavigationMode
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    int getDisplayOptions() -> getDisplayOptions
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void setCustomView(android.view.View) -> setCustomView
    void updateNavigationIcon() -> updateNavigationIcon
    void <init>(android.support.v7.widget.Toolbar,boolean) -> <init>
    android.view.Menu getMenu() -> getMenu
    boolean hasExpandedActionView() -> hasExpandedActionView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
com.android.keyguard.KeyguardSecurityCallback -> com.android.keyguard.KeyguardSecurityCallback:
    void dismiss(boolean,int) -> dismiss
    void reportUnlockAttempt(int,boolean,int) -> reportUnlockAttempt
    void reset() -> reset
    void userActivity() -> userActivity
com.android.systemui.doze.DozeSensors -> com.android.systemui.doze.DozeSensors:
    boolean DEBUG -> DEBUG
    android.app.AlarmManager mAlarmManager -> mAlarmManager
    com.android.systemui.doze.DozeSensors$Callback mCallback -> mCallback
    com.android.internal.hardware.AmbientDisplayConfiguration mConfig -> mConfig
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.phone.DozeParameters mDozeParameters -> mDozeParameters
    android.os.Handler mHandler -> mHandler
    com.android.systemui.doze.DozeSensors$TriggerSensor mPickupSensor -> mPickupSensor
    java.util.function.Consumer mProxCallback -> mProxCallback
    com.android.systemui.doze.DozeSensors$ProxSensor mProxSensor -> mProxSensor
    android.content.ContentResolver mResolver -> mResolver
    android.hardware.SensorManager mSensorManager -> mSensorManager
    com.android.systemui.doze.DozeSensors$TriggerSensor[] mSensors -> mSensors
    android.database.ContentObserver mSettingsObserver -> mSettingsObserver
    com.android.systemui.util.wakelock.WakeLock mWakeLock -> mWakeLock
    void <init>(android.content.Context,android.app.AlarmManager,android.hardware.SensorManager,com.android.systemui.statusbar.phone.DozeParameters,com.android.internal.hardware.AmbientDisplayConfiguration,com.android.systemui.util.wakelock.WakeLock,com.android.systemui.doze.DozeSensors$Callback,java.util.function.Consumer,com.android.systemui.doze.AlwaysOnDisplayPolicy) -> <init>
    void dump(java.io.PrintWriter) -> dump
    android.hardware.Sensor findSensorWithType(java.lang.String) -> findSensorWithType
    android.hardware.Sensor findSensorWithType(android.hardware.SensorManager,java.lang.String) -> findSensorWithType
    java.lang.Boolean isProximityCurrentlyFar() -> isProximityCurrentlyFar
    void onUserSwitched() -> onUserSwitched
    void reregisterAllSensors() -> reregisterAllSensors
    void setDisableSensorsInterferingWithProximity(boolean) -> setDisableSensorsInterferingWithProximity
    void setListening(boolean) -> setListening
    void setProxListening(boolean) -> setProxListening
    void setTouchscreenSensorsListening(boolean) -> setTouchscreenSensorsListening
    void <clinit>() -> <clinit>
    boolean -get0() -> -get0
    android.app.AlarmManager -get1(com.android.systemui.doze.DozeSensors) -> -get1
    com.android.systemui.doze.DozeSensors$Callback -get2(com.android.systemui.doze.DozeSensors) -> -get2
    android.content.Context -get3(com.android.systemui.doze.DozeSensors) -> -get3
    com.android.systemui.statusbar.phone.DozeParameters -get4(com.android.systemui.doze.DozeSensors) -> -get4
    android.os.Handler -get5(com.android.systemui.doze.DozeSensors) -> -get5
    java.util.function.Consumer -get6(com.android.systemui.doze.DozeSensors) -> -get6
    android.content.ContentResolver -get7(com.android.systemui.doze.DozeSensors) -> -get7
    android.hardware.SensorManager -get8(com.android.systemui.doze.DozeSensors) -> -get8
    com.android.systemui.doze.DozeSensors$TriggerSensor[] -get9(com.android.systemui.doze.DozeSensors) -> -get9
    android.database.ContentObserver -get10(com.android.systemui.doze.DozeSensors) -> -get10
    com.android.systemui.util.wakelock.WakeLock -get11(com.android.systemui.doze.DozeSensors) -> -get11
android.support.v7.appcompat.R$attr -> android.support.v7.appcompat.R$attr:
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarStyle -> actionBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionDropDownStyle -> actionDropDownStyle
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int alpha -> alpha
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int buttonStyle -> buttonStyle
    int checkboxStyle -> checkboxStyle
    int colorAccent -> colorAccent
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int dialogTheme -> dialogTheme
    int dropDownListViewStyle -> dropDownListViewStyle
    int editTextStyle -> editTextStyle
    int imageButtonStyle -> imageButtonStyle
    int isLightTheme -> isLightTheme
    int listMenuViewStyle -> listMenuViewStyle
    int listPopupWindowStyle -> listPopupWindowStyle
    int panelMenuListTheme -> panelMenuListTheme
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int searchViewStyle -> searchViewStyle
    int seekBarStyle -> seekBarStyle
    int spinnerStyle -> spinnerStyle
    int switchStyle -> switchStyle
    int textColorSearchUrl -> textColorSearchUrl
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    void <init>() -> <init>
com.android.settingslib.bluetooth.DunServerProfile$DunServiceListener -> com.android.settingslib.bluetooth.DunServerProfile$DunServiceListener:
    com.android.settingslib.bluetooth.DunServerProfile this$0 -> this$0
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
    void <init>(com.android.settingslib.bluetooth.DunServerProfile,com.android.settingslib.bluetooth.DunServerProfile$DunServiceListener) -> <init>
    void <init>(com.android.settingslib.bluetooth.DunServerProfile) -> <init>
com.android.systemui.settings.BrightnessController$3 -> com.android.systemui.settings.BrightnessController$3:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    void <init>(com.android.systemui.settings.BrightnessController) -> <init>
    void run() -> run
com.android.systemui.statusbar.notification.PropertyAnimator -> com.android.systemui.statusbar.notification.PropertyAnimator:
    void startAnimation(android.view.View,com.android.systemui.statusbar.notification.PropertyAnimator$AnimatableProperty,float,com.android.systemui.statusbar.stack.AnimationProperties) -> startAnimation
    void <init>() -> <init>
    void lambda$-com_android_systemui_statusbar_notification_PropertyAnimator_3329(android.util.Property,android.view.View,android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_notification_PropertyAnimator_3329
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onAdjustVolume(int) -> onAdjustVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$2 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$2:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v7.preference.SwitchPreferenceCompat$Listener -> android.support.v7.preference.SwitchPreferenceCompat$Listener:
    android.support.v7.preference.SwitchPreferenceCompat this$0 -> this$0
    void <init>(android.support.v7.preference.SwitchPreferenceCompat) -> <init>
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void <init>(android.support.v7.preference.SwitchPreferenceCompat,android.support.v7.preference.SwitchPreferenceCompat$Listener) -> <init>
android.support.v7.view.menu.StandardMenuPopup -> android.support.v7.view.menu.StandardMenuPopup:
    int mPopupMaxWidth -> mPopupMaxWidth
    android.view.View mAnchorView -> mAnchorView
    android.content.Context mContext -> mContext
    boolean mOverflowOnly -> mOverflowOnly
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.view.View mShownAnchorView -> mShownAnchorView
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> mAttachStateChangeListener
    int mDropDownGravity -> mDropDownGravity
    android.support.v7.view.menu.MenuAdapter mAdapter -> mAdapter
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    boolean mHasContentWidth -> mHasContentWidth
    android.support.v7.widget.MenuPopupWindow mPopup -> mPopup
    boolean mWasDismissed -> mWasDismissed
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    int mPopupStyleAttr -> mPopupStyleAttr
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> mGlobalLayoutListener
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    int mPopupStyleRes -> mPopupStyleRes
    int mContentWidth -> mContentWidth
    boolean mShowTitle -> mShowTitle
    void setVerticalOffset(int) -> setVerticalOffset
    void setShowTitle(boolean) -> setShowTitle
    void setHorizontalOffset(int) -> setHorizontalOffset
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    void onDismiss() -> onDismiss
    void setForceShowIcon(boolean) -> setForceShowIcon
    android.view.ViewTreeObserver -get1(android.support.v7.view.menu.StandardMenuPopup) -> -get1
    void dismiss() -> dismiss
    android.widget.ListView getListView() -> getListView
    boolean flagActionItems() -> flagActionItems
    void show() -> show
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setGravity(int) -> setGravity
    void updateMenuView(boolean) -> updateMenuView
    boolean isShowing() -> isShowing
    android.view.ViewTreeObserver$OnGlobalLayoutListener -get0(android.support.v7.view.menu.StandardMenuPopup) -> -get0
    void setAnchorView(android.view.View) -> setAnchorView
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean tryShow() -> tryShow
    android.view.ViewTreeObserver -set0(android.support.v7.view.menu.StandardMenuPopup,android.view.ViewTreeObserver) -> -set0
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.android.systemui.statusbar.ActivatableNotificationView$6 -> com.android.systemui.statusbar.ActivatableNotificationView$6:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    boolean val$reverse -> val$reverse
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView,boolean) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord -> com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord:
    android.graphics.Bitmap picture -> picture
    android.content.pm.UserInfo info -> info
    boolean isCurrent -> isCurrent
    boolean isDisabledByAdmin -> isDisabledByAdmin
    boolean isSwitchToEnabled -> isSwitchToEnabled
    com.android.settingslib.RestrictedLockUtils$EnforcedAdmin enforcedAdmin -> enforcedAdmin
    boolean isAddUser -> isAddUser
    boolean isGuest -> isGuest
    boolean isRestricted -> isRestricted
    int resolveId() -> resolveId
    void <init>(android.content.pm.UserInfo,android.graphics.Bitmap,boolean,boolean,boolean,boolean,boolean) -> <init>
    com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord copyWithIsCurrent(boolean) -> copyWithIsCurrent
    java.lang.String toString() -> toString
com.android.systemui.qs.customize.TileQueryHelper$TileStateListener -> com.android.systemui.qs.customize.TileQueryHelper$TileStateListener:
    void onTilesChanged(java.util.List) -> onTilesChanged
android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord -> android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord:
    java.lang.String mRouteDescriptorId -> mRouteDescriptorId
    android.support.v7.media.MediaRouteDescriptor mRouteDescriptor -> mRouteDescriptor
    java.lang.Object mRouteObj -> mRouteObj
    void <init>(java.lang.Object,java.lang.String) -> <init>
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$10 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$10:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper -> android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper:
    android.view.animation.Animation$AnimationListener mWrapped -> mWrapped
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.view.animation.Animation$AnimationListener) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void <init>(android.view.animation.Animation$AnimationListener,android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper) -> <init>
com.android.systemui.colorextraction.SysuiColorExtractor$1 -> com.android.systemui.colorextraction.SysuiColorExtractor$1:
    com.android.systemui.colorextraction.SysuiColorExtractor this$0 -> this$0
    android.os.Handler val$handler -> val$handler
    void <init>(com.android.systemui.colorextraction.SysuiColorExtractor,android.os.Handler) -> <init>
    void onWallpaperVisibilityChanged(boolean,int) -> onWallpaperVisibilityChanged
    void lambda$-com_android_systemui_colorextraction_SysuiColorExtractor$1_2888(boolean) -> lambda$-com_android_systemui_colorextraction_SysuiColorExtractor$1_2888
android.support.v4.app.AppOpsManagerCompat -> android.support.v4.app.AppOpsManagerCompat:
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    void <init>() -> <init>
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm -> com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm:
    java.lang.String TAG -> TAG
    float mAppAspectRatio -> mAppAspectRatio
    int mFocusedFrameThickness -> mFocusedFrameThickness
    int mPaddingLeftRight -> mPaddingLeftRight
    int mPaddingTaskView -> mPaddingTaskView
    int mPaddingTopBottom -> mPaddingTopBottom
    android.graphics.Point mScreenSize -> mScreenSize
    android.graphics.Rect mSystemInsets -> mSystemInsets
    android.graphics.Rect mTaskGridRect -> mTaskGridRect
    com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm$TaskGridRectInfo[] mTaskGridRectInfoList -> mTaskGridRectInfoList
    int mTitleBarHeight -> mTitleBarHeight
    android.graphics.Rect mWindowRect -> mWindowRect
    int[] -com-android-systemui-recents-events-ui-focus-NavigateTaskViewEvent$DirectionSwitchesValues -> -com-android-systemui-recents-events-ui-focus-NavigateTaskViewEvent$DirectionSwitchesValues
    void <init>(android.content.Context) -> <init>
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$VisibilityReport computeStackVisibilityReport(java.util.ArrayList) -> computeStackVisibilityReport
    int getFocusFrameThickness() -> getFocusFrameThickness
    android.graphics.Rect getStackActionButtonRect() -> getStackActionButtonRect
    android.graphics.Rect getTaskGridRect() -> getTaskGridRect
    com.android.systemui.recents.views.TaskViewTransform getTransform(int,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm) -> getTransform
    void initialize(android.graphics.Rect) -> initialize
    int navigateFocus(int,int,com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction) -> navigateFocus
    void reloadOnConfigurationChange(android.content.Context) -> reloadOnConfigurationChange
    void setSystemInsets(android.graphics.Rect) -> setSystemInsets
    void updateAppAspectRatio() -> updateAppAspectRatio
    void updateTaskGridRect(int) -> updateTaskGridRect
    float -get0(com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm) -> -get0
    int -get1(com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm) -> -get1
    int -get2(com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm) -> -get2
    int -get3(com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm) -> -get3
    int -get4(com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm) -> -get4
    android.graphics.Rect -get5(com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm) -> -get5
    int[] -getcom-android-systemui-recents-events-ui-focus-NavigateTaskViewEvent$DirectionSwitchesValues() -> -getcom-android-systemui-recents-events-ui-focus-NavigateTaskViewEvent$DirectionSwitchesValues
com.android.systemui.stackdivider.DividerHandleView$1 -> com.android.systemui.stackdivider.DividerHandleView$1:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Integer get(com.android.systemui.stackdivider.DividerHandleView) -> get
    void set(com.android.systemui.stackdivider.DividerHandleView,java.lang.Integer) -> set
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    void onEdgeTouched(int,int) -> onEdgeTouched
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    boolean onEdgeLock(int) -> onEdgeLock
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    void <init>() -> <init>
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
android.support.v4.view.ViewCompat$ViewCompatApi18Impl -> android.support.v4.view.ViewCompat$ViewCompatApi18Impl:
    void <init>() -> <init>
android.support.v7.widget.MenuPopupWindow -> android.support.v7.widget.MenuPopupWindow:
    android.support.v7.widget.MenuItemHoverListener mHoverListener -> mHoverListener
    java.lang.reflect.Method sSetTouchModalMethod -> sSetTouchModalMethod
    void setExitTransition(java.lang.Object) -> setExitTransition
    void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    void setTouchModal(boolean) -> setTouchModal
    void <clinit>() -> <clinit>
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setEnterTransition(java.lang.Object) -> setEnterTransition
com.android.systemui.recents.views.TaskStackAnimationHelper$4 -> com.android.systemui.recents.views.TaskStackAnimationHelper$4:
    com.android.systemui.recents.views.TaskStackAnimationHelper this$0 -> this$0
    float val$newScroll -> val$newScroll
    com.android.systemui.recents.views.TaskView val$frontMostTaskView -> val$frontMostTaskView
    com.android.systemui.recents.views.TaskViewTransform val$frontMostTransform -> val$frontMostTransform
    void <init>(com.android.systemui.recents.views.TaskStackAnimationHelper,float,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform) -> <init>
    void run() -> run
android.support.v7.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
com.android.systemui.statusbar.phone.NavigationBarGestureHelper -> com.android.systemui.statusbar.phone.NavigationBarGestureHelper:
    android.content.Context mContext -> mContext
    com.android.systemui.stackdivider.Divider mDivider -> mDivider
    boolean mDockWindowEnabled -> mDockWindowEnabled
    boolean mDockWindowTouchSlopExceeded -> mDockWindowTouchSlopExceeded
    boolean mDownOnRecents -> mDownOnRecents
    int mDragMode -> mDragMode
    boolean mIsRTL -> mIsRTL
    boolean mIsVertical -> mIsVertical
    int mMinFlingVelocity -> mMinFlingVelocity
    com.android.systemui.statusbar.phone.NavigationBarView mNavigationBarView -> mNavigationBarView
    com.android.systemui.RecentsComponent mRecentsComponent -> mRecentsComponent
    int mScrollTouchSlop -> mScrollTouchSlop
    android.view.GestureDetector mTaskSwitcherDetector -> mTaskSwitcherDetector
    int mTouchDownX -> mTouchDownX
    int mTouchDownY -> mTouchDownY
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void <init>(android.content.Context) -> <init>
    int calculateDragMode() -> calculateDragMode
    void destroy() -> destroy
    boolean handleDockWindowEvent(android.view.MotionEvent) -> handleDockWindowEvent
    void handleDragActionDownEvent(android.view.MotionEvent) -> handleDragActionDownEvent
    boolean handleDragActionMoveEvent(android.view.MotionEvent) -> handleDragActionMoveEvent
    void handleDragActionUpEvent(android.view.MotionEvent) -> handleDragActionUpEvent
    boolean interceptDockWindowEvent(android.view.MotionEvent) -> interceptDockWindowEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void setBarState(boolean,boolean) -> setBarState
    void setComponents(com.android.systemui.RecentsComponent,com.android.systemui.stackdivider.Divider,com.android.systemui.statusbar.phone.NavigationBarView) -> setComponents
com.android.systemui.tuner.PowerNotificationControlsFragment$1 -> com.android.systemui.tuner.PowerNotificationControlsFragment$1:
    com.android.systemui.tuner.PowerNotificationControlsFragment this$0 -> this$0
    android.widget.Switch val$switchWidget -> val$switchWidget
    android.widget.TextView val$switchText -> val$switchText
    void <init>(com.android.systemui.tuner.PowerNotificationControlsFragment,android.widget.Switch,android.widget.TextView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.recents.misc.SystemServicesProxy -> com.android.systemui.recents.misc.SystemServicesProxy:
    android.view.accessibility.AccessibilityManager mAccm -> mAccm
    android.app.ActivityManager mAm -> mAm
    android.content.ComponentName mAssistComponent -> mAssistComponent
    com.android.internal.app.AssistUtils mAssistUtils -> mAssistUtils
    android.graphics.Canvas mBgProtectionCanvas -> mBgProtectionCanvas
    android.graphics.Paint mBgProtectionPaint -> mBgProtectionPaint
    android.content.Context mContext -> mContext
    int mCurrentUserId -> mCurrentUserId
    android.view.Display mDisplay -> mDisplay
    android.util.IconDrawableFactory mDrawableFactory -> mDrawableFactory
    android.service.dreams.IDreamManager mDreamManager -> mDreamManager
    int mDummyThumbnailHeight -> mDummyThumbnailHeight
    int mDummyThumbnailWidth -> mDummyThumbnailWidth
    java.lang.Runnable mGcRunnable -> mGcRunnable
    android.os.Handler mHandler -> mHandler
    boolean mHasFreeformWorkspaceSupport -> mHasFreeformWorkspaceSupport
    android.app.IActivityManager mIam -> mIam
    android.content.pm.IPackageManager mIpm -> mIpm
    boolean mIsSafeMode -> mIsSafeMode
    android.view.IWindowManager mIwm -> mIwm
    android.app.KeyguardManager mKgm -> mKgm
    com.android.systemui.statusbar.policy.UserInfoController$OnUserInfoChangedListener mOnUserInfoChangedListener -> mOnUserInfoChangedListener
    android.content.pm.PackageManager mPm -> mPm
    java.lang.String mRecentsPackage -> mRecentsPackage
    android.app.TaskStackListener mTaskStackListener -> mTaskStackListener
    java.util.List mTaskStackListeners -> mTaskStackListeners
    com.android.systemui.UiOffloadThread mUiOffloadThread -> mUiOffloadThread
    android.os.UserManager mUm -> mUm
    android.view.WindowManager mWm -> mWm
    android.graphics.BitmapFactory$Options sBitmapOptions -> sBitmapOptions
    java.util.List sRecentsBlacklist -> sRecentsBlacklist
    com.android.systemui.recents.misc.SystemServicesProxy sSystemServicesProxy -> sSystemServicesProxy
    com.android.systemui.recents.misc.SystemServicesProxy getInstance(android.content.Context) -> getInstance
    void getStableInsets(android.graphics.Rect) -> getStableInsets
    boolean hasDockedTask() -> hasDockedTask
    void registerTaskStackListener(com.android.systemui.recents.misc.SystemServicesProxy$TaskStackListener) -> registerTaskStackListener
    boolean hasFreeformWorkspaceSupport() -> hasFreeformWorkspaceSupport
    boolean isFreeformStack(int) -> isFreeformStack
    void requestKeyboardShortcuts(android.content.Context,android.view.WindowManager$KeyboardShortcutsReceiver,int) -> requestKeyboardShortcuts
    int getProcessUser() -> getProcessUser
    boolean isSystemUser(int) -> isSystemUser
    int getCurrentUser() -> getCurrentUser
    android.app.ActivityManager$RunningTaskInfo getRunningTask() -> getRunningTask
    boolean isScreenPinningActive() -> isScreenPinningActive
    void registerDockedStackListener(android.view.IDockedStackListener) -> registerDockedStackListener
    android.graphics.Rect getWindowRect() -> getWindowRect
    void sendCloseSystemWindows(java.lang.String) -> sendCloseSystemWindows
    void startActivityFromRecents(android.content.Context,com.android.systemui.recents.model.Task$TaskKey,java.lang.String,android.app.ActivityOptions,int,com.android.systemui.recents.misc.SystemServicesProxy$StartActivityFromRecentsResultListener) -> startActivityFromRecents
    java.util.List getRecentTasks(int,int,boolean,android.util.ArraySet) -> getRecentTasks
    boolean startTaskInDockedMode(int,int) -> startTaskInDockedMode
    boolean hasTransposedNavigationBar() -> hasTransposedNavigationBar
    void <init>(android.content.Context) -> <init>
    void awakenDreamsAsync() -> awakenDreamsAsync
    void cancelThumbnailTransition(int) -> cancelThumbnailTransition
    void cancelWindowTransition(int) -> cancelWindowTransition
    void endProlongedAnimations() -> endProlongedAnimations
    void gc() -> gc
    android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int) -> getActivityInfo
    android.graphics.drawable.Drawable getBadgedActivityIcon(android.content.pm.ActivityInfo,int) -> getBadgedActivityIcon
    java.lang.String getBadgedActivityLabel(android.content.pm.ActivityInfo,int) -> getBadgedActivityLabel
    android.graphics.drawable.Drawable getBadgedApplicationIcon(android.content.pm.ApplicationInfo,int) -> getBadgedApplicationIcon
    java.lang.String getBadgedApplicationLabel(android.content.pm.ApplicationInfo,int) -> getBadgedApplicationLabel
    java.lang.String getBadgedContentDescription(android.content.pm.ActivityInfo,int,android.app.ActivityManager$TaskDescription,android.content.res.Resources) -> getBadgedContentDescription
    android.graphics.drawable.Drawable getBadgedIcon(android.graphics.drawable.Drawable,int) -> getBadgedIcon
    java.lang.String getBadgedLabel(java.lang.String,int) -> getBadgedLabel
    android.graphics.drawable.Drawable getBadgedTaskDescriptionIcon(android.app.ActivityManager$TaskDescription,int,android.content.res.Resources) -> getBadgedTaskDescriptionIcon
    int getDeviceSmallestWidth() -> getDeviceSmallestWidth
    android.graphics.Rect getDisplayRect() -> getDisplayRect
    int getDockedDividerSize(android.content.Context) -> getDockedDividerSize
    int getSystemSetting(android.content.Context,java.lang.String) -> getSystemSetting
    android.app.ActivityManager$TaskDescription getTaskDescription(int) -> getTaskDescription
    com.android.systemui.recents.model.ThumbnailData getTaskThumbnail(int,boolean) -> getTaskThumbnail
    com.android.systemui.recents.model.ThumbnailData getThumbnail(int,boolean) -> getThumbnail
    boolean hasSoftNavigationBar() -> hasSoftNavigationBar
    boolean isBlackListedActivity(java.lang.String) -> isBlackListedActivity
    boolean isDeviceLocked(int) -> isDeviceLocked
    boolean isDreaming() -> isDreaming
    boolean isHomeStack(int) -> isHomeStack
    boolean isInSafeMode() -> isInSafeMode
    boolean isRecentsActivityVisible() -> isRecentsActivityVisible
    boolean isRecentsActivityVisible(android.util.MutableBoolean) -> isRecentsActivityVisible
    boolean isStackNotOccluded(android.app.ActivityManager$StackInfo,android.app.ActivityManager$StackInfo) -> isStackNotOccluded
    boolean isTouchExplorationEnabled() -> isTouchExplorationEnabled
    boolean moveTaskToDockedStack(int,int,android.graphics.Rect) -> moveTaskToDockedStack
    void moveTaskToStack(int,int) -> moveTaskToStack
    void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture,android.os.IRemoteCallback,boolean) -> overridePendingAppTransitionMultiThumbFuture
    void removeTask(int) -> removeTask
    void setPipVisibility(boolean) -> setPipVisibility
    void setRecentsVisibility(boolean) -> setRecentsVisibility
    void startActivityAsUserAsync(android.content.Intent,android.app.ActivityOptions) -> startActivityAsUserAsync
    void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions) -> startInPlaceAnimationOnFrontMostApplication
    void updateOverviewLastStackActiveTimeAsync(long,int) -> updateOverviewLastStackActiveTimeAsync
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_11750(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_11750
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_32137(int) -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_32137
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_32358(java.lang.String) -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_32358
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_43460(android.content.Intent,android.app.ActivityOptions) -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_43460
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_44748(com.android.systemui.recents.model.Task$TaskKey,android.app.ActivityOptions,com.android.systemui.recents.misc.SystemServicesProxy$StartActivityFromRecentsResultListener,android.content.Context,java.lang.String) -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_44748
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_44993(com.android.systemui.recents.misc.SystemServicesProxy$StartActivityFromRecentsResultListener) -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_44993
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_45302(com.android.systemui.recents.misc.SystemServicesProxy$StartActivityFromRecentsResultListener) -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_45302
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_49566() -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_49566
    void lambda$-com_android_systemui_recents_misc_SystemServicesProxy_49893(long,int) -> lambda$-com_android_systemui_recents_misc_SystemServicesProxy_49893
    android.os.Handler -get0(com.android.systemui.recents.misc.SystemServicesProxy) -> -get0
    java.util.List -get1(com.android.systemui.recents.misc.SystemServicesProxy) -> -get1
com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$5 -> com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$5:
    com.android.systemui.statusbar.phone.PhoneStatusBarPolicy this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> <init>
    void onTaskStackChanged() -> onTaskStackChanged
com.android.systemui.tuner.-$Lambda$U4ktHPNI6BrZ_s6jDC6qSbjiuiE -> com.android.systemui.tuner.-$Lambda$U4ktHPNI6BrZ_s6jDC6qSbjiuiE:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void $m$1(android.view.View) -> $m$1
    void onClick(android.view.View) -> onClick
android.support.v4.provider.FontsContractCompat$FontFamilyResult$FontResultStatus -> android.support.v4.provider.FontsContractCompat$FontFamilyResult$FontResultStatus:
com.android.systemui.statusbar.phone.NotificationPanelView$10 -> com.android.systemui.statusbar.phone.NotificationPanelView$10:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.NotificationGuts$GutsContent -> com.android.systemui.statusbar.NotificationGuts$GutsContent:
    android.view.View getContentView() -> getContentView
    boolean isLeavebehind() -> isLeavebehind
    int getActualHeight() -> getActualHeight
    boolean handleCloseControls(boolean,boolean) -> handleCloseControls
    void setGutsParent(com.android.systemui.statusbar.NotificationGuts) -> setGutsParent
    boolean willBeRemoved() -> willBeRemoved
com.android.systemui.-$Lambda$9BMLTOSZV5pQ9eCsGCsjeue721Q -> com.android.systemui.-$Lambda$9BMLTOSZV5pQ9eCsGCsjeue721Q:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void accept(java.lang.Object) -> accept
com.android.systemui.stackdivider.-$Lambda$SF-WjuMwvPZk9i1dL9BXDQtwNzU$2 -> com.android.systemui.stackdivider.-$Lambda$SF-WjuMwvPZk9i1dL9BXDQtwNzU$2:
    boolean -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(boolean,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl:
    android.view.View$AccessibilityDelegate newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessibilityDelegateBridge
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.android.systemui.egg.MLand -> com.android.systemui.egg.MLand:
    int[] ANTENNAE -> ANTENNAE
    int[] CACTI -> CACTI
    boolean DEBUG -> DEBUG
    boolean DEBUG_IDDQD -> DEBUG_IDDQD
    int[] EYES -> EYES
    int[] MOUNTAINS -> MOUNTAINS
    int[] MOUTHS -> MOUTHS
    com.android.systemui.egg.MLand$Params PARAMS -> PARAMS
    int[][] SKIES -> SKIES
    float dp -> dp
    float dt -> dt
    float[] hsv -> hsv
    android.animation.TimeAnimator mAnim -> mAnim
    boolean mAnimating -> mAnimating
    android.media.AudioAttributes mAudioAttrs -> mAudioAttrs
    android.media.AudioManager mAudioManager -> mAudioManager
    int mCountdown -> mCountdown
    int mCurrentPipeId -> mCurrentPipeId
    boolean mFlipped -> mFlipped
    boolean mFrozen -> mFrozen
    java.util.ArrayList mGameControllers -> mGameControllers
    int mHeight -> mHeight
    float mLastPipeTime -> mLastPipeTime
    java.util.ArrayList mObstaclesInPlay -> mObstaclesInPlay
    android.graphics.Paint mPlayerTracePaint -> mPlayerTracePaint
    java.util.ArrayList mPlayers -> mPlayers
    boolean mPlaying -> mPlaying
    int mScene -> mScene
    android.view.ViewGroup mScoreFields -> mScoreFields
    android.view.View mSplash -> mSplash
    int mTaps -> mTaps
    int mTimeOfDay -> mTimeOfDay
    android.graphics.Paint mTouchPaint -> mTouchPaint
    android.os.Vibrator mVibrator -> mVibrator
    int mWidth -> mWidth
    android.graphics.Rect sTmpRect -> sTmpRect
    float t -> t
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void L(java.lang.String,java.lang.Object[]) -> L
    void addPlayer() -> addPlayer
    int addPlayerInternal(com.android.systemui.egg.MLand$Player) -> addPlayerInternal
    float clamp(float) -> clamp
    void clearPlayers() -> clearPlayers
    float frand() -> frand
    float frand(float,float) -> frand
    int getControllerPlayer(int) -> getControllerPlayer
    java.util.ArrayList getGameControllers() -> getGameControllers
    float getGameTime() -> getGameTime
    int getNumPlayers() -> getNumPlayers
    com.android.systemui.egg.MLand$Player getPlayer(int) -> getPlayer
    void hideSplash() -> hideSplash
    int irand(int,int) -> irand
    boolean isGamePad(android.view.InputDevice) -> isGamePad
    float lerp(float,float,float) -> lerp
    float luma(int) -> luma
    void onAttachedToWindow() -> onAttachedToWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    int pick(int[]) -> pick
    void poke(int) -> poke
    void poke(int,float,float) -> poke
    void realignPlayers() -> realignPlayers
    void removePlayer() -> removePlayer
    void removePlayerInternal(com.android.systemui.egg.MLand$Player) -> removePlayerInternal
    void reset() -> reset
    float rlerp(float,float,float) -> rlerp
    void setScoreFieldHolder(android.view.ViewGroup) -> setScoreFieldHolder
    void setSplash(android.view.View) -> setSplash
    void setupPlayers(int) -> setupPlayers
    void showSplash() -> showSplash
    void start(boolean) -> start
    void startPlaying() -> startPlaying
    void step(long,long) -> step
    void stop() -> stop
    void thump(int,long) -> thump
    void unpoke(int) -> unpoke
    boolean willNotDraw() -> willNotDraw
    void <clinit>() -> <clinit>
    com.android.systemui.egg.MLand$Params -get0() -> -get0
    int -get1(com.android.systemui.egg.MLand) -> -get1
    int -get2(com.android.systemui.egg.MLand) -> -get2
    int -get3(com.android.systemui.egg.MLand) -> -get3
    android.view.View -get4(com.android.systemui.egg.MLand) -> -get4
    int -set0(com.android.systemui.egg.MLand,int) -> -set0
    boolean -set1(com.android.systemui.egg.MLand,boolean) -> -set1
    float -wrap0(int) -> -wrap0
    void -wrap1(com.android.systemui.egg.MLand,long,long) -> -wrap1
com.android.systemui.globalactions.GlobalActionsDialog$3 -> com.android.systemui.globalactions.GlobalActionsDialog$3:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.recents.events.EventBus -> com.android.systemui.recents.events.EventBus:
    java.util.Comparator EVENT_HANDLER_COMPARATOR -> EVENT_HANDLER_COMPARATOR
    java.util.HashMap mEventTypeMap -> mEventTypeMap
    android.os.Handler mHandler -> mHandler
    java.util.HashMap mInterprocessEventNameMap -> mInterprocessEventNameMap
    java.util.HashMap mSubscriberTypeMap -> mSubscriberTypeMap
    java.util.ArrayList mSubscribers -> mSubscribers
    com.android.systemui.recents.events.EventBus sDefaultBus -> sDefaultBus
    java.lang.Object sLock -> sLock
    com.android.systemui.recents.events.EventBus getDefault() -> getDefault
    void send(com.android.systemui.recents.events.EventBus$Event) -> send
    void register(java.lang.Object) -> register
    void register(java.lang.Object,int) -> register
    void post(com.android.systemui.recents.events.EventBus$Event) -> post
    void unregister(java.lang.Object) -> unregister
    void sendOntoMainThread(com.android.systemui.recents.events.EventBus$Event) -> sendOntoMainThread
    void <init>(android.os.Looper) -> <init>
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    java.lang.String dumpInternal(java.lang.String) -> dumpInternal
    boolean findRegisteredSubscriber(java.lang.Object,boolean) -> findRegisteredSubscriber
    boolean isValidEventBusHandlerMethod(java.lang.reflect.Method,java.lang.Class[],android.util.MutableBoolean) -> isValidEventBusHandlerMethod
    void logWithPid(java.lang.String) -> logWithPid
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void processEvent(com.android.systemui.recents.events.EventHandler,com.android.systemui.recents.events.EventBus$Event) -> processEvent
    void queueEvent(com.android.systemui.recents.events.EventBus$Event) -> queueEvent
    void registerSubscriber(java.lang.Object,int,android.util.MutableBoolean) -> registerSubscriber
    void sortEventHandlersByPriority(java.util.List) -> sortEventHandlersByPriority
    void <clinit>() -> <clinit>
    void -wrap0(com.android.systemui.recents.events.EventBus,com.android.systemui.recents.events.EventHandler,com.android.systemui.recents.events.EventBus$Event) -> -wrap0
com.android.systemui.statusbar.phone.NotificationPanelView$20 -> com.android.systemui.statusbar.phone.NotificationPanelView$20:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    com.android.systemui.statusbar.KeyguardAffordanceView val$icon -> val$icon
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.statusbar.KeyguardAffordanceView) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBar$10 -> com.android.systemui.statusbar.phone.StatusBar$10:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.qs.tiles.CellularTile$CellSignalCallback -> com.android.systemui.qs.tiles.CellularTile$CellSignalCallback:
    com.android.systemui.qs.tiles.CellularTile$CallbackInfo mInfo -> mInfo
    com.android.systemui.qs.tiles.CellularTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.CellularTile) -> <init>
    void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController$IconState) -> setIsAirplaneMode
    void setMobileDataEnabled(boolean) -> setMobileDataEnabled
    void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,int,int,boolean,boolean,int,int,int,java.lang.String,java.lang.String,boolean,int,boolean) -> setMobileDataIndicators
    void setNoSims(boolean,boolean) -> setNoSims
    void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,boolean,boolean,java.lang.String,boolean) -> setWifiIndicators
    com.android.systemui.qs.tiles.CellularTile$CallbackInfo -get0(com.android.systemui.qs.tiles.CellularTile$CellSignalCallback) -> -get0
    void <init>(com.android.systemui.qs.tiles.CellularTile,com.android.systemui.qs.tiles.CellularTile$CellSignalCallback) -> <init>
com.android.systemui.recents.views.TaskView$2 -> com.android.systemui.recents.views.TaskView$2:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.recents.views.TaskView) -> get
    void setValue(com.android.systemui.recents.views.TaskView,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.util.NotificationChannels -> com.android.systemui.util.NotificationChannels:
    java.lang.String GENERAL -> GENERAL
    java.lang.String STORAGE -> STORAGE
    java.lang.String TVPIP -> TVPIP
    java.lang.String ALERTS -> ALERTS
    java.lang.String BATTERY -> BATTERY
    java.lang.String SCREENSHOTS -> SCREENSHOTS
    void <init>() -> <init>
    void createAll(android.content.Context) -> createAll
    boolean isTv(android.content.Context) -> isTv
    void start() -> start
    void <clinit>() -> <clinit>
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi18Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi18Impl:
    void <init>() -> <init>
com.android.settingslib.wifi.-$Lambda$-0HmLy-OaJJ0RgF8p-sdSZsamhI -> com.android.settingslib.wifi.-$Lambda$-0HmLy-OaJJ0RgF8p-sdSZsamhI:
    long -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(long,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.recents.misc.SystemServicesProxy$1 -> com.android.systemui.recents.misc.SystemServicesProxy$1:
    com.android.systemui.recents.misc.SystemServicesProxy this$0 -> this$0
    void <init>(com.android.systemui.recents.misc.SystemServicesProxy) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.PanelView$5 -> com.android.systemui.statusbar.phone.PanelView$5:
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PanelView) -> <init>
    void onGlobalLayout() -> onGlobalLayout
android.support.v4.view.MenuItemCompat$MenuItemCompatBaseImpl -> android.support.v4.view.MenuItemCompat$MenuItemCompatBaseImpl:
    void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    void <init>() -> <init>
    void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
    void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
com.android.systemui.pip.phone.-$Lambda$ZB0vTH4BRyAQB1FhTXfcOlTpmPY -> com.android.systemui.pip.phone.-$Lambda$ZB0vTH4BRyAQB1FhTXfcOlTpmPY:
    byte $id -> $id
    com.android.systemui.pip.phone.-$Lambda$ZB0vTH4BRyAQB1FhTXfcOlTpmPY $INST$0 -> $INST$0
    com.android.systemui.pip.phone.-$Lambda$ZB0vTH4BRyAQB1FhTXfcOlTpmPY $INST$1 -> $INST$1
    com.android.systemui.pip.phone.-$Lambda$ZB0vTH4BRyAQB1FhTXfcOlTpmPY $INST$2 -> $INST$2
    com.android.systemui.pip.phone.-$Lambda$ZB0vTH4BRyAQB1FhTXfcOlTpmPY $INST$3 -> $INST$3
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void $m$2(java.lang.Object) -> $m$2
    void $m$3(java.lang.Object) -> $m$3
    void accept(java.lang.Object) -> accept
com.android.systemui.qs.QSAnimator$1 -> com.android.systemui.qs.QSAnimator$1:
    com.android.systemui.qs.QSAnimator this$0 -> this$0
    void <init>(com.android.systemui.qs.QSAnimator) -> <init>
    void onAnimationAtEnd() -> onAnimationAtEnd
    void onAnimationStarted() -> onAnimationStarted
com.android.systemui.volume.-$Lambda$ORWkWvklx2FcycYdCeM5VfNFDMc$1 -> com.android.systemui.volume.-$Lambda$ORWkWvklx2FcycYdCeM5VfNFDMc$1:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
android.support.v7.preference.PreferenceManager$PreferenceComparisonCallback -> android.support.v7.preference.PreferenceManager$PreferenceComparisonCallback:
    void <init>() -> <init>
    boolean arePreferenceContentsTheSame(android.support.v7.preference.Preference,android.support.v7.preference.Preference) -> arePreferenceContentsTheSame
    boolean arePreferenceItemsTheSame(android.support.v7.preference.Preference,android.support.v7.preference.Preference) -> arePreferenceItemsTheSame
com.android.systemui.qs.PagedTileLayout$2 -> com.android.systemui.qs.PagedTileLayout$2:
    com.android.systemui.qs.PagedTileLayout this$0 -> this$0
    void <init>(com.android.systemui.qs.PagedTileLayout) -> <init>
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
android.support.v7.app.MediaRouteVolumeSlider -> android.support.v7.app.MediaRouteVolumeSlider:
    float mDisabledAlpha -> mDisabledAlpha
    boolean mHideThumb -> mHideThumb
    int mColor -> mColor
    android.graphics.drawable.Drawable mThumb -> mThumb
    void setColor(int) -> setColor
    void setThumb(android.graphics.drawable.Drawable) -> setThumb
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    void setHideThumb(boolean) -> setHideThumb
com.android.systemui.statusbar.phone.DozeScrimController$7 -> com.android.systemui.statusbar.phone.DozeScrimController$7:
    com.android.systemui.statusbar.phone.DozeScrimController this$0 -> this$0
    boolean val$inFront -> val$inFront
    void <init>(com.android.systemui.statusbar.phone.DozeScrimController,boolean) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.-$Lambda$pfzrTzW0pwWr_NOaX9rVE6jh0v8$1 -> com.android.systemui.statusbar.-$Lambda$pfzrTzW0pwWr_NOaX9rVE6jh0v8$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.volume.VolumeDialogImpl$Accessibility -> com.android.systemui.volume.VolumeDialogImpl$Accessibility:
    boolean mFeedbackEnabled -> mFeedbackEnabled
    android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener mListener -> mListener
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    boolean computeFeedbackEnabled() -> computeFeedbackEnabled
    void destroy() -> destroy
    void init() -> init
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void updateFeedbackEnabled() -> updateFeedbackEnabled
    void lambda$-com_android_systemui_volume_VolumeDialogImpl$Accessibility_53447(boolean) -> lambda$-com_android_systemui_volume_VolumeDialogImpl$Accessibility_53447
    boolean -get0(com.android.systemui.volume.VolumeDialogImpl$Accessibility) -> -get0
    void -wrap0(com.android.systemui.volume.VolumeDialogImpl$Accessibility) -> -wrap0
    void <init>(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.volume.VolumeDialogImpl$Accessibility) -> <init>
com.android.systemui.statusbar.phone.NavigationBarFragment$1 -> com.android.systemui.statusbar.phone.NavigationBarFragment$1:
    com.android.systemui.statusbar.phone.NavigationBarFragment this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NavigationBarFragment) -> <init>
    void onRotationChanged(int) -> onRotationChanged
    void lambda$-com_android_systemui_statusbar_phone_NavigationBarFragment$1_26753(int) -> lambda$-com_android_systemui_statusbar_phone_NavigationBarFragment$1_26753
com.android.systemui.recents.events.component.ActivityPinnedEvent -> com.android.systemui.recents.events.component.ActivityPinnedEvent:
    int taskId -> taskId
    void <init>(int) -> <init>
android.support.v4.media.session.PlaybackStateCompat$State -> android.support.v4.media.session.PlaybackStateCompat$State:
android.support.v4.graphics.drawable.DrawableWrapperApi14 -> android.support.v4.graphics.drawable.DrawableWrapperApi14:
    boolean mMutated -> mMutated
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> DEFAULT_TINT_MODE
    int mCurrentColor -> mCurrentColor
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    android.graphics.PorterDuff$Mode mCurrentMode -> mCurrentMode
    android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState mState -> mState
    boolean mColorFilterSet -> mColorFilterSet
    void setAlpha(int) -> setAlpha
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    int getMinimumHeight() -> getMinimumHeight
    void jumpToCurrentState() -> jumpToCurrentState
    boolean isCompatTintEnabled() -> isCompatTintEnabled
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    void setDither(boolean) -> setDither
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean setVisible(boolean,boolean) -> setVisible
    void setChangingConfigurations(int) -> setChangingConfigurations
    boolean updateTint(int[]) -> updateTint
    boolean isStateful() -> isStateful
    int getOpacity() -> getOpacity
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean setState(int[]) -> setState
    android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void setTint(int) -> setTint
    int getIntrinsicWidth() -> getIntrinsicWidth
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    android.graphics.drawable.Drawable mutate() -> mutate
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicHeight() -> getIntrinsicHeight
    android.graphics.drawable.Drawable newDrawableFromState(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources) -> newDrawableFromState
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    int[] getState() -> getState
    int getChangingConfigurations() -> getChangingConfigurations
    void setTintList(android.content.res.ColorStateList) -> setTintList
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    int getMinimumWidth() -> getMinimumWidth
    void <clinit>() -> <clinit>
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean getPadding(android.graphics.Rect) -> getPadding
    boolean onLevelChange(int) -> onLevelChange
    void updateLocalState(android.content.res.Resources) -> updateLocalState
com.android.systemui.statusbar.phone.PanelView$4 -> com.android.systemui.statusbar.phone.PanelView$4:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    boolean val$clearAllExpandHack -> val$clearAllExpandHack
    void <init>(com.android.systemui.statusbar.phone.PanelView,boolean) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.RoundedCorners$1 -> com.android.systemui.RoundedCorners$1:
    com.android.systemui.RoundedCorners this$0 -> this$0
    void <init>(com.android.systemui.RoundedCorners,android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void handleValueChanged(int,boolean) -> handleValueChanged
android.support.v4.view.animation.FastOutLinearInInterpolator -> android.support.v4.view.animation.FastOutLinearInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    float getInterpolation(float) -> getInterpolation
android.support.v4.util.ArraySet$1 -> android.support.v4.util.ArraySet$1:
    android.support.v4.util.ArraySet this$0 -> this$0
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    java.util.Map colGetMap() -> colGetMap
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colClear() -> colClear
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    void <init>(android.support.v4.util.ArraySet) -> <init>
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    int colGetSize() -> colGetSize
    void colRemoveAt(int) -> colRemoveAt
    void colPut(java.lang.Object,java.lang.Object) -> colPut
android.support.v7.media.MediaRouterJellybeanMr2$UserRouteInfo -> android.support.v7.media.MediaRouterJellybeanMr2$UserRouteInfo:
    void <init>() -> <init>
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.SuggestionsAdapter$ChildViewCache:
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.TextView mText1 -> mText1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.ImageView mIconRefine -> mIconRefine
    android.widget.TextView mText2 -> mText2
    void <init>(android.view.View) -> <init>
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    void <init>() -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.NestedScrollingChild:
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    void stopNestedScroll() -> stopNestedScroll
com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent -> com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent:
    boolean inMultiWindow -> inMultiWindow
    com.android.systemui.recents.model.TaskStack stack -> stack
    boolean showDeferredAnimation -> showDeferredAnimation
    void <init>(boolean,boolean,com.android.systemui.recents.model.TaskStack) -> <init>
android.support.v17.leanback.widget.SearchBar$6$1 -> android.support.v17.leanback.widget.SearchBar$6$1:
    android.support.v17.leanback.widget.SearchBar$6 this$1 -> this$1
    void run() -> run
    void <init>(android.support.v17.leanback.widget.SearchBar$6) -> <init>
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    boolean collapseActionView() -> collapseActionView
    android.content.Context getThemedContext() -> getThemedContext
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void <init>() -> <init>
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> startActionMode
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
com.android.systemui.pip.phone.InputConsumerController -> com.android.systemui.pip.phone.InputConsumerController:
    java.lang.String TAG -> TAG
    com.android.systemui.pip.phone.InputConsumerController$PipInputEventReceiver mInputEventReceiver -> mInputEventReceiver
    com.android.systemui.pip.phone.InputConsumerController$TouchListener mListener -> mListener
    com.android.systemui.pip.phone.InputConsumerController$RegistrationListener mRegistrationListener -> mRegistrationListener
    android.view.IWindowManager mWindowManager -> mWindowManager
    void <init>(android.view.IWindowManager) -> <init>
    void dump(java.io.PrintWriter,java.lang.String) -> dump
    boolean isRegistered() -> isRegistered
    void registerInputConsumer() -> registerInputConsumer
    void setRegistrationListener(com.android.systemui.pip.phone.InputConsumerController$RegistrationListener) -> setRegistrationListener
    void setTouchListener(com.android.systemui.pip.phone.InputConsumerController$TouchListener) -> setTouchListener
    void unregisterInputConsumer() -> unregisterInputConsumer
    void <clinit>() -> <clinit>
    com.android.systemui.pip.phone.InputConsumerController$TouchListener -get0(com.android.systemui.pip.phone.InputConsumerController) -> -get0
com.android.systemui.stackdivider.DividerView$2 -> com.android.systemui.stackdivider.DividerView$2:
    com.android.systemui.stackdivider.DividerView this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.DividerView) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.android.systemui.qs.tiles.AirplaneModeTile$1 -> com.android.systemui.qs.tiles.AirplaneModeTile$1:
    com.android.systemui.qs.tiles.AirplaneModeTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.AirplaneModeTile) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.globalactions.GlobalActionsDialog$LongPressAction -> com.android.systemui.globalactions.GlobalActionsDialog$LongPressAction:
    boolean onLongPress() -> onLongPress
com.android.systemui.globalactions.GlobalActionsDialog$1 -> com.android.systemui.globalactions.GlobalActionsDialog$1:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.settingslib.bluetooth.BluetoothA2dpWrapperImpl -> com.android.settingslib.bluetooth.BluetoothA2dpWrapperImpl:
    android.bluetooth.BluetoothA2dp mService -> mService
    void <init>(android.bluetooth.BluetoothA2dp) -> <init>
android.support.v7.preference.R$attr -> android.support.v7.preference.R$attr:
    int checkBoxPreferenceStyle -> checkBoxPreferenceStyle
    int dialogPreferenceStyle -> dialogPreferenceStyle
    int dropdownPreferenceStyle -> dropdownPreferenceStyle
    int editTextPreferenceStyle -> editTextPreferenceStyle
    int preferenceCategoryStyle -> preferenceCategoryStyle
    int preferenceFragmentStyle -> preferenceFragmentStyle
    int preferenceScreenStyle -> preferenceScreenStyle
    int preferenceStyle -> preferenceStyle
    int preferenceTheme -> preferenceTheme
    int seekBarPreferenceStyle -> seekBarPreferenceStyle
    int switchPreferenceCompatStyle -> switchPreferenceCompatStyle
    int switchPreferenceStyle -> switchPreferenceStyle
    void <init>() -> <init>
android.support.v17.leanback.widget.ControlBar$OnChildFocusedListener -> android.support.v17.leanback.widget.ControlBar$OnChildFocusedListener:
    void onChildFocusedListener(android.view.View,android.view.View) -> onChildFocusedListener
com.android.systemui.statusbar.phone.StatusBar$32 -> com.android.systemui.statusbar.phone.StatusBar$32:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    android.view.View val$nlo -> val$nlo
    void <init>(com.android.systemui.statusbar.phone.StatusBar,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.screenshot.GlobalScreenshot$ShareReceiver -> com.android.systemui.screenshot.GlobalScreenshot$ShareReceiver:
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.screenshot.GlobalScreenshot$6 -> com.android.systemui.screenshot.GlobalScreenshot$6:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v7.view.menu.StandardMenuPopup$1 -> android.support.v7.view.menu.StandardMenuPopup$1:
    android.support.v7.view.menu.StandardMenuPopup this$0 -> this$0
    void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.android.systemui.classifier.LengthCountEvaluator -> com.android.systemui.classifier.LengthCountEvaluator:
    float evaluate(float) -> evaluate
    void <init>() -> <init>
com.android.systemui.statusbar.policy.NextAlarmControllerImpl -> com.android.systemui.statusbar.policy.NextAlarmControllerImpl:
    android.app.AlarmManager mAlarmManager -> mAlarmManager
    java.util.ArrayList mChangeCallbacks -> mChangeCallbacks
    android.app.AlarmManager$AlarmClockInfo mNextAlarm -> mNextAlarm
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.NextAlarmController$NextAlarmChangeCallback) -> addCallback
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void fireNextAlarmChanged() -> fireNextAlarmChanged
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void removeCallback(com.android.systemui.statusbar.policy.NextAlarmController$NextAlarmChangeCallback) -> removeCallback
    void updateNextAlarm() -> updateNextAlarm
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
android.support.v17.leanback.transition.SlideKitkat$CalculateSlide -> android.support.v17.leanback.transition.SlideKitkat$CalculateSlide:
    android.util.Property getProperty() -> getProperty
    float getHere(android.view.View) -> getHere
    float getGone(android.view.View) -> getGone
com.android.keyguard.KeyguardClockAccessibilityDelegate -> com.android.keyguard.KeyguardClockAccessibilityDelegate:
    java.lang.String mFancyColon -> mFancyColon
    boolean isNeeded(android.content.Context) -> isNeeded
    void <init>(android.content.Context) -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    java.lang.CharSequence replaceFancyColon(java.lang.CharSequence) -> replaceFancyColon
com.android.keyguard.KeyguardPasswordView -> com.android.keyguard.KeyguardPasswordView:
    int mDisappearYTranslation -> mDisappearYTranslation
    android.view.animation.Interpolator mFastOutLinearInInterpolator -> mFastOutLinearInInterpolator
    android.view.inputmethod.InputMethodManager mImm -> mImm
    android.view.animation.Interpolator mLinearOutSlowInInterpolator -> mLinearOutSlowInInterpolator
    android.widget.TextView mPasswordEntry -> mPasswordEntry
    com.android.internal.widget.TextViewInputDisabler mPasswordEntryDisabler -> mPasswordEntryDisabler
    boolean mShowImeAtScreenOn -> mShowImeAtScreenOn
    android.view.View mSwitchImeButton -> mSwitchImeButton
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    java.lang.String getPasswordText() -> getPasswordText
    int getPasswordTextViewId() -> getPasswordTextViewId
    int getPromtReasonStringRes(int) -> getPromtReasonStringRes
    int getWrongPasswordStringId() -> getWrongPasswordStringId
    boolean hasMultipleEnabledIMEsOrSubtypes(android.view.inputmethod.InputMethodManager,boolean) -> hasMultipleEnabledIMEsOrSubtypes
    boolean needsInput() -> needsInput
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    void onFinishInflate() -> onFinishInflate
    void onPause() -> onPause
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    void onResume(int) -> onResume
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void reset() -> reset
    void resetPasswordText(boolean,boolean) -> resetPasswordText
    void resetState() -> resetState
    void setPasswordEntryEnabled(boolean) -> setPasswordEntryEnabled
    void setPasswordEntryInputEnabled(boolean) -> setPasswordEntryInputEnabled
    void startAppearAnimation() -> startAppearAnimation
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    void updateSwitchImeButton() -> updateSwitchImeButton
    android.widget.TextView -get0(com.android.keyguard.KeyguardPasswordView) -> -get0
    boolean -get1(com.android.keyguard.KeyguardPasswordView) -> -get1
    void -wrap0(com.android.keyguard.KeyguardPasswordView) -> -wrap0
com.android.settingslib.wifi.WifiTracker$Multimap -> com.android.settingslib.wifi.WifiTracker$Multimap:
    java.util.HashMap store -> store
    void put(java.lang.Object,java.lang.Object) -> put
    void <init>(com.android.settingslib.wifi.WifiTracker$Multimap) -> <init>
    void <init>() -> <init>
    java.util.List getAll(java.lang.Object) -> getAll
com.android.systemui.qs.tileimpl.QSTileImpl -> com.android.systemui.qs.tileimpl.QSTileImpl:
    android.content.Context mContext -> mContext
    com.android.systemui.qs.tileimpl.QSTileImpl$H mHandler -> mHandler
    com.android.systemui.plugins.qs.QSTile$State mState -> mState
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.os.Handler mUiHandler -> mUiHandler
    com.android.systemui.qs.QSHost mHost -> mHost
    boolean mAnnounceNextStateChange -> mAnnounceNextStateChange
    java.util.ArrayList mCallbacks -> mCallbacks
    com.android.settingslib.RestrictedLockUtils$EnforcedAdmin mEnforcedAdmin -> mEnforcedAdmin
    android.util.ArraySet mListeners -> mListeners
    com.android.internal.logging.MetricsLogger mMetricsLogger -> mMetricsLogger
    boolean mShowingDetail -> mShowingDetail
    java.lang.Object mStaleListener -> mStaleListener
    java.lang.String mTileSpec -> mTileSpec
    com.android.systemui.plugins.qs.QSTile$State mTmpState -> mTmpState
    void refreshState(java.lang.Object) -> refreshState
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    void refreshState() -> refreshState
    void handleDestroy() -> handleDestroy
    void checkIfRestrictionEnforcedByAdminOnly(com.android.systemui.plugins.qs.QSTile$State,java.lang.String) -> checkIfRestrictionEnforcedByAdminOnly
    void handleUserSwitch(int) -> handleUserSwitch
    int getColorForState(android.content.Context,int) -> getColorForState
    com.android.systemui.plugins.qs.QSTile$State getState() -> getState
    boolean isShowingDetail() -> isShowingDetail
    void showDetail(boolean) -> showDetail
    void fireScanStateChanged(boolean) -> fireScanStateChanged
    void fireToggleStateChanged(boolean) -> fireToggleStateChanged
    void handleRefreshState(java.lang.Object) -> handleRefreshState
    java.lang.String getTileSpec() -> getTileSpec
    void addCallback(com.android.systemui.plugins.qs.QSTile$Callback) -> addCallback
    void clearState() -> clearState
    void click() -> click
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    com.android.systemui.plugins.qs.QSIconView createTileView(android.content.Context) -> createTileView
    void destroy() -> destroy
    com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter() -> getDetailAdapter
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    long getStaleTimeout() -> getStaleTimeout
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleAddCallback(com.android.systemui.plugins.qs.QSTile$Callback) -> handleAddCallback
    void handleClearState() -> handleClearState
    void handleClick() -> handleClick
    void handleLongClick() -> handleLongClick
    void handleRemoveCallback(com.android.systemui.plugins.qs.QSTile$Callback) -> handleRemoveCallback
    void handleRemoveCallbacks() -> handleRemoveCallbacks
    void handleScanStateChanged(boolean) -> handleScanStateChanged
    void handleSecondaryClick() -> handleSecondaryClick
    void handleSetListening(boolean) -> handleSetListening
    void handleShowDetail(boolean) -> handleShowDetail
    void handleStale() -> handleStale
    void handleStateChanged() -> handleStateChanged
    void handleToggleStateChanged(boolean) -> handleToggleStateChanged
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    boolean isAvailable() -> isAvailable
    int isFullQs() -> isFullQs
    void longClick() -> longClick
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    android.metrics.LogMaker populate(android.metrics.LogMaker) -> populate
    void removeCallback(com.android.systemui.plugins.qs.QSTile$Callback) -> removeCallback
    void removeCallbacks() -> removeCallbacks
    void secondaryClick() -> secondaryClick
    void setDetailListening(boolean) -> setDetailListening
    void setListening(java.lang.Object,boolean) -> setListening
    void setTileSpec(java.lang.String) -> setTileSpec
    boolean shouldAnnouncementBeDelayed() -> shouldAnnouncementBeDelayed
    void userSwitch(int) -> userSwitch
    void <clinit>() -> <clinit>
    com.android.settingslib.RestrictedLockUtils$EnforcedAdmin -get0(com.android.systemui.qs.tileimpl.QSTileImpl) -> -get0
    void -wrap0(com.android.systemui.qs.tileimpl.QSTileImpl,com.android.systemui.plugins.qs.QSTile$Callback) -> -wrap0
    void -wrap1(com.android.systemui.qs.tileimpl.QSTileImpl,com.android.systemui.plugins.qs.QSTile$Callback) -> -wrap1
    void -wrap2(com.android.systemui.qs.tileimpl.QSTileImpl) -> -wrap2
    void -wrap3(com.android.systemui.qs.tileimpl.QSTileImpl,boolean) -> -wrap3
    void -wrap4(com.android.systemui.qs.tileimpl.QSTileImpl,boolean) -> -wrap4
    void -wrap5(com.android.systemui.qs.tileimpl.QSTileImpl,boolean) -> -wrap5
android.support.v17.leanback.transition.SlideKitkat -> android.support.v17.leanback.transition.SlideKitkat:
    android.support.v17.leanback.transition.SlideKitkat$CalculateSlide sCalculateTop -> sCalculateTop
    android.support.v17.leanback.transition.SlideKitkat$CalculateSlide sCalculateBottom -> sCalculateBottom
    android.animation.TimeInterpolator sAccelerate -> sAccelerate
    android.support.v17.leanback.transition.SlideKitkat$CalculateSlide sCalculateStart -> sCalculateStart
    android.support.v17.leanback.transition.SlideKitkat$CalculateSlide sCalculateRight -> sCalculateRight
    android.support.v17.leanback.transition.SlideKitkat$CalculateSlide sCalculateEnd -> sCalculateEnd
    android.animation.TimeInterpolator sDecelerate -> sDecelerate
    int mSlideEdge -> mSlideEdge
    android.support.v17.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator -> mSlideCalculator
    android.support.v17.leanback.transition.SlideKitkat$CalculateSlide sCalculateLeft -> sCalculateLeft
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.animation.Animator onAppear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int) -> onAppear
    android.animation.Animator createAnimation(android.view.View,android.util.Property,float,float,float,android.animation.TimeInterpolator,int) -> createAnimation
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    android.animation.Animator onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int) -> onDisappear
    void setSlideEdge(int) -> setSlideEdge
android.support.v17.leanback.widget.PagingIndicator -> android.support.v17.leanback.widget.PagingIndicator:
    int[] mDotSelectedNextX -> mDotSelectedNextX
    int mArrowRadius -> mArrowRadius
    android.support.v17.leanback.widget.PagingIndicator$Dot[] mDots -> mDots
    int mShadowRadius -> mShadowRadius
    android.util.Property DOT_DIAMETER -> DOT_DIAMETER
    android.graphics.Bitmap mArrow -> mArrow
    int mPageCount -> mPageCount
    android.animation.AnimatorSet mAnimator -> mAnimator
    android.animation.TimeInterpolator DECELERATE_INTERPOLATOR -> DECELERATE_INTERPOLATOR
    int mArrowDiameter -> mArrowDiameter
    int mDotGap -> mDotGap
    android.animation.AnimatorSet mHideAnimator -> mHideAnimator
    int mDotFgSelectColor -> mDotFgSelectColor
    int[] mDotSelectedX -> mDotSelectedX
    int mCurrentPage -> mCurrentPage
    android.animation.AnimatorSet mShowAnimator -> mShowAnimator
    android.util.Property DOT_TRANSLATION_X -> DOT_TRANSLATION_X
    android.graphics.Paint mFgPaint -> mFgPaint
    int mArrowGap -> mArrowGap
    boolean mIsLtr -> mIsLtr
    int mDotCenterY -> mDotCenterY
    int mPreviousPage -> mPreviousPage
    android.graphics.Paint mBgPaint -> mBgPaint
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.util.Property DOT_ALPHA -> DOT_ALPHA
    android.graphics.Rect mArrowRect -> mArrowRect
    int mDotRadius -> mDotRadius
    int mDotDiameter -> mDotDiameter
    float mArrowToBgRatio -> mArrowToBgRatio
    int[] mDotSelectedPrevX -> mDotSelectedPrevX
    android.graphics.Bitmap loadArrow() -> loadArrow
    void calculateDotPositions() -> calculateDotPositions
    int getDesiredHeight() -> getDesiredHeight
    void setArrowColor(int) -> setArrowColor
    int[] getDotSelectedRightX() -> getDotSelectedRightX
    android.animation.Animator createDotTranslationXAnimator() -> createDotTranslationXAnimator
    void onMeasure(int,int) -> onMeasure
    int getRequiredWidth() -> getRequiredWidth
    int getDesiredWidth() -> getDesiredWidth
    int getDimensionFromTypedArray(android.content.res.TypedArray,int,int) -> getDimensionFromTypedArray
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    int getPageCount() -> getPageCount
    int[] getDotSelectedLeftX() -> getDotSelectedLeftX
    android.animation.Animator createDotDiameterAnimator(float,float) -> createDotDiameterAnimator
    void <clinit>() -> <clinit>
    android.animation.Animator createDotAlphaAnimator(float,float) -> createDotAlphaAnimator
    int[] getDotSelectedX() -> getDotSelectedX
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void adjustDotPosition() -> adjustDotPosition
    int getColorFromTypedArray(android.content.res.TypedArray,int,int) -> getColorFromTypedArray
android.support.v17.leanback.widget.BaseGridView -> android.support.v17.leanback.widget.BaseGridView:
    android.support.v17.leanback.widget.BaseGridView$OnKeyInterceptListener mOnKeyInterceptListener -> mOnKeyInterceptListener
    android.support.v17.leanback.widget.BaseGridView$OnTouchInterceptListener mOnTouchInterceptListener -> mOnTouchInterceptListener
    boolean mHasOverlappingRendering -> mHasOverlappingRendering
    android.support.v17.leanback.widget.BaseGridView$OnMotionInterceptListener mOnMotionInterceptListener -> mOnMotionInterceptListener
    android.support.v7.widget.RecyclerView$RecyclerListener mChainedRecyclerListener -> mChainedRecyclerListener
    int mInitialPrefetchItemCount -> mInitialPrefetchItemCount
    boolean mAnimateChildLayout -> mAnimateChildLayout
    android.support.v17.leanback.widget.BaseGridView$OnUnhandledKeyListener mOnUnhandledKeyListener -> mOnUnhandledKeyListener
    android.support.v17.leanback.widget.GridLayoutManager mLayoutManager -> mLayoutManager
    boolean isChildrenDrawingOrderEnabledInternal() -> isChildrenDrawingOrderEnabledInternal
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getVerticalSpacing() -> getVerticalSpacing
    android.view.View focusSearch(int) -> focusSearch
    void setWindowAlignment(int) -> setWindowAlignment
    void scrollToPosition(int) -> scrollToPosition
    void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    void setSelectedPosition(int) -> setSelectedPosition
    void setOnChildViewHolderSelectedListener(android.support.v17.leanback.widget.OnChildViewHolderSelectedListener) -> setOnChildViewHolderSelectedListener
    void setSelectedPositionSmooth(int) -> setSelectedPositionSmooth
    boolean dispatchGenericFocusedEvent(android.view.MotionEvent) -> dispatchGenericFocusedEvent
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    int getSelectedPosition() -> getSelectedPosition
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setGravity(int) -> setGravity
    void initBaseGridViewAttributes(android.content.Context,android.util.AttributeSet) -> initBaseGridViewAttributes
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.systemui.statusbar.notification.NotificationMediaTemplateViewWrapper -> com.android.systemui.statusbar.notification.NotificationMediaTemplateViewWrapper:
    android.view.View mActions -> mActions
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    boolean isDimmable() -> isDimmable
    void onContentUpdated(com.android.systemui.statusbar.ExpandableNotificationRow) -> onContentUpdated
    void resolveViews() -> resolveViews
    void updateTransformedTypes() -> updateTransformedTypes
com.android.systemui.qs.external.TileLifecycleManager$1 -> com.android.systemui.qs.external.TileLifecycleManager$1:
    com.android.systemui.qs.external.TileLifecycleManager this$0 -> this$0
    void <init>(com.android.systemui.qs.external.TileLifecycleManager) -> <init>
    void run() -> run
android.support.v17.leanback.widget.BaseCardView$1 -> android.support.v17.leanback.widget.BaseCardView$1:
    android.support.v17.leanback.widget.BaseCardView this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.BaseCardView) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.BrightnessMirrorController$BrightnessMirrorListener -> com.android.systemui.statusbar.policy.BrightnessMirrorController$BrightnessMirrorListener:
    void onBrightnessMirrorReinflated(android.view.View) -> onBrightnessMirrorReinflated
com.android.keyguard.KeyguardSimPinView$CheckSimPin$2 -> com.android.keyguard.KeyguardSimPinView$CheckSimPin$2:
    com.android.keyguard.KeyguardSimPinView$CheckSimPin this$1 -> this$1
    void <init>(com.android.keyguard.KeyguardSimPinView$CheckSimPin) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBar$27 -> com.android.systemui.statusbar.phone.StatusBar$27:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.TooltipCompatHandler$1 -> android.support.v7.widget.TooltipCompatHandler$1:
    android.support.v7.widget.TooltipCompatHandler this$0 -> this$0
    void <init>(android.support.v7.widget.TooltipCompatHandler) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.NetworkControllerImpl$5 -> com.android.systemui.statusbar.policy.NetworkControllerImpl$5:
    com.android.systemui.statusbar.policy.NetworkControllerImpl this$0 -> this$0
    boolean val$enabled -> val$enabled
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl,boolean) -> <init>
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.android.systemui.recents.misc.SystemServicesProxy$2 -> com.android.systemui.recents.misc.SystemServicesProxy$2:
    java.util.List mTmpListeners -> mTmpListeners
    com.android.systemui.recents.misc.SystemServicesProxy this$0 -> this$0
    void <init>(com.android.systemui.recents.misc.SystemServicesProxy) -> <init>
    void onActivityDismissingDockedStack() -> onActivityDismissingDockedStack
    void onActivityForcedResizable(java.lang.String,int,int) -> onActivityForcedResizable
    void onActivityLaunchOnSecondaryDisplayFailed() -> onActivityLaunchOnSecondaryDisplayFailed
    void onActivityPinned(java.lang.String,int,int) -> onActivityPinned
    void onActivityUnpinned() -> onActivityUnpinned
    void onPinnedActivityRestartAttempt(boolean) -> onPinnedActivityRestartAttempt
    void onPinnedStackAnimationEnded() -> onPinnedStackAnimationEnded
    void onPinnedStackAnimationStarted() -> onPinnedStackAnimationStarted
    void onTaskProfileLocked(int,int) -> onTaskProfileLocked
    void onTaskSnapshotChanged(int,android.app.ActivityManager$TaskSnapshot) -> onTaskSnapshotChanged
    void onTaskStackChanged() -> onTaskStackChanged
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    int describeContents() -> describeContents
    void <init>(int,float) -> <init>
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.systemui.statusbar.notification.NotificationMessagingTemplateViewWrapper -> com.android.systemui.statusbar.notification.NotificationMessagingTemplateViewWrapper:
    android.view.View mContractedMessage -> mContractedMessage
    java.util.ArrayList mHistoricMessages -> mHistoricMessages
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onContentUpdated(com.android.systemui.statusbar.ExpandableNotificationRow) -> onContentUpdated
    void resolveViews() -> resolveViews
    void setRemoteInputVisible(boolean) -> setRemoteInputVisible
    void updateTransformedTypes() -> updateTransformedTypes
com.android.settingslib.applications.InterestingConfigChanges -> com.android.settingslib.applications.InterestingConfigChanges:
    android.content.res.Configuration mLastConfiguration -> mLastConfiguration
    int mLastDensity -> mLastDensity
    int mFlags -> mFlags
    boolean applyNewConfig(android.content.res.Resources) -> applyNewConfig
    void <init>() -> <init>
    void <init>(int) -> <init>
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    int mFlags -> mFlags
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
com.android.systemui.pip.tv.PipManager$Listener -> com.android.systemui.pip.tv.PipManager$Listener:
    void onMoveToFullscreen() -> onMoveToFullscreen
    void onPipActivityClosed() -> onPipActivityClosed
    void onPipEntered() -> onPipEntered
    void onPipMenuActionsChanged(android.content.pm.ParceledListSlice) -> onPipMenuActionsChanged
    void onPipResizeAboutToStart() -> onPipResizeAboutToStart
    void onShowPipMenu() -> onShowPipMenu
android.support.v17.leanback.widget.RowContainerView -> android.support.v17.leanback.widget.RowContainerView:
    android.graphics.drawable.Drawable mForeground -> mForeground
    android.view.ViewGroup mHeaderDock -> mHeaderDock
    boolean mForegroundBoundsChanged -> mForegroundBoundsChanged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setForeground(android.graphics.drawable.Drawable) -> setForeground
    void draw(android.graphics.Canvas) -> draw
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    android.graphics.drawable.Drawable getForeground() -> getForeground
com.android.systemui.recents.events.activity.ShowEmptyViewEvent -> com.android.systemui.recents.events.activity.ShowEmptyViewEvent:
    void <init>() -> <init>
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    boolean mStarted -> mStarted
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    boolean mRetaining -> mRetaining
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    boolean DEBUG -> DEBUG
    void doDestroy() -> doDestroy
    void updateHostController(android.support.v4.app.FragmentHostCallback) -> updateHostController
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean) -> <init>
    void doReportNextStart() -> doReportNextStart
    void doStart() -> doStart
    void doStop() -> doStop
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void doReportStart() -> doReportStart
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> <init>
    void run() -> run
com.android.systemui.pip.phone.PipMenuActivity$3 -> com.android.systemui.pip.phone.PipMenuActivity$3:
    com.android.systemui.pip.phone.PipMenuActivity this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMenuActivity) -> <init>
    void run() -> run
android.support.v14.preference.PreferenceFragment$DividerDecoration -> android.support.v14.preference.PreferenceFragment$DividerDecoration:
    boolean mAllowDividerAfterLastItem -> mAllowDividerAfterLastItem
    android.support.v14.preference.PreferenceFragment this$0 -> this$0
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerHeight -> mDividerHeight
    void <init>(android.support.v14.preference.PreferenceFragment,android.support.v14.preference.PreferenceFragment$DividerDecoration) -> <init>
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
    void setAllowDividerAfterLastItem(boolean) -> setAllowDividerAfterLastItem
    void <init>(android.support.v14.preference.PreferenceFragment) -> <init>
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    void setDividerHeight(int) -> setDividerHeight
    boolean shouldDrawDividerBelow(android.view.View,android.support.v7.widget.RecyclerView) -> shouldDrawDividerBelow
com.android.systemui.statusbar.phone.NavigationBarTransitions$2 -> com.android.systemui.statusbar.phone.NavigationBarTransitions$2:
    com.android.systemui.statusbar.phone.NavigationBarTransitions this$0 -> this$0
    android.os.Handler val$handler -> val$handler
    void <init>(com.android.systemui.statusbar.phone.NavigationBarTransitions,android.os.Handler) -> <init>
    void onWallpaperVisibilityChanged(boolean,int) -> onWallpaperVisibilityChanged
    void lambda$-com_android_systemui_statusbar_phone_NavigationBarTransitions$2_2482() -> lambda$-com_android_systemui_statusbar_phone_NavigationBarTransitions$2_2482
com.android.systemui.statusbar.phone.NotificationIconContainer$4 -> com.android.systemui.statusbar.phone.NotificationIconContainer$4:
    com.android.systemui.statusbar.stack.AnimationFilter mAnimationFilter -> mAnimationFilter
    void <init>() -> <init>
    com.android.systemui.statusbar.stack.AnimationFilter getAnimationFilter() -> getAnimationFilter
com.android.systemui.recents.events.activity.LaunchTaskEvent -> com.android.systemui.recents.events.activity.LaunchTaskEvent:
    com.android.systemui.recents.model.Task task -> task
    com.android.systemui.recents.views.TaskView taskView -> taskView
    boolean screenPinningRequested -> screenPinningRequested
    int targetTaskStack -> targetTaskStack
    android.graphics.Rect targetTaskBounds -> targetTaskBounds
    void <init>(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task,android.graphics.Rect,int,boolean) -> <init>
com.android.systemui.recents.model.RecentsTaskLoader -> com.android.systemui.recents.model.RecentsTaskLoader:
    android.util.LruCache mActivityInfoCache -> mActivityInfoCache
    com.android.systemui.recents.model.TaskKeyLruCache mActivityLabelCache -> mActivityLabelCache
    com.android.systemui.recents.model.TaskKeyLruCache$EvictionCallback mClearActivityInfoOnEviction -> mClearActivityInfoOnEviction
    com.android.systemui.recents.model.TaskKeyLruCache mContentDescriptionCache -> mContentDescriptionCache
    android.graphics.drawable.BitmapDrawable mDefaultIcon -> mDefaultIcon
    int mDefaultTaskBarBackgroundColor -> mDefaultTaskBarBackgroundColor
    int mDefaultTaskViewBackgroundColor -> mDefaultTaskViewBackgroundColor
    com.android.systemui.recents.model.HighResThumbnailLoader mHighResThumbnailLoader -> mHighResThumbnailLoader
    com.android.systemui.recents.model.TaskKeyLruCache mIconCache -> mIconCache
    com.android.systemui.recents.model.TaskResourceLoadQueue mLoadQueue -> mLoadQueue
    com.android.systemui.recents.model.BackgroundTaskLoader mLoader -> mLoader
    int mMaxIconCacheSize -> mMaxIconCacheSize
    int mMaxThumbnailCacheSize -> mMaxThumbnailCacheSize
    int mNumVisibleTasksLoaded -> mNumVisibleTasksLoaded
    com.android.systemui.recents.model.TaskKeyStrongCache mTempCache -> mTempCache
    com.android.systemui.recents.model.TaskKeyStrongCache mThumbnailCache -> mThumbnailCache
    void <init>(android.content.Context) -> <init>
    com.android.systemui.recents.model.RecentsTaskLoadPlan createLoadPlan(android.content.Context) -> createLoadPlan
    void preloadTasks(com.android.systemui.recents.model.RecentsTaskLoadPlan,int,boolean) -> preloadTasks
    void loadTasks(android.content.Context,com.android.systemui.recents.model.RecentsTaskLoadPlan,com.android.systemui.recents.model.RecentsTaskLoadPlan$Options) -> loadTasks
    int getIconCacheSize() -> getIconCacheSize
    int getThumbnailCacheSize() -> getThumbnailCacheSize
    android.content.pm.ActivityInfo getAndUpdateActivityInfo(com.android.systemui.recents.model.Task$TaskKey) -> getAndUpdateActivityInfo
    java.lang.String getAndUpdateActivityTitle(com.android.systemui.recents.model.Task$TaskKey,android.app.ActivityManager$TaskDescription) -> getAndUpdateActivityTitle
    java.lang.String getAndUpdateContentDescription(com.android.systemui.recents.model.Task$TaskKey,android.app.ActivityManager$TaskDescription,android.content.res.Resources) -> getAndUpdateContentDescription
    android.graphics.drawable.Drawable getAndUpdateActivityIcon(com.android.systemui.recents.model.Task$TaskKey,android.app.ActivityManager$TaskDescription,android.content.res.Resources,boolean) -> getAndUpdateActivityIcon
    com.android.systemui.recents.model.ThumbnailData getAndUpdateThumbnail(com.android.systemui.recents.model.Task$TaskKey,boolean,boolean) -> getAndUpdateThumbnail
    int getActivityPrimaryColor(android.app.ActivityManager$TaskDescription) -> getActivityPrimaryColor
    int getActivityBackgroundColor(android.app.ActivityManager$TaskDescription) -> getActivityBackgroundColor
    com.android.systemui.recents.model.HighResThumbnailLoader getHighResThumbnailLoader() -> getHighResThumbnailLoader
    void loadTaskData(com.android.systemui.recents.model.Task) -> loadTaskData
    void unloadTaskData(com.android.systemui.recents.model.Task) -> unloadTaskData
    void deleteTaskData(com.android.systemui.recents.model.Task,boolean) -> deleteTaskData
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    void onBusEvent(com.android.systemui.recents.events.activity.PackagesChangedEvent) -> onBusEvent
    void onTrimMemory(int) -> onTrimMemory
    void preloadRawTasks(com.android.systemui.recents.model.RecentsTaskLoadPlan,boolean) -> preloadRawTasks
    void startLoader(android.content.Context) -> startLoader
    void stopLoader() -> stopLoader
    void -com_android_systemui_recents_model_RecentsTaskLoader-mthref-0(com.android.systemui.recents.model.HighResThumbnailLoader,boolean) -> -com_android_systemui_recents_model_RecentsTaskLoader-mthref-0
    android.util.LruCache -get0(com.android.systemui.recents.model.RecentsTaskLoader) -> -get0
com.android.settingslib.animation.DisappearAnimationUtils -> com.android.settingslib.animation.DisappearAnimationUtils:
    com.android.settingslib.animation.AppearAnimationUtils$RowTranslationScaler ROW_TRANSLATION_SCALER -> ROW_TRANSLATION_SCALER
    void <clinit>() -> <clinit>
    void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator,com.android.settingslib.animation.AppearAnimationUtils$RowTranslationScaler) -> <init>
    void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator) -> <init>
    long calculateDelay(int,int) -> calculateDelay
com.android.systemui.volume.-$Lambda$ORWkWvklx2FcycYdCeM5VfNFDMc$2 -> com.android.systemui.volume.-$Lambda$ORWkWvklx2FcycYdCeM5VfNFDMc$2:
    int -$f0 -> -$f0
    int -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(int,int,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.media.MediaRouter$Callback -> android.support.v7.media.MediaRouter$Callback:
    void onProviderAdded(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$ProviderInfo) -> onProviderAdded
    void onRouteUnselected(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteSelected(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteVolumeChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
    void onRouteUnselected(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo,int) -> onRouteUnselected
    void onRouteAdded(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteRemoved(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onProviderRemoved(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$ProviderInfo) -> onProviderRemoved
    void onRoutePresentationDisplayChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
    void <init>() -> <init>
    void onRouteChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onProviderChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$ProviderInfo) -> onProviderChanged
android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView -> android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.content.Context) -> <init>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean isOutOfBounds(int,int) -> isOutOfBounds
    void setBackgroundResource(int) -> setBackgroundResource
com.android.systemui.statusbar.EmptyShadeView -> com.android.systemui.statusbar.EmptyShadeView:
    android.widget.TextView mEmptyText -> mEmptyText
    void setTextColor(int) -> setTextColor
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    com.android.systemui.statusbar.stack.ExpandableViewState createNewViewState(com.android.systemui.statusbar.stack.StackScrollState) -> createNewViewState
    android.view.View findContentView() -> findContentView
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onFinishInflate() -> onFinishInflate
    android.widget.TextView -get0(com.android.systemui.statusbar.EmptyShadeView) -> -get0
com.android.systemui.statusbar.policy.UserInfoController$OnUserInfoChangedListener -> com.android.systemui.statusbar.policy.UserInfoController$OnUserInfoChangedListener:
    void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> onUserInfoChanged
com.android.systemui.statusbar.StackScrollerDecorView$1 -> com.android.systemui.statusbar.StackScrollerDecorView$1:
    com.android.systemui.statusbar.StackScrollerDecorView this$0 -> this$0
    java.lang.Runnable val$onFinishedRunnable -> val$onFinishedRunnable
    void <init>(com.android.systemui.statusbar.StackScrollerDecorView,java.lang.Runnable) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.NotificationPanelView$5 -> com.android.systemui.statusbar.phone.NotificationPanelView$5:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> volumeType
    int currentVolume -> currentVolume
    int audioStream -> audioStream
    int controlType -> controlType
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int maxVolume -> maxVolume
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler -> mHandler
    java.lang.Object mCallbackObj -> mCallbackObj
    boolean mHasExtraCallback -> mHasExtraCallback
    void setHandler(android.os.Handler) -> setHandler
    void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    java.lang.Object -get0(android.support.v4.media.session.MediaControllerCompat$Callback) -> -get0
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionReady() -> onSessionReady
    void onShuffleModeChanged(int) -> onShuffleModeChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void binderDied() -> binderDied
    void onRepeatModeChanged(int) -> onRepeatModeChanged
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void <init>() -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onShuffleModeChanged(boolean) -> onShuffleModeChanged
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
com.android.systemui.volume.VolumeDialogImpl$H -> com.android.systemui.volume.VolumeDialogImpl$H:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.keyguard.R$styleable -> com.android.keyguard.R$styleable:
    int[] NumPadKey -> NumPadKey
    int[] CarrierText -> CarrierText
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int[] ActionMenuItemView -> ActionMenuItemView
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int[] ActivityChooserView -> ActivityChooserView
    int[] AlertDialog -> AlertDialog
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int[] AppCompatTextView -> AppCompatTextView
    int[] AppCompatTheme -> AppCompatTheme
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] BackgroundStyle -> BackgroundStyle
    int[] BatteryMeterView -> BatteryMeterView
    int[] ButtonBarLayout -> ButtonBarLayout
    int[] CheckBoxPreference -> CheckBoxPreference
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int[] CompoundButton -> CompoundButton
    int[] DateView -> DateView
    int[] DeadZone -> DeadZone
    int[] DialogPreference -> DialogPreference
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyButtonView -> KeyButtonView
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int[] ListPopupWindow -> ListPopupWindow
    int[] ListPreference -> ListPreference
    int[] MediaRouteButton -> MediaRouteButton
    int[] MenuGroup -> MenuGroup
    int[] MenuItem -> MenuItem
    int[] MenuView -> MenuView
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] PagingIndicator -> PagingIndicator
    int[] PasswordTextView -> PasswordTextView
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int[] PreferenceGroup -> PreferenceGroup
    int[] PreferenceImageView -> PreferenceImageView
    int[] PreferenceTheme -> PreferenceTheme
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int[] RecyclerView -> RecyclerView
    int[] RestrictedPreference -> RestrictedPreference
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int[] SearchView -> SearchView
    int[] SeekBarPreference -> SeekBarPreference
    int[] Spinner -> Spinner
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int[] TextAppearance -> TextAppearance
    int[] ToggleSliderView -> ToggleSliderView
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] UserDetailItemView -> UserDetailItemView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int[] ViewStubCompat -> ViewStubCompat
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int[] lbBaseGridView -> lbBaseGridView
    int[] lbDatePicker -> lbDatePicker
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int[] lbImageCardView -> lbImageCardView
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int[] lbSearchOrbView -> lbSearchOrbView
    int[] lbSlide -> lbSlide
    int[] lbTimePicker -> lbTimePicker
    int[] lbVerticalGridView -> lbVerticalGridView
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.qs.QSFooterImpl$1 -> com.android.systemui.qs.QSFooterImpl$1:
    com.android.systemui.qs.QSFooterImpl this$0 -> this$0
    void <init>(com.android.systemui.qs.QSFooterImpl) -> <init>
    void onAnimationAtStart() -> onAnimationAtStart
    void onAnimationStarted() -> onAnimationStarted
com.android.systemui.volume.VolumeDialogControllerImpl$VC -> com.android.systemui.volume.VolumeDialogControllerImpl$VC:
    java.lang.String TAG -> TAG
    com.android.systemui.volume.VolumeDialogControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl) -> <init>
    void dismiss() -> dismiss
    void displaySafeVolumeWarning(int) -> displaySafeVolumeWarning
    void masterMuteChanged(int) -> masterMuteChanged
    void setA11yMode(int) -> setA11yMode
    void setLayoutDirection(int) -> setLayoutDirection
    void volumeChanged(int,int) -> volumeChanged
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl,com.android.systemui.volume.VolumeDialogControllerImpl$VC) -> <init>
com.android.systemui.plugins.PluginPrefs -> com.android.systemui.plugins.PluginPrefs:
    java.util.Set mPluginActions -> mPluginActions
    android.content.SharedPreferences mSharedPrefs -> mSharedPrefs
    void <init>(android.content.Context) -> <init>
    java.util.Set getPluginList() -> getPluginList
    void addAction(java.lang.String) -> addAction
    boolean hasPlugins(android.content.Context) -> hasPlugins
    void setHasPlugins(android.content.Context) -> setHasPlugins
android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener -> android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener:
    void onPrepareListView(android.widget.ListView) -> onPrepareListView
com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1 -> com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1:
    com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2 this$2 -> this$2
    android.app.PendingIntent val$intent -> val$intent
    java.lang.String val$notificationKey -> val$notificationKey
    android.service.notification.StatusBarNotification val$parentToCancelFinal -> val$parentToCancelFinal
    void <init>(com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2,android.app.PendingIntent,java.lang.String,android.service.notification.StatusBarNotification) -> <init>
    void run() -> run
com.android.systemui.qs.customize.TileQueryHelper$TileInfo -> com.android.systemui.qs.customize.TileQueryHelper$TileInfo:
    boolean isSystem -> isSystem
    java.lang.String spec -> spec
    com.android.systemui.plugins.qs.QSTile$State state -> state
    java.lang.CharSequence appLabel -> appLabel
    void <init>() -> <init>
com.android.systemui.statusbar.policy.HeadsUpManager$1 -> com.android.systemui.statusbar.policy.HeadsUpManager$1:
    java.util.Stack mPoolObjects -> mPoolObjects
    com.android.systemui.statusbar.policy.HeadsUpManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.HeadsUpManager) -> <init>
    com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry acquire() -> acquire
    boolean release(com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry) -> release
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
com.android.systemui.statusbar.phone.SignalDrawable -> com.android.systemui.statusbar.phone.SignalDrawable:
    float[] FIT -> FIT
    float INV_TAN -> INV_TAN
    float[][] X_PATH -> X_PATH
    boolean mAnimating -> mAnimating
    float mAppliedCornerInset -> mAppliedCornerInset
    java.lang.Runnable mChangeDot -> mChangeDot
    int mCurrentDot -> mCurrentDot
    android.graphics.Path mCutPath -> mCutPath
    int mDarkModeBackgroundColor -> mDarkModeBackgroundColor
    int mDarkModeFillColor -> mDarkModeFillColor
    android.graphics.Paint mForegroundPaint -> mForegroundPaint
    android.graphics.Path mForegroundPath -> mForegroundPath
    android.graphics.Path mFullPath -> mFullPath
    android.os.Handler mHandler -> mHandler
    int mIntrinsicSize -> mIntrinsicSize
    int mLevel -> mLevel
    int mLightModeBackgroundColor -> mLightModeBackgroundColor
    int mLightModeFillColor -> mLightModeFillColor
    float mNumLevels -> mNumLevels
    float mOldDarkIntensity -> mOldDarkIntensity
    android.graphics.Paint mPaint -> mPaint
    com.android.systemui.statusbar.phone.SignalDrawable$SlashArtist mSlash -> mSlash
    int mState -> mState
    android.graphics.PointF mVirtualLeft -> mVirtualLeft
    android.graphics.PointF mVirtualTop -> mVirtualTop
    boolean mVisible -> mVisible
    android.graphics.Path mXPath -> mXPath
    void <init>(android.content.Context) -> <init>
    float calcFit(float) -> calcFit
    void draw(android.graphics.Canvas) -> draw
    void drawDot(android.graphics.Path,android.graphics.Path,float,float,float,int) -> drawDot
    int getAirplaneModeState(int) -> getAirplaneModeState
    int getAlpha() -> getAlpha
    int getBackgroundColor(float) -> getBackgroundColor
    int getCarrierChangeState(int) -> getCarrierChangeState
    int getColorForDarkIntensity(float,int,int) -> getColorForDarkIntensity
    int getEmptyState(int) -> getEmptyState
    int getFillColor(float) -> getFillColor
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getLevel(int) -> getLevel
    int getNumLevels(int) -> getNumLevels
    int getOpacity() -> getOpacity
    int getState(int) -> getState
    int getState(int,int,boolean) -> getState
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColors(int,int) -> setColors
    void setDarkIntensity(float) -> setDarkIntensity
    void setIntrinsicSize(int) -> setIntrinsicSize
    void setNumLevels(int) -> setNumLevels
    void setSignalState(int) -> setSignalState
    boolean setVisible(boolean,boolean) -> setVisible
    void updateAnimation() -> updateAnimation
    void <clinit>() -> <clinit>
    java.lang.Runnable -get0(com.android.systemui.statusbar.phone.SignalDrawable) -> -get0
    int -get1(com.android.systemui.statusbar.phone.SignalDrawable) -> -get1
    android.os.Handler -get2(com.android.systemui.statusbar.phone.SignalDrawable) -> -get2
    int -set0(com.android.systemui.statusbar.phone.SignalDrawable,int) -> -set0
android.support.v7.util.DiffUtil$DiffResult -> android.support.v7.util.DiffUtil$DiffResult:
    int[] mNewItemStatuses -> mNewItemStatuses
    android.support.v7.util.DiffUtil$Callback mCallback -> mCallback
    int mNewListSize -> mNewListSize
    int mOldListSize -> mOldListSize
    int[] mOldItemStatuses -> mOldItemStatuses
    boolean mDetectMoves -> mDetectMoves
    java.util.List mSnakes -> mSnakes
    void findAddition(int,int,int) -> findAddition
    void dispatchUpdatesTo(android.support.v7.util.ListUpdateCallback) -> dispatchUpdatesTo
    void <init>(android.support.v7.util.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    boolean findMatchingItem(int,int,int,boolean) -> findMatchingItem
    void findMatchingItems() -> findMatchingItems
    void dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int) -> dispatchRemovals
    java.util.List getSnakes() -> getSnakes
    android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> removePostponedUpdate
    void dispatchUpdatesTo(android.support.v7.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    void findRemoval(int,int,int) -> findRemoval
    void addRootSnake() -> addRootSnake
    void dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int) -> dispatchAdditions
com.android.systemui.doze.-$Lambda$5D-qktfRQdiZuJWCYYe1CwTdSjk -> com.android.systemui.doze.-$Lambda$5D-qktfRQdiZuJWCYYe1CwTdSjk:
    com.android.systemui.doze.-$Lambda$5D-qktfRQdiZuJWCYYe1CwTdSjk $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0() -> $m$0
    void run() -> run
android.support.v17.leanback.widget.GridLayoutManager -> android.support.v17.leanback.widget.GridLayoutManager:
    int mGravity -> mGravity
    boolean mReverseFlowSecondary -> mReverseFlowSecondary
    int[] sTwoInts -> sTwoInts
    int mMaxPendingMoves -> mMaxPendingMoves
    boolean mFocusOutSideStart -> mFocusOutSideStart
    boolean mIsSlidingChildViews -> mIsSlidingChildViews
    int mRowSizeSecondaryRequested -> mRowSizeSecondaryRequested
    boolean mForceFullLayout -> mForceFullLayout
    boolean mInLayout -> mInLayout
    android.support.v17.leanback.widget.Grid$Provider mGridProvider -> mGridProvider
    int mChildVisibility -> mChildVisibility
    int mNumRowsRequested -> mNumRowsRequested
    int mMaxSizeSecondary -> mMaxSizeSecondary
    int[] mMeasuredDimension -> mMeasuredDimension
    int mExtraLayoutSpaceInPreLayout -> mExtraLayoutSpaceInPreLayout
    int mVerticalSpacing -> mVerticalSpacing
    boolean mReverseFlowPrimary -> mReverseFlowPrimary
    boolean mInLayoutSearchFocus -> mInLayoutSearchFocus
    int mSizePrimary -> mSizePrimary
    boolean mRowSecondarySizeRefresh -> mRowSecondarySizeRefresh
    int mSubFocusPosition -> mSubFocusPosition
    android.support.v17.leanback.widget.BaseGridView mBaseGridView -> mBaseGridView
    boolean mLayoutEnabled -> mLayoutEnabled
    boolean mInFastRelayout -> mInFastRelayout
    int mFixedRowSizeSecondary -> mFixedRowSizeSecondary
    int mOrientation -> mOrientation
    int mExtraLayoutSpace -> mExtraLayoutSpace
    android.util.SparseIntArray mPositionToRowInPostLayout -> mPositionToRowInPostLayout
    boolean mPruneChild -> mPruneChild
    android.support.v7.widget.OrientationHelper mOrientationHelper -> mOrientationHelper
    int[] mRowSizeSecondary -> mRowSizeSecondary
    android.support.v17.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller -> mPendingMoveSmoothScroller
    android.support.v17.leanback.widget.OnChildLaidOutListener mChildLaidOutListener -> mChildLaidOutListener
    android.support.v17.leanback.widget.ViewsStateBundle mChildrenStates -> mChildrenStates
    java.lang.Runnable mRequestLayoutRunnable -> mRequestLayoutRunnable
    int mPrimaryScrollExtra -> mPrimaryScrollExtra
    int mHorizontalSpacing -> mHorizontalSpacing
    int mFocusScrollStrategy -> mFocusScrollStrategy
    android.support.v17.leanback.widget.Grid mGrid -> mGrid
    int mFocusPositionOffset -> mFocusPositionOffset
    int mNumRows -> mNumRows
    android.support.v17.leanback.widget.OnChildSelectedListener mChildSelectedListener -> mChildSelectedListener
    android.support.v7.widget.RecyclerView$Recycler mRecycler -> mRecycler
    int mPositionDeltaInPreLayout -> mPositionDeltaInPreLayout
    android.support.v17.leanback.widget.ItemAlignment mItemAlignment -> mItemAlignment
    boolean mFocusSearchDisabled -> mFocusSearchDisabled
    int mSpacingSecondary -> mSpacingSecondary
    android.graphics.Rect sTempRect -> sTempRect
    int mScrollOffsetSecondary -> mScrollOffsetSecondary
    android.support.v7.widget.RecyclerView$State mState -> mState
    boolean mLayoutEatenInSliding -> mLayoutEatenInSliding
    java.util.ArrayList mChildViewHolderSelectedListeners -> mChildViewHolderSelectedListeners
    int[] mDisappearingPositions -> mDisappearingPositions
    boolean mInSelection -> mInSelection
    int mSpacingPrimary -> mSpacingPrimary
    android.support.v17.leanback.widget.WindowAlignment mWindowAlignment -> mWindowAlignment
    int mFocusPosition -> mFocusPosition
    boolean mFocusOutFront -> mFocusOutFront
    boolean mScrollEnabled -> mScrollEnabled
    boolean mFocusOutEnd -> mFocusOutEnd
    android.support.v17.leanback.widget.GridLayoutManager$OnLayoutCompleteListener mLayoutCompleteListener -> mLayoutCompleteListener
    boolean mInScroll -> mInScroll
    android.support.v17.leanback.widget.FacetProviderAdapter mFacetProviderAdapter -> mFacetProviderAdapter
    boolean mFocusOutSideEnd -> mFocusOutSideEnd
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    void fillScrapViewsInPostLayout() -> fillScrapViewsInPostLayout
    void setVerticalSpacing(int) -> setVerticalSpacing
    int getSelection() -> getSelection
    void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    int processSelectionMoves(boolean,int) -> processSelectionMoves
    void appendVisibleItems() -> appendVisibleItems
    boolean getAlignedPosition(android.view.View,android.view.View,int[]) -> getAlignedPosition
    int getSubPositionByView(android.view.View,android.view.View) -> getSubPositionByView
    boolean isItemFullyVisible(int) -> isItemFullyVisible
    boolean processRowSizeSecondary(boolean) -> processRowSizeSecondary
    void setFocusOutSideAllowed(boolean,boolean) -> setFocusOutSideAllowed
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    int getViewCenter(android.view.View) -> getViewCenter
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    boolean gridOnRequestFocusInDescendantsUnaligned(android.support.v7.widget.RecyclerView,int,android.graphics.Rect) -> gridOnRequestFocusInDescendantsUnaligned
    void fastRelayout() -> fastRelayout
    int getDecoratedRight(android.view.View) -> getDecoratedRight
    int getViewPrimarySize(android.view.View) -> getViewPrimarySize
    int getDecoratedMeasuredHeightWithMargin(android.view.View) -> getDecoratedMeasuredHeightWithMargin
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    int getViewMin(android.view.View) -> getViewMin
    int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    void updateChildAlignments(android.view.View) -> updateChildAlignments
    java.lang.Object getFacet(android.support.v7.widget.RecyclerView$ViewHolder,java.lang.Class) -> getFacet
    boolean canScrollTo(android.view.View) -> canScrollTo
    void setWindowAlignment(int) -> setWindowAlignment
    boolean hasDoneFirstLayout() -> hasDoneFirstLayout
    void setSelection(int,int) -> setSelection
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    boolean gridOnRequestFocusInDescendants(android.support.v7.widget.RecyclerView,int,android.graphics.Rect) -> gridOnRequestFocusInDescendants
    void updatePositionDeltaInPreLayout() -> updatePositionDeltaInPreLayout
    void updateScrollLimits() -> updateScrollLimits
    void <init>(android.support.v17.leanback.widget.BaseGridView) -> <init>
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    int getViewCenterSecondary(android.view.View) -> getViewCenterSecondary
    void setFocusOutAllowed(boolean,boolean) -> setFocusOutAllowed
    int getViewMax(android.view.View) -> getViewMax
    void setOnChildViewHolderSelectedListener(android.support.v17.leanback.widget.OnChildViewHolderSelectedListener) -> setOnChildViewHolderSelectedListener
    int startPositionSmoothScroller(int) -> startPositionSmoothScroller
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    int scrollDirectionPrimary(int) -> scrollDirectionPrimary
    java.lang.String getTag() -> getTag
    void setOrientation(int) -> setOrientation
    void measureChild(android.view.View) -> measureChild
    void scrollToView(android.view.View,android.view.View,boolean) -> scrollToView
    void prependVisibleItems() -> prependVisibleItems
    void forceRequestLayout() -> forceRequestLayout
    void offsetChildrenPrimary(int) -> offsetChildrenPrimary
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int getAdapterPositionByIndex(int) -> getAdapterPositionByIndex
    boolean hasOnChildViewHolderSelectedListener() -> hasOnChildViewHolderSelectedListener
    int getSecondaryScrollDistance(android.view.View) -> getSecondaryScrollDistance
    void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void scrollToSelection(int,int,boolean,int) -> scrollToSelection
    void setHorizontalSpacing(int) -> setHorizontalSpacing
    int getAdjustedPrimaryAlignedScrollDistance(int,android.view.View,android.view.View) -> getAdjustedPrimaryAlignedScrollDistance
    void setGravity(int) -> setGravity
    void focusToViewInLayout(boolean,boolean,int,int) -> focusToViewInLayout
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    boolean gridOnRequestFocusInDescendantsAligned(android.support.v7.widget.RecyclerView,int,android.graphics.Rect) -> gridOnRequestFocusInDescendantsAligned
    void scrollToView(android.view.View,boolean,int,int) -> scrollToView
    void setRowHeight(int) -> setRowHeight
    void -wrap0(android.support.v17.leanback.widget.GridLayoutManager) -> -wrap0
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter) -> onAdapterChanged
    int getSlideOutDistance() -> getSlideOutDistance
    void measureScrapChild(int,int,int,int[]) -> measureScrapChild
    int getViewCenterX(android.view.View) -> getViewCenterX
    void leaveContext() -> leaveContext
    void setSelectionSmooth(int) -> setSelectionSmooth
    int findImmediateChildIndex(android.view.View) -> findImmediateChildIndex
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void saveContext(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> saveContext
    android.view.View getViewForPosition(int) -> getViewForPosition
    void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> onMeasure
    int getOpticalLeft(android.view.View) -> getOpticalLeft
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    int getViewCenterY(android.view.View) -> getViewCenterY
    int getVerticalSpacing() -> getVerticalSpacing
    void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScrollVertically() -> canScrollVertically
    int getChildDrawingOrder(android.support.v7.widget.RecyclerView,int,int) -> getChildDrawingOrder
    boolean hasCreatedLastItem() -> hasCreatedLastItem
    void setSelection(int,int,boolean,int) -> setSelection
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    boolean getScrollPosition(android.view.View,android.view.View,int[]) -> getScrollPosition
    int getRowStartSecondary(int) -> getRowStartSecondary
    boolean prependOneColumnVisibleItems() -> prependOneColumnVisibleItems
    void updateRowSecondarySizeRefresh() -> updateRowSecondarySizeRefresh
    int getOpticalRight(android.view.View) -> getOpticalRight
    void scrollToPosition(int) -> scrollToPosition
    void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    void dispatchChildSelected() -> dispatchChildSelected
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void scrollGrid(int,int,boolean) -> scrollGrid
    int getMovement(int) -> getMovement
    boolean canScrollHorizontally() -> canScrollHorizontally
    void fireOnChildViewHolderSelectedAndPositioned(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,int) -> fireOnChildViewHolderSelectedAndPositioned
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> onItemsUpdated
    int getDecoratedTop(android.view.View) -> getDecoratedTop
    void setNumRows(int) -> setNumRows
    void processPendingMovement(boolean) -> processPendingMovement
    void updateScrollController() -> updateScrollController
    int getSizeSecondary() -> getSizeSecondary
    void scrollToView(android.view.View,android.view.View,boolean,int,int) -> scrollToView
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    void updatePositionToRowMapInPostLayout() -> updatePositionToRowMapInPostLayout
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    void layoutChild(int,android.view.View,int,int,int) -> layoutChild
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    int getAdapterPositionByView(android.view.View) -> getAdapterPositionByView
    void setSelectionWithSub(int,int,int) -> setSelectionWithSub
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean hasCreatedFirstItem() -> hasCreatedFirstItem
    void offsetChildrenSecondary(int) -> offsetChildrenSecondary
    boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    void updateSecondaryScrollLimits() -> updateSecondaryScrollLimits
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    void removeInvisibleViewsAtFront() -> removeInvisibleViewsAtFront
    void fireOnChildViewHolderSelected(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,int) -> fireOnChildViewHolderSelected
    void initScrollController() -> initScrollController
    void removeInvisibleViewsAtEnd() -> removeInvisibleViewsAtEnd
    boolean appendOneColumnVisibleItems() -> appendOneColumnVisibleItems
    void discardLayoutInfo() -> discardLayoutInfo
    void dispatchChildSelectedAndPositioned() -> dispatchChildSelectedAndPositioned
    int getRowSizeSecondary(int) -> getRowSizeSecondary
    boolean layoutInit() -> layoutInit
    boolean getNoneAlignedPosition(android.view.View,int[]) -> getNoneAlignedPosition
    void onChildRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onChildRecycled
    int getPrimaryAlignedScrollDistance(android.view.View) -> getPrimaryAlignedScrollDistance
    int getDecoratedMeasuredWidthWithMargin(android.view.View) -> getDecoratedMeasuredWidthWithMargin
    void <clinit>() -> <clinit>
    int scrollDirectionSecondary(int) -> scrollDirectionSecondary
    void scrollToView(android.view.View,boolean) -> scrollToView
com.android.systemui.screenshot.DeleteImageInBackgroundTask -> com.android.systemui.screenshot.DeleteImageInBackgroundTask:
    android.content.Context mContext -> mContext
    void <init>(android.content.Context) -> <init>
    java.lang.Void doInBackground(android.net.Uri[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.android.systemui.qs.tiles.CellularTile$CallbackInfo -> com.android.systemui.qs.tiles.CellularTile$CallbackInfo:
    boolean activityIn -> activityIn
    boolean activityOut -> activityOut
    boolean airplaneModeEnabled -> airplaneModeEnabled
    java.lang.String dataContentDescription -> dataContentDescription
    int dataTypeIconId -> dataTypeIconId
    boolean enabled -> enabled
    java.lang.String enabledDesc -> enabledDesc
    boolean isDataTypeIconWide -> isDataTypeIconWide
    int mobileSignalIconId -> mobileSignalIconId
    boolean noSim -> noSim
    boolean roaming -> roaming
    java.lang.String signalContentDescription -> signalContentDescription
    boolean wifiEnabled -> wifiEnabled
    void <init>() -> <init>
    void <init>(com.android.systemui.qs.tiles.CellularTile$CallbackInfo) -> <init>
com.android.systemui.qs.tiles.UserDetailView$Adapter -> com.android.systemui.qs.tiles.UserDetailView$Adapter:
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.UserSwitcherController mController -> mController
    void <init>(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    com.android.systemui.qs.tiles.UserDetailItemView createUserDetailItemView(android.view.View,android.view.ViewGroup,com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> createUserDetailItemView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.phone.PanelView$8 -> com.android.systemui.statusbar.phone.PanelView$8:
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    java.lang.Runnable val$onAnimationFinished -> val$onAnimationFinished
    void <init>(com.android.systemui.statusbar.phone.PanelView,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.-$Lambda$s3onfRoxdAGXRhy8h9aH8AYjDzM -> com.android.systemui.recents.-$Lambda$s3onfRoxdAGXRhy8h9aH8AYjDzM:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(int,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.usb.UsbDisconnectedReceiver -> com.android.systemui.usb.UsbDisconnectedReceiver:
    android.hardware.usb.UsbAccessory mAccessory -> mAccessory
    android.app.Activity mActivity -> mActivity
    android.hardware.usb.UsbDevice mDevice -> mDevice
    void <init>(android.app.Activity,android.hardware.usb.UsbAccessory) -> <init>
    void <init>(android.app.Activity,android.hardware.usb.UsbDevice) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.volume.VolumeDialogControllerImpl$C$9 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$9:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    int val$flags -> val$flags
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry,int) -> <init>
    void run() -> run
com.android.systemui.statusbar.StatusBarIconView$3 -> com.android.systemui.statusbar.StatusBarIconView$3:
    com.android.systemui.statusbar.StatusBarIconView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.StatusBarIconView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.Toolbar$2:
    android.support.v7.widget.Toolbar this$0 -> this$0
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void run() -> run
android.support.v7.app.AppCompatDelegateImplBase -> android.support.v7.app.AppCompatDelegateImplBase:
    android.content.Context mContext -> mContext
    android.view.Window$Callback mAppCompatWindowCallback -> mAppCompatWindowCallback
    boolean mIsFloating -> mIsFloating
    boolean SHOULD_INSTALL_EXCEPTION_HANDLER -> SHOULD_INSTALL_EXCEPTION_HANDLER
    boolean mOverlayActionMode -> mOverlayActionMode
    android.view.Window$Callback mOriginalWindowCallback -> mOriginalWindowCallback
    java.lang.CharSequence mTitle -> mTitle
    boolean mWindowNoTitle -> mWindowNoTitle
    boolean mIsDestroyed -> mIsDestroyed
    boolean mIsStarted -> mIsStarted
    boolean sInstalledExceptionHandler -> sInstalledExceptionHandler
    boolean mHasActionBar -> mHasActionBar
    android.support.v7.app.AppCompatCallback mAppCompatCallback -> mAppCompatCallback
    android.support.v7.app.ActionBar mActionBar -> mActionBar
    int[] sWindowBackgroundStyleable -> sWindowBackgroundStyleable
    boolean mOverlayActionBar -> mOverlayActionBar
    android.view.Window mWindow -> mWindow
    void onStop() -> onStop
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    java.lang.CharSequence getTitle() -> getTitle
    android.support.v7.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    boolean isDestroyed() -> isDestroyed
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    android.view.Window$Callback getWindowCallback() -> getWindowCallback
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void initWindowDecorActionBar() -> initWindowDecorActionBar
    void setTitle(java.lang.CharSequence) -> setTitle
    void <clinit>() -> <clinit>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean applyDayNight() -> applyDayNight
    void onTitleChanged(java.lang.CharSequence) -> onTitleChanged
android.support.v7.widget.FastScroller -> android.support.v7.widget.FastScroller:
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> mHorizontalThumbDrawable
    java.lang.Runnable mHideRunnable -> mHideRunnable
    int mHorizontalThumbHeight -> mHorizontalThumbHeight
    boolean mNeedHorizontalScrollbar -> mNeedHorizontalScrollbar
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    int mMargin -> mMargin
    android.animation.ValueAnimator mShowHideAnimator -> mShowHideAnimator
    int mVerticalTrackWidth -> mVerticalTrackWidth
    int mDragState -> mDragState
    int mHorizontalThumbWidth -> mHorizontalThumbWidth
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> mHorizontalTrackDrawable
    int mVerticalThumbWidth -> mVerticalThumbWidth
    int[] PRESSED_STATE_SET -> PRESSED_STATE_SET
    float mHorizontalDragX -> mHorizontalDragX
    android.support.v7.widget.RecyclerView$OnScrollListener mOnScrollListener -> mOnScrollListener
    int mVerticalThumbCenterY -> mVerticalThumbCenterY
    int mScrollbarMinimumRange -> mScrollbarMinimumRange
    int mHorizontalTrackHeight -> mHorizontalTrackHeight
    int mRecyclerViewWidth -> mRecyclerViewWidth
    float mVerticalDragY -> mVerticalDragY
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> mVerticalThumbDrawable
    boolean mNeedVerticalScrollbar -> mNeedVerticalScrollbar
    int mVerticalThumbHeight -> mVerticalThumbHeight
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> mVerticalTrackDrawable
    int mState -> mState
    int mHorizontalThumbCenterX -> mHorizontalThumbCenterX
    int[] mHorizontalRange -> mHorizontalRange
    int mAnimationState -> mAnimationState
    int[] EMPTY_STATE_SET -> EMPTY_STATE_SET
    int[] mVerticalRange -> mVerticalRange
    int mRecyclerViewHeight -> mRecyclerViewHeight
    void attachToRecyclerView(android.support.v7.widget.RecyclerView) -> attachToRecyclerView
    void updateScrollPosition(int,int) -> updateScrollPosition
    int[] getHorizontalRange() -> getHorizontalRange
    void destroyCallbacks() -> destroyCallbacks
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    android.graphics.drawable.Drawable getVerticalTrackDrawable() -> getVerticalTrackDrawable
    void horizontalScrollTo(float) -> horizontalScrollTo
    boolean isVisible() -> isVisible
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void cancelHide() -> cancelHide
    android.graphics.drawable.StateListDrawable -get1(android.support.v7.widget.FastScroller) -> -get1
    android.graphics.drawable.Drawable -get2(android.support.v7.widget.FastScroller) -> -get2
    boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    android.graphics.drawable.Drawable getVerticalThumbDrawable() -> getVerticalThumbDrawable
    void hide(int) -> hide
    void requestRedraw() -> requestRedraw
    boolean isLayoutRTL() -> isLayoutRTL
    void setState(int) -> setState
    int[] getVerticalRange() -> getVerticalRange
    void verticalScrollTo(float) -> verticalScrollTo
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    int -set0(android.support.v7.widget.FastScroller,int) -> -set0
    void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    void show() -> show
    void -wrap0(android.support.v7.widget.FastScroller) -> -wrap0
    android.animation.ValueAnimator -get0(android.support.v7.widget.FastScroller) -> -get0
    void setupCallbacks() -> setupCallbacks
    int scrollTo(float,float,int[],int,int,int) -> scrollTo
    android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> getHorizontalTrackDrawable
    void <clinit>() -> <clinit>
    void -wrap1(android.support.v7.widget.FastScroller,int) -> -wrap1
    void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    boolean isHidden() -> isHidden
    android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> getHorizontalThumbDrawable
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    void resetHideDelay(int) -> resetHideDelay
com.android.systemui.recents.model.-$Lambda$SxdQNV72Pyg-wO_B44UyrYGnAR8 -> com.android.systemui.recents.model.-$Lambda$SxdQNV72Pyg-wO_B44UyrYGnAR8:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
android.support.v17.leanback.widget.GuidanceStylingRelativeLayout -> android.support.v17.leanback.widget.GuidanceStylingRelativeLayout:
    float mTitleKeylinePercent -> mTitleKeylinePercent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    float getKeyLinePercent(android.content.Context) -> getKeyLinePercent
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
android.support.graphics.drawable.AnimatedVectorDrawableCompat -> android.support.graphics.drawable.AnimatedVectorDrawableCompat:
    android.animation.Animator$AnimatorListener mAnimatorListener -> mAnimatorListener
    android.content.Context mContext -> mContext
    android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> mAnimatedVectorState
    android.animation.ArgbEvaluator mArgbEvaluator -> mArgbEvaluator
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    java.util.ArrayList mAnimationCallbacks -> mAnimationCallbacks
    void setAlpha(int) -> setAlpha
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean canApplyTheme() -> canApplyTheme
    void clearColorFilter() -> clearColorFilter
    int getMinimumHeight() -> getMinimumHeight
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean isAutoMirrored() -> isAutoMirrored
    boolean setVisible(boolean,boolean) -> setVisible
    void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    int getAlpha() -> getAlpha
    void setChangingConfigurations(int) -> setChangingConfigurations
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    boolean isStateful() -> isStateful
    int getOpacity() -> getOpacity
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    boolean setState(int[]) -> setState
    boolean isRunning() -> isRunning
    void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    void stop() -> stop
    int getIntrinsicWidth() -> getIntrinsicWidth
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setAutoMirrored(boolean) -> setAutoMirrored
    void setTint(int) -> setTint
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    android.graphics.drawable.Drawable mutate() -> mutate
    boolean onStateChange(int[]) -> onStateChange
    void start() -> start
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setFilterBitmap(boolean) -> setFilterBitmap
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    int[] getState() -> getState
    int getChangingConfigurations() -> getChangingConfigurations
    void setTintList(android.content.res.ColorStateList) -> setTintList
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void <init>(android.content.Context) -> <init>
    int getMinimumWidth() -> getMinimumWidth
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void setHotspot(float,float) -> setHotspot
    void <init>() -> <init>
    boolean onLevelChange(int) -> onLevelChange
    boolean getPadding(android.graphics.Rect) -> getPadding
android.support.v7.widget.DefaultItemAnimator$MoveInfo -> android.support.v7.widget.DefaultItemAnimator$MoveInfo:
    int fromY -> fromY
    int fromX -> fromX
    int toY -> toY
    android.support.v7.widget.RecyclerView$ViewHolder holder -> holder
    int toX -> toX
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
com.android.systemui.statusbar.ExpandableNotificationRow$ExpansionLogger -> com.android.systemui.statusbar.ExpandableNotificationRow$ExpansionLogger:
    void logNotificationExpansion(java.lang.String,boolean,boolean) -> logNotificationExpansion
android.support.v7.widget.ActionBarContainer -> android.support.v7.widget.ActionBarContainer:
    boolean mIsStacked -> mIsStacked
    android.view.View mActionBarView -> mActionBarView
    android.view.View mTabContainer -> mTabContainer
    android.graphics.drawable.Drawable mStackedBackground -> mStackedBackground
    android.view.View mContextView -> mContextView
    int mHeight -> mHeight
    boolean mIsSplit -> mIsSplit
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mIsTransitioning -> mIsTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void onMeasure(int,int) -> onMeasure
    void onFinishInflate() -> onFinishInflate
    void setVisibility(int) -> setVisibility
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    android.view.View getTabContainer() -> getTabContainer
    void <init>(android.content.Context) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTabContainer(android.support.v7.widget.ScrollingTabContainerView) -> setTabContainer
    void setTransitioning(boolean) -> setTransitioning
    boolean isCollapsed(android.view.View) -> isCollapsed
com.android.systemui.statusbar.phone.PhoneStatusBarPolicy -> com.android.systemui.statusbar.phone.PhoneStatusBarPolicy:
    boolean DEBUG -> DEBUG
    android.app.AlarmManager mAlarmManager -> mAlarmManager
    com.android.systemui.statusbar.policy.BluetoothController mBluetooth -> mBluetooth
    com.android.systemui.statusbar.policy.CastController mCast -> mCast
    com.android.systemui.statusbar.policy.CastController$Callback mCastCallback -> mCastCallback
    android.content.Context mContext -> mContext
    android.util.ArraySet mCurrentNotifs -> mCurrentNotifs
    boolean mCurrentUserSetup -> mCurrentUserSetup
    com.android.systemui.statusbar.policy.DataSaverController mDataSaver -> mDataSaver
    boolean mDockedStackExists -> mDockedStackExists
    android.os.Handler mHandler -> mHandler
    com.android.systemui.statusbar.policy.HotspotController mHotspot -> mHotspot
    com.android.systemui.statusbar.policy.HotspotController$Callback mHotspotCallback -> mHotspotCallback
    com.android.systemui.statusbar.phone.StatusBarIconController mIconController -> mIconController
    android.content.BroadcastReceiver mIntentReceiver -> mIntentReceiver
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguardMonitor -> mKeyguardMonitor
    com.android.systemui.statusbar.policy.LocationController mLocationController -> mLocationController
    boolean mManagedProfileIconVisible -> mManagedProfileIconVisible
    boolean mManagedProfileInQuietMode -> mManagedProfileInQuietMode
    com.android.systemui.statusbar.policy.NextAlarmController mNextAlarm -> mNextAlarm
    com.android.systemui.statusbar.policy.NextAlarmController$NextAlarmChangeCallback mNextAlarmCallback -> mNextAlarmCallback
    com.android.systemui.statusbar.policy.DeviceProvisionedController mProvisionedController -> mProvisionedController
    java.lang.Runnable mRemoveCastIconRunnable -> mRemoveCastIconRunnable
    com.android.systemui.statusbar.policy.RotationLockController mRotationLockController -> mRotationLockController
    com.android.internal.telephony.IccCardConstants$State mSimState -> mSimState
    java.lang.String mSlotAlarmClock -> mSlotAlarmClock
    java.lang.String mSlotBluetooth -> mSlotBluetooth
    java.lang.String mSlotCast -> mSlotCast
    java.lang.String mSlotDataSaver -> mSlotDataSaver
    java.lang.String mSlotHeadset -> mSlotHeadset
    java.lang.String mSlotHotspot -> mSlotHotspot
    java.lang.String mSlotLocation -> mSlotLocation
    java.lang.String mSlotManagedProfile -> mSlotManagedProfile
    java.lang.String mSlotRotate -> mSlotRotate
    java.lang.String mSlotTty -> mSlotTty
    java.lang.String mSlotVolume -> mSlotVolume
    java.lang.String mSlotZen -> mSlotZen
    com.android.systemui.recents.misc.SystemServicesProxy$TaskStackListener mTaskListener -> mTaskListener
    com.android.systemui.UiOffloadThread mUiOffloadThread -> mUiOffloadThread
    com.android.systemui.statusbar.policy.UserInfoController mUserInfoController -> mUserInfoController
    android.os.UserManager mUserManager -> mUserManager
    android.app.SynchronousUserSwitchObserver mUserSwitchListener -> mUserSwitchListener
    boolean mVolumeVisible -> mVolumeVisible
    com.android.systemui.statusbar.policy.ZenModeController mZenController -> mZenController
    boolean mZenVisible -> mZenVisible
    void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarIconController) -> <init>
    void appTransitionStarting(long,long,boolean) -> appTransitionStarting
    void checkStack(int,android.util.ArraySet,android.app.NotificationManager,android.content.pm.IPackageManager) -> checkStack
    android.content.Intent getTaskIntent(int,int) -> getTaskIntent
    boolean hasNotif(android.util.ArraySet,java.lang.String,int) -> hasNotif
    void onBluetoothDevicesChanged() -> onBluetoothDevicesChanged
    void onBluetoothStateChange(boolean) -> onBluetoothStateChange
    void onDataSaverChanged(boolean) -> onDataSaverChanged
    void onKeyguardShowingChanged() -> onKeyguardShowingChanged
    void onLocationActiveChanged(boolean) -> onLocationActiveChanged
    void onRotationLockStateChanged(boolean,boolean) -> onRotationLockStateChanged
    void onUserSetupChanged() -> onUserSetupChanged
    void onZenChanged(int) -> onZenChanged
    void postEphemeralNotif(java.lang.String,int,android.content.pm.ApplicationInfo,android.app.NotificationManager,int) -> postEphemeralNotif
    void preloadRecentApps() -> preloadRecentApps
    void updateAlarm() -> updateAlarm
    void updateBluetooth() -> updateBluetooth
    void updateCast() -> updateCast
    void updateForegroundInstantApps() -> updateForegroundInstantApps
    void updateHeadsetPlug(android.content.Intent) -> updateHeadsetPlug
    void updateLocation() -> updateLocation
    void updateManagedProfile() -> updateManagedProfile
    void updateQuietState() -> updateQuietState
    void updateSimState(android.content.Intent) -> updateSimState
    void updateTTY() -> updateTTY
    void updateTTY(int) -> updateTTY
    void updateVolumeZen() -> updateVolumeZen
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_12532(java.lang.Boolean) -> lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_12532
    void lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_22493() -> lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_22493
    void lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_22747(boolean) -> lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_22747
    void lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_24393(android.util.ArraySet,android.app.NotificationManager,android.content.pm.IPackageManager) -> lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_24393
    void lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_25046(android.app.NotificationManager,android.util.Pair) -> lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy_25046
    boolean -get0() -> -get0
    android.os.Handler -get1(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -get1
    com.android.systemui.statusbar.phone.StatusBarIconController -get2(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -get2
    java.lang.String -get3(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -get3
    java.lang.String -get4(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -get4
    com.android.systemui.statusbar.policy.UserInfoController -get5(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -get5
    void -wrap0(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy,android.content.Intent) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -wrap4
    void -wrap5(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -wrap5
    void -wrap6(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy,android.content.Intent) -> -wrap6
    void -wrap7(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy,int) -> -wrap7
    void -wrap8(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> -wrap8
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.NestedScrollingParentHelper:
    android.view.ViewGroup mViewGroup -> mViewGroup
    int mNestedScrollAxes -> mNestedScrollAxes
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    void <init>(android.view.ViewGroup) -> <init>
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
com.android.systemui.recents.views.TaskStackAnimationHelper$3 -> com.android.systemui.recents.views.TaskStackAnimationHelper$3:
    com.android.systemui.recents.views.TaskStackAnimationHelper this$0 -> this$0
    float val$newScroll -> val$newScroll
    void <init>(com.android.systemui.recents.views.TaskStackAnimationHelper,float) -> <init>
    void run() -> run
com.android.systemui.plugins.DozeServicePlugin$RequestDoze -> com.android.systemui.plugins.DozeServicePlugin$RequestDoze:
    void onRequestHideDoze() -> onRequestHideDoze
    void onRequestShowDoze() -> onRequestShowDoze
android.support.v4.hardware.display.DisplayManagerCompat$DisplayManagerCompatApi14Impl -> android.support.v4.hardware.display.DisplayManagerCompat$DisplayManagerCompatApi14Impl:
    android.view.WindowManager mWindowManager -> mWindowManager
    void <init>(android.content.Context) -> <init>
com.android.systemui.recents.views.TaskViewThumbnail -> com.android.systemui.recents.views.TaskViewThumbnail:
    int mCornerRadius -> mCornerRadius
    android.graphics.Rect mTaskViewRect -> mTaskViewRect
    android.graphics.Rect mThumbnailRect -> mThumbnailRect
    float mThumbnailScale -> mThumbnailScale
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    boolean mUserLocked -> mUserLocked
    android.graphics.Paint mLockedPaint -> mLockedPaint
    android.graphics.Paint mBgFillPaint -> mBgFillPaint
    android.graphics.ColorMatrix TMP_BRIGHTNESS_COLOR_MATRIX -> TMP_BRIGHTNESS_COLOR_MATRIX
    android.graphics.ColorMatrix TMP_FILTER_COLOR_MATRIX -> TMP_FILTER_COLOR_MATRIX
    float mDimAlpha -> mDimAlpha
    boolean mDisabledInSafeMode -> mDisabledInSafeMode
    int mDisplayOrientation -> mDisplayOrientation
    android.graphics.Rect mDisplayRect -> mDisplayRect
    android.graphics.Paint mDrawPaint -> mDrawPaint
    float mFullscreenThumbnailScale -> mFullscreenThumbnailScale
    boolean mInvisible -> mInvisible
    android.graphics.LightingColorFilter mLightingColorFilter -> mLightingColorFilter
    android.graphics.Matrix mMatrix -> mMatrix
    boolean mOverlayHeaderOnThumbnailActionBar -> mOverlayHeaderOnThumbnailActionBar
    boolean mSizeToFit -> mSizeToFit
    com.android.systemui.recents.model.Task mTask -> mTask
    android.view.View mTaskBar -> mTaskBar
    com.android.systemui.recents.model.ThumbnailData mThumbnailData -> mThumbnailData
    int mTitleBarHeight -> mTitleBarHeight
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void onTaskViewSizeChanged(int,int) -> onTaskViewSizeChanged
    void updateThumbnailMatrix() -> updateThumbnailMatrix
    android.graphics.Paint getDrawPaint() -> getDrawPaint
    void setSizeToFit(boolean) -> setSizeToFit
    void setOverlayHeaderOnThumbnailActionBar(boolean) -> setOverlayHeaderOnThumbnailActionBar
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void bindToTask(com.android.systemui.recents.model.Task,boolean,int,android.graphics.Rect) -> bindToTask
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    void onBusEvent(com.android.systemui.recents.events.ui.TaskSnapshotChangedEvent) -> onBusEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void onTaskDataLoaded(com.android.systemui.recents.model.ThumbnailData) -> onTaskDataLoaded
    void setDimAlpha(float) -> setDimAlpha
    void setThumbnail(com.android.systemui.recents.model.ThumbnailData) -> setThumbnail
    void unbindFromTask() -> unbindFromTask
    void updateClipToTaskBar(android.view.View) -> updateClipToTaskBar
    void updateThumbnailPaintFilter() -> updateThumbnailPaintFilter
    void updateThumbnailVisibility(int) -> updateThumbnailVisibility
    void <clinit>() -> <clinit>
android.support.v7.app.ToolbarActionBar$MenuBuilderCallback -> android.support.v7.app.ToolbarActionBar$MenuBuilderCallback:
    android.support.v7.app.ToolbarActionBar this$0 -> this$0
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
android.support.v7.widget.RecyclerView$3 -> android.support.v7.widget.RecyclerView$3:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
android.support.v4.media.session.PlaybackStateCompat$Actions -> android.support.v4.media.session.PlaybackStateCompat$Actions:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT -> ACTION_SET_TEXT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN -> ACTION_SHOW_ON_SCREEN
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION -> ACTION_SCROLL_TO_POSITION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS -> ACTION_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT -> ACTION_SELECT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP -> ACTION_SCROLL_UP
    java.lang.Object mAction -> mAction
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT -> ACTION_SCROLL_RIGHT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK -> ACTION_CONTEXT_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE -> ACTION_PASTE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS -> ACTION_SET_PROGRESS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS -> ACTION_DISMISS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK -> ACTION_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND -> ACTION_EXPAND
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN -> ACTION_SCROLL_DOWN
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE -> ACTION_COLLAPSE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY -> ACTION_COPY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT -> ACTION_SCROLL_LEFT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT -> ACTION_CUT
    void <clinit>() -> <clinit>
    void <init>(java.lang.Object) -> <init>
    void <init>(int,java.lang.CharSequence) -> <init>
android.support.v7.media.SystemMediaRouteProvider$LegacyImpl -> android.support.v7.media.SystemMediaRouteProvider$LegacyImpl:
    java.util.ArrayList CONTROL_FILTERS -> CONTROL_FILTERS
    int mLastReportedVolume -> mLastReportedVolume
    android.support.v7.media.SystemMediaRouteProvider$LegacyImpl$VolumeChangeReceiver mVolumeChangeReceiver -> mVolumeChangeReceiver
    android.media.AudioManager mAudioManager -> mAudioManager
    void <clinit>() -> <clinit>
    android.support.v7.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String) -> onCreateRouteController
    void <init>(android.content.Context) -> <init>
    void publishRoutes() -> publishRoutes
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Object mItem -> mItem
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    long mId -> mId
    java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
com.android.systemui.fragments.ExtensionFragmentListener -> com.android.systemui.fragments.ExtensionFragmentListener:
    com.android.systemui.statusbar.policy.ExtensionController$Extension mExtension -> mExtension
    com.android.systemui.fragments.FragmentHostManager mFragmentHostManager -> mFragmentHostManager
    int mId -> mId
    java.lang.String mOldClass -> mOldClass
    java.lang.String mTag -> mTag
    void attachExtensonToFragment(android.view.View,java.lang.String,int,com.android.systemui.statusbar.policy.ExtensionController$Extension) -> attachExtensonToFragment
    void <init>(android.view.View,java.lang.String,int,com.android.systemui.statusbar.policy.ExtensionController$Extension) -> <init>
    void accept(com.android.systemui.plugins.FragmentBase) -> accept
    void accept(java.lang.Object) -> accept
com.android.systemui.qs.TouchAnimator$Listener -> com.android.systemui.qs.TouchAnimator$Listener:
    void onAnimationAtEnd() -> onAnimationAtEnd
    void onAnimationAtStart() -> onAnimationAtStart
    void onAnimationStarted() -> onAnimationStarted
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$12 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$12:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(com.android.systemui.statusbar.ExpandableNotificationRow) -> $m$0
    void onInflationFinished(com.android.systemui.statusbar.ExpandableNotificationRow) -> onInflationFinished
android.support.v7.app.MediaRouteChooserDialogFragment -> android.support.v7.app.MediaRouteChooserDialogFragment:
    android.support.v7.app.MediaRouteChooserDialog mDialog -> mDialog
    java.lang.String ARGUMENT_SELECTOR -> ARGUMENT_SELECTOR
    android.support.v7.media.MediaRouteSelector mSelector -> mSelector
    void ensureRouteSelector() -> ensureRouteSelector
    android.support.v7.app.MediaRouteChooserDialog onCreateChooserDialog(android.content.Context,android.os.Bundle) -> onCreateChooserDialog
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.support.v7.media.MediaRouteSelector getRouteSelector() -> getRouteSelector
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void <init>() -> <init>
    void setRouteSelector(android.support.v7.media.MediaRouteSelector) -> setRouteSelector
com.android.systemui.util.wakelock.-$Lambda$VBW5HUGRQ28K2ZOGIXPdmvbpZB8 -> com.android.systemui.util.wakelock.-$Lambda$VBW5HUGRQ28K2ZOGIXPdmvbpZB8:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.plugins.PluginInstanceManager$PluginHandler -> com.android.systemui.plugins.PluginInstanceManager$PluginHandler:
    java.util.ArrayList mPlugins -> mPlugins
    com.android.systemui.plugins.PluginInstanceManager this$0 -> this$0
    void <init>(com.android.systemui.plugins.PluginInstanceManager,android.os.Looper) -> <init>
    com.android.systemui.plugins.VersionInfo checkVersion(java.lang.Class,com.android.systemui.plugins.Plugin,com.android.systemui.plugins.VersionInfo) -> checkVersion
    com.android.systemui.plugins.PluginInstanceManager$PluginInfo handleLoadPlugin(android.content.ComponentName) -> handleLoadPlugin
    void handleMessage(android.os.Message) -> handleMessage
    void handleQueryPlugins(java.lang.String) -> handleQueryPlugins
    java.util.ArrayList -get0(com.android.systemui.plugins.PluginInstanceManager$PluginHandler) -> -get0
    void -wrap0(com.android.systemui.plugins.PluginInstanceManager$PluginHandler,java.lang.String) -> -wrap0
android.support.v17.leanback.widget.GridLayoutManager$2 -> android.support.v17.leanback.widget.GridLayoutManager$2:
    android.support.v17.leanback.widget.GridLayoutManager this$0 -> this$0
    int getEdge(int) -> getEdge
    int getCount() -> getCount
    void addItem(java.lang.Object,int,int,int,int) -> addItem
    int createItem(int,boolean,java.lang.Object[],boolean) -> createItem
    void removeItem(int) -> removeItem
    int getMinIndex() -> getMinIndex
    int getSize(int) -> getSize
    void <init>(android.support.v17.leanback.widget.GridLayoutManager) -> <init>
com.android.systemui.recents.RecentsActivity$LaunchHomeRunnable -> com.android.systemui.recents.RecentsActivity$LaunchHomeRunnable:
    android.content.Intent mLaunchIntent -> mLaunchIntent
    android.app.ActivityOptions mOpts -> mOpts
    com.android.systemui.recents.RecentsActivity this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsActivity,android.content.Intent,android.app.ActivityOptions) -> <init>
    void run() -> run
    void lambda$-com_android_systemui_recents_RecentsActivity$LaunchHomeRunnable_7609() -> lambda$-com_android_systemui_recents_RecentsActivity$LaunchHomeRunnable_7609
com.android.systemui.doze.DozeHost$PulseCallback -> com.android.systemui.doze.DozeHost$PulseCallback:
    void onPulseFinished() -> onPulseFinished
    void onPulseStarted() -> onPulseStarted
com.android.systemui.tuner.TunerFragment$1 -> com.android.systemui.tuner.TunerFragment$1:
    com.android.systemui.tuner.TunerFragment this$0 -> this$0
    void <init>(com.android.systemui.tuner.TunerFragment) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.AutoTileManager$5 -> com.android.systemui.statusbar.phone.AutoTileManager$5:
    com.android.systemui.statusbar.phone.AutoTileManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.AutoTileManager,android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void handleValueChanged(int,boolean) -> handleValueChanged
    void lambda$-com_android_systemui_statusbar_phone_AutoTileManager$5_3014() -> lambda$-com_android_systemui_statusbar_phone_AutoTileManager$5_3014
android.support.v7.graphics.ColorCutQuantizer$1 -> android.support.v7.graphics.ColorCutQuantizer$1:
    int compare(android.support.v7.graphics.ColorCutQuantizer$Vbox,android.support.v7.graphics.ColorCutQuantizer$Vbox) -> compare
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v7.widget.ActivityChooserModel -> android.support.v7.widget.ActivityChooserModel:
    android.content.Context mContext -> mContext
    java.util.Map sDataModelRegistry -> sDataModelRegistry
    java.lang.Object sRegistryLock -> sRegistryLock
    boolean mCanReadHistoricalData -> mCanReadHistoricalData
    android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> mActivityChoserModelPolicy
    boolean mReadShareHistoryCalled -> mReadShareHistoryCalled
    android.support.v7.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> mActivitySorter
    java.util.List mHistoricalRecords -> mHistoricalRecords
    java.lang.String mHistoryFileName -> mHistoryFileName
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.List mActivities -> mActivities
    java.lang.Object mInstanceLock -> mInstanceLock
    boolean mReloadActivities -> mReloadActivities
    int mHistoryMaxSize -> mHistoryMaxSize
    android.content.Intent mIntent -> mIntent
    boolean mHistoricalRecordsChanged -> mHistoricalRecordsChanged
    boolean addHistoricalRecord(android.support.v7.widget.ActivityChooserModel$HistoricalRecord) -> addHistoricalRecord
    boolean loadActivitiesIfNeeded() -> loadActivitiesIfNeeded
    void pruneExcessiveHistoricalRecordsIfNeeded() -> pruneExcessiveHistoricalRecordsIfNeeded
    boolean readHistoricalDataIfNeeded() -> readHistoricalDataIfNeeded
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    int getActivityCount() -> getActivityCount
    int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    void setDefaultActivity(int) -> setDefaultActivity
    android.content.Intent chooseActivity(int) -> chooseActivity
    void persistHistoricalDataIfNeeded() -> persistHistoricalDataIfNeeded
    boolean sortActivitiesIfNeeded() -> sortActivitiesIfNeeded
    void readHistoricalDataImpl() -> readHistoricalDataImpl
    void <clinit>() -> <clinit>
    void ensureConsistentState() -> ensureConsistentState
    int getHistorySize() -> getHistorySize
    android.content.pm.ResolveInfo getActivity(int) -> getActivity
com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment$1 -> com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment$1:
    com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment this$1 -> this$1
    void <init>(com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.settingslib.bluetooth.BluetoothEventManager$AdapterStateChangedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$AdapterStateChangedHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$AdapterStateChangedHandler) -> <init>
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.systemui.statusbar.phone.NotificationPanelView$11 -> com.android.systemui.statusbar.phone.NotificationPanelView$11:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    boolean onPreDraw() -> onPreDraw
com.android.systemui.recents.model.Task$TaskCallbacks -> com.android.systemui.recents.model.Task$TaskCallbacks:
    void onTaskDataLoaded(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.ThumbnailData) -> onTaskDataLoaded
    void onTaskDataUnloaded() -> onTaskDataUnloaded
    void onTaskStackIdChanged() -> onTaskStackIdChanged
android.support.v4.provider.FontsContractCompat$FontFamilyResult -> android.support.v4.provider.FontsContractCompat$FontFamilyResult:
    android.support.v4.provider.FontsContractCompat$FontInfo[] mFonts -> mFonts
    int mStatusCode -> mStatusCode
    int getStatusCode() -> getStatusCode
    android.support.v4.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    void <init>(int,android.support.v4.provider.FontsContractCompat$FontInfo[]) -> <init>
com.android.keyguard.KeyguardSecurityContainer$2 -> com.android.keyguard.KeyguardSecurityContainer$2:
    com.android.keyguard.KeyguardSecurityContainer this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSecurityContainer) -> <init>
    void dismiss(boolean,int) -> dismiss
    void reportUnlockAttempt(int,boolean,int) -> reportUnlockAttempt
    void reset() -> reset
    void userActivity() -> userActivity
com.android.systemui.SystemUIApplication$1 -> com.android.systemui.SystemUIApplication$1:
    com.android.systemui.SystemUIApplication this$0 -> this$0
    void <init>(com.android.systemui.SystemUIApplication) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.DockedStackExistsListener$1 -> com.android.systemui.DockedStackExistsListener$1:
    void <init>() -> <init>
    void onAdjustedForImeChanged(boolean,long) -> onAdjustedForImeChanged
    void onDividerVisibilityChanged(boolean) -> onDividerVisibilityChanged
    void onDockSideChanged(int) -> onDockSideChanged
    void onDockedStackExistsChanged(boolean) -> onDockedStackExistsChanged
    void onDockedStackMinimizedChanged(boolean,long,boolean) -> onDockedStackMinimizedChanged
com.android.systemui.keyguard.KeyguardViewMediator$1 -> com.android.systemui.keyguard.KeyguardViewMediator$1:
    com.android.systemui.keyguard.KeyguardViewMediator this$0 -> this$0
    int[] -com-android-internal-telephony-IccCardConstants$StateSwitchesValues -> -com-android-internal-telephony-IccCardConstants$StateSwitchesValues
    void <init>(com.android.systemui.keyguard.KeyguardViewMediator) -> <init>
    void onClockVisibilityChanged() -> onClockVisibilityChanged
    void onDeviceProvisioned() -> onDeviceProvisioned
    void onFingerprintAuthFailed() -> onFingerprintAuthFailed
    void onFingerprintAuthenticated(int) -> onFingerprintAuthenticated
    void onHasLockscreenWallpaperChanged(boolean) -> onHasLockscreenWallpaperChanged
    void onPhoneStateChanged(int) -> onPhoneStateChanged
    void onSimAbsentLocked() -> onSimAbsentLocked
    void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants$State) -> onSimStateChanged
    void onTrustChanged(int) -> onTrustChanged
    void onUserInfoChanged(int) -> onUserInfoChanged
    void onUserSwitchComplete(int) -> onUserSwitchComplete
    void onUserSwitching(int) -> onUserSwitching
    int[] -getcom-android-internal-telephony-IccCardConstants$StateSwitchesValues() -> -getcom-android-internal-telephony-IccCardConstants$StateSwitchesValues
android.support.v17.leanback.R$layout -> android.support.v17.leanback.R$layout:
    int lb_image_card_view -> lb_image_card_view
    int lb_image_card_view_themed_badge_left -> lb_image_card_view_themed_badge_left
    int lb_image_card_view_themed_badge_right -> lb_image_card_view_themed_badge_right
    int lb_image_card_view_themed_content -> lb_image_card_view_themed_content
    int lb_image_card_view_themed_title -> lb_image_card_view_themed_title
    int lb_list_row -> lb_list_row
    int lb_list_row_hovercard -> lb_list_row_hovercard
    int lb_picker -> lb_picker
    int lb_picker_column -> lb_picker_column
    int lb_picker_item -> lb_picker_item
    int lb_picker_separator -> lb_picker_separator
    int lb_playback_now_playing_bars -> lb_playback_now_playing_bars
    int lb_row_container -> lb_row_container
    int lb_search_bar -> lb_search_bar
    int lb_search_orb -> lb_search_orb
    int lb_speech_orb -> lb_speech_orb
    int lb_title_view -> lb_title_view
    void <init>() -> <init>
android.support.v7.media.RegisteredMediaRouteProviderWatcher -> android.support.v7.media.RegisteredMediaRouteProviderWatcher:
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mScanPackagesRunnable -> mScanPackagesRunnable
    android.support.v7.media.RegisteredMediaRouteProviderWatcher$Callback mCallback -> mCallback
    android.content.pm.PackageManager mPackageManager -> mPackageManager
    boolean mRunning -> mRunning
    android.content.BroadcastReceiver mScanPackagesReceiver -> mScanPackagesReceiver
    java.util.ArrayList mProviders -> mProviders
    void start() -> start
    int findProvider(java.lang.String,java.lang.String) -> findProvider
    void <init>(android.content.Context,android.support.v7.media.RegisteredMediaRouteProviderWatcher$Callback) -> <init>
    void scanPackages() -> scanPackages
com.android.systemui.doze.DozeFactory -> com.android.systemui.doze.DozeFactory:
    void <init>() -> <init>
    com.android.systemui.doze.DozeMachine assembleMachine(com.android.systemui.doze.DozeService) -> assembleMachine
    com.android.systemui.doze.DozeMachine$Part createDozeScreenBrightness(android.content.Context,com.android.systemui.doze.DozeMachine$Service,android.hardware.SensorManager,com.android.systemui.doze.DozeHost,android.os.Handler) -> createDozeScreenBrightness
    com.android.systemui.doze.DozeTriggers createDozeTriggers(android.content.Context,android.hardware.SensorManager,com.android.systemui.doze.DozeHost,android.app.AlarmManager,com.android.internal.hardware.AmbientDisplayConfiguration,com.android.systemui.statusbar.phone.DozeParameters,android.os.Handler,com.android.systemui.util.wakelock.WakeLock,com.android.systemui.doze.DozeMachine) -> createDozeTriggers
    com.android.systemui.doze.DozeMachine$Part createDozeUi(android.content.Context,com.android.systemui.doze.DozeHost,com.android.systemui.util.wakelock.WakeLock,com.android.systemui.doze.DozeMachine,android.os.Handler,android.app.AlarmManager) -> createDozeUi
    com.android.systemui.doze.DozeHost getHost(com.android.systemui.doze.DozeService) -> getHost
com.android.systemui.statusbar.phone.DoubleTapHelper -> com.android.systemui.statusbar.phone.DoubleTapHelper:
    boolean mActivated -> mActivated
    com.android.systemui.statusbar.phone.DoubleTapHelper$ActivationListener mActivationListener -> mActivationListener
    float mActivationX -> mActivationX
    float mActivationY -> mActivationY
    com.android.systemui.statusbar.phone.DoubleTapHelper$DoubleTapListener mDoubleTapListener -> mDoubleTapListener
    com.android.systemui.statusbar.phone.DoubleTapHelper$DoubleTapLogListener mDoubleTapLogListener -> mDoubleTapLogListener
    float mDoubleTapSlop -> mDoubleTapSlop
    float mDownX -> mDownX
    float mDownY -> mDownY
    com.android.systemui.statusbar.phone.DoubleTapHelper$SlideBackListener mSlideBackListener -> mSlideBackListener
    java.lang.Runnable mTapTimeoutRunnable -> mTapTimeoutRunnable
    float mTouchSlop -> mTouchSlop
    boolean mTrackTouch -> mTrackTouch
    android.view.View mView -> mView
    void <init>(android.view.View,com.android.systemui.statusbar.phone.DoubleTapHelper$ActivationListener,com.android.systemui.statusbar.phone.DoubleTapHelper$DoubleTapListener,com.android.systemui.statusbar.phone.DoubleTapHelper$SlideBackListener,com.android.systemui.statusbar.phone.DoubleTapHelper$DoubleTapLogListener) -> <init>
    boolean onTouchEvent(android.view.MotionEvent,int) -> onTouchEvent
    boolean isWithinDoubleTapSlop(android.view.MotionEvent) -> isWithinDoubleTapSlop
    boolean isWithinTouchSlop(android.view.MotionEvent) -> isWithinTouchSlop
    void makeActive() -> makeActive
    void makeInactive() -> makeInactive
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void -com_android_systemui_statusbar_phone_DoubleTapHelper-mthref-0() -> -com_android_systemui_statusbar_phone_DoubleTapHelper-mthref-0
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.lang.Runnable mExecCommit -> mExecCommit
    android.support.v4.app.Fragment mParent -> mParent
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    android.os.Bundle mStateBundle -> mStateBundle
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    java.util.ArrayList mTmpAddedFragments -> mTmpAddedFragments
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    java.util.ArrayList mAdded -> mAdded
    boolean mDestroyed -> mDestroyed
    android.support.v4.app.FragmentManagerNonConfig mSavedNonConfig -> mSavedNonConfig
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mExecutingActions -> mExecutingActions
    boolean mStateSaved -> mStateSaved
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    java.util.ArrayList mTmpIsPop -> mTmpIsPop
    java.util.ArrayList mBackStack -> mBackStack
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> mLifecycleCallbacks
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    java.util.ArrayList mTmpRecords -> mTmpRecords
    android.support.v4.app.Fragment mPrimaryNav -> mPrimaryNav
    boolean DEBUG -> DEBUG
    android.util.SparseArray mActive -> mActive
    int mNextFragmentIndex -> mNextFragmentIndex
    int mCurState -> mCurState
    java.util.ArrayList mPendingActions -> mPendingActions
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.reflect.Field sAnimationListenerField -> sAnimationListenerField
    java.util.ArrayList mPostponedTransactions -> mPostponedTransactions
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    void -wrap1(android.support.v4.app.FragmentManagerImpl) -> -wrap1
    void moveToState(int,boolean) -> moveToState
    void dispatchStart() -> dispatchStart
    void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    void attachFragment(android.support.v4.app.Fragment) -> attachFragment
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.os.Parcelable saveAllState() -> saveAllState
    void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    void moveFragmentToExpectedState(android.support.v4.app.Fragment) -> moveFragmentToExpectedState
    void ensureInflatedFragmentView(android.support.v4.app.Fragment) -> ensureInflatedFragmentView
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    boolean popBackStackImmediate() -> popBackStackImmediate
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    void animateRemoveFragment(android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    void burpActive() -> burpActive
    int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,android.support.v4.util.ArraySet) -> postponePostponableTransactions
    void freeBackStackIndex(int) -> freeBackStackIndex
    void saveNonConfig() -> saveNonConfig
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentPaused
    void makeRemovedFragmentsInvisible(android.support.v4.util.ArraySet) -> makeRemovedFragmentsInvisible
    void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    java.lang.String toString() -> toString
    void showFragment(android.support.v4.app.Fragment) -> showFragment
    android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    void <init>() -> <init>
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    void dispatchOnFragmentSaveInstanceState(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    void dispatchStop() -> dispatchStop
    void dispatchDestroyView() -> dispatchDestroyView
    void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    boolean modifiesAlpha(android.animation.Animator) -> modifiesAlpha
    void reportBackStackChanged() -> reportBackStackChanged
    void dispatchDestroy() -> dispatchDestroy
    void ensureExecReady(boolean) -> ensureExecReady
    void enqueueAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    void dispatchReallyStop() -> dispatchReallyStop
    android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation) -> getAnimationListener
    android.support.v4.app.FragmentManagerNonConfig retainNonConfig() -> retainNonConfig
    android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    void dispatchLowMemory() -> dispatchLowMemory
    void dispatchStateChange(int) -> dispatchStateChange
    void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> restoreAllState
    android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void doPendingDeferredStart() -> doPendingDeferredStart
    boolean execPendingActions() -> execPendingActions
    void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    void completeShowHideFragment(android.support.v4.app.Fragment) -> completeShowHideFragment
    void removeFragment(android.support.v4.app.Fragment) -> removeFragment
    void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    void -wrap0(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean) -> -wrap0
    void checkStateLoss() -> checkStateLoss
    void detachFragment(android.support.v4.app.Fragment) -> detachFragment
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    boolean modifiesAlpha(android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> modifiesAlpha
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void dispatchPause() -> dispatchPause
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentDetached
    android.support.v4.app.Fragment findFragmentUnder(android.support.v4.app.Fragment) -> findFragmentUnder
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachController
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void dispatchActivityCreated() -> dispatchActivityCreated
    void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    void cleanupExec() -> cleanupExec
    void scheduleCommit() -> scheduleCommit
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    android.support.v4.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    void setHWLayerAnimListenerIfAlpha(android.view.View,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> setHWLayerAnimListenerIfAlpha
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    void popBackStack(int,int) -> popBackStack
    boolean executePendingTransactions() -> executePendingTransactions
    boolean shouldRunOnHWLayer(android.view.View,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> shouldRunOnHWLayer
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void hideFragment(android.support.v4.app.Fragment) -> hideFragment
    java.util.List getFragments() -> getFragments
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    int reverseTransit(int) -> reverseTransit
    void setPrimaryNavigationFragment(android.support.v4.app.Fragment) -> setPrimaryNavigationFragment
    void dispatchCreate() -> dispatchCreate
    void dispatchOnFragmentPreCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    void forcePostponedTransactions() -> forcePostponedTransactions
    void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    boolean isStateSaved() -> isStateSaved
    void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentStopped
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    void setRetaining(android.support.v4.app.FragmentManagerNonConfig) -> setRetaining
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentStarted
    boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    boolean isStateAtLeast(int) -> isStateAtLeast
    void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentResumed
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void throwException(java.lang.RuntimeException) -> throwException
    void addAddedFragments(android.support.v4.util.ArraySet) -> addAddedFragments
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    void <clinit>() -> <clinit>
    void dispatchResume() -> dispatchResume
    void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
com.android.settingslib.R$layout -> com.android.settingslib.R$layout:
    int preference_two_target -> preference_two_target
    int restricted_icon -> restricted_icon
    int restricted_switch_preference -> restricted_switch_preference
    int restricted_switch_widget -> restricted_switch_widget
    int settings_with_drawer -> settings_with_drawer
    void <init>() -> <init>
com.android.systemui.qs.tiles.BluetoothTile$1 -> com.android.systemui.qs.tiles.BluetoothTile$1:
    com.android.systemui.qs.tiles.BluetoothTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.BluetoothTile) -> <init>
    void onBluetoothDevicesChanged() -> onBluetoothDevicesChanged
    void onBluetoothStateChange(boolean) -> onBluetoothStateChange
android.support.v7.view.menu.BaseMenuPresenter -> android.support.v7.view.menu.BaseMenuPresenter:
    android.content.Context mContext -> mContext
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> mCallback
    int mItemLayoutRes -> mItemLayoutRes
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    int mId -> mId
    android.view.LayoutInflater mInflater -> mInflater
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    int mMenuLayoutRes -> mMenuLayoutRes
    android.support.v7.view.menu.MenuView mMenuView -> mMenuView
    android.content.Context mSystemContext -> mSystemContext
    android.support.v7.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void setId(int) -> setId
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    android.support.v7.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    boolean flagActionItems() -> flagActionItems
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl) -> shouldIncludeItem
    void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView) -> bindItemView
    void <init>(android.content.Context,int,int) -> <init>
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.android.systemui.pip.phone.PipTouchState -> com.android.systemui.pip.phone.PipTouchState:
    long DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int mActivePointerId -> mActivePointerId
    boolean mAllowDraggingOffscreen -> mAllowDraggingOffscreen
    boolean mAllowTouches -> mAllowTouches
    java.lang.Runnable mDoubleTapTimeoutCallback -> mDoubleTapTimeoutCallback
    android.graphics.PointF mDownDelta -> mDownDelta
    android.graphics.PointF mDownTouch -> mDownTouch
    long mDownTouchTime -> mDownTouchTime
    android.os.Handler mHandler -> mHandler
    boolean mIsDoubleTap -> mIsDoubleTap
    boolean mIsDragging -> mIsDragging
    boolean mIsUserInteracting -> mIsUserInteracting
    boolean mIsWaitingForDoubleTap -> mIsWaitingForDoubleTap
    android.graphics.PointF mLastDelta -> mLastDelta
    long mLastDownTouchTime -> mLastDownTouchTime
    android.graphics.PointF mLastTouch -> mLastTouch
    boolean mPreviouslyDragging -> mPreviouslyDragging
    boolean mStartedDragging -> mStartedDragging
    long mUpTouchTime -> mUpTouchTime
    android.graphics.PointF mVelocity -> mVelocity
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    android.view.ViewConfiguration mViewConfig -> mViewConfig
    void <init>(android.view.ViewConfiguration,android.os.Handler,java.lang.Runnable) -> <init>
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isDoubleTap() -> isDoubleTap
    boolean isWaitingForDoubleTap() -> isWaitingForDoubleTap
    void scheduleDoubleTapTimeoutCallback() -> scheduleDoubleTapTimeoutCallback
    boolean allowDraggingOffscreen() -> allowDraggingOffscreen
    void dump(java.io.PrintWriter,java.lang.String) -> dump
    long getDoubleTapTimeoutCallbackDelay() -> getDoubleTapTimeoutCallbackDelay
    android.graphics.PointF getDownTouchPosition() -> getDownTouchPosition
    android.graphics.PointF getLastTouchDelta() -> getLastTouchDelta
    android.graphics.PointF getLastTouchPosition() -> getLastTouchPosition
    android.graphics.PointF getVelocity() -> getVelocity
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    boolean isDragging() -> isDragging
    boolean isUserInteracting() -> isUserInteracting
    void recycleVelocityTracker() -> recycleVelocityTracker
    void reset() -> reset
    void setAllowTouches(boolean) -> setAllowTouches
    boolean startedDragging() -> startedDragging
com.android.systemui.statusbar.policy.-$Lambda$FP8zhuCUOHkjTmQIr60UQGzakpQ -> com.android.systemui.statusbar.policy.-$Lambda$FP8zhuCUOHkjTmQIr60UQGzakpQ:
    int -$f0 -> -$f0
    void <init>(int) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.qs.-$Lambda$IBJehqneaOm5k50HAYVYZP0648A -> com.android.systemui.qs.-$Lambda$IBJehqneaOm5k50HAYVYZP0648A:
    com.android.systemui.qs.-$Lambda$IBJehqneaOm5k50HAYVYZP0648A $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatBaseImpl -> android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatBaseImpl:
    boolean sButtonDrawableFieldFetched -> sButtonDrawableFieldFetched
    java.lang.reflect.Field sButtonDrawableField -> sButtonDrawableField
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
com.android.systemui.statusbar.phone.NotificationPanelView -> com.android.systemui.statusbar.phone.NotificationPanelView:
    android.util.FloatProperty SET_DARK_AMOUNT_PROPERTY -> SET_DARK_AMOUNT_PROPERTY
    java.lang.String TAG -> TAG
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper mAffordanceHelper -> mAffordanceHelper
    int mAmbientIndicationBottomPadding -> mAmbientIndicationBottomPadding
    java.lang.Runnable mAnimateKeyguardBottomAreaInvisibleEndRunnable -> mAnimateKeyguardBottomAreaInvisibleEndRunnable
    java.lang.Runnable mAnimateKeyguardStatusBarInvisibleEndRunnable -> mAnimateKeyguardStatusBarInvisibleEndRunnable
    java.lang.Runnable mAnimateKeyguardStatusViewInvisibleEndRunnable -> mAnimateKeyguardStatusViewInvisibleEndRunnable
    java.lang.Runnable mAnimateKeyguardStatusViewVisibleEndRunnable -> mAnimateKeyguardStatusViewVisibleEndRunnable
    boolean mAnimateNextTopPaddingChange -> mAnimateNextTopPaddingChange
    boolean mBlockTouches -> mBlockTouches
    int mClockAnimationTargetX -> mClockAnimationTargetX
    int mClockAnimationTargetY -> mClockAnimationTargetY
    android.animation.Animator mClockAnimator -> mClockAnimator
    com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm mClockPositionAlgorithm -> mClockPositionAlgorithm
    com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm$Result mClockPositionResult -> mClockPositionResult
    boolean mClosingWithAlphaFadeOut -> mClosingWithAlphaFadeOut
    boolean mCollapsedOnDown -> mCollapsedOnDown
    boolean mConflictingQsExpansionGesture -> mConflictingQsExpansionGesture
    float mDarkAmount -> mDarkAmount
    float mDarkAmountTarget -> mDarkAmountTarget
    android.animation.ValueAnimator mDarkAnimator -> mDarkAnimator
    boolean mDozing -> mDozing
    boolean mDozingOnDown -> mDozingOnDown
    android.graphics.Rect mDummyDirtyRect -> mDummyDirtyRect
    float mEmptyDragAmount -> mEmptyDragAmount
    boolean mExpandingFromHeadsUp -> mExpandingFromHeadsUp
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    com.android.systemui.fragments.FragmentHostManager$FragmentListener mFragmentListener -> mFragmentListener
    com.android.systemui.statusbar.phone.NotificationGroupManager mGroupManager -> mGroupManager
    boolean mHeadsUpAnimatingAway -> mHeadsUpAnimatingAway
    java.lang.Runnable mHeadsUpExistenceChangedRunnable -> mHeadsUpExistenceChangedRunnable
    com.android.systemui.statusbar.phone.HeadsUpTouchHelper mHeadsUpTouchHelper -> mHeadsUpTouchHelper
    int mIndicationBottomPadding -> mIndicationBottomPadding
    float mInitialHeightOnTouch -> mInitialHeightOnTouch
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    boolean mIntercepting -> mIntercepting
    boolean mIsExpanding -> mIsExpanding
    boolean mIsExpansionFromHeadsUp -> mIsExpansionFromHeadsUp
    boolean mIsFullWidth -> mIsFullWidth
    boolean mIsLaunchTransitionFinished -> mIsLaunchTransitionFinished
    boolean mIsLaunchTransitionRunning -> mIsLaunchTransitionRunning
    boolean mKeyguardShowing -> mKeyguardShowing
    com.android.systemui.statusbar.phone.KeyguardStatusBarView mKeyguardStatusBar -> mKeyguardStatusBar
    float mKeyguardStatusBarAnimateAlpha -> mKeyguardStatusBarAnimateAlpha
    com.android.keyguard.KeyguardStatusView mKeyguardStatusView -> mKeyguardStatusView
    boolean mKeyguardStatusViewAnimating -> mKeyguardStatusViewAnimating
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher mKeyguardUserSwitcher -> mKeyguardUserSwitcher
    boolean mLastAnnouncementWasQuickSettings -> mLastAnnouncementWasQuickSettings
    java.lang.String mLastCameraLaunchSource -> mLastCameraLaunchSource
    int mLastOrientation -> mLastOrientation
    float mLastOverscroll -> mLastOverscroll
    float mLastTouchX -> mLastTouchX
    float mLastTouchY -> mLastTouchY
    java.lang.Runnable mLaunchAnimationEndRunnable -> mLaunchAnimationEndRunnable
    boolean mLaunchingAffordance -> mLaunchingAffordance
    boolean mListenForHeadsUp -> mListenForHeadsUp
    com.android.systemui.statusbar.phone.LockscreenGestureLogger mLockscreenGestureLogger -> mLockscreenGestureLogger
    int mMaxFadeoutHeight -> mMaxFadeoutHeight
    int mNavigationBarBottomHeight -> mNavigationBarBottomHeight
    boolean mNoVisibleNotifications -> mNoVisibleNotifications
    com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer mNotificationContainerParent -> mNotificationContainerParent
    int mNotificationScrimWaitDistance -> mNotificationScrimWaitDistance
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mNotificationStackScroller -> mNotificationStackScroller
    int mNotificationsHeaderCollideDistance -> mNotificationsHeaderCollideDistance
    int mOldLayoutDirection -> mOldLayoutDirection
    boolean mOnlyAffordanceInThisMotion -> mOnlyAffordanceInThisMotion
    boolean mPanelExpanded -> mPanelExpanded
    int mPositionMinSideMargin -> mPositionMinSideMargin
    android.os.PowerManager mPowerManager -> mPowerManager
    com.android.systemui.plugins.qs.QS mQs -> mQs
    boolean mQsAnimatorExpand -> mQsAnimatorExpand
    float mQsClockAlphaOverride -> mQsClockAlphaOverride
    boolean mQsExpandImmediate -> mQsExpandImmediate
    boolean mQsExpanded -> mQsExpanded
    boolean mQsExpandedWhenExpandingStarted -> mQsExpandedWhenExpandingStarted
    android.animation.ValueAnimator mQsExpansionAnimator -> mQsExpansionAnimator
    boolean mQsExpansionEnabled -> mQsExpansionEnabled
    boolean mQsExpansionFromOverscroll -> mQsExpansionFromOverscroll
    float mQsExpansionHeight -> mQsExpansionHeight
    int mQsFalsingThreshold -> mQsFalsingThreshold
    android.widget.FrameLayout mQsFrame -> mQsFrame
    boolean mQsFullyExpanded -> mQsFullyExpanded
    int mQsMaxExpansionHeight -> mQsMaxExpansionHeight
    int mQsMinExpansionHeight -> mQsMinExpansionHeight
    android.view.View mQsNavbarScrim -> mQsNavbarScrim
    int mQsPeekHeight -> mQsPeekHeight
    boolean mQsScrimEnabled -> mQsScrimEnabled
    android.animation.ValueAnimator mQsSizeChangeAnimator -> mQsSizeChangeAnimator
    boolean mQsTouchAboveFalsingThreshold -> mQsTouchAboveFalsingThreshold
    boolean mQsTracking -> mQsTracking
    android.view.VelocityTracker mQsVelocityTracker -> mQsVelocityTracker
    boolean mShowEmptyShadeView -> mShowEmptyShadeView
    boolean mShowIconsWhenExpanded -> mShowIconsWhenExpanded
    boolean mStackScrollerOverscrolling -> mStackScrollerOverscrolling
    android.animation.ValueAnimator$AnimatorUpdateListener mStatusBarAnimateAlphaListener -> mStatusBarAnimateAlphaListener
    int mStatusBarMinHeight -> mStatusBarMinHeight
    int mStatusBarState -> mStatusBarState
    int mTopPaddingAdjustment -> mTopPaddingAdjustment
    int mTrackingPointer -> mTrackingPointer
    boolean mTwoFingerQsExpandPossible -> mTwoFingerQsExpandPossible
    boolean mUnlockIconActive -> mUnlockIconActive
    int mUnlockMoveDistance -> mUnlockMoveDistance
    boolean mUserSetupComplete -> mUserSetupComplete
    int getMaxPanelHeight() -> getMaxPanelHeight
    void setPanelScrimMinFraction(float) -> setPanelScrimMinFraction
    void clearNotificationEffects() -> clearNotificationEffects
    void setTrackingHeadsUp(boolean) -> setTrackingHeadsUp
    void setPulsing(boolean) -> setPulsing
    void refreshTime() -> refreshTime
    void setUserSetupComplete(boolean) -> setUserSetupComplete
    void onAffordanceLaunchEnded() -> onAffordanceLaunchEnded
    void setTouchDisabled(boolean) -> setTouchDisabled
    void onScreenTurningOn() -> onScreenTurningOn
    void launchCamera(boolean,int) -> launchCamera
    void setStatusBar(com.android.systemui.statusbar.phone.StatusBar) -> setStatusBar
    void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager) -> setGroupManager
    void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager) -> setHeadsUpManager
    com.android.systemui.statusbar.phone.LockIcon getLockIcon() -> getLockIcon
    void setKeyguardIndicationController(com.android.systemui.statusbar.KeyguardIndicationController) -> setKeyguardIndicationController
    void onOverlayChanged() -> onOverlayChanged
    boolean isQsExpanded() -> isQsExpanded
    void setQsExpansionEnabled(boolean) -> setQsExpansionEnabled
    void showEmptyShadeView(boolean) -> showEmptyShadeView
    void setStatusAccessibilityImportance(int) -> setStatusAccessibilityImportance
    boolean hideStatusBarIconsWhenExpanded() -> hideStatusBarIconsWhenExpanded
    void expand(boolean) -> expand
    boolean isInSettings() -> isInSettings
    boolean isExpanding() -> isExpanding
    void flingSettings(float,boolean) -> flingSettings
    void expandWithQs() -> expandWithQs
    void closeQs() -> closeQs
    void setQsScrimEnabled(boolean) -> setQsScrimEnabled
    boolean isLaunchTransitionFinished() -> isLaunchTransitionFinished
    void updateResources() -> updateResources
    void setAlpha(float) -> setAlpha
    boolean isLaunchTransitionRunning() -> isLaunchTransitionRunning
    void setLaunchTransitionEndRunnable(java.lang.Runnable) -> setLaunchTransitionEndRunnable
    void notifyStartFading() -> notifyStartFading
    void resetViews() -> resetViews
    void animateToFullShade(long) -> animateToFullShade
    void setBarState(int,boolean,boolean) -> setBarState
    void setDozing(boolean,boolean) -> setDozing
    void setDark(boolean,boolean) -> setDark
    boolean isQsDetailShowing() -> isQsDetailShowing
    void closeQsDetail() -> closeQsDetail
    void animateCloseQs() -> animateCloseQs
    int computeMaxKeyguardNotifications(int) -> computeMaxKeyguardNotifications
    void setEmptyDragAmount(float) -> setEmptyDragAmount
    boolean canCameraGestureBeLaunched(boolean) -> canCameraGestureBeLaunched
    void setNoVisibleNotifications(boolean) -> setNoVisibleNotifications
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateKeyguardStatusBarIn(long) -> animateKeyguardStatusBarIn
    void animateKeyguardStatusBarOut() -> animateKeyguardStatusBarOut
    int calculatePanelHeightQsExpanded() -> calculatePanelHeightQsExpanded
    int calculatePanelHeightShade() -> calculatePanelHeightShade
    float calculateQsTopPadding() -> calculateQsTopPadding
    void cancelQsAnimation() -> cancelQsAnimation
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEventInternal
    void fling(float,boolean) -> fling
    boolean flingExpands(float,float,float,float) -> flingExpands
    boolean flingExpandsQs(float) -> flingExpandsQs
    void flingQsWithCurrentVelocity(float,boolean) -> flingQsWithCurrentVelocity
    void flingSettings(float,boolean,java.lang.Runnable,boolean) -> flingSettings
    void flingToHeight(float,boolean,float,float,boolean) -> flingToHeight
    void flingTopOverscroll(float,boolean) -> flingTopOverscroll
    boolean fullyExpandedClearAllVisible() -> fullyExpandedClearAllVisible
    float getAffordanceFalsingFactor() -> getAffordanceFalsingFactor
    com.android.systemui.statusbar.KeyguardAffordanceView getCenterIcon() -> getCenterIcon
    int getClearAllHeight() -> getClearAllHeight
    float getCurrentQSVelocity() -> getCurrentQSVelocity
    float getFadeoutAlpha() -> getFadeoutAlpha
    int getFalsingThreshold() -> getFalsingThreshold
    float getHeaderTranslation() -> getHeaderTranslation
    float getKeyguardContentsAlpha() -> getKeyguardContentsAlpha
    java.lang.String getKeyguardOrLockScreenString() -> getKeyguardOrLockScreenString
    com.android.systemui.statusbar.KeyguardAffordanceView getLeftIcon() -> getLeftIcon
    android.view.View getLeftPreview() -> getLeftPreview
    float getMaxTranslationDistance() -> getMaxTranslationDistance
    float getNotificationsTopY() -> getNotificationsTopY
    float getOpeningHeight() -> getOpeningHeight
    float getOverExpansionAmount() -> getOverExpansionAmount
    float getOverExpansionPixels() -> getOverExpansionPixels
    float getPeekHeight() -> getPeekHeight
    float getQsExpansionFraction() -> getQsExpansionFraction
    com.android.systemui.statusbar.KeyguardAffordanceView getRightIcon() -> getRightIcon
    android.view.View getRightPreview() -> getRightPreview
    int getTempQsMaxExpansion() -> getTempQsMaxExpansion
    void handleQsDown(android.view.MotionEvent) -> handleQsDown
    boolean handleQsTouch(android.view.MotionEvent) -> handleQsTouch
    boolean hasConflictingGestures() -> hasConflictingGestures
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void initBottomArea() -> initBottomArea
    void initDownStates(android.view.MotionEvent) -> initDownStates
    void initVelocityTracker() -> initVelocityTracker
    float interpolate(float,float,float) -> interpolate
    boolean isClearAllVisible() -> isClearAllVisible
    boolean isDozing() -> isDozing
    boolean isFalseTouch() -> isFalseTouch
    boolean isForegroundApp(java.lang.String) -> isForegroundApp
    boolean isFullWidth() -> isFullWidth
    boolean isInContentBounds(float,float) -> isInContentBounds
    boolean isInQsArea(float,float) -> isInQsArea
    boolean isOnKeyguard() -> isOnKeyguard
    boolean isOpenQsEvent(android.view.MotionEvent) -> isOpenQsEvent
    boolean isPanelVisibleBecauseOfHeadsUp() -> isPanelVisibleBecauseOfHeadsUp
    boolean isScrolledToBottom() -> isScrolledToBottom
    boolean isTrackingBlocked() -> isTrackingBlocked
    void loadDimens() -> loadDimens
    void log(java.lang.String) -> log
    void logQsSwipeDown(float) -> logQsSwipeDown
    boolean needsAntiFalsing() -> needsAntiFalsing
    void onAnimationToSideEnded() -> onAnimationToSideEnded
    void onAnimationToSideStarted(boolean,float,float) -> onAnimationToSideStarted
    android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    void onAttachedToWindow() -> onAttachedToWindow
    void onClick(android.view.View) -> onClick
    void onClosingFinished() -> onClosingFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onEmptySpaceClicked(float,float) -> onEmptySpaceClicked
    void onExpandingFinished() -> onExpandingFinished
    void onExpandingStarted() -> onExpandingStarted
    void onFinishInflate() -> onFinishInflate
    void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpPinned
    void onHeadsUpPinnedModeChanged(boolean) -> onHeadsUpPinnedModeChanged
    void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> onHeadsUpStateChanged
    void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpUnPinned
    void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean) -> onHeightChanged
    void onHeightUpdated(float) -> onHeightUpdated
    void onIconClicked(boolean) -> onIconClicked
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onMiddleClicked() -> onMiddleClicked
    void onOverscrollTopChanged(float,boolean) -> onOverscrollTopChanged
    void onQsExpansionStarted() -> onQsExpansionStarted
    void onQsExpansionStarted(int) -> onQsExpansionStarted
    void onQsHeightChanged() -> onQsHeightChanged
    boolean onQsIntercept(android.view.MotionEvent) -> onQsIntercept
    void onQsTouch(android.view.MotionEvent) -> onQsTouch
    void onReset(com.android.systemui.statusbar.ExpandableView) -> onReset
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onSwipingAborted() -> onSwipingAborted
    void onSwipingStarted(boolean) -> onSwipingStarted
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onTrackingStarted() -> onTrackingStarted
    void onTrackingStopped(boolean) -> onTrackingStopped
    void onUnlockHintFinished() -> onUnlockHintFinished
    void onUnlockHintStarted() -> onUnlockHintStarted
    void positionClockAndNotifications() -> positionClockAndNotifications
    void requestScrollerTopPaddingUpdate(boolean) -> requestScrollerTopPaddingUpdate
    void resetVerticalPanelPosition() -> resetVerticalPanelPosition
    void setClosingWithAlphaFadeout(boolean) -> setClosingWithAlphaFadeout
    void setDarkAmount(float) -> setDarkAmount
    void setHeadsUpAnimatingAway(boolean) -> setHeadsUpAnimatingAway
    void setIsFullWidth(boolean) -> setIsFullWidth
    void setKeyguardBottomAreaVisibility(int,boolean) -> setKeyguardBottomAreaVisibility
    void setKeyguardStatusViewVisibility(int,boolean,boolean) -> setKeyguardStatusViewVisibility
    void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> setKeyguardUserSwitcher
    void setLaunchingAffordance(boolean) -> setLaunchingAffordance
    void setListening(boolean) -> setListening
    void setOverExpansion(float,boolean) -> setOverExpansion
    void setOverScrolling(boolean) -> setOverScrolling
    void setQsExpanded(boolean) -> setQsExpanded
    void setQsExpansion(float) -> setQsExpansion
    void setVerticalPanelTranslation(float) -> setVerticalPanelTranslation
    void setVisibility(int) -> setVisibility
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean shouldGestureIgnoreXTouchSlop(float,float) -> shouldGestureIgnoreXTouchSlop
    boolean shouldQuickSettingsIntercept(float,float,float) -> shouldQuickSettingsIntercept
    boolean shouldUseDismissingAnimation() -> shouldUseDismissingAnimation
    void startClockAnimation(int,int) -> startClockAnimation
    void startHighlightIconAnimation(com.android.systemui.statusbar.KeyguardAffordanceView) -> startHighlightIconAnimation
    void startQsSizeChangeAnimation(int,int) -> startQsSizeChangeAnimation
    void startUnlockHintAnimation() -> startUnlockHintAnimation
    void trackMovement(android.view.MotionEvent) -> trackMovement
    void updateClock(float,float) -> updateClock
    void updateDozingVisibilities(boolean) -> updateDozingVisibilities
    void updateEmptyShadeView() -> updateEmptyShadeView
    void updateExpandedHeight(float) -> updateExpandedHeight
    void updateFullyVisibleState(boolean) -> updateFullyVisibleState
    void updateHeader() -> updateHeader
    void updateHeaderKeyguardAlpha() -> updateHeaderKeyguardAlpha
    void updateKeyguardBottomAreaAlpha() -> updateKeyguardBottomAreaAlpha
    void updateMaxHeadsUpTranslation() -> updateMaxHeadsUpTranslation
    void updateNotificationTranslucency() -> updateNotificationTranslucency
    void updatePanelExpanded() -> updatePanelExpanded
    void updateQsExpansion() -> updateQsExpansion
    void updateQsState() -> updateQsState
    void updateStatusBarIcons() -> updateStatusBarIcons
    void updateUnlockIcon() -> updateUnlockIcon
    void updateVerticalPanelPosition(float) -> updateVerticalPanelPosition
    void <clinit>() -> <clinit>
    java.lang.Runnable -get0(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get0
    int -get1(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get1
    int -get2(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get2
    android.animation.Animator -get3(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get3
    float -get4(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get4
    android.graphics.Rect -get5() -> -get5
    boolean -get6(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get6
    com.android.systemui.statusbar.phone.KeyguardStatusBarView -get7(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get7
    com.android.keyguard.KeyguardStatusView -get8(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get8
    java.lang.String -get9(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get9
    com.android.systemui.plugins.qs.QS -get10(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get10
    android.animation.ValueAnimator -get11(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get11
    boolean -get12(com.android.systemui.statusbar.phone.NotificationPanelView) -> -get12
    int -set0(com.android.systemui.statusbar.phone.NotificationPanelView,int) -> -set0
    int -set1(com.android.systemui.statusbar.phone.NotificationPanelView,int) -> -set1
    android.animation.Animator -set2(com.android.systemui.statusbar.phone.NotificationPanelView,android.animation.Animator) -> -set2
    float -set3(com.android.systemui.statusbar.phone.NotificationPanelView,float) -> -set3
    boolean -set4(com.android.systemui.statusbar.phone.NotificationPanelView,boolean) -> -set4
    com.android.systemui.plugins.qs.QS -set5(com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.plugins.qs.QS) -> -set5
    android.animation.ValueAnimator -set6(com.android.systemui.statusbar.phone.NotificationPanelView,android.animation.ValueAnimator) -> -set6
    android.animation.ValueAnimator -set7(com.android.systemui.statusbar.phone.NotificationPanelView,android.animation.ValueAnimator) -> -set7
    boolean -set8(com.android.systemui.statusbar.phone.NotificationPanelView,boolean) -> -set8
    void -wrap0(com.android.systemui.statusbar.phone.NotificationPanelView,float) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.NotificationPanelView,boolean) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.phone.NotificationPanelView,boolean) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.phone.NotificationPanelView,float) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.phone.NotificationPanelView) -> -wrap4
    void -wrap5(com.android.systemui.statusbar.phone.NotificationPanelView) -> -wrap5
com.android.systemui.statusbar.-$Lambda$abXbX53Lopwo-4Vedqn7ystL8Qc -> com.android.systemui.statusbar.-$Lambda$abXbX53Lopwo-4Vedqn7ystL8Qc:
    com.android.systemui.statusbar.-$Lambda$abXbX53Lopwo-4Vedqn7ystL8Qc $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    java.lang.Object $m$0(java.lang.Object) -> $m$0
    java.lang.Object apply(java.lang.Object) -> apply
com.android.systemui.statusbar.policy.FlashlightController$FlashlightListener -> com.android.systemui.statusbar.policy.FlashlightController$FlashlightListener:
    void onFlashlightAvailabilityChanged(boolean) -> onFlashlightAvailabilityChanged
    void onFlashlightChanged(boolean) -> onFlashlightChanged
    void onFlashlightError() -> onFlashlightError
com.android.systemui.volume.SegmentedButtons -> com.android.systemui.volume.SegmentedButtons:
    android.graphics.Typeface MEDIUM -> MEDIUM
    android.graphics.Typeface REGULAR -> REGULAR
    com.android.systemui.volume.SegmentedButtons$Callback mCallback -> mCallback
    android.view.View$OnClickListener mClick -> mClick
    com.android.systemui.volume.ConfigurableTexts mConfigurableTexts -> mConfigurableTexts
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    java.lang.Object mSelectedValue -> mSelectedValue
    void addButton(int,int,java.lang.Object) -> addButton
    void setCallback(com.android.systemui.volume.SegmentedButtons$Callback) -> setCallback
    void update() -> update
    void setSelectedValue(java.lang.Object,boolean) -> setSelectedValue
    java.lang.Object getSelectedValue() -> getSelectedValue
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void fireInteraction() -> fireInteraction
    void fireOnSelected(boolean) -> fireOnSelected
    android.widget.Button inflateButton() -> inflateButton
    void setSelectedStyle(android.widget.TextView,boolean) -> setSelectedStyle
    void <clinit>() -> <clinit>
    void -wrap0(com.android.systemui.volume.SegmentedButtons) -> -wrap0
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL -> IMPL
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    float getElevation(android.view.View) -> getElevation
    boolean isLaidOut(android.view.View) -> isLaidOut
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void <init>() -> <init>
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    void setElevation(android.view.View,float) -> setElevation
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    float getTranslationY(android.view.View) -> getTranslationY
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    boolean hasTransientState(android.view.View) -> hasTransientState
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void <clinit>() -> <clinit>
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    android.view.Display getDisplay(android.view.View) -> getDisplay
com.google.protobuf.nano.WireFormatNano -> com.google.protobuf.nano.WireFormatNano:
    long[] EMPTY_LONG_ARRAY -> EMPTY_LONG_ARRAY
    float[] EMPTY_FLOAT_ARRAY -> EMPTY_FLOAT_ARRAY
    boolean[] EMPTY_BOOLEAN_ARRAY -> EMPTY_BOOLEAN_ARRAY
    byte[][] EMPTY_BYTES_ARRAY -> EMPTY_BYTES_ARRAY
    java.lang.String[] EMPTY_STRING_ARRAY -> EMPTY_STRING_ARRAY
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    byte[] EMPTY_BYTES -> EMPTY_BYTES
    double[] EMPTY_DOUBLE_ARRAY -> EMPTY_DOUBLE_ARRAY
    int getRepeatedFieldArrayLength(com.google.protobuf.nano.CodedInputByteBufferNano,int) -> getRepeatedFieldArrayLength
    void <clinit>() -> <clinit>
    int getTagFieldNumber(int) -> getTagFieldNumber
    int getTagWireType(int) -> getTagWireType
    int makeTag(int,int) -> makeTag
    void <init>() -> <init>
    boolean parseUnknownField(com.google.protobuf.nano.CodedInputByteBufferNano,int) -> parseUnknownField
com.android.systemui.classifier.HistoryEvaluator$Data -> com.android.systemui.classifier.HistoryEvaluator$Data:
    float evaluation -> evaluation
    float weight -> weight
    void <init>(float) -> <init>
com.android.systemui.qs.QSAnimator$2 -> com.android.systemui.qs.QSAnimator$2:
    com.android.systemui.qs.QSAnimator this$0 -> this$0
    void <init>(com.android.systemui.qs.QSAnimator) -> <init>
    void run() -> run
com.android.systemui.recents.Recents$9 -> com.android.systemui.recents.Recents$9:
    com.android.systemui.recents.Recents this$0 -> this$0
    int val$processUser -> val$processUser
    void <init>(com.android.systemui.recents.Recents,int) -> <init>
    void run() -> run
android.support.v7.preference.SeekBarPreference -> android.support.v7.preference.SeekBarPreference:
    boolean mAdjustable -> mAdjustable
    int mSeekBarValue -> mSeekBarValue
    android.widget.SeekBar$OnSeekBarChangeListener mSeekBarChangeListener -> mSeekBarChangeListener
    int mSeekBarIncrement -> mSeekBarIncrement
    boolean mShowSeekBarValue -> mShowSeekBarValue
    int mMax -> mMax
    boolean mTrackingTouch -> mTrackingTouch
    android.widget.TextView mSeekBarValueTextView -> mSeekBarValueTextView
    android.view.View$OnKeyListener mSeekBarKeyListener -> mSeekBarKeyListener
    android.widget.SeekBar mSeekBar -> mSeekBar
    int mMin -> mMin
    void setValueInternal(int,boolean) -> setValueInternal
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void -wrap0(android.support.v7.preference.SeekBarPreference,android.widget.SeekBar) -> -wrap0
    int -get3(android.support.v7.preference.SeekBarPreference) -> -get3
    void setMax(int) -> setMax
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    boolean -get0(android.support.v7.preference.SeekBarPreference) -> -get0
    int -get1(android.support.v7.preference.SeekBarPreference) -> -get1
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.widget.SeekBar -get2(android.support.v7.preference.SeekBarPreference) -> -get2
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void setValue(int) -> setValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void setSeekBarIncrement(int) -> setSeekBarIncrement
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void syncValueInternal(android.widget.SeekBar) -> syncValueInternal
    boolean -get4(android.support.v7.preference.SeekBarPreference) -> -get4
    boolean -set0(android.support.v7.preference.SeekBarPreference,boolean) -> -set0
com.android.systemui.statusbar.phone.StatusBar$15 -> com.android.systemui.statusbar.phone.StatusBar$15:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onFinishedGoingToSleep() -> onFinishedGoingToSleep
    void onStartedGoingToSleep() -> onStartedGoingToSleep
    void onStartedWakingUp() -> onStartedWakingUp
android.support.v17.leanback.widget.NonOverlappingLinearLayoutWithForeground -> android.support.v17.leanback.widget.NonOverlappingLinearLayoutWithForeground:
    android.graphics.drawable.Drawable mForeground -> mForeground
    android.graphics.Rect mSelfBounds -> mSelfBounds
    boolean mForegroundBoundsChanged -> mForegroundBoundsChanged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void setForegroundCompat(android.graphics.drawable.Drawable) -> setForegroundCompat
com.android.systemui.statusbar.notification.VisibilityLocationProvider -> com.android.systemui.statusbar.notification.VisibilityLocationProvider:
    boolean isInVisibleLocation(com.android.systemui.statusbar.ExpandableNotificationRow) -> isInVisibleLocation
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.Object sLock -> sLock
    android.util.TypedValue sTempValue -> sTempValue
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
android.support.v7.widget.DialogTitle -> android.support.v7.widget.DialogTitle:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void onMeasure(int,int) -> onMeasure
android.support.v7.widget.Toolbar$OnMenuItemClickListener -> android.support.v7.widget.Toolbar$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.systemui.ForegroundServicesDialog$PackageItemAdapter -> com.android.systemui.ForegroundServicesDialog$PackageItemAdapter:
    android.util.IconDrawableFactory mIconDrawableFactory -> mIconDrawableFactory
    android.view.LayoutInflater mInflater -> mInflater
    android.content.pm.PackageManager mPm -> mPm
    void <init>(android.content.Context) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setPackages(java.lang.String[]) -> setPackages
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$2 -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$2:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.volume.ZenModePanel$3 -> com.android.systemui.volume.ZenModePanel$3:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    void <init>(com.android.systemui.volume.ZenModePanel) -> <init>
    void onInteraction() -> onInteraction
com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent -> com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent:
    int type_ -> type_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent[] _emptyArray -> _emptyArray
    long timeOffsetNanos_ -> timeOffsetNanos_
    int bitField0_ -> bitField0_
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int computeSerializedSize() -> computeSerializedSize
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent setType(int) -> setType
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent[] emptyArray() -> emptyArray
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent setTimeOffsetNanos(long) -> setTimeOffsetNanos
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent clear() -> clear
    void <init>() -> <init>
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
com.android.systemui.recents.model.Task -> com.android.systemui.recents.model.Task:
    int resizeMode -> resizeMode
    boolean isDockable -> isDockable
    int affiliationColor -> affiliationColor
    int affiliationTaskId -> affiliationTaskId
    java.lang.String appInfoDescription -> appInfoDescription
    android.graphics.Rect bounds -> bounds
    int colorBackground -> colorBackground
    int colorPrimary -> colorPrimary
    java.lang.String dismissDescription -> dismissDescription
    com.android.systemui.recents.model.TaskGrouping group -> group
    android.graphics.drawable.Drawable icon -> icon
    boolean isLaunchTarget -> isLaunchTarget
    boolean isLocked -> isLocked
    boolean isStackTask -> isStackTask
    boolean isSystemApp -> isSystemApp
    com.android.systemui.recents.model.Task$TaskKey key -> key
    java.util.ArrayList mCallbacks -> mCallbacks
    android.app.ActivityManager$TaskDescription taskDescription -> taskDescription
    int temporarySortIndexInStack -> temporarySortIndexInStack
    com.android.systemui.recents.model.ThumbnailData thumbnail -> thumbnail
    java.lang.String title -> title
    java.lang.String titleDescription -> titleDescription
    android.content.ComponentName topActivity -> topActivity
    boolean useLightOnPrimaryColor -> useLightOnPrimaryColor
    android.content.ComponentName getTopComponent() -> getTopComponent
    void <init>() -> <init>
    void <init>(com.android.systemui.recents.model.Task$TaskKey,int,int,android.graphics.drawable.Drawable,com.android.systemui.recents.model.ThumbnailData,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean,boolean,android.graphics.Rect,android.app.ActivityManager$TaskDescription,int,android.content.ComponentName,boolean) -> <init>
    void addCallback(com.android.systemui.recents.model.Task$TaskCallbacks) -> addCallback
    void copyFrom(com.android.systemui.recents.model.Task) -> copyFrom
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    boolean equals(java.lang.Object) -> equals
    boolean isAffiliatedTask() -> isAffiliatedTask
    boolean isFreeformTask() -> isFreeformTask
    void notifyTaskDataLoaded(com.android.systemui.recents.model.ThumbnailData,android.graphics.drawable.Drawable) -> notifyTaskDataLoaded
    void notifyTaskDataUnloaded(android.graphics.drawable.Drawable) -> notifyTaskDataUnloaded
    void removeCallback(com.android.systemui.recents.model.Task$TaskCallbacks) -> removeCallback
    void setGroup(com.android.systemui.recents.model.TaskGrouping) -> setGroup
    void setStackId(int) -> setStackId
    java.lang.String toString() -> toString
android.support.v7.view.ActionMode$Callback -> android.support.v7.view.ActionMode$Callback:
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
android.support.v7.preference.CheckBoxPreference -> android.support.v7.preference.CheckBoxPreference:
    android.support.v7.preference.CheckBoxPreference$Listener mListener -> mListener
    void syncCheckboxView(android.view.View) -> syncCheckboxView
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void performClick(android.view.View) -> performClick
    void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
com.android.systemui.AutoReinflateContainer$InflateListener -> com.android.systemui.AutoReinflateContainer$InflateListener:
    void onInflated(android.view.View) -> onInflated
com.android.systemui.statusbar.phone.StatusBar$19 -> com.android.systemui.statusbar.phone.StatusBar$19:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.systemui.statusbar.phone.DozeScrimController$8 -> com.android.systemui.statusbar.phone.DozeScrimController$8:
    com.android.systemui.statusbar.phone.DozeScrimController this$0 -> this$0
    boolean val$inFront -> val$inFront
    java.lang.Runnable val$endRunnable -> val$endRunnable
    void <init>(com.android.systemui.statusbar.phone.DozeScrimController,boolean,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.pip.phone.-$Lambda$M-ZooI5stUmj1n2x6aQGdCZpBH4 -> com.android.systemui.pip.phone.-$Lambda$M-ZooI5stUmj1n2x6aQGdCZpBH4:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> $m$0
    void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> onUserInfoChanged
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    boolean release(java.lang.Object) -> release
    java.lang.Object acquire() -> acquire
android.support.v17.leanback.widget.SearchBar$11 -> android.support.v17.leanback.widget.SearchBar$11:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    int val$resId -> val$resId
    void run() -> run
    void <init>(android.support.v17.leanback.widget.SearchBar,int) -> <init>
com.android.systemui.tuner.PluginFragment -> com.android.systemui.tuner.PluginFragment:
    com.android.systemui.plugins.PluginPrefs mPluginPrefs -> mPluginPrefs
    android.content.BroadcastReceiver mReceiver -> mReceiver
    void <init>() -> <init>
    void loadPrefs() -> loadPrefs
    void onCreate(android.os.Bundle) -> onCreate
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    void onDestroy() -> onDestroy
    java.lang.String toName(java.lang.String) -> toName
    java.lang.String toString(android.util.ArraySet) -> toString
    void lambda$-com_android_systemui_tuner_PluginFragment_3913(android.util.ArrayMap,android.content.Context,android.support.v7.preference.PreferenceScreen,android.content.pm.PackageInfo) -> lambda$-com_android_systemui_tuner_PluginFragment_3913
    void -wrap0(com.android.systemui.tuner.PluginFragment) -> -wrap0
com.android.systemui.qs.external.QSTileServiceWrapper -> com.android.systemui.qs.external.QSTileServiceWrapper:
    android.service.quicksettings.IQSTileService mService -> mService
    void <init>(android.service.quicksettings.IQSTileService) -> <init>
    boolean onTileAdded() -> onTileAdded
    boolean onTileRemoved() -> onTileRemoved
    boolean onStartListening() -> onStartListening
    boolean onStopListening() -> onStopListening
    boolean onClick(android.os.IBinder) -> onClick
    boolean onUnlockComplete() -> onUnlockComplete
    android.os.IBinder asBinder() -> asBinder
com.android.systemui.plugins.PluginInstanceManager$MainHandler -> com.android.systemui.plugins.PluginInstanceManager$MainHandler:
    com.android.systemui.plugins.PluginInstanceManager this$0 -> this$0
    void <init>(com.android.systemui.plugins.PluginInstanceManager,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v17.leanback.widget.GuidedActionsRelativeLayout -> android.support.v17.leanback.widget.GuidedActionsRelativeLayout:
    boolean mInOverride -> mInOverride
    android.support.v17.leanback.widget.GuidedActionsRelativeLayout$InterceptKeyEventListener mInterceptKeyEventListener -> mInterceptKeyEventListener
    float mKeyLinePercent -> mKeyLinePercent
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
com.android.systemui.screenshot.TakeScreenshotService$1$1 -> com.android.systemui.screenshot.TakeScreenshotService$1$1:
    com.android.systemui.screenshot.TakeScreenshotService$1 this$1 -> this$1
    android.os.Messenger val$callback -> val$callback
    void <init>(com.android.systemui.screenshot.TakeScreenshotService$1,android.os.Messenger) -> <init>
    void run() -> run
com.android.systemui.statusbar.car.-$Lambda$ELXiGoyPLg5ZablmtpJiw8QwRdc$2 -> com.android.systemui.statusbar.car.-$Lambda$ELXiGoyPLg5ZablmtpJiw8QwRdc$2:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.phone.StatusBar$5 -> com.android.systemui.statusbar.phone.StatusBar$5:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onChildLocationsChanged(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> onChildLocationsChanged
com.android.systemui.doze.DozeTriggers$ProximityCheck -> com.android.systemui.doze.DozeTriggers$ProximityCheck:
    boolean mFinished -> mFinished
    float mMaxRange -> mMaxRange
    boolean mRegistered -> mRegistered
    com.android.systemui.doze.DozeTriggers this$0 -> this$0
    void <init>(com.android.systemui.doze.DozeTriggers) -> <init>
    void check() -> check
    void finishWithResult(int) -> finishWithResult
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onProximityResult(int) -> onProximityResult
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void run() -> run
    void <init>(com.android.systemui.doze.DozeTriggers,com.android.systemui.doze.DozeTriggers$ProximityCheck) -> <init>
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
    void <init>(android.support.v4.view.ViewPager) -> <init>
com.android.settingslib.R$dimen -> com.android.settingslib.R$dimen:
    int appear_y_translation_start -> appear_y_translation_start
    int battery_height -> battery_height
    int battery_width -> battery_width
    int bt_battery_padding -> bt_battery_padding
    void <init>() -> <init>
com.android.systemui.util.wakelock.SettableWakeLock -> com.android.systemui.util.wakelock.SettableWakeLock:
    boolean mAcquired -> mAcquired
    com.android.systemui.util.wakelock.WakeLock mInner -> mInner
    void <init>(com.android.systemui.util.wakelock.WakeLock) -> <init>
    void setAcquired(boolean) -> setAcquired
com.android.systemui.statusbar.phone.NotificationPanelView$3 -> com.android.systemui.statusbar.phone.NotificationPanelView$3:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
com.android.systemui.qs.PageIndicator -> com.android.systemui.qs.PageIndicator:
    boolean mAnimating -> mAnimating
    java.lang.Runnable mAnimationDone -> mAnimationDone
    int mPageDotWidth -> mPageDotWidth
    int mPageIndicatorHeight -> mPageIndicatorHeight
    int mPageIndicatorWidth -> mPageIndicatorWidth
    int mPosition -> mPosition
    java.util.ArrayList mQueuedPositions -> mQueuedPositions
    void setLocation(float) -> setLocation
    void setNumPages(int) -> setNumPages
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animate(int,int) -> animate
    float getAlpha(boolean) -> getAlpha
    int getTransition(boolean,boolean,boolean) -> getTransition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void playAnimation(android.widget.ImageView,int) -> playAnimation
    void setIndex(int) -> setIndex
    void setPosition(int) -> setPosition
    java.util.ArrayList -get0(com.android.systemui.qs.PageIndicator) -> -get0
    boolean -set0(com.android.systemui.qs.PageIndicator,boolean) -> -set0
    void -wrap0(com.android.systemui.qs.PageIndicator,int) -> -wrap0
com.android.keyguard.KeyguardPinBasedInputView -> com.android.keyguard.KeyguardPinBasedInputView:
    com.android.keyguard.PasswordTextView mPasswordEntry -> mPasswordEntry
    android.view.View mButton0 -> mButton0
    android.view.View mButton1 -> mButton1
    android.view.View mButton2 -> mButton2
    android.view.View mButton3 -> mButton3
    android.view.View mButton4 -> mButton4
    android.view.View mButton5 -> mButton5
    android.view.View mButton6 -> mButton6
    android.view.View mButton7 -> mButton7
    android.view.View mButton8 -> mButton8
    android.view.View mButton9 -> mButton9
    android.view.View mDeleteButton -> mDeleteButton
    android.view.View mOkButton -> mOkButton
    void resetPasswordText(boolean,boolean) -> resetPasswordText
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void resetState() -> resetState
    void onFinishInflate() -> onFinishInflate
    void <init>(android.content.Context) -> <init>
    java.lang.String getPasswordText() -> getPasswordText
    int getPromtReasonStringRes(int) -> getPromtReasonStringRes
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void performClick(android.view.View) -> performClick
    void performNumberClick(int) -> performNumberClick
    void reset() -> reset
    void setPasswordEntryEnabled(boolean) -> setPasswordEntryEnabled
    void setPasswordEntryInputEnabled(boolean) -> setPasswordEntryInputEnabled
com.android.systemui.volume.VolumeDialogMotion -> com.android.systemui.volume.VolumeDialogMotion:
    java.lang.String TAG -> TAG
    boolean mAnimating -> mAnimating
    com.android.systemui.volume.VolumeDialogMotion$Callback mCallback -> mCallback
    android.view.View mChevron -> mChevron
    android.animation.ValueAnimator mChevronPositionAnimator -> mChevronPositionAnimator
    android.view.ViewGroup mContents -> mContents
    android.animation.ValueAnimator mContentsPositionAnimator -> mContentsPositionAnimator
    android.app.Dialog mDialog -> mDialog
    android.view.View mDialogView -> mDialogView
    boolean mDismissing -> mDismissing
    android.os.Handler mHandler -> mHandler
    boolean mShowing -> mShowing
    void <init>(android.app.Dialog,android.view.View,android.view.ViewGroup,android.view.View,com.android.systemui.volume.VolumeDialogMotion$Callback) -> <init>
    int chevronDistance() -> chevronDistance
    int chevronPosY() -> chevronPosY
    boolean isAnimating() -> isAnimating
    int scaledDuration(int) -> scaledDuration
    void setDismissing(boolean) -> setDismissing
    void setShowing(boolean) -> setShowing
    void startDismiss(java.lang.Runnable) -> startDismiss
    void startShow() -> startShow
    void startShowAnimation() -> startShowAnimation
    void updateAnimating() -> updateAnimating
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_volume_VolumeDialogMotion_4744(android.animation.ValueAnimator) -> lambda$-com_android_systemui_volume_VolumeDialogMotion_4744
    java.lang.String -get0() -> -get0
    android.view.View -get1(com.android.systemui.volume.VolumeDialogMotion) -> -get1
    android.animation.ValueAnimator -get2(com.android.systemui.volume.VolumeDialogMotion) -> -get2
    android.view.ViewGroup -get3(com.android.systemui.volume.VolumeDialogMotion) -> -get3
    android.app.Dialog -get4(com.android.systemui.volume.VolumeDialogMotion) -> -get4
    android.view.View -get5(com.android.systemui.volume.VolumeDialogMotion) -> -get5
    android.os.Handler -get6(com.android.systemui.volume.VolumeDialogMotion) -> -get6
    int -wrap0(com.android.systemui.volume.VolumeDialogMotion) -> -wrap0
    void -wrap1(com.android.systemui.volume.VolumeDialogMotion,boolean) -> -wrap1
    void -wrap2(com.android.systemui.volume.VolumeDialogMotion,boolean) -> -wrap2
    void -wrap3(com.android.systemui.volume.VolumeDialogMotion) -> -wrap3
com.android.systemui.settings.BrightnessController$6 -> com.android.systemui.settings.BrightnessController$6:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    void <init>(com.android.systemui.settings.BrightnessController) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.volume.VolumeDialogComponent$1 -> com.android.systemui.volume.VolumeDialogComponent$1:
    com.android.systemui.volume.VolumeDialogComponent this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogComponent) -> <init>
    void onZenPrioritySettingsClicked() -> onZenPrioritySettingsClicked
    void onZenSettingsClicked() -> onZenSettingsClicked
com.android.systemui.statusbar.phone.StatusBar$43$1$1 -> com.android.systemui.statusbar.phone.StatusBar$43$1$1:
    com.android.systemui.statusbar.phone.StatusBar$43$1 this$2 -> this$2
    com.android.systemui.statusbar.ExpandableNotificationRow val$row -> val$row
    void <init>(com.android.systemui.statusbar.phone.StatusBar$43$1,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView) -> loadFont
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.widget.TextView) -> loadFont
    void <init>() -> <init>
    android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,android.widget.TextView) -> getFont
android.support.v7.app.MediaRouteChooserDialog$MediaRouterCallback -> android.support.v7.app.MediaRouteChooserDialog$MediaRouterCallback:
    android.support.v7.app.MediaRouteChooserDialog this$0 -> this$0
    void onRouteAdded(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteAdded
    void <init>(android.support.v7.app.MediaRouteChooserDialog) -> <init>
    void onRouteRemoved(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteSelected(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteChanged
com.android.systemui.statusbar.phone.StatusBar$26 -> com.android.systemui.statusbar.phone.StatusBar$26:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.statusbar.notification.ImageTransformState -> com.android.systemui.statusbar.notification.ImageTransformState:
    android.graphics.drawable.Icon mIcon -> mIcon
    android.util.Pools$SimplePool sInstancePool -> sInstancePool
    com.android.systemui.statusbar.notification.ImageTransformState obtain() -> obtain
    void initFrom(android.view.View) -> initFrom
    void <init>() -> <init>
    void appear(float,com.android.systemui.statusbar.TransformableView) -> appear
    void disappear(float,com.android.systemui.statusbar.TransformableView) -> disappear
    android.graphics.drawable.Icon getIcon() -> getIcon
    float mapToDuration(float) -> mapToDuration
    void recycle() -> recycle
    void reset() -> reset
    boolean sameAs(com.android.systemui.statusbar.notification.TransformState) -> sameAs
    boolean transformScale(com.android.systemui.statusbar.notification.TransformState) -> transformScale
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.policy.CallbackHandler$1 -> com.android.systemui.statusbar.policy.CallbackHandler$1:
    com.android.systemui.statusbar.policy.CallbackHandler this$0 -> this$0
    boolean val$enabled -> val$enabled
    com.android.systemui.statusbar.policy.NetworkController$IconState val$statusIcon -> val$statusIcon
    com.android.systemui.statusbar.policy.NetworkController$IconState val$qsIcon -> val$qsIcon
    boolean val$activityIn -> val$activityIn
    boolean val$activityOut -> val$activityOut
    java.lang.String val$description -> val$description
    boolean val$isTransient -> val$isTransient
    void <init>(com.android.systemui.statusbar.policy.CallbackHandler,boolean,com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,boolean,boolean,java.lang.String,boolean) -> <init>
    void run() -> run
com.android.systemui.pip.tv.PipManager$3 -> com.android.systemui.pip.tv.PipManager$3:
    com.android.systemui.pip.tv.PipManager this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipManager) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.app.AppCompatDelegateImplN$AppCompatWindowCallbackN -> android.support.v7.app.AppCompatDelegateImplN$AppCompatWindowCallbackN:
    android.support.v7.app.AppCompatDelegateImplN this$0 -> this$0
    void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    void <init>(android.support.v7.app.AppCompatDelegateImplN,android.view.Window$Callback) -> <init>
android.support.v4.graphics.PathParser$PathDataNode -> android.support.v4.graphics.PathParser$PathDataNode:
    float[] mParams -> mParams
    char mType -> mType
    void <init>(char,float[]) -> <init>
    void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    void <init>(android.support.v4.graphics.PathParser$PathDataNode) -> <init>
    void interpolatePathDataNode(android.support.v4.graphics.PathParser$PathDataNode,android.support.v4.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    void nodesToPath(android.support.v4.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
    void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
android.support.v17.leanback.widget.BaseCardView$4 -> android.support.v17.leanback.widget.BaseCardView$4:
    android.support.v17.leanback.widget.BaseCardView this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.support.v17.leanback.widget.BaseCardView) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk -> com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk:
    com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    boolean $m$0(android.view.View,android.view.MotionEvent) -> $m$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v4.view.ViewCompat$ViewCompatApi16Impl -> android.support.v4.view.ViewCompat$ViewCompatApi16Impl:
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void <init>() -> <init>
    boolean hasTransientState(android.view.View) -> hasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
com.android.systemui.classifier.LengthCountClassifier -> com.android.systemui.classifier.LengthCountClassifier:
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
android.support.v7.preference.Preference$1 -> android.support.v7.preference.Preference$1:
    android.support.v7.preference.Preference this$0 -> this$0
    void <init>(android.support.v7.preference.Preference) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.SwipeHelper -> com.android.systemui.SwipeHelper:
    com.android.systemui.SwipeHelper$Callback mCallback -> mCallback
    boolean mCanCurrViewBeDimissed -> mCanCurrViewBeDimissed
    android.content.Context mContext -> mContext
    android.view.View mCurrView -> mCurrView
    float mDensityScale -> mDensityScale
    boolean mDisableHwLayers -> mDisableHwLayers
    android.util.ArrayMap mDismissPendingMap -> mDismissPendingMap
    boolean mDragging -> mDragging
    boolean mFadeDependingOnAmountSwiped -> mFadeDependingOnAmountSwiped
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    int mFalsingThreshold -> mFalsingThreshold
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    android.os.Handler mHandler -> mHandler
    float mInitialTouchPos -> mInitialTouchPos
    com.android.systemui.SwipeHelper$LongPressListener mLongPressListener -> mLongPressListener
    boolean mLongPressSent -> mLongPressSent
    long mLongPressTimeout -> mLongPressTimeout
    float mMaxSwipeProgress -> mMaxSwipeProgress
    boolean mMenuRowIntercepting -> mMenuRowIntercepting
    float mMinSwipeProgress -> mMinSwipeProgress
    float mPagingTouchSlop -> mPagingTouchSlop
    float mPerpendicularInitialTouchPos -> mPerpendicularInitialTouchPos
    boolean mSnappingChild -> mSnappingChild
    int mSwipeDirection -> mSwipeDirection
    int[] mTmpPos -> mTmpPos
    boolean mTouchAboveFalsingThreshold -> mTouchAboveFalsingThreshold
    float mTranslation -> mTranslation
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    java.lang.Runnable mWatchLongPress -> mWatchLongPress
    void <init>(int,com.android.systemui.SwipeHelper$Callback,android.content.Context) -> <init>
    android.animation.ObjectAnimator createTranslationAnimation(android.view.View,float) -> createTranslationAnimation
    void dismissChild(android.view.View,float,boolean) -> dismissChild
    void dismissChild(android.view.View,float,java.lang.Runnable,long,boolean,long,boolean) -> dismissChild
    float getEscapeVelocity() -> getEscapeVelocity
    int getFalsingThreshold() -> getFalsingThreshold
    long getMaxEscapeAnimDuration() -> getMaxEscapeAnimDuration
    float getMaxVelocity() -> getMaxVelocity
    float getPerpendicularPos(android.view.MotionEvent) -> getPerpendicularPos
    float getPos(android.view.MotionEvent) -> getPos
    float getSize(android.view.View) -> getSize
    float getSwipeAlpha(float) -> getSwipeAlpha
    float getSwipeProgressForOffset(android.view.View,float) -> getSwipeProgressForOffset
    float getTranslation(android.view.View) -> getTranslation
    float getUnscaledEscapeVelocity() -> getUnscaledEscapeVelocity
    float getVelocity(android.view.VelocityTracker) -> getVelocity
    android.animation.Animator getViewTranslationAnimator(android.view.View,float,android.animation.ValueAnimator$AnimatorUpdateListener) -> getViewTranslationAnimator
    boolean handleUpEvent(android.view.MotionEvent,android.view.View,float,float) -> handleUpEvent
    void invalidateGlobalRegion(android.view.View) -> invalidateGlobalRegion
    void invalidateGlobalRegion(android.view.View,android.graphics.RectF) -> invalidateGlobalRegion
    boolean isDismissGesture(android.view.MotionEvent) -> isDismissGesture
    boolean isFalseGesture(android.view.MotionEvent) -> isFalseGesture
    void onDownUpdate(android.view.View,android.view.MotionEvent) -> onDownUpdate
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onMoveUpdate(android.view.View,android.view.MotionEvent,float,float) -> onMoveUpdate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onTranslationUpdate(android.view.View,float,boolean) -> onTranslationUpdate
    void prepareDismissAnimation(android.view.View,android.animation.Animator) -> prepareDismissAnimation
    void prepareSnapBackAnimation(android.view.View,android.animation.Animator) -> prepareSnapBackAnimation
    void removeLongPressCallback() -> removeLongPressCallback
    void setDensityScale(float) -> setDensityScale
    void setDisableHardwareLayers(boolean) -> setDisableHardwareLayers
    void setLongPressListener(com.android.systemui.SwipeHelper$LongPressListener) -> setLongPressListener
    void setPagingTouchSlop(float) -> setPagingTouchSlop
    void setTranslation(android.view.View,float) -> setTranslation
    void snapChild(android.view.View,float,float) -> snapChild
    void snapChildIfNeeded(android.view.View,boolean,float) -> snapChildIfNeeded
    void snapChildInstantly(android.view.View) -> snapChildInstantly
    boolean swipedFarEnough() -> swipedFarEnough
    boolean swipedFastEnough() -> swipedFastEnough
    void updateSwipeProgressFromOffset(android.view.View,boolean) -> updateSwipeProgressFromOffset
    void updateSwipeProgressFromOffset(android.view.View,boolean,float) -> updateSwipeProgressFromOffset
    com.android.systemui.SwipeHelper$Callback -get0(com.android.systemui.SwipeHelper) -> -get0
    android.content.Context -get1(com.android.systemui.SwipeHelper) -> -get1
    android.view.View -get2(com.android.systemui.SwipeHelper) -> -get2
    boolean -get3(com.android.systemui.SwipeHelper) -> -get3
    android.util.ArrayMap -get4(com.android.systemui.SwipeHelper) -> -get4
    com.android.systemui.SwipeHelper$LongPressListener -get5(com.android.systemui.SwipeHelper) -> -get5
    boolean -get6(com.android.systemui.SwipeHelper) -> -get6
    int[] -get7(com.android.systemui.SwipeHelper) -> -get7
    boolean -set0(com.android.systemui.SwipeHelper,boolean) -> -set0
    boolean -set1(com.android.systemui.SwipeHelper,boolean) -> -set1
    void -wrap0(com.android.systemui.SwipeHelper,android.view.View,boolean) -> -wrap0
android.support.v17.leanback.widget.SearchBar$5 -> android.support.v17.leanback.widget.SearchBar$5:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void onKeyboardDismiss() -> onKeyboardDismiss
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
com.android.systemui.qs.AutoAddTracker -> com.android.systemui.qs.AutoAddTracker:
    java.lang.String[][] CONVERT_PREFS -> CONVERT_PREFS
    android.util.ArraySet mAutoAdded -> mAutoAdded
    android.content.Context mContext -> mContext
    android.database.ContentObserver mObserver -> mObserver
    void <init>(android.content.Context) -> <init>
    java.util.Collection getAdded() -> getAdded
    boolean isAdded(java.lang.String) -> isAdded
    void saveTiles() -> saveTiles
    void setTileAdded(java.lang.String) -> setTileAdded
    void <clinit>() -> <clinit>
    android.util.ArraySet -get0(com.android.systemui.qs.AutoAddTracker) -> -get0
    java.util.Collection -wrap0(com.android.systemui.qs.AutoAddTracker) -> -wrap0
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v7.widget.SearchView$UpdatableTouchDelegate -> android.support.v7.widget.SearchView$UpdatableTouchDelegate:
    android.graphics.Rect mActualBounds -> mActualBounds
    android.view.View mDelegateView -> mDelegateView
    android.graphics.Rect mTargetBounds -> mTargetBounds
    int mSlop -> mSlop
    android.graphics.Rect mSlopBounds -> mSlopBounds
    boolean mDelegateTargeted -> mDelegateTargeted
    void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
    void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.assist.AssistOrbView$2 -> com.android.systemui.assist.AssistOrbView$2:
    com.android.systemui.assist.AssistOrbView this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistOrbView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.AppCompatDrawableManager -> android.support.v7.widget.AppCompatDrawableManager:
    int[] TINT_COLOR_CONTROL_STATE_LIST -> TINT_COLOR_CONTROL_STATE_LIST
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> DEFAULT_MODE
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> COLORFILTER_COLOR_CONTROL_ACTIVATED
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> COLORFILTER_TINT_COLOR_CONTROL_NORMAL
    boolean mHasCheckedVectorDrawableSetup -> mHasCheckedVectorDrawableSetup
    android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags -> mKnownDrawableIdTags
    android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE -> COLOR_FILTER_CACHE
    java.util.WeakHashMap mTintLists -> mTintLists
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> COLORFILTER_COLOR_BACKGROUND_MULTIPLY
    android.support.v4.util.ArrayMap mDelegates -> mDelegates
    int[] TINT_CHECKABLE_BUTTON_LIST -> TINT_CHECKABLE_BUTTON_LIST
    android.support.v7.widget.AppCompatDrawableManager INSTANCE -> INSTANCE
    android.util.TypedValue mTypedValue -> mTypedValue
    int[] TINT_COLOR_CONTROL_NORMAL -> TINT_COLOR_CONTROL_NORMAL
    java.util.WeakHashMap mDrawableCaches -> mDrawableCaches
    java.lang.Object mDrawableCacheLock -> mDrawableCacheLock
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate) -> addDelegate
    android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager) -> installDefaultInflateDelegates
    android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    boolean arrayContains(int[],int) -> arrayContains
    boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
    android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    long createCacheKey(android.util.TypedValue) -> createCacheKey
    android.support.v7.widget.AppCompatDrawableManager get() -> get
    void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]) -> tintDrawable
    void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    void <clinit>() -> <clinit>
    android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    void <init>() -> <init>
com.android.systemui.statusbar.phone.FingerprintUnlockController$3 -> com.android.systemui.statusbar.phone.FingerprintUnlockController$3:
    com.android.systemui.statusbar.phone.FingerprintUnlockController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> <init>
    void onScreenTurnedOn() -> onScreenTurnedOn
com.android.keyguard.KeyguardUpdateMonitor$DisplayClientState -> com.android.keyguard.KeyguardUpdateMonitor$DisplayClientState:
    void <init>() -> <init>
com.android.systemui.statusbar.policy.EncryptionHelper -> com.android.systemui.statusbar.policy.EncryptionHelper:
    boolean IS_DATA_ENCRYPTED -> IS_DATA_ENCRYPTED
    void <init>() -> <init>
    boolean isDataEncrypted() -> isDataEncrypted
    void <clinit>() -> <clinit>
android.support.v4.util.CircularIntArray -> android.support.v4.util.CircularIntArray:
    int mHead -> mHead
    int mCapacityBitmask -> mCapacityBitmask
    int[] mElements -> mElements
    int mTail -> mTail
    int getLast() -> getLast
    void <init>(int) -> <init>
    int get(int) -> get
    void doubleCapacity() -> doubleCapacity
    void clear() -> clear
    int size() -> size
    void addLast(int) -> addLast
    int popLast() -> popLast
    void <init>() -> <init>
com.android.systemui.classifier.ClassifierData -> com.android.systemui.classifier.ClassifierData:
    android.util.SparseArray mCurrentStrokes -> mCurrentStrokes
    float mDpi -> mDpi
    java.util.ArrayList mEndingStrokes -> mEndingStrokes
    void <init>(float) -> <init>
    void cleanUp(android.view.MotionEvent) -> cleanUp
    java.util.ArrayList getEndingStrokes() -> getEndingStrokes
    com.android.systemui.classifier.Stroke getStroke(int) -> getStroke
    void update(android.view.MotionEvent) -> update
com.android.settingslib.drawer.DashboardCategory -> com.android.settingslib.drawer.DashboardCategory:
    int priority -> priority
    java.lang.String key -> key
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List tiles -> tiles
    java.lang.CharSequence title -> title
    boolean DEBUG -> DEBUG
    void readFromParcel(android.os.Parcel) -> readFromParcel
    void addTile(com.android.settingslib.drawer.Tile) -> addTile
    int describeContents() -> describeContents
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
android.support.v7.widget.ActivityChooserView -> android.support.v7.widget.ActivityChooserView:
    int mDefaultActionButtonContentDescription -> mDefaultActionButtonContentDescription
    android.support.v7.widget.ListPopupWindow mListPopupWindow -> mListPopupWindow
    int mListPopupMaxWidth -> mListPopupMaxWidth
    int mInitialActivityCount -> mInitialActivityCount
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> mActivityChooserContentBackground
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    android.support.v4.view.ActionProvider mProvider -> mProvider
    android.support.v7.widget.ActivityChooserView$Callbacks mCallbacks -> mCallbacks
    android.widget.FrameLayout mExpandActivityOverflowButton -> mExpandActivityOverflowButton
    android.widget.ImageView mExpandActivityOverflowButtonImage -> mExpandActivityOverflowButtonImage
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    android.widget.ImageView mDefaultActivityButtonImage -> mDefaultActivityButtonImage
    boolean mIsSelectingDefaultActivity -> mIsSelectingDefaultActivity
    android.widget.FrameLayout mDefaultActivityButton -> mDefaultActivityButton
    android.database.DataSetObserver mModelDataSetObserver -> mModelDataSetObserver
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> mOnGlobalLayoutListener
    android.support.v7.widget.LinearLayoutCompat mActivityChooserContent -> mActivityChooserContent
    android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> mAdapter
    void onAttachedToWindow() -> onAttachedToWindow
    void updateAppearance() -> updateAppearance
    void showPopupUnchecked(int) -> showPopupUnchecked
    boolean isShowingPopup() -> isShowingPopup
    void onMeasure(int,int) -> onMeasure
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.support.v7.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean showPopup() -> showPopup
    boolean dismissPopup() -> dismissPopup
    void onDetachedFromWindow() -> onDetachedFromWindow
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v7.app.AlertDialog -> android.support.v7.app.AlertDialog:
    android.support.v7.app.AlertController mAlert -> mAlert
    void onCreate(android.os.Bundle) -> onCreate
    void <init>(android.content.Context,int) -> <init>
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    void setTitle(java.lang.CharSequence) -> setTitle
com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment -> com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment:
    int mClickedDialogEntryIndex -> mClickedDialogEntryIndex
    void <init>() -> <init>
    com.android.systemui.tuner.CustomListPreference getCustomizablePreference() -> getCustomizablePreference
    android.content.DialogInterface$OnClickListener getOnItemClickListener() -> getOnItemClickListener
    java.lang.String getValue() -> getValue
    android.support.v14.preference.ListPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDialogClosed(boolean) -> onDialogClosed
    void onItemConfirmed() -> onItemConfirmed
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setClickedDialogEntryIndex(int) -> setClickedDialogEntryIndex
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$3 -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$3:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    boolean $m$0(android.support.v7.preference.Preference,java.lang.Object) -> $m$0
    boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object) -> onPreferenceChange
com.android.systemui.statusbar.phone.StatusBar$NotificationClicker -> com.android.systemui.statusbar.phone.StatusBar$NotificationClicker:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onClick(android.view.View) -> onClick
    void register(com.android.systemui.statusbar.ExpandableNotificationRow,android.service.notification.StatusBarNotification) -> register
    boolean shouldAutoCancel(android.service.notification.StatusBarNotification) -> shouldAutoCancel
    boolean -wrap0(com.android.systemui.statusbar.phone.StatusBar$NotificationClicker,android.service.notification.StatusBarNotification) -> -wrap0
    void <init>(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.phone.StatusBar$NotificationClicker) -> <init>
com.android.systemui.qs.QSSecurityFooter$Callback -> com.android.systemui.qs.QSSecurityFooter$Callback:
    com.android.systemui.qs.QSSecurityFooter this$0 -> this$0
    void <init>(com.android.systemui.qs.QSSecurityFooter) -> <init>
    void onStateChanged() -> onStateChanged
    void <init>(com.android.systemui.qs.QSSecurityFooter,com.android.systemui.qs.QSSecurityFooter$Callback) -> <init>
com.android.systemui.qs.QSPanel$2 -> com.android.systemui.qs.QSPanel$2:
    com.android.systemui.qs.QSPanel this$0 -> this$0
    android.view.View val$v -> val$v
    void <init>(com.android.systemui.qs.QSPanel,android.view.View) -> <init>
    void run() -> run
com.android.systemui.volume.ZenModePanel -> com.android.systemui.volume.ZenModePanel:
    android.content.Intent ZEN_SETTINGS -> ZEN_SETTINGS
    android.content.Intent ZEN_PRIORITY_SETTINGS -> ZEN_PRIORITY_SETTINGS
    boolean DEBUG -> DEBUG
    int DEFAULT_BUCKET_INDEX -> DEFAULT_BUCKET_INDEX
    int MAX_BUCKET_MINUTES -> MAX_BUCKET_MINUTES
    int[] MINUTE_BUCKETS -> MINUTE_BUCKETS
    int MIN_BUCKET_MINUTES -> MIN_BUCKET_MINUTES
    boolean mAttached -> mAttached
    int mAttachedZen -> mAttachedZen
    android.view.View mAutoRule -> mAutoRule
    android.widget.TextView mAutoTitle -> mAutoTitle
    int mBucketIndex -> mBucketIndex
    com.android.systemui.volume.ZenModePanel$Callback mCallback -> mCallback
    com.android.systemui.volume.ConfigurableTexts mConfigurableTexts -> mConfigurableTexts
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.ZenModeController mController -> mController
    android.view.ViewGroup mEdit -> mEdit
    android.view.View mEmpty -> mEmpty
    android.widget.ImageView mEmptyIcon -> mEmptyIcon
    android.widget.TextView mEmptyText -> mEmptyText
    android.service.notification.Condition mExitCondition -> mExitCondition
    boolean mExpanded -> mExpanded
    android.net.Uri mForeverId -> mForeverId
    com.android.systemui.volume.ZenModePanel$H mHandler -> mHandler
    boolean mHidden -> mHidden
    android.view.LayoutInflater mInflater -> mInflater
    com.android.systemui.volume.Interaction$Callback mInteractionCallback -> mInteractionCallback
    com.android.systemui.volume.ZenModePanel$ZenPrefs mPrefs -> mPrefs
    android.service.notification.Condition mSessionExitCondition -> mSessionExitCondition
    int mSessionZen -> mSessionZen
    int mState -> mState
    java.lang.String mTag -> mTag
    com.android.systemui.volume.ZenModePanel$TransitionHelper mTransitionHelper -> mTransitionHelper
    boolean mVoiceCapable -> mVoiceCapable
    android.widget.TextView mZenAlarmWarning -> mZenAlarmWarning
    com.android.systemui.volume.SegmentedButtons mZenButtons -> mZenButtons
    com.android.systemui.volume.SegmentedButtons$Callback mZenButtonsCallback -> mZenButtonsCallback
    com.android.systemui.statusbar.policy.ZenModeController$Callback mZenCallback -> mZenCallback
    android.widget.LinearLayout mZenConditions -> mZenConditions
    android.view.View mZenIntroduction -> mZenIntroduction
    android.view.View mZenIntroductionConfirm -> mZenIntroductionConfirm
    android.widget.TextView mZenIntroductionCustomize -> mZenIntroductionCustomize
    android.widget.TextView mZenIntroductionMessage -> mZenIntroductionMessage
    int mZenModeButtonLayoutId -> mZenModeButtonLayoutId
    int mZenModeConditionLayoutId -> mZenModeConditionLayoutId
    android.widget.RadioGroup mZenRadioGroup -> mZenRadioGroup
    android.widget.LinearLayout mZenRadioGroupContent -> mZenRadioGroupContent
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addZenConditions(int) -> addZenConditions
    void announceConditionSelection(com.android.systemui.volume.ZenModePanel$ConditionTag) -> announceConditionSelection
    void bind(android.service.notification.Condition,android.view.View,int) -> bind
    void bindGenericCountdown() -> bindGenericCountdown
    void bindNextAlarm(android.service.notification.Condition) -> bindNextAlarm
    void checkForAttachedZenChange() -> checkForAttachedZenChange
    java.lang.String computeAlarmWarningText(boolean) -> computeAlarmWarningText
    void confirmZenIntroduction() -> confirmZenIntroduction
    android.service.notification.Condition copy(android.service.notification.Condition) -> copy
    android.service.notification.Condition createCondition(android.net.Uri) -> createCondition
    void createZenButtons() -> createZenButtons
    void fireExpanded() -> fireExpanded
    void fireInteraction() -> fireInteraction
    android.service.notification.Condition forever() -> forever
    java.lang.String foreverSummary(android.content.Context) -> foreverSummary
    android.net.Uri getConditionId(android.service.notification.Condition) -> getConditionId
    com.android.systemui.volume.ZenModePanel$ConditionTag getConditionTagAt(int) -> getConditionTagAt
    android.net.Uri getRealConditionId(android.service.notification.Condition) -> getRealConditionId
    int getSelectedZen(int) -> getSelectedZen
    android.service.notification.Condition getTimeUntilNextAlarmCondition() -> getTimeUntilNextAlarmCondition
    android.view.View getView(int) -> getView
    int getVisibleConditions() -> getVisibleConditions
    void handleUpdateConditions(android.service.notification.Condition) -> handleUpdateConditions
    void handleUpdateManualRule(android.service.notification.ZenModeConfig$ZenRule) -> handleUpdateManualRule
    void handleUpdateZen(int) -> handleUpdateZen
    void hideAllConditions() -> hideAllConditions
    void init(com.android.systemui.statusbar.policy.ZenModeController) -> init
    boolean isAlarm(android.service.notification.Condition) -> isAlarm
    boolean isCountdown(android.service.notification.Condition) -> isCountdown
    boolean isForever(android.service.notification.Condition) -> isForever
    void onAttach() -> onAttach
    void onClickTimeButton(android.view.View,com.android.systemui.volume.ZenModePanel$ConditionTag,boolean,int) -> onClickTimeButton
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetach() -> onDetach
    void onFinishInflate() -> onFinishInflate
    void onVisibilityAggregated(boolean) -> onVisibilityAggregated
    java.lang.String prefKeyForConfirmation(int) -> prefKeyForConfirmation
    void select(android.service.notification.Condition) -> select
    void setAttached(boolean) -> setAttached
    void setAutoText(java.lang.CharSequence) -> setAutoText
    void setCallback(com.android.systemui.volume.ZenModePanel$Callback) -> setCallback
    void setEmptyState(int,int) -> setEmptyState
    void setExitCondition(android.service.notification.Condition) -> setExitCondition
    void setExpanded(boolean) -> setExpanded
    void setSessionExitCondition(android.service.notification.Condition) -> setSessionExitCondition
    void setState(int) -> setState
    void setToMidnight(java.util.Calendar) -> setToMidnight
    void transitionFrom(android.view.View,android.view.View) -> transitionFrom
    void updateWidgets() -> updateWidgets
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_volume_ZenModePanel_7746(android.view.View) -> lambda$-com_android_systemui_volume_ZenModePanel_7746
    void lambda$-com_android_systemui_volume_ZenModePanel_7914(android.view.View) -> lambda$-com_android_systemui_volume_ZenModePanel_7914
    void lambda$-com_android_systemui_volume_ZenModePanel_8947(int,int) -> lambda$-com_android_systemui_volume_ZenModePanel_8947
    void lambda$-com_android_systemui_volume_ZenModePanel_9132(java.lang.CharSequence) -> lambda$-com_android_systemui_volume_ZenModePanel_9132
    void lambda$-com_android_systemui_volume_ZenModePanel_9407(android.view.View,android.view.View) -> lambda$-com_android_systemui_volume_ZenModePanel_9407
    void lambda$-com_android_systemui_volume_ZenModePanel_9711(android.view.View) -> lambda$-com_android_systemui_volume_ZenModePanel_9711
    boolean -get0() -> -get0
    int -get1() -> -get1
    int[] -get2() -> -get2
    android.content.Context -get3(com.android.systemui.volume.ZenModePanel) -> -get3
    com.android.systemui.statusbar.policy.ZenModeController -get4(com.android.systemui.volume.ZenModePanel) -> -get4
    boolean -get5(com.android.systemui.volume.ZenModePanel) -> -get5
    com.android.systemui.volume.ZenModePanel$H -get6(com.android.systemui.volume.ZenModePanel) -> -get6
    android.service.notification.Condition -get7(com.android.systemui.volume.ZenModePanel) -> -get7
    int -get8(com.android.systemui.volume.ZenModePanel) -> -get8
    java.lang.String -get9(com.android.systemui.volume.ZenModePanel) -> -get9
    android.net.Uri -wrap0(com.android.systemui.volume.ZenModePanel,android.service.notification.Condition) -> -wrap0
    void -wrap1(com.android.systemui.volume.ZenModePanel,com.android.systemui.volume.ZenModePanel$ConditionTag) -> -wrap1
    void -wrap2(com.android.systemui.volume.ZenModePanel) -> -wrap2
    void -wrap3(com.android.systemui.volume.ZenModePanel,android.view.View,com.android.systemui.volume.ZenModePanel$ConditionTag,boolean,int) -> -wrap3
    void -wrap4(com.android.systemui.volume.ZenModePanel,android.service.notification.Condition) -> -wrap4
    void -wrap5(com.android.systemui.volume.ZenModePanel) -> -wrap5
com.android.systemui.statusbar.phone.DoubleTapHelper$DoubleTapListener -> com.android.systemui.statusbar.phone.DoubleTapHelper$DoubleTapListener:
    boolean onDoubleTap() -> onDoubleTap
com.android.systemui.HardwareBgDrawable -> com.android.systemui.HardwareBgDrawable:
    android.graphics.drawable.Drawable[] mLayers -> mLayers
    android.graphics.Paint mPaint -> mPaint
    int mPoint -> mPoint
    boolean mRotatedBackground -> mRotatedBackground
    boolean mRoundTop -> mRoundTop
    void <init>(boolean,android.graphics.drawable.Drawable[]) -> <init>
    void <init>(boolean,boolean,android.content.Context) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getCutPoint() -> getCutPoint
    android.graphics.drawable.Drawable[] getLayers(android.content.Context,boolean,boolean) -> getLayers
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setCutPoint(int) -> setCutPoint
    void setRotatedBackground(boolean) -> setRotatedBackground
com.android.systemui.qs.QSDetailItems$Adapter$1 -> com.android.systemui.qs.QSDetailItems$Adapter$1:
    com.android.systemui.qs.QSDetailItems$Adapter this$1 -> this$1
    com.android.systemui.qs.QSDetailItems$Item val$item -> val$item
    void <init>(com.android.systemui.qs.QSDetailItems$Adapter,com.android.systemui.qs.QSDetailItems$Item) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.stackdivider.DividerView$1 -> com.android.systemui.stackdivider.DividerView$1:
    com.android.systemui.stackdivider.DividerView this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.DividerView) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v17.leanback.widget.StaticShadowHelper$ShadowHelperStubImpl -> android.support.v17.leanback.widget.StaticShadowHelper$ShadowHelperStubImpl:
    void <init>() -> <init>
android.support.v17.leanback.transition.SlideKitkat$5 -> android.support.v17.leanback.transition.SlideKitkat$5:
    void <init>() -> <init>
    float getGone(android.view.View) -> getGone
com.android.systemui.settings.ToggleSliderView$2 -> com.android.systemui.settings.ToggleSliderView$2:
    com.android.systemui.settings.ToggleSliderView this$0 -> this$0
    void <init>(com.android.systemui.settings.ToggleSliderView) -> <init>
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.android.systemui.recents.events.Subscriber -> com.android.systemui.recents.events.Subscriber:
    java.lang.ref.WeakReference mSubscriber -> mSubscriber
    long registrationTime -> registrationTime
    void <init>(java.lang.Object,long) -> <init>
    java.lang.Object getReference() -> getReference
    java.lang.String toString(int) -> toString
com.android.systemui.statusbar.stack.StackScrollState -> com.android.systemui.statusbar.stack.StackScrollState:
    android.view.ViewGroup mHostView -> mHostView
    java.util.WeakHashMap mStateMap -> mStateMap
    com.android.systemui.statusbar.stack.ExpandableViewState getViewStateForView(android.view.View) -> getViewStateForView
    void <init>(android.view.ViewGroup) -> <init>
    void removeViewStateForView(android.view.View) -> removeViewStateForView
    void apply() -> apply
    android.view.ViewGroup getHostView() -> getHostView
    void resetViewState(com.android.systemui.statusbar.ExpandableView) -> resetViewState
    void resetViewStates() -> resetViewStates
android.support.v7.media.RegisteredMediaRouteProviderWatcher$1 -> android.support.v7.media.RegisteredMediaRouteProviderWatcher$1:
    android.support.v7.media.RegisteredMediaRouteProviderWatcher this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(android.support.v7.media.RegisteredMediaRouteProviderWatcher) -> <init>
com.android.systemui.qs.QSAnimator -> com.android.systemui.qs.QSAnimator:
    java.util.ArrayList mAllViews -> mAllViews
    boolean mAllowFancy -> mAllowFancy
    com.android.systemui.qs.TouchAnimator mBrightnessAnimator -> mBrightnessAnimator
    com.android.systemui.qs.TouchAnimator mFirstPageAnimator -> mFirstPageAnimator
    com.android.systemui.qs.TouchAnimator mFirstPageDelayedAnimator -> mFirstPageDelayedAnimator
    boolean mFullRows -> mFullRows
    com.android.systemui.qs.QSTileHost mHost -> mHost
    float mLastPosition -> mLastPosition
    com.android.systemui.qs.TouchAnimator$Listener mNonFirstPageListener -> mNonFirstPageListener
    com.android.systemui.qs.TouchAnimator mNonfirstPageAnimator -> mNonfirstPageAnimator
    int mNumQuickTiles -> mNumQuickTiles
    boolean mOnFirstPage -> mOnFirstPage
    boolean mOnKeyguard -> mOnKeyguard
    com.android.systemui.qs.PagedTileLayout mPagedLayout -> mPagedLayout
    com.android.systemui.plugins.qs.QS mQs -> mQs
    com.android.systemui.qs.QSPanel mQsPanel -> mQsPanel
    com.android.systemui.qs.QuickQSPanel mQuickQsPanel -> mQuickQsPanel
    java.util.ArrayList mTopFiveQs -> mTopFiveQs
    com.android.systemui.qs.TouchAnimator mTranslationXAnimator -> mTranslationXAnimator
    com.android.systemui.qs.TouchAnimator mTranslationYAnimator -> mTranslationYAnimator
    java.lang.Runnable mUpdateAnimators -> mUpdateAnimators
    void <init>(com.android.systemui.plugins.qs.QS,com.android.systemui.qs.QuickQSPanel,com.android.systemui.qs.QSPanel) -> <init>
    void onRtlChanged() -> onRtlChanged
    void setHost(com.android.systemui.qs.QSTileHost) -> setHost
    void setOnKeyguard(boolean) -> setOnKeyguard
    void setPosition(float) -> setPosition
    void clearAnimationState() -> clearAnimationState
    void getRelativePosition(int[],android.view.View,android.view.View) -> getRelativePosition
    void getRelativePositionInt(int[],android.view.View,android.view.View) -> getRelativePositionInt
    boolean isIconInAnimatedRow(int) -> isIconInAnimatedRow
    void onAnimationAtEnd() -> onAnimationAtEnd
    void onAnimationAtStart() -> onAnimationAtStart
    void onAnimationStarted() -> onAnimationStarted
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    void onPageChanged(boolean) -> onPageChanged
    void onTilesChanged() -> onTilesChanged
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void updateAnimators() -> updateAnimators
    float -get0(com.android.systemui.qs.QSAnimator) -> -get0
    com.android.systemui.qs.QuickQSPanel -get1(com.android.systemui.qs.QSAnimator) -> -get1
    void -wrap0(com.android.systemui.qs.QSAnimator) -> -wrap0
com.android.systemui.volume.VolumeDialogMotion$LogAccelerateInterpolator -> com.android.systemui.volume.VolumeDialogMotion$LogAccelerateInterpolator:
    int mBase -> mBase
    int mDrift -> mDrift
    float mLogScale -> mLogScale
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    float computeLog(float,int,int) -> computeLog
    float getInterpolation(float) -> getInterpolation
android.support.v7.app.MediaRouteControllerDialog$10 -> android.support.v7.app.MediaRouteControllerDialog$10:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    android.support.v7.media.MediaRouter$RouteInfo val$route -> val$route
    void onAnimationEnd() -> onAnimationEnd
    void <init>(android.support.v7.app.MediaRouteControllerDialog,android.support.v7.media.MediaRouter$RouteInfo) -> <init>
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.SearchView$3:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.pip.tv.PipManager$1 -> com.android.systemui.pip.tv.PipManager$1:
    com.android.systemui.pip.tv.PipManager this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipManager) -> <init>
    void run() -> run
android.support.v7.widget.ListPopupWindow$2 -> android.support.v7.widget.ListPopupWindow$2:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
android.support.v7.widget.AppCompatPopupWindow -> android.support.v7.widget.AppCompatPopupWindow:
    boolean mOverlapAnchor -> mOverlapAnchor
    boolean COMPAT_OVERLAP_ANCHOR -> COMPAT_OVERLAP_ANCHOR
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    void <clinit>() -> <clinit>
    void update(android.view.View,int,int,int,int) -> update
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
com.android.settingslib.animation.AppearAnimationUtils$1 -> com.android.settingslib.animation.AppearAnimationUtils$1:
    com.android.settingslib.animation.AppearAnimationUtils this$0 -> this$0
    android.view.View val$view -> val$view
    void <init>(com.android.settingslib.animation.AppearAnimationUtils,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.settingslib.core.lifecycle.LifecycleObserver -> com.android.settingslib.core.lifecycle.LifecycleObserver:
com.android.settingslib.bluetooth.BluetoothEventManager$DeviceFoundHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$DeviceFoundHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$DeviceFoundHandler) -> <init>
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$6 -> com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$6:
    int -$f0 -> -$f0
    long -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(int,long,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState -> android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState:
    int mChangingConfigurations -> mChangingConfigurations
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> mDrawableState
    android.content.res.ColorStateList mTint -> mTint
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    boolean canConstantState() -> canConstantState
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int hashCode() -> hashCode
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object[] toArray() -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.Iterator iterator() -> iterator
    boolean add(java.util.Map$Entry) -> add
    void clear() -> clear
    boolean add(java.lang.Object) -> add
    boolean equals(java.lang.Object) -> equals
    boolean remove(java.lang.Object) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean addAll(java.util.Collection) -> addAll
    void <init>(android.support.v4.util.MapCollections) -> <init>
com.android.systemui.statusbar.-$Lambda$pyaD9kAmwLJhcZMARi3qzcmc3BQ -> com.android.systemui.statusbar.-$Lambda$pyaD9kAmwLJhcZMARi3qzcmc3BQ:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void $m$1(android.animation.ValueAnimator) -> $m$1
    void $m$2(android.animation.ValueAnimator) -> $m$2
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.qs.tiles.DndTile$DndDetailAdapter -> com.android.systemui.qs.tiles.DndTile$DndDetailAdapter:
    boolean mAuto -> mAuto
    com.android.systemui.volume.ZenModePanel mZenPanel -> mZenPanel
    com.android.systemui.qs.tiles.DndTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.DndTile) -> <init>
    android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup) -> createDetailView
    int getMetricsCategory() -> getMetricsCategory
    java.lang.String getOwnerCaption(java.lang.String) -> getOwnerCaption
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.Boolean getToggleState() -> getToggleState
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void setToggleState(boolean) -> setToggleState
    void updatePanel() -> updatePanel
    void -wrap0(com.android.systemui.qs.tiles.DndTile$DndDetailAdapter) -> -wrap0
    void <init>(com.android.systemui.qs.tiles.DndTile,com.android.systemui.qs.tiles.DndTile$DndDetailAdapter) -> <init>
android.support.v4.app.FragmentController -> android.support.v4.app.FragmentController:
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    void dispatchStart() -> dispatchStart
    void doLoaderStart() -> doLoaderStart
    void doLoaderStop(boolean) -> doLoaderStop
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    void doLoaderDestroy() -> doLoaderDestroy
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> restoreLoaderNonConfig
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    void dispatchPause() -> dispatchPause
    void dispatchCreate() -> dispatchCreate
    void dispatchStop() -> dispatchStop
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    void attachHost(android.support.v4.app.Fragment) -> attachHost
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    android.os.Parcelable saveAllState() -> saveAllState
    void dispatchDestroy() -> dispatchDestroy
    void noteStateNotSaved() -> noteStateNotSaved
    void reportLoaderStart() -> reportLoaderStart
    android.support.v4.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    void dispatchReallyStop() -> dispatchReallyStop
    void <init>(android.support.v4.app.FragmentHostCallback) -> <init>
    void dispatchActivityCreated() -> dispatchActivityCreated
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void dispatchLowMemory() -> dispatchLowMemory
    void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> restoreAllState
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchResume() -> dispatchResume
    boolean execPendingActions() -> execPendingActions
    void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> createController
android.support.v7.widget.ActivityChooserView$Callbacks -> android.support.v7.widget.ActivityChooserView$Callbacks:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> notifyOnDismissListener
    boolean onLongClick(android.view.View) -> onLongClick
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.util.List mPendingCallbacks -> mPendingCallbacks
    java.lang.Object mControllerObj -> mControllerObj
    java.util.HashMap mCallbackMap -> mCallbackMap
    android.support.v4.media.session.IMediaSession mExtraBinder -> mExtraBinder
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    void requestExtraBinder() -> requestExtraBinder
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void -wrap0(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21) -> -wrap0
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.IMediaSession -set0(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21,android.support.v4.media.session.IMediaSession) -> -set0
    void processPendingCallbacks() -> processPendingCallbacks
android.support.v7.app.MediaRouteControllerDialog$12 -> android.support.v7.app.MediaRouteControllerDialog$12:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.android.systemui.pip.phone.PipTouchGesture -> com.android.systemui.pip.phone.PipTouchGesture:
    void <init>() -> <init>
    void onDown(com.android.systemui.pip.phone.PipTouchState) -> onDown
    boolean onMove(com.android.systemui.pip.phone.PipTouchState) -> onMove
    boolean onUp(com.android.systemui.pip.phone.PipTouchState) -> onUp
com.android.systemui.keyguard.KeyguardViewMediator$StartKeyguardExitAnimParams -> com.android.systemui.keyguard.KeyguardViewMediator$StartKeyguardExitAnimParams:
    long fadeoutDuration -> fadeoutDuration
    long startTime -> startTime
    void <init>(long,long) -> <init>
    void <init>(long,long,com.android.systemui.keyguard.KeyguardViewMediator$StartKeyguardExitAnimParams) -> <init>
android.support.v7.app.AppCompatDelegate$ApplyableNightMode -> android.support.v7.app.AppCompatDelegate$ApplyableNightMode:
android.support.compat.R$styleable -> android.support.compat.R$styleable:
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int[] FontFamilyFont -> FontFamilyFont
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.media.SystemMediaRouteProvider -> android.support.v7.media.SystemMediaRouteProvider:
    android.support.v7.media.SystemMediaRouteProvider obtain(android.content.Context,android.support.v7.media.SystemMediaRouteProvider$SyncCallback) -> obtain
    void <init>(android.content.Context) -> <init>
    void onSyncRouteAdded(android.support.v7.media.MediaRouter$RouteInfo) -> onSyncRouteAdded
    void onSyncRouteChanged(android.support.v7.media.MediaRouter$RouteInfo) -> onSyncRouteChanged
    void onSyncRouteRemoved(android.support.v7.media.MediaRouter$RouteInfo) -> onSyncRouteRemoved
    void onSyncRouteSelected(android.support.v7.media.MediaRouter$RouteInfo) -> onSyncRouteSelected
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$4 -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$4:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    boolean $m$0(android.support.v7.preference.Preference) -> $m$0
    boolean onPreferenceClick(android.support.v7.preference.Preference) -> onPreferenceClick
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.usb.UsbPermissionActivity -> com.android.systemui.usb.UsbPermissionActivity:
    android.hardware.usb.UsbAccessory mAccessory -> mAccessory
    android.widget.CheckBox mAlwaysUse -> mAlwaysUse
    android.widget.TextView mClearDefaultHint -> mClearDefaultHint
    android.hardware.usb.UsbDevice mDevice -> mDevice
    com.android.systemui.usb.UsbDisconnectedReceiver mDisconnectedReceiver -> mDisconnectedReceiver
    java.lang.String mPackageName -> mPackageName
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    boolean mPermissionGranted -> mPermissionGranted
    int mUid -> mUid
    void <init>() -> <init>
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.android.systemui.volume.SafetyWarningDialog -> com.android.systemui.volume.SafetyWarningDialog:
    java.lang.String TAG -> TAG
    android.media.AudioManager mAudioManager -> mAudioManager
    android.content.Context mContext -> mContext
    boolean mNewVolumeUp -> mNewVolumeUp
    android.content.BroadcastReceiver mReceiver -> mReceiver
    long mShowTime -> mShowTime
    void <init>(android.content.Context,android.media.AudioManager) -> <init>
    void cleanUp() -> cleanUp
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDismiss(android.content.DialogInterface) -> onDismiss
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onStart() -> onStart
    void <clinit>() -> <clinit>
    java.lang.String -get0() -> -get0
com.android.systemui.util.AsyncSensorManager -> com.android.systemui.util.AsyncSensorManager:
    android.os.Handler mHandler -> mHandler
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.hardware.SensorManager mInner -> mInner
    java.util.List mSensorCache -> mSensorCache
    void <init>(android.hardware.SensorManager) -> <init>
    boolean cancelTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor,boolean) -> cancelTriggerSensorImpl
    int configureDirectChannelImpl(android.hardware.SensorDirectChannel,android.hardware.Sensor,int) -> configureDirectChannelImpl
    android.hardware.SensorDirectChannel createDirectChannelImpl(android.os.MemoryFile,android.hardware.HardwareBuffer) -> createDirectChannelImpl
    void destroyDirectChannelImpl(android.hardware.SensorDirectChannel) -> destroyDirectChannelImpl
    boolean flushImpl(android.hardware.SensorEventListener) -> flushImpl
    java.util.List getFullDynamicSensorList() -> getFullDynamicSensorList
    java.util.List getFullSensorList() -> getFullSensorList
    boolean initDataInjectionImpl(boolean) -> initDataInjectionImpl
    boolean injectSensorDataImpl(android.hardware.Sensor,float[],int,long) -> injectSensorDataImpl
    void registerDynamicSensorCallbackImpl(android.hardware.SensorManager$DynamicSensorCallback,android.os.Handler) -> registerDynamicSensorCallbackImpl
    boolean registerListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler,int,int) -> registerListenerImpl
    boolean requestTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor) -> requestTriggerSensorImpl
    boolean setOperationParameterImpl(android.hardware.SensorAdditionalInfo) -> setOperationParameterImpl
    void unregisterDynamicSensorCallbackImpl(android.hardware.SensorManager$DynamicSensorCallback) -> unregisterDynamicSensorCallbackImpl
    void unregisterListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor) -> unregisterListenerImpl
    void lambda$-com_android_systemui_util_AsyncSensorManager_2518(android.hardware.SensorEventListener,android.hardware.Sensor,int,int,android.os.Handler) -> lambda$-com_android_systemui_util_AsyncSensorManager_2518
    void lambda$-com_android_systemui_util_AsyncSensorManager_3607(android.hardware.SensorManager$DynamicSensorCallback,android.os.Handler) -> lambda$-com_android_systemui_util_AsyncSensorManager_3607
    void lambda$-com_android_systemui_util_AsyncSensorManager_3803(android.hardware.SensorManager$DynamicSensorCallback) -> lambda$-com_android_systemui_util_AsyncSensorManager_3803
    void lambda$-com_android_systemui_util_AsyncSensorManager_3998(android.hardware.TriggerEventListener,android.hardware.Sensor) -> lambda$-com_android_systemui_util_AsyncSensorManager_3998
    void lambda$-com_android_systemui_util_AsyncSensorManager_4418(android.hardware.TriggerEventListener,android.hardware.Sensor) -> lambda$-com_android_systemui_util_AsyncSensorManager_4418
    void lambda$-com_android_systemui_util_AsyncSensorManager_5106(android.hardware.SensorAdditionalInfo) -> lambda$-com_android_systemui_util_AsyncSensorManager_5106
    void lambda$-com_android_systemui_util_AsyncSensorManager_5307(android.hardware.Sensor,android.hardware.SensorEventListener) -> lambda$-com_android_systemui_util_AsyncSensorManager_5307
com.android.systemui.statusbar.ExpandableNotificationRow$OnExpandClickListener -> com.android.systemui.statusbar.ExpandableNotificationRow$OnExpandClickListener:
    void onExpandClicked(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> onExpandClicked
android.support.v17.leanback.widget.NonOverlappingFrameLayout -> android.support.v17.leanback.widget.NonOverlappingFrameLayout:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
com.android.systemui.plugins.statusbar.phone.NavBarButtonProvider -> com.android.systemui.plugins.statusbar.phone.NavBarButtonProvider:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    android.view.View createView(java.lang.String,android.view.ViewGroup) -> createView
android.support.v7.app.AlertController$3 -> android.support.v7.app.AlertController$3:
    android.view.View val$top -> val$top
    android.support.v7.app.AlertController this$0 -> this$0
    android.view.View val$bottom -> val$bottom
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void run() -> run
android.support.v7.preference.ListPreference$SavedState -> android.support.v7.preference.ListPreference$SavedState:
    java.lang.String value -> value
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
android.arch.core.internal.FastSafeIterableMap -> android.arch.core.internal.FastSafeIterableMap:
    java.util.HashMap mHashMap -> mHashMap
    boolean contains(java.lang.Object) -> contains
    void <init>() -> <init>
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.SearchView$9:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.app.AppCompatDelegateImplV9$1 -> android.support.v7.app.AppCompatDelegateImplV9$1:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
com.android.systemui.classifier.HumanInteractionClassifier -> com.android.systemui.classifier.HumanInteractionClassifier:
    java.util.ArrayDeque mBufferedEvents -> mBufferedEvents
    android.content.Context mContext -> mContext
    int mCurrentType -> mCurrentType
    float mDpi -> mDpi
    boolean mEnableClassifier -> mEnableClassifier
    com.android.systemui.classifier.GestureClassifier[] mGestureClassifiers -> mGestureClassifiers
    android.os.Handler mHandler -> mHandler
    com.android.systemui.classifier.HistoryEvaluator mHistoryEvaluator -> mHistoryEvaluator
    android.database.ContentObserver mSettingsObserver -> mSettingsObserver
    com.android.systemui.classifier.StrokeClassifier[] mStrokeClassifiers -> mStrokeClassifiers
    com.android.systemui.classifier.HumanInteractionClassifier sInstance -> sInstance
    com.android.systemui.classifier.HumanInteractionClassifier getInstance(android.content.Context) -> getInstance
    boolean isEnabled() -> isEnabled
    boolean isFalseTouch() -> isFalseTouch
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void setType(int) -> setType
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void <init>(android.content.Context) -> <init>
    void addTouchEvent(android.view.MotionEvent) -> addTouchEvent
    java.lang.String getTag() -> getTag
    void updateConfiguration() -> updateConfiguration
    void <clinit>() -> <clinit>
    void -wrap0(com.android.systemui.classifier.HumanInteractionClassifier) -> -wrap0
android.support.v17.leanback.widget.ShadowHelperApi21$1 -> android.support.v17.leanback.widget.ShadowHelperApi21$1:
    void <init>() -> <init>
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.systemui.statusbar.phone.StatusBar$13 -> com.android.systemui.statusbar.phone.StatusBar$13:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
android.support.v4.view.ViewCompat$ViewCompatApi26Impl -> android.support.v4.view.ViewCompat$ViewCompatApi26Impl:
    void <init>() -> <init>
com.android.systemui.qs.customize.TileAdapter$TileItemDecoration -> com.android.systemui.qs.customize.TileAdapter$TileItemDecoration:
    android.graphics.drawable.ColorDrawable mDrawable -> mDrawable
    com.android.systemui.qs.customize.TileAdapter this$0 -> this$0
    void <init>(com.android.systemui.qs.customize.TileAdapter,android.content.Context) -> <init>
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    void <init>(com.android.systemui.qs.customize.TileAdapter,android.content.Context,com.android.systemui.qs.customize.TileAdapter$TileItemDecoration) -> <init>
com.android.systemui.volume.VolumeDialogImpl$9 -> com.android.systemui.volume.VolumeDialogImpl$9:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void run() -> run
android.support.v17.leanback.transition.FadeAndShortSlide$6 -> android.support.v17.leanback.transition.FadeAndShortSlide$6:
    android.support.v17.leanback.transition.FadeAndShortSlide this$0 -> this$0
    void <init>(android.support.v17.leanback.transition.FadeAndShortSlide) -> <init>
    float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[]) -> getGoneY
com.android.systemui.statusbar.phone.-$Lambda$M2GC-aczdMiLkSdwOGpMTs1Dam8$3 -> com.android.systemui.statusbar.phone.-$Lambda$M2GC-aczdMiLkSdwOGpMTs1Dam8$3:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(int,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.media.RegisteredMediaRouteProvider$PrivateHandler -> android.support.v7.media.RegisteredMediaRouteProvider$PrivateHandler:
    void <init>() -> <init>
com.android.systemui.statusbar.phone.FingerprintUnlockController$4 -> com.android.systemui.statusbar.phone.FingerprintUnlockController$4:
    com.android.systemui.statusbar.phone.FingerprintUnlockController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> <init>
    void run() -> run
com.android.systemui.doze.-$Lambda$BM21sPB1vu7O8NCmlw98aiyQGSU -> com.android.systemui.doze.-$Lambda$BM21sPB1vu7O8NCmlw98aiyQGSU:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v17.leanback.R$dimen -> android.support.v17.leanback.R$dimen:
    int lb_material_shadow_focused_z -> lb_material_shadow_focused_z
    int lb_material_shadow_normal_z -> lb_material_shadow_normal_z
    int lb_page_indicator_arrow_gap -> lb_page_indicator_arrow_gap
    int lb_page_indicator_arrow_radius -> lb_page_indicator_arrow_radius
    int lb_page_indicator_arrow_shadow_offset -> lb_page_indicator_arrow_shadow_offset
    int lb_page_indicator_arrow_shadow_radius -> lb_page_indicator_arrow_shadow_radius
    int lb_page_indicator_dot_gap -> lb_page_indicator_dot_gap
    int lb_page_indicator_dot_radius -> lb_page_indicator_dot_radius
    int lb_playback_transport_hero_thumbs_height -> lb_playback_transport_hero_thumbs_height
    int lb_playback_transport_hero_thumbs_width -> lb_playback_transport_hero_thumbs_width
    int lb_playback_transport_progressbar_active_bar_height -> lb_playback_transport_progressbar_active_bar_height
    int lb_playback_transport_progressbar_active_radius -> lb_playback_transport_progressbar_active_radius
    int lb_playback_transport_progressbar_bar_height -> lb_playback_transport_progressbar_bar_height
    int lb_playback_transport_thumbs_height -> lb_playback_transport_thumbs_height
    int lb_playback_transport_thumbs_margin -> lb_playback_transport_thumbs_margin
    int lb_playback_transport_thumbs_width -> lb_playback_transport_thumbs_width
    int lb_search_bar_height -> lb_search_bar_height
    int lb_search_orb_focused_z -> lb_search_orb_focused_z
    int lb_search_orb_unfocused_z -> lb_search_orb_unfocused_z
    int picker_item_height -> picker_item_height
    void <init>() -> <init>
com.android.keyguard.KeyguardPasswordView$1 -> com.android.keyguard.KeyguardPasswordView$1:
    com.android.keyguard.KeyguardPasswordView this$0 -> this$0
    int val$reason -> val$reason
    void <init>(com.android.keyguard.KeyguardPasswordView,int) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.CallbackHandler -> com.android.systemui.statusbar.policy.CallbackHandler:
    java.util.ArrayList mEmergencyListeners -> mEmergencyListeners
    java.util.ArrayList mSignalCallbacks -> mSignalCallbacks
    void <init>() -> <init>
    void setMobileDataEnabled(boolean) -> setMobileDataEnabled
    void setListening(com.android.systemui.statusbar.policy.NetworkController$EmergencyListener,boolean) -> setListening
    void setEmergencyCallsOnly(boolean) -> setEmergencyCallsOnly
    void setListening(com.android.systemui.statusbar.policy.NetworkController$SignalCallback,boolean) -> setListening
    void setNoSims(boolean,boolean) -> setNoSims
    void setSubs(java.util.List) -> setSubs
    void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController$IconState) -> setIsAirplaneMode
    void <init>(android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController$IconState) -> setEthernetIndicators
    void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,int,int,boolean,boolean,int,int,int,java.lang.String,java.lang.String,boolean,int,boolean) -> setMobileDataIndicators
    void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,boolean,boolean,java.lang.String,boolean) -> setWifiIndicators
    java.util.ArrayList -get0(com.android.systemui.statusbar.policy.CallbackHandler) -> -get0
com.android.systemui.recents.events.component.SetWaitingForTransitionStartEvent -> com.android.systemui.recents.events.component.SetWaitingForTransitionStartEvent:
    boolean waitingForTransitionStart -> waitingForTransitionStart
    void <init>(boolean) -> <init>
com.android.systemui.volume.VolumeDialogImpl$8 -> com.android.systemui.volume.VolumeDialogImpl$8:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void run() -> run
android.support.v7.preference.Preference -> android.support.v7.preference.Preference:
    boolean mIconSpaceReserved -> mIconSpaceReserved
    boolean mDependencyMet -> mDependencyMet
    java.lang.String mFragment -> mFragment
    boolean mPersistent -> mPersistent
    long mId -> mId
    java.util.List mDependents -> mDependents
    boolean mSingleLineTitle -> mSingleLineTitle
    boolean mRequiresKey -> mRequiresKey
    boolean mParentDependencyMet -> mParentDependencyMet
    int mIconResId -> mIconResId
    android.support.v7.preference.PreferenceGroup mParentGroup -> mParentGroup
    int mLayoutResId -> mLayoutResId
    java.lang.CharSequence mSummary -> mSummary
    int mViewId -> mViewId
    java.lang.String mKey -> mKey
    boolean mVisible -> mVisible
    boolean mBaseMethodCalled -> mBaseMethodCalled
    boolean mAllowDividerAbove -> mAllowDividerAbove
    android.content.Context mContext -> mContext
    boolean mAllowDividerBelow -> mAllowDividerBelow
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    java.lang.CharSequence mTitle -> mTitle
    android.support.v7.preference.Preference$OnPreferenceClickListener mOnClickListener -> mOnClickListener
    boolean mHasId -> mHasId
    boolean mSelectable -> mSelectable
    android.support.v7.preference.Preference$OnPreferenceChangeInternalListener mListener -> mListener
    android.support.v7.preference.PreferenceDataStore mPreferenceDataStore -> mPreferenceDataStore
    boolean mEnabled -> mEnabled
    android.view.View$OnClickListener mClickListener -> mClickListener
    android.support.v7.preference.Preference$OnPreferenceChangeListener mOnChangeListener -> mOnChangeListener
    boolean mShouldDisableView -> mShouldDisableView
    boolean mHasSingleLineTitleAttr -> mHasSingleLineTitleAttr
    int mOrder -> mOrder
    android.content.Intent mIntent -> mIntent
    int mWidgetLayoutResId -> mWidgetLayoutResId
    android.support.v7.preference.PreferenceManager mPreferenceManager -> mPreferenceManager
    boolean mWasDetached -> mWasDetached
    java.lang.Object mDefaultValue -> mDefaultValue
    java.lang.String mDependencyKey -> mDependencyKey
    java.lang.CharSequence getSummary() -> getSummary
    java.lang.CharSequence getTitle() -> getTitle
    void onAttachedToHierarchy(android.support.v7.preference.PreferenceManager,long) -> onAttachedToHierarchy
    void setLayoutResource(int) -> setLayoutResource
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    java.util.Set getPersistedStringSet(java.util.Set) -> getPersistedStringSet
    void setEnabledStateOnViews(android.view.View,boolean) -> setEnabledStateOnViews
    void setSelectable(boolean) -> setSelectable
    int getPersistedInt(int) -> getPersistedInt
    boolean persistBoolean(boolean) -> persistBoolean
    void unregisterDependent(android.support.v7.preference.Preference) -> unregisterDependent
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void dispatchSetInitialValue() -> dispatchSetInitialValue
    void onDetached() -> onDetached
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void setSummary(java.lang.CharSequence) -> setSummary
    void setKey(java.lang.String) -> setKey
    void performClick(android.view.View) -> performClick
    android.content.Intent getIntent() -> getIntent
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void requireKey() -> requireKey
    void setTitle(int) -> setTitle
    android.content.Context getContext() -> getContext
    android.support.v7.preference.Preference findPreferenceInHierarchy(java.lang.String) -> findPreferenceInHierarchy
    int compareTo(android.support.v7.preference.Preference) -> compareTo
    void setOnPreferenceClickListener(android.support.v7.preference.Preference$OnPreferenceClickListener) -> setOnPreferenceClickListener
    void setSummary(int) -> setSummary
    void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    void assignParent(android.support.v7.preference.PreferenceGroup) -> assignParent
    android.support.v7.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    boolean shouldDisableDependents() -> shouldDisableDependents
    void onParentChanged(android.support.v7.preference.Preference,boolean) -> onParentChanged
    int compareTo(java.lang.Object) -> compareTo
    long getId() -> getId
    boolean isEnabled() -> isEnabled
    void setIcon(int) -> setIcon
    android.support.v7.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    android.support.v7.preference.PreferenceGroup getParent() -> getParent
    void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    void registerDependent(android.support.v7.preference.Preference) -> registerDependent
    void setIntent(android.content.Intent) -> setIntent
    void onPrepareForRemoval() -> onPrepareForRemoval
    int getLayoutResource() -> getLayoutResource
    java.lang.String toString() -> toString
    boolean hasKey() -> hasKey
    int getOrder() -> getOrder
    java.lang.String getPersistedString(java.lang.String) -> getPersistedString
    android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    void setVisible(boolean) -> setVisible
    java.lang.String getFragment() -> getFragment
    boolean persistString(java.lang.String) -> persistString
    void notifyHierarchyChanged() -> notifyHierarchyChanged
    void clearWasDetached() -> clearWasDetached
    void setEnabled(boolean) -> setEnabled
    void onClick() -> onClick
    void setOnPreferenceChangeListener(android.support.v7.preference.Preference$OnPreferenceChangeListener) -> setOnPreferenceChangeListener
    boolean isVisible() -> isVisible
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void setTitle(java.lang.CharSequence) -> setTitle
    void notifyChanged() -> notifyChanged
    void unregisterDependency() -> unregisterDependency
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void tryCommit(android.content.SharedPreferences$Editor) -> tryCommit
    boolean isPersistent() -> isPersistent
    boolean callChangeListener(java.lang.Object) -> callChangeListener
    void onAttached() -> onAttached
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    boolean shouldPersist() -> shouldPersist
    java.lang.StringBuilder getFilterableStringBuilder() -> getFilterableStringBuilder
    void notifyDependencyChange(boolean) -> notifyDependencyChange
    boolean isSelectable() -> isSelectable
    boolean persistInt(int) -> persistInt
    void setWidgetLayoutResource(int) -> setWidgetLayoutResource
    void setOnPreferenceChangeInternalListener(android.support.v7.preference.Preference$OnPreferenceChangeInternalListener) -> setOnPreferenceChangeInternalListener
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    java.lang.String getKey() -> getKey
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void setOrder(int) -> setOrder
    void performClick() -> performClick
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.os.Bundle getExtras() -> getExtras
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void registerDependency() -> registerDependency
    void <init>(android.content.Context) -> <init>
    void onDependencyChanged(android.support.v7.preference.Preference,boolean) -> onDependencyChanged
    boolean persistStringSet(java.util.Set) -> persistStringSet
    void onAttachedToHierarchy(android.support.v7.preference.PreferenceManager) -> onAttachedToHierarchy
    int getWidgetLayoutResource() -> getWidgetLayoutResource
com.android.systemui.volume.VolumeDialogImpl$11 -> com.android.systemui.volume.VolumeDialogImpl$11:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl,android.content.Context,android.media.AudioManager) -> <init>
    void cleanUp() -> cleanUp
com.android.systemui.statusbar.notification.PropertyAnimator$AnimatableProperty -> com.android.systemui.statusbar.notification.PropertyAnimator$AnimatableProperty:
    int getAnimatorTag() -> getAnimatorTag
    int getAnimationEndTag() -> getAnimationEndTag
    int getAnimationStartTag() -> getAnimationStartTag
    android.util.Property getProperty() -> getProperty
com.android.systemui.statusbar.car.CarStatusBar$1 -> com.android.systemui.statusbar.car.CarStatusBar$1:
    com.android.systemui.statusbar.car.CarStatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.CarStatusBar) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v14.preference.R$styleable -> android.support.v14.preference.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int[] ActionMenuItemView -> ActionMenuItemView
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int[] ActivityChooserView -> ActivityChooserView
    int[] AlertDialog -> AlertDialog
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int[] AppCompatTextView -> AppCompatTextView
    int[] AppCompatTheme -> AppCompatTheme
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] BackgroundStyle -> BackgroundStyle
    int[] BatteryMeterView -> BatteryMeterView
    int[] ButtonBarLayout -> ButtonBarLayout
    int[] CarrierText -> CarrierText
    int[] CheckBoxPreference -> CheckBoxPreference
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int[] CompoundButton -> CompoundButton
    int[] DateView -> DateView
    int[] DeadZone -> DeadZone
    int[] DialogPreference -> DialogPreference
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyButtonView -> KeyButtonView
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int[] ListPopupWindow -> ListPopupWindow
    int[] ListPreference -> ListPreference
    int[] MediaRouteButton -> MediaRouteButton
    int[] MenuGroup -> MenuGroup
    int[] MenuItem -> MenuItem
    int[] MenuView -> MenuView
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] NumPadKey -> NumPadKey
    int[] PagingIndicator -> PagingIndicator
    int[] PasswordTextView -> PasswordTextView
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int PreferenceFragment_allowDividerAfterLastItem -> PreferenceFragment_allowDividerAfterLastItem
    int PreferenceFragment_android_divider -> PreferenceFragment_android_divider
    int PreferenceFragment_android_dividerHeight -> PreferenceFragment_android_dividerHeight
    int PreferenceFragment_android_layout -> PreferenceFragment_android_layout
    int[] PreferenceGroup -> PreferenceGroup
    int[] PreferenceImageView -> PreferenceImageView
    int[] PreferenceTheme -> PreferenceTheme
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int[] RecyclerView -> RecyclerView
    int[] RestrictedPreference -> RestrictedPreference
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int[] SearchView -> SearchView
    int[] SeekBarPreference -> SeekBarPreference
    int[] Spinner -> Spinner
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int SwitchPreference_android_disableDependentsState -> SwitchPreference_android_disableDependentsState
    int SwitchPreference_android_summaryOff -> SwitchPreference_android_summaryOff
    int SwitchPreference_android_summaryOn -> SwitchPreference_android_summaryOn
    int SwitchPreference_android_switchTextOff -> SwitchPreference_android_switchTextOff
    int SwitchPreference_android_switchTextOn -> SwitchPreference_android_switchTextOn
    int SwitchPreference_disableDependentsState -> SwitchPreference_disableDependentsState
    int SwitchPreference_summaryOff -> SwitchPreference_summaryOff
    int SwitchPreference_summaryOn -> SwitchPreference_summaryOn
    int SwitchPreference_switchTextOff -> SwitchPreference_switchTextOff
    int SwitchPreference_switchTextOn -> SwitchPreference_switchTextOn
    int[] TextAppearance -> TextAppearance
    int[] ToggleSliderView -> ToggleSliderView
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] UserDetailItemView -> UserDetailItemView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int[] ViewStubCompat -> ViewStubCompat
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int[] lbBaseGridView -> lbBaseGridView
    int[] lbDatePicker -> lbDatePicker
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int[] lbImageCardView -> lbImageCardView
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int[] lbSearchOrbView -> lbSearchOrbView
    int[] lbSlide -> lbSlide
    int[] lbTimePicker -> lbTimePicker
    int[] lbVerticalGridView -> lbVerticalGridView
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.recents.misc.ReferenceCountedTrigger$1 -> com.android.systemui.recents.misc.ReferenceCountedTrigger$1:
    com.android.systemui.recents.misc.ReferenceCountedTrigger this$0 -> this$0
    void <init>(com.android.systemui.recents.misc.ReferenceCountedTrigger) -> <init>
    void run() -> run
com.android.systemui.plugins.ActivityStarter -> com.android.systemui.plugins.ActivityStarter:
    int VERSION -> VERSION
    void startActivity(android.content.Intent,boolean,boolean) -> startActivity
    void postStartActivityDismissingKeyguard(android.content.Intent,int) -> postStartActivityDismissingKeyguard
    void postQSRunnableDismissingKeyguard(java.lang.Runnable) -> postQSRunnableDismissingKeyguard
    void postStartActivityDismissingKeyguard(android.app.PendingIntent) -> postStartActivityDismissingKeyguard
    void startActivity(android.content.Intent,boolean,com.android.systemui.plugins.ActivityStarter$Callback) -> startActivity
    void startActivity(android.content.Intent,boolean) -> startActivity
    void startPendingIntentDismissingKeyguard(android.app.PendingIntent) -> startPendingIntentDismissingKeyguard
com.android.systemui.plugins.GlobalActions$GlobalActionsManager -> com.android.systemui.plugins.GlobalActions$GlobalActionsManager:
    int VERSION -> VERSION
    void onGlobalActionsHidden() -> onGlobalActionsHidden
    void onGlobalActionsShown() -> onGlobalActionsShown
    void shutdown() -> shutdown
    void reboot(boolean) -> reboot
com.android.systemui.SwipeHelper$LongPressListener -> com.android.systemui.SwipeHelper$LongPressListener:
    boolean onLongPress(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> onLongPress
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    android.support.v4.media.session.MediaControllerCompat$Callback this$1 -> this$1
    boolean mRegistered -> mRegistered
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v7.app.MediaRouteButton$MediaRouterCallback -> android.support.v7.app.MediaRouteButton$MediaRouterCallback:
    android.support.v7.app.MediaRouteButton this$0 -> this$0
    void onProviderAdded(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$ProviderInfo) -> onProviderAdded
    void onRouteUnselected(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteSelected(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteAdded(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteRemoved(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void <init>(android.support.v7.app.MediaRouteButton) -> <init>
    void onProviderRemoved(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$ProviderInfo) -> onProviderRemoved
    void onRouteChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onProviderChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$ProviderInfo) -> onProviderChanged
com.android.systemui.volume.ZenModePanel$7 -> com.android.systemui.volume.ZenModePanel$7:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    com.android.systemui.volume.ZenModePanel$ConditionTag val$tag -> val$tag
    void <init>(com.android.systemui.volume.ZenModePanel,com.android.systemui.volume.ZenModePanel$ConditionTag) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.pip.phone.PipNotificationController$1 -> com.android.systemui.pip.phone.PipNotificationController$1:
    com.android.systemui.pip.phone.PipNotificationController this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipNotificationController) -> <init>
    void onOpChanged(java.lang.String,java.lang.String) -> onOpChanged
com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction -> com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction:
    int mDisabledIconResid -> mDisabledIconResid
    int mDisabledStatusMessageResId -> mDisabledStatusMessageResId
    int mEnabledIconResId -> mEnabledIconResId
    int mEnabledStatusMessageResId -> mEnabledStatusMessageResId
    int mMessageResId -> mMessageResId
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State mState -> mState
    void <init>(int,int,int,int,int) -> <init>
    void changeStateFromPress(boolean) -> changeStateFromPress
    android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater) -> create
    java.lang.CharSequence getLabelForAccessibility(android.content.Context) -> getLabelForAccessibility
    boolean isEnabled() -> isEnabled
    void onPress() -> onPress
    void onToggle(boolean) -> onToggle
    void updateState(com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State) -> updateState
    void willCreate() -> willCreate
com.android.systemui.statusbar.notification.HybridGroupManager -> com.android.systemui.statusbar.notification.HybridGroupManager:
    android.content.Context mContext -> mContext
    float mDarkAmount -> mDarkAmount
    com.android.systemui.statusbar.notification.NotificationDozeHelper mDozer -> mDozer
    int mOverflowNumberColor -> mOverflowNumberColor
    int mOverflowNumberColorDark -> mOverflowNumberColorDark
    int mOverflowNumberPadding -> mOverflowNumberPadding
    int mOverflowNumberPaddingDark -> mOverflowNumberPaddingDark
    float mOverflowNumberSize -> mOverflowNumberSize
    float mOverflowNumberSizeDark -> mOverflowNumberSizeDark
    android.view.ViewGroup mParent -> mParent
    void <init>(android.content.Context,android.view.ViewGroup) -> <init>
    android.widget.TextView bindOverflowNumber(android.widget.TextView,int) -> bindOverflowNumber
    void setOverflowNumberDark(android.widget.TextView,boolean,boolean,long) -> setOverflowNumberDark
    void setOverflowNumberColor(android.widget.TextView,int,int) -> setOverflowNumberColor
    com.android.systemui.statusbar.notification.HybridNotificationView bindFromNotification(com.android.systemui.statusbar.notification.HybridNotificationView,android.app.Notification) -> bindFromNotification
    com.android.systemui.statusbar.notification.HybridNotificationView bindAmbientFromNotification(com.android.systemui.statusbar.notification.HybridNotificationView,android.app.Notification) -> bindAmbientFromNotification
    com.android.systemui.statusbar.notification.HybridNotificationView bindFromNotificationWithStyle(com.android.systemui.statusbar.notification.HybridNotificationView,android.app.Notification,int) -> bindFromNotificationWithStyle
    com.android.systemui.statusbar.notification.HybridNotificationView inflateHybridViewWithStyle(int) -> inflateHybridViewWithStyle
    android.widget.TextView inflateOverflowNumber() -> inflateOverflowNumber
    java.lang.CharSequence resolveText(android.app.Notification) -> resolveText
    java.lang.CharSequence resolveTitle(android.app.Notification) -> resolveTitle
    void updateOverFlowNumberColor(android.widget.TextView) -> updateOverFlowNumberColor
    void lambda$-com_android_systemui_statusbar_notification_HybridGroupManager_6071(android.widget.TextView,java.lang.Float) -> lambda$-com_android_systemui_statusbar_notification_HybridGroupManager_6071
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void <init>(android.widget.ListView) -> <init>
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    void scrollTargetBy(int,int) -> scrollTargetBy
android.support.v7.app.AppCompatCallback -> android.support.v7.app.AppCompatCallback:
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
com.android.systemui.statusbar.phone.PanelView -> com.android.systemui.statusbar.phone.PanelView:
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView mKeyguardBottomArea -> mKeyguardBottomArea
    com.android.systemui.statusbar.phone.PanelBar mBar -> mBar
    int mTouchSlop -> mTouchSlop
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    boolean mHintAnimationRunning -> mHintAnimationRunning
    boolean mTracking -> mTracking
    float mExpandedHeight -> mExpandedHeight
    java.lang.Runnable mPostCollapseRunnable -> mPostCollapseRunnable
    java.lang.String TAG -> TAG
    boolean mAnimateAfterExpanding -> mAnimateAfterExpanding
    boolean mAnimatingOnDown -> mAnimatingOnDown
    android.view.animation.Interpolator mBounceInterpolator -> mBounceInterpolator
    boolean mClosing -> mClosing
    boolean mCollapsedAndHeadsUpOnDown -> mCollapsedAndHeadsUpOnDown
    long mDownTime -> mDownTime
    boolean mExpandLatencyTracking -> mExpandLatencyTracking
    float mExpandedFraction -> mExpandedFraction
    boolean mExpanding -> mExpanding
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtilsClosing -> mFlingAnimationUtilsClosing
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtilsDismissing -> mFlingAnimationUtilsDismissing
    java.lang.Runnable mFlingCollapseRunnable -> mFlingCollapseRunnable
    boolean mGestureWaitForTouchSlop -> mGestureWaitForTouchSlop
    boolean mHasLayoutedSinceDown -> mHasLayoutedSinceDown
    android.animation.ValueAnimator mHeightAnimator -> mHeightAnimator
    float mHintDistance -> mHintDistance
    boolean mIgnoreXTouchSlop -> mIgnoreXTouchSlop
    float mInitialOffsetOnTouch -> mInitialOffsetOnTouch
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    boolean mInstantExpanding -> mInstantExpanding
    boolean mJustPeeked -> mJustPeeked
    com.android.systemui.statusbar.phone.LockscreenGestureLogger mLockscreenGestureLogger -> mLockscreenGestureLogger
    float mMinExpandHeight -> mMinExpandHeight
    boolean mMotionAborted -> mMotionAborted
    float mNextCollapseSpeedUpFactor -> mNextCollapseSpeedUpFactor
    boolean mNotificationsDragEnabled -> mNotificationsDragEnabled
    boolean mOverExpandedBeforeFling -> mOverExpandedBeforeFling
    boolean mPanelClosedOnDown -> mPanelClosedOnDown
    boolean mPanelUpdateWhenAnimatorEnds -> mPanelUpdateWhenAnimatorEnds
    android.animation.ObjectAnimator mPeekAnimator -> mPeekAnimator
    float mPeekHeight -> mPeekHeight
    boolean mPeekTouching -> mPeekTouching
    android.util.BoostFramework mPerf -> mPerf
    boolean mTouchAboveFalsingThreshold -> mTouchAboveFalsingThreshold
    boolean mTouchDisabled -> mTouchDisabled
    boolean mTouchSlopExceeded -> mTouchSlopExceeded
    boolean mTouchStartedInEmptyArea -> mTouchStartedInEmptyArea
    int mTrackingPointer -> mTrackingPointer
    int mUnlockFalsingThreshold -> mUnlockFalsingThreshold
    boolean mUpdateFlingOnLayout -> mUpdateFlingOnLayout
    float mUpdateFlingVelocity -> mUpdateFlingVelocity
    boolean mUpwardsWhenTresholdReached -> mUpwardsWhenTresholdReached
    com.android.systemui.statusbar.phone.VelocityTrackerInterface mVelocityTracker -> mVelocityTracker
    boolean mVibrateOnOpening -> mVibrateOnOpening
    android.os.Vibrator mVibrator -> mVibrator
    java.lang.String mViewName -> mViewName
    void startExpandMotion(float,float,boolean,float) -> startExpandMotion
    void startExpandingFromPeek() -> startExpandingFromPeek
    void setBar(com.android.systemui.statusbar.phone.PanelBar) -> setBar
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    float getExpandedFraction() -> getExpandedFraction
    boolean isFullyCollapsed() -> isFullyCollapsed
    void collapse(boolean,float) -> collapse
    void resetViews() -> resetViews
    void setExpandedFraction(float) -> setExpandedFraction
    void cancelPeek() -> cancelPeek
    boolean isTracking() -> isTracking
    boolean canPanelBeCollapsed() -> canPanelBeCollapsed
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean isCollapsing() -> isCollapsing
    void instantCollapse() -> instantCollapse
    void notifyBarPanelExpansionChanged() -> notifyBarPanelExpansionChanged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
    void onAttachedToWindow() -> onAttachedToWindow
    void loadDimens() -> loadDimens
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestPanelHeightUpdate() -> requestPanelHeightUpdate
    float getExpandedHeight() -> getExpandedHeight
    void fling(float,boolean) -> fling
    void flingToHeight(float,boolean,float,float,boolean) -> flingToHeight
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void notifyExpandingFinished() -> notifyExpandingFinished
    boolean flingExpands(float,float,float,float) -> flingExpands
    void cancelHeightAnimator() -> cancelHeightAnimator
    void onExpandingStarted() -> onExpandingStarted
    void onExpandingFinished() -> onExpandingFinished
    void expand(boolean) -> expand
    void onTrackingStarted() -> onTrackingStarted
    void onTrackingStopped(boolean) -> onTrackingStopped
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void startUnlockHintAnimation() -> startUnlockHintAnimation
    void onUnlockHintFinished() -> onUnlockHintFinished
    void onUnlockHintStarted() -> onUnlockHintStarted
    boolean onEmptySpaceClick(float) -> onEmptySpaceClick
    void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager) -> setHeadsUpManager
    void onClosingFinished() -> onClosingFinished
    float getCurrentExpandVelocity() -> getCurrentExpandVelocity
    void setTouchDisabled(boolean) -> setTouchDisabled
    void abortAnimations() -> abortAnimations
    android.animation.ValueAnimator createHeightAnimator(float) -> createHeightAnimator
    void endClosing() -> endClosing
    void endMotionEvent(android.view.MotionEvent,float,float,boolean) -> endMotionEvent
    void fling(float,boolean,boolean) -> fling
    void fling(float,boolean,float,boolean) -> fling
    boolean fullyExpandedClearAllVisible() -> fullyExpandedClearAllVisible
    int getClearAllHeight() -> getClearAllHeight
    int getFalsingThreshold() -> getFalsingThreshold
    int getMaxPanelHeight() -> getMaxPanelHeight
    float getOpeningHeight() -> getOpeningHeight
    float getOverExpansionAmount() -> getOverExpansionAmount
    float getOverExpansionPixels() -> getOverExpansionPixels
    float getPeekHeight() -> getPeekHeight
    boolean hasConflictingGestures() -> hasConflictingGestures
    void initVelocityTracker() -> initVelocityTracker
    boolean isClearAllVisible() -> isClearAllVisible
    boolean isDirectionUpwards(float,float) -> isDirectionUpwards
    boolean isFalseTouch(float,float) -> isFalseTouch
    boolean isFullyExpanded() -> isFullyExpanded
    boolean isInContentBounds(float,float) -> isInContentBounds
    boolean isPanelVisibleBecauseOfHeadsUp() -> isPanelVisibleBecauseOfHeadsUp
    boolean isScrolledToBottom() -> isScrolledToBottom
    boolean isTrackingBlocked() -> isTrackingBlocked
    void log(java.lang.String) -> log
    void logf(java.lang.String,java.lang.Object[]) -> logf
    void notifyExpandingStarted() -> notifyExpandingStarted
    void onHeightUpdated(float) -> onHeightUpdated
    boolean onMiddleClicked() -> onMiddleClicked
    void runPeekAnimation(long,float,boolean) -> runPeekAnimation
    void setAnimator(android.animation.ValueAnimator) -> setAnimator
    void setExpandedHeight(float) -> setExpandedHeight
    void setExpandedHeightInternal(float) -> setExpandedHeightInternal
    void setOverExpansion(float,boolean) -> setOverExpansion
    boolean shouldGestureIgnoreXTouchSlop(float,float) -> shouldGestureIgnoreXTouchSlop
    boolean shouldUseDismissingAnimation() -> shouldUseDismissingAnimation
    void startExpandLatencyTracking() -> startExpandLatencyTracking
    void startOpening() -> startOpening
    void startUnlockHintAnimationPhase1(java.lang.Runnable) -> startUnlockHintAnimationPhase1
    void startUnlockHintAnimationPhase2(java.lang.Runnable) -> startUnlockHintAnimationPhase2
    void trackMovement(android.view.MotionEvent) -> trackMovement
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_phone_PanelView_18414() -> lambda$-com_android_systemui_statusbar_phone_PanelView_18414
    void lambda$-com_android_systemui_statusbar_phone_PanelView_38741() -> lambda$-com_android_systemui_statusbar_phone_PanelView_38741
    void lambda$-com_android_systemui_statusbar_phone_PanelView_48691(android.view.View) -> lambda$-com_android_systemui_statusbar_phone_PanelView_48691
    boolean -get0(com.android.systemui.statusbar.phone.PanelView) -> -get0
    boolean -get1(com.android.systemui.statusbar.phone.PanelView) -> -get1
    float -get2(com.android.systemui.statusbar.phone.PanelView) -> -get2
    android.util.BoostFramework -get3(com.android.systemui.statusbar.phone.PanelView) -> -get3
    boolean -set0(com.android.systemui.statusbar.phone.PanelView,boolean) -> -set0
    android.animation.ObjectAnimator -set1(com.android.systemui.statusbar.phone.PanelView,android.animation.ObjectAnimator) -> -set1
    void -wrap0(com.android.systemui.statusbar.phone.PanelView) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.PanelView,android.animation.ValueAnimator) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.phone.PanelView,java.lang.Runnable) -> -wrap2
com.android.systemui.volume.car.CarVolumeDialogController -> com.android.systemui.volume.car.CarVolumeDialogController:
    android.car.Car mCar -> mCar
    android.car.media.CarAudioManager mCarAudioManager -> mCarAudioManager
    android.content.ServiceConnection mConnection -> mConnection
    void <init>(android.content.Context) -> <init>
    int getAudioManagerStreamMaxVolume(int) -> getAudioManagerStreamMaxVolume
    int getAudioManagerStreamMinVolume(int) -> getAudioManagerStreamMinVolume
    int getAudioManagerStreamVolume(int) -> getAudioManagerStreamVolume
    void setAudioManagerStreamVolume(int,int,int) -> setAudioManagerStreamVolume
    void setVolumeController() -> setVolumeController
    android.car.Car -get0(com.android.systemui.volume.car.CarVolumeDialogController) -> -get0
    android.car.media.CarAudioManager -set0(com.android.systemui.volume.car.CarVolumeDialogController,android.car.media.CarAudioManager) -> -set0
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
com.android.systemui.statusbar.policy.UserInfoControllerImpl$2 -> com.android.systemui.statusbar.policy.UserInfoControllerImpl$2:
    com.android.systemui.statusbar.policy.UserInfoControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserInfoControllerImpl) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.widget.ActionBarBackgroundDrawable -> android.support.v7.widget.ActionBarBackgroundDrawable:
    android.support.v7.widget.ActionBarContainer mContainer -> mContainer
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void draw(android.graphics.Canvas) -> draw
    void <init>(android.support.v7.widget.ActionBarContainer) -> <init>
com.android.settingslib.TwoTargetPreference -> com.android.settingslib.TwoTargetPreference:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getSecondTargetResId() -> getSecondTargetResId
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    boolean shouldHideSecondTarget() -> shouldHideSecondTarget
    void init() -> init
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> gravity
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
com.android.systemui.recents.events.activity.RecentsActivityStartingEvent -> com.android.systemui.recents.events.activity.RecentsActivityStartingEvent:
    void <init>() -> <init>
com.android.systemui.volume.VolumeComponent -> com.android.systemui.volume.VolumeComponent:
    void dismissNow() -> dismissNow
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void register() -> register
com.android.systemui.recents.views.-$Lambda$UsNiZzzHtOnAHQyNVTbOVt0a-mE -> com.android.systemui.recents.views.-$Lambda$UsNiZzzHtOnAHQyNVTbOVt0a-mE:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(boolean) -> $m$0
    void onStartActivityResult(boolean) -> onStartActivityResult
com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable -> com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable:
    com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable$ConstantState mState -> mState
    android.graphics.Rect mTmpRect -> mTmpRect
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    void <init>(android.content.res.Resources,com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable$ConstantState) -> <init>
    com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable$ConstantState getConstantState() -> getConstantState
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setXfermode(android.graphics.Xfermode) -> setXfermode
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void <init>(android.content.res.Resources,com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable$ConstantState,com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable) -> <init>
com.android.systemui.statusbar.-$Lambda$pfzrTzW0pwWr_NOaX9rVE6jh0v8 -> com.android.systemui.statusbar.-$Lambda$pfzrTzW0pwWr_NOaX9rVE6jh0v8:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.widget.CompoundButton,boolean) -> $m$0
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
android.support.graphics.drawable.AndroidResources -> android.support.graphics.drawable.AndroidResources:
    int[] STYLEABLE_PATH_INTERPOLATOR -> STYLEABLE_PATH_INTERPOLATOR
    int[] STYLEABLE_ANIMATOR -> STYLEABLE_ANIMATOR
    int[] STYLEABLE_PROPERTY_ANIMATOR -> STYLEABLE_PROPERTY_ANIMATOR
    int[] STYLEABLE_PROPERTY_VALUES_HOLDER -> STYLEABLE_PROPERTY_VALUES_HOLDER
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE -> STYLEABLE_ANIMATED_VECTOR_DRAWABLE
    int[] STYLEABLE_ANIMATOR_SET -> STYLEABLE_ANIMATOR_SET
    int[] STYLEABLE_VECTOR_DRAWABLE_GROUP -> STYLEABLE_VECTOR_DRAWABLE_GROUP
    int[] STYLEABLE_KEYFRAME -> STYLEABLE_KEYFRAME
    int[] STYLEABLE_VECTOR_DRAWABLE_PATH -> STYLEABLE_VECTOR_DRAWABLE_PATH
    int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH -> STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH
    int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY -> STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET -> STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.recents.model.TaskKeyLruCache$1 -> com.android.systemui.recents.model.TaskKeyLruCache$1:
    com.android.systemui.recents.model.TaskKeyLruCache this$0 -> this$0
    void <init>(com.android.systemui.recents.model.TaskKeyLruCache,int) -> <init>
    void entryRemoved(boolean,java.lang.Integer,java.lang.Object,java.lang.Object) -> entryRemoved
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
com.android.systemui.qs.tiles.DndTile$1 -> com.android.systemui.qs.tiles.DndTile$1:
    com.android.systemui.qs.tiles.DndTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.DndTile) -> <init>
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
android.support.v17.leanback.widget.SpeechOrbView -> android.support.v17.leanback.widget.SpeechOrbView:
    boolean mListening -> mListening
    android.support.v17.leanback.widget.SearchOrbView$Colors mNotListeningOrbColors -> mNotListeningOrbColors
    float mSoundLevelMaxZoom -> mSoundLevelMaxZoom
    int mCurrentLevel -> mCurrentLevel
    android.support.v17.leanback.widget.SearchOrbView$Colors mListeningOrbColors -> mListeningOrbColors
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void showListening() -> showListening
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getLayoutResourceId() -> getLayoutResourceId
    void <init>(android.content.Context) -> <init>
    void setSoundLevel(int) -> setSoundLevel
    void showNotListening() -> showNotListening
com.android.systemui.recents.RecentsImpl$TaskStackListenerImpl -> com.android.systemui.recents.RecentsImpl$TaskStackListenerImpl:
    com.android.systemui.recents.RecentsImpl this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsImpl) -> <init>
    void onActivityPinned(java.lang.String,int,int) -> onActivityPinned
    void onActivityUnpinned() -> onActivityUnpinned
    void onTaskSnapshotChanged(int,android.app.ActivityManager$TaskSnapshot) -> onTaskSnapshotChanged
    void onTaskStackChangedBackground() -> onTaskStackChangedBackground
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.ActivityChooserView$1 -> android.support.v7.widget.ActivityChooserView$1:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    boolean sSetLayoutDirectionMethodFetched -> sSetLayoutDirectionMethodFetched
    java.lang.reflect.Method sGetLayoutDirectionMethod -> sGetLayoutDirectionMethod
    boolean sGetLayoutDirectionMethodFetched -> sGetLayoutDirectionMethodFetched
    java.lang.reflect.Method sSetLayoutDirectionMethod -> sSetLayoutDirectionMethod
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    void <init>() -> <init>
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
com.android.systemui.recents.views.TaskStackView$9 -> com.android.systemui.recents.views.TaskStackView$9:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    com.android.systemui.recents.model.Task val$task -> val$task
    void <init>(com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.model.Task) -> <init>
    void run() -> run
com.android.systemui.statusbar.ScrimView$1 -> com.android.systemui.statusbar.ScrimView$1:
    com.android.systemui.statusbar.ScrimView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ScrimView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$7 -> android.support.v7.widget.DefaultItemAnimator$7:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> val$changeInfo
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    android.view.ViewPropertyAnimator val$oldViewAnim -> val$oldViewAnim
    android.view.View val$view -> val$view
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.KeyguardStatusBarView -> com.android.systemui.statusbar.phone.KeyguardStatusBarView:
    boolean mBatteryCharging -> mBatteryCharging
    com.android.systemui.statusbar.policy.BatteryController mBatteryController -> mBatteryController
    boolean mBatteryListening -> mBatteryListening
    com.android.systemui.BatteryMeterView mBatteryView -> mBatteryView
    android.widget.TextView mCarrierLabel -> mCarrierLabel
    com.android.systemui.statusbar.phone.StatusBarIconController$TintedIconManager mIconManager -> mIconManager
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher mKeyguardUserSwitcher -> mKeyguardUserSwitcher
    boolean mKeyguardUserSwitcherShowing -> mKeyguardUserSwitcherShowing
    android.widget.ImageView mMultiUserAvatar -> mMultiUserAvatar
    com.android.systemui.statusbar.phone.MultiUserSwitch mMultiUserSwitch -> mMultiUserSwitch
    int mSystemIconsBaseMargin -> mSystemIconsBaseMargin
    android.view.View mSystemIconsContainer -> mSystemIconsContainer
    android.view.View mSystemIconsSuperContainer -> mSystemIconsSuperContainer
    int mSystemIconsSwitcherHiddenExpandedMargin -> mSystemIconsSwitcherHiddenExpandedMargin
    com.android.systemui.statusbar.policy.UserSwitcherController mUserSwitcherController -> mUserSwitcherController
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateNextLayoutChange() -> animateNextLayoutChange
    void applyDarkness(int,android.graphics.Rect,float,int) -> applyDarkness
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void loadDimens() -> loadDimens
    void onAttachedToWindow() -> onAttachedToWindow
    void onBatteryLevelChanged(int,boolean,boolean) -> onBatteryLevelChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onOverlayChanged() -> onOverlayChanged
    void onPowerSaveChanged(boolean) -> onPowerSaveChanged
    void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> onUserInfoChanged
    void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> setKeyguardUserSwitcher
    void setKeyguardUserSwitcherShowing(boolean,boolean) -> setKeyguardUserSwitcherShowing
    void setListening(boolean) -> setListening
    void setQSPanel(com.android.systemui.qs.QSPanel) -> setQSPanel
    void setVisibility(int) -> setVisibility
    void updateSystemIconsLayoutParams() -> updateSystemIconsLayoutParams
    void updateUserSwitcher() -> updateUserSwitcher
    void updateVisibilities() -> updateVisibilities
    com.android.systemui.statusbar.phone.MultiUserSwitch -get0(com.android.systemui.statusbar.phone.KeyguardStatusBarView) -> -get0
    android.view.View -get1(com.android.systemui.statusbar.phone.KeyguardStatusBarView) -> -get1
com.android.systemui.qs.tileimpl.QSTileBaseView -> com.android.systemui.qs.tileimpl.QSTileBaseView:
    java.lang.String mAccessibilityClass -> mAccessibilityClass
    boolean mClicked -> mClicked
    boolean mCollapsedView -> mCollapsedView
    com.android.systemui.qs.tileimpl.QSTileBaseView$H mHandler -> mHandler
    com.android.systemui.plugins.qs.QSIconView mIcon -> mIcon
    android.widget.FrameLayout mIconFrame -> mIconFrame
    android.graphics.drawable.RippleDrawable mRipple -> mRipple
    android.graphics.drawable.Drawable mTileBackground -> mTileBackground
    boolean mTileState -> mTileState
    com.android.systemui.plugins.qs.QSIconView getIcon() -> getIcon
    void setClickable(boolean) -> setClickable
    void onStateChanged(com.android.systemui.plugins.qs.QSTile$State) -> onStateChanged
    void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView,boolean) -> <init>
    void handleStateChanged(com.android.systemui.plugins.qs.QSTile$State) -> handleStateChanged
    android.graphics.drawable.Drawable newTileBackground() -> newTileBackground
    void init(android.view.View$OnClickListener,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> init
    int getDetailY() -> getDetailY
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void init(com.android.systemui.plugins.qs.QSTile) -> init
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean performClick() -> performClick
    void setRipple(android.graphics.drawable.RippleDrawable) -> setRipple
    android.view.View updateAccessibilityOrder(android.view.View) -> updateAccessibilityOrder
    void updateRippleSize(int,int) -> updateRippleSize
    void lambda$-com_android_systemui_qs_tileimpl_QSTileBaseView_4175(com.android.systemui.plugins.qs.QSTile,android.view.View) -> lambda$-com_android_systemui_qs_tileimpl_QSTileBaseView_4175
    void lambda$-com_android_systemui_qs_tileimpl_QSTileBaseView_4194(com.android.systemui.plugins.qs.QSTile,android.view.View) -> lambda$-com_android_systemui_qs_tileimpl_QSTileBaseView_4194
    boolean lambda$-com_android_systemui_qs_tileimpl_QSTileBaseView_4222(com.android.systemui.plugins.qs.QSTile,android.view.View) -> lambda$-com_android_systemui_qs_tileimpl_QSTileBaseView_4222
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    int mSize -> mSize
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mBaseCache -> mBaseCache
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    java.lang.Object remove(java.lang.Object) -> remove
    int hashCode() -> hashCode
    int indexOfValue(java.lang.Object) -> indexOfValue
    void <init>(int) -> <init>
    java.lang.Object removeAt(int) -> removeAt
    int binarySearchHashes(int[],int,int) -> binarySearchHashes
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void allocArrays(int) -> allocArrays
    boolean containsValue(java.lang.Object) -> containsValue
    int indexOfNull() -> indexOfNull
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    java.lang.Object valueAt(int) -> valueAt
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    void ensureCapacity(int) -> ensureCapacity
    boolean equals(java.lang.Object) -> equals
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfKey(java.lang.Object) -> indexOfKey
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.String toString() -> toString
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    void <init>() -> <init>
com.android.systemui.qs.tiles.BluetoothTile$BluetoothDetailAdapter -> com.android.systemui.qs.tiles.BluetoothTile$BluetoothDetailAdapter:
    com.android.systemui.qs.QSDetailItems mItems -> mItems
    com.android.systemui.qs.tiles.BluetoothTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.BluetoothTile) -> <init>
    android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup) -> createDetailView
    int getMetricsCategory() -> getMetricsCategory
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    java.lang.CharSequence getTitle() -> getTitle
    boolean getToggleEnabled() -> getToggleEnabled
    java.lang.Boolean getToggleState() -> getToggleState
    void onDetailItemClick(com.android.systemui.qs.QSDetailItems$Item) -> onDetailItemClick
    void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems$Item) -> onDetailItemDisconnect
    void setItemsVisible(boolean) -> setItemsVisible
    void setToggleState(boolean) -> setToggleState
    void updateItems() -> updateItems
    void -wrap0(com.android.systemui.qs.tiles.BluetoothTile$BluetoothDetailAdapter) -> -wrap0
com.android.systemui.recents.misc.Utilities$2 -> com.android.systemui.recents.misc.Utilities$2:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    android.graphics.Rect get(android.graphics.drawable.Drawable) -> get
    void set(android.graphics.drawable.Drawable,android.graphics.Rect) -> set
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.doze.-$Lambda$krmSGe4g6CSLLG4RW6_aYJyrfaw$3 -> com.android.systemui.doze.-$Lambda$krmSGe4g6CSLLG4RW6_aYJyrfaw$3:
    boolean -$f0 -> -$f0
    float -$f1 -> -$f1
    float -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(boolean,float,float,java.lang.Object) -> <init>
    void $m$0(int) -> $m$0
    void accept(int) -> accept
com.android.systemui.recents.events.ui.focus.DismissFocusedTaskViewEvent -> com.android.systemui.recents.events.ui.focus.DismissFocusedTaskViewEvent:
    void <init>() -> <init>
com.android.systemui.tuner.RadioListPreference$RadioFragment -> com.android.systemui.tuner.RadioListPreference$RadioFragment:
    com.android.systemui.tuner.RadioListPreference mListPref -> mListPref
    void <init>() -> <init>
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    boolean onPreferenceTreeClick(android.support.v7.preference.Preference) -> onPreferenceTreeClick
    void setPreference(com.android.systemui.tuner.RadioListPreference) -> setPreference
    void update() -> update
com.android.systemui.stackdivider.events.StartedDragingEvent -> com.android.systemui.stackdivider.events.StartedDragingEvent:
    void <init>() -> <init>
com.android.systemui.statusbar.phone.PanelView$1 -> com.android.systemui.statusbar.phone.PanelView$1:
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PanelView) -> <init>
    void run() -> run
com.android.systemui.recents.views.TaskStackView$5 -> com.android.systemui.recents.views.TaskStackView$5:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    java.util.ArrayList val$tasks -> val$tasks
    void <init>(com.android.systemui.recents.views.TaskStackView,java.util.ArrayList) -> <init>
    void run() -> run
com.android.keyguard.KeyguardPasswordView$3 -> com.android.keyguard.KeyguardPasswordView$3:
    com.android.keyguard.KeyguardPasswordView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPasswordView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.car.UserGridView$Adapter -> com.android.systemui.statusbar.car.UserGridView$Adapter:
    int mContainerWidth -> mContainerWidth
    int mPodImageAvatarHeight -> mPodImageAvatarHeight
    int mPodImageAvatarWidth -> mPodImageAvatarWidth
    int mPodMarginBetween -> mPodMarginBetween
    int mPodWidth -> mPodWidth
    com.android.systemui.statusbar.car.UserGridView$WrappedBaseUserAdapter mUserAdapter -> mUserAdapter
    com.android.systemui.statusbar.car.UserGridView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.UserGridView,com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    int getCount() -> getCount
    android.graphics.Bitmap getDefaultUserIcon(java.lang.CharSequence) -> getDefaultUserIcon
    int getIconsPerPage() -> getIconsPerPage
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.view.View makeUserPod(android.view.LayoutInflater,android.content.Context,int,android.view.ViewGroup) -> makeUserPod
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    void lambda$-com_android_systemui_statusbar_car_UserGridView$Adapter_13960(com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord,android.view.View) -> lambda$-com_android_systemui_statusbar_car_UserGridView$Adapter_13960
android.support.v17.leanback.widget.BrowseRowsFrameLayout -> android.support.v17.leanback.widget.BrowseRowsFrameLayout:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void <init>(android.content.Context) -> <init>
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    android.os.IBinder asBinder() -> asBinder
    void <init>() -> <init>
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
com.android.keyguard.KeyguardSimPinView$CheckSimPin -> com.android.keyguard.KeyguardSimPinView$CheckSimPin:
    java.lang.String mPin -> mPin
    int mSubId -> mSubId
    com.android.keyguard.KeyguardSimPinView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSimPinView,java.lang.String,int) -> <init>
    void onSimCheckResponse(int,int) -> onSimCheckResponse
    void run() -> run
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
com.android.systemui.statusbar.phone.NotificationIconContainer$3 -> com.android.systemui.statusbar.phone.NotificationIconContainer$3:
    com.android.systemui.statusbar.stack.AnimationFilter mAnimationFilter -> mAnimationFilter
    void <init>() -> <init>
    com.android.systemui.statusbar.stack.AnimationFilter getAnimationFilter() -> getAnimationFilter
android.support.v7.widget.AppCompatCheckedTextView -> android.support.v7.widget.AppCompatCheckedTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    void <clinit>() -> <clinit>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void drawableStateChanged() -> drawableStateChanged
com.android.systemui.tuner.TunerService$1 -> com.android.systemui.tuner.TunerService$1:
    android.content.Context val$context -> val$context
    java.lang.Runnable val$onDisabled -> val$onDisabled
    void <init>(android.content.Context,java.lang.Runnable) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.statusbar.phone.SettingsButton$2 -> com.android.systemui.statusbar.phone.SettingsButton$2:
    com.android.systemui.statusbar.phone.SettingsButton this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.SettingsButton) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int mMaxVolume -> mMaxVolume
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    int mControlType -> mControlType
    int mCurrentVolume -> mCurrentVolume
    void onAdjustVolume(int) -> onAdjustVolume
    void <init>(int,int,int) -> <init>
    void setCurrentVolume(int) -> setCurrentVolume
    java.lang.Object getVolumeProvider() -> getVolumeProvider
    void onSetVolumeTo(int) -> onSetVolumeTo
com.android.systemui.volume.MediaSessions$2 -> com.android.systemui.volume.MediaSessions$2:
    com.android.systemui.volume.MediaSessions this$0 -> this$0
    void <init>(com.android.systemui.volume.MediaSessions) -> <init>
    void remoteVolumeChanged(android.media.session.ISessionController,int) -> remoteVolumeChanged
    void updateRemoteController(android.media.session.ISessionController) -> updateRemoteController
com.android.systemui.recents.events.EventBus$3 -> com.android.systemui.recents.events.EventBus$3:
    com.android.systemui.recents.events.EventBus this$0 -> this$0
    void <init>(com.android.systemui.recents.events.EventBus) -> <init>
    int compare(java.lang.Class,java.lang.Class) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.statusbar.phone.NavigationBarFrame -> com.android.systemui.statusbar.phone.NavigationBarFrame:
    com.android.systemui.statusbar.policy.DeadZone mDeadZone -> mDeadZone
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setDeadZone(com.android.systemui.statusbar.policy.DeadZone) -> setDeadZone
android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter -> android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    boolean mHighlightDefaultActivity -> mHighlightDefaultActivity
    android.support.v7.widget.ActivityChooserModel mDataModel -> mDataModel
    boolean mShowFooterView -> mShowFooterView
    boolean mShowDefaultActivity -> mShowDefaultActivity
    int mMaxActivityCount -> mMaxActivityCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int measureContentWidth() -> measureContentWidth
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    void setMaxActivityCount(int) -> setMaxActivityCount
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.support.v7.widget.ActivityChooserModel getDataModel() -> getDataModel
    int getActivityCount() -> getActivityCount
    void setShowFooterView(boolean) -> setShowFooterView
    int getItemViewType(int) -> getItemViewType
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    boolean getShowDefaultActivity() -> getShowDefaultActivity
    void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    int getHistorySize() -> getHistorySize
com.android.systemui.qs.car.CarQSFragment -> com.android.systemui.qs.car.CarQSFragment:
    com.android.systemui.qs.car.CarQSFooter mFooter -> mFooter
    android.view.View mHeader -> mHeader
    com.android.systemui.statusbar.car.UserGridView mUserGridView -> mUserGridView
    void <init>() -> <init>
    void animateHeaderSlidingIn(long) -> animateHeaderSlidingIn
    void animateHeaderSlidingOut() -> animateHeaderSlidingOut
    void closeDetail() -> closeDetail
    int getDesiredHeight() -> getDesiredHeight
    com.android.systemui.qs.QSFooter getFooter() -> getFooter
    android.view.View getHeader() -> getHeader
    int getQsMinExpansionHeight() -> getQsMinExpansionHeight
    void hideImmediately() -> hideImmediately
    boolean isCustomizing() -> isCustomizing
    boolean isShowingDetail() -> isShowingDetail
    void notifyCustomizeChanged() -> notifyCustomizeChanged
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setContainer(android.view.ViewGroup) -> setContainer
    void setExpandClickListener(android.view.View$OnClickListener) -> setExpandClickListener
    void setExpanded(boolean) -> setExpanded
    void setHeaderClickable(boolean) -> setHeaderClickable
    void setHeaderListening(boolean) -> setHeaderListening
    void setHeightOverride(int) -> setHeightOverride
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void setListening(boolean) -> setListening
    void setOverscrolling(boolean) -> setOverscrolling
    void setPanelView(com.android.systemui.plugins.qs.QS$HeightListener) -> setPanelView
    void setQsExpansion(float,float) -> setQsExpansion
android.support.v4.widget.ImageViewCompat$ImageViewCompatImpl -> android.support.v4.widget.ImageViewCompat$ImageViewCompatImpl:
    android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
    android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
com.android.systemui.statusbar.phone.StatusBar$29 -> com.android.systemui.statusbar.phone.StatusBar$29:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
android.support.v4.util.ArraySet -> android.support.v4.util.ArraySet:
    int mSize -> mSize
    java.lang.Object[] sBaseCache -> sBaseCache
    int sBaseCacheSize -> sBaseCacheSize
    int sTwiceBaseCacheSize -> sTwiceBaseCacheSize
    android.support.v4.util.MapCollections mCollections -> mCollections
    java.lang.Object[] OBJECT -> OBJECT
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    boolean mIdentityHashCode -> mIdentityHashCode
    int[] INT -> INT
    java.lang.Object[] sTwiceBaseCache -> sTwiceBaseCache
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void <init>(int,boolean) -> <init>
    void addAll(android.support.v4.util.ArraySet) -> addAll
    boolean containsAll(java.util.Collection) -> containsAll
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    boolean add(java.lang.Object) -> add
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int indexOf(java.lang.Object,int) -> indexOf
    boolean remove(java.lang.Object) -> remove
    boolean isEmpty() -> isEmpty
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean retainAll(java.util.Collection) -> retainAll
    int hashCode() -> hashCode
    java.lang.Object[] toArray() -> toArray
    java.lang.Object removeAt(int) -> removeAt
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int indexOfNull() -> indexOfNull
    java.lang.Object valueAt(int) -> valueAt
    void ensureCapacity(int) -> ensureCapacity
    int indexOf(java.lang.Object) -> indexOf
    int size() -> size
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean addAll(java.util.Collection) -> addAll
    void <init>() -> <init>
android.support.v7.widget.ForwardingListener$TriggerLongPress -> android.support.v7.widget.ForwardingListener$TriggerLongPress:
    android.support.v7.widget.ForwardingListener this$0 -> this$0
    void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    void run() -> run
com.android.systemui.qs.TouchAnimator$ListenerAdapter -> com.android.systemui.qs.TouchAnimator$ListenerAdapter:
    void <init>() -> <init>
    void onAnimationAtEnd() -> onAnimationAtEnd
    void onAnimationAtStart() -> onAnimationAtStart
    void onAnimationStarted() -> onAnimationStarted
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    android.support.v4.os.ResultReceiver this$0 -> this$0
    void <init>(android.support.v4.os.ResultReceiver) -> <init>
    void send(int,android.os.Bundle) -> send
com.android.systemui.keyboard.KeyboardUI$BluetoothDialogClickListener -> com.android.systemui.keyboard.KeyboardUI$BluetoothDialogClickListener:
    com.android.systemui.keyboard.KeyboardUI this$0 -> this$0
    void <init>(com.android.systemui.keyboard.KeyboardUI) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(com.android.systemui.keyboard.KeyboardUI,com.android.systemui.keyboard.KeyboardUI$BluetoothDialogClickListener) -> <init>
android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry:
    void addPosition(int,int) -> addPosition
com.android.systemui.tuner.TunerActivity$SubSettingsFragment -> com.android.systemui.tuner.TunerActivity$SubSettingsFragment:
    android.support.v7.preference.PreferenceScreen mParentScreen -> mParentScreen
    void <init>() -> <init>
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    void onDestroy() -> onDestroy
com.android.systemui.statusbar.policy.DarkIconDispatcher$DarkReceiver -> com.android.systemui.statusbar.policy.DarkIconDispatcher$DarkReceiver:
    void onDarkChanged(android.graphics.Rect,float,int) -> onDarkChanged
com.android.systemui.recents.views.ViewPool -> com.android.systemui.recents.views.ViewPool:
    android.content.Context mContext -> mContext
    java.util.LinkedList mPool -> mPool
    com.android.systemui.recents.views.ViewPool$ViewPoolConsumer mViewCreator -> mViewCreator
    void <init>(android.content.Context,com.android.systemui.recents.views.ViewPool$ViewPoolConsumer) -> <init>
    java.util.List getViews() -> getViews
    java.lang.Object pickUpViewFromPool(java.lang.Object,java.lang.Object) -> pickUpViewFromPool
    void returnViewToPool(java.lang.Object) -> returnViewToPool
android.support.v14.preference.ListPreferenceDialogFragment -> android.support.v14.preference.ListPreferenceDialogFragment:
    java.lang.CharSequence[] mEntries -> mEntries
    java.lang.CharSequence[] mEntryValues -> mEntryValues
    int mClickedDialogEntryIndex -> mClickedDialogEntryIndex
    void onCreate(android.os.Bundle) -> onCreate
    int -set0(android.support.v14.preference.ListPreferenceDialogFragment,int) -> -set0
    android.support.v7.preference.ListPreference getListPreference() -> getListPreference
    void onDialogClosed(boolean) -> onDialogClosed
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    android.support.v14.preference.ListPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    void <init>() -> <init>
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.android.systemui.recents.views.TaskViewHeader$2 -> com.android.systemui.recents.views.TaskViewHeader$2:
    com.android.systemui.recents.views.TaskViewHeader this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskViewHeader) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.events.activity.DebugFlagsChangedEvent -> com.android.systemui.recents.events.activity.DebugFlagsChangedEvent:
    void <init>() -> <init>
android.support.v17.leanback.widget.SearchBar$2 -> android.support.v17.leanback.widget.SearchBar$2:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
com.android.systemui.volume.ZenModePanel$H -> com.android.systemui.volume.ZenModePanel$H:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    void <init>(com.android.systemui.volume.ZenModePanel) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.android.systemui.volume.ZenModePanel,com.android.systemui.volume.ZenModePanel$H) -> <init>
com.android.systemui.pip.phone.PipDismissViewController$1 -> com.android.systemui.pip.phone.PipDismissViewController$1:
    com.android.systemui.pip.phone.PipDismissViewController this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipDismissViewController) -> <init>
    void run() -> run
android.support.v7.widget.ViewBoundsCheck$BoundFlags -> android.support.v7.widget.ViewBoundsCheck$BoundFlags:
    int mRvStart -> mRvStart
    int mRvEnd -> mRvEnd
    int mBoundFlags -> mBoundFlags
    int mChildEnd -> mChildEnd
    int mChildStart -> mChildStart
    void setBounds(int,int,int,int) -> setBounds
    void addFlags(int) -> addFlags
    int compare(int,int) -> compare
    void <init>() -> <init>
    void resetFlags() -> resetFlags
    boolean boundsMatch() -> boundsMatch
com.android.settingslib.bluetooth.BluetoothA2dpWrapper$Factory -> com.android.settingslib.bluetooth.BluetoothA2dpWrapper$Factory:
    com.android.settingslib.bluetooth.BluetoothA2dpWrapper getInstance(android.bluetooth.BluetoothA2dp) -> getInstance
com.android.systemui.statusbar.phone.PhoneStatusBarView -> com.android.systemui.statusbar.phone.PhoneStatusBarView:
    com.android.systemui.statusbar.phone.StatusBar mBar -> mBar
    com.android.systemui.statusbar.phone.PhoneStatusBarTransitions mBarTransitions -> mBarTransitions
    com.android.systemui.statusbar.policy.DarkIconDispatcher$DarkReceiver mBattery -> mBattery
    java.lang.Runnable mHideExpandedRunnable -> mHideExpandedRunnable
    boolean mIsFullyOpenedPanel -> mIsFullyOpenedPanel
    float mMinFraction -> mMinFraction
    float mPanelFraction -> mPanelFraction
    com.android.systemui.statusbar.phone.ScrimController mScrimController -> mScrimController
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    com.android.systemui.statusbar.phone.BarTransitions getBarTransitions() -> getBarTransitions
    void onAttachedToWindow() -> onAttachedToWindow
    void onClosingFinished() -> onClosingFinished
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onExpandingFinished() -> onExpandingFinished
    void onFinishInflate() -> onFinishInflate
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onPanelCollapsed() -> onPanelCollapsed
    void onPanelFullyOpened() -> onPanelFullyOpened
    void onPanelPeeked() -> onPanelPeeked
    boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEventInternal
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onTrackingStarted() -> onTrackingStarted
    void onTrackingStopped(boolean) -> onTrackingStopped
    boolean panelEnabled() -> panelEnabled
    void panelExpansionChanged(float,boolean) -> panelExpansionChanged
    void panelScrimMinFractionChanged(float) -> panelScrimMinFractionChanged
    void removePendingHideExpandedRunnables() -> removePendingHideExpandedRunnables
    void setBar(com.android.systemui.statusbar.phone.StatusBar) -> setBar
    void setScrimController(com.android.systemui.statusbar.phone.ScrimController) -> setScrimController
    void updateScrimFraction() -> updateScrimFraction
    float -get0(com.android.systemui.statusbar.phone.PhoneStatusBarView) -> -get0
com.android.keyguard.KeyguardSimPinView$2$1 -> com.android.keyguard.KeyguardSimPinView$2$1:
    com.android.keyguard.KeyguardSimPinView$2 this$1 -> this$1
    int val$attemptsRemaining -> val$attemptsRemaining
    int val$result -> val$result
    void <init>(com.android.keyguard.KeyguardSimPinView$2,int,int) -> <init>
    void run() -> run
com.android.systemui.statusbar.notification.NotificationDozeHelper -> com.android.systemui.statusbar.notification.NotificationDozeHelper:
    android.graphics.ColorMatrix mGrayscaleColorMatrix -> mGrayscaleColorMatrix
    void updateGrayscaleMatrix(float) -> updateGrayscaleMatrix
    android.graphics.ColorMatrix getGrayscaleColorMatrix() -> getGrayscaleColorMatrix
    void startIntensityAnimation(android.animation.ValueAnimator$AnimatorUpdateListener,boolean,long,android.animation.Animator$AnimatorListener) -> startIntensityAnimation
    void updateGrayscale(android.widget.ImageView,float) -> updateGrayscale
    void setIntensityDark(java.util.function.Consumer,boolean,boolean,long) -> setIntensityDark
    void <init>() -> <init>
    void fadeGrayscale(android.widget.ImageView,boolean,long) -> fadeGrayscale
    void updateGrayscale(android.widget.ImageView,boolean) -> updateGrayscale
    void lambda$-com_android_systemui_statusbar_notification_NotificationDozeHelper_3101(java.util.function.Consumer,android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_notification_NotificationDozeHelper_3101
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.NestedScrollingChildHelper:
    android.view.ViewParent mNestedScrollingParentTouch -> mNestedScrollingParentTouch
    boolean mIsNestedScrollingEnabled -> mIsNestedScrollingEnabled
    android.view.ViewParent mNestedScrollingParentNonTouch -> mNestedScrollingParentNonTouch
    int[] mTempNestedScrollConsumed -> mTempNestedScrollConsumed
    android.view.View mView -> mView
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    void <init>(android.view.View) -> <init>
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    void stopNestedScroll(int) -> stopNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    boolean startNestedScroll(int) -> startNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    void stopNestedScroll() -> stopNestedScroll
    void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    boolean startNestedScroll(int,int) -> startNestedScroll
android.support.v7.widget.DefaultItemAnimator$3 -> android.support.v7.widget.DefaultItemAnimator$3:
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    java.util.ArrayList val$additions -> val$additions
    void run() -> run
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
android.support.v17.leanback.widget.SearchBar$6$2 -> android.support.v17.leanback.widget.SearchBar$6$2:
    android.support.v17.leanback.widget.SearchBar$6 this$1 -> this$1
    void run() -> run
    void <init>(android.support.v17.leanback.widget.SearchBar$6) -> <init>
com.android.settingslib.net.DataUsageController$NetworkNameProvider -> com.android.settingslib.net.DataUsageController$NetworkNameProvider:
    java.lang.String getMobileDataNetworkName() -> getMobileDataNetworkName
android.support.graphics.drawable.PathInterpolatorCompat -> android.support.graphics.drawable.PathInterpolatorCompat:
    float[] mX -> mX
    float[] mY -> mY
    void initPath(android.graphics.Path) -> initPath
    void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    void initQuad(float,float) -> initQuad
    float getInterpolation(float) -> getInterpolation
    void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    void initCubic(float,float,float,float) -> initCubic
    void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.statusbar.policy.KeyButtonRipple$1 -> com.android.systemui.statusbar.policy.KeyButtonRipple$1:
    com.android.systemui.statusbar.policy.KeyButtonRipple this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.KeyButtonRipple) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.events.activity.CancelEnterRecentsWindowAnimationEvent -> com.android.systemui.recents.events.activity.CancelEnterRecentsWindowAnimationEvent:
    com.android.systemui.recents.model.Task launchTask -> launchTask
    void <init>(com.android.systemui.recents.model.Task) -> <init>
android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener -> android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener:
    java.lang.reflect.Method mResolvedMethod -> mResolvedMethod
    android.content.Context mResolvedContext -> mResolvedContext
    android.view.View mHostView -> mHostView
    java.lang.String mMethodName -> mMethodName
    void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
    void <init>(android.view.View,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.globalactions.GlobalActionsDialog$SilentModeTriStateAction -> com.android.systemui.globalactions.GlobalActionsDialog$SilentModeTriStateAction:
    int[] ITEM_IDS -> ITEM_IDS
    android.media.AudioManager mAudioManager -> mAudioManager
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    void <init>(android.content.Context,android.media.AudioManager,android.os.Handler) -> <init>
    android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater) -> create
    java.lang.CharSequence getLabelForAccessibility(android.content.Context) -> getLabelForAccessibility
    int indexToRingerMode(int) -> indexToRingerMode
    boolean isEnabled() -> isEnabled
    void onClick(android.view.View) -> onClick
    void onPress() -> onPress
    int ringerModeToIndex(int) -> ringerModeToIndex
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.statusbar.policy.MobileSignalController$MobileState -> com.android.systemui.statusbar.policy.MobileSignalController$MobileState:
    java.lang.String networkNameData -> networkNameData
    boolean isEmergency -> isEmergency
    boolean dataSim -> dataSim
    boolean isDefault -> isDefault
    boolean dataConnected -> dataConnected
    boolean roaming -> roaming
    boolean userSetup -> userSetup
    boolean airplaneMode -> airplaneMode
    boolean carrierNetworkChangeMode -> carrierNetworkChangeMode
    int dataActivity -> dataActivity
    int dataNetType -> dataNetType
    int dataRegState -> dataRegState
    java.lang.String networkName -> networkName
    int voiceLevel -> voiceLevel
    int voiceNetType -> voiceNetType
    int voiceRegState -> voiceRegState
    void <init>() -> <init>
    void copyFrom(com.android.systemui.statusbar.policy.SignalController$State) -> copyFrom
    boolean equals(java.lang.Object) -> equals
    void toString(java.lang.StringBuilder) -> toString
android.support.v4.widget.TextViewCompat$TextViewCompatBaseImpl -> android.support.v4.widget.TextViewCompat$TextViewCompatBaseImpl:
    void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    void <init>() -> <init>
android.support.v17.leanback.transition.ParallaxTransition -> android.support.v17.leanback.transition.ParallaxTransition:
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onAppear
    void <clinit>() -> <clinit>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.animation.Animator createAnimator(android.view.View) -> createAnimator
    void <init>() -> <init>
    android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onDisappear
android.support.v7.media.MediaRouterJellybean$RouteInfo -> android.support.v7.media.MediaRouterJellybean$RouteInfo:
    int getVolume(java.lang.Object) -> getVolume
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.lang.Object getTag(java.lang.Object) -> getTag
    void requestSetVolume(java.lang.Object,int) -> requestSetVolume
    int getPlaybackStream(java.lang.Object) -> getPlaybackStream
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    int getVolumeHandling(java.lang.Object) -> getVolumeHandling
    void requestUpdateVolume(java.lang.Object,int) -> requestUpdateVolume
    void setTag(java.lang.Object,java.lang.Object) -> setTag
    void <init>() -> <init>
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    int getVolumeMax(java.lang.Object) -> getVolumeMax
com.android.systemui.recents.events.ui.HideIncompatibleAppOverlayEvent -> com.android.systemui.recents.events.ui.HideIncompatibleAppOverlayEvent:
    void <init>() -> <init>
com.android.systemui.shortcut.ShortcutKeyServiceProxy$Callbacks -> com.android.systemui.shortcut.ShortcutKeyServiceProxy$Callbacks:
    void onShortcutKeyPressed(long) -> onShortcutKeyPressed
com.android.systemui.statusbar.policy.NetworkControllerImpl$Config -> com.android.systemui.statusbar.policy.NetworkControllerImpl$Config:
    boolean alwaysShowCdmaRssi -> alwaysShowCdmaRssi
    boolean hideLtePlus -> hideLtePlus
    boolean hspaDataDistinguishable -> hspaDataDistinguishable
    boolean inflateSignalStrengths -> inflateSignalStrengths
    boolean readIconsFromXml -> readIconsFromXml
    boolean show4gForLte -> show4gForLte
    boolean showAtLeast3G -> showAtLeast3G
    boolean showRsrpSignalLevelforLTE -> showRsrpSignalLevelforLTE
    void <init>() -> <init>
    com.android.systemui.statusbar.policy.NetworkControllerImpl$Config readConfig(android.content.Context) -> readConfig
android.support.v7.preference.ListPreference$SavedState$1 -> android.support.v7.preference.ListPreference$SavedState$1:
    android.support.v7.preference.ListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    android.support.v7.preference.ListPreference$SavedState[] newArray(int) -> newArray
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.plugins.annotations.Requirements -> com.android.systemui.plugins.annotations.Requirements:
    com.android.systemui.plugins.annotations.Requires[] value() -> value
android.arch.lifecycle.Lifecycle$State -> android.arch.lifecycle.Lifecycle$State:
    android.arch.lifecycle.Lifecycle$State STARTED -> STARTED
    android.arch.lifecycle.Lifecycle$State[] $VALUES -> $VALUES
    android.arch.lifecycle.Lifecycle$State INITIALIZED -> INITIALIZED
    android.arch.lifecycle.Lifecycle$State CREATED -> CREATED
    android.arch.lifecycle.Lifecycle$State DESTROYED -> DESTROYED
    android.arch.lifecycle.Lifecycle$State RESUMED -> RESUMED
    void <clinit>() -> <clinit>
    android.arch.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    android.arch.lifecycle.Lifecycle$State[] values() -> values
    void <init>(java.lang.String,int) -> <init>
com.android.systemui.plugins.PluginManager -> com.android.systemui.plugins.PluginManager:
    java.lang.String NOTIFICATION_CHANNEL_ID -> NOTIFICATION_CHANNEL_ID
    java.lang.String PLUGIN_CHANGED -> PLUGIN_CHANGED
    void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class,boolean) -> addPluginListener
    void removePluginListener(com.android.systemui.plugins.PluginListener) -> removePluginListener
    void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class) -> addPluginListener
    void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class) -> addPluginListener
    void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class,boolean) -> addPluginListener
    boolean dependsOn(com.android.systemui.plugins.Plugin,java.lang.Class) -> dependsOn
    java.lang.String getAction(java.lang.Class) -> getAction
    com.android.systemui.plugins.Plugin getOneShotPlugin(java.lang.Class) -> getOneShotPlugin
    com.android.systemui.plugins.Plugin getOneShotPlugin(java.lang.String,java.lang.Class) -> getOneShotPlugin
com.android.systemui.volume.-$Lambda$ORWkWvklx2FcycYdCeM5VfNFDMc -> com.android.systemui.volume.-$Lambda$ORWkWvklx2FcycYdCeM5VfNFDMc:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void $m$1(android.view.View) -> $m$1
    void onClick(android.view.View) -> onClick
com.android.systemui.recents.events.ui.focus.FocusNextTaskViewEvent -> com.android.systemui.recents.events.ui.focus.FocusNextTaskViewEvent:
    int timerIndicatorDuration -> timerIndicatorDuration
    void <init>(int) -> <init>
com.android.systemui.qs.QSDetailClipper -> com.android.systemui.qs.QSDetailClipper:
    android.animation.Animator mAnimator -> mAnimator
    android.graphics.drawable.TransitionDrawable mBackground -> mBackground
    android.view.View mDetail -> mDetail
    android.animation.AnimatorListenerAdapter mGoneOnEnd -> mGoneOnEnd
    java.lang.Runnable mReverseBackground -> mReverseBackground
    android.animation.AnimatorListenerAdapter mVisibleOnStart -> mVisibleOnStart
    void <init>(android.view.View) -> <init>
    void animateCircularClip(int,int,boolean,android.animation.Animator$AnimatorListener) -> animateCircularClip
    void showBackground() -> showBackground
    android.animation.Animator -get0(com.android.systemui.qs.QSDetailClipper) -> -get0
    android.graphics.drawable.TransitionDrawable -get1(com.android.systemui.qs.QSDetailClipper) -> -get1
    android.view.View -get2(com.android.systemui.qs.QSDetailClipper) -> -get2
    android.animation.Animator -set0(com.android.systemui.qs.QSDetailClipper,android.animation.Animator) -> -set0
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    int mPrimaryNavActiveIndex -> mPrimaryNavActiveIndex
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.FragmentState[] mActive -> mActive
    int mNextFragmentIndex -> mNextFragmentIndex
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
android.support.v7.app.MediaRouteExpandCollapseButton$1 -> android.support.v7.app.MediaRouteExpandCollapseButton$1:
    android.support.v7.app.MediaRouteExpandCollapseButton this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteExpandCollapseButton) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.plugins.-$Lambda$Upv-4XtKk9gV4CvuUNPqdt0_SZ8 -> com.android.systemui.plugins.-$Lambda$Upv-4XtKk9gV4CvuUNPqdt0_SZ8:
    com.android.systemui.plugins.-$Lambda$Upv-4XtKk9gV4CvuUNPqdt0_SZ8 $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.volume.VolumeDialogImpl$Accessibility$1 -> com.android.systemui.volume.VolumeDialogImpl$Accessibility$1:
    com.android.systemui.volume.VolumeDialogImpl$Accessibility this$1 -> this$1
    void <init>(com.android.systemui.volume.VolumeDialogImpl$Accessibility) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v7.app.AppCompatDelegateImplV11 -> android.support.v7.app.AppCompatDelegateImplV11:
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> callActivityOnCreateView
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
com.android.systemui.statusbar.policy.CastController -> com.android.systemui.statusbar.policy.CastController:
    java.util.Set getCastDevices() -> getCastDevices
    void setDiscovering(boolean) -> setDiscovering
    void startCasting(com.android.systemui.statusbar.policy.CastController$CastDevice) -> startCasting
    void stopCasting(com.android.systemui.statusbar.policy.CastController$CastDevice) -> stopCasting
    void setCurrentUserId(int) -> setCurrentUserId
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    void popBackStack(int,int) -> popBackStack
    boolean executePendingTransactions() -> executePendingTransactions
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean popBackStackImmediate() -> popBackStackImmediate
    java.util.List getFragments() -> getFragments
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    boolean isStateSaved() -> isStateSaved
    void <init>() -> <init>
com.android.systemui.statusbar.car.UserGridView -> com.android.systemui.statusbar.car.UserGridView:
    com.android.systemui.statusbar.car.UserGridView$Adapter mAdapter -> mAdapter
    android.animation.ValueAnimator mHeightAnimator -> mHeightAnimator
    int mHeightChildren -> mHeightChildren
    boolean mShowing -> mShowing
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    int mTargetHeight -> mTargetHeight
    com.android.systemui.statusbar.car.UserGridView$UserSelectionListener mUserSelectionListener -> mUserSelectionListener
    com.android.systemui.statusbar.policy.UserSwitcherController mUserSwitcherController -> mUserSwitcherController
    boolean isShowing() -> isShowing
    void show() -> show
    void hide() -> hide
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateHeightChange(int,int) -> animateHeightChange
    void init(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.policy.UserSwitcherController,boolean) -> init
    void onMeasure(int,int) -> onMeasure
    void onUserSwitched(int) -> onUserSwitched
    void setUserSelectionListener(com.android.systemui.statusbar.car.UserGridView$UserSelectionListener) -> setUserSelectionListener
    void showOfflineAuthUi() -> showOfflineAuthUi
    void -com_android_systemui_statusbar_car_UserGridView-mthref-0() -> -com_android_systemui_statusbar_car_UserGridView-mthref-0
    void lambda$-com_android_systemui_statusbar_car_UserGridView_5435(android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_car_UserGridView_5435
    com.android.systemui.statusbar.car.UserGridView$UserSelectionListener -get0(com.android.systemui.statusbar.car.UserGridView) -> -get0
    com.android.systemui.statusbar.policy.UserSwitcherController -get1(com.android.systemui.statusbar.car.UserGridView) -> -get1
    android.animation.ValueAnimator -set0(com.android.systemui.statusbar.car.UserGridView,android.animation.ValueAnimator) -> -set0
com.android.settingslib.WirelessUtils -> com.android.settingslib.WirelessUtils:
    void <init>() -> <init>
    boolean isAirplaneModeOn(android.content.Context) -> isAirplaneModeOn
com.android.keyguard.CarrierText$1 -> com.android.keyguard.CarrierText$1:
    com.android.keyguard.CarrierText this$0 -> this$0
    void <init>(com.android.keyguard.CarrierText) -> <init>
    void onFinishedGoingToSleep(int) -> onFinishedGoingToSleep
    void onRefreshCarrierInfo() -> onRefreshCarrierInfo
    void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants$State) -> onSimStateChanged
    void onStartedWakingUp() -> onStartedWakingUp
com.android.systemui.plugins.R$transition -> com.android.systemui.plugins.R$transition:
    int lb_browse_enter_transition -> lb_browse_enter_transition
    int lb_browse_entrance_transition -> lb_browse_entrance_transition
    int lb_browse_headers_in -> lb_browse_headers_in
    int lb_browse_headers_out -> lb_browse_headers_out
    int lb_browse_return_transition -> lb_browse_return_transition
    int lb_details_enter_transition -> lb_details_enter_transition
    int lb_details_return_transition -> lb_details_return_transition
    int lb_enter_transition -> lb_enter_transition
    int lb_guidedstep_activity_enter -> lb_guidedstep_activity_enter
    int lb_guidedstep_activity_enter_bottom -> lb_guidedstep_activity_enter_bottom
    int lb_return_transition -> lb_return_transition
    int lb_shared_element_enter_transition -> lb_shared_element_enter_transition
    int lb_shared_element_return_transition -> lb_shared_element_return_transition
    int lb_title_in -> lb_title_in
    int lb_title_out -> lb_title_out
    int lb_vertical_grid_enter_transition -> lb_vertical_grid_enter_transition
    int lb_vertical_grid_entrance_transition -> lb_vertical_grid_entrance_transition
    int lb_vertical_grid_return_transition -> lb_vertical_grid_return_transition
    void <init>() -> <init>
com.android.systemui.statusbar.phone.ManagedProfileControllerImpl -> com.android.systemui.statusbar.phone.ManagedProfileControllerImpl:
    java.util.List mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    int mCurrentUser -> mCurrentUser
    boolean mListening -> mListening
    java.util.LinkedList mProfiles -> mProfiles
    android.content.BroadcastReceiver mReceiver -> mReceiver
    android.os.UserManager mUserManager -> mUserManager
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.phone.ManagedProfileController$Callback) -> addCallback
    boolean hasActiveProfile() -> hasActiveProfile
    boolean isWorkModeEnabled() -> isWorkModeEnabled
    void reloadManagedProfiles() -> reloadManagedProfiles
    void removeCallback(com.android.systemui.statusbar.phone.ManagedProfileController$Callback) -> removeCallback
    void setListening(boolean) -> setListening
    void setWorkModeEnabled(boolean) -> setWorkModeEnabled
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    java.util.List -get0(com.android.systemui.statusbar.phone.ManagedProfileControllerImpl) -> -get0
    void -wrap0(com.android.systemui.statusbar.phone.ManagedProfileControllerImpl) -> -wrap0
com.android.systemui.qs.QSDetail$2 -> com.android.systemui.qs.QSDetail$2:
    com.android.systemui.qs.QSDetail this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetail) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.Fragment$OnStartEnterTransitionListener -> android.support.v4.app.Fragment$OnStartEnterTransitionListener:
    void onStartEnterTransition() -> onStartEnterTransition
    void startListening() -> startListening
com.android.systemui.recents.views.grid.TaskViewFocusFrame -> com.android.systemui.recents.views.grid.TaskViewFocusFrame:
    com.android.systemui.recents.views.TaskStackView mSv -> mSv
    com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm mTaskGridLayoutAlgorithm -> mTaskGridLayoutAlgorithm
    void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm) -> <init>
    void moveGridTaskViewFocus(android.view.View) -> moveGridTaskViewFocus
    void measure() -> measure
    void layout() -> layout
    void resize() -> resize
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void hide() -> hide
    void onGlobalFocusChanged(android.view.View,android.view.View) -> onGlobalFocusChanged
    void show() -> show
com.android.systemui.recents.events.component.ShowUserToastEvent -> com.android.systemui.recents.events.component.ShowUserToastEvent:
    int msgResId -> msgResId
    int msgLength -> msgLength
    void <init>(int,int) -> <init>
com.android.systemui.qs.external.TileLifecycleManager -> com.android.systemui.qs.external.TileLifecycleManager:
    int mBindRetryDelay -> mBindRetryDelay
    int mBindTryCount -> mBindTryCount
    boolean mBound -> mBound
    com.android.systemui.qs.external.TileLifecycleManager$TileChangeListener mChangeListener -> mChangeListener
    android.os.IBinder mClickBinder -> mClickBinder
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    android.content.Intent mIntent -> mIntent
    boolean mIsBound -> mIsBound
    boolean mListening -> mListening
    com.android.systemui.qs.external.PackageManagerAdapter mPackageManagerAdapter -> mPackageManagerAdapter
    java.util.Set mQueuedMessages -> mQueuedMessages
    boolean mReceiverRegistered -> mReceiverRegistered
    android.os.IBinder mToken -> mToken
    boolean mUnbindImmediate -> mUnbindImmediate
    android.os.UserHandle mUser -> mUser
    com.android.systemui.qs.external.QSTileServiceWrapper mWrapper -> mWrapper
    void <init>(android.os.Handler,android.content.Context,android.service.quicksettings.IQSService,android.service.quicksettings.Tile,android.content.Intent,android.os.UserHandle) -> <init>
    void onStopListening() -> onStopListening
    void onTileRemoved() -> onTileRemoved
    void setTileAdded(android.content.Context,android.content.ComponentName,boolean) -> setTileAdded
    void flushMessagesAndUnbind() -> flushMessagesAndUnbind
    void <init>(android.os.Handler,android.content.Context,android.service.quicksettings.IQSService,android.service.quicksettings.Tile,android.content.Intent,android.os.UserHandle,com.android.systemui.qs.external.PackageManagerAdapter) -> <init>
    android.os.IBinder asBinder() -> asBinder
    void binderDied() -> binderDied
    boolean checkComponentState() -> checkComponentState
    android.content.ComponentName getComponent() -> getComponent
    android.os.IBinder getToken() -> getToken
    void handleDeath() -> handleDeath
    void handleDestroy() -> handleDestroy
    void handlePendingMessages() -> handlePendingMessages
    boolean hasPendingClick() -> hasPendingClick
    boolean isActiveTile() -> isActiveTile
    boolean isComponentAvailable() -> isComponentAvailable
    boolean isPackageAvailable() -> isPackageAvailable
    boolean isTileAdded(android.content.Context,android.content.ComponentName) -> isTileAdded
    void onClick(android.os.IBinder) -> onClick
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStartListening() -> onStartListening
    void onTileAdded() -> onTileAdded
    void onUnlockComplete() -> onUnlockComplete
    void queueMessage(int) -> queueMessage
    void setBindService(boolean) -> setBindService
    void setTileChangeListener(com.android.systemui.qs.external.TileLifecycleManager$TileChangeListener) -> setTileChangeListener
    void startPackageListening() -> startPackageListening
    void stopPackageListening() -> stopPackageListening
    boolean -get0(com.android.systemui.qs.external.TileLifecycleManager) -> -get0
com.android.settingslib.R$attr -> com.android.settingslib.R$attr:
    int footerPreferenceStyle -> footerPreferenceStyle
    int state_encrypted -> state_encrypted
    int state_metered -> state_metered
    int wifi_friction -> wifi_friction
    void <init>() -> <init>
android.support.v7.widget.RecyclerView$SmoothScroller -> android.support.v7.widget.RecyclerView$SmoothScroller:
    boolean mRunning -> mRunning
    android.view.View mTargetView -> mTargetView
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> mLayoutManager
    boolean mPendingInitialRun -> mPendingInitialRun
    int mTargetPosition -> mTargetPosition
    android.support.v7.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> mRecyclingAction
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    void onStop() -> onStop
    void onAnimation(int,int) -> onAnimation
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    void normalize(android.graphics.PointF) -> normalize
    void onStart() -> onStart
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    android.view.View findViewByPosition(int) -> findViewByPosition
    void setTargetPosition(int) -> setTargetPosition
    int getTargetPosition() -> getTargetPosition
    void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    int getChildCount() -> getChildCount
    int getChildPosition(android.view.View) -> getChildPosition
    void start(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$LayoutManager) -> start
    boolean isRunning() -> isRunning
    void -wrap0(android.support.v7.widget.RecyclerView$SmoothScroller,int,int) -> -wrap0
    void <init>() -> <init>
    void stop() -> stop
    boolean isPendingInitialRun() -> isPendingInitialRun
com.android.systemui.volume.VolumeDialogControllerImpl$C$3 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$3:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    com.android.systemui.plugins.VolumeDialogController$State val$copy -> val$copy
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry,com.android.systemui.plugins.VolumeDialogController$State) -> <init>
    void run() -> run
android.support.v17.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller -> android.support.v17.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller:
    android.support.v17.leanback.widget.GridLayoutManager this$0 -> this$0
    boolean mStaggeredGrid -> mStaggeredGrid
    int mPendingMoves -> mPendingMoves
    void onStop() -> onStop
    void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
    void consumePendingMovesAfterLayout() -> consumePendingMovesAfterLayout
    void decreasePendingMoves() -> decreasePendingMoves
    void <init>(android.support.v17.leanback.widget.GridLayoutManager,int,boolean) -> <init>
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    void increasePendingMoves() -> increasePendingMoves
    void consumePendingMovesBeforeLayout() -> consumePendingMovesBeforeLayout
com.android.systemui.recents.Recents$3 -> com.android.systemui.recents.Recents$3:
    com.android.systemui.recents.Recents this$0 -> this$0
    com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent val$event -> val$event
    void <init>(com.android.systemui.recents.Recents,com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent) -> <init>
    void run() -> run
com.android.systemui.volume.VolumeDialogMotion$2 -> com.android.systemui.volume.VolumeDialogMotion$2:
    com.android.systemui.volume.VolumeDialogMotion this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogMotion) -> <init>
    void onShow(android.content.DialogInterface) -> onShow
com.android.systemui.volume.VolumeDialogImpl$VolumeRow -> com.android.systemui.volume.VolumeDialogImpl$VolumeRow:
    android.animation.ObjectAnimator anim -> anim
    int animTargetProgress -> animTargetProgress
    int cachedIconRes -> cachedIconRes
    android.content.res.ColorStateList cachedSliderTint -> cachedSliderTint
    android.widget.TextView header -> header
    android.widget.ImageButton icon -> icon
    int iconMuteRes -> iconMuteRes
    int iconRes -> iconRes
    int iconState -> iconState
    boolean important -> important
    int lastAudibleLevel -> lastAudibleLevel
    int requestedLevel -> requestedLevel
    android.widget.SeekBar slider -> slider
    com.android.systemui.plugins.VolumeDialogController$StreamState ss -> ss
    int stream -> stream
    boolean tracking -> tracking
    long userAttempt -> userAttempt
    android.view.View view -> view
    void <init>() -> <init>
    android.animation.ObjectAnimator -get0(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get0
    int -get1(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get1
    int -get2(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get2
    android.content.res.ColorStateList -get3(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get3
    android.widget.TextView -get4(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get4
    android.widget.ImageButton -get5(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get5
    int -get6(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get6
    int -get7(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get7
    int -get8(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get8
    boolean -get9(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get9
    int -get10(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get10
    int -get11(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get11
    android.widget.SeekBar -get12(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get12
    com.android.systemui.plugins.VolumeDialogController$StreamState -get13(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get13
    int -get14(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get14
    boolean -get15(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get15
    long -get16(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get16
    android.view.View -get17(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -get17
    android.animation.ObjectAnimator -set0(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,android.animation.ObjectAnimator) -> -set0
    int -set1(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> -set1
    int -set2(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> -set2
    android.content.res.ColorStateList -set3(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,android.content.res.ColorStateList) -> -set3
    android.widget.TextView -set4(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,android.widget.TextView) -> -set4
    android.widget.ImageButton -set5(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,android.widget.ImageButton) -> -set5
    int -set6(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> -set6
    int -set7(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> -set7
    int -set8(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> -set8
    boolean -set9(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,boolean) -> -set9
    int -set10(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> -set10
    int -set11(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> -set11
    android.widget.SeekBar -set12(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,android.widget.SeekBar) -> -set12
    com.android.systemui.plugins.VolumeDialogController$StreamState -set13(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,com.android.systemui.plugins.VolumeDialogController$StreamState) -> -set13
    int -set14(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> -set14
    boolean -set15(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,boolean) -> -set15
    long -set16(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,long) -> -set16
    android.view.View -set17(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,android.view.View) -> -set17
    void <init>(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> <init>
com.android.systemui.statusbar.NotificationHeaderUtil$TextViewComparator -> com.android.systemui.statusbar.NotificationHeaderUtil$TextViewComparator:
    void <init>() -> <init>
    boolean compare(android.view.View,android.view.View,java.lang.Object,java.lang.Object) -> compare
    boolean isEmpty(android.view.View) -> isEmpty
    void <init>(com.android.systemui.statusbar.NotificationHeaderUtil$TextViewComparator) -> <init>
com.android.keyguard.KeyguardDisplayManager$2 -> com.android.keyguard.KeyguardDisplayManager$2:
    com.android.keyguard.KeyguardDisplayManager this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardDisplayManager) -> <init>
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.systemui.recents.model.RecentsPackageMonitor -> com.android.systemui.recents.model.RecentsPackageMonitor:
    void <init>() -> <init>
    boolean onPackageChanged(java.lang.String,int,java.lang.String[]) -> onPackageChanged
    void onPackageModified(java.lang.String) -> onPackageModified
    void onPackageRemoved(java.lang.String,int) -> onPackageRemoved
    void register(android.content.Context) -> register
    void unregister() -> unregister
android.support.v4.graphics.drawable.DrawableWrapperApi19 -> android.support.v4.graphics.drawable.DrawableWrapperApi19:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    boolean isAutoMirrored() -> isAutoMirrored
    void setAutoMirrored(boolean) -> setAutoMirrored
android.support.v7.widget.RecyclerView$5 -> android.support.v7.widget.RecyclerView$5:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void removeViewAt(int) -> removeViewAt
    void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    void detachViewFromParent(int) -> detachViewFromParent
    void addView(android.view.View,int) -> addView
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    int indexOfChild(android.view.View) -> indexOfChild
    int getChildCount() -> getChildCount
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void removeAllViews() -> removeAllViews
    void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    android.view.View getChildAt(int) -> getChildAt
android.support.v7.widget.RecyclerView$OnFlingListener -> android.support.v7.widget.RecyclerView$OnFlingListener:
    void <init>() -> <init>
    boolean onFling(int,int) -> onFling
android.support.v4.content.res.FontResourcesParserCompat$FetchStrategy -> android.support.v4.content.res.FontResourcesParserCompat$FetchStrategy:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl:
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    void <init>() -> <init>
android.support.v4.app.FragmentTransition$1 -> android.support.v4.app.FragmentTransition$1:
    java.util.ArrayList val$exitingViews -> val$exitingViews
    void <init>(java.util.ArrayList) -> <init>
    void run() -> run
android.support.v7.graphics.Palette$Swatch -> android.support.v7.graphics.Palette$Swatch:
    int mGreen -> mGreen
    int mRed -> mRed
    int mRgb -> mRgb
    int mTitleTextColor -> mTitleTextColor
    int mBlue -> mBlue
    int mBodyTextColor -> mBodyTextColor
    float[] mHsl -> mHsl
    int mPopulation -> mPopulation
    boolean mGeneratedTextColors -> mGeneratedTextColors
    float[] getHsl() -> getHsl
    void ensureTextColorsGenerated() -> ensureTextColorsGenerated
    void <init>(int,int) -> <init>
    int getPopulation() -> getPopulation
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int getTitleTextColor() -> getTitleTextColor
    java.lang.String toString() -> toString
    int getRgb() -> getRgb
    int getBodyTextColor() -> getBodyTextColor
android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams -> android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.android.systemui.statusbar.policy.AccessPointControllerImpl$1 -> com.android.systemui.statusbar.policy.AccessPointControllerImpl$1:
    com.android.systemui.statusbar.policy.AccessPointControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.AccessPointControllerImpl) -> <init>
    void onFailure(int) -> onFailure
    void onSuccess() -> onSuccess
com.android.systemui.statusbar.phone.BarTransitions -> com.android.systemui.statusbar.phone.BarTransitions:
    boolean mAlwaysOpaque -> mAlwaysOpaque
    com.android.systemui.statusbar.phone.BarTransitions$BarBackgroundDrawable mBarBackground -> mBarBackground
    int mMode -> mMode
    java.lang.String mTag -> mTag
    android.view.View mView -> mView
    void setAutoDim(boolean) -> setAutoDim
    void transitionTo(int,boolean) -> transitionTo
    void finishAnimations() -> finishAnimations
    java.lang.String modeToString(int) -> modeToString
    int getMode() -> getMode
    void <init>(android.view.View,int) -> <init>
    void applyModeBackground(int,int,boolean) -> applyModeBackground
    boolean isLightsOut(int) -> isLightsOut
    void onTransition(int,int,boolean) -> onTransition
    void setAlwaysOpaque(boolean) -> setAlwaysOpaque
    boolean isAlwaysOpaque() -> isAlwaysOpaque
android.support.v17.leanback.widget.SearchBar$1 -> android.support.v17.leanback.widget.SearchBar$1:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
com.android.systemui.qs.TileLayout -> com.android.systemui.qs.TileLayout:
    java.util.ArrayList mRecords -> mRecords
    int mColumns -> mColumns
    int mCellHeight -> mCellHeight
    int mCellMargin -> mCellMargin
    int mCellMarginTop -> mCellMarginTop
    int mCellWidth -> mCellWidth
    boolean mListening -> mListening
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean updateResources() -> updateResources
    void setListening(boolean) -> setListening
    void removeAllViews() -> removeAllViews
    void addTile(com.android.systemui.qs.QSPanel$TileRecord) -> addTile
    void <init>(android.content.Context) -> <init>
    int exactly(int) -> exactly
    int getColumnStart(int) -> getColumnStart
    int getOffsetTop(com.android.systemui.qs.QSPanel$TileRecord) -> getOffsetTop
    int getRowTop(int) -> getRowTop
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void removeTile(com.android.systemui.qs.QSPanel$TileRecord) -> removeTile
com.android.systemui.statusbar.phone.StatusBar$43$1 -> com.android.systemui.statusbar.phone.StatusBar$43$1:
    com.android.systemui.statusbar.phone.StatusBar$43 this$1 -> this$1
    com.android.systemui.statusbar.ExpandableNotificationRow val$row -> val$row
    com.android.systemui.statusbar.NotificationGuts val$guts -> val$guts
    int val$x -> val$x
    int val$y -> val$y
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem val$item -> val$item
    void <init>(com.android.systemui.statusbar.phone.StatusBar$43,com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.statusbar.NotificationGuts,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.ManagedProfileControllerImpl$1 -> com.android.systemui.statusbar.phone.ManagedProfileControllerImpl$1:
    com.android.systemui.statusbar.phone.ManagedProfileControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.ManagedProfileControllerImpl) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.FlingAnimationUtils$AnimatorProperties -> com.android.systemui.statusbar.FlingAnimationUtils$AnimatorProperties:
    long duration -> duration
    android.view.animation.Interpolator interpolator -> interpolator
    void <init>() -> <init>
    void <init>(com.android.systemui.statusbar.FlingAnimationUtils$AnimatorProperties) -> <init>
android.support.v17.leanback.widget.GridLayoutManager$SavedState$1 -> android.support.v17.leanback.widget.GridLayoutManager$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v17.leanback.widget.GridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    void <init>() -> <init>
    android.support.v17.leanback.widget.GridLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.DrawableUtils -> android.support.v7.widget.DrawableUtils:
    android.graphics.Rect INSETS_NONE -> INSETS_NONE
    java.lang.Class sInsetsClazz -> sInsetsClazz
    void <clinit>() -> <clinit>
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    void <init>() -> <init>
    boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
android.support.annotation.ColorInt -> android.support.annotation.ColorInt:
com.android.systemui.statusbar.policy.UserSwitcherController$AddUserDialog -> com.android.systemui.statusbar.policy.UserSwitcherController$AddUserDialog:
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController,android.content.Context) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatApi21Impl -> android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatApi21Impl:
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
android.support.v17.leanback.widget.PlaybackTransportRowView -> android.support.v17.leanback.widget.PlaybackTransportRowView:
    android.support.v17.leanback.widget.PlaybackTransportRowView$OnUnhandledKeyListener mOnUnhandledKeyListener -> mOnUnhandledKeyListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.systemui.plugins.statusbar.phone.NavGesture -> com.android.systemui.plugins.statusbar.phone.NavGesture:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    com.android.systemui.plugins.statusbar.phone.NavGesture$GestureHelper getGestureHelper() -> getGestureHelper
com.android.systemui.statusbar.phone.PhoneStatusBarTransitions -> com.android.systemui.statusbar.phone.PhoneStatusBarTransitions:
    android.view.View mBattery -> mBattery
    android.view.View mClock -> mClock
    android.animation.Animator mCurrentAnimation -> mCurrentAnimation
    float mIconAlphaWhenOpaque -> mIconAlphaWhenOpaque
    android.view.View mLeftSide -> mLeftSide
    android.view.View mSignalCluster -> mSignalCluster
    android.view.View mStatusIcons -> mStatusIcons
    com.android.systemui.statusbar.phone.PhoneStatusBarView mView -> mView
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarView) -> <init>
    void init() -> init
    android.animation.ObjectAnimator animateTransitionTo(android.view.View,float) -> animateTransitionTo
    void applyMode(int,boolean) -> applyMode
    float getBatteryClockAlpha(int) -> getBatteryClockAlpha
    float getNonBatteryClockAlphaFor(int) -> getNonBatteryClockAlphaFor
    boolean isOpaque(int) -> isOpaque
    void onTransition(int,int,boolean) -> onTransition
com.android.systemui.statusbar.policy.NetworkControllerImpl$2 -> com.android.systemui.statusbar.policy.NetworkControllerImpl$2:
    com.android.systemui.statusbar.policy.NetworkControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> <init>
    void onMobileDataEnabled(boolean) -> onMobileDataEnabled
android.support.v7.widget.TintInfo -> android.support.v7.widget.TintInfo:
    boolean mHasTintList -> mHasTintList
    android.content.res.ColorStateList mTintList -> mTintList
    boolean mHasTintMode -> mHasTintMode
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    void <init>() -> <init>
    void clear() -> clear
com.android.systemui.statusbar.phone.StatusBar$25 -> com.android.systemui.statusbar.phone.StatusBar$25:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onBatteryLevelChanged(int,boolean,boolean) -> onBatteryLevelChanged
    void onPowerSaveChanged(boolean) -> onPowerSaveChanged
com.android.systemui.statusbar.notification.NotificationCustomViewWrapper -> com.android.systemui.statusbar.notification.NotificationCustomViewWrapper:
    android.graphics.Paint mGreyPaint -> mGreyPaint
    com.android.systemui.ViewInvertHelper mInvertHelper -> mInvertHelper
    boolean mIsLegacy -> mIsLegacy
    int mLegacyColor -> mLegacyColor
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void fadeGrayscale(boolean,long) -> fadeGrayscale
    int getCustomBackgroundColor() -> getCustomBackgroundColor
    void setDark(boolean,boolean,long) -> setDark
    void setLegacy(boolean) -> setLegacy
    void setVisible(boolean) -> setVisible
    boolean shouldClearBackgroundOnReapply() -> shouldClearBackgroundOnReapply
    void updateGrayscale(boolean) -> updateGrayscale
    void lambda$-com_android_systemui_statusbar_notification_NotificationCustomViewWrapper_2519(android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_notification_NotificationCustomViewWrapper_2519
com.android.systemui.statusbar.stack.StackStateAnimator$5 -> com.android.systemui.statusbar.stack.StackStateAnimator$5:
    com.android.systemui.statusbar.stack.StackStateAnimator this$0 -> this$0
    boolean val$onTop -> val$onTop
    void <init>(com.android.systemui.statusbar.stack.StackStateAnimator,boolean) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.policy.UserSwitcherController$5 -> com.android.systemui.statusbar.policy.UserSwitcherController$5:
    android.content.Intent USER_SETTINGS_INTENT -> USER_SETTINGS_INTENT
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup) -> createDetailView
    int getMetricsCategory() -> getMetricsCategory
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.Boolean getToggleState() -> getToggleState
    void setToggleState(boolean) -> setToggleState
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    boolean mViewDestroyed -> mViewDestroyed
    boolean mCancelable -> mCancelable
    boolean mDismissed -> mDismissed
    android.app.Dialog mDialog -> mDialog
    boolean mShownByMe -> mShownByMe
    int mStyle -> mStyle
    boolean mShowsDialog -> mShowsDialog
    int mTheme -> mTheme
    int mBackStackId -> mBackStackId
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    void onCancel(android.content.DialogInterface) -> onCancel
    android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    void onStart() -> onStart
    int getTheme() -> getTheme
    android.app.Dialog getDialog() -> getDialog
    void onAttach(android.content.Context) -> onAttach
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setCancelable(boolean) -> setCancelable
    void setupDialog(android.app.Dialog,int) -> setupDialog
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void dismissInternal(boolean) -> dismissInternal
    void onDetach() -> onDetach
    void <init>() -> <init>
    void onDestroyView() -> onDestroyView
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    int mAbsGravity -> mAbsGravity
    void onEdgeTouched(int,int) -> onEdgeTouched
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    void <init>(android.support.v4.widget.DrawerLayout,int) -> <init>
    void closeOtherDrawer() -> closeOtherDrawer
    void peekDrawer() -> peekDrawer
    void removeCallbacks() -> removeCallbacks
    boolean onEdgeLock(int) -> onEdgeLock
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
android.support.v7.widget.ViewStubCompat -> android.support.v7.widget.ViewStubCompat:
    java.lang.ref.WeakReference mInflatedViewRef -> mInflatedViewRef
    android.support.v7.widget.ViewStubCompat$OnInflateListener mInflateListener -> mInflateListener
    android.view.LayoutInflater mInflater -> mInflater
    int mInflatedId -> mInflatedId
    int mLayoutResource -> mLayoutResource
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    void onMeasure(int,int) -> onMeasure
    android.view.View inflate() -> inflate
    void draw(android.graphics.Canvas) -> draw
    void setVisibility(int) -> setVisibility
com.android.settingslib.bluetooth.BluetoothEventManager$1 -> com.android.settingslib.bluetooth.BluetoothEventManager$1:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.systemui.egg.MLand$Params -> com.android.systemui.egg.MLand$Params:
    int BOOST_DV -> BOOST_DV
    int BUILDING_HEIGHT_MIN -> BUILDING_HEIGHT_MIN
    int BUILDING_WIDTH_MAX -> BUILDING_WIDTH_MAX
    int BUILDING_WIDTH_MIN -> BUILDING_WIDTH_MIN
    int CLOUD_SIZE_MAX -> CLOUD_SIZE_MAX
    int CLOUD_SIZE_MIN -> CLOUD_SIZE_MIN
    int G -> G
    float HUD_Z -> HUD_Z
    int MAX_V -> MAX_V
    int OBSTACLE_GAP -> OBSTACLE_GAP
    int OBSTACLE_MIN -> OBSTACLE_MIN
    int OBSTACLE_PERIOD -> OBSTACLE_PERIOD
    int OBSTACLE_SPACING -> OBSTACLE_SPACING
    int OBSTACLE_STEM_WIDTH -> OBSTACLE_STEM_WIDTH
    int OBSTACLE_WIDTH -> OBSTACLE_WIDTH
    float OBSTACLE_Z -> OBSTACLE_Z
    int PLAYER_HIT_SIZE -> PLAYER_HIT_SIZE
    int PLAYER_SIZE -> PLAYER_SIZE
    float PLAYER_Z -> PLAYER_Z
    float PLAYER_Z_BOOST -> PLAYER_Z_BOOST
    float SCENERY_Z -> SCENERY_Z
    int STAR_SIZE_MAX -> STAR_SIZE_MAX
    int STAR_SIZE_MIN -> STAR_SIZE_MIN
    float TRANSLATION_PER_SEC -> TRANSLATION_PER_SEC
    void <init>(android.content.res.Resources) -> <init>
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    boolean isPeeking -> isPeeking
    int openState -> openState
    float onScreen -> onScreen
    int gravity -> gravity
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.support.v4.widget.DrawerLayout$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
com.android.systemui.statusbar.policy.RotationLockController$RotationLockControllerCallback -> com.android.systemui.statusbar.policy.RotationLockController$RotationLockControllerCallback:
    void onRotationLockStateChanged(boolean,boolean) -> onRotationLockStateChanged
com.android.systemui.statusbar.phone.FingerprintUnlockController$2 -> com.android.systemui.statusbar.phone.FingerprintUnlockController$2:
    com.android.systemui.statusbar.phone.FingerprintUnlockController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> <init>
    void onFinishedWakingUp() -> onFinishedWakingUp
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    int size -> size
    int createCount -> createCount
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    int putCount -> putCount
    void evictAll() -> evictAll
    java.lang.Object remove(java.lang.Object) -> remove
    void <init>(int) -> <init>
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    java.util.Map snapshot() -> snapshot
    void trimToSize(int) -> trimToSize
    java.lang.Object get(java.lang.Object) -> get
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    int size() -> size
    java.lang.String toString() -> toString
com.android.systemui.statusbar.phone.TrustDrawable$1 -> com.android.systemui.statusbar.phone.TrustDrawable$1:
    com.android.systemui.statusbar.phone.TrustDrawable this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.TrustDrawable) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.volume.Interaction$2 -> com.android.systemui.volume.Interaction$2:
    com.android.systemui.volume.Interaction$Callback val$callback -> val$callback
    void <init>(com.android.systemui.volume.Interaction$Callback) -> <init>
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
com.android.systemui.statusbar.ExpandableNotificationRow$3 -> com.android.systemui.statusbar.ExpandableNotificationRow$3:
    com.android.systemui.statusbar.ExpandableNotificationRow this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onInflate(android.view.ViewStub,android.view.View) -> onInflate
android.support.v7.graphics.Palette -> android.support.v7.graphics.Palette:
    java.util.List mSwatches -> mSwatches
    java.util.Map mSelectedSwatches -> mSelectedSwatches
    android.support.v7.graphics.Palette$Filter DEFAULT_FILTER -> DEFAULT_FILTER
    android.support.v7.graphics.Palette$Swatch mDominantSwatch -> mDominantSwatch
    java.util.List mTargets -> mTargets
    android.util.SparseBooleanArray mUsedColors -> mUsedColors
    android.support.v7.graphics.Palette$Swatch getLightMutedSwatch() -> getLightMutedSwatch
    java.util.List getSwatches() -> getSwatches
    android.support.v7.graphics.Palette$Swatch generateScoredTarget(android.support.v7.graphics.Target) -> generateScoredTarget
    android.support.v7.graphics.Palette$Builder from(android.graphics.Bitmap) -> from
    android.support.v7.graphics.Palette$Swatch getDarkMutedSwatch() -> getDarkMutedSwatch
    android.support.v7.graphics.Palette$Swatch getDarkVibrantSwatch() -> getDarkVibrantSwatch
    android.support.v7.graphics.Palette$Swatch getVibrantSwatch() -> getVibrantSwatch
    android.support.v7.graphics.Palette$Swatch getMaxScoredSwatchForTarget(android.support.v7.graphics.Target) -> getMaxScoredSwatchForTarget
    android.support.v7.graphics.Palette$Swatch getLightVibrantSwatch() -> getLightVibrantSwatch
    void <init>(java.util.List,java.util.List) -> <init>
    android.support.v7.graphics.Palette$Swatch getSwatchForTarget(android.support.v7.graphics.Target) -> getSwatchForTarget
    boolean shouldBeScoredForTarget(android.support.v7.graphics.Palette$Swatch,android.support.v7.graphics.Target) -> shouldBeScoredForTarget
    void <clinit>() -> <clinit>
    void generate() -> generate
    android.support.v7.graphics.Palette$Swatch getMutedSwatch() -> getMutedSwatch
    android.support.v7.graphics.Palette$Swatch findDominantSwatch() -> findDominantSwatch
    float generateScore(android.support.v7.graphics.Palette$Swatch,android.support.v7.graphics.Target) -> generateScore
    android.support.v7.graphics.Palette$Swatch getDominantSwatch() -> getDominantSwatch
android.support.v7.media.RegisteredMediaRouteProvider$Connection$1 -> android.support.v7.media.RegisteredMediaRouteProvider$Connection$1:
    android.support.v7.media.RegisteredMediaRouteProvider$Connection this$1 -> this$1
    void run() -> run
    void <init>(android.support.v7.media.RegisteredMediaRouteProvider$Connection) -> <init>
com.android.systemui.statusbar.policy.AccessibilityController -> com.android.systemui.statusbar.policy.AccessibilityController:
    boolean mAccessibilityEnabled -> mAccessibilityEnabled
    java.util.ArrayList mChangeCallbacks -> mChangeCallbacks
    boolean mTouchExplorationEnabled -> mTouchExplorationEnabled
    void <init>(android.content.Context) -> <init>
    void addStateChangedCallback(com.android.systemui.statusbar.policy.AccessibilityController$AccessibilityStateChangedCallback) -> addStateChangedCallback
    void fireChanged() -> fireChanged
    boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
    void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
    void removeStateChangedCallback(com.android.systemui.statusbar.policy.AccessibilityController$AccessibilityStateChangedCallback) -> removeStateChangedCallback
android.support.v7.preference.DropDownPreference -> android.support.v7.preference.DropDownPreference:
    android.content.Context mContext -> mContext
    android.widget.Spinner mSpinner -> mSpinner
    android.widget.ArrayAdapter mAdapter -> mAdapter
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void updateEntries() -> updateEntries
    void <init>(android.content.Context) -> <init>
    void notifyChanged() -> notifyChanged
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    int findSpinnerIndexOfValue(java.lang.String) -> findSpinnerIndexOfValue
    void onClick() -> onClick
    void setEntries(java.lang.CharSequence[]) -> setEntries
    android.widget.ArrayAdapter createAdapter() -> createAdapter
android.support.v7.widget.ViewInfoStore$ProcessCallback -> android.support.v7.widget.ViewInfoStore$ProcessCallback:
    void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    void processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    void unused(android.support.v7.widget.RecyclerView$ViewHolder) -> unused
com.android.systemui.volume.VolumeDialogControllerImpl$C$5 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$5:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry) -> <init>
    void run() -> run
android.support.v7.widget.OrientationHelper$2 -> android.support.v7.widget.OrientationHelper$2:
    int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    int getMode() -> getMode
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getTotalSpace() -> getTotalSpace
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getEnd() -> getEnd
    int getModeInOther() -> getModeInOther
    int getStartAfterPadding() -> getStartAfterPadding
    int getEndPadding() -> getEndPadding
    int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    int getEndAfterPadding() -> getEndAfterPadding
    void offsetChildren(int) -> offsetChildren
android.support.v7.widget.ActivityChooserView$3 -> android.support.v7.widget.ActivityChooserView$3:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    java.lang.Object mProvider -> mProvider
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object getProvider() -> getProvider
    void <init>(java.lang.Object) -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v7.content.res.AppCompatResources -> android.support.v7.content.res.AppCompatResources:
    java.lang.Object sColorStateCacheLock -> sColorStateCacheLock
    java.lang.ThreadLocal TL_TYPED_VALUE -> TL_TYPED_VALUE
    java.util.WeakHashMap sColorStateCaches -> sColorStateCaches
    android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    boolean isColorInt(android.content.Context,int) -> isColorInt
    android.util.TypedValue getTypedValue() -> getTypedValue
    void <clinit>() -> <clinit>
    void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    void <init>() -> <init>
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
android.support.v7.media.SystemMediaRouteProvider$SyncCallback -> android.support.v7.media.SystemMediaRouteProvider$SyncCallback:
    void onSystemRouteSelectedByDescriptorId(java.lang.String) -> onSystemRouteSelectedByDescriptorId
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> mDelegateState
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    boolean canApplyTheme() -> canApplyTheme
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
com.android.systemui.statusbar.KeyboardShortcutsReceiver -> com.android.systemui.statusbar.KeyboardShortcutsReceiver:
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.KeyboardShortcuts$StringDrawableContainer -> com.android.systemui.statusbar.KeyboardShortcuts$StringDrawableContainer:
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    java.lang.String mString -> mString
    void <init>(java.lang.String,android.graphics.drawable.Drawable) -> <init>
com.android.systemui.doze.DozeHost$Callback -> com.android.systemui.doze.DozeHost$Callback:
    void onNotificationHeadsUp() -> onNotificationHeadsUp
    void onPowerSaveChanged(boolean) -> onPowerSaveChanged
com.android.systemui.qs.tiles.BatterySaverTile$BatterySaverIcon -> com.android.systemui.qs.tiles.BatterySaverTile$BatterySaverIcon:
    int mState -> mState
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
    int -set0(com.android.systemui.qs.tiles.BatterySaverTile$BatterySaverIcon,int) -> -set0
com.android.systemui.recents.RecentsActivity$1 -> com.android.systemui.recents.RecentsActivity$1:
    com.android.systemui.recents.RecentsActivity this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsActivity) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.notification.InflationException -> com.android.systemui.statusbar.notification.InflationException:
    void <init>(java.lang.String) -> <init>
android.arch.lifecycle.Lifecycle -> android.arch.lifecycle.Lifecycle:
    void <init>() -> <init>
com.android.systemui.qs.QSSecurityFooter$1 -> com.android.systemui.qs.QSSecurityFooter$1:
    com.android.systemui.qs.QSSecurityFooter this$0 -> this$0
    void <init>(com.android.systemui.qs.QSSecurityFooter) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBar$30 -> com.android.systemui.statusbar.phone.StatusBar$30:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onRemoteInputSent(com.android.systemui.statusbar.NotificationData$Entry) -> onRemoteInputSent
    void lambda$-com_android_systemui_statusbar_phone_StatusBar$30_71745(com.android.systemui.statusbar.NotificationData$Entry) -> lambda$-com_android_systemui_statusbar_phone_StatusBar$30_71745
android.support.v17.leanback.transition.SlideKitkat$CalculateSlideVertical -> android.support.v17.leanback.transition.SlideKitkat$CalculateSlideVertical:
    android.util.Property getProperty() -> getProperty
    float getHere(android.view.View) -> getHere
    void <init>() -> <init>
com.android.systemui.recents.views.TaskStackViewScroller$2 -> com.android.systemui.recents.views.TaskStackViewScroller$2:
    com.android.systemui.recents.views.TaskStackViewScroller this$0 -> this$0
    java.lang.Runnable val$postRunnable -> val$postRunnable
    void <init>(com.android.systemui.recents.views.TaskStackViewScroller,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v17.leanback.widget.picker.Picker$1 -> android.support.v17.leanback.widget.picker.Picker$1:
    android.support.v17.leanback.widget.picker.Picker this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.picker.Picker) -> <init>
    void onChildViewHolderSelected(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,int) -> onChildViewHolderSelected
com.android.systemui.statusbar.phone.StatusBar$31 -> com.android.systemui.statusbar.phone.StatusBar$31:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.statusbar.notification.NotificationInflater$4 -> com.android.systemui.statusbar.notification.NotificationInflater$4:
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress val$result -> val$result
    void <init>(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> <init>
    android.widget.RemoteViews getRemoteView() -> getRemoteView
    void setResultView(android.view.View) -> setResultView
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    android.content.Context mContext -> mContext
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int mRowIDColumn -> mRowIDColumn
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    boolean mDataValid -> mDataValid
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursor(android.database.Cursor) -> changeCursor
    android.widget.Filter getFilter() -> getFilter
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    int getCount() -> getCount
    void onContentChanged() -> onContentChanged
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.database.Cursor getCursor() -> getCursor
    boolean hasStableIds() -> hasStableIds
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    boolean mEntryValid -> mEntryValid
    int mIndex -> mIndex
    android.support.v4.util.MapCollections this$0 -> this$0
    java.lang.Object getKey() -> getKey
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
    java.util.Map$Entry next() -> next
    java.lang.Object setValue(java.lang.Object) -> setValue
    void <init>(android.support.v4.util.MapCollections) -> <init>
    void remove() -> remove
com.android.keyguard.KeyguardPinBasedInputView$2 -> com.android.keyguard.KeyguardPinBasedInputView$2:
    com.android.keyguard.KeyguardPinBasedInputView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPinBasedInputView) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v17.leanback.widget.BaseCardView$LayoutParams -> android.support.v17.leanback.widget.BaseCardView$LayoutParams:
    int viewType -> viewType
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.support.v17.leanback.widget.BaseCardView$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
com.android.systemui.statusbar.stack.AnimationProperties -> com.android.systemui.statusbar.stack.AnimationProperties:
    long delay -> delay
    long duration -> duration
    android.util.ArrayMap mInterpolatorMap -> mInterpolatorMap
    com.android.systemui.statusbar.stack.AnimationFilter getAnimationFilter() -> getAnimationFilter
    com.android.systemui.statusbar.stack.AnimationProperties resetCustomInterpolators() -> resetCustomInterpolators
    void combineCustomInterpolators(com.android.systemui.statusbar.stack.AnimationProperties) -> combineCustomInterpolators
    com.android.systemui.statusbar.stack.AnimationProperties setDuration(long) -> setDuration
    void <init>() -> <init>
    com.android.systemui.statusbar.stack.AnimationProperties setCustomInterpolator(android.util.Property,android.view.animation.Interpolator) -> setCustomInterpolator
    com.android.systemui.statusbar.stack.AnimationProperties setDelay(long) -> setDelay
    boolean wasAdded(android.view.View) -> wasAdded
    android.animation.AnimatorListenerAdapter getAnimationFinishListener() -> getAnimationFinishListener
    android.view.animation.Interpolator getCustomInterpolator(android.view.View,android.util.Property) -> getCustomInterpolator
com.android.systemui.qs.QSDetailItems$Callback -> com.android.systemui.qs.QSDetailItems$Callback:
    void onDetailItemClick(com.android.systemui.qs.QSDetailItems$Item) -> onDetailItemClick
    void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems$Item) -> onDetailItemDisconnect
android.support.v17.leanback.widget.NonOverlappingLinearLayout -> android.support.v17.leanback.widget.NonOverlappingLinearLayout:
    boolean mDeferFocusableViewAvailableInLayout -> mDeferFocusableViewAvailableInLayout
    boolean mFocusableViewAvailableFixEnabled -> mFocusableViewAvailableFixEnabled
    java.util.ArrayList mSortedAvailableViews -> mSortedAvailableViews
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void focusableViewAvailable(android.view.View) -> focusableViewAvailable
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void <init>(android.support.v4.view.ViewPager) -> <init>
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.Fragment fragment -> fragment
    int cmd -> cmd
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    int exitAnim -> exitAnim
    int enterAnim -> enterAnim
    void <init>() -> <init>
    void <init>(int,android.support.v4.app.Fragment) -> <init>
com.android.systemui.statusbar.KeyboardShortcuts$4 -> com.android.systemui.statusbar.KeyboardShortcuts$4:
    com.android.systemui.statusbar.KeyboardShortcuts this$0 -> this$0
    java.util.List val$keyboardShortcutGroups -> val$keyboardShortcutGroups
    void <init>(com.android.systemui.statusbar.KeyboardShortcuts,java.util.List) -> <init>
    void run() -> run
com.android.settingslib.wifi.WifiTracker$AccessPointListenerAdapter -> com.android.settingslib.wifi.WifiTracker$AccessPointListenerAdapter:
    android.util.SparseIntArray mPendingNotifications -> mPendingNotifications
    void <init>() -> <init>
    void onLevelChanged(com.android.settingslib.wifi.AccessPoint) -> onLevelChanged
    void <init>(com.android.settingslib.wifi.WifiTracker$AccessPointListenerAdapter) -> <init>
    void onAccessPointChanged(com.android.settingslib.wifi.AccessPoint) -> onAccessPointChanged
com.android.systemui.statusbar.policy.FlashlightControllerImpl -> com.android.systemui.statusbar.policy.FlashlightControllerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String mCameraId -> mCameraId
    android.hardware.camera2.CameraManager mCameraManager -> mCameraManager
    android.content.Context mContext -> mContext
    boolean mFlashlightEnabled -> mFlashlightEnabled
    android.os.Handler mHandler -> mHandler
    java.util.ArrayList mListeners -> mListeners
    boolean mTorchAvailable -> mTorchAvailable
    android.hardware.camera2.CameraManager$TorchCallback mTorchCallback -> mTorchCallback
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.FlashlightController$FlashlightListener) -> addCallback
    void cleanUpListenersLocked(com.android.systemui.statusbar.policy.FlashlightController$FlashlightListener) -> cleanUpListenersLocked
    void dispatchAvailabilityChanged(boolean) -> dispatchAvailabilityChanged
    void dispatchError() -> dispatchError
    void dispatchListeners(int,boolean) -> dispatchListeners
    void dispatchModeChanged(boolean) -> dispatchModeChanged
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void ensureHandler() -> ensureHandler
    java.lang.String getCameraId() -> getCameraId
    boolean hasFlashlight() -> hasFlashlight
    boolean isAvailable() -> isAvailable
    boolean isEnabled() -> isEnabled
    void removeCallback(com.android.systemui.statusbar.policy.FlashlightController$FlashlightListener) -> removeCallback
    void setFlashlight(boolean) -> setFlashlight
    void tryInitCamera() -> tryInitCamera
    void <clinit>() -> <clinit>
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    boolean -get0() -> -get0
    java.lang.String -get1(com.android.systemui.statusbar.policy.FlashlightControllerImpl) -> -get1
    boolean -get2(com.android.systemui.statusbar.policy.FlashlightControllerImpl) -> -get2
    boolean -get3(com.android.systemui.statusbar.policy.FlashlightControllerImpl) -> -get3
    boolean -set0(com.android.systemui.statusbar.policy.FlashlightControllerImpl,boolean) -> -set0
    boolean -set1(com.android.systemui.statusbar.policy.FlashlightControllerImpl,boolean) -> -set1
    void -wrap0(com.android.systemui.statusbar.policy.FlashlightControllerImpl,boolean) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.FlashlightControllerImpl,boolean) -> -wrap1
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener -> android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener:
com.android.systemui.qs.tiles.FlashlightTile -> com.android.systemui.qs.tiles.FlashlightTile:
    com.android.systemui.statusbar.policy.FlashlightController mFlashlightController -> mFlashlightController
    com.android.systemui.plugins.qs.QSTile$Icon mIcon -> mIcon
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleDestroy() -> handleDestroy
    void handleLongClick() -> handleLongClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    void handleUserSwitch(int) -> handleUserSwitch
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void onFlashlightAvailabilityChanged(boolean) -> onFlashlightAvailabilityChanged
    void onFlashlightChanged(boolean) -> onFlashlightChanged
    void onFlashlightError() -> onFlashlightError
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
com.android.systemui.classifier.AccelerationClassifier -> com.android.systemui.classifier.AccelerationClassifier:
    java.util.HashMap mStrokeMap -> mStrokeMap
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v7.mediarouter.R$string -> android.support.v7.mediarouter.R$string:
    int mr_cast_button_connected -> mr_cast_button_connected
    int mr_cast_button_connecting -> mr_cast_button_connecting
    int mr_cast_button_disconnected -> mr_cast_button_disconnected
    int mr_controller_casting_screen -> mr_controller_casting_screen
    int mr_controller_collapse_group -> mr_controller_collapse_group
    int mr_controller_disconnect -> mr_controller_disconnect
    int mr_controller_expand_group -> mr_controller_expand_group
    int mr_controller_no_info_available -> mr_controller_no_info_available
    int mr_controller_no_media_selected -> mr_controller_no_media_selected
    int mr_controller_pause -> mr_controller_pause
    int mr_controller_play -> mr_controller_play
    int mr_controller_stop -> mr_controller_stop
    int mr_controller_stop_casting -> mr_controller_stop_casting
    int mr_system_route_name -> mr_system_route_name
    int mr_user_route_category_name -> mr_user_route_category_name
    void <init>() -> <init>
com.android.systemui.recents.events.activity.AppTransitionFinishedEvent -> com.android.systemui.recents.events.activity.AppTransitionFinishedEvent:
    void <init>() -> <init>
com.android.systemui.volume.-$Lambda$vM5D88JNNgGAVWmVTcPK7FEgNVw$1 -> com.android.systemui.volume.-$Lambda$vM5D88JNNgGAVWmVTcPK7FEgNVw$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    java.lang.Object $m$0() -> $m$0
    java.lang.Object get() -> get
com.android.systemui.recents.views.RecentsTransitionHelper$3 -> com.android.systemui.recents.views.RecentsTransitionHelper$3:
    com.android.systemui.recents.views.RecentsTransitionHelper this$0 -> this$0
    com.android.systemui.recents.model.TaskStack val$stack -> val$stack
    com.android.systemui.recents.model.Task val$task -> val$task
    com.android.systemui.recents.views.TaskView val$taskView -> val$taskView
    android.app.ActivityOptions val$opts -> val$opts
    com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture val$transitionFuture -> val$transitionFuture
    int val$destinationStack -> val$destinationStack
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper,com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,android.app.ActivityOptions,com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture,int) -> <init>
    void run() -> run
android.support.v4.graphics.drawable.DrawableWrapperApi21$DrawableWrapperStateLollipop -> android.support.v4.graphics.drawable.DrawableWrapperApi21$DrawableWrapperStateLollipop:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
com.android.systemui.screenshot.SaveImageInBackgroundData -> com.android.systemui.screenshot.SaveImageInBackgroundData:
    android.content.Context context -> context
    int errorMsgResId -> errorMsgResId
    java.lang.Runnable finisher -> finisher
    int iconSize -> iconSize
    android.graphics.Bitmap image -> image
    android.net.Uri imageUri -> imageUri
    int previewWidth -> previewWidth
    int previewheight -> previewheight
    void <init>() -> <init>
    void clearContext() -> clearContext
    void clearImage() -> clearImage
android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1 -> android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1:
    android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord this$2 -> this$2
    void <init>(android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord,int,int,int) -> <init>
    void onAdjustVolume(int) -> onAdjustVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    java.lang.String getPackageName() -> getPackageName
    boolean isShuffleModeEnabledDeprecated() -> isShuffleModeEnabledDeprecated
    void setShuffleModeEnabledDeprecated(boolean) -> setShuffleModeEnabledDeprecated
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    java.lang.String getTag() -> getTag
    void play() -> play
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void previous() -> previous
    void removeQueueItemAt(int) -> removeQueueItemAt
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    void pause() -> pause
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void setShuffleMode(int) -> setShuffleMode
    void rate(android.support.v4.media.RatingCompat) -> rate
    void seekTo(long) -> seekTo
    void <init>(android.os.IBinder) -> <init>
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.os.IBinder asBinder() -> asBinder
    java.util.List getQueue() -> getQueue
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void stop() -> stop
    long getFlags() -> getFlags
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    void rewind() -> rewind
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    void prepare() -> prepare
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    void setRepeatMode(int) -> setRepeatMode
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    android.os.Bundle getExtras() -> getExtras
    int getRepeatMode() -> getRepeatMode
    int getRatingType() -> getRatingType
    void fastForward() -> fastForward
    void next() -> next
    void skipToQueueItem(long) -> skipToQueueItem
    int getShuffleMode() -> getShuffleMode
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
com.android.settingslib.bluetooth.MapClientProfile$MapClientServiceListener -> com.android.settingslib.bluetooth.MapClientProfile$MapClientServiceListener:
    com.android.settingslib.bluetooth.MapClientProfile this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.MapClientProfile,com.android.settingslib.bluetooth.MapClientProfile$MapClientServiceListener) -> <init>
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
    void <init>(com.android.settingslib.bluetooth.MapClientProfile) -> <init>
com.android.systemui.pip.phone.InputConsumerController$PipInputEventReceiver -> com.android.systemui.pip.phone.InputConsumerController$PipInputEventReceiver:
    com.android.systemui.pip.phone.InputConsumerController this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.InputConsumerController,android.view.InputChannel,android.os.Looper) -> <init>
    void onInputEvent(android.view.InputEvent,int) -> onInputEvent
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.widget.ListPopupWindow$ResizePopupRunnable:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA -> com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void $m$1(android.animation.ValueAnimator) -> $m$1
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.qs.customize.-$Lambda$OFSFzbLV5l5KmOQGG6P-9IOaSaM -> com.android.systemui.qs.customize.-$Lambda$OFSFzbLV5l5KmOQGG6P-9IOaSaM:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void onKeyguardShowingChanged() -> onKeyguardShowingChanged
android.support.v7.media.MediaRouteProviderDescriptor -> android.support.v7.media.MediaRouteProviderDescriptor:
    java.util.List mRoutes -> mRoutes
    android.os.Bundle mBundle -> mBundle
    android.support.v7.media.MediaRouteProviderDescriptor fromBundle(android.os.Bundle) -> fromBundle
    java.util.List getRoutes() -> getRoutes
    void <init>(android.os.Bundle,java.util.List) -> <init>
    void ensureRoutes() -> ensureRoutes
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    void <init>(android.os.Bundle,java.util.List,android.support.v7.media.MediaRouteProviderDescriptor) -> <init>
com.android.systemui.statusbar.policy.TelephonyIcons -> com.android.systemui.statusbar.policy.TelephonyIcons:
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup ONE_X -> ONE_X
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup THREE_G -> THREE_G
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup FOUR_G -> FOUR_G
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup FOUR_G_PLUS -> FOUR_G_PLUS
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup E -> E
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup G -> G
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup H -> H
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup LTE -> LTE
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup LTE_PLUS -> LTE_PLUS
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup DATA_DISABLED -> DATA_DISABLED
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup UNKNOWN -> UNKNOWN
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup WFC -> WFC
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup CARRIER_NETWORK_CHANGE -> CARRIER_NETWORK_CHANGE
    boolean DEBUG -> DEBUG
    int[][] TELEPHONY_SIGNAL_STRENGTH_ROAMING_R -> TELEPHONY_SIGNAL_STRENGTH_ROAMING_R
    boolean isInitiated -> isInitiated
    java.lang.String[] mDataActivityArray -> mDataActivityArray
    java.lang.String[] mDataTypeArray -> mDataTypeArray
    java.lang.String[] mDataTypeDescriptionArray -> mDataTypeDescriptionArray
    java.lang.String[] mDataTypeGenerationArray -> mDataTypeGenerationArray
    java.lang.String[] mDataTypeGenerationDescArray -> mDataTypeGenerationDescArray
    android.content.res.Resources mRes -> mRes
    int[] mSelectedDataActivityIndex -> mSelectedDataActivityIndex
    java.lang.String[] mSelectedDataTypeDesc -> mSelectedDataTypeDesc
    int[] mSelectedDataTypeIcon -> mSelectedDataTypeIcon
    int[] mSelectedQSDataTypeIcon -> mSelectedQSDataTypeIcon
    int[] mSelectedSignalStreagthIndex -> mSelectedSignalStreagthIndex
    java.lang.String[] mSignalNullArray -> mSignalNullArray
    java.lang.String[] mSignalStrengthArray -> mSignalStrengthArray
    java.lang.String[] mSignalStrengthDesc -> mSignalStrengthDesc
    java.lang.String[] mSignalStrengthRoamingArray -> mSignalStrengthRoamingArray
    android.util.SparseArray mStacked2SingleIconLookup -> mStacked2SingleIconLookup
    void readIconsFromXml(android.content.Context) -> readIconsFromXml
    void updateDataType(int,int,boolean,boolean,boolean,int) -> updateDataType
    int getSignalStrengthIcon(int,int,int,boolean) -> getSignalStrengthIcon
    int getDataActivity(int,int) -> getDataActivity
    int convertMobileStrengthIcon(int) -> convertMobileStrengthIcon
    int getStackedVoiceIcon(int) -> getStackedVoiceIcon
    int getRoamingSignalIconId(int,int) -> getRoamingSignalIconId
    int[] getSignalStrengthDes(int) -> getSignalStrengthDes
    int getSignalNullIcon(int) -> getSignalNullIcon
    int getDataTypeIcon(int) -> getDataTypeIcon
    int getDataTypeDesc(int) -> getDataTypeDesc
    int getQSDataTypeIcon(int) -> getQSDataTypeIcon
    void <init>() -> <init>
    void initStacked2SingleIconLookup() -> initStacked2SingleIconLookup
    void log(java.lang.String,java.lang.String) -> log
    void <clinit>() -> <clinit>
com.android.systemui.recents.model.BackgroundTaskLoader$OnIdleChangedListener -> com.android.systemui.recents.model.BackgroundTaskLoader$OnIdleChangedListener:
    void onIdleChanged(boolean) -> onIdleChanged
com.android.systemui.statusbar.car.ConnectedDeviceSignalController -> com.android.systemui.statusbar.car.ConnectedDeviceSignalController:
    int[] SIGNAL_STRENGTH_ICONS -> SIGNAL_STRENGTH_ICONS
    android.bluetooth.BluetoothAdapter mAdapter -> mAdapter
    android.bluetooth.BluetoothHeadsetClient mBluetoothHeadsetClient -> mBluetoothHeadsetClient
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.BluetoothController mController -> mController
    android.bluetooth.BluetoothProfile$ServiceListener mHfpServiceListener -> mHfpServiceListener
    float mIconScaleFactor -> mIconScaleFactor
    android.widget.ImageView mNetworkSignalView -> mNetworkSignalView
    com.android.systemui.statusbar.phone.SignalDrawable mSignalDrawable -> mSignalDrawable
    android.view.View mSignalsView -> mSignalsView
    void <init>(android.content.Context,android.view.View) -> <init>
    void onBluetoothDevicesChanged() -> onBluetoothDevicesChanged
    void onBluetoothStateChange(boolean) -> onBluetoothStateChange
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void processActionAgEvent(android.content.Intent) -> processActionAgEvent
    void setNetworkSignalIcon(int) -> setNetworkSignalIcon
    void startListening() -> startListening
    void stopListening() -> stopListening
    void updateViewVisibility(android.bluetooth.BluetoothDevice,int) -> updateViewVisibility
    void <clinit>() -> <clinit>
    android.bluetooth.BluetoothHeadsetClient -set0(com.android.systemui.statusbar.car.ConnectedDeviceSignalController,android.bluetooth.BluetoothHeadsetClient) -> -set0
com.android.systemui.statusbar.phone.-$Lambda$XV-hQ-G8iNhGv40C_xJ7BBI6VyQ -> com.android.systemui.statusbar.phone.-$Lambda$XV-hQ-G8iNhGv40C_xJ7BBI6VyQ:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.content.DialogInterface) -> $m$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.systemui.statusbar.policy.NetworkController -> com.android.systemui.statusbar.policy.NetworkController:
    boolean hasVoiceCallingFeature() -> hasVoiceCallingFeature
    void addEmergencyListener(com.android.systemui.statusbar.policy.NetworkController$EmergencyListener) -> addEmergencyListener
    void addCallback(com.android.systemui.statusbar.policy.NetworkController$SignalCallback) -> addCallback
    void removeEmergencyListener(com.android.systemui.statusbar.policy.NetworkController$EmergencyListener) -> removeEmergencyListener
    void removeCallback(com.android.systemui.statusbar.policy.NetworkController$SignalCallback) -> removeCallback
    boolean hasEmergencyCryptKeeperText() -> hasEmergencyCryptKeeperText
    boolean isRadioOn() -> isRadioOn
    com.android.systemui.statusbar.policy.DataSaverController getDataSaverController() -> getDataSaverController
    void setWifiEnabled(boolean) -> setWifiEnabled
    com.android.systemui.statusbar.policy.NetworkController$AccessPointController getAccessPointController() -> getAccessPointController
    com.android.settingslib.net.DataUsageController getMobileDataController() -> getMobileDataController
    boolean hasMobileDataFeature() -> hasMobileDataFeature
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
android.support.v17.leanback.widget.ThumbsBar -> android.support.v17.leanback.widget.ThumbsBar:
    int mHeroThumbHeightInPixel -> mHeroThumbHeightInPixel
    int mNumOfThumbs -> mNumOfThumbs
    boolean mIsUserSets -> mIsUserSets
    android.util.SparseArray mBitmaps -> mBitmaps
    int mMeasuredMarginInPixel -> mMeasuredMarginInPixel
    int mThumbHeightInPixel -> mThumbHeightInPixel
    int mThumbWidthInPixel -> mThumbWidthInPixel
    int mHeroThumbWidthInPixel -> mHeroThumbWidthInPixel
    int getHeroIndex() -> getHeroIndex
    android.view.View createThumbView(android.view.ViewGroup) -> createThumbView
    int roundUp(int,int) -> roundUp
    void onMeasure(int,int) -> onMeasure
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int calculateNumOfThumbs(int) -> calculateNumOfThumbs
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setNumberOfThumbsInternal() -> setNumberOfThumbsInternal
android.support.v7.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.widget.ScrollingTabContainerView$TabClickListener:
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.ScrollingTabContainerView -> android.support.v7.widget.ScrollingTabContainerView:
    int mContentHeight -> mContentHeight
    android.widget.Spinner mTabSpinner -> mTabSpinner
    int mStackedTabMaxWidth -> mStackedTabMaxWidth
    android.support.v7.widget.LinearLayoutCompat mTabLayout -> mTabLayout
    java.lang.Runnable mTabSelector -> mTabSelector
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    android.support.v7.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> mTabClickListener
    int mMaxTabWidth -> mMaxTabWidth
    boolean mAllowCollapse -> mAllowCollapse
    int mSelectedTabIndex -> mSelectedTabIndex
    android.widget.Spinner createSpinner() -> createSpinner
    void onAttachedToWindow() -> onAttachedToWindow
    void setTabSelected(int) -> setTabSelected
    boolean performExpand() -> performExpand
    void onMeasure(int,int) -> onMeasure
    void performCollapse() -> performCollapse
    android.support.v7.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> createTabView
    boolean isCollapsed() -> isCollapsed
    void setContentHeight(int) -> setContentHeight
    void setAllowCollapse(boolean) -> setAllowCollapse
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void <clinit>() -> <clinit>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void animateToTab(int) -> animateToTab
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.systemui.recents.IRecentsSystemUserCallbacks -> com.android.systemui.recents.IRecentsSystemUserCallbacks:
    void updateRecentsVisibility(boolean) -> updateRecentsVisibility
    void startScreenPinning(int) -> startScreenPinning
    void sendRecentsDrawnEvent() -> sendRecentsDrawnEvent
    void sendDockingTopTaskEvent(int,android.graphics.Rect) -> sendDockingTopTaskEvent
    void sendLaunchRecentsEvent() -> sendLaunchRecentsEvent
    void setWaitingForTransitionStartEvent(boolean) -> setWaitingForTransitionStartEvent
    void registerNonSystemUserCallbacks(android.os.IBinder,int) -> registerNonSystemUserCallbacks
android.support.v14.preference.SwitchPreference$Listener -> android.support.v14.preference.SwitchPreference$Listener:
    android.support.v14.preference.SwitchPreference this$0 -> this$0
    void <init>(android.support.v14.preference.SwitchPreference) -> <init>
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void <init>(android.support.v14.preference.SwitchPreference,android.support.v14.preference.SwitchPreference$Listener) -> <init>
com.android.keyguard.KeyguardStatusView$Patterns -> com.android.keyguard.KeyguardStatusView$Patterns:
    java.lang.String cacheKey -> cacheKey
    java.lang.String clockView12 -> clockView12
    java.lang.String clockView24 -> clockView24
    java.lang.String dateViewSkel -> dateViewSkel
    void <init>() -> <init>
    void update(android.content.Context,boolean) -> update
com.android.systemui.statusbar.-$Lambda$abXbX53Lopwo-4Vedqn7ystL8Qc$1 -> com.android.systemui.statusbar.-$Lambda$abXbX53Lopwo-4Vedqn7ystL8Qc$1:
    com.android.systemui.statusbar.-$Lambda$abXbX53Lopwo-4Vedqn7ystL8Qc$1 $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    int $m$0(java.lang.Object) -> $m$0
    int applyAsInt(java.lang.Object) -> applyAsInt
com.android.systemui.plugins.qs.DetailAdapter -> com.android.systemui.plugins.qs.DetailAdapter:
    int VERSION -> VERSION
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTitle() -> getTitle
    void setToggleState(boolean) -> setToggleState
    android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup) -> createDetailView
    java.lang.Boolean getToggleState() -> getToggleState
    boolean getToggleEnabled() -> getToggleEnabled
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    boolean hasHeader() -> hasHeader
com.android.systemui.pip.tv.PipNotification$1 -> com.android.systemui.pip.tv.PipNotification$1:
    com.android.systemui.pip.tv.PipNotification this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipNotification) -> <init>
    void onMoveToFullscreen() -> onMoveToFullscreen
    void onPipActivityClosed() -> onPipActivityClosed
    void onPipEntered() -> onPipEntered
    void onPipMenuActionsChanged(android.content.pm.ParceledListSlice) -> onPipMenuActionsChanged
    void onPipResizeAboutToStart() -> onPipResizeAboutToStart
    void onShowPipMenu() -> onShowPipMenu
android.support.v7.widget.DecorToolbar -> android.support.v7.widget.DecorToolbar:
    void collapseActionView() -> collapseActionView
    void setDisplayOptions(int) -> setDisplayOptions
    boolean showOverflowMenu() -> showOverflowMenu
    void dismissPopupMenus() -> dismissPopupMenus
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void initProgress() -> initProgress
    android.view.ViewGroup getViewGroup() -> getViewGroup
    int getNavigationMode() -> getNavigationMode
    android.content.Context getContext() -> getContext
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    int getDisplayOptions() -> getDisplayOptions
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setMenuPrepared() -> setMenuPrepared
    android.view.Menu getMenu() -> getMenu
    void initIndeterminateProgress() -> initIndeterminateProgress
    boolean hasExpandedActionView() -> hasExpandedActionView
    void setVisibility(int) -> setVisibility
    void setCollapsible(boolean) -> setCollapsible
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
com.android.systemui.statusbar.phone.FingerprintUnlockController$5 -> com.android.systemui.statusbar.phone.FingerprintUnlockController$5:
    com.android.systemui.statusbar.phone.FingerprintUnlockController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> <init>
    void run() -> run
com.android.systemui.globalactions.GlobalActionsDialog$4 -> com.android.systemui.globalactions.GlobalActionsDialog$4:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
android.support.v17.leanback.transition.SlideKitkat$4 -> android.support.v17.leanback.transition.SlideKitkat$4:
    void <init>() -> <init>
    float getGone(android.view.View) -> getGone
com.android.systemui.plugins.annotations.Dependencies -> com.android.systemui.plugins.annotations.Dependencies:
    com.android.systemui.plugins.annotations.DependsOn[] value() -> value
com.android.systemui.statusbar.phone.StatusBar$12 -> com.android.systemui.statusbar.phone.StatusBar$12:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.settingslib.wifi.AccessPointPreference -> com.android.settingslib.wifi.AccessPointPreference:
    android.graphics.drawable.Drawable mBadge -> mBadge
    boolean mForSavedNetworks -> mForSavedNetworks
    com.android.settingslib.wifi.AccessPointPreference$UserBadgeCache mBadgeCache -> mBadgeCache
    int[] WIFI_CONNECTION_STRENGTH -> WIFI_CONNECTION_STRENGTH
    int[] STATE_METERED -> STATE_METERED
    android.widget.TextView mTitleView -> mTitleView
    int[] STATE_SECURED -> STATE_SECURED
    android.graphics.drawable.StateListDrawable mFrictionSld -> mFrictionSld
    int mBadgePadding -> mBadgePadding
    int mLevel -> mLevel
    java.lang.CharSequence mContentDescription -> mContentDescription
    java.lang.Runnable mNotifyChanged -> mNotifyChanged
    int mWifiSpeed -> mWifiSpeed
    int[] FRICTION_ATTRS -> FRICTION_ATTRS
    com.android.settingslib.wifi.AccessPoint mAccessPoint -> mAccessPoint
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void bindFrictionImage(android.widget.ImageView) -> bindFrictionImage
    void postNotifyChanged() -> postNotifyChanged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <clinit>() -> <clinit>
    void notifyChanged() -> notifyChanged
    void setTitle(com.android.settingslib.wifi.AccessPointPreference,com.android.settingslib.wifi.AccessPoint,boolean) -> setTitle
    java.lang.CharSequence buildContentDescription(android.content.Context,android.support.v7.preference.Preference,com.android.settingslib.wifi.AccessPoint) -> buildContentDescription
android.support.v7.media.MediaRouteProvider$ProviderHandler -> android.support.v7.media.MediaRouteProvider$ProviderHandler:
    android.support.v7.media.MediaRouteProvider this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(android.support.v7.media.MediaRouteProvider) -> <init>
com.android.systemui.Prefs -> com.android.systemui.Prefs:
    java.util.Map getAll(android.content.Context) -> getAll
    void registerListener(android.content.Context,android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerListener
    void putInt(android.content.Context,java.lang.String,int) -> putInt
    int getInt(android.content.Context,java.lang.String,int) -> getInt
    boolean getBoolean(android.content.Context,java.lang.String,boolean) -> getBoolean
    void putBoolean(android.content.Context,java.lang.String,boolean) -> putBoolean
    void <init>() -> <init>
    android.content.SharedPreferences get(android.content.Context) -> get
    long getLong(android.content.Context,java.lang.String,long) -> getLong
    void remove(android.content.Context,java.lang.String) -> remove
    void unregisterListener(android.content.Context,android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterListener
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$3$1 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$3$1:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView$3 this$1 -> this$1
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView$3) -> <init>
    void run() -> run
android.support.v7.media.MediaRouter$GlobalMediaRouter$RemoteControlClientRecord -> android.support.v7.media.MediaRouter$GlobalMediaRouter$RemoteControlClientRecord:
    android.support.v7.media.MediaRouter$GlobalMediaRouter this$1 -> this$1
    android.support.v7.media.RemoteControlClientCompat mRccCompat -> mRccCompat
    void updatePlaybackInfo() -> updatePlaybackInfo
com.android.systemui.qs.tiles.CellularTile$CellularDetailAdapter -> com.android.systemui.qs.tiles.CellularTile$CellularDetailAdapter:
    com.android.systemui.qs.tiles.CellularTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.CellularTile) -> <init>
    android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup) -> createDetailView
    int getMetricsCategory() -> getMetricsCategory
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.Boolean getToggleState() -> getToggleState
    void setMobileDataEnabled(boolean) -> setMobileDataEnabled
    void setToggleState(boolean) -> setToggleState
    void <init>(com.android.systemui.qs.tiles.CellularTile,com.android.systemui.qs.tiles.CellularTile$CellularDetailAdapter) -> <init>
com.android.systemui.recents.views.TaskStackAnimationHelper$2 -> com.android.systemui.recents.views.TaskStackAnimationHelper$2:
    com.android.systemui.recents.views.TaskStackAnimationHelper this$0 -> this$0
    com.android.systemui.recents.views.TaskView val$tv -> val$tv
    void <init>(com.android.systemui.recents.views.TaskStackAnimationHelper,com.android.systemui.recents.views.TaskView) -> <init>
    void run() -> run
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
    void <init>() -> <init>
com.android.systemui.tuner.TunerServiceImpl$1 -> com.android.systemui.tuner.TunerServiceImpl$1:
    com.android.systemui.tuner.TunerServiceImpl this$0 -> this$0
    void <init>(com.android.systemui.tuner.TunerServiceImpl,android.content.Context) -> <init>
    void onUserSwitched(int) -> onUserSwitched
com.android.systemui.statusbar.DismissView -> com.android.systemui.statusbar.DismissView:
    int mClearAllTopPadding -> mClearAllTopPadding
    com.android.systemui.statusbar.DismissViewButton mDismissButton -> mDismissButton
    void setOnButtonClickListener(android.view.View$OnClickListener) -> setOnButtonClickListener
    void setTextColor(int) -> setTextColor
    boolean isButtonVisible() -> isButtonVisible
    boolean isOnEmptySpace(float,float) -> isOnEmptySpace
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    com.android.systemui.statusbar.stack.ExpandableViewState createNewViewState(com.android.systemui.statusbar.stack.StackScrollState) -> createNewViewState
    android.view.View findContentView() -> findContentView
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onFinishInflate() -> onFinishInflate
    int -get0(com.android.systemui.statusbar.DismissView) -> -get0
com.android.systemui.stackdivider.DividerView$3 -> com.android.systemui.stackdivider.DividerView$3:
    com.android.systemui.stackdivider.DividerView this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.DividerView) -> <init>
    void run() -> run
com.android.systemui.recents.RecentsSystemUser -> com.android.systemui.recents.RecentsSystemUser:
    android.content.Context mContext -> mContext
    com.android.systemui.recents.RecentsImpl mImpl -> mImpl
    android.util.SparseArray mNonSystemUserRecents -> mNonSystemUserRecents
    void <init>(android.content.Context,com.android.systemui.recents.RecentsImpl) -> <init>
    com.android.systemui.recents.IRecentsNonSystemUserCallbacks getNonSystemUserRecentsForUser(int) -> getNonSystemUserRecentsForUser
    void registerNonSystemUserCallbacks(android.os.IBinder,int) -> registerNonSystemUserCallbacks
    void sendDockingTopTaskEvent(int,android.graphics.Rect) -> sendDockingTopTaskEvent
    void sendLaunchRecentsEvent() -> sendLaunchRecentsEvent
    void sendRecentsDrawnEvent() -> sendRecentsDrawnEvent
    void setWaitingForTransitionStartEvent(boolean) -> setWaitingForTransitionStartEvent
    void startScreenPinning(int) -> startScreenPinning
    void updateRecentsVisibility(boolean) -> updateRecentsVisibility
    void lambda$-com_android_systemui_recents_RecentsSystemUser_3334(boolean) -> lambda$-com_android_systemui_recents_RecentsSystemUser_3334
    void lambda$-com_android_systemui_recents_RecentsSystemUser_3525(int) -> lambda$-com_android_systemui_recents_RecentsSystemUser_3525
    android.util.SparseArray -get0(com.android.systemui.recents.RecentsSystemUser) -> -get0
com.android.systemui.statusbar.policy.DataSaverController -> com.android.systemui.statusbar.policy.DataSaverController:
    boolean isDataSaverEnabled() -> isDataSaverEnabled
    void setDataSaverEnabled(boolean) -> setDataSaverEnabled
com.android.systemui.statusbar.policy.SignalController$State -> com.android.systemui.statusbar.policy.SignalController$State:
    int level -> level
    boolean connected -> connected
    boolean enabled -> enabled
    com.android.systemui.statusbar.policy.SignalController$IconGroup iconGroup -> iconGroup
    int inetCondition -> inetCondition
    boolean activityIn -> activityIn
    boolean activityOut -> activityOut
    int rssi -> rssi
    long time -> time
    void <init>() -> <init>
    void copyFrom(com.android.systemui.statusbar.policy.SignalController$State) -> copyFrom
    void toString(java.lang.StringBuilder) -> toString
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo$1 -> com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.qs.customize.TileAdapter$6 -> com.android.systemui.qs.customize.TileAdapter$6:
    com.android.systemui.qs.customize.TileAdapter this$0 -> this$0
    int val$position -> val$position
    com.android.systemui.qs.customize.TileQueryHelper$TileInfo val$info -> val$info
    android.view.View val$v -> val$v
    void <init>(com.android.systemui.qs.customize.TileAdapter,int,com.android.systemui.qs.customize.TileQueryHelper$TileInfo,android.view.View) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.usb.UsbDebuggingSecondaryUserActivity -> com.android.systemui.usb.UsbDebuggingSecondaryUserActivity:
    com.android.systemui.usb.UsbDebuggingSecondaryUserActivity$UsbDisconnectedReceiver mDisconnectedReceiver -> mDisconnectedReceiver
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
android.support.graphics.drawable.VectorDrawableCompat -> android.support.graphics.drawable.VectorDrawableCompat:
    android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate -> mCachedConstantStateDelegate
    boolean mAllowCaching -> mAllowCaching
    android.graphics.PorterDuffColorFilter mTintFilter -> mTintFilter
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> DEFAULT_TINT_MODE
    float[] mTmpFloats -> mTmpFloats
    android.graphics.ColorFilter mColorFilter -> mColorFilter
    android.graphics.Rect mTmpBounds -> mTmpBounds
    boolean mMutated -> mMutated
    android.graphics.Matrix mTmpMatrix -> mTmpMatrix
    android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> mVectorState
    void setAlpha(int) -> setAlpha
    int applyAlpha(int,float) -> applyAlpha
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean canApplyTheme() -> canApplyTheme
    android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    void clearColorFilter() -> clearColorFilter
    int getMinimumHeight() -> getMinimumHeight
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean isAutoMirrored() -> isAutoMirrored
    boolean setVisible(boolean,boolean) -> setVisible
    int getAlpha() -> getAlpha
    void setChangingConfigurations(int) -> setChangingConfigurations
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void setAllowCaching(boolean) -> setAllowCaching
    boolean isStateful() -> isStateful
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    int getOpacity() -> getOpacity
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean setState(int[]) -> setState
    int getIntrinsicWidth() -> getIntrinsicWidth
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setAutoMirrored(boolean) -> setAutoMirrored
    void setTint(int) -> setTint
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    boolean needMirroring() -> needMirroring
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    android.graphics.drawable.Drawable mutate() -> mutate
    boolean onStateChange(int[]) -> onStateChange
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setFilterBitmap(boolean) -> setFilterBitmap
    android.support.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    int[] getState() -> getState
    int getChangingConfigurations() -> getChangingConfigurations
    void setTintList(android.content.res.ColorStateList) -> setTintList
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    int getMinimumWidth() -> getMinimumWidth
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void <clinit>() -> <clinit>
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    void setHotspot(float,float) -> setHotspot
    void <init>() -> <init>
    android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    boolean getPadding(android.graphics.Rect) -> getPadding
    java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
com.android.systemui.statusbar.CommandQueue$H -> com.android.systemui.statusbar.CommandQueue$H:
    com.android.systemui.statusbar.CommandQueue this$0 -> this$0
    void <init>(com.android.systemui.statusbar.CommandQueue,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.android.systemui.statusbar.CommandQueue,android.os.Looper,com.android.systemui.statusbar.CommandQueue$H) -> <init>
android.support.v17.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef -> android.support.v17.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef:
    boolean mOffsetWithPadding -> mOffsetWithPadding
    int mOffset -> mOffset
    int mFocusViewId -> mFocusViewId
    float mOffsetPercent -> mOffsetPercent
    int mViewId -> mViewId
    boolean mAlignToBaseline -> mAlignToBaseline
    int getItemAlignmentFocusViewId() -> getItemAlignmentFocusViewId
    boolean isAlignedToTextViewBaseLine() -> isAlignedToTextViewBaseLine
    void <init>() -> <init>
com.android.systemui.doze.DozeLog -> com.android.systemui.doze.DozeLog:
    java.text.SimpleDateFormat FORMAT -> FORMAT
    int SIZE -> SIZE
    int sCount -> sCount
    com.android.systemui.doze.DozeLog$SummaryStats sEmergencyCallStats -> sEmergencyCallStats
    com.android.keyguard.KeyguardUpdateMonitorCallback sKeyguardCallback -> sKeyguardCallback
    java.lang.String[] sMessages -> sMessages
    com.android.systemui.doze.DozeLog$SummaryStats sNotificationPulseStats -> sNotificationPulseStats
    com.android.systemui.doze.DozeLog$SummaryStats sPickupPulseNearVibrationStats -> sPickupPulseNearVibrationStats
    com.android.systemui.doze.DozeLog$SummaryStats sPickupPulseNotNearVibrationStats -> sPickupPulseNotNearVibrationStats
    int sPosition -> sPosition
    com.android.systemui.doze.DozeLog$SummaryStats[][] sProxStats -> sProxStats
    boolean sPulsing -> sPulsing
    boolean sRegisterKeyguardCallback -> sRegisterKeyguardCallback
    com.android.systemui.doze.DozeLog$SummaryStats sScreenOnNotPulsingStats -> sScreenOnNotPulsingStats
    com.android.systemui.doze.DozeLog$SummaryStats sScreenOnPulsingStats -> sScreenOnPulsingStats
    long sSince -> sSince
    long[] sTimes -> sTimes
    void traceSensor(android.content.Context,int) -> traceSensor
    void traceState(com.android.systemui.doze.DozeMachine$State) -> traceState
    void traceDozing(android.content.Context,boolean) -> traceDozing
    void tracePulseTouchDisabledByProx(android.content.Context,boolean) -> tracePulseTouchDisabledByProx
    void dump(java.io.PrintWriter) -> dump
    void traceFling(boolean,boolean,boolean,boolean) -> traceFling
    java.lang.String pulseReasonToString(int) -> pulseReasonToString
    void tracePulseStart(int) -> tracePulseStart
    void tracePulseFinish() -> tracePulseFinish
    void traceNotificationPulse(android.content.Context) -> traceNotificationPulse
    void traceProximityResult(android.content.Context,boolean,long,int) -> traceProximityResult
    void tracePickupPulse(android.content.Context,boolean) -> tracePickupPulse
    void tracePulseDropped(android.content.Context,boolean,com.android.systemui.doze.DozeMachine$State,boolean) -> tracePulseDropped
    void traceMissedTick(java.lang.String) -> traceMissedTick
    void <init>() -> <init>
    void init(android.content.Context) -> init
    void log(java.lang.String) -> log
    void traceEmergencyCall() -> traceEmergencyCall
    void traceKeyguard(boolean) -> traceKeyguard
    void traceKeyguardBouncerChanged(boolean) -> traceKeyguardBouncerChanged
    void traceScreenOff(int) -> traceScreenOff
    void traceScreenOn() -> traceScreenOn
    void <clinit>() -> <clinit>
    long -get0() -> -get0
android.support.v17.leanback.widget.SeekBar$AccessibilitySeekListener -> android.support.v17.leanback.widget.SeekBar$AccessibilitySeekListener:
    boolean onAccessibilitySeekForward() -> onAccessibilitySeekForward
    void <init>() -> <init>
    boolean onAccessibilitySeekBackward() -> onAccessibilitySeekBackward
com.android.systemui.qs.customize.QSCustomizer -> com.android.systemui.qs.customize.QSCustomizer:
    boolean isShown -> isShown
    com.android.systemui.qs.QSDetailClipper mClipper -> mClipper
    android.animation.Animator$AnimatorListener mCollapseAnimationListener -> mCollapseAnimationListener
    boolean mCustomizing -> mCustomizing
    android.animation.Animator$AnimatorListener mExpandAnimationListener -> mExpandAnimationListener
    boolean mFinishedFetchingTiles -> mFinishedFetchingTiles
    com.android.systemui.qs.QSTileHost mHost -> mHost
    boolean mIsShowingNavBackdrop -> mIsShowingNavBackdrop
    com.android.systemui.statusbar.policy.KeyguardMonitor$Callback mKeyguardCallback -> mKeyguardCallback
    com.android.systemui.statusbar.phone.LightBarController mLightBarController -> mLightBarController
    com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer mNotifQsContainer -> mNotifQsContainer
    boolean mOpening -> mOpening
    com.android.systemui.plugins.qs.QS mQs -> mQs
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    com.android.systemui.qs.customize.TileAdapter mTileAdapter -> mTileAdapter
    android.widget.Toolbar mToolbar -> mToolbar
    int mX -> mX
    int mY -> mY
    void setQs(com.android.systemui.plugins.qs.QS) -> setQs
    void setEditLocation(int,int) -> setEditLocation
    void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    void saveInstanceState(android.os.Bundle) -> saveInstanceState
    void setContainer(com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer) -> setContainer
    boolean isCustomizing() -> isCustomizing
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void hide(int,int) -> hide
    boolean isShown() -> isShown
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void queryTiles() -> queryTiles
    void reset() -> reset
    void save() -> save
    void setCustomizing(boolean) -> setCustomizing
    void setHost(com.android.systemui.qs.QSTileHost) -> setHost
    void setTileSpecs() -> setTileSpecs
    void show(int,int) -> show
    void showImmediately() -> showImmediately
    void updateNavBackDrop(android.content.res.Configuration) -> updateNavBackDrop
    void updateNavColors() -> updateNavColors
    void lambda$-com_android_systemui_qs_customize_QSCustomizer_11158() -> lambda$-com_android_systemui_qs_customize_QSCustomizer_11158
    void lambda$-com_android_systemui_qs_customize_QSCustomizer_7847() -> lambda$-com_android_systemui_qs_customize_QSCustomizer_7847
    void lambda$-com_android_systemui_qs_customize_QSCustomizer_7955() -> lambda$-com_android_systemui_qs_customize_QSCustomizer_7955
    boolean -get0(com.android.systemui.qs.customize.QSCustomizer) -> -get0
    com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer -get1(com.android.systemui.qs.customize.QSCustomizer) -> -get1
    android.support.v7.widget.RecyclerView -get2(com.android.systemui.qs.customize.QSCustomizer) -> -get2
    com.android.systemui.qs.customize.TileAdapter -get3(com.android.systemui.qs.customize.QSCustomizer) -> -get3
    boolean -set0(com.android.systemui.qs.customize.QSCustomizer,boolean) -> -set0
    void -wrap0(com.android.systemui.qs.customize.QSCustomizer,boolean) -> -wrap0
com.android.systemui.volume.-$Lambda$ui5EvSWNOuZ0Tj08Tw94S7U8DmA -> com.android.systemui.volume.-$Lambda$ui5EvSWNOuZ0Tj08Tw94S7U8DmA:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
com.android.systemui.statusbar.notification.-$Lambda$i-OzK8bcRGEPVjiIvScg5OybJuA -> com.android.systemui.statusbar.notification.-$Lambda$i-OzK8bcRGEPVjiIvScg5OybJuA:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    boolean $m$0(int,float[]) -> $m$0
    boolean $m$1(int,float[]) -> $m$1
    boolean isAllowed(int,float[]) -> isAllowed
android.support.v7.media.MediaRouter$ControlRequestCallback -> android.support.v7.media.MediaRouter$ControlRequestCallback:
    void onError(java.lang.String,android.os.Bundle) -> onError
    void <init>() -> <init>
    void onResult(android.os.Bundle) -> onResult
com.android.systemui.statusbar.ExpandableOutlineView -> com.android.systemui.statusbar.ExpandableOutlineView:
    boolean mCustomOutline -> mCustomOutline
    float mOutlineAlpha -> mOutlineAlpha
    float mOutlineRadius -> mOutlineRadius
    android.graphics.Rect mOutlineRect -> mOutlineRect
    android.view.ViewOutlineProvider mProvider -> mProvider
    boolean mShouldTranslateContents -> mShouldTranslateContents
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    float getOutlineAlpha() -> getOutlineAlpha
    int getOutlineTranslation() -> getOutlineTranslation
    void initDimens() -> initDimens
    boolean needsOutline() -> needsOutline
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void setActualHeight(int,boolean) -> setActualHeight
    void setClipBottomAmount(int) -> setClipBottomAmount
    void setClipTopAmount(int) -> setClipTopAmount
    void setOutlineAlpha(float) -> setOutlineAlpha
    void setOutlineRect(android.graphics.RectF) -> setOutlineRect
    void setOutlineRect(float,float,float,float) -> setOutlineRect
    void updateOutline() -> updateOutline
    boolean -get0(com.android.systemui.statusbar.ExpandableOutlineView) -> -get0
    float -get1(com.android.systemui.statusbar.ExpandableOutlineView) -> -get1
    float -get2(com.android.systemui.statusbar.ExpandableOutlineView) -> -get2
    android.graphics.Rect -get3(com.android.systemui.statusbar.ExpandableOutlineView) -> -get3
android.support.v7.graphics.drawable.DrawableWrapper -> android.support.v7.graphics.drawable.DrawableWrapper:
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    void setAlpha(int) -> setAlpha
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    int getMinimumHeight() -> getMinimumHeight
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    void setDither(boolean) -> setDither
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean isAutoMirrored() -> isAutoMirrored
    boolean setVisible(boolean,boolean) -> setVisible
    void setChangingConfigurations(int) -> setChangingConfigurations
    boolean isStateful() -> isStateful
    int getOpacity() -> getOpacity
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean setState(int[]) -> setState
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    int getIntrinsicWidth() -> getIntrinsicWidth
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setAutoMirrored(boolean) -> setAutoMirrored
    void setTint(int) -> setTint
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    void <init>(android.graphics.drawable.Drawable) -> <init>
    int[] getState() -> getState
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setTintList(android.content.res.ColorStateList) -> setTintList
    int getMinimumWidth() -> getMinimumWidth
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void setHotspot(float,float) -> setHotspot
    boolean getPadding(android.graphics.Rect) -> getPadding
    boolean onLevelChange(int) -> onLevelChange
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.protobuf.nano.CodedInputByteBufferNano -> com.google.protobuf.nano.CodedInputByteBufferNano:
    int sizeLimit -> sizeLimit
    int bufferPos -> bufferPos
    int bufferSize -> bufferSize
    int currentLimit -> currentLimit
    int bufferStart -> bufferStart
    int bufferSizeAfterLimit -> bufferSizeAfterLimit
    int lastTag -> lastTag
    int recursionLimit -> recursionLimit
    byte[] buffer -> buffer
    int recursionDepth -> recursionDepth
    void popLimit(int) -> popLimit
    boolean isAtEnd() -> isAtEnd
    int getPosition() -> getPosition
    int pushLimit(int) -> pushLimit
    int readRawVarint32() -> readRawVarint32
    int readTag() -> readTag
    int readRawLittleEndian32() -> readRawLittleEndian32
    long readRawVarint64() -> readRawVarint64
    void readMessage(com.google.protobuf.nano.MessageNano) -> readMessage
    void recomputeBufferSizeAfterLimit() -> recomputeBufferSizeAfterLimit
    long readUInt64() -> readUInt64
    boolean readBool() -> readBool
    void <init>(byte[],int,int) -> <init>
    byte readRawByte() -> readRawByte
    java.lang.String readString() -> readString
    com.google.protobuf.nano.CodedInputByteBufferNano newInstance(byte[],int,int) -> newInstance
    void skipRawBytes(int) -> skipRawBytes
    void rewindToPosition(int) -> rewindToPosition
    int readInt32() -> readInt32
    byte[] readRawBytes(int) -> readRawBytes
    float readFloat() -> readFloat
    long readRawLittleEndian64() -> readRawLittleEndian64
    void skipMessage() -> skipMessage
    void checkLastTagWas(int) -> checkLastTagWas
    boolean skipField(int) -> skipField
com.android.systemui.recents.views.FakeShadowDrawable -> com.android.systemui.recents.views.FakeShadowDrawable:
    double COS_45 -> COS_45
    boolean mAddPaddingForCorners -> mAddPaddingForCorners
    android.graphics.RectF mCardBounds -> mCardBounds
    float mCornerRadius -> mCornerRadius
    android.graphics.Paint mCornerShadowPaint -> mCornerShadowPaint
    android.graphics.Path mCornerShadowPath -> mCornerShadowPath
    boolean mDirty -> mDirty
    android.graphics.Paint mEdgeShadowPaint -> mEdgeShadowPaint
    float mInsetShadow -> mInsetShadow
    float mMaxShadowSize -> mMaxShadowSize
    boolean mPrintedShadowClipWarning -> mPrintedShadowClipWarning
    float mRawMaxShadowSize -> mRawMaxShadowSize
    float mRawShadowSize -> mRawShadowSize
    int mShadowEndColor -> mShadowEndColor
    float mShadowSize -> mShadowSize
    int mShadowStartColor -> mShadowStartColor
    void <init>(android.content.res.Resources,com.android.systemui.recents.RecentsConfiguration) -> <init>
    void buildComponents(android.graphics.Rect) -> buildComponents
    void buildShadowCorners() -> buildShadowCorners
    float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    void draw(android.graphics.Canvas) -> draw
    void drawShadow(android.graphics.Canvas) -> drawShadow
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setShadowSize(float,float) -> setShadowSize
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.ViewPager,android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v7.widget.ActionBarOverlayLayout$2 -> android.support.v7.widget.ActionBarOverlayLayout$2:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> this$0
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.-$Lambda$T4tXzWV28PejkMikVSdJbCP8ENw -> com.android.systemui.statusbar.policy.-$Lambda$T4tXzWV28PejkMikVSdJbCP8ENw:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void run() -> run
android.support.v7.widget.ContentFrameLayout -> android.support.v7.widget.ContentFrameLayout:
    android.util.TypedValue mFixedWidthMinor -> mFixedWidthMinor
    android.graphics.Rect mDecorPadding -> mDecorPadding
    android.util.TypedValue mFixedHeightMinor -> mFixedHeightMinor
    android.util.TypedValue mMinWidthMajor -> mMinWidthMajor
    android.support.v7.widget.ContentFrameLayout$OnAttachListener mAttachListener -> mAttachListener
    android.util.TypedValue mFixedWidthMajor -> mFixedWidthMajor
    android.util.TypedValue mMinWidthMinor -> mMinWidthMinor
    android.util.TypedValue mFixedHeightMajor -> mFixedHeightMajor
    void onAttachedToWindow() -> onAttachedToWindow
    android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    void onMeasure(int,int) -> onMeasure
    android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    void setDecorPadding(int,int,int,int) -> setDecorPadding
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setAttachListener(android.support.v7.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    void <init>(android.content.Context) -> <init>
    android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
com.android.systemui.qs.tileimpl.QSTileView -> com.android.systemui.qs.tileimpl.QSTileView:
    android.view.View mDivider -> mDivider
    android.view.View mExpandIndicator -> mExpandIndicator
    android.view.View mExpandSpace -> mExpandSpace
    android.widget.TextView mLabel -> mLabel
    android.view.ViewGroup mLabelContainer -> mLabelContainer
    android.widget.ImageView mPadLock -> mPadLock
    int mState -> mState
    void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView) -> <init>
    void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView,boolean) -> <init>
    void createLabel() -> createLabel
    int getDetailY() -> getDetailY
    void handleStateChanged(com.android.systemui.plugins.qs.QSTile$State) -> handleStateChanged
    void init(android.view.View$OnClickListener,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> init
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.android.systemui.qs.TouchAnimator -> com.android.systemui.qs.TouchAnimator:
    android.util.FloatProperty POSITION -> POSITION
    float mEndDelay -> mEndDelay
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    com.android.systemui.qs.TouchAnimator$KeyframeSet[] mKeyframeSets -> mKeyframeSets
    float mLastT -> mLastT
    com.android.systemui.qs.TouchAnimator$Listener mListener -> mListener
    float mSpan -> mSpan
    float mStartDelay -> mStartDelay
    java.lang.Object[] mTargets -> mTargets
    void setPosition(float) -> setPosition
    void <init>(java.lang.Object[],com.android.systemui.qs.TouchAnimator$KeyframeSet[],float,float,android.view.animation.Interpolator,com.android.systemui.qs.TouchAnimator$Listener) -> <init>
    void <clinit>() -> <clinit>
    android.util.FloatProperty -get0() -> -get0
    float -get1(com.android.systemui.qs.TouchAnimator) -> -get1
    void <init>(java.lang.Object[],com.android.systemui.qs.TouchAnimator$KeyframeSet[],float,float,android.view.animation.Interpolator,com.android.systemui.qs.TouchAnimator$Listener,com.android.systemui.qs.TouchAnimator) -> <init>
com.android.systemui.recents.views.-$Lambda$EYqiLlPK4REOincH-Lv-jy-ii4c -> com.android.systemui.recents.views.-$Lambda$EYqiLlPK4REOincH-Lv-jy-ii4c:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void run() -> run
com.android.systemui.tuner.-$Lambda$ly57dRawtR5LaF2KOH8zt99ex04 -> com.android.systemui.tuner.-$Lambda$ly57dRawtR5LaF2KOH8zt99ex04:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void $m$1(android.view.View) -> $m$1
    void onClick(android.view.View) -> onClick
com.android.systemui.recents.model.TaskKeyCache -> com.android.systemui.recents.model.TaskKeyCache:
    android.util.SparseArray mKeys -> mKeys
    void <init>() -> <init>
    void put(com.android.systemui.recents.model.Task$TaskKey,java.lang.Object) -> put
    void evictAll() -> evictAll
    void evictAllCache() -> evictAllCache
    java.lang.Object get(com.android.systemui.recents.model.Task$TaskKey) -> get
    java.lang.Object getAndInvalidateIfModified(com.android.systemui.recents.model.Task$TaskKey) -> getAndInvalidateIfModified
    java.lang.Object getCacheEntry(int) -> getCacheEntry
    void putCacheEntry(int,java.lang.Object) -> putCacheEntry
    void remove(com.android.systemui.recents.model.Task$TaskKey) -> remove
    void removeCacheEntry(int) -> removeCacheEntry
com.android.systemui.egg.MLand$4 -> com.android.systemui.egg.MLand$4:
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand) -> <init>
    void run() -> run
com.android.systemui.volume.VolumeDialogImpl$5 -> com.android.systemui.volume.VolumeDialogImpl$5:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void onAnimatingChanged(boolean) -> onAnimatingChanged
com.android.settingslib.core.lifecycle.events.OnCreateOptionsMenu -> com.android.settingslib.core.lifecycle.events.OnCreateOptionsMenu:
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
android.support.v4.widget.CircularProgressDrawable$1 -> android.support.v4.widget.CircularProgressDrawable$1:
    android.support.v4.widget.CircularProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.CircularProgressDrawable this$0 -> this$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    void <init>(android.support.v4.widget.CircularProgressDrawable,android.support.v4.widget.CircularProgressDrawable$Ring) -> <init>
android.support.v14.preference.MultiSelectListPreference$SavedState -> android.support.v14.preference.MultiSelectListPreference$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.Set values -> values
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.statusbar.policy.RotationLockControllerImpl -> com.android.systemui.statusbar.policy.RotationLockControllerImpl:
    java.util.concurrent.CopyOnWriteArrayList mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    com.android.internal.view.RotationPolicy$RotationPolicyListener mRotationPolicyListener -> mRotationPolicyListener
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.RotationLockController$RotationLockControllerCallback) -> addCallback
    int getRotationLockOrientation() -> getRotationLockOrientation
    boolean isRotationLocked() -> isRotationLocked
    void notifyChanged() -> notifyChanged
    void notifyChanged(com.android.systemui.statusbar.policy.RotationLockController$RotationLockControllerCallback) -> notifyChanged
    void removeCallback(com.android.systemui.statusbar.policy.RotationLockController$RotationLockControllerCallback) -> removeCallback
    void setListening(boolean) -> setListening
    void setRotationLocked(boolean) -> setRotationLocked
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    void -wrap0(com.android.systemui.statusbar.policy.RotationLockControllerImpl) -> -wrap0
android.support.v7.preference.DialogPreference -> android.support.v7.preference.DialogPreference:
    java.lang.CharSequence mNegativeButtonText -> mNegativeButtonText
    int mDialogLayoutResId -> mDialogLayoutResId
    java.lang.CharSequence mDialogMessage -> mDialogMessage
    java.lang.CharSequence mPositiveButtonText -> mPositiveButtonText
    android.graphics.drawable.Drawable mDialogIcon -> mDialogIcon
    java.lang.CharSequence mDialogTitle -> mDialogTitle
    java.lang.CharSequence getDialogTitle() -> getDialogTitle
    java.lang.CharSequence getPositiveButtonText() -> getPositiveButtonText
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    int getDialogLayoutResource() -> getDialogLayoutResource
    void onClick() -> onClick
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.CharSequence getDialogMessage() -> getDialogMessage
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.graphics.drawable.Drawable getDialogIcon() -> getDialogIcon
    void <init>(android.content.Context) -> <init>
    java.lang.CharSequence getNegativeButtonText() -> getNegativeButtonText
android.support.v7.widget.helper.ItemTouchHelper -> android.support.v7.widget.helper.ItemTouchHelper:
    android.support.v7.widget.RecyclerView$ViewHolder mSelected -> mSelected
    float mSwipeEscapeVelocity -> mSwipeEscapeVelocity
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    float[] mTmpPosition -> mTmpPosition
    int mSlop -> mSlop
    java.util.List mSwapTargets -> mSwapTargets
    android.view.View mOverdrawChild -> mOverdrawChild
    java.util.List mDistances -> mDistances
    int mOverdrawChildPosition -> mOverdrawChildPosition
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> mChildDrawingOrderCallback
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    long mDragScrollStartTimeInMs -> mDragScrollStartTimeInMs
    java.util.List mPendingCleanup -> mPendingCleanup
    float mInitialTouchY -> mInitialTouchY
    float mInitialTouchX -> mInitialTouchX
    int mActivePointerId -> mActivePointerId
    java.util.List mRecoverAnimations -> mRecoverAnimations
    float mSelectedStartX -> mSelectedStartX
    java.lang.Runnable mScrollRunnable -> mScrollRunnable
    float mSelectedStartY -> mSelectedStartY
    android.support.v7.widget.helper.ItemTouchHelper$Callback mCallback -> mCallback
    int mSelectedFlags -> mSelectedFlags
    int mActionState -> mActionState
    android.support.v4.view.GestureDetectorCompat mGestureDetector -> mGestureDetector
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v7.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener -> mOnItemTouchListener
    float mDx -> mDx
    float mDy -> mDy
    float mMaxSwipeVelocity -> mMaxSwipeVelocity
    int checkVerticalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    void attachToRecyclerView(android.support.v7.widget.RecyclerView) -> attachToRecyclerView
    void <init>(android.support.v7.widget.helper.ItemTouchHelper$Callback) -> <init>
    void moveIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    void destroyCallbacks() -> destroyCallbacks
    android.support.v7.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    int endRecoverAnimation(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    java.util.List findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder) -> findSwapTargets
    void obtainVelocityTracker() -> obtainVelocityTracker
    void select(android.support.v7.widget.RecyclerView$ViewHolder,int) -> select
    void releaseVelocityTracker() -> releaseVelocityTracker
    void initGestureDetector() -> initGestureDetector
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    int swipeIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    boolean checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    android.view.View findChildView(android.view.MotionEvent) -> findChildView
    boolean scrollIfNecessary() -> scrollIfNecessary
    int checkHorizontalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    void postDispatchSwipe(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    void setupCallbacks() -> setupCallbacks
    void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
    void getSelectedDxDy(float[]) -> getSelectedDxDy
    void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
android.support.v4.graphics.TypefaceCompatBaseImpl -> android.support.v4.graphics.TypefaceCompatBaseImpl:
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    java.lang.Object findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    void <init>() -> <init>
    android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
com.android.settingslib.RestrictedSwitchPreference -> com.android.settingslib.RestrictedSwitchPreference:
    com.android.settingslib.RestrictedPreferenceHelper mHelper -> mHelper
    boolean mUseAdditionalSummary -> mUseAdditionalSummary
    java.lang.String mRestrictedSwitchSummary -> mRestrictedSwitchSummary
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void useAdminDisabledSummary(boolean) -> useAdminDisabledSummary
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setEnabled(boolean) -> setEnabled
    void onAttachedToHierarchy(android.support.v7.preference.PreferenceManager) -> onAttachedToHierarchy
    boolean isDisabledByAdmin() -> isDisabledByAdmin
    void performClick() -> performClick
android.support.v17.leanback.widget.SearchEditText$OnKeyboardDismissListener -> android.support.v17.leanback.widget.SearchEditText$OnKeyboardDismissListener:
    void onKeyboardDismiss() -> onKeyboardDismiss
com.android.systemui.statusbar.policy.EthernetIcons -> com.android.systemui.statusbar.policy.EthernetIcons:
    int[][] ETHERNET_ICONS -> ETHERNET_ICONS
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.phone.SystemUIDialog$1 -> com.android.systemui.statusbar.phone.SystemUIDialog$1:
    android.app.Dialog val$dialog -> val$dialog
    void <init>(android.app.Dialog) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.stack.ScrollContainer -> com.android.systemui.statusbar.stack.ScrollContainer:
    void lockScrollTo(android.view.View) -> lockScrollTo
    void requestDisallowDismiss() -> requestDisallowDismiss
    void requestDisallowLongPress() -> requestDisallowLongPress
com.android.keyguard.KeyguardSimPinView$1 -> com.android.keyguard.KeyguardSimPinView$1:
    com.android.keyguard.KeyguardSimPinView this$0 -> this$0
    int[] -com-android-internal-telephony-IccCardConstants$StateSwitchesValues -> -com-android-internal-telephony-IccCardConstants$StateSwitchesValues
    void <init>(com.android.keyguard.KeyguardSimPinView) -> <init>
    void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants$State) -> onSimStateChanged
    int[] -getcom-android-internal-telephony-IccCardConstants$StateSwitchesValues() -> -getcom-android-internal-telephony-IccCardConstants$StateSwitchesValues
android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    int bottom -> bottom
    int left -> left
    int right -> right
    int top -> top
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder) -> setFrom
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder,int) -> setFrom
com.android.systemui.statusbar.notification.NotificationBigPictureTemplateViewWrapper -> com.android.systemui.statusbar.notification.NotificationBigPictureTemplateViewWrapper:
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onContentUpdated(com.android.systemui.statusbar.ExpandableNotificationRow) -> onContentUpdated
    void updateImageTag(android.service.notification.StatusBarNotification) -> updateImageTag
com.android.settingslib.bluetooth.HidProfile -> com.android.settingslib.bluetooth.HidProfile:
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    android.bluetooth.BluetoothInputDevice mService -> mService
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    boolean -set0(com.android.settingslib.bluetooth.HidProfile,boolean) -> -set0
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> <init>
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.HidProfile) -> -get1
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    boolean isConnectable() -> isConnectable
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get3(com.android.settingslib.bluetooth.HidProfile) -> -get3
    android.bluetooth.BluetoothInputDevice -set1(com.android.settingslib.bluetooth.HidProfile,android.bluetooth.BluetoothInputDevice) -> -set1
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    void finalize() -> finalize
    android.bluetooth.BluetoothInputDevice -get4(com.android.settingslib.bluetooth.HidProfile) -> -get4
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.settingslib.bluetooth.HidProfile) -> -get2
com.android.systemui.volume.ZenModePanel$8 -> com.android.systemui.volume.ZenModePanel$8:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    android.net.Uri val$realConditionId -> val$realConditionId
    void <init>(com.android.systemui.volume.ZenModePanel,android.net.Uri) -> <init>
    void run() -> run
com.android.systemui.recents.events.EventBus$1 -> com.android.systemui.recents.events.EventBus$1:
    void <init>() -> <init>
    int compare(com.android.systemui.recents.events.EventHandler,com.android.systemui.recents.events.EventHandler) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.recents.views.grid.AnimateableGridViewBounds -> com.android.systemui.recents.views.grid.AnimateableGridViewBounds:
    void <init>(android.view.View,int) -> <init>
    void updateClipBounds() -> updateClipBounds
com.android.systemui.SystemUIService -> com.android.systemui.SystemUIService:
    void <init>() -> <init>
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
android.support.v17.leanback.widget.PagingIndicator$1 -> android.support.v17.leanback.widget.PagingIndicator$1:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Float get(android.support.v17.leanback.widget.PagingIndicator$Dot) -> get
    void set(android.support.v17.leanback.widget.PagingIndicator$Dot,java.lang.Float) -> set
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$6 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$6:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    int compare(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.ExpandableView) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.statusbar.phone.StatusBarIconList -> com.android.systemui.statusbar.phone.StatusBarIconList:
    java.util.ArrayList mIcons -> mIcons
    java.util.ArrayList mSlots -> mSlots
    void <init>(java.lang.String[]) -> <init>
    int getSlotIndex(java.lang.String) -> getSlotIndex
    int getViewIndex(int) -> getViewIndex
    java.lang.String getSlot(int) -> getSlot
    com.android.internal.statusbar.StatusBarIcon getIcon(int) -> getIcon
    void removeIcon(int) -> removeIcon
    void setIcon(int,com.android.internal.statusbar.StatusBarIcon) -> setIcon
    void dump(java.io.PrintWriter) -> dump
com.android.systemui.statusbar.policy.NetworkController$AccessPointController -> com.android.systemui.statusbar.policy.NetworkController$AccessPointController:
    void scanForAccessPoints() -> scanForAccessPoints
    boolean connect(com.android.settingslib.wifi.AccessPoint) -> connect
    int getIcon(com.android.settingslib.wifi.AccessPoint) -> getIcon
    void addAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController$AccessPointController$AccessPointCallback) -> addAccessPointCallback
    void removeAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController$AccessPointController$AccessPointCallback) -> removeAccessPointCallback
    boolean canConfigWifi() -> canConfigWifi
com.android.systemui.recents.events.EventHandler -> com.android.systemui.recents.events.EventHandler:
    com.android.systemui.recents.events.EventHandlerMethod method -> method
    int priority -> priority
    com.android.systemui.recents.events.Subscriber subscriber -> subscriber
    void <init>(com.android.systemui.recents.events.Subscriber,com.android.systemui.recents.events.EventHandlerMethod,int) -> <init>
    java.lang.String toString() -> toString
android.support.v7.app.AlertController$5 -> android.support.v7.app.AlertController$5:
    android.view.View val$top -> val$top
    android.support.v7.app.AlertController this$0 -> this$0
    android.view.View val$bottom -> val$bottom
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void run() -> run
com.android.systemui.statusbar.AlphaImageView -> com.android.systemui.statusbar.AlphaImageView:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    int[] mOps -> mOps
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mTransition -> mTransition
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    boolean mReorderingAllowed -> mReorderingAllowed
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    int mIndex -> mIndex
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    void <init>(android.support.v4.app.BackStackRecord) -> <init>
    int describeContents() -> describeContents
com.android.systemui.pip.phone.-$Lambda$apc3PWlomUA_8Gv_LC2-DRbkZWo -> com.android.systemui.pip.phone.-$Lambda$apc3PWlomUA_8Gv_LC2-DRbkZWo:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void $m$4() -> $m$4
    void $m$5() -> $m$5
    void $m$6() -> $m$6
    void $m$7() -> $m$7
    void run() -> run
android.support.v4.app.FragmentTransitionImpl$3 -> android.support.v4.app.FragmentTransitionImpl$3:
    android.support.v4.app.FragmentTransitionImpl this$0 -> this$0
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    void <init>(android.support.v4.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    void run() -> run
android.support.v17.leanback.widget.GuidedActionEditText -> android.support.v17.leanback.widget.GuidedActionEditText:
    android.support.v17.leanback.widget.ImeKeyMonitor$ImeKeyListener mKeyListener -> mKeyListener
    android.graphics.drawable.Drawable mNoPaddingDrawable -> mNoPaddingDrawable
    android.graphics.drawable.Drawable mSavedBackground -> mSavedBackground
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void <init>(android.content.Context) -> <init>
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
com.android.systemui.usb.StorageNotification$MoveInfo -> com.android.systemui.usb.StorageNotification$MoveInfo:
    android.os.Bundle extras -> extras
    java.lang.String label -> label
    int moveId -> moveId
    java.lang.String packageName -> packageName
    java.lang.String volumeUuid -> volumeUuid
    void <init>() -> <init>
    void <init>(com.android.systemui.usb.StorageNotification$MoveInfo) -> <init>
com.android.systemui.statusbar.policy.WifiIcons -> com.android.systemui.statusbar.policy.WifiIcons:
    int[][] QS_WIFI_SIGNAL_STRENGTH -> QS_WIFI_SIGNAL_STRENGTH
    int WIFI_LEVEL_COUNT -> WIFI_LEVEL_COUNT
    int[][] WIFI_SIGNAL_STRENGTH -> WIFI_SIGNAL_STRENGTH
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.google.protobuf.nano.android.ParcelableMessageNanoCreator -> com.google.protobuf.nano.android.ParcelableMessageNanoCreator:
    java.lang.Class mClazz -> mClazz
    java.lang.Object[] newArray(int) -> newArray
    com.google.protobuf.nano.MessageNano createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.protobuf.nano.MessageNano[] newArray(int) -> newArray
    void writeToParcel(java.lang.Class,com.google.protobuf.nano.MessageNano,android.os.Parcel) -> writeToParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.statusbar.phone.ButtonDispatcher -> com.android.systemui.statusbar.phone.ButtonDispatcher:
    java.lang.Integer mAlpha -> mAlpha
    android.view.View$OnClickListener mClickListener -> mClickListener
    android.view.View mCurrentView -> mCurrentView
    java.lang.Float mDarkIntensity -> mDarkIntensity
    int mId -> mId
    com.android.systemui.statusbar.policy.KeyButtonDrawable mImageDrawable -> mImageDrawable
    android.view.View$OnLongClickListener mLongClickListener -> mLongClickListener
    java.lang.Boolean mLongClickable -> mLongClickable
    android.view.View$OnTouchListener mTouchListener -> mTouchListener
    boolean mVertical -> mVertical
    java.util.ArrayList mViews -> mViews
    java.lang.Integer mVisibility -> mVisibility
    int getId() -> getId
    void addView(android.view.View) -> addView
    void clear() -> clear
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    void setLongClickable(boolean) -> setLongClickable
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    android.view.View getCurrentView() -> getCurrentView
    void <init>(int) -> <init>
    void abortCurrentGesture() -> abortCurrentGesture
    float getAlpha() -> getAlpha
    int getVisibility() -> getVisibility
    void setAlpha(int) -> setAlpha
    void setCurrentView(android.view.View) -> setCurrentView
    void setDarkIntensity(float) -> setDarkIntensity
    void setImageDrawable(com.android.systemui.statusbar.policy.KeyButtonDrawable) -> setImageDrawable
    void setVertical(boolean) -> setVertical
    void setVisibility(int) -> setVisibility
com.android.systemui.recents.Recents$6 -> com.android.systemui.recents.Recents$6:
    com.android.systemui.recents.Recents this$0 -> this$0
    com.android.systemui.recents.events.activity.DockedTopTaskEvent val$event -> val$event
    void <init>(com.android.systemui.recents.Recents,com.android.systemui.recents.events.activity.DockedTopTaskEvent) -> <init>
    void run() -> run
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.OpReorderer -> android.support.v7.widget.OpReorderer:
    android.support.v7.widget.OpReorderer$Callback mCallback -> mCallback
    void swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
    int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    void <init>(android.support.v7.widget.OpReorderer$Callback) -> <init>
    void reorderOps(java.util.List) -> reorderOps
    void swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    void swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    void swapMoveOp(java.util.List,int,int) -> swapMoveOp
com.android.systemui.media.NotificationPlayer -> com.android.systemui.media.NotificationPlayer:
    android.media.AudioManager mAudioManagerWithAudioFocus -> mAudioManagerWithAudioFocus
    java.util.LinkedList mCmdQueue -> mCmdQueue
    java.lang.Object mCompletionHandlingLock -> mCompletionHandlingLock
    com.android.systemui.media.NotificationPlayer$CreationAndCompletionThread mCompletionThread -> mCompletionThread
    android.os.Looper mLooper -> mLooper
    int mNotificationRampTimeMs -> mNotificationRampTimeMs
    android.media.MediaPlayer mPlayer -> mPlayer
    java.lang.Object mQueueAudioFocusLock -> mQueueAudioFocusLock
    int mState -> mState
    java.lang.String mTag -> mTag
    com.android.systemui.media.NotificationPlayer$CmdThread mThread -> mThread
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    void <init>(java.lang.String) -> <init>
    void play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes) -> play
    void stop() -> stop
    void setUsesWakeLock(android.content.Context) -> setUsesWakeLock
    void acquireWakeLock() -> acquireWakeLock
    void enqueueLocked(com.android.systemui.media.NotificationPlayer$Command) -> enqueueLocked
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void releaseWakeLock() -> releaseWakeLock
    void startSound(com.android.systemui.media.NotificationPlayer$Command) -> startSound
    android.media.AudioManager -get0(com.android.systemui.media.NotificationPlayer) -> -get0
    java.util.LinkedList -get1(com.android.systemui.media.NotificationPlayer) -> -get1
    java.lang.Object -get2(com.android.systemui.media.NotificationPlayer) -> -get2
    android.os.Looper -get3(com.android.systemui.media.NotificationPlayer) -> -get3
    int -get4(com.android.systemui.media.NotificationPlayer) -> -get4
    android.media.MediaPlayer -get5(com.android.systemui.media.NotificationPlayer) -> -get5
    java.lang.Object -get6(com.android.systemui.media.NotificationPlayer) -> -get6
    java.lang.String -get7(com.android.systemui.media.NotificationPlayer) -> -get7
    android.media.AudioManager -set0(com.android.systemui.media.NotificationPlayer,android.media.AudioManager) -> -set0
    android.os.Looper -set1(com.android.systemui.media.NotificationPlayer,android.os.Looper) -> -set1
    int -set2(com.android.systemui.media.NotificationPlayer,int) -> -set2
    android.media.MediaPlayer -set3(com.android.systemui.media.NotificationPlayer,android.media.MediaPlayer) -> -set3
    com.android.systemui.media.NotificationPlayer$CmdThread -set4(com.android.systemui.media.NotificationPlayer,com.android.systemui.media.NotificationPlayer$CmdThread) -> -set4
    void -wrap0(com.android.systemui.media.NotificationPlayer) -> -wrap0
    void -wrap1(com.android.systemui.media.NotificationPlayer,com.android.systemui.media.NotificationPlayer$Command) -> -wrap1
android.support.v7.widget.SwitchCompat -> android.support.v7.widget.SwitchCompat:
    android.text.TextPaint mTextPaint -> mTextPaint
    float mThumbPosition -> mThumbPosition
    boolean mHasThumbTintMode -> mHasThumbTintMode
    android.util.Property THUMB_POS -> THUMB_POS
    boolean mHasTrackTint -> mHasTrackTint
    int mTouchMode -> mTouchMode
    int mSwitchTop -> mSwitchTop
    int mThumbTextPadding -> mThumbTextPadding
    android.animation.ObjectAnimator mPositionAnimator -> mPositionAnimator
    android.graphics.PorterDuff$Mode mTrackTintMode -> mTrackTintMode
    int mSwitchBottom -> mSwitchBottom
    java.lang.CharSequence mTextOff -> mTextOff
    int mSwitchPadding -> mSwitchPadding
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    android.content.res.ColorStateList mThumbTintList -> mThumbTintList
    android.graphics.drawable.Drawable mThumbDrawable -> mThumbDrawable
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    android.text.Layout mOffLayout -> mOffLayout
    float mTouchX -> mTouchX
    int mSwitchRight -> mSwitchRight
    boolean mHasTrackTintMode -> mHasTrackTintMode
    int mThumbWidth -> mThumbWidth
    java.lang.CharSequence mTextOn -> mTextOn
    float mTouchY -> mTouchY
    int mSwitchHeight -> mSwitchHeight
    boolean mShowText -> mShowText
    int mSwitchWidth -> mSwitchWidth
    int mMinFlingVelocity -> mMinFlingVelocity
    android.content.res.ColorStateList mTextColors -> mTextColors
    int mSwitchMinWidth -> mSwitchMinWidth
    android.text.method.TransformationMethod mSwitchTransformationMethod -> mSwitchTransformationMethod
    android.graphics.PorterDuff$Mode mThumbTintMode -> mThumbTintMode
    boolean mHasThumbTint -> mHasThumbTint
    android.content.res.ColorStateList mTrackTintList -> mTrackTintList
    boolean mSplitTrack -> mSplitTrack
    android.graphics.drawable.Drawable mTrackDrawable -> mTrackDrawable
    int mSwitchLeft -> mSwitchLeft
    android.graphics.Rect mTempRect -> mTempRect
    android.text.Layout mOnLayout -> mOnLayout
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    boolean hitThumb(float,float) -> hitThumb
    void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    void toggle() -> toggle
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean getTargetCheckedState() -> getTargetCheckedState
    void setTextOff(java.lang.CharSequence) -> setTextOff
    void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    int getThumbOffset() -> getThumbOffset
    void onMeasure(int,int) -> onMeasure
    void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void applyThumbTint() -> applyThumbTint
    void drawableStateChanged() -> drawableStateChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    float constrain(float,float,float) -> constrain
    android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    int getThumbScrollRange() -> getThumbScrollRange
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelPositionAnimator() -> cancelPositionAnimator
    void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setChecked(boolean) -> setChecked
    void setTextOn(java.lang.CharSequence) -> setTextOn
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    void draw(android.graphics.Canvas) -> draw
    void setThumbPosition(float) -> setThumbPosition
    void stopDrag(android.view.MotionEvent) -> stopDrag
    void applyTrackTint() -> applyTrackTint
    int getCompoundPaddingRight() -> getCompoundPaddingRight
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    float -get0(android.support.v7.widget.SwitchCompat) -> -get0
    void <init>(android.content.Context) -> <init>
    void <clinit>() -> <clinit>
    void onDraw(android.graphics.Canvas) -> onDraw
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    long getPosition(java.lang.Object) -> getPosition
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    void <init>() -> <init>
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getActions(java.lang.Object) -> getActions
    int getState(java.lang.Object) -> getState
com.android.systemui.globalactions.-$Lambda$2rUcRmPVP2t4i4QQIidfILmOG0w -> com.android.systemui.globalactions.-$Lambda$2rUcRmPVP2t4i4QQIidfILmOG0w:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    java.lang.Object $m$0() -> $m$0
    java.lang.Object get() -> get
android.support.v17.leanback.widget.BaseGridView$OnTouchInterceptListener -> android.support.v17.leanback.widget.BaseGridView$OnTouchInterceptListener:
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.android.systemui.statusbar.KeyguardAffordanceView -> com.android.systemui.statusbar.KeyguardAffordanceView:
    android.animation.ValueAnimator mAlphaAnimator -> mAlphaAnimator
    android.animation.AnimatorListenerAdapter mAlphaEndListener -> mAlphaEndListener
    int mCenterX -> mCenterX
    int mCenterY -> mCenterY
    android.animation.ValueAnimator mCircleAnimator -> mCircleAnimator
    int mCircleColor -> mCircleColor
    android.animation.AnimatorListenerAdapter mCircleEndListener -> mCircleEndListener
    android.graphics.Paint mCirclePaint -> mCirclePaint
    float mCircleRadius -> mCircleRadius
    float mCircleStartRadius -> mCircleStartRadius
    float mCircleStartValue -> mCircleStartValue
    boolean mCircleWillBeHidden -> mCircleWillBeHidden
    android.animation.AnimatorListenerAdapter mClipEndListener -> mClipEndListener
    android.animation.ArgbEvaluator mColorInterpolator -> mColorInterpolator
    int mDarkIconColor -> mDarkIconColor
    boolean mFinishing -> mFinishing
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    android.graphics.CanvasProperty mHwCenterX -> mHwCenterX
    android.graphics.CanvasProperty mHwCenterY -> mHwCenterY
    android.graphics.CanvasProperty mHwCirclePaint -> mHwCirclePaint
    android.graphics.CanvasProperty mHwCircleRadius -> mHwCircleRadius
    float mImageScale -> mImageScale
    boolean mLaunchingAffordance -> mLaunchingAffordance
    float mMaxCircleSize -> mMaxCircleSize
    int mMinBackgroundRadius -> mMinBackgroundRadius
    int mNormalColor -> mNormalColor
    android.animation.Animator mPreviewClipper -> mPreviewClipper
    android.view.View mPreviewView -> mPreviewView
    float mRestingAlpha -> mRestingAlpha
    android.animation.ValueAnimator mScaleAnimator -> mScaleAnimator
    android.animation.AnimatorListenerAdapter mScaleEndListener -> mScaleEndListener
    boolean mShouldTint -> mShouldTint
    boolean mSupportHardware -> mSupportHardware
    int[] mTempPoint -> mTempPoint
    void setImageAlpha(float,boolean,long,android.view.animation.Interpolator,java.lang.Runnable) -> setImageAlpha
    void setImageScale(float,boolean,long,android.view.animation.Interpolator) -> setImageScale
    float getRestingAlpha() -> getRestingAlpha
    void setLaunchingAffordance(boolean) -> setLaunchingAffordance
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void cancelAnimator(android.animation.Animator) -> cancelAnimator
    void drawBackgroundCircle(android.graphics.Canvas) -> drawBackgroundCircle
    void finishAnimation(float,java.lang.Runnable) -> finishAnimation
    android.animation.ValueAnimator getAnimatorToRadius(float) -> getAnimatorToRadius
    float getCircleRadius() -> getCircleRadius
    android.animation.Animator$AnimatorListener getEndListener(java.lang.Runnable) -> getEndListener
    float getMaxCircleSize() -> getMaxCircleSize
    android.animation.Animator getRtAnimatorToRadius(float) -> getRtAnimatorToRadius
    void initHwProperties() -> initHwProperties
    void instantFinishAnimation() -> instantFinishAnimation
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean performClick() -> performClick
    void setCircleRadius(float,boolean) -> setCircleRadius
    void setCircleRadius(float,boolean,boolean) -> setCircleRadius
    void setCircleRadiusWithoutAnimation(float) -> setCircleRadiusWithoutAnimation
    void setImageAlpha(float,boolean) -> setImageAlpha
    void setImageDrawable(android.graphics.drawable.Drawable,boolean) -> setImageDrawable
    void setImageScale(float,boolean) -> setImageScale
    void setPreviewView(android.view.View) -> setPreviewView
    void setRestingAlpha(float) -> setRestingAlpha
    void startRtAlphaFadeIn() -> startRtAlphaFadeIn
    void startRtCircleFadeOut(long) -> startRtCircleFadeOut
    void updateCircleColor() -> updateCircleColor
    void updateIconColor() -> updateIconColor
    android.view.View -get0(com.android.systemui.statusbar.KeyguardAffordanceView) -> -get0
    android.animation.ValueAnimator -set0(com.android.systemui.statusbar.KeyguardAffordanceView,android.animation.ValueAnimator) -> -set0
    android.animation.ValueAnimator -set1(com.android.systemui.statusbar.KeyguardAffordanceView,android.animation.ValueAnimator) -> -set1
    float -set2(com.android.systemui.statusbar.KeyguardAffordanceView,float) -> -set2
    boolean -set3(com.android.systemui.statusbar.KeyguardAffordanceView,boolean) -> -set3
    float -set4(com.android.systemui.statusbar.KeyguardAffordanceView,float) -> -set4
    android.animation.Animator -set5(com.android.systemui.statusbar.KeyguardAffordanceView,android.animation.Animator) -> -set5
    android.animation.ValueAnimator -set6(com.android.systemui.statusbar.KeyguardAffordanceView,android.animation.ValueAnimator) -> -set6
    void -wrap0(com.android.systemui.statusbar.KeyguardAffordanceView) -> -wrap0
com.android.systemui.statusbar.policy.NetworkController$AccessPointController$AccessPointCallback -> com.android.systemui.statusbar.policy.NetworkController$AccessPointController$AccessPointCallback:
    void onAccessPointsChanged(java.util.List) -> onAccessPointsChanged
    void onSettingsActivityTriggered(android.content.Intent) -> onSettingsActivityTriggered
com.android.systemui.statusbar.NotificationHeaderUtil$1 -> com.android.systemui.statusbar.NotificationHeaderUtil$1:
    void <init>() -> <init>
    java.lang.Object extractData(com.android.systemui.statusbar.ExpandableNotificationRow) -> extractData
android.support.v7.widget.ChildHelper$Bucket -> android.support.v7.widget.ChildHelper$Bucket:
    long mData -> mData
    android.support.v7.widget.ChildHelper$Bucket mNext -> mNext
    void clear(int) -> clear
    boolean remove(int) -> remove
    void insert(int,boolean) -> insert
    void ensureNext() -> ensureNext
    java.lang.String toString() -> toString
    boolean get(int) -> get
    int countOnesBefore(int) -> countOnesBefore
    void reset() -> reset
    void <init>() -> <init>
    void set(int) -> set
com.android.systemui.recents.views.TaskStackLayoutAlgorithm$VisibilityReport -> com.android.systemui.recents.views.TaskStackLayoutAlgorithm$VisibilityReport:
    int numVisibleTasks -> numVisibleTasks
    int numVisibleThumbnails -> numVisibleThumbnails
    void <init>(int,int) -> <init>
com.android.systemui.statusbar.KeyguardAffordanceView$10 -> com.android.systemui.statusbar.KeyguardAffordanceView$10:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    java.lang.Runnable val$runnable -> val$runnable
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView,java.lang.Runnable) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.DoubleTapHelper$ActivationListener -> com.android.systemui.statusbar.phone.DoubleTapHelper$ActivationListener:
    void onActiveChanged(boolean) -> onActiveChanged
com.android.keyguard.LatencyTracker -> com.android.keyguard.LatencyTracker:
    java.lang.String[] NAMES -> NAMES
    boolean mEnabled -> mEnabled
    android.util.SparseLongArray mStartRtc -> mStartRtc
    com.android.keyguard.LatencyTracker sLatencyTracker -> sLatencyTracker
    boolean isEnabled(android.content.Context) -> isEnabled
    com.android.keyguard.LatencyTracker getInstance(android.content.Context) -> getInstance
    void onActionStart(int) -> onActionStart
    void onActionEnd(int) -> onActionEnd
    void <init>(android.content.Context) -> <init>
    void reloadProperty() -> reloadProperty
    void <clinit>() -> <clinit>
    void -wrap0(com.android.keyguard.LatencyTracker) -> -wrap0
com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation$1 -> com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation$1:
    com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation this$1 -> this$1
    void <init>(com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation) -> <init>
    void run() -> run
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v7.media.SystemMediaRouteProvider$LegacyImpl$VolumeChangeReceiver -> android.support.v7.media.SystemMediaRouteProvider$LegacyImpl$VolumeChangeReceiver:
    android.support.v7.media.SystemMediaRouteProvider$LegacyImpl this$1 -> this$1
    void <init>(android.support.v7.media.SystemMediaRouteProvider$LegacyImpl) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$4 -> com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$4:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    java.lang.Object -$f5 -> -$f5
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.DefaultItemAnimator -> android.support.v7.widget.DefaultItemAnimator:
    android.animation.TimeInterpolator sDefaultInterpolator -> sDefaultInterpolator
    java.util.ArrayList mAddAnimations -> mAddAnimations
    java.util.ArrayList mAdditionsList -> mAdditionsList
    java.util.ArrayList mPendingChanges -> mPendingChanges
    java.util.ArrayList mRemoveAnimations -> mRemoveAnimations
    java.util.ArrayList mChangesList -> mChangesList
    java.util.ArrayList mMovesList -> mMovesList
    java.util.ArrayList mMoveAnimations -> mMoveAnimations
    java.util.ArrayList mPendingMoves -> mPendingMoves
    java.util.ArrayList mChangeAnimations -> mChangeAnimations
    java.util.ArrayList mPendingRemovals -> mPendingRemovals
    java.util.ArrayList mPendingAdditions -> mPendingAdditions
    void animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    void runPendingAnimations() -> runPendingAnimations
    void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    void resetAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> resetAnimation
    void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    void animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> endAnimation
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    void animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemove
    void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAdd
    void cancelAll(java.util.List) -> cancelAll
    boolean isRunning() -> isRunning
    void <init>() -> <init>
    boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    void animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAddImpl
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    void endAnimations() -> endAnimations
android.support.v17.leanback.widget.PersistentFocusWrapper$SavedState -> android.support.v17.leanback.widget.PersistentFocusWrapper$SavedState:
    int mSelectedPosition -> mSelectedPosition
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.recents.events.EventBus$2 -> com.android.systemui.recents.events.EventBus$2:
    com.android.systemui.recents.events.EventBus this$0 -> this$0
    void <init>(com.android.systemui.recents.events.EventBus) -> <init>
    int compare(java.lang.Class,java.lang.Class) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v7.media.RegisteredMediaRouteProvider$Connection$2 -> android.support.v7.media.RegisteredMediaRouteProvider$Connection$2:
    android.support.v7.media.RegisteredMediaRouteProvider$Connection this$1 -> this$1
    void run() -> run
    void <init>(android.support.v7.media.RegisteredMediaRouteProvider$Connection) -> <init>
com.android.systemui.classifier.EndPointLengthClassifier -> com.android.systemui.classifier.EndPointLengthClassifier:
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
com.android.systemui.statusbar.ActivatableNotificationView$12 -> com.android.systemui.statusbar.ActivatableNotificationView$12:
    boolean mWasCancelled -> mWasCancelled
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    java.lang.Runnable val$onFinishedRunnable -> val$onFinishedRunnable
    boolean val$isAppearing -> val$isAppearing
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView,java.lang.Runnable,boolean) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.systemui.classifier.FalsingManager$1 -> com.android.systemui.classifier.FalsingManager$1:
    com.android.systemui.classifier.FalsingManager this$0 -> this$0
    void <init>(com.android.systemui.classifier.FalsingManager,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.systemui.volume.MediaSessions$1 -> com.android.systemui.volume.MediaSessions$1:
    com.android.systemui.volume.MediaSessions this$0 -> this$0
    void <init>(com.android.systemui.volume.MediaSessions) -> <init>
    void onActiveSessionsChanged(java.util.List) -> onActiveSessionsChanged
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    int mMinCellSize -> mMinCellSize
    boolean mFormatItems -> mFormatItems
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    int mGeneratedItemPadding -> mGeneratedItemPadding
    android.support.v7.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> mMenuBuilderCallback
    android.support.v7.widget.ActionMenuPresenter mPresenter -> mPresenter
    int mFormatItemsWidth -> mFormatItemsWidth
    android.content.Context mPopupContext -> mPopupContext
    android.support.v7.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    int mPopupTheme -> mPopupTheme
    boolean mReserveOverflow -> mReserveOverflow
    void setPopupTheme(int) -> setPopupTheme
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void setPresenter(android.support.v7.widget.ActionMenuPresenter) -> setPresenter
    boolean showOverflowMenu() -> showOverflowMenu
    void dismissPopupMenus() -> dismissPopupMenus
    void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    android.support.v7.view.menu.MenuBuilder peekMenu() -> peekMenu
    android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.Menu getMenu() -> getMenu
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    void <init>(android.content.Context) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.ActionBar$Tab:
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getText() -> getText
    void select() -> select
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void <init>() -> <init>
com.android.systemui.recents.model.TaskFilter -> com.android.systemui.recents.model.TaskFilter:
    boolean acceptTask(android.util.SparseArray,com.android.systemui.recents.model.Task,int) -> acceptTask
android.support.v7.widget.SwitchCompat$1 -> android.support.v7.widget.SwitchCompat$1:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    void set(android.support.v7.widget.SwitchCompat,java.lang.Float) -> set
    java.lang.Float get(android.support.v7.widget.SwitchCompat) -> get
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
android.support.v4.graphics.TypefaceCompatBaseImpl$1 -> android.support.v4.graphics.TypefaceCompatBaseImpl$1:
    android.support.v4.graphics.TypefaceCompatBaseImpl this$0 -> this$0
    boolean isItalic(java.lang.Object) -> isItalic
    int getWeight(android.support.v4.provider.FontsContractCompat$FontInfo) -> getWeight
    void <init>(android.support.v4.graphics.TypefaceCompatBaseImpl) -> <init>
    boolean isItalic(android.support.v4.provider.FontsContractCompat$FontInfo) -> isItalic
    int getWeight(java.lang.Object) -> getWeight
com.android.systemui.stackdivider.-$Lambda$rUMSNUxunCY-KlbCD-zkL0v-uzo$1 -> com.android.systemui.stackdivider.-$Lambda$rUMSNUxunCY-KlbCD-zkL0v-uzo$1:
    boolean -$f0 -> -$f0
    long -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(boolean,long,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v17.leanback.widget.Grid$Provider -> android.support.v17.leanback.widget.Grid$Provider:
    int getEdge(int) -> getEdge
    int getCount() -> getCount
    void addItem(java.lang.Object,int,int,int,int) -> addItem
    int createItem(int,boolean,java.lang.Object[],boolean) -> createItem
    void removeItem(int) -> removeItem
    int getMinIndex() -> getMinIndex
    int getSize(int) -> getSize
com.android.systemui.statusbar.car.CarStatusBar$TaskStackListenerImpl -> com.android.systemui.statusbar.car.CarStatusBar$TaskStackListenerImpl:
    com.android.systemui.statusbar.car.CarStatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.CarStatusBar) -> <init>
    void onTaskStackChanged() -> onTaskStackChanged
    void <init>(com.android.systemui.statusbar.car.CarStatusBar,com.android.systemui.statusbar.car.CarStatusBar$TaskStackListenerImpl) -> <init>
com.android.systemui.doze.-$Lambda$Pm-oMEZzS1-hcTDyMO0UqLPF_kM -> com.android.systemui.doze.-$Lambda$Pm-oMEZzS1-hcTDyMO0UqLPF_kM:
    com.android.systemui.doze.-$Lambda$Pm-oMEZzS1-hcTDyMO0UqLPF_kM $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    java.lang.Object $m$0(java.lang.Object) -> $m$0
    java.lang.Object apply(java.lang.Object) -> apply
com.android.systemui.statusbar.stack.ExpandableViewState$3 -> com.android.systemui.statusbar.stack.ExpandableViewState$3:
    com.android.systemui.statusbar.stack.ExpandableViewState this$0 -> this$0
    com.android.systemui.statusbar.ExpandableView val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.ExpandableView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23:
    void <init>(java.lang.Object) -> <init>
com.android.systemui.globalactions.GlobalActionsDialog$9 -> com.android.systemui.globalactions.GlobalActionsDialog$9:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,int,int) -> <init>
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.statusbar.phone.-$Lambda$d5AkWbP5UD6-2jiUj-MtRt3ONBY -> com.android.systemui.statusbar.phone.-$Lambda$d5AkWbP5UD6-2jiUj-MtRt3ONBY:
    float -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(float,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.view.accessibility.AccessibilityNodeInfo mInfo -> mInfo
    int mParentVirtualDescendantId -> mParentVirtualDescendantId
    void setSelected(boolean) -> setSelected
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setMovementGranularities(int) -> setMovementGranularities
    int hashCode() -> hashCode
    void setLongClickable(boolean) -> setLongClickable
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    boolean isEnabled() -> isEnabled
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    java.lang.String toString() -> toString
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    boolean isCheckable() -> isCheckable
    boolean isVisibleToUser() -> isVisibleToUser
    void setCanOpenPopup(boolean) -> setCanOpenPopup
    boolean equals(java.lang.Object) -> equals
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    boolean isSelected() -> isSelected
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setScrollable(boolean) -> setScrollable
    boolean removeAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    void setFocusable(boolean) -> setFocusable
    void setParent(android.view.View) -> setParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    java.lang.CharSequence getPackageName() -> getPackageName
    android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    void addAction(int) -> addAction
    boolean isScrollable() -> isScrollable
    void setClickable(boolean) -> setClickable
    void setPackageName(java.lang.CharSequence) -> setPackageName
    void setClassName(java.lang.CharSequence) -> setClassName
    void recycle() -> recycle
    java.lang.CharSequence getText() -> getText
    boolean isFocusable() -> isFocusable
    boolean isClickable() -> isClickable
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void setVisibleToUser(boolean) -> setVisibleToUser
    void setSource(android.view.View) -> setSource
    void setEnabled(boolean) -> setEnabled
    boolean isFocused() -> isFocused
    int getMovementGranularities() -> getMovementGranularities
    java.lang.CharSequence getClassName() -> getClassName
    void setFocused(boolean) -> setFocused
    void addChild(android.view.View) -> addChild
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    boolean isLongClickable() -> isLongClickable
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    boolean isPassword() -> isPassword
    int getActions() -> getActions
    boolean isChecked() -> isChecked
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent -> com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent:
    boolean removedRedacted_ -> removedRedacted_
    int action_ -> action_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$BoundingBox removedBoundingBox -> removedBoundingBox
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer[] pointers -> pointers
    int bitField0_ -> bitField0_
    long timeOffsetNanos_ -> timeOffsetNanos_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent[] _emptyArray -> _emptyArray
    int actionIndex_ -> actionIndex_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int computeSerializedSize() -> computeSerializedSize
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent setActionIndex(int) -> setActionIndex
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent[] emptyArray() -> emptyArray
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent setTimeOffsetNanos(long) -> setTimeOffsetNanos
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent setAction(int) -> setAction
    void <init>() -> <init>
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent clear() -> clear
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionBuilder -> com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionBuilder:
    com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl mExtension -> mExtension
    com.android.systemui.statusbar.policy.ExtensionControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.ExtensionControllerImpl) -> <init>
    com.android.systemui.statusbar.policy.ExtensionController$Extension build() -> build
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withCallback(java.util.function.Consumer) -> withCallback
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withDefault(java.util.function.Supplier) -> withDefault
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withFeature(java.lang.String,java.util.function.Supplier) -> withFeature
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withPlugin(java.lang.Class) -> withPlugin
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withPlugin(java.lang.Class,java.lang.String) -> withPlugin
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withPlugin(java.lang.Class,java.lang.String,com.android.systemui.statusbar.policy.ExtensionController$PluginConverter) -> withPlugin
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withTunerFactory(com.android.systemui.statusbar.policy.ExtensionController$TunerFactory) -> withTunerFactory
    int -com_android_systemui_statusbar_policy_ExtensionControllerImpl$ExtensionBuilder-mthref-0(com.android.systemui.statusbar.policy.ExtensionControllerImpl$Item) -> -com_android_systemui_statusbar_policy_ExtensionControllerImpl$ExtensionBuilder-mthref-0
    void <init>(com.android.systemui.statusbar.policy.ExtensionControllerImpl,com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionBuilder) -> <init>
android.support.v7.widget.helper.ItemTouchHelper$Callback$2 -> android.support.v7.widget.helper.ItemTouchHelper$Callback$2:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent -> com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent:
    com.android.systemui.recents.views.DropTarget dropTarget -> dropTarget
    com.android.systemui.recents.model.Task task -> task
    void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.DropTarget) -> <init>
com.android.systemui.qs.PathInterpolatorBuilder -> com.android.systemui.qs.PathInterpolatorBuilder:
    float[] mDist -> mDist
    float[] mX -> mX
    float[] mY -> mY
    void <init>(float,float,float,float) -> <init>
    android.view.animation.Interpolator getXInterpolator() -> getXInterpolator
    android.view.animation.Interpolator getYInterpolator() -> getYInterpolator
    void initCubic(float,float,float,float) -> initCubic
    void initPath(android.graphics.Path) -> initPath
com.android.systemui.statusbar.NotificationInfo$CheckSaveListener -> com.android.systemui.statusbar.NotificationInfo$CheckSaveListener:
    void checkSave(java.lang.Runnable) -> checkSave
com.android.systemui.recents.events.ui.RecentsDrawnEvent -> com.android.systemui.recents.events.ui.RecentsDrawnEvent:
    void <init>() -> <init>
com.android.keyguard.LatencyTracker$1 -> com.android.keyguard.LatencyTracker$1:
    com.android.keyguard.LatencyTracker this$0 -> this$0
    void <init>(com.android.keyguard.LatencyTracker) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.qs.QSPanel$TileRecord -> com.android.systemui.qs.QSPanel$TileRecord:
    com.android.systemui.plugins.qs.QSTileView tileView -> tileView
    com.android.systemui.plugins.qs.QSTile tile -> tile
    com.android.systemui.plugins.qs.QSTile$Callback callback -> callback
    boolean scanState -> scanState
    void <init>() -> <init>
com.android.systemui.egg.MLand$Cactus -> com.android.systemui.egg.MLand$Cactus:
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context) -> <init>
com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA$2 -> com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA$2:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
com.android.systemui.statusbar.AlphaOptimizedView -> com.android.systemui.statusbar.AlphaOptimizedView:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
android.support.v7.widget.RecyclerView$LayoutManager$1 -> android.support.v7.widget.RecyclerView$LayoutManager$1:
    android.support.v7.widget.RecyclerView$LayoutManager this$1 -> this$1
    int getParentStart() -> getParentStart
    int getChildStart(android.view.View) -> getChildStart
    int getParentEnd() -> getParentEnd
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    android.view.View getChildAt(int) -> getChildAt
    int getChildEnd(android.view.View) -> getChildEnd
com.android.systemui.statusbar.phone.-$Lambda$t84YMscG_HuhcF-TFkwLvEAF9dg$1 -> com.android.systemui.statusbar.phone.-$Lambda$t84YMscG_HuhcF-TFkwLvEAF9dg$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    java.lang.Object $m$0(java.lang.Object) -> $m$0
    java.lang.Object apply(java.lang.Object) -> apply
com.android.systemui.statusbar.phone.LightBarTransitionsController$1 -> com.android.systemui.statusbar.phone.LightBarTransitionsController$1:
    com.android.systemui.statusbar.phone.LightBarTransitionsController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.LightBarTransitionsController) -> <init>
    void run() -> run
android.support.v17.leanback.widget.Visibility -> android.support.v17.leanback.widget.Visibility:
android.support.v4.view.ViewCompat$ViewCompatApi21Impl$1 -> android.support.v4.view.ViewCompat$ViewCompatApi21Impl$1:
    android.support.v4.view.ViewCompat$ViewCompatApi21Impl this$1 -> this$1
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
    void <init>(android.support.v4.view.ViewCompat$ViewCompatApi21Impl,android.support.v4.view.OnApplyWindowInsetsListener) -> <init>
com.android.systemui.tuner.LockscreenFragment$ShortcutButton -> com.android.systemui.tuner.LockscreenFragment$ShortcutButton:
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState mIconState -> mIconState
    com.android.systemui.tuner.ShortcutParser$Shortcut mShortcut -> mShortcut
    void <init>(android.content.Context,com.android.systemui.tuner.ShortcutParser$Shortcut) -> <init>
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
com.android.systemui.statusbar.policy.NetworkController$SignalCallback -> com.android.systemui.statusbar.policy.NetworkController$SignalCallback:
    void setSubs(java.util.List) -> setSubs
    void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController$IconState) -> setIsAirplaneMode
    void setNoSims(boolean,boolean) -> setNoSims
    void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,int,int,boolean,boolean,int,int,int,java.lang.String,java.lang.String,boolean,int,boolean) -> setMobileDataIndicators
    void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController$IconState) -> setEthernetIndicators
    void setMobileDataEnabled(boolean) -> setMobileDataEnabled
    void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,boolean,boolean,java.lang.String,boolean) -> setWifiIndicators
android.support.v7.widget.ViewBoundsCheck$Callback -> android.support.v7.widget.ViewBoundsCheck$Callback:
    int getParentStart() -> getParentStart
    int getChildStart(android.view.View) -> getChildStart
    int getParentEnd() -> getParentEnd
    android.view.View getChildAt(int) -> getChildAt
    int getChildEnd(android.view.View) -> getChildEnd
android.support.v4.view.ViewCompat$ViewCompatApi19Impl -> android.support.v4.view.ViewCompat$ViewCompatApi19Impl:
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isLaidOut(android.view.View) -> isLaidOut
    void <init>() -> <init>
android.support.v7.app.AlertController$AlertParams$3 -> android.support.v7.app.AlertController$AlertParams$3:
    android.support.v7.app.AlertController$AlertParams this$1 -> this$1
    android.support.v7.app.AlertController val$dialog -> val$dialog
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController) -> <init>
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.recents.events.EventBus$InterprocessEvent -> com.android.systemui.recents.events.EventBus$InterprocessEvent:
com.android.systemui.recents.IRecentsSystemUserCallbacks$Stub -> com.android.systemui.recents.IRecentsSystemUserCallbacks$Stub:
    com.android.systemui.recents.IRecentsSystemUserCallbacks asInterface(android.os.IBinder) -> asInterface
    void <init>() -> <init>
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.systemui.egg.MLand$Star -> com.android.systemui.egg.MLand$Star:
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context) -> <init>
com.android.systemui.plugins.annotations.Requires -> com.android.systemui.plugins.annotations.Requires:
    int version() -> version
    java.lang.Class target() -> target
com.android.systemui.statusbar.policy.HotspotControllerImpl -> com.android.systemui.statusbar.policy.HotspotControllerImpl:
    boolean DEBUG -> DEBUG
    java.util.ArrayList mCallbacks -> mCallbacks
    android.net.ConnectivityManager mConnectivityManager -> mConnectivityManager
    android.content.Context mContext -> mContext
    int mHotspotState -> mHotspotState
    com.android.systemui.statusbar.policy.HotspotControllerImpl$Receiver mReceiver -> mReceiver
    boolean mWaitingForCallback -> mWaitingForCallback
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.HotspotController$Callback) -> addCallback
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void fireCallback(boolean) -> fireCallback
    boolean isHotspotEnabled() -> isHotspotEnabled
    boolean isHotspotSupported() -> isHotspotSupported
    boolean isHotspotTransient() -> isHotspotTransient
    void removeCallback(com.android.systemui.statusbar.policy.HotspotController$Callback) -> removeCallback
    void setHotspotEnabled(boolean) -> setHotspotEnabled
    java.lang.String stateToString(int) -> stateToString
    void <clinit>() -> <clinit>
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    boolean -get0() -> -get0
    android.content.Context -get1(com.android.systemui.statusbar.policy.HotspotControllerImpl) -> -get1
    int -get2(com.android.systemui.statusbar.policy.HotspotControllerImpl) -> -get2
    int -set0(com.android.systemui.statusbar.policy.HotspotControllerImpl,int) -> -set0
    boolean -set1(com.android.systemui.statusbar.policy.HotspotControllerImpl,boolean) -> -set1
    void -wrap0(com.android.systemui.statusbar.policy.HotspotControllerImpl,boolean) -> -wrap0
com.android.systemui.qs.tileimpl.-$Lambda$HWR9Y5oviVQDQwcpVJqL0gX3vIE$1 -> com.android.systemui.qs.tileimpl.-$Lambda$HWR9Y5oviVQDQwcpVJqL0gX3vIE$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0(android.view.View) -> $m$0
    boolean onLongClick(android.view.View) -> onLongClick
com.android.systemui.statusbar.KeyguardAffordanceView$1 -> com.android.systemui.statusbar.KeyguardAffordanceView$1:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.provider.SelfDestructiveThread$1 -> android.support.v4.provider.SelfDestructiveThread$1:
    android.support.v4.provider.SelfDestructiveThread this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
    void <init>(android.support.v4.provider.SelfDestructiveThread) -> <init>
android.support.v17.leanback.widget.GuidedActionEditText$NoPaddingDrawable -> android.support.v17.leanback.widget.GuidedActionEditText$NoPaddingDrawable:
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void draw(android.graphics.Canvas) -> draw
    void <init>() -> <init>
    boolean getPadding(android.graphics.Rect) -> getPadding
android.support.v7.media.RegisteredMediaRouteProvider -> android.support.v7.media.RegisteredMediaRouteProvider:
    boolean mConnectionReady -> mConnectionReady
    android.support.v7.media.RegisteredMediaRouteProvider$Connection mActiveConnection -> mActiveConnection
    boolean mStarted -> mStarted
    java.util.ArrayList mControllers -> mControllers
    boolean mBound -> mBound
    android.support.v7.media.RegisteredMediaRouteProvider$PrivateHandler mPrivateHandler -> mPrivateHandler
    android.content.ComponentName mComponentName -> mComponentName
    boolean DEBUG -> DEBUG
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onControllerReleased(android.support.v7.media.RegisteredMediaRouteProvider$Controller) -> onControllerReleased
    void onConnectionDied(android.support.v7.media.RegisteredMediaRouteProvider$Connection) -> onConnectionDied
    void start() -> start
    void rebindIfDisconnected() -> rebindIfDisconnected
    void unbind() -> unbind
    android.support.v7.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String,java.lang.String) -> onCreateRouteController
    void onDiscoveryRequestChanged(android.support.v7.media.MediaRouteDiscoveryRequest) -> onDiscoveryRequestChanged
    void detachControllersFromConnection() -> detachControllersFromConnection
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean shouldBind() -> shouldBind
    void disconnect() -> disconnect
    void bind() -> bind
    android.support.v7.media.MediaRouteProvider$RouteController createRouteController(java.lang.String,java.lang.String) -> createRouteController
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void attachControllersToConnection() -> attachControllersToConnection
    void onConnectionDescriptorChanged(android.support.v7.media.RegisteredMediaRouteProvider$Connection,android.support.v7.media.MediaRouteProviderDescriptor) -> onConnectionDescriptorChanged
    boolean hasComponentName(java.lang.String,java.lang.String) -> hasComponentName
    void onConnectionError(android.support.v7.media.RegisteredMediaRouteProvider$Connection,java.lang.String) -> onConnectionError
    android.support.v7.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String) -> onCreateRouteController
    void <init>(android.content.Context,android.content.ComponentName) -> <init>
    void onConnectionReady(android.support.v7.media.RegisteredMediaRouteProvider$Connection) -> onConnectionReady
    void stop() -> stop
    void updateBinding() -> updateBinding
android.support.v17.leanback.widget.BaseCardView -> android.support.v17.leanback.widget.BaseCardView:
    int[] LB_PRESSED_STATE_SET -> LB_PRESSED_STATE_SET
    java.util.ArrayList mExtraViewList -> mExtraViewList
    int mSelectedAnimDuration -> mSelectedAnimDuration
    int mExtraVisibility -> mExtraVisibility
    int mActivatedAnimDuration -> mActivatedAnimDuration
    int mCardType -> mCardType
    float mInfoVisFraction -> mInfoVisFraction
    java.lang.Runnable mAnimationTrigger -> mAnimationTrigger
    int mSelectedAnimationDelay -> mSelectedAnimationDelay
    android.view.animation.Animation mAnim -> mAnim
    java.util.ArrayList mMainViewList -> mMainViewList
    int mMeasuredHeight -> mMeasuredHeight
    int mMeasuredWidth -> mMeasuredWidth
    java.util.ArrayList mInfoViewList -> mInfoViewList
    boolean mDelaySelectedAnim -> mDelaySelectedAnim
    float mInfoAlpha -> mInfoAlpha
    float mInfoOffset -> mInfoOffset
    int mInfoVisibility -> mInfoVisibility
    void animateInfoOffset(boolean) -> animateInfoOffset
    float getFinalInfoAlpha() -> getFinalInfoAlpha
    void setSelected(boolean) -> setSelected
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean isCurrentRegionVisible(int) -> isCurrentRegionVisible
    android.support.v17.leanback.widget.BaseCardView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean hasExtraRegion() -> hasExtraRegion
    void -wrap0(android.support.v17.leanback.widget.BaseCardView) -> -wrap0
    void animateInfoHeight(boolean) -> animateInfoHeight
    android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void setActivated(boolean) -> setActivated
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean isRegionVisible(int) -> isRegionVisible
    void onMeasure(int,int) -> onMeasure
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void animateInfoAlpha(boolean) -> animateInfoAlpha
    float getFinalInfoVisFraction() -> getFinalInfoVisFraction
    void applySelectedState(boolean) -> applySelectedState
    android.support.v17.leanback.widget.BaseCardView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.support.v17.leanback.widget.BaseCardView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean hasInfoRegion() -> hasInfoRegion
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void applyActiveState(boolean) -> applyActiveState
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setInfoViewVisibility(boolean) -> setInfoViewVisibility
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void cancelAnimations() -> cancelAnimations
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void findChildrenViews() -> findChildrenViews
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTabStrip) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.recents.Recents$2 -> com.android.systemui.recents.Recents$2:
    com.android.systemui.recents.Recents this$0 -> this$0
    void <init>(com.android.systemui.recents.Recents) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.android.systemui.statusbar.policy.KeyguardMonitorImpl -> com.android.systemui.statusbar.policy.KeyguardMonitorImpl:
    java.util.ArrayList mCallbacks -> mCallbacks
    boolean mCanSkipBouncer -> mCanSkipBouncer
    android.content.Context mContext -> mContext
    int mCurrentUser -> mCurrentUser
    boolean mKeyguardFadingAway -> mKeyguardFadingAway
    long mKeyguardFadingAwayDelay -> mKeyguardFadingAwayDelay
    long mKeyguardFadingAwayDuration -> mKeyguardFadingAwayDuration
    boolean mKeyguardGoingAway -> mKeyguardGoingAway
    com.android.keyguard.KeyguardUpdateMonitor mKeyguardUpdateMonitor -> mKeyguardUpdateMonitor
    boolean mListening -> mListening
    boolean mOccluded -> mOccluded
    boolean mSecure -> mSecure
    boolean mShowing -> mShowing
    com.android.systemui.settings.CurrentUserTracker mUserTracker -> mUserTracker
    boolean isDeviceInteractive() -> isDeviceInteractive
    boolean isShowing() -> isShowing
    boolean isOccluded() -> isOccluded
    void notifyKeyguardGoingAway(boolean) -> notifyKeyguardGoingAway
    void notifyKeyguardFadingAway(long,long) -> notifyKeyguardFadingAway
    void notifyKeyguardDoneFading() -> notifyKeyguardDoneFading
    void notifyKeyguardState(boolean,boolean,boolean) -> notifyKeyguardState
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.KeyguardMonitor$Callback) -> addCallback
    boolean canSkipBouncer() -> canSkipBouncer
    long getKeyguardFadingAwayDelay() -> getKeyguardFadingAwayDelay
    long getKeyguardFadingAwayDuration() -> getKeyguardFadingAwayDuration
    boolean isKeyguardFadingAway() -> isKeyguardFadingAway
    boolean isKeyguardGoingAway() -> isKeyguardGoingAway
    boolean isSecure() -> isSecure
    void notifyKeyguardChanged() -> notifyKeyguardChanged
    void onTrustChanged(int) -> onTrustChanged
    void removeCallback(com.android.systemui.statusbar.policy.KeyguardMonitor$Callback) -> removeCallback
    void updateCanSkipBouncerState() -> updateCanSkipBouncerState
    void -com_android_systemui_statusbar_policy_KeyguardMonitorImpl-mthref-0(com.android.systemui.statusbar.policy.KeyguardMonitor$Callback) -> -com_android_systemui_statusbar_policy_KeyguardMonitorImpl-mthref-0
    void removeCallback(java.lang.Object) -> removeCallback
    void addCallback(java.lang.Object) -> addCallback
    int -set0(com.android.systemui.statusbar.policy.KeyguardMonitorImpl,int) -> -set0
    void -wrap0(com.android.systemui.statusbar.policy.KeyguardMonitorImpl) -> -wrap0
com.android.systemui.pip.tv.-$Lambda$JQDRGc8obeL_Mc3RL89dKRiDWno$1 -> com.android.systemui.pip.tv.-$Lambda$JQDRGc8obeL_Mc3RL89dKRiDWno$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.RecyclerView$2 -> android.support.v7.widget.RecyclerView$2:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
com.android.systemui.keyguard.WorkLockActivity$1 -> com.android.systemui.keyguard.WorkLockActivity$1:
    com.android.systemui.keyguard.WorkLockActivity this$0 -> this$0
    void <init>(com.android.systemui.keyguard.WorkLockActivity) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.plugins.R$array -> com.android.systemui.plugins.R$array:
    int animator_duration_scale_entries -> animator_duration_scale_entries
    int animator_duration_scale_values -> animator_duration_scale_values
    int app_process_limit_entries -> app_process_limit_entries
    int app_process_limit_values -> app_process_limit_values
    int battery_labels -> battery_labels
    int battery_options -> battery_options
    int batterymeter_bolt_points -> batterymeter_bolt_points
    int batterymeter_color_levels -> batterymeter_color_levels
    int batterymeter_color_values -> batterymeter_color_values
    int batterymeter_plus_points -> batterymeter_plus_points
    int bluetooth_a2dp_codec_bits_per_sample_summaries -> bluetooth_a2dp_codec_bits_per_sample_summaries
    int bluetooth_a2dp_codec_bits_per_sample_titles -> bluetooth_a2dp_codec_bits_per_sample_titles
    int bluetooth_a2dp_codec_bits_per_sample_values -> bluetooth_a2dp_codec_bits_per_sample_values
    int bluetooth_a2dp_codec_channel_mode_summaries -> bluetooth_a2dp_codec_channel_mode_summaries
    int bluetooth_a2dp_codec_channel_mode_titles -> bluetooth_a2dp_codec_channel_mode_titles
    int bluetooth_a2dp_codec_channel_mode_values -> bluetooth_a2dp_codec_channel_mode_values
    int bluetooth_a2dp_codec_ldac_playback_quality_summaries -> bluetooth_a2dp_codec_ldac_playback_quality_summaries
    int bluetooth_a2dp_codec_ldac_playback_quality_titles -> bluetooth_a2dp_codec_ldac_playback_quality_titles
    int bluetooth_a2dp_codec_ldac_playback_quality_values -> bluetooth_a2dp_codec_ldac_playback_quality_values
    int bluetooth_a2dp_codec_sample_rate_summaries -> bluetooth_a2dp_codec_sample_rate_summaries
    int bluetooth_a2dp_codec_sample_rate_titles -> bluetooth_a2dp_codec_sample_rate_titles
    int bluetooth_a2dp_codec_sample_rate_values -> bluetooth_a2dp_codec_sample_rate_values
    int bluetooth_a2dp_codec_summaries -> bluetooth_a2dp_codec_summaries
    int bluetooth_a2dp_codec_titles -> bluetooth_a2dp_codec_titles
    int bluetooth_a2dp_codec_values -> bluetooth_a2dp_codec_values
    int bluetooth_avrcp_version_values -> bluetooth_avrcp_version_values
    int bluetooth_avrcp_versions -> bluetooth_avrcp_versions
    int car_facet_category_filters -> car_facet_category_filters
    int car_facet_icons -> car_facet_icons
    int car_facet_intent_uris -> car_facet_intent_uris
    int car_facet_longpress_intent_uris -> car_facet_longpress_intent_uris
    int car_facet_package_filters -> car_facet_package_filters
    int clock_options -> clock_options
    int color_mode_descriptions -> color_mode_descriptions
    int color_mode_ids -> color_mode_ids
    int color_mode_names -> color_mode_names
    int config_cameraLaunchGestureVibePattern -> config_cameraLaunchGestureVibePattern
    int config_doze_brightness_sensor_to_brightness -> config_doze_brightness_sensor_to_brightness
    int config_doze_brightness_sensor_to_scrim_opacity -> config_doze_brightness_sensor_to_scrim_opacity
    int config_notification_snooze_times -> config_notification_snooze_times
    int data_activity_sim1 -> data_activity_sim1
    int data_activity_sim2 -> data_activity_sim2
    int data_activity_sim3 -> data_activity_sim3
    int debug_hw_overdraw_entries -> debug_hw_overdraw_entries
    int debug_hw_overdraw_values -> debug_hw_overdraw_values
    int debug_hw_renderer_entries -> debug_hw_renderer_entries
    int debug_hw_renderer_values -> debug_hw_renderer_values
    int enable_opengl_traces_entries -> enable_opengl_traces_entries
    int enable_opengl_traces_values -> enable_opengl_traces_values
    int hdcp_checking_summaries -> hdcp_checking_summaries
    int hdcp_checking_titles -> hdcp_checking_titles
    int hdcp_checking_values -> hdcp_checking_values
    int locale_carrier_names -> locale_carrier_names
    int lockscreen_num_pad_klondike -> lockscreen_num_pad_klondike
    int multi_data_activity -> multi_data_activity
    int multi_data_type -> multi_data_type
    int multi_no_sim -> multi_no_sim
    int multi_signal_null -> multi_signal_null
    int multi_signal_strength -> multi_signal_strength
    int multi_signal_strength_roaming -> multi_signal_strength_roaming
    int nav_bar_button_values -> nav_bar_button_values
    int nav_bar_buttons -> nav_bar_buttons
    int nav_bar_layouts -> nav_bar_layouts
    int nav_bar_layouts_values -> nav_bar_layouts_values
    int origin_carrier_names -> origin_carrier_names
    int overlay_display_devices_entries -> overlay_display_devices_entries
    int overlay_display_devices_values -> overlay_display_devices_values
    int recents_blacklist_array -> recents_blacklist_array
    int select_logd_size_lowram_titles -> select_logd_size_lowram_titles
    int select_logd_size_summaries -> select_logd_size_summaries
    int select_logd_size_titles -> select_logd_size_titles
    int select_logd_size_values -> select_logd_size_values
    int select_logpersist_summaries -> select_logpersist_summaries
    int select_logpersist_titles -> select_logpersist_titles
    int select_logpersist_values -> select_logpersist_values
    int show_non_rect_clip_entries -> show_non_rect_clip_entries
    int show_non_rect_clip_values -> show_non_rect_clip_values
    int signal_strength_1x_fully_roaming_sim1 -> signal_strength_1x_fully_roaming_sim1
    int signal_strength_1x_fully_roaming_sim2 -> signal_strength_1x_fully_roaming_sim2
    int signal_strength_1x_fully_roaming_sim3 -> signal_strength_1x_fully_roaming_sim3
    int signal_strength_1x_fully_sim1 -> signal_strength_1x_fully_sim1
    int signal_strength_1x_fully_sim2 -> signal_strength_1x_fully_sim2
    int signal_strength_1x_fully_sim3 -> signal_strength_1x_fully_sim3
    int signal_strength_1x_normal_roaming_sim1 -> signal_strength_1x_normal_roaming_sim1
    int signal_strength_1x_normal_roaming_sim2 -> signal_strength_1x_normal_roaming_sim2
    int signal_strength_1x_normal_roaming_sim3 -> signal_strength_1x_normal_roaming_sim3
    int signal_strength_1x_normal_sim1 -> signal_strength_1x_normal_sim1
    int signal_strength_1x_normal_sim2 -> signal_strength_1x_normal_sim2
    int signal_strength_1x_normal_sim3 -> signal_strength_1x_normal_sim3
    int signal_strength_3g_fully_roaming_sim1 -> signal_strength_3g_fully_roaming_sim1
    int signal_strength_3g_fully_roaming_sim2 -> signal_strength_3g_fully_roaming_sim2
    int signal_strength_3g_fully_roaming_sim3 -> signal_strength_3g_fully_roaming_sim3
    int signal_strength_3g_fully_sim1 -> signal_strength_3g_fully_sim1
    int signal_strength_3g_fully_sim2 -> signal_strength_3g_fully_sim2
    int signal_strength_3g_fully_sim3 -> signal_strength_3g_fully_sim3
    int signal_strength_3g_normal_roaming_sim1 -> signal_strength_3g_normal_roaming_sim1
    int signal_strength_3g_normal_roaming_sim2 -> signal_strength_3g_normal_roaming_sim2
    int signal_strength_3g_normal_roaming_sim3 -> signal_strength_3g_normal_roaming_sim3
    int signal_strength_3g_normal_sim1 -> signal_strength_3g_normal_sim1
    int signal_strength_3g_normal_sim2 -> signal_strength_3g_normal_sim2
    int signal_strength_3g_normal_sim3 -> signal_strength_3g_normal_sim3
    int signal_strength_4g_fully_roaming_sim1 -> signal_strength_4g_fully_roaming_sim1
    int signal_strength_4g_fully_roaming_sim2 -> signal_strength_4g_fully_roaming_sim2
    int signal_strength_4g_fully_roaming_sim3 -> signal_strength_4g_fully_roaming_sim3
    int signal_strength_4g_fully_sim1 -> signal_strength_4g_fully_sim1
    int signal_strength_4g_fully_sim2 -> signal_strength_4g_fully_sim2
    int signal_strength_4g_fully_sim3 -> signal_strength_4g_fully_sim3
    int signal_strength_4g_normal_roaming_sim1 -> signal_strength_4g_normal_roaming_sim1
    int signal_strength_4g_normal_roaming_sim2 -> signal_strength_4g_normal_roaming_sim2
    int signal_strength_4g_normal_roaming_sim3 -> signal_strength_4g_normal_roaming_sim3
    int signal_strength_4g_normal_sim1 -> signal_strength_4g_normal_sim1
    int signal_strength_4g_normal_sim2 -> signal_strength_4g_normal_sim2
    int signal_strength_4g_normal_sim3 -> signal_strength_4g_normal_sim3
    int signal_strength_4g_plus_fully_sim1 -> signal_strength_4g_plus_fully_sim1
    int signal_strength_4g_plus_normal_sim1 -> signal_strength_4g_plus_normal_sim1
    int signal_strength_cdma_fully_roaming_sim1 -> signal_strength_cdma_fully_roaming_sim1
    int signal_strength_cdma_fully_roaming_sim2 -> signal_strength_cdma_fully_roaming_sim2
    int signal_strength_cdma_fully_roaming_sim3 -> signal_strength_cdma_fully_roaming_sim3
    int signal_strength_cdma_fully_sim1 -> signal_strength_cdma_fully_sim1
    int signal_strength_cdma_fully_sim2 -> signal_strength_cdma_fully_sim2
    int signal_strength_cdma_fully_sim3 -> signal_strength_cdma_fully_sim3
    int signal_strength_cdma_normal_roaming_sim1 -> signal_strength_cdma_normal_roaming_sim1
    int signal_strength_cdma_normal_roaming_sim2 -> signal_strength_cdma_normal_roaming_sim2
    int signal_strength_cdma_normal_roaming_sim3 -> signal_strength_cdma_normal_roaming_sim3
    int signal_strength_cdma_normal_sim1 -> signal_strength_cdma_normal_sim1
    int signal_strength_cdma_normal_sim2 -> signal_strength_cdma_normal_sim2
    int signal_strength_cdma_normal_sim3 -> signal_strength_cdma_normal_sim3
    int signal_strength_description -> signal_strength_description
    int signal_strength_e_fully_roaming_sim1 -> signal_strength_e_fully_roaming_sim1
    int signal_strength_e_fully_roaming_sim2 -> signal_strength_e_fully_roaming_sim2
    int signal_strength_e_fully_roaming_sim3 -> signal_strength_e_fully_roaming_sim3
    int signal_strength_e_fully_sim1 -> signal_strength_e_fully_sim1
    int signal_strength_e_fully_sim2 -> signal_strength_e_fully_sim2
    int signal_strength_e_fully_sim3 -> signal_strength_e_fully_sim3
    int signal_strength_e_normal_roaming_sim1 -> signal_strength_e_normal_roaming_sim1
    int signal_strength_e_normal_roaming_sim2 -> signal_strength_e_normal_roaming_sim2
    int signal_strength_e_normal_roaming_sim3 -> signal_strength_e_normal_roaming_sim3
    int signal_strength_e_normal_sim1 -> signal_strength_e_normal_sim1
    int signal_strength_e_normal_sim2 -> signal_strength_e_normal_sim2
    int signal_strength_e_normal_sim3 -> signal_strength_e_normal_sim3
    int signal_strength_g_fully_roaming_sim1 -> signal_strength_g_fully_roaming_sim1
    int signal_strength_g_fully_roaming_sim2 -> signal_strength_g_fully_roaming_sim2
    int signal_strength_g_fully_roaming_sim3 -> signal_strength_g_fully_roaming_sim3
    int signal_strength_g_fully_sim1 -> signal_strength_g_fully_sim1
    int signal_strength_g_fully_sim2 -> signal_strength_g_fully_sim2
    int signal_strength_g_fully_sim3 -> signal_strength_g_fully_sim3
    int signal_strength_g_normal_roaming_sim1 -> signal_strength_g_normal_roaming_sim1
    int signal_strength_g_normal_roaming_sim2 -> signal_strength_g_normal_roaming_sim2
    int signal_strength_g_normal_roaming_sim3 -> signal_strength_g_normal_roaming_sim3
    int signal_strength_g_normal_sim1 -> signal_strength_g_normal_sim1
    int signal_strength_g_normal_sim2 -> signal_strength_g_normal_sim2
    int signal_strength_g_normal_sim3 -> signal_strength_g_normal_sim3
    int signal_strength_h_fully_roaming_sim1 -> signal_strength_h_fully_roaming_sim1
    int signal_strength_h_fully_roaming_sim2 -> signal_strength_h_fully_roaming_sim2
    int signal_strength_h_fully_roaming_sim3 -> signal_strength_h_fully_roaming_sim3
    int signal_strength_h_fully_sim1 -> signal_strength_h_fully_sim1
    int signal_strength_h_fully_sim2 -> signal_strength_h_fully_sim2
    int signal_strength_h_fully_sim3 -> signal_strength_h_fully_sim3
    int signal_strength_h_normal_roaming_sim1 -> signal_strength_h_normal_roaming_sim1
    int signal_strength_h_normal_roaming_sim2 -> signal_strength_h_normal_roaming_sim2
    int signal_strength_h_normal_roaming_sim3 -> signal_strength_h_normal_roaming_sim3
    int signal_strength_h_normal_sim1 -> signal_strength_h_normal_sim1
    int signal_strength_h_normal_sim2 -> signal_strength_h_normal_sim2
    int signal_strength_h_normal_sim3 -> signal_strength_h_normal_sim3
    int signal_strength_hp_fully_roaming_sim1 -> signal_strength_hp_fully_roaming_sim1
    int signal_strength_hp_fully_roaming_sim2 -> signal_strength_hp_fully_roaming_sim2
    int signal_strength_hp_fully_roaming_sim3 -> signal_strength_hp_fully_roaming_sim3
    int signal_strength_hp_fully_sim1 -> signal_strength_hp_fully_sim1
    int signal_strength_hp_fully_sim2 -> signal_strength_hp_fully_sim2
    int signal_strength_hp_fully_sim3 -> signal_strength_hp_fully_sim3
    int signal_strength_hp_normal_roaming_sim1 -> signal_strength_hp_normal_roaming_sim1
    int signal_strength_hp_normal_roaming_sim2 -> signal_strength_hp_normal_roaming_sim2
    int signal_strength_hp_normal_roaming_sim3 -> signal_strength_hp_normal_roaming_sim3
    int signal_strength_hp_normal_sim1 -> signal_strength_hp_normal_sim1
    int signal_strength_hp_normal_sim2 -> signal_strength_hp_normal_sim2
    int signal_strength_hp_normal_sim3 -> signal_strength_hp_normal_sim3
    int signal_strength_umts_fully_roaming_sim1 -> signal_strength_umts_fully_roaming_sim1
    int signal_strength_umts_fully_roaming_sim2 -> signal_strength_umts_fully_roaming_sim2
    int signal_strength_umts_fully_roaming_sim3 -> signal_strength_umts_fully_roaming_sim3
    int signal_strength_umts_fully_sim1 -> signal_strength_umts_fully_sim1
    int signal_strength_umts_fully_sim2 -> signal_strength_umts_fully_sim2
    int signal_strength_umts_fully_sim3 -> signal_strength_umts_fully_sim3
    int signal_strength_umts_normal_roaming_sim1 -> signal_strength_umts_normal_roaming_sim1
    int signal_strength_umts_normal_roaming_sim2 -> signal_strength_umts_normal_roaming_sim2
    int signal_strength_umts_normal_roaming_sim3 -> signal_strength_umts_normal_roaming_sim3
    int signal_strength_umts_normal_sim1 -> signal_strength_umts_normal_sim1
    int signal_strength_umts_normal_sim2 -> signal_strength_umts_normal_sim2
    int signal_strength_umts_normal_sim3 -> signal_strength_umts_normal_sim3
    int simulate_color_space_entries -> simulate_color_space_entries
    int simulate_color_space_values -> simulate_color_space_values
    int single_signal_icons -> single_signal_icons
    int stacked_signal_icons -> stacked_signal_icons
    int telephony_data_activity_1x_sim1 -> telephony_data_activity_1x_sim1
    int telephony_data_activity_1x_sim2 -> telephony_data_activity_1x_sim2
    int telephony_data_activity_1x_sim3 -> telephony_data_activity_1x_sim3
    int telephony_data_activity_2g_sim1 -> telephony_data_activity_2g_sim1
    int telephony_data_activity_2g_sim2 -> telephony_data_activity_2g_sim2
    int telephony_data_activity_2g_sim3 -> telephony_data_activity_2g_sim3
    int telephony_data_activity_3g_sim1 -> telephony_data_activity_3g_sim1
    int telephony_data_activity_3g_sim2 -> telephony_data_activity_3g_sim2
    int telephony_data_activity_3g_sim3 -> telephony_data_activity_3g_sim3
    int telephony_data_activity_4g_plus_sim1 -> telephony_data_activity_4g_plus_sim1
    int telephony_data_activity_4g_sim1 -> telephony_data_activity_4g_sim1
    int telephony_data_activity_4g_sim2 -> telephony_data_activity_4g_sim2
    int telephony_data_activity_4g_sim3 -> telephony_data_activity_4g_sim3
    int telephony_data_activity_e_sim1 -> telephony_data_activity_e_sim1
    int telephony_data_activity_e_sim2 -> telephony_data_activity_e_sim2
    int telephony_data_activity_e_sim3 -> telephony_data_activity_e_sim3
    int telephony_data_activity_g_sim1 -> telephony_data_activity_g_sim1
    int telephony_data_activity_g_sim2 -> telephony_data_activity_g_sim2
    int telephony_data_activity_g_sim3 -> telephony_data_activity_g_sim3
    int telephony_data_activity_h_sim1 -> telephony_data_activity_h_sim1
    int telephony_data_activity_h_sim2 -> telephony_data_activity_h_sim2
    int telephony_data_activity_h_sim3 -> telephony_data_activity_h_sim3
    int telephony_data_activity_hp_sim1 -> telephony_data_activity_hp_sim1
    int telephony_data_activity_hp_sim2 -> telephony_data_activity_hp_sim2
    int telephony_data_activity_hp_sim3 -> telephony_data_activity_hp_sim3
    int telephony_data_activity_lte_sim1 -> telephony_data_activity_lte_sim1
    int telephony_data_activity_lte_sim2 -> telephony_data_activity_lte_sim2
    int telephony_data_activity_lte_sim3 -> telephony_data_activity_lte_sim3
    int telephony_data_activity_unknown_sim1 -> telephony_data_activity_unknown_sim1
    int telephony_data_activity_unknown_sim2 -> telephony_data_activity_unknown_sim2
    int telephony_data_activity_unknown_sim3 -> telephony_data_activity_unknown_sim3
    int telephony_data_type_description -> telephony_data_type_description
    int telephony_data_type_generation -> telephony_data_type_generation
    int telephony_data_type_generation_description -> telephony_data_type_generation_description
    int telephony_data_type_sim1 -> telephony_data_type_sim1
    int telephony_data_type_sim2 -> telephony_data_type_sim2
    int telephony_data_type_sim3 -> telephony_data_type_sim3
    int telephony_siganl_strength_roaming_sim1 -> telephony_siganl_strength_roaming_sim1
    int telephony_siganl_strength_roaming_sim2 -> telephony_siganl_strength_roaming_sim2
    int telephony_siganl_strength_roaming_sim3 -> telephony_siganl_strength_roaming_sim3
    int telephony_siganl_strength_sim1 -> telephony_siganl_strength_sim1
    int telephony_siganl_strength_sim2 -> telephony_siganl_strength_sim2
    int telephony_siganl_strength_sim3 -> telephony_siganl_strength_sim3
    int telephony_signal_strength_1x_roaming_sim1 -> telephony_signal_strength_1x_roaming_sim1
    int telephony_signal_strength_1x_roaming_sim2 -> telephony_signal_strength_1x_roaming_sim2
    int telephony_signal_strength_1x_roaming_sim3 -> telephony_signal_strength_1x_roaming_sim3
    int telephony_signal_strength_1x_sim1 -> telephony_signal_strength_1x_sim1
    int telephony_signal_strength_1x_sim2 -> telephony_signal_strength_1x_sim2
    int telephony_signal_strength_1x_sim3 -> telephony_signal_strength_1x_sim3
    int telephony_signal_strength_3g_roaming_sim1 -> telephony_signal_strength_3g_roaming_sim1
    int telephony_signal_strength_3g_roaming_sim2 -> telephony_signal_strength_3g_roaming_sim2
    int telephony_signal_strength_3g_roaming_sim3 -> telephony_signal_strength_3g_roaming_sim3
    int telephony_signal_strength_3g_sim1 -> telephony_signal_strength_3g_sim1
    int telephony_signal_strength_3g_sim2 -> telephony_signal_strength_3g_sim2
    int telephony_signal_strength_3g_sim3 -> telephony_signal_strength_3g_sim3
    int telephony_signal_strength_4g_plus_sim1 -> telephony_signal_strength_4g_plus_sim1
    int telephony_signal_strength_4g_roaming_sim1 -> telephony_signal_strength_4g_roaming_sim1
    int telephony_signal_strength_4g_roaming_sim2 -> telephony_signal_strength_4g_roaming_sim2
    int telephony_signal_strength_4g_roaming_sim3 -> telephony_signal_strength_4g_roaming_sim3
    int telephony_signal_strength_4g_sim1 -> telephony_signal_strength_4g_sim1
    int telephony_signal_strength_4g_sim2 -> telephony_signal_strength_4g_sim2
    int telephony_signal_strength_4g_sim3 -> telephony_signal_strength_4g_sim3
    int telephony_signal_strength_cdma_roaming_sim1 -> telephony_signal_strength_cdma_roaming_sim1
    int telephony_signal_strength_cdma_roaming_sim2 -> telephony_signal_strength_cdma_roaming_sim2
    int telephony_signal_strength_cdma_roaming_sim3 -> telephony_signal_strength_cdma_roaming_sim3
    int telephony_signal_strength_cdma_sim1 -> telephony_signal_strength_cdma_sim1
    int telephony_signal_strength_cdma_sim2 -> telephony_signal_strength_cdma_sim2
    int telephony_signal_strength_cdma_sim3 -> telephony_signal_strength_cdma_sim3
    int telephony_signal_strength_e_roaming_sim1 -> telephony_signal_strength_e_roaming_sim1
    int telephony_signal_strength_e_roaming_sim2 -> telephony_signal_strength_e_roaming_sim2
    int telephony_signal_strength_e_roaming_sim3 -> telephony_signal_strength_e_roaming_sim3
    int telephony_signal_strength_e_sim1 -> telephony_signal_strength_e_sim1
    int telephony_signal_strength_e_sim2 -> telephony_signal_strength_e_sim2
    int telephony_signal_strength_e_sim3 -> telephony_signal_strength_e_sim3
    int telephony_signal_strength_g_roaming_sim1 -> telephony_signal_strength_g_roaming_sim1
    int telephony_signal_strength_g_roaming_sim2 -> telephony_signal_strength_g_roaming_sim2
    int telephony_signal_strength_g_roaming_sim3 -> telephony_signal_strength_g_roaming_sim3
    int telephony_signal_strength_g_sim1 -> telephony_signal_strength_g_sim1
    int telephony_signal_strength_g_sim2 -> telephony_signal_strength_g_sim2
    int telephony_signal_strength_g_sim3 -> telephony_signal_strength_g_sim3
    int telephony_signal_strength_h_roaming_sim1 -> telephony_signal_strength_h_roaming_sim1
    int telephony_signal_strength_h_roaming_sim2 -> telephony_signal_strength_h_roaming_sim2
    int telephony_signal_strength_h_roaming_sim3 -> telephony_signal_strength_h_roaming_sim3
    int telephony_signal_strength_h_sim1 -> telephony_signal_strength_h_sim1
    int telephony_signal_strength_h_sim2 -> telephony_signal_strength_h_sim2
    int telephony_signal_strength_h_sim3 -> telephony_signal_strength_h_sim3
    int telephony_signal_strength_hp_roaming_sim1 -> telephony_signal_strength_hp_roaming_sim1
    int telephony_signal_strength_hp_roaming_sim2 -> telephony_signal_strength_hp_roaming_sim2
    int telephony_signal_strength_hp_roaming_sim3 -> telephony_signal_strength_hp_roaming_sim3
    int telephony_signal_strength_hp_sim1 -> telephony_signal_strength_hp_sim1
    int telephony_signal_strength_hp_sim2 -> telephony_signal_strength_hp_sim2
    int telephony_signal_strength_hp_sim3 -> telephony_signal_strength_hp_sim3
    int telephony_signal_strength_umts_roaming_sim1 -> telephony_signal_strength_umts_roaming_sim1
    int telephony_signal_strength_umts_roaming_sim2 -> telephony_signal_strength_umts_roaming_sim2
    int telephony_signal_strength_umts_roaming_sim3 -> telephony_signal_strength_umts_roaming_sim3
    int telephony_signal_strength_umts_sim1 -> telephony_signal_strength_umts_sim1
    int telephony_signal_strength_umts_sim2 -> telephony_signal_strength_umts_sim2
    int telephony_signal_strength_umts_sim3 -> telephony_signal_strength_umts_sim3
    int track_frame_time_entries -> track_frame_time_entries
    int track_frame_time_values -> track_frame_time_values
    int transition_animation_scale_entries -> transition_animation_scale_entries
    int transition_animation_scale_values -> transition_animation_scale_values
    int tts_demo_string_langs -> tts_demo_string_langs
    int tts_demo_strings -> tts_demo_strings
    int tts_rate_entries -> tts_rate_entries
    int tts_rate_values -> tts_rate_values
    int tv_pip_settings_class_name -> tv_pip_settings_class_name
    int usb_configuration_titles -> usb_configuration_titles
    int usb_configuration_values -> usb_configuration_values
    int wifi_status -> wifi_status
    int wifi_status_with_ssid -> wifi_status_with_ssid
    int window_animation_scale_entries -> window_animation_scale_entries
    int window_animation_scale_values -> window_animation_scale_values
    void <init>() -> <init>
com.android.systemui.statusbar.phone.-$Lambda$0bHtyKFJ7kwHShDU04o3QjO6EJY -> com.android.systemui.statusbar.phone.-$Lambda$0bHtyKFJ7kwHShDU04o3QjO6EJY:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void $m$4() -> $m$4
    void $m$5() -> $m$5
    void $m$6() -> $m$6
    void $m$7() -> $m$7
    void $m$8() -> $m$8
    void $m$9() -> $m$9
    void $m$10() -> $m$10
    void run() -> run
android.support.v7.widget.AppCompatRatingBar -> android.support.v7.widget.AppCompatRatingBar:
    android.support.v7.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> mAppCompatProgressBarHelper
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onMeasure(int,int) -> onMeasure
com.android.systemui.statusbar.phone.LockscreenWallpaper$LoaderResult -> com.android.systemui.statusbar.phone.LockscreenWallpaper$LoaderResult:
    android.graphics.Bitmap bitmap -> bitmap
    boolean success -> success
    void <init>(boolean,android.graphics.Bitmap) -> <init>
    com.android.systemui.statusbar.phone.LockscreenWallpaper$LoaderResult fail() -> fail
    com.android.systemui.statusbar.phone.LockscreenWallpaper$LoaderResult success(android.graphics.Bitmap) -> success
com.android.systemui.statusbar.phone.LightBarController -> com.android.systemui.statusbar.phone.LightBarController:
    com.android.systemui.statusbar.policy.BatteryController mBatteryController -> mBatteryController
    android.graphics.Color mDarkModeColor -> mDarkModeColor
    boolean mDockedLight -> mDockedLight
    int mDockedStackVisibility -> mDockedStackVisibility
    com.android.systemui.statusbar.phone.FingerprintUnlockController mFingerprintUnlockController -> mFingerprintUnlockController
    boolean mFullscreenLight -> mFullscreenLight
    int mFullscreenStackVisibility -> mFullscreenStackVisibility
    boolean mHasLightNavigationBar -> mHasLightNavigationBar
    boolean mInvertLightNavBarWithScrim -> mInvertLightNavBarWithScrim
    android.graphics.Rect mLastDockedBounds -> mLastDockedBounds
    android.graphics.Rect mLastFullscreenBounds -> mLastFullscreenBounds
    int mLastNavigationBarMode -> mLastNavigationBarMode
    int mLastStatusBarMode -> mLastStatusBarMode
    com.android.systemui.statusbar.phone.LightBarTransitionsController mNavigationBarController -> mNavigationBarController
    boolean mNavigationLight -> mNavigationLight
    boolean mQsCustomizing -> mQsCustomizing
    float mScrimAlpha -> mScrimAlpha
    boolean mScrimAlphaBelowThreshold -> mScrimAlphaBelowThreshold
    com.android.systemui.statusbar.policy.DarkIconDispatcher mStatusBarIconController -> mStatusBarIconController
    int mSystemUiVisibility -> mSystemUiVisibility
    void setQsCustomizing(boolean) -> setQsCustomizing
    void setFingerprintUnlockController(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> setFingerprintUnlockController
    void onSystemUiVisibilityChanged(int,int,int,android.graphics.Rect,android.graphics.Rect,boolean,int) -> onSystemUiVisibilityChanged
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void <init>(android.content.Context) -> <init>
    void onNavigationVisibilityChanged(int,int,boolean,int) -> onNavigationVisibilityChanged
    void setNavigationBar(com.android.systemui.statusbar.phone.LightBarTransitionsController) -> setNavigationBar
    void setScrimColor(com.android.internal.colorextraction.ColorExtractor$GradientColors) -> setScrimColor
    void setScrimAlpha(float) -> setScrimAlpha
    boolean animateChange() -> animateChange
    boolean isLight(int,int,int) -> isLight
    void onBatteryLevelChanged(int,boolean,boolean) -> onBatteryLevelChanged
    void onPowerSaveChanged(boolean) -> onPowerSaveChanged
    void reevaluate() -> reevaluate
    void updateNavigation() -> updateNavigation
    void updateStatus(android.graphics.Rect,android.graphics.Rect) -> updateStatus
android.support.v4.graphics.drawable.DrawableWrapperApi21 -> android.support.v4.graphics.drawable.DrawableWrapperApi21:
    java.lang.reflect.Method sIsProjectedDrawableMethod -> sIsProjectedDrawableMethod
    void getOutline(android.graphics.Outline) -> getOutline
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void setTintList(android.content.res.ColorStateList) -> setTintList
    boolean isProjected() -> isProjected
    boolean setState(int[]) -> setState
    boolean isCompatTintEnabled() -> isCompatTintEnabled
    void setHotspot(float,float) -> setHotspot
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void setTint(int) -> setTint
com.android.systemui.ExpandHelper -> com.android.systemui.ExpandHelper:
    com.android.systemui.ExpandHelper$Callback mCallback -> mCallback
    android.content.Context mContext -> mContext
    float mCurrentHeight -> mCurrentHeight
    boolean mEnabled -> mEnabled
    android.view.View mEventSource -> mEventSource
    boolean mExpanding -> mExpanding
    int mExpansionStyle -> mExpansionStyle
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    int mGravity -> mGravity
    boolean mHasPopped -> mHasPopped
    float mInitialTouchFocusY -> mInitialTouchFocusY
    float mInitialTouchSpan -> mInitialTouchSpan
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    int mLargeSize -> mLargeSize
    float mLastFocusY -> mLastFocusY
    float mLastMotionY -> mLastMotionY
    float mLastSpanY -> mLastSpanY
    float mMaximumStretch -> mMaximumStretch
    float mNaturalHeight -> mNaturalHeight
    float mOldHeight -> mOldHeight
    boolean mOnlyMovements -> mOnlyMovements
    float mPullGestureMinXSpan -> mPullGestureMinXSpan
    com.android.systemui.statusbar.ExpandableView mResizedView -> mResizedView
    android.view.ScaleGestureDetector mSGD -> mSGD
    android.animation.ObjectAnimator mScaleAnimation -> mScaleAnimation
    android.view.ScaleGestureDetector$OnScaleGestureListener mScaleGestureListener -> mScaleGestureListener
    com.android.systemui.ExpandHelper$ViewScaler mScaler -> mScaler
    com.android.systemui.statusbar.policy.ScrollAdapter mScrollAdapter -> mScrollAdapter
    int mSmallSize -> mSmallSize
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mWatchingForPull -> mWatchingForPull
    void <init>(android.content.Context,com.android.systemui.ExpandHelper$Callback,int,int) -> <init>
    void cancel() -> cancel
    void cancel(boolean) -> cancel
    void cancelImmediately() -> cancelImmediately
    float clamp(float) -> clamp
    void clearView() -> clearView
    com.android.systemui.statusbar.ExpandableView findView(float,float) -> findView
    void finishExpanding(boolean,float) -> finishExpanding
    void finishExpanding(boolean,float,boolean) -> finishExpanding
    float getCurrentVelocity() -> getCurrentVelocity
    android.animation.ObjectAnimator getScaleAnimation() -> getScaleAnimation
    boolean isEnabled() -> isEnabled
    boolean isFullyExpanded(com.android.systemui.statusbar.ExpandableView) -> isFullyExpanded
    boolean isInside(android.view.View,float,float) -> isInside
    void maybeRecycleVelocityTracker(android.view.MotionEvent) -> maybeRecycleVelocityTracker
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onlyObserveMovements(boolean) -> onlyObserveMovements
    void setEnabled(boolean) -> setEnabled
    void setEventSource(android.view.View) -> setEventSource
    void setScrollAdapter(com.android.systemui.statusbar.policy.ScrollAdapter) -> setScrollAdapter
    boolean startExpanding(com.android.systemui.statusbar.ExpandableView,int) -> startExpanding
    void trackVelocity(android.view.MotionEvent) -> trackVelocity
    void updateExpansion() -> updateExpansion
    com.android.systemui.ExpandHelper$Callback -get0(com.android.systemui.ExpandHelper) -> -get0
    boolean -get1(com.android.systemui.ExpandHelper) -> -get1
    boolean -get2(com.android.systemui.ExpandHelper) -> -get2
    com.android.systemui.statusbar.ExpandableView -get3(com.android.systemui.ExpandHelper) -> -get3
    android.animation.ObjectAnimator -get4(com.android.systemui.ExpandHelper) -> -get4
    com.android.systemui.ExpandHelper$ViewScaler -get5(com.android.systemui.ExpandHelper) -> -get5
    float -set0(com.android.systemui.ExpandHelper,float) -> -set0
com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost -> com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost:
    boolean mAnimateWakeup -> mAnimateWakeup
    java.util.ArrayList mCallbacks -> mCallbacks
    boolean mIgnoreTouchWhilePulsing -> mIgnoreTouchWhilePulsing
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void addCallback(com.android.systemui.doze.DozeHost$Callback) -> addCallback
    void dispatchDoubleTap(float,float) -> dispatchDoubleTap
    void dispatchTap(android.view.View,float,float) -> dispatchTap
    void dispatchTouchEvent(android.view.View,float,float,long,int) -> dispatchTouchEvent
    void dozeTimeTick() -> dozeTimeTick
    void extendPulse() -> extendPulse
    void fireNotificationHeadsUp() -> fireNotificationHeadsUp
    void firePowerSaveChanged(boolean) -> firePowerSaveChanged
    boolean isBlockingDoze() -> isBlockingDoze
    boolean isPowerSaveActive() -> isPowerSaveActive
    boolean isProvisioned() -> isProvisioned
    boolean isPulsingBlocked() -> isPulsingBlocked
    void onDoubleTap(float,float) -> onDoubleTap
    void onIgnoreTouchWhilePulsing(boolean) -> onIgnoreTouchWhilePulsing
    void pulseWhileDozing(com.android.systemui.doze.DozeHost$PulseCallback,int) -> pulseWhileDozing
    void removeCallback(com.android.systemui.doze.DozeHost$Callback) -> removeCallback
    void setAnimateWakeup(boolean) -> setAnimateWakeup
    void setAodDimmingScrim(float) -> setAodDimmingScrim
    void setDozeScreenBrightness(int) -> setDozeScreenBrightness
    boolean shouldAnimateWakeup() -> shouldAnimateWakeup
    void startDozing() -> startDozing
    void stopDozing() -> stopDozing
    java.lang.String toString() -> toString
    boolean -get0(com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost) -> -get0
    boolean -set0(com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost,boolean) -> -set0
    boolean -wrap0(com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost) -> -wrap0
    void <init>(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost) -> <init>
com.android.systemui.recents.misc.RectFEvaluator -> com.android.systemui.recents.misc.RectFEvaluator:
    android.graphics.RectF mRect -> mRect
    void <init>() -> <init>
    android.graphics.RectF evaluate(float,android.graphics.RectF,android.graphics.RectF) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.android.settingslib.bluetooth.PbapServerProfile -> com.android.settingslib.bluetooth.PbapServerProfile:
    boolean V -> V
    android.os.ParcelUuid[] PBAB_CLIENT_UUIDS -> PBAB_CLIENT_UUIDS
    boolean mIsProfileReady -> mIsProfileReady
    java.lang.String NAME -> NAME
    android.bluetooth.BluetoothPbap mService -> mService
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    android.bluetooth.BluetoothPbap -set1(com.android.settingslib.bluetooth.PbapServerProfile,android.bluetooth.BluetoothPbap) -> -set1
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    void <init>(android.content.Context) -> <init>
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    void finalize() -> finalize
    boolean -set0(com.android.settingslib.bluetooth.PbapServerProfile,boolean) -> -set0
com.android.systemui.DejankUtils$1 -> com.android.systemui.DejankUtils$1:
    void <init>() -> <init>
    void run() -> run
com.android.systemui.Somnambulator -> com.android.systemui.Somnambulator:
    void <init>() -> <init>
    void onStart() -> onStart
com.android.systemui.statusbar.stack.NotificationChildrenContainer$3 -> com.android.systemui.statusbar.stack.NotificationChildrenContainer$3:
    com.android.systemui.statusbar.stack.NotificationChildrenContainer this$0 -> this$0
    android.view.View val$removedOverflowNumber -> val$removedOverflowNumber
    void <init>(com.android.systemui.statusbar.stack.NotificationChildrenContainer,android.view.View) -> <init>
    void run() -> run
android.support.v7.appcompat.R$bool -> android.support.v7.appcompat.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    void <init>() -> <init>
com.android.systemui.doze.DozeTriggers -> com.android.systemui.doze.DozeTriggers:
    boolean DEBUG -> DEBUG
    boolean mAllowPulseTriggers -> mAllowPulseTriggers
    com.android.systemui.doze.DozeTriggers$TriggerReceiver mBroadcastReceiver -> mBroadcastReceiver
    com.android.internal.hardware.AmbientDisplayConfiguration mConfig -> mConfig
    android.content.Context mContext -> mContext
    com.android.systemui.doze.DozeHost mDozeHost -> mDozeHost
    com.android.systemui.statusbar.phone.DozeParameters mDozeParameters -> mDozeParameters
    com.android.systemui.doze.DozeSensors mDozeSensors -> mDozeSensors
    android.os.Handler mHandler -> mHandler
    com.android.systemui.doze.DozeHost$Callback mHostCallback -> mHostCallback
    com.android.systemui.doze.DozeMachine mMachine -> mMachine
    long mNotificationPulseTime -> mNotificationPulseTime
    boolean mPulsePending -> mPulsePending
    android.hardware.SensorManager mSensorManager -> mSensorManager
    android.app.UiModeManager mUiModeManager -> mUiModeManager
    com.android.systemui.util.wakelock.WakeLock mWakeLock -> mWakeLock
    int[] -com-android-systemui-doze-DozeMachine$StateSwitchesValues -> -com-android-systemui-doze-DozeMachine$StateSwitchesValues
    void <init>(android.content.Context,com.android.systemui.doze.DozeMachine,com.android.systemui.doze.DozeHost,android.app.AlarmManager,com.android.internal.hardware.AmbientDisplayConfiguration,com.android.systemui.statusbar.phone.DozeParameters,android.hardware.SensorManager,android.os.Handler,com.android.systemui.util.wakelock.WakeLock,boolean) -> <init>
    boolean canPulse() -> canPulse
    void checkTriggersAtInit() -> checkTriggersAtInit
    void continuePulseRequest(int) -> continuePulseRequest
    void dump(java.io.PrintWriter) -> dump
    void onNotification() -> onNotification
    void onProximityFar(boolean) -> onProximityFar
    void onSensor(int,boolean,float,float) -> onSensor
    void proximityCheckThenCall(java.util.function.IntConsumer,boolean,int) -> proximityCheckThenCall
    void requestPulse(int,boolean) -> requestPulse
    void transitionTo(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State) -> transitionTo
    void <clinit>() -> <clinit>
    void -com_android_systemui_doze_DozeTriggers-mthref-0(int,boolean,float,float) -> -com_android_systemui_doze_DozeTriggers-mthref-0
    void -com_android_systemui_doze_DozeTriggers-mthref-1(java.lang.Boolean) -> -com_android_systemui_doze_DozeTriggers-mthref-1
    void lambda$-com_android_systemui_doze_DozeTriggers_5468(boolean,float,float,int) -> lambda$-com_android_systemui_doze_DozeTriggers_5468
    void lambda$-com_android_systemui_doze_DozeTriggers_9565(int,int) -> lambda$-com_android_systemui_doze_DozeTriggers_9565
    android.content.Context -get0(com.android.systemui.doze.DozeTriggers) -> -get0
    com.android.systemui.doze.DozeSensors -get1(com.android.systemui.doze.DozeTriggers) -> -get1
    android.os.Handler -get2(com.android.systemui.doze.DozeTriggers) -> -get2
    com.android.systemui.doze.DozeMachine -get3(com.android.systemui.doze.DozeTriggers) -> -get3
    android.hardware.SensorManager -get4(com.android.systemui.doze.DozeTriggers) -> -get4
    com.android.systemui.util.wakelock.WakeLock -get5(com.android.systemui.doze.DozeTriggers) -> -get5
    void -wrap0(com.android.systemui.doze.DozeTriggers) -> -wrap0
    void -wrap1(com.android.systemui.doze.DozeTriggers,int,boolean) -> -wrap1
    int[] -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues() -> -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues
android.support.v7.preference.CheckBoxPreference$Listener -> android.support.v7.preference.CheckBoxPreference$Listener:
    android.support.v7.preference.CheckBoxPreference this$0 -> this$0
    void <init>(android.support.v7.preference.CheckBoxPreference) -> <init>
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void <init>(android.support.v7.preference.CheckBoxPreference,android.support.v7.preference.CheckBoxPreference$Listener) -> <init>
com.android.systemui.statusbar.policy.HeadsUpManager -> com.android.systemui.statusbar.policy.HeadsUpManager:
    com.android.systemui.statusbar.phone.StatusBar mBar -> mBar
    com.android.systemui.statusbar.policy.HeadsUpManager$Clock mClock -> mClock
    android.content.Context mContext -> mContext
    int mDefaultSnoozeLengthMs -> mDefaultSnoozeLengthMs
    java.util.HashSet mEntriesToRemoveAfterExpand -> mEntriesToRemoveAfterExpand
    android.support.v4.util.ArraySet mEntriesToRemoveWhenReorderingAllowed -> mEntriesToRemoveWhenReorderingAllowed
    android.util.Pools$Pool mEntryPool -> mEntryPool
    com.android.systemui.statusbar.phone.NotificationGroupManager mGroupManager -> mGroupManager
    android.os.Handler mHandler -> mHandler
    boolean mHasPinnedNotification -> mHasPinnedNotification
    java.util.HashMap mHeadsUpEntries -> mHeadsUpEntries
    boolean mHeadsUpGoingAway -> mHeadsUpGoingAway
    int mHeadsUpNotificationDecay -> mHeadsUpNotificationDecay
    boolean mIsExpanded -> mIsExpanded
    boolean mIsObserving -> mIsObserving
    java.util.HashSet mListeners -> mListeners
    int mMinimumDisplayTime -> mMinimumDisplayTime
    boolean mReleaseOnExpandFinish -> mReleaseOnExpandFinish
    android.database.ContentObserver mSettingsObserver -> mSettingsObserver
    int mSnoozeLengthMs -> mSnoozeLengthMs
    android.util.ArrayMap mSnoozedPackages -> mSnoozedPackages
    int mStatusBarHeight -> mStatusBarHeight
    int mStatusBarState -> mStatusBarState
    android.view.View mStatusBarWindowView -> mStatusBarWindowView
    java.util.HashSet mSwipedOutKeys -> mSwipedOutKeys
    int[] mTmpTwoArray -> mTmpTwoArray
    int mTouchAcceptanceDelay -> mTouchAcceptanceDelay
    boolean mTrackingHeadsUp -> mTrackingHeadsUp
    int mUser -> mUser
    com.android.systemui.statusbar.notification.VisualStabilityManager mVisualStabilityManager -> mVisualStabilityManager
    boolean mWaitingOnCollapseWhenGoingAway -> mWaitingOnCollapseWhenGoingAway
    int compare(com.android.systemui.statusbar.NotificationData$Entry,com.android.systemui.statusbar.NotificationData$Entry) -> compare
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.phone.NotificationGroupManager) -> <init>
    void addHeadsUpEntry(com.android.systemui.statusbar.NotificationData$Entry) -> addHeadsUpEntry
    void addListener(com.android.systemui.statusbar.policy.OnHeadsUpChangedListener) -> addListener
    void addSwipedOutNotification(java.lang.String) -> addSwipedOutNotification
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.util.Collection getAllEntries() -> getAllEntries
    com.android.systemui.statusbar.NotificationData$Entry getEntry(java.lang.String) -> getEntry
    com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry getHeadsUpEntry(java.lang.String) -> getHeadsUpEntry
    com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry getTopEntry() -> getTopEntry
    int getTopHeadsUpPinnedHeight() -> getTopHeadsUpPinnedHeight
    boolean hasFullScreenIntent(com.android.systemui.statusbar.NotificationData$Entry) -> hasFullScreenIntent
    boolean hasPinnedHeadsUp() -> hasPinnedHeadsUp
    boolean hasPinnedNotificationInternal() -> hasPinnedNotificationInternal
    boolean isClickedHeadsUpNotification(android.view.View) -> isClickedHeadsUpNotification
    boolean isHeadsUp(java.lang.String) -> isHeadsUp
    boolean isSnoozed(java.lang.String) -> isSnoozed
    boolean isTrackingHeadsUp() -> isTrackingHeadsUp
    void onComputeInternalInsets(android.view.ViewTreeObserver$InternalInsetsInfo) -> onComputeInternalInsets
    void onExpandingFinished() -> onExpandingFinished
    void onReorderingAllowed() -> onReorderingAllowed
    void releaseAllImmediately() -> releaseAllImmediately
    void releaseImmediately(java.lang.String) -> releaseImmediately
    void removeAllHeadsUpEntries() -> removeAllHeadsUpEntries
    void removeHeadsUpEntry(com.android.systemui.statusbar.NotificationData$Entry) -> removeHeadsUpEntry
    boolean removeNotification(java.lang.String,boolean) -> removeNotification
    void setBar(com.android.systemui.statusbar.phone.StatusBar) -> setBar
    void setEntryPinned(com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry,boolean) -> setEntryPinned
    void setExpanded(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> setExpanded
    void setHeadsUpGoingAway(boolean) -> setHeadsUpGoingAway
    void setIsClickedNotification(android.view.View,boolean) -> setIsClickedNotification
    void setIsExpanded(boolean) -> setIsExpanded
    void setRemoteInputActive(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> setRemoteInputActive
    void setStatusBarState(int) -> setStatusBarState
    void setTrackingHeadsUp(boolean) -> setTrackingHeadsUp
    void setUser(int) -> setUser
    void setVisualStabilityManager(com.android.systemui.statusbar.notification.VisualStabilityManager) -> setVisualStabilityManager
    boolean shouldHeadsUpBecomePinned(com.android.systemui.statusbar.NotificationData$Entry) -> shouldHeadsUpBecomePinned
    boolean shouldSwallowClick(java.lang.String) -> shouldSwallowClick
    void showNotification(com.android.systemui.statusbar.NotificationData$Entry) -> showNotification
    void snooze() -> snooze
    java.lang.String snoozeKey(java.lang.String,int) -> snoozeKey
    void unpinAll() -> unpinAll
    void updateNotification(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> updateNotification
    void updatePinnedMode() -> updatePinnedMode
    void updateTouchableRegionListener() -> updateTouchableRegionListener
    void waitForStatusBarLayout() -> waitForStatusBarLayout
    boolean wasShownLongEnough(java.lang.String) -> wasShownLongEnough
    com.android.systemui.statusbar.policy.HeadsUpManager$Clock -get0(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get0
    java.util.HashSet -get1(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get1
    android.support.v4.util.ArraySet -get2(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get2
    android.os.Handler -get3(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get3
    int -get4(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get4
    int -get5(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get5
    int -get6(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get6
    int -get7(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get7
    android.view.View -get8(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get8
    int -get9(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get9
    boolean -get10(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get10
    com.android.systemui.statusbar.notification.VisualStabilityManager -get11(com.android.systemui.statusbar.policy.HeadsUpManager) -> -get11
    int -set0(com.android.systemui.statusbar.policy.HeadsUpManager,int) -> -set0
    boolean -set1(com.android.systemui.statusbar.policy.HeadsUpManager,boolean) -> -set1
    boolean -wrap0(com.android.systemui.statusbar.policy.HeadsUpManager,com.android.systemui.statusbar.NotificationData$Entry) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.HeadsUpManager,com.android.systemui.statusbar.NotificationData$Entry) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.policy.HeadsUpManager) -> -wrap2
com.android.systemui.globalactions.GlobalActionsDialog$12 -> com.android.systemui.globalactions.GlobalActionsDialog$12:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,int,int) -> <init>
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.statusbar.policy.LocationControllerImpl -> com.android.systemui.statusbar.policy.LocationControllerImpl:
    android.app.AppOpsManager mAppOpsManager -> mAppOpsManager
    boolean mAreActiveLocationRequests -> mAreActiveLocationRequests
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.LocationControllerImpl$H mHandler -> mHandler
    int[] mHighPowerRequestAppOpArray -> mHighPowerRequestAppOpArray
    java.util.ArrayList mSettingsChangeCallbacks -> mSettingsChangeCallbacks
    android.app.StatusBarManager mStatusBarManager -> mStatusBarManager
    void <init>(android.content.Context,android.os.Looper) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.LocationController$LocationChangeCallback) -> addCallback
    boolean areActiveHighPowerLocationRequests() -> areActiveHighPowerLocationRequests
    boolean isLocationActive() -> isLocationActive
    boolean isLocationEnabled() -> isLocationEnabled
    boolean isUserLocationRestricted(int) -> isUserLocationRestricted
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void removeCallback(com.android.systemui.statusbar.policy.LocationController$LocationChangeCallback) -> removeCallback
    boolean setLocationEnabled(boolean) -> setLocationEnabled
    void updateActiveLocationRequests() -> updateActiveLocationRequests
    void <clinit>() -> <clinit>
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    boolean -get0(com.android.systemui.statusbar.policy.LocationControllerImpl) -> -get0
    java.util.ArrayList -get1(com.android.systemui.statusbar.policy.LocationControllerImpl) -> -get1
com.android.systemui.statusbar.phone.KeyguardBottomAreaView -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView:
    android.content.Intent INSECURE_CAMERA_INTENT -> INSECURE_CAMERA_INTENT
    android.content.Intent PHONE_INTENT -> PHONE_INTENT
    android.content.Intent SECURE_CAMERA_INTENT -> SECURE_CAMERA_INTENT
    com.android.systemui.statusbar.policy.AccessibilityController mAccessibilityController -> mAccessibilityController
    android.view.View$AccessibilityDelegate mAccessibilityDelegate -> mAccessibilityDelegate
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper mAffordanceHelper -> mAffordanceHelper
    com.android.systemui.assist.AssistManager mAssistManager -> mAssistManager
    android.view.View mCameraPreview -> mCameraPreview
    android.content.BroadcastReceiver mDevicePolicyReceiver -> mDevicePolicyReceiver
    boolean mDozing -> mDozing
    com.android.keyguard.EmergencyButton mEmergencyButton -> mEmergencyButton
    android.widget.TextView mEnterpriseDisclosure -> mEnterpriseDisclosure
    com.android.systemui.statusbar.policy.FlashlightController mFlashlightController -> mFlashlightController
    android.view.ViewGroup mIndicationArea -> mIndicationArea
    com.android.systemui.statusbar.KeyguardIndicationController mIndicationController -> mIndicationController
    android.widget.TextView mIndicationText -> mIndicationText
    com.android.systemui.statusbar.KeyguardAffordanceView mLeftAffordanceView -> mLeftAffordanceView
    android.graphics.drawable.Drawable mLeftAssistIcon -> mLeftAssistIcon
    com.android.systemui.plugins.IntentButtonProvider$IntentButton mLeftButton -> mLeftButton
    java.lang.String mLeftButtonStr -> mLeftButtonStr
    com.android.systemui.statusbar.policy.ExtensionController$Extension mLeftExtension -> mLeftExtension
    boolean mLeftIsVoiceAssist -> mLeftIsVoiceAssist
    android.view.View mLeftPreview -> mLeftPreview
    com.android.systemui.statusbar.phone.LockIcon mLockIcon -> mLockIcon
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    com.android.systemui.statusbar.phone.LockscreenGestureLogger mLockscreenGestureLogger -> mLockscreenGestureLogger
    android.view.ViewGroup mOverlayContainer -> mOverlayContainer
    android.view.ViewGroup mPreviewContainer -> mPreviewContainer
    com.android.systemui.statusbar.policy.PreviewInflater mPreviewInflater -> mPreviewInflater
    boolean mPrewarmBound -> mPrewarmBound
    android.content.ServiceConnection mPrewarmConnection -> mPrewarmConnection
    android.os.Messenger mPrewarmMessenger -> mPrewarmMessenger
    com.android.systemui.statusbar.KeyguardAffordanceView mRightAffordanceView -> mRightAffordanceView
    com.android.systemui.plugins.IntentButtonProvider$IntentButton mRightButton -> mRightButton
    java.lang.String mRightButtonStr -> mRightButtonStr
    com.android.systemui.statusbar.policy.ExtensionController$Extension mRightExtension -> mRightExtension
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    com.android.systemui.statusbar.phone.UnlockMethodCache mUnlockMethodCache -> mUnlockMethodCache
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateMonitorCallback -> mUpdateMonitorCallback
    boolean mUserSetupComplete -> mUserSetupComplete
    void setStatusBar(com.android.systemui.statusbar.phone.StatusBar) -> setStatusBar
    void setAffordanceHelper(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper) -> setAffordanceHelper
    void setUserSetupComplete(boolean) -> setUserSetupComplete
    void setKeyguardIndicationController(com.android.systemui.statusbar.KeyguardIndicationController) -> setKeyguardIndicationController
    void onKeyguardShowingChanged() -> onKeyguardShowingChanged
    com.android.systemui.statusbar.phone.LockIcon getLockIcon() -> getLockIcon
    void launchLeftAffordance() -> launchLeftAffordance
    void launchCamera(java.lang.String) -> launchCamera
    void bindCameraPrewarmService() -> bindCameraPrewarmService
    void unbindCameraPrewarmService(boolean) -> unbindCameraPrewarmService
    boolean isLeftVoiceAssist() -> isLeftVoiceAssist
    com.android.systemui.statusbar.KeyguardAffordanceView getRightView() -> getRightView
    com.android.systemui.statusbar.KeyguardAffordanceView getLeftView() -> getLeftView
    android.view.View getRightPreview() -> getRightPreview
    android.view.View getLeftPreview() -> getLeftPreview
    void setDozing(boolean,boolean) -> setDozing
    android.content.pm.ResolveInfo resolveCameraIntent() -> resolveCameraIntent
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    boolean canLaunchVoiceAssist() -> canLaunchVoiceAssist
    android.content.Intent getCameraIntent() -> getCameraIntent
    android.view.View getIndicationArea() -> getIndicationArea
    void handleTrustCircleClick() -> handleTrustCircleClick
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void inflateCameraPreview() -> inflateCameraPreview
    void initAccessibility() -> initAccessibility
    boolean isPhoneVisible() -> isPhoneVisible
    boolean isSuccessfulLaunch(int) -> isSuccessfulLaunch
    void launchPhone() -> launchPhone
    void launchVoiceAssist() -> launchVoiceAssist
    void onAttachedToWindow() -> onAttachedToWindow
    void onClick(android.view.View) -> onClick
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    boolean onLongClick(android.view.View) -> onLongClick
    void onStateChanged(boolean,boolean) -> onStateChanged
    void onUnlockMethodStateChanged() -> onUnlockMethodStateChanged
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void setLeftButton(com.android.systemui.plugins.IntentButtonProvider$IntentButton) -> setLeftButton
    void setRightButton(com.android.systemui.plugins.IntentButtonProvider$IntentButton) -> setRightButton
    void startFinishDozeAnimation() -> startFinishDozeAnimation
    void startFinishDozeAnimationElement(android.view.View,long) -> startFinishDozeAnimationElement
    void updateCameraVisibility() -> updateCameraVisibility
    void updateEmergencyButton() -> updateEmergencyButton
    void updateLeftAffordance() -> updateLeftAffordance
    void updateLeftAffordanceIcon() -> updateLeftAffordanceIcon
    void updateLeftPreview() -> updateLeftPreview
    void updateRightAffordanceIcon() -> updateRightAffordanceIcon
    void <clinit>() -> <clinit>
    com.android.systemui.plugins.IntentButtonProvider$IntentButton lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12125(com.android.systemui.plugins.IntentButtonProvider) -> lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12125
    com.android.systemui.plugins.IntentButtonProvider$IntentButton lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12272() -> lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12272
    void lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12334(com.android.systemui.plugins.IntentButtonProvider$IntentButton) -> lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12334
    com.android.systemui.plugins.IntentButtonProvider$IntentButton lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12594(com.android.systemui.plugins.IntentButtonProvider) -> lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12594
    com.android.systemui.plugins.IntentButtonProvider$IntentButton lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12740() -> lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12740
    void lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12801(com.android.systemui.plugins.IntentButtonProvider$IntentButton) -> lambda$-com_android_systemui_statusbar_phone_KeyguardBottomAreaView_12801
    android.content.Intent -get0() -> -get0
    android.content.Intent -get1() -> -get1
    com.android.systemui.assist.AssistManager -get2(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get2
    android.content.Context -get3(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get3
    com.android.systemui.statusbar.KeyguardAffordanceView -get4(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get4
    android.graphics.drawable.Drawable -get5(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get5
    boolean -get6(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get6
    com.android.systemui.statusbar.phone.LockIcon -get7(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get7
    com.android.internal.widget.LockPatternUtils -get8(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get8
    com.android.systemui.statusbar.KeyguardAffordanceView -get9(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get9
    com.android.systemui.statusbar.phone.StatusBar -get10(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get10
    boolean -get11(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -get11
    boolean -set0(com.android.systemui.statusbar.phone.KeyguardBottomAreaView,boolean) -> -set0
    android.os.Messenger -set1(com.android.systemui.statusbar.phone.KeyguardBottomAreaView,android.os.Messenger) -> -set1
    boolean -wrap0(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -wrap0
    boolean -wrap1(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -wrap1
    boolean -wrap2(int) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> -wrap4
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    android.support.v4.media.MediaBrowserCompat$SearchCallback mCallback -> mCallback
    android.os.Bundle mExtras -> mExtras
    java.lang.String mQuery -> mQuery
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v7.app.AppCompatDelegateImplV9$5$1 -> android.support.v7.app.AppCompatDelegateImplV9$5$1:
    android.support.v7.app.AppCompatDelegateImplV9$5 this$1 -> this$1
    void <init>(android.support.v7.app.AppCompatDelegateImplV9$5) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.android.systemui.statusbar.policy.-$Lambda$-PuyOOt5zrsykhKRVBNpfo3-NHU -> com.android.systemui.statusbar.policy.-$Lambda$-PuyOOt5zrsykhKRVBNpfo3-NHU:
    byte $id -> $id
    com.android.systemui.statusbar.policy.-$Lambda$-PuyOOt5zrsykhKRVBNpfo3-NHU $INST$0 -> $INST$0
    com.android.systemui.statusbar.policy.-$Lambda$-PuyOOt5zrsykhKRVBNpfo3-NHU $INST$1 -> $INST$1
    com.android.systemui.statusbar.policy.-$Lambda$-PuyOOt5zrsykhKRVBNpfo3-NHU $INST$2 -> $INST$2
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void $m$2(java.lang.Object) -> $m$2
    void accept(java.lang.Object) -> accept
com.android.systemui.statusbar.policy.SplitClockView$1 -> com.android.systemui.statusbar.policy.SplitClockView$1:
    com.android.systemui.statusbar.policy.SplitClockView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.SplitClockView) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v17.leanback.R$color -> android.support.v17.leanback.R$color:
    int lb_default_search_color -> lb_default_search_color
    int lb_page_indicator_arrow_background -> lb_page_indicator_arrow_background
    int lb_page_indicator_arrow_shadow -> lb_page_indicator_arrow_shadow
    int lb_page_indicator_dot -> lb_page_indicator_dot
    int lb_playback_media_row_highlight_color -> lb_playback_media_row_highlight_color
    int lb_search_bar_hint -> lb_search_bar_hint
    int lb_search_bar_hint_speech_mode -> lb_search_bar_hint_speech_mode
    int lb_search_bar_text -> lb_search_bar_text
    int lb_search_bar_text_speech_mode -> lb_search_bar_text_speech_mode
    int lb_speech_orb_not_recording -> lb_speech_orb_not_recording
    int lb_speech_orb_not_recording_icon -> lb_speech_orb_not_recording_icon
    int lb_speech_orb_not_recording_pulsed -> lb_speech_orb_not_recording_pulsed
    int lb_speech_orb_recording -> lb_speech_orb_recording
    void <init>() -> <init>
com.android.systemui.qs.tiles.WifiTile$WifiSignalCallback -> com.android.systemui.qs.tiles.WifiTile$WifiSignalCallback:
    com.android.systemui.qs.tiles.WifiTile$CallbackInfo mInfo -> mInfo
    com.android.systemui.qs.tiles.WifiTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.WifiTile) -> <init>
    void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,boolean,boolean,java.lang.String,boolean) -> setWifiIndicators
com.android.systemui.screenshot.GlobalScreenshot$2$1 -> com.android.systemui.screenshot.GlobalScreenshot$2$1:
    com.android.systemui.screenshot.GlobalScreenshot$2 this$1 -> this$1
    java.lang.Runnable val$finisher -> val$finisher
    boolean val$statusBarVisible -> val$statusBarVisible
    boolean val$navBarVisible -> val$navBarVisible
    android.graphics.Rect val$rect -> val$rect
    void <init>(com.android.systemui.screenshot.GlobalScreenshot$2,java.lang.Runnable,boolean,boolean,android.graphics.Rect) -> <init>
    void run() -> run
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void <init>(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> <init>
    void onAdjustVolume(int) -> onAdjustVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
com.android.systemui.pip.tv.PipNotification$3 -> com.android.systemui.pip.tv.PipNotification$3:
    com.android.systemui.pip.tv.PipNotification this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipNotification) -> <init>
    void onMediaControllerChanged() -> onMediaControllerChanged
android.support.v7.widget.AdapterHelper$Callback -> android.support.v7.widget.AdapterHelper$Callback:
    void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
    void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
com.android.systemui.statusbar.policy.CastControllerImpl$1 -> com.android.systemui.statusbar.policy.CastControllerImpl$1:
    com.android.systemui.statusbar.policy.CastControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.CastControllerImpl) -> <init>
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    void play() -> play
    void pause() -> pause
    void <init>() -> <init>
    void stop() -> stop
android.support.v17.leanback.widget.OnChildViewHolderSelectedListener -> android.support.v17.leanback.widget.OnChildViewHolderSelectedListener:
    void onChildViewHolderSelectedAndPositioned(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,int) -> onChildViewHolderSelectedAndPositioned
    void <init>() -> <init>
    void onChildViewHolderSelected(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,int) -> onChildViewHolderSelected
com.android.systemui.recents.Recents$1 -> com.android.systemui.recents.Recents$1:
    com.android.systemui.recents.Recents this$0 -> this$0
    void <init>(com.android.systemui.recents.Recents) -> <init>
    void binderDied() -> binderDied
android.support.v7.widget.DefaultItemAnimator$ChangeInfo -> android.support.v7.widget.DefaultItemAnimator$ChangeInfo:
    int fromY -> fromY
    int fromX -> fromX
    android.support.v7.widget.RecyclerView$ViewHolder newHolder -> newHolder
    android.support.v7.widget.RecyclerView$ViewHolder oldHolder -> oldHolder
    int toY -> toY
    int toX -> toX
    java.lang.String toString() -> toString
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> <init>
com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo -> com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo:
    com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.settings.ToggleSlider -> com.android.systemui.settings.ToggleSlider:
    void setMax(int) -> setMax
    void setValue(int) -> setValue
    void setChecked(boolean) -> setChecked
    void setOnChangedListener(com.android.systemui.settings.ToggleSlider$Listener) -> setOnChangedListener
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
com.android.keyguard.KeyguardSimPukView$StateMachine -> com.android.keyguard.KeyguardSimPukView$StateMachine:
    int CONFIRM_PIN -> CONFIRM_PIN
    int DONE -> DONE
    int ENTER_PIN -> ENTER_PIN
    int ENTER_PUK -> ENTER_PUK
    int state -> state
    com.android.keyguard.KeyguardSimPukView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSimPukView) -> <init>
    void next() -> next
    void reset() -> reset
    void <init>(com.android.keyguard.KeyguardSimPukView,com.android.keyguard.KeyguardSimPukView$StateMachine) -> <init>
com.android.settingslib.bluetooth.PbapServerProfile$PbapServiceListener -> com.android.settingslib.bluetooth.PbapServerProfile$PbapServiceListener:
    com.android.settingslib.bluetooth.PbapServerProfile this$0 -> this$0
    void onServiceDisconnected() -> onServiceDisconnected
    void <init>(com.android.settingslib.bluetooth.PbapServerProfile,com.android.settingslib.bluetooth.PbapServerProfile$PbapServiceListener) -> <init>
    void onServiceConnected(android.bluetooth.BluetoothPbap) -> onServiceConnected
    void <init>(com.android.settingslib.bluetooth.PbapServerProfile) -> <init>
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.view.animation.FastOutSlowInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    float getInterpolation(float) -> getInterpolation
android.support.v7.preference.SwitchPreferenceCompat -> android.support.v7.preference.SwitchPreferenceCompat:
    android.support.v7.preference.SwitchPreferenceCompat$Listener mListener -> mListener
    java.lang.CharSequence mSwitchOn -> mSwitchOn
    java.lang.CharSequence mSwitchOff -> mSwitchOff
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void performClick(android.view.View) -> performClick
    void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    void syncSwitchView(android.view.View) -> syncSwitchView
com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin -> com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem getLongpressMenuItem(android.content.Context) -> getLongpressMenuItem
    boolean onTouchEvent(android.view.View,android.view.MotionEvent,float) -> onTouchEvent
    boolean isMenuVisible() -> isMenuVisible
    void onNotificationUpdated(android.service.notification.StatusBarNotification) -> onNotificationUpdated
    void createMenu(android.view.ViewGroup,android.service.notification.StatusBarNotification) -> createMenu
    boolean useDefaultMenuItems() -> useDefaultMenuItems
    boolean onInterceptTouchEvent(android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    android.view.View getMenuView() -> getMenuView
    void onHeightUpdate() -> onHeightUpdate
    java.util.ArrayList getMenuItems(android.content.Context) -> getMenuItems
    void onTranslationUpdate(float) -> onTranslationUpdate
    void setAppName(java.lang.String) -> setAppName
    void setSwipeActionHelper(com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper) -> setSwipeActionHelper
    void setMenuClickListener(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener) -> setMenuClickListener
    void onConfigurationChanged() -> onConfigurationChanged
    void resetMenu() -> resetMenu
    void setMenuItems(java.util.ArrayList) -> setMenuItems
android.support.v7.appcompat.R$style -> android.support.v7.appcompat.R$style:
    int Animation_AppCompat_Tooltip -> Animation_AppCompat_Tooltip
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    void <init>() -> <init>
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$6 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$6:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Runnable) -> $m$0
    void checkSave(java.lang.Runnable) -> checkSave
com.android.systemui.statusbar.policy.BatteryControllerImpl$1 -> com.android.systemui.statusbar.policy.BatteryControllerImpl$1:
    int curLevel -> curLevel
    android.content.Intent dummy -> dummy
    int incr -> incr
    int saveLevel -> saveLevel
    boolean savePlugged -> savePlugged
    com.android.systemui.statusbar.policy.BatteryControllerImpl this$0 -> this$0
    android.content.Context val$context -> val$context
    void <init>(com.android.systemui.statusbar.policy.BatteryControllerImpl,android.content.Context) -> <init>
    void run() -> run
android.support.v17.leanback.widget.StaggeredGrid -> android.support.v17.leanback.widget.StaggeredGrid:
    android.support.v4.util.CircularArray mLocations -> mLocations
    int mFirstIndex -> mFirstIndex
    int mPendingItemSize -> mPendingItemSize
    java.lang.Object mPendingItem -> mPendingItem
    boolean appendVisibleItemsWithoutCache(int,boolean) -> appendVisibleItemsWithoutCache
    void invalidateItemsAfter(int) -> invalidateItemsAfter
    android.support.v17.leanback.widget.StaggeredGrid$Location getLocation(int) -> getLocation
    int getFirstIndex() -> getFirstIndex
    boolean appendVisibleItems(int,boolean) -> appendVisibleItems
    boolean prependVisibleItems(int,boolean) -> prependVisibleItems
    boolean appendVisbleItemsWithCache(int,boolean) -> appendVisbleItemsWithCache
    int prependVisibleItemToRow(int,int,int) -> prependVisibleItemToRow
    boolean prependVisibleItemsWithoutCache(int,boolean) -> prependVisibleItemsWithoutCache
    int calculateOffsetAfterLastItem(int) -> calculateOffsetAfterLastItem
    android.support.v17.leanback.widget.Grid$Location getLocation(int) -> getLocation
    int getLastIndex() -> getLastIndex
    void <init>() -> <init>
    int appendVisibleItemToRow(int,int,int) -> appendVisibleItemToRow
    android.support.v4.util.CircularIntArray[] getItemPositionsInRows(int,int) -> getItemPositionsInRows
    boolean prependVisbleItemsWithCache(int,boolean) -> prependVisbleItemsWithCache
android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback:
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void onContentScrollStarted() -> onContentScrollStarted
    void showForSystem() -> showForSystem
    void hideForSystem() -> hideForSystem
    void onContentScrollStopped() -> onContentScrollStopped
    void enableContentAnimations(boolean) -> enableContentAnimations
android.support.v7.view.menu.MenuPopupHelper -> android.support.v7.view.menu.MenuPopupHelper:
    android.view.View mAnchorView -> mAnchorView
    android.content.Context mContext -> mContext
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mOverflowOnly -> mOverflowOnly
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    int mPopupStyleAttr -> mPopupStyleAttr
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> mInternalOnDismissListener
    boolean mForceShowIcon -> mForceShowIcon
    int mDropDownGravity -> mDropDownGravity
    android.support.v7.view.menu.MenuPopup mPopup -> mPopup
    int mPopupStyleRes -> mPopupStyleRes
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    android.support.v7.view.menu.MenuPopup getPopup() -> getPopup
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    void onDismiss() -> onDismiss
    void setForceShowIcon(boolean) -> setForceShowIcon
    void showPopup(int,int,boolean,boolean) -> showPopup
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    void dismiss() -> dismiss
    void show() -> show
    boolean tryShow(int,int) -> tryShow
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setGravity(int) -> setGravity
    void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    boolean isShowing() -> isShowing
    android.support.v7.view.menu.MenuPopup createPopup() -> createPopup
    void setAnchorView(android.view.View) -> setAnchorView
    boolean tryShow() -> tryShow
android.support.v4.app.FragmentTransitionImpl -> android.support.v4.app.FragmentTransitionImpl:
    void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    void addTarget(java.lang.Object,android.view.View) -> addTarget
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    void <init>() -> <init>
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    boolean canHandle(java.lang.Object) -> canHandle
    java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
com.android.systemui.util.wakelock.WakeLock$1 -> com.android.systemui.util.wakelock.WakeLock$1:
    android.os.PowerManager$WakeLock val$inner -> val$inner
    void <init>(android.os.PowerManager$WakeLock) -> <init>
    void acquire() -> acquire
    void release() -> release
    java.lang.Runnable wrap(java.lang.Runnable) -> wrap
android.support.v17.leanback.widget.PersistentFocusWrapper$SavedState$1 -> android.support.v17.leanback.widget.PersistentFocusWrapper$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v17.leanback.widget.PersistentFocusWrapper$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v17.leanback.widget.PersistentFocusWrapper$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
com.android.systemui.qs.external.TileServices$1 -> com.android.systemui.qs.external.TileServices$1:
    com.android.systemui.qs.external.TileServices this$0 -> this$0
    void <init>(com.android.systemui.qs.external.TileServices) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.keyguard.EmergencyButton$2 -> com.android.keyguard.EmergencyButton$2:
    com.android.keyguard.EmergencyButton this$0 -> this$0
    void <init>(com.android.keyguard.EmergencyButton) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    java.util.HashSet mRegisteredCallbacks -> mRegisteredCallbacks
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
com.android.systemui.qs.tiles.-$Lambda$R0Voob-DbB4df7C0az5f8PlI3sw -> com.android.systemui.qs.tiles.-$Lambda$R0Voob-DbB4df7C0az5f8PlI3sw:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void $m$4() -> $m$4
    void $m$5() -> $m$5
    void run() -> run
android.support.v7.media.MediaRouteSelector$Builder -> android.support.v7.media.MediaRouteSelector$Builder:
    java.util.ArrayList mControlCategories -> mControlCategories
    android.support.v7.media.MediaRouteSelector$Builder addControlCategory(java.lang.String) -> addControlCategory
    android.support.v7.media.MediaRouteSelector build() -> build
    void <init>() -> <init>
    void <init>(android.support.v7.media.MediaRouteSelector) -> <init>
    android.support.v7.media.MediaRouteSelector$Builder addControlCategories(java.util.Collection) -> addControlCategories
    android.support.v7.media.MediaRouteSelector$Builder addSelector(android.support.v7.media.MediaRouteSelector) -> addSelector
com.android.systemui.keyguard.KeyguardViewMediator$4 -> com.android.systemui.keyguard.KeyguardViewMediator$4:
    com.android.systemui.keyguard.KeyguardViewMediator this$0 -> this$0
    void <init>(com.android.systemui.keyguard.KeyguardViewMediator,android.os.Looper,android.os.Handler$Callback,boolean) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v7.widget.AbsActionBarView$VisibilityAnimListener -> android.support.v7.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    android.support.v7.widget.AbsActionBarView this$0 -> this$0
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    android.support.v7.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
    void onAnimationStart(android.view.View) -> onAnimationStart
    void <init>(android.support.v7.widget.AbsActionBarView) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.android.systemui.recents.views.TaskViewHeader -> com.android.systemui.recents.views.TaskViewHeader:
    android.widget.ImageView mAppIconView -> mAppIconView
    android.widget.ImageView mAppInfoView -> mAppInfoView
    android.widget.FrameLayout mAppOverlayView -> mAppOverlayView
    android.widget.TextView mAppTitleView -> mAppTitleView
    com.android.systemui.recents.views.TaskViewHeader$HighlightColorDrawable mBackground -> mBackground
    int mCornerRadius -> mCornerRadius
    android.graphics.drawable.Drawable mDarkDismissDrawable -> mDarkDismissDrawable
    android.graphics.drawable.Drawable mDarkFreeformIcon -> mDarkFreeformIcon
    android.graphics.drawable.Drawable mDarkFullscreenIcon -> mDarkFullscreenIcon
    android.graphics.drawable.Drawable mDarkInfoIcon -> mDarkInfoIcon
    float mDimAlpha -> mDimAlpha
    android.graphics.Paint mDimLayerPaint -> mDimLayerPaint
    int mDisabledTaskBarBackgroundColor -> mDisabledTaskBarBackgroundColor
    android.widget.ImageView mDismissButton -> mDismissButton
    android.os.CountDownTimer mFocusTimerCountDown -> mFocusTimerCountDown
    android.widget.ProgressBar mFocusTimerIndicator -> mFocusTimerIndicator
    int mHeaderBarHeight -> mHeaderBarHeight
    int mHeaderButtonPadding -> mHeaderButtonPadding
    int mHighlightHeight -> mHighlightHeight
    android.widget.ImageView mIconView -> mIconView
    android.graphics.drawable.Drawable mLightDismissDrawable -> mLightDismissDrawable
    android.graphics.drawable.Drawable mLightFreeformIcon -> mLightFreeformIcon
    android.graphics.drawable.Drawable mLightFullscreenIcon -> mLightFullscreenIcon
    android.graphics.drawable.Drawable mLightInfoIcon -> mLightInfoIcon
    android.widget.ImageView mMoveTaskButton -> mMoveTaskButton
    int mMoveTaskTargetStackId -> mMoveTaskTargetStackId
    com.android.systemui.recents.views.TaskViewHeader$HighlightColorDrawable mOverlayBackground -> mOverlayBackground
    boolean mShouldDarkenBackgroundColor -> mShouldDarkenBackgroundColor
    com.android.systemui.recents.model.Task mTask -> mTask
    int mTaskBarViewDarkTextColor -> mTaskBarViewDarkTextColor
    int mTaskBarViewLightTextColor -> mTaskBarViewLightTextColor
    android.graphics.Rect mTaskViewRect -> mTaskViewRect
    android.widget.TextView mTitleView -> mTitleView
    float[] mTmpHSL -> mTmpHSL
    void setShouldDarkenBackgroundColor(boolean) -> setShouldDarkenBackgroundColor
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void bindToTask(com.android.systemui.recents.model.Task,boolean,boolean) -> bindToTask
    void cancelFocusTimerIndicator() -> cancelFocusTimerIndicator
    android.widget.ImageView getIconView() -> getIconView
    int getSecondaryColor(int,boolean) -> getSecondaryColor
    void hideAppOverlay(boolean) -> hideAppOverlay
    void onClick(android.view.View) -> onClick
    void onConfigurationChanged() -> onConfigurationChanged
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void onDrawForeground(android.graphics.Canvas) -> onDrawForeground
    void onFinishInflate() -> onFinishInflate
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onLongClick(android.view.View) -> onLongClick
    void onTaskDataLoaded() -> onTaskDataLoaded
    void onTaskViewSizeChanged(int,int) -> onTaskViewSizeChanged
    void reset() -> reset
    void resetNoUserInteractionState() -> resetNoUserInteractionState
    void setDimAlpha(float) -> setDimAlpha
    void setNoUserInteractionState() -> setNoUserInteractionState
    void showAppOverlay() -> showAppOverlay
    void startFocusTimerIndicator(int) -> startFocusTimerIndicator
    void startNoUserInteractionAnimation() -> startNoUserInteractionAnimation
    void unbindFromTask(boolean) -> unbindFromTask
    void updateBackgroundColor(int,float) -> updateBackgroundColor
    void updateLayoutParams(android.view.View,android.view.View,android.view.View,android.view.View) -> updateLayoutParams
    boolean -get0(com.android.systemui.recents.views.TaskViewHeader) -> -get0
    float[] -get1(com.android.systemui.recents.views.TaskViewHeader) -> -get1
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void <init>() -> <init>
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
com.android.systemui.stackdivider.Divider$DockDividerVisibilityListener -> com.android.systemui.stackdivider.Divider$DockDividerVisibilityListener:
    com.android.systemui.stackdivider.Divider this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.Divider) -> <init>
    void onAdjustedForImeChanged(boolean,long) -> onAdjustedForImeChanged
    void onDividerVisibilityChanged(boolean) -> onDividerVisibilityChanged
    void onDockSideChanged(int) -> onDockSideChanged
    void onDockedStackExistsChanged(boolean) -> onDockedStackExistsChanged
    void onDockedStackMinimizedChanged(boolean,long,boolean) -> onDockedStackMinimizedChanged
    void lambda$-com_android_systemui_stackdivider_Divider$DockDividerVisibilityListener_7455(boolean,long) -> lambda$-com_android_systemui_stackdivider_Divider$DockDividerVisibilityListener_7455
    void lambda$-com_android_systemui_stackdivider_Divider$DockDividerVisibilityListener_8105(int) -> lambda$-com_android_systemui_stackdivider_Divider$DockDividerVisibilityListener_8105
com.android.systemui.usb.StorageNotification$3 -> com.android.systemui.usb.StorageNotification$3:
    com.android.systemui.usb.StorageNotification this$0 -> this$0
    void <init>(com.android.systemui.usb.StorageNotification) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.phone.StatusBar$11 -> com.android.systemui.statusbar.phone.StatusBar$11:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.phone.-$Lambda$T7g2SiyymZCZdfMR075uHCviYmE$1 -> com.android.systemui.statusbar.phone.-$Lambda$T7g2SiyymZCZdfMR075uHCviYmE$1:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    boolean $m$0(android.view.View,android.view.MotionEvent) -> $m$0
    boolean $m$1(android.view.View,android.view.MotionEvent) -> $m$1
    boolean $m$2(android.view.View,android.view.MotionEvent) -> $m$2
    boolean $m$3(android.view.View,android.view.MotionEvent) -> $m$3
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.stackdivider.WindowManagerProxy$1 -> com.android.systemui.stackdivider.WindowManagerProxy$1:
    com.android.systemui.stackdivider.WindowManagerProxy this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.WindowManagerProxy) -> <init>
    void run() -> run
com.android.systemui.plugins.ActivityStarter$Callback -> com.android.systemui.plugins.ActivityStarter$Callback:
    void onActivityStarted(int) -> onActivityStarted
com.android.systemui.statusbar.policy.NetworkControllerImpl$SubscriptionDefaults -> com.android.systemui.statusbar.policy.NetworkControllerImpl$SubscriptionDefaults:
    void <init>() -> <init>
    int getDefaultDataSubId() -> getDefaultDataSubId
    int getDefaultVoiceSubId() -> getDefaultVoiceSubId
android.support.annotation.AnyRes -> android.support.annotation.AnyRes:
com.android.systemui.ResizingSpace -> com.android.systemui.ResizingSpace:
    int mHeight -> mHeight
    int mWidth -> mWidth
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> getDefaultSize2
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onMeasure(int,int) -> onMeasure
com.android.systemui.statusbar.policy.NetworkControllerImpl$3 -> com.android.systemui.statusbar.policy.NetworkControllerImpl$3:
    com.android.systemui.statusbar.policy.NetworkControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl,android.content.Context) -> <init>
    void onUserSwitched(int) -> onUserSwitched
com.android.systemui.qs.car.-$Lambda$PJuwMVrpZEqa7QDEs4dfDCdYkDI$1 -> com.android.systemui.qs.car.-$Lambda$PJuwMVrpZEqa7QDEs4dfDCdYkDI$1:
    com.android.systemui.qs.car.-$Lambda$PJuwMVrpZEqa7QDEs4dfDCdYkDI$1 $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.RecyclerView$AdapterDataObservable -> android.support.v7.widget.RecyclerView$AdapterDataObservable:
    void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    boolean hasObservers() -> hasObservers
    void notifyItemMoved(int,int) -> notifyItemMoved
    void notifyChanged() -> notifyChanged
    void <init>() -> <init>
    void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
android.support.v7.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> android.support.v7.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> mRecyclerViewDelegate
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void <init>(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v7.view.menu.MenuItemWrapperICS -> android.support.v7.view.menu.MenuItemWrapperICS:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> mSetExclusiveCheckableMethod
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setActionView(int) -> setActionView
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    java.lang.CharSequence getTooltipText() -> getTooltipText
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    void setShowAsAction(int) -> setShowAsAction
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    boolean isVisible() -> isVisible
    int getGroupId() -> getGroupId
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    boolean collapseActionView() -> collapseActionView
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.View getActionView() -> getActionView
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    int getItemId() -> getItemId
    boolean isEnabled() -> isEnabled
    boolean isChecked() -> isChecked
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    boolean expandActionView() -> expandActionView
    java.lang.CharSequence getContentDescription() -> getContentDescription
    android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean hasSubMenu() -> hasSubMenu
    int getOrder() -> getOrder
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    int getNumericModifiers() -> getNumericModifiers
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    android.support.v4.app.FragmentManagerNonConfig fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
    java.lang.Object custom -> custom
    void <init>() -> <init>
com.android.systemui.statusbar.CrossFadeHelper -> com.android.systemui.statusbar.CrossFadeHelper:
    void fadeOut(android.view.View,java.lang.Runnable) -> fadeOut
    void fadeOut(android.view.View,float) -> fadeOut
    void fadeIn(android.view.View,float) -> fadeIn
    void fadeIn(android.view.View,float,boolean) -> fadeIn
    void fadeOut(android.view.View,float,boolean) -> fadeOut
    void fadeIn(android.view.View) -> fadeIn
    void <init>() -> <init>
    float mapToFadeDuration(float) -> mapToFadeDuration
    void updateLayerType(android.view.View,float) -> updateLayerType
com.android.systemui.doze.DozeUi$1 -> com.android.systemui.doze.DozeUi$1:
    com.android.systemui.doze.DozeUi this$0 -> this$0
    void <init>(com.android.systemui.doze.DozeUi) -> <init>
    void onPulseFinished() -> onPulseFinished
    void onPulseStarted() -> onPulseStarted
com.android.systemui.statusbar.policy.AccessibilityContentDescriptions -> com.android.systemui.statusbar.policy.AccessibilityContentDescriptions:
    int[] DATA_CONNECTION_STRENGTH -> DATA_CONNECTION_STRENGTH
    int[] ETHERNET_CONNECTION_VALUES -> ETHERNET_CONNECTION_VALUES
    int[] PHONE_SIGNAL_STRENGTH -> PHONE_SIGNAL_STRENGTH
    int[] WIFI_CONNECTION_STRENGTH -> WIFI_CONNECTION_STRENGTH
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.keyguard.PasswordTextView -> com.android.keyguard.PasswordTextView:
    android.view.animation.Interpolator mAppearInterpolator -> mAppearInterpolator
    int mCharPadding -> mCharPadding
    java.util.Stack mCharPool -> mCharPool
    android.view.animation.Interpolator mDisappearInterpolator -> mDisappearInterpolator
    int mDotSize -> mDotSize
    android.graphics.Paint mDrawPaint -> mDrawPaint
    android.view.animation.Interpolator mFastOutSlowInInterpolator -> mFastOutSlowInInterpolator
    int mGravity -> mGravity
    android.os.PowerManager mPM -> mPM
    boolean mShowPassword -> mShowPassword
    java.lang.String mText -> mText
    java.util.ArrayList mTextChars -> mTextChars
    int mTextHeightRaw -> mTextHeightRaw
    com.android.keyguard.PasswordTextView$UserActivityListener mUserActivityListener -> mUserActivityListener
    void append(char) -> append
    java.lang.String getText() -> getText
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void deleteLastChar() -> deleteLastChar
    android.graphics.Rect getCharBounds() -> getCharBounds
    float getDrawingWidth() -> getDrawingWidth
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    com.android.keyguard.PasswordTextView$CharState obtainCharState(char) -> obtainCharState
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void reset(boolean,boolean) -> reset
    void sendAccessibilityEventTypeViewTextChanged(java.lang.String,int,int,int) -> sendAccessibilityEventTypeViewTextChanged
    void setUserActivityListener(com.android.keyguard.PasswordTextView$UserActivityListener) -> setUserActivityListener
    void userActivity() -> userActivity
    android.view.animation.Interpolator -get0(com.android.keyguard.PasswordTextView) -> -get0
    int -get1(com.android.keyguard.PasswordTextView) -> -get1
    java.util.Stack -get2(com.android.keyguard.PasswordTextView) -> -get2
    android.view.animation.Interpolator -get3(com.android.keyguard.PasswordTextView) -> -get3
    int -get4(com.android.keyguard.PasswordTextView) -> -get4
    android.graphics.Paint -get5(com.android.keyguard.PasswordTextView) -> -get5
    boolean -get6(com.android.keyguard.PasswordTextView) -> -get6
    java.util.ArrayList -get7(com.android.keyguard.PasswordTextView) -> -get7
com.android.systemui.doze.-$Lambda$EDkgq9hVYnTMaUlsvmU4HsSWaRQ -> com.android.systemui.doze.-$Lambda$EDkgq9hVYnTMaUlsvmU4HsSWaRQ:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
com.android.systemui.colorextraction.-$Lambda$j2m7lOWVNe22BvvVwNuW1ftTq4c -> com.android.systemui.colorextraction.-$Lambda$j2m7lOWVNe22BvvVwNuW1ftTq4c:
    boolean -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(boolean,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.arch.lifecycle.ReportFragment$ActivityInitializationListener -> android.arch.lifecycle.ReportFragment$ActivityInitializationListener:
    void onStart() -> onStart
    void onCreate() -> onCreate
    void onResume() -> onResume
android.support.v7.widget.ActionBarBackgroundDrawableV21 -> android.support.v7.widget.ActionBarBackgroundDrawableV21:
    void <init>(android.support.v7.widget.ActionBarContainer) -> <init>
    void getOutline(android.graphics.Outline) -> getOutline
android.support.v7.widget.ViewUtils -> android.support.v7.widget.ViewUtils:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> sComputeFitSystemWindowsMethod
    void <clinit>() -> <clinit>
    void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
    void <init>() -> <init>
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    boolean isLayoutRtl(android.view.View) -> isLayoutRtl
com.android.systemui.classifier.AnglesPercentageEvaluator -> com.android.systemui.classifier.AnglesPercentageEvaluator:
    void <init>() -> <init>
    float evaluate(float) -> evaluate
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.settingslib.drawer.TileUtils$2 -> com.android.settingslib.drawer.TileUtils$2:
    int compare(com.android.settingslib.drawer.DashboardCategory,com.android.settingslib.drawer.DashboardCategory) -> compare
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v7.media.MediaRouteSelector -> android.support.v7.media.MediaRouteSelector:
    android.os.Bundle mBundle -> mBundle
    android.support.v7.media.MediaRouteSelector EMPTY -> EMPTY
    java.util.List mControlCategories -> mControlCategories
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <init>(android.os.Bundle,java.util.List) -> <init>
    boolean contains(android.support.v7.media.MediaRouteSelector) -> contains
    android.os.Bundle asBundle() -> asBundle
    android.support.v7.media.MediaRouteSelector fromBundle(android.os.Bundle) -> fromBundle
    boolean isEmpty() -> isEmpty
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    java.util.List getControlCategories() -> getControlCategories
    void ensureControlCategories() -> ensureControlCategories
    boolean matchesControlFilters(java.util.List) -> matchesControlFilters
com.android.systemui.statusbar.phone.PanelView$6 -> com.android.systemui.statusbar.phone.PanelView$6:
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PanelView) -> <init>
    void run() -> run
com.android.systemui.recents.model.HighResThumbnailLoader$1 -> com.android.systemui.recents.model.HighResThumbnailLoader$1:
    com.android.systemui.recents.model.HighResThumbnailLoader this$0 -> this$0
    void <init>(com.android.systemui.recents.model.HighResThumbnailLoader) -> <init>
    void loadTask(com.android.systemui.recents.model.Task) -> loadTask
    void run() -> run
    void lambda$-com_android_systemui_recents_model_HighResThumbnailLoader$1_7094(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.ThumbnailData) -> lambda$-com_android_systemui_recents_model_HighResThumbnailLoader$1_7094
com.android.systemui.DessertCase$1 -> com.android.systemui.DessertCase$1:
    com.android.systemui.DessertCase this$0 -> this$0
    void <init>(com.android.systemui.DessertCase) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.-$Lambda$5Q5wqWNihXVaQ93Ryhul3XY_Ets -> com.android.systemui.statusbar.phone.-$Lambda$5Q5wqWNihXVaQ93Ryhul3XY_Ets:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void $m$4() -> $m$4
    void $m$5() -> $m$5
    void $m$6() -> $m$6
    void $m$7() -> $m$7
    void $m$8() -> $m$8
    void $m$9() -> $m$9
    void $m$10() -> $m$10
    void $m$11() -> $m$11
    void $m$12() -> $m$12
    void $m$13() -> $m$13
    void $m$14() -> $m$14
    void $m$15() -> $m$15
    void $m$16() -> $m$16
    void $m$17() -> $m$17
    void $m$18() -> $m$18
    void $m$19() -> $m$19
    void $m$20() -> $m$20
    void $m$21() -> $m$21
    void $m$22() -> $m$22
    void $m$23() -> $m$23
    void $m$24() -> $m$24
    void $m$25() -> $m$25
    void run() -> run
com.android.systemui.statusbar.policy.DateView -> com.android.systemui.statusbar.policy.DateView:
    java.util.Date mCurrentTime -> mCurrentTime
    android.icu.text.DateFormat mDateFormat -> mDateFormat
    java.lang.String mDatePattern -> mDatePattern
    android.content.BroadcastReceiver mIntentReceiver -> mIntentReceiver
    java.lang.String mLastText -> mLastText
    void setDatePattern(java.lang.String) -> setDatePattern
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateClock() -> updateClock
    android.icu.text.DateFormat -set0(com.android.systemui.statusbar.policy.DateView,android.icu.text.DateFormat) -> -set0
com.android.systemui.recents.misc.ReferenceCountedTrigger$3 -> com.android.systemui.recents.misc.ReferenceCountedTrigger$3:
    boolean hasEnded -> hasEnded
    com.android.systemui.recents.misc.ReferenceCountedTrigger this$0 -> this$0
    void <init>(com.android.systemui.recents.misc.ReferenceCountedTrigger) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.NavigationBarTransitions -> com.android.systemui.statusbar.phone.NavigationBarTransitions:
    boolean mAutoDim -> mAutoDim
    com.android.internal.statusbar.IStatusBarService mBarService -> mBarService
    com.android.systemui.statusbar.phone.LightBarTransitionsController mLightTransitionsController -> mLightTransitionsController
    boolean mLightsOut -> mLightsOut
    android.view.View$OnTouchListener mLightsOutListener -> mLightsOutListener
    com.android.systemui.statusbar.phone.NavigationBarView mView -> mView
    boolean mWallpaperVisible -> mWallpaperVisible
    void <init>(com.android.systemui.statusbar.phone.NavigationBarView) -> <init>
    com.android.systemui.statusbar.phone.LightBarTransitionsController getLightTransitionsController() -> getLightTransitionsController
    void reapplyDarkIntensity() -> reapplyDarkIntensity
    void init() -> init
    void applyDarkIntensity(float) -> applyDarkIntensity
    void applyLightsOut(boolean,boolean) -> applyLightsOut
    void applyLightsOut(boolean,boolean,boolean) -> applyLightsOut
    boolean isLightsOut(int) -> isLightsOut
    void onTransition(int,int,boolean) -> onTransition
    void setAutoDim(boolean) -> setAutoDim
    void -com_android_systemui_statusbar_phone_NavigationBarTransitions-mthref-0(float) -> -com_android_systemui_statusbar_phone_NavigationBarTransitions-mthref-0
    com.android.internal.statusbar.IStatusBarService -get0(com.android.systemui.statusbar.phone.NavigationBarTransitions) -> -get0
    boolean -set0(com.android.systemui.statusbar.phone.NavigationBarTransitions,boolean) -> -set0
    void -wrap0(com.android.systemui.statusbar.phone.NavigationBarTransitions,boolean,boolean) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.NavigationBarTransitions,boolean,boolean,boolean) -> -wrap1
com.android.keyguard.PasswordTextView$CharState$4 -> com.android.keyguard.PasswordTextView$CharState$4:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.model.ThumbnailData -> com.android.systemui.recents.model.ThumbnailData:
    android.graphics.Rect insets -> insets
    int orientation -> orientation
    boolean reducedResolution -> reducedResolution
    float scale -> scale
    android.graphics.Bitmap thumbnail -> thumbnail
    void <init>() -> <init>
    com.android.systemui.recents.model.ThumbnailData createFromTaskSnapshot(android.app.ActivityManager$TaskSnapshot) -> createFromTaskSnapshot
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnChildLocationsChangedListener -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnChildLocationsChangedListener:
    void onChildLocationsChanged(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> onChildLocationsChanged
com.android.settingslib.bluetooth.BluetoothA2dpWrapper -> com.android.settingslib.bluetooth.BluetoothA2dpWrapper:
com.android.keyguard.KeyguardSecurityViewFlipper -> com.android.keyguard.KeyguardSecurityViewFlipper:
    android.graphics.Rect mTempRect -> mTempRect
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    com.android.keyguard.KeyguardSecurityViewFlipper$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    com.android.keyguard.KeyguardSecurityView getSecurityView() -> getSecurityView
    int makeChildMeasureSpec(int,int) -> makeChildMeasureSpec
    boolean needsInput() -> needsInput
    void onMeasure(int,int) -> onMeasure
    void onPause() -> onPause
    void onResume(int) -> onResume
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback) -> setKeyguardCallback
    void setLockPatternUtils(com.android.internal.widget.LockPatternUtils) -> setLockPatternUtils
    void showMessage(java.lang.String,int) -> showMessage
    void showPromptReason(int) -> showPromptReason
    void startAppearAnimation() -> startAppearAnimation
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.android.settingslib.bluetooth.PbapClientProfile$PbapClientServiceListener -> com.android.settingslib.bluetooth.PbapClientProfile$PbapClientServiceListener:
    com.android.settingslib.bluetooth.PbapClientProfile this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.PbapClientProfile,com.android.settingslib.bluetooth.PbapClientProfile$PbapClientServiceListener) -> <init>
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void <init>(com.android.settingslib.bluetooth.PbapClientProfile) -> <init>
    void onServiceDisconnected(int) -> onServiceDisconnected
com.android.systemui.recents.misc.SystemServicesProxy$StartActivityFromRecentsResultListener -> com.android.systemui.recents.misc.SystemServicesProxy$StartActivityFromRecentsResultListener:
    void onStartActivityResult(boolean) -> onStartActivityResult
android.support.v7.media.MediaRouter$GlobalMediaRouter$ProviderCallback -> android.support.v7.media.MediaRouter$GlobalMediaRouter$ProviderCallback:
    android.support.v7.media.MediaRouter$GlobalMediaRouter this$1 -> this$1
    void <init>(android.support.v7.media.MediaRouter$GlobalMediaRouter) -> <init>
    void onDescriptorChanged(android.support.v7.media.MediaRouteProvider,android.support.v7.media.MediaRouteProviderDescriptor) -> onDescriptorChanged
com.android.systemui.usb.UsbAccessoryUriActivity -> com.android.systemui.usb.UsbAccessoryUriActivity:
    android.hardware.usb.UsbAccessory mAccessory -> mAccessory
    android.net.Uri mUri -> mUri
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
com.android.systemui.SwipeHelper$Callback -> com.android.systemui.SwipeHelper$Callback:
    boolean canChildBeDismissed(android.view.View) -> canChildBeDismissed
    android.view.View getChildAtPosition(android.view.MotionEvent) -> getChildAtPosition
    float getFalsingThresholdFactor() -> getFalsingThresholdFactor
    boolean isAntiFalsingNeeded() -> isAntiFalsingNeeded
    void onBeginDrag(android.view.View) -> onBeginDrag
    void onChildDismissed(android.view.View) -> onChildDismissed
    void onChildSnappedBack(android.view.View,float) -> onChildSnappedBack
    void onDragCancelled(android.view.View) -> onDragCancelled
    boolean updateSwipeProgress(android.view.View,boolean,float) -> updateSwipeProgress
com.android.systemui.statusbar.CommandQueue -> com.android.systemui.statusbar.CommandQueue:
    java.util.ArrayList mCallbacks -> mCallbacks
    int mDisable1 -> mDisable1
    int mDisable2 -> mDisable2
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    void addCallbacks(com.android.systemui.statusbar.CommandQueue$Callbacks) -> addCallbacks
    void removeCallbacks(com.android.systemui.statusbar.CommandQueue$Callbacks) -> removeCallbacks
    void animateCollapsePanels(int) -> animateCollapsePanels
    void disable(int,int,boolean) -> disable
    void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon) -> setIcon
    void recomputeDisableFlags(boolean) -> recomputeDisableFlags
    void appTransitionStarting(long,long,boolean) -> appTransitionStarting
    void appTransitionPending(boolean) -> appTransitionPending
    void preloadRecentApps() -> preloadRecentApps
    void cancelPreloadRecentApps() -> cancelPreloadRecentApps
    void toggleRecentApps() -> toggleRecentApps
    void <init>() -> <init>
    void addQsTile(android.content.ComponentName) -> addQsTile
    void animateCollapsePanels() -> animateCollapsePanels
    void animateExpandNotificationsPanel() -> animateExpandNotificationsPanel
    void animateExpandSettingsPanel(java.lang.String) -> animateExpandSettingsPanel
    void appTransitionCancelled() -> appTransitionCancelled
    void appTransitionFinished() -> appTransitionFinished
    void appTransitionPending() -> appTransitionPending
    void appTransitionStarting(long,long) -> appTransitionStarting
    void clickQsTile(android.content.ComponentName) -> clickQsTile
    void disable(int,int) -> disable
    void dismissKeyboardShortcutsMenu() -> dismissKeyboardShortcutsMenu
    void handleSystemKey(int) -> handleSystemKey
    void hideRecentApps(boolean,boolean) -> hideRecentApps
    void onCameraLaunchGestureDetected(int) -> onCameraLaunchGestureDetected
    void remQsTile(android.content.ComponentName) -> remQsTile
    void removeIcon(java.lang.String) -> removeIcon
    void setImeWindowStatus(android.os.IBinder,int,int,boolean) -> setImeWindowStatus
    void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect) -> setSystemUiVisibility
    void setTopAppHidesStatusBar(boolean) -> setTopAppHidesStatusBar
    void setWindowState(int,int) -> setWindowState
    void showAssistDisclosure() -> showAssistDisclosure
    void showGlobalActionsMenu() -> showGlobalActionsMenu
    void showPictureInPictureMenu() -> showPictureInPictureMenu
    void showRecentApps(boolean,boolean) -> showRecentApps
    void showScreenPinningRequest(int) -> showScreenPinningRequest
    void showShutdownUi(boolean,java.lang.String) -> showShutdownUi
    void startAssist(android.os.Bundle) -> startAssist
    void toggleKeyboardShortcutsMenu(int) -> toggleKeyboardShortcutsMenu
    void togglePanel() -> togglePanel
    void toggleSplitScreen() -> toggleSplitScreen
    void topAppWindowChanged(boolean) -> topAppWindowChanged
    java.util.ArrayList -get0(com.android.systemui.statusbar.CommandQueue) -> -get0
android.arch.lifecycle.LifecycleRegistry -> android.arch.lifecycle.LifecycleRegistry:
    boolean mHandlingEvent -> mHandlingEvent
    java.util.ArrayList mParentStates -> mParentStates
    android.arch.core.internal.FastSafeIterableMap mObserverMap -> mObserverMap
    int mAddingObserverCounter -> mAddingObserverCounter
    boolean mNewEventOccurred -> mNewEventOccurred
    android.arch.lifecycle.Lifecycle$State mState -> mState
    android.arch.lifecycle.LifecycleOwner mLifecycleOwner -> mLifecycleOwner
    void markState(android.arch.lifecycle.Lifecycle$State) -> markState
    void pushParentState(android.arch.lifecycle.Lifecycle$State) -> pushParentState
    void forwardPass() -> forwardPass
    void backwardPass() -> backwardPass
    void <init>(android.arch.lifecycle.LifecycleOwner) -> <init>
    void popParentState() -> popParentState
    android.arch.lifecycle.Lifecycle$Event upEvent(android.arch.lifecycle.Lifecycle$State) -> upEvent
    android.arch.lifecycle.Lifecycle$Event downEvent(android.arch.lifecycle.Lifecycle$State) -> downEvent
    void handleLifecycleEvent(android.arch.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    boolean isSynced() -> isSynced
    android.arch.lifecycle.Lifecycle$State getStateAfter(android.arch.lifecycle.Lifecycle$Event) -> getStateAfter
    void sync() -> sync
    android.arch.lifecycle.Lifecycle$State min(android.arch.lifecycle.Lifecycle$State,android.arch.lifecycle.Lifecycle$State) -> min
com.android.systemui.recents.views.-$Lambda$b3aJ66fcBRqRg8AO7nEh6AxI6eM -> com.android.systemui.recents.views.-$Lambda$b3aJ66fcBRqRg8AO7nEh6AxI6eM:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.keyguard.KeyguardSimPukView$3 -> com.android.keyguard.KeyguardSimPukView$3:
    com.android.keyguard.KeyguardSimPukView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSimPukView,com.android.keyguard.KeyguardSimPukView,java.lang.String,java.lang.String,int) -> <init>
    void onSimLockChangedResponse(int,int) -> onSimLockChangedResponse
com.android.systemui.util.leak.LeakReporter -> com.android.systemui.util.leak.LeakReporter:
    android.content.Context mContext -> mContext
    com.android.systemui.util.leak.LeakDetector mLeakDetector -> mLeakDetector
    java.lang.String mLeakReportEmail -> mLeakReportEmail
    void dumpLeak(int) -> dumpLeak
    void <init>(android.content.Context,com.android.systemui.util.leak.LeakDetector,java.lang.String) -> <init>
    android.content.Intent getIntent(java.io.File,java.io.File) -> getIntent
android.support.v7.media.MediaRouter$RouteGroup -> android.support.v7.media.MediaRouter$RouteGroup:
    java.util.List mRoutes -> mRoutes
    java.lang.String toString() -> toString
    int maybeUpdateDescriptor(android.support.v7.media.MediaRouteDescriptor) -> maybeUpdateDescriptor
    java.util.List getRoutes() -> getRoutes
    void <init>(android.support.v7.media.MediaRouter$ProviderInfo,java.lang.String,java.lang.String) -> <init>
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$1 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0() -> $m$0
    boolean onDismiss() -> onDismiss
android.support.v14.preference.PreferenceFragment$OnPreferenceDisplayDialogCallback -> android.support.v14.preference.PreferenceFragment$OnPreferenceDisplayDialogCallback:
    boolean onPreferenceDisplayDialog(android.support.v14.preference.PreferenceFragment,android.support.v7.preference.Preference) -> onPreferenceDisplayDialog
android.support.v7.app.OverlayListView$OverlayObject -> android.support.v7.app.OverlayListView$OverlayObject:
    android.graphics.drawable.BitmapDrawable mBitmap -> mBitmap
    android.graphics.Rect mCurrentBounds -> mCurrentBounds
    boolean mIsAnimationStarted -> mIsAnimationStarted
    float mStartAlpha -> mStartAlpha
    android.graphics.Rect mStartRect -> mStartRect
    long mStartTime -> mStartTime
    long mDuration -> mDuration
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    float mCurrentAlpha -> mCurrentAlpha
    float mEndAlpha -> mEndAlpha
    boolean mIsAnimationEnded -> mIsAnimationEnded
    android.support.v7.app.OverlayListView$OverlayObject$OnAnimationEndListener mListener -> mListener
    int mDeltaY -> mDeltaY
    void stopAnimation() -> stopAnimation
    android.support.v7.app.OverlayListView$OverlayObject setAnimationEndListener(android.support.v7.app.OverlayListView$OverlayObject$OnAnimationEndListener) -> setAnimationEndListener
    android.support.v7.app.OverlayListView$OverlayObject setDuration(long) -> setDuration
    android.support.v7.app.OverlayListView$OverlayObject setTranslateYAnimation(int) -> setTranslateYAnimation
    void startAnimation(long) -> startAnimation
    android.support.v7.app.OverlayListView$OverlayObject setAlphaAnimation(float,float) -> setAlphaAnimation
    void <init>(android.graphics.drawable.BitmapDrawable,android.graphics.Rect) -> <init>
    android.graphics.drawable.BitmapDrawable getBitmapDrawable() -> getBitmapDrawable
    boolean update(long) -> update
    android.support.v7.app.OverlayListView$OverlayObject setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isAnimationStarted() -> isAnimationStarted
com.android.systemui.VendorServices -> com.android.systemui.VendorServices:
    void <init>() -> <init>
    void start() -> start
com.android.systemui.globalactions.GlobalActionsDialog -> com.android.systemui.globalactions.GlobalActionsDialog:
    com.android.systemui.globalactions.GlobalActionsDialog$MyAdapter mAdapter -> mAdapter
    android.database.ContentObserver mAirplaneModeObserver -> mAirplaneModeObserver
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction mAirplaneModeOn -> mAirplaneModeOn
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State mAirplaneState -> mAirplaneState
    android.media.AudioManager mAudioManager -> mAudioManager
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    android.content.Context mContext -> mContext
    boolean mDeviceProvisioned -> mDeviceProvisioned
    com.android.systemui.globalactions.GlobalActionsDialog$ActionsDialog mDialog -> mDialog
    android.service.dreams.IDreamManager mDreamManager -> mDreamManager
    com.android.internal.util.EmergencyAffordanceManager mEmergencyAffordanceManager -> mEmergencyAffordanceManager
    android.os.Handler mHandler -> mHandler
    boolean mHasTelephony -> mHasTelephony
    boolean mHasVibrator -> mHasVibrator
    boolean mIsWaitingForEcmExit -> mIsWaitingForEcmExit
    java.util.ArrayList mItems -> mItems
    boolean mKeyguardShowing -> mKeyguardShowing
    android.telephony.PhoneStateListener mPhoneStateListener -> mPhoneStateListener
    android.content.BroadcastReceiver mRingerModeReceiver -> mRingerModeReceiver
    boolean mShowSilentToggle -> mShowSilentToggle
    com.android.systemui.globalactions.GlobalActionsDialog$Action mSilentModeAction -> mSilentModeAction
    com.android.systemui.plugins.GlobalActions$GlobalActionsManager mWindowManagerFuncs -> mWindowManagerFuncs
    void <init>(android.content.Context,com.android.systemui.plugins.GlobalActions$GlobalActionsManager) -> <init>
    void showDialog(boolean,boolean) -> showDialog
    void addUsersToMenu(java.util.ArrayList) -> addUsersToMenu
    void awakenIfNecessary() -> awakenIfNecessary
    void changeAirplaneModeSystemSetting(boolean) -> changeAirplaneModeSystemSetting
    com.android.systemui.globalactions.GlobalActionsDialog$ActionsDialog createDialog() -> createDialog
    com.android.systemui.globalactions.GlobalActionsDialog$Action getAssistAction() -> getAssistAction
    android.content.pm.UserInfo getCurrentUser() -> getCurrentUser
    com.android.systemui.globalactions.GlobalActionsDialog$Action getEmergencyAction() -> getEmergencyAction
    com.android.systemui.globalactions.GlobalActionsDialog$Action getLockdownAction() -> getLockdownAction
    com.android.systemui.globalactions.GlobalActionsDialog$Action getSettingsAction() -> getSettingsAction
    com.android.systemui.globalactions.GlobalActionsDialog$Action getVoiceAssistAction() -> getVoiceAssistAction
    void handleShow() -> handleShow
    boolean isCurrentUserOwner() -> isCurrentUserOwner
    void onAirplaneModeChanged() -> onAirplaneModeChanged
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void prepareDialog() -> prepareDialog
    void refreshSilentMode() -> refreshSilentMode
    com.android.systemui.globalactions.GlobalActionsDialog$MyAdapter -get0(com.android.systemui.globalactions.GlobalActionsDialog) -> -get0
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction -get1(com.android.systemui.globalactions.GlobalActionsDialog) -> -get1
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State -get2(com.android.systemui.globalactions.GlobalActionsDialog) -> -get2
    android.media.AudioManager -get3(com.android.systemui.globalactions.GlobalActionsDialog) -> -get3
    android.content.Context -get4(com.android.systemui.globalactions.GlobalActionsDialog) -> -get4
    boolean -get5(com.android.systemui.globalactions.GlobalActionsDialog) -> -get5
    com.android.systemui.globalactions.GlobalActionsDialog$ActionsDialog -get6(com.android.systemui.globalactions.GlobalActionsDialog) -> -get6
    com.android.internal.util.EmergencyAffordanceManager -get7(com.android.systemui.globalactions.GlobalActionsDialog) -> -get7
    android.os.Handler -get8(com.android.systemui.globalactions.GlobalActionsDialog) -> -get8
    boolean -get9(com.android.systemui.globalactions.GlobalActionsDialog) -> -get9
    boolean -get10(com.android.systemui.globalactions.GlobalActionsDialog) -> -get10
    java.util.ArrayList -get11(com.android.systemui.globalactions.GlobalActionsDialog) -> -get11
    boolean -get12(com.android.systemui.globalactions.GlobalActionsDialog) -> -get12
    com.android.systemui.plugins.GlobalActions$GlobalActionsManager -get13(com.android.systemui.globalactions.GlobalActionsDialog) -> -get13
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State -set0(com.android.systemui.globalactions.GlobalActionsDialog,com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State) -> -set0
    com.android.systemui.globalactions.GlobalActionsDialog$ActionsDialog -set1(com.android.systemui.globalactions.GlobalActionsDialog,com.android.systemui.globalactions.GlobalActionsDialog$ActionsDialog) -> -set1
    boolean -set2(com.android.systemui.globalactions.GlobalActionsDialog,boolean) -> -set2
    void -wrap0(com.android.systemui.globalactions.GlobalActionsDialog,boolean) -> -wrap0
    void -wrap1(com.android.systemui.globalactions.GlobalActionsDialog) -> -wrap1
    void -wrap2(com.android.systemui.globalactions.GlobalActionsDialog) -> -wrap2
    void -wrap3(com.android.systemui.globalactions.GlobalActionsDialog) -> -wrap3
com.android.systemui.statusbar.phone.StatusBar$44 -> com.android.systemui.statusbar.phone.StatusBar$44:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    android.app.PendingIntent val$intent -> val$intent
    void <init>(com.android.systemui.statusbar.phone.StatusBar,android.app.PendingIntent) -> <init>
    boolean onDismiss() -> onDismiss
android.support.v7.widget.RecyclerView$Recycler -> android.support.v7.widget.RecyclerView$Recycler:
    int mViewCacheMax -> mViewCacheMax
    android.support.v7.widget.RecyclerView$RecycledViewPool mRecyclerPool -> mRecyclerPool
    java.util.List mUnmodifiableAttachedScrap -> mUnmodifiableAttachedScrap
    java.util.ArrayList mAttachedScrap -> mAttachedScrap
    java.util.ArrayList mCachedViews -> mCachedViews
    int mRequestedCacheMax -> mRequestedCacheMax
    android.support.v7.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> mViewCacheExtension
    java.util.ArrayList mChangedScrap -> mChangedScrap
    android.support.v7.widget.RecyclerView this$0 -> this$0
    int getScrapCount() -> getScrapCount
    boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void scrapView(android.view.View) -> scrapView
    boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    android.view.View getScrapViewAt(int) -> getScrapViewAt
    android.view.View getViewForPosition(int) -> getViewForPosition
    void clear() -> clear
    void markKnownViewsInvalid() -> markKnownViewsInvalid
    android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    void invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void setViewCacheSize(int) -> setViewCacheSize
    void recycleView(android.view.View) -> recycleView
    void updateViewCacheSize() -> updateViewCacheSize
    android.support.v7.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    void viewRangeUpdate(int,int) -> viewRangeUpdate
    void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder) -> unscrapView
    void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    void clearOldPositions() -> clearOldPositions
    android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    void clearScrap() -> clearScrap
    void recycleCachedViewAt(int) -> recycleCachedViewAt
    android.support.v7.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    java.util.List getScrapList() -> getScrapList
    void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
com.android.systemui.keyguard.-$Lambda$sJEWzSUgVYHCfk83FvvFNEzkKS4 -> com.android.systemui.keyguard.-$Lambda$sJEWzSUgVYHCfk83FvvFNEzkKS4:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void run() -> run
com.android.systemui.stackdivider.DividerView -> com.android.systemui.stackdivider.DividerView:
    android.view.animation.PathInterpolator DIM_INTERPOLATOR -> DIM_INTERPOLATOR
    android.view.animation.Interpolator IME_ADJUST_INTERPOLATOR -> IME_ADJUST_INTERPOLATOR
    android.view.animation.PathInterpolator SLOWDOWN_INTERPOLATOR -> SLOWDOWN_INTERPOLATOR
    boolean mAdjustedForIme -> mAdjustedForIme
    android.view.View mBackground -> mBackground
    boolean mBackgroundLifted -> mBackgroundLifted
    android.animation.ValueAnimator mCurrentAnimator -> mCurrentAnimator
    int mDisplayHeight -> mDisplayHeight
    android.graphics.Rect mDisplayRect -> mDisplayRect
    int mDisplayWidth -> mDisplayWidth
    int mDividerInsets -> mDividerInsets
    int mDividerSize -> mDividerSize
    int mDividerWindowWidth -> mDividerWindowWidth
    int mDockSide -> mDockSide
    android.graphics.Rect mDockedInsetRect -> mDockedInsetRect
    android.graphics.Rect mDockedRect -> mDockedRect
    boolean mDockedStackMinimized -> mDockedStackMinimized
    android.graphics.Rect mDockedTaskRect -> mDockedTaskRect
    boolean mEntranceAnimationRunning -> mEntranceAnimationRunning
    boolean mExitAnimationRunning -> mExitAnimationRunning
    int mExitStartPosition -> mExitStartPosition
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    boolean mGrowRecents -> mGrowRecents
    com.android.systemui.stackdivider.DividerHandleView mHandle -> mHandle
    android.view.View$AccessibilityDelegate mHandleDelegate -> mHandleDelegate
    android.os.Handler mHandler -> mHandler
    boolean mHomeStackResizable -> mHomeStackResizable
    boolean mIsInMinimizeInteraction -> mIsInMinimizeInteraction
    android.graphics.Rect mLastResizeRect -> mLastResizeRect
    int mLongPressEntraceAnimDuration -> mLongPressEntraceAnimDuration
    com.android.systemui.stackdivider.MinimizedDockShadow mMinimizedShadow -> mMinimizedShadow
    com.android.internal.policy.DividerSnapAlgorithm mMinimizedSnapAlgorithm -> mMinimizedSnapAlgorithm
    boolean mMoving -> mMoving
    android.graphics.Rect mOtherInsetRect -> mOtherInsetRect
    android.graphics.Rect mOtherRect -> mOtherRect
    android.graphics.Rect mOtherTaskRect -> mOtherTaskRect
    boolean mRemoved -> mRemoved
    java.lang.Runnable mResetBackgroundRunnable -> mResetBackgroundRunnable
    com.android.internal.view.SurfaceFlingerVsyncChoreographer mSfChoreographer -> mSfChoreographer
    com.android.internal.policy.DividerSnapAlgorithm mSnapAlgorithm -> mSnapAlgorithm
    com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mSnapTargetBeforeMinimized -> mSnapTargetBeforeMinimized
    android.graphics.Rect mStableInsets -> mStableInsets
    int mStartPosition -> mStartPosition
    int mStartX -> mStartX
    int mStartY -> mStartY
    com.android.systemui.stackdivider.DividerState mState -> mState
    int[] mTempInt2 -> mTempInt2
    int mTouchElevation -> mTouchElevation
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    com.android.systemui.stackdivider.DividerWindowManager mWindowManager -> mWindowManager
    com.android.systemui.stackdivider.WindowManagerProxy mWindowManagerProxy -> mWindowManagerProxy
    int growsRecents() -> growsRecents
    void setAdjustedForIme(boolean,long) -> setAdjustedForIme
    void setAdjustedForIme(boolean) -> setAdjustedForIme
    void notifyDockSideChanged(int) -> notifyDockSideChanged
    void injectDependencies(com.android.systemui.stackdivider.DividerWindowManager,com.android.systemui.stackdivider.DividerState) -> injectDependencies
    void setMinimizedDockStack(boolean,boolean) -> setMinimizedDockStack
    void onDividerRemoved() -> onDividerRemoved
    void setMinimizedDockStack(boolean,long,boolean) -> setMinimizedDockStack
    void onRecentsDrawn() -> onRecentsDrawn
    com.android.internal.policy.DividerSnapAlgorithm getSnapAlgorithm() -> getSnapAlgorithm
    int getCurrentPosition() -> getCurrentPosition
    boolean startDragging(boolean,boolean) -> startDragging
    void stopDragging(int,float,boolean,boolean) -> stopDragging
    com.android.systemui.stackdivider.WindowManagerProxy getWindowManagerProxy() -> getWindowManagerProxy
    boolean isHorizontalDivision() -> isHorizontalDivision
    void calculateBoundsForPosition(int,int,android.graphics.Rect) -> calculateBoundsForPosition
    void resizeStack(int,int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> resizeStack
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void alignBottomRight(android.graphics.Rect,android.graphics.Rect) -> alignBottomRight
    void alignTopLeft(android.graphics.Rect,android.graphics.Rect) -> alignTopLeft
    void applyDismissingParallax(android.graphics.Rect,int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget,int,int) -> applyDismissingParallax
    void applyExitAnimationParallax(android.graphics.Rect,int) -> applyExitAnimationParallax
    float calculateParallaxDismissingFraction(float,int) -> calculateParallaxDismissingFraction
    int calculatePosition(int,int) -> calculatePosition
    int calculateXPosition(int) -> calculateXPosition
    int calculateYPosition(int) -> calculateYPosition
    void cancelFlingAnimation() -> cancelFlingAnimation
    void commitSnapFlags(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> commitSnapFlags
    void convertToScreenCoordinates(android.view.MotionEvent) -> convertToScreenCoordinates
    boolean dockSideBottomRight(int) -> dockSideBottomRight
    boolean dockSideTopLeft(int) -> dockSideTopLeft
    void fling(int,float,boolean,boolean) -> fling
    void flingTo(int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget,long,long,long,android.view.animation.Interpolator) -> flingTo
    float getDimFraction(int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> getDimFraction
    android.animation.ValueAnimator getFlingAnimator(int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget,long) -> getFlingAnimator
    int getStackIdForDismissTarget(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> getStackIdForDismissTarget
    boolean hasInsetsAtDismissTarget(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> hasInsetsAtDismissTarget
    void initializeSnapAlgorithm() -> initializeSnapAlgorithm
    boolean isDismissing(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget,int,int) -> isDismissing
    void liftBackground() -> liftBackground
    void logResizeEvent(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> logResizeEvent
    android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    void onAttachedToWindow() -> onAttachedToWindow
    void onBusEvent(com.android.systemui.recents.events.activity.RecentsActivityStartingEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DockedFirstAnimationFrameEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DockedTopTaskEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.UndockingTaskEvent) -> onBusEvent
    void onComputeInternalInsets(android.view.ViewTreeObserver$InternalInsetsInfo) -> onComputeInternalInsets
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void releaseBackground() -> releaseBackground
    void resetBackground() -> resetBackground
    void resizeStack(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> resizeStack
    void resizeStackDelayed(int,int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> resizeStackDelayed
    int restrictDismissingTaskPosition(int,int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> restrictDismissingTaskPosition
    void saveSnapTargetBeforeMinimized(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> saveSnapTargetBeforeMinimized
    void stopDragging() -> stopDragging
    void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget,long,android.view.animation.Interpolator) -> stopDragging
    void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget,long,android.view.animation.Interpolator,long) -> stopDragging
    void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget,long,long,long,android.view.animation.Interpolator) -> stopDragging
    void updateDisplayInfo() -> updateDisplayInfo
    void updateDockSide() -> updateDockSide
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_stackdivider_DividerView_26496(boolean,com.android.internal.policy.DividerSnapAlgorithm$SnapTarget,android.animation.ValueAnimator) -> lambda$-com_android_systemui_stackdivider_DividerView_26496
    void lambda$-com_android_systemui_stackdivider_DividerView_26798(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) -> lambda$-com_android_systemui_stackdivider_DividerView_26798
    void lambda$-com_android_systemui_stackdivider_DividerView_27377() -> lambda$-com_android_systemui_stackdivider_DividerView_27377
    void lambda$-com_android_systemui_stackdivider_DividerView_53357() -> lambda$-com_android_systemui_stackdivider_DividerView_53357
    android.content.Context -get0(com.android.systemui.stackdivider.DividerView) -> -get0
    android.os.Handler -get1(com.android.systemui.stackdivider.DividerView) -> -get1
    com.android.internal.view.SurfaceFlingerVsyncChoreographer -get2(com.android.systemui.stackdivider.DividerView) -> -get2
    com.android.internal.policy.DividerSnapAlgorithm -get3(com.android.systemui.stackdivider.DividerView) -> -get3
    void -wrap0(com.android.systemui.stackdivider.DividerView) -> -wrap0
com.android.systemui.statusbar.stack.StackStateAnimator -> com.android.systemui.statusbar.stack.StackStateAnimator:
    com.android.systemui.statusbar.stack.AnimationFilter mAnimationFilter -> mAnimationFilter
    java.util.Stack mAnimationListenerPool -> mAnimationListenerPool
    com.android.systemui.statusbar.stack.AnimationProperties mAnimationProperties -> mAnimationProperties
    java.util.HashSet mAnimatorSet -> mAnimatorSet
    android.animation.ValueAnimator mBottomOverScrollAnimator -> mBottomOverScrollAnimator
    java.util.ArrayList mChildrenToClearFromOverlay -> mChildrenToClearFromOverlay
    long mCurrentAdditionalDelay -> mCurrentAdditionalDelay
    int mCurrentLastNotAddedIndex -> mCurrentLastNotAddedIndex
    long mCurrentLength -> mCurrentLength
    int mGoToFullShadeAppearingTranslation -> mGoToFullShadeAppearingTranslation
    java.util.HashSet mHeadsUpAppearChildren -> mHeadsUpAppearChildren
    int mHeadsUpAppearHeightBottom -> mHeadsUpAppearHeightBottom
    java.util.HashSet mHeadsUpDisappearChildren -> mHeadsUpDisappearChildren
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mHostLayout -> mHostLayout
    java.util.ArrayList mNewAddChildren -> mNewAddChildren
    java.util.ArrayList mNewEvents -> mNewEvents
    boolean mShadeExpanded -> mShadeExpanded
    com.android.systemui.statusbar.NotificationShelf mShelf -> mShelf
    com.android.systemui.statusbar.stack.ExpandableViewState mTmpState -> mTmpState
    android.animation.ValueAnimator mTopOverScrollAnimator -> mTopOverScrollAnimator
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void adaptDurationWhenGoingToFullShade(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.ExpandableViewState,boolean) -> adaptDurationWhenGoingToFullShade
    void animateOverScrollToAmount(float,boolean,boolean) -> animateOverScrollToAmount
    boolean applyWithoutAnimation(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.stack.StackScrollState) -> applyWithoutAnimation
    long calculateChildAnimationDelay(com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.stack.StackScrollState) -> calculateChildAnimationDelay
    long calculateDelayGoToFullShade(com.android.systemui.statusbar.stack.ExpandableViewState) -> calculateDelayGoToFullShade
    void cancelOverScrollAnimators(boolean) -> cancelOverScrollAnimators
    int findLastNotAddedIndex(com.android.systemui.statusbar.stack.StackScrollState) -> findLastNotAddedIndex
    android.animation.AnimatorListenerAdapter getGlobalAnimationFinishedListener() -> getGlobalAnimationFinishedListener
    void initAnimationProperties(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.ExpandableViewState) -> initAnimationProperties
    boolean isRunning() -> isRunning
    void onAnimationFinished() -> onAnimationFinished
    void processAnimationEvents(java.util.ArrayList,com.android.systemui.statusbar.stack.StackScrollState) -> processAnimationEvents
    void removeFromOverlay(android.view.View) -> removeFromOverlay
    void setHeadsUpAppearHeightBottom(int) -> setHeadsUpAppearHeightBottom
    void setShadeExpanded(boolean) -> setShadeExpanded
    void setShelf(com.android.systemui.statusbar.NotificationShelf) -> setShelf
    void startAnimationForEvents(java.util.ArrayList,com.android.systemui.statusbar.stack.StackScrollState,long) -> startAnimationForEvents
    com.android.systemui.statusbar.stack.AnimationFilter -get0(com.android.systemui.statusbar.stack.StackStateAnimator) -> -get0
    java.util.Stack -get1(com.android.systemui.statusbar.stack.StackStateAnimator) -> -get1
    java.util.HashSet -get2(com.android.systemui.statusbar.stack.StackStateAnimator) -> -get2
    java.util.HashSet -get3(com.android.systemui.statusbar.stack.StackStateAnimator) -> -get3
    java.util.ArrayList -get4(com.android.systemui.statusbar.stack.StackStateAnimator) -> -get4
    android.animation.ValueAnimator -set0(com.android.systemui.statusbar.stack.StackStateAnimator,android.animation.ValueAnimator) -> -set0
    android.animation.ValueAnimator -set1(com.android.systemui.statusbar.stack.StackStateAnimator,android.animation.ValueAnimator) -> -set1
    android.animation.AnimatorListenerAdapter -wrap0(com.android.systemui.statusbar.stack.StackStateAnimator) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.stack.StackStateAnimator) -> -wrap1
com.android.systemui.statusbar.phone.DozeParameters$IntInOutMatcher -> com.android.systemui.statusbar.phone.DozeParameters$IntInOutMatcher:
    boolean mDefaultIsIn -> mDefaultIsIn
    android.util.SparseBooleanArray mIsIn -> mIsIn
    java.lang.String mSpec -> mSpec
    void <init>(java.lang.String) -> <init>
    boolean isIn(int) -> isIn
android.support.v7.widget.TintTypedArray -> android.support.v7.widget.TintTypedArray:
    android.content.Context mContext -> mContext
    android.content.res.TypedArray mWrapped -> mWrapped
    android.util.TypedValue mTypedValue -> mTypedValue
    int getInt(int,int) -> getInt
    void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    boolean getBoolean(int,boolean) -> getBoolean
    int getResourceId(int,int) -> getResourceId
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    float getFloat(int,float) -> getFloat
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    boolean hasValue(int) -> hasValue
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    void recycle() -> recycle
    int getInteger(int,int) -> getInteger
    int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    java.lang.CharSequence[] getTextArray(int) -> getTextArray
    android.graphics.Typeface getFont(int,int,android.widget.TextView) -> getFont
    int getLayoutDimension(int,int) -> getLayoutDimension
    int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    int getColor(int,int) -> getColor
android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache -> android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache:
    int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
    void <init>(int) -> <init>
    android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
com.android.systemui.recents.ScreenPinningRequest$RequestWindowView -> com.android.systemui.recents.ScreenPinningRequest$RequestWindowView:
    android.graphics.drawable.ColorDrawable mColor -> mColor
    android.animation.ValueAnimator mColorAnim -> mColorAnim
    android.view.ViewGroup mLayout -> mLayout
    android.content.BroadcastReceiver mReceiver -> mReceiver
    boolean mShowCancel -> mShowCancel
    java.lang.Runnable mUpdateLayoutRunnable -> mUpdateLayoutRunnable
    com.android.systemui.recents.ScreenPinningRequest this$0 -> this$0
    void <init>(com.android.systemui.recents.ScreenPinningRequest,android.content.Context,boolean) -> <init>
    void inflateView(int) -> inflateView
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigurationChanged() -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void swapChildrenIfRtlAndVertical(android.view.View) -> swapChildrenIfRtlAndVertical
    android.graphics.drawable.ColorDrawable -get0(com.android.systemui.recents.ScreenPinningRequest$RequestWindowView) -> -get0
    android.content.Context -get1(com.android.systemui.recents.ScreenPinningRequest$RequestWindowView) -> -get1
    android.view.ViewGroup -get2(com.android.systemui.recents.ScreenPinningRequest$RequestWindowView) -> -get2
    java.lang.Runnable -get3(com.android.systemui.recents.ScreenPinningRequest$RequestWindowView) -> -get3
com.android.systemui.qs.QSPanel -> com.android.systemui.qs.QSPanel:
    android.content.Context mContext -> mContext
    com.android.systemui.qs.QSSecurityFooter mFooter -> mFooter
    com.android.systemui.qs.QSPanel$QSTileLayout mTileLayout -> mTileLayout
    java.util.ArrayList mRecords -> mRecords
    boolean mListening -> mListening
    boolean mExpanded -> mExpanded
    com.android.systemui.qs.QSTileHost mHost -> mHost
    com.android.systemui.settings.BrightnessController mBrightnessController -> mBrightnessController
    com.android.systemui.statusbar.policy.BrightnessMirrorController mBrightnessMirrorController -> mBrightnessMirrorController
    int mBrightnessPaddingTop -> mBrightnessPaddingTop
    android.view.View mBrightnessView -> mBrightnessView
    com.android.systemui.qs.QSDetail$Callback mCallback -> mCallback
    com.android.systemui.qs.customize.QSCustomizer mCustomizePanel -> mCustomizePanel
    com.android.systemui.qs.QSPanel$Record mDetailRecord -> mDetailRecord
    android.view.View mDivider -> mDivider
    boolean mGridContentVisible -> mGridContentVisible
    com.android.systemui.qs.QSPanel$H mHandler -> mHandler
    com.android.internal.logging.MetricsLogger mMetricsLogger -> mMetricsLogger
    android.view.View mPageIndicator -> mPageIndicator
    int mPanelPaddingBottom -> mPanelPaddingBottom
    void setHost(com.android.systemui.qs.QSTileHost,com.android.systemui.qs.customize.QSCustomizer) -> setHost
    void setExpanded(boolean) -> setExpanded
    boolean isShowingCustomize() -> isShowingCustomize
    void setListening(boolean) -> setListening
    void closeDetail() -> closeDetail
    void showEdit(android.view.View) -> showEdit
    com.android.systemui.qs.QSTileHost getHost() -> getHost
    void setCallback(com.android.systemui.qs.QSDetail$Callback) -> setCallback
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void drawTile(com.android.systemui.qs.QSPanel$TileRecord,com.android.systemui.plugins.qs.QSTile$State) -> drawTile
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void setTiles(java.util.Collection,boolean) -> setTiles
    void showDeviceMonitoringDialog() -> showDeviceMonitoringDialog
    void setBrightnessMirror(com.android.systemui.statusbar.policy.BrightnessMirrorController) -> setBrightnessMirror
    void clickTile(android.content.ComponentName) -> clickTile
    void openDetails(java.lang.String) -> openDetails
    void updateResources() -> updateResources
    void refreshAllTiles() -> refreshAllTiles
    void setGridContentVisibility(boolean) -> setGridContentVisibility
    com.android.systemui.qs.QSPanel$QSTileLayout getTileLayout() -> getTileLayout
    com.android.systemui.plugins.qs.QSTileView getTileView(com.android.systemui.plugins.qs.QSTile) -> getTileView
    android.view.View getBrightnessView() -> getBrightnessView
    android.view.View getPageIndicator() -> getPageIndicator
    android.view.View getDivider() -> getDivider
    com.android.systemui.qs.QSSecurityFooter getFooter() -> getFooter
    void showDetailAdapter(boolean,com.android.systemui.plugins.qs.DetailAdapter,int[]) -> showDetailAdapter
    void <init>(android.content.Context) -> <init>
    void addDivider() -> addDivider
    com.android.systemui.qs.QSPanel$TileRecord addTile(com.android.systemui.plugins.qs.QSTile,boolean) -> addTile
    com.android.systemui.plugins.qs.QSTileView createTileView(com.android.systemui.plugins.qs.QSTile,boolean) -> createTileView
    void fireScanStateChanged(boolean) -> fireScanStateChanged
    void fireShowingDetail(com.android.systemui.plugins.qs.DetailAdapter,int,int) -> fireShowingDetail
    void fireToggleStateChanged(boolean) -> fireToggleStateChanged
    com.android.systemui.plugins.qs.QSTile getTile(java.lang.String) -> getTile
    void handleShowDetail(com.android.systemui.qs.QSPanel$Record,boolean) -> handleShowDetail
    void handleShowDetailImpl(com.android.systemui.qs.QSPanel$Record,boolean,int,int) -> handleShowDetailImpl
    void handleShowDetailTile(com.android.systemui.qs.QSPanel$TileRecord,boolean) -> handleShowDetailTile
    void logTiles() -> logTiles
    void onBrightnessMirrorReinflated(android.view.View) -> onBrightnessMirrorReinflated
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onTilesChanged() -> onTilesChanged
    void setDetailRecord(com.android.systemui.qs.QSPanel$Record) -> setDetailRecord
    void setTiles(java.util.Collection) -> setTiles
    void setupTileLayout() -> setupTileLayout
    boolean shouldShowDetail() -> shouldShowDetail
    void showDetail(boolean,com.android.systemui.qs.QSPanel$Record) -> showDetail
    void updateBrightnessMirror() -> updateBrightnessMirror
    com.android.systemui.qs.customize.QSCustomizer -get0(com.android.systemui.qs.QSPanel) -> -get0
    com.android.systemui.qs.QSPanel$Record -get1(com.android.systemui.qs.QSPanel) -> -get1
    com.android.systemui.qs.QSPanel$H -get2(com.android.systemui.qs.QSPanel) -> -get2
    void -wrap0(com.android.systemui.qs.QSPanel,boolean) -> -wrap0
    void -wrap1(com.android.systemui.qs.QSPanel,boolean) -> -wrap1
android.support.v7.app.MediaRouteControllerDialog -> android.support.v7.app.MediaRouteControllerDialog:
    int mArtIconBackgroundColor -> mArtIconBackgroundColor
    android.widget.FrameLayout mExpandableAreaLayout -> mExpandableAreaLayout
    android.support.v4.media.session.PlaybackStateCompat mState -> mState
    android.view.View mCustomControlView -> mCustomControlView
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    android.widget.TextView mSubtitleView -> mSubtitleView
    android.widget.TextView mTitleView -> mTitleView
    android.support.v7.media.MediaRouter$RouteInfo mRoute -> mRoute
    int mVolumeGroupListItemIconSize -> mVolumeGroupListItemIconSize
    android.widget.ImageButton mPlaybackControlButton -> mPlaybackControlButton
    boolean mIsGroupListAnimationPending -> mIsGroupListAnimationPending
    android.support.v7.app.MediaRouteControllerDialog$VolumeGroupAdapter mVolumeGroupAdapter -> mVolumeGroupAdapter
    android.support.v7.app.MediaRouteControllerDialog$MediaRouterCallback mCallback -> mCallback
    java.util.Set mGroupMemberRoutesRemoved -> mGroupMemberRoutesRemoved
    boolean mPendingUpdateAnimationNeeded -> mPendingUpdateAnimationNeeded
    java.util.Map mVolumeSliderMap -> mVolumeSliderMap
    android.content.Context mContext -> mContext
    int mGroupListAnimationDurationMs -> mGroupListAnimationDurationMs
    android.graphics.Bitmap mArtIconLoadedBitmap -> mArtIconLoadedBitmap
    boolean mCreated -> mCreated
    android.widget.Button mDisconnectButton -> mDisconnectButton
    int mGroupListFadeOutDurationMs -> mGroupListFadeOutDurationMs
    android.widget.RelativeLayout mPlaybackControlLayout -> mPlaybackControlLayout
    boolean mHasPendingUpdate -> mHasPendingUpdate
    android.widget.FrameLayout mCustomControlLayout -> mCustomControlLayout
    boolean mAttachedToWindow -> mAttachedToWindow
    android.support.v7.app.MediaRouteExpandCollapseButton mGroupExpandCollapseButton -> mGroupExpandCollapseButton
    android.widget.FrameLayout mDefaultControlLayout -> mDefaultControlLayout
    java.util.Set mGroupMemberRoutesAnimatingWithBitmap -> mGroupMemberRoutesAnimatingWithBitmap
    android.support.v7.app.OverlayListView mVolumeGroupList -> mVolumeGroupList
    android.widget.LinearLayout mMediaMainControlLayout -> mMediaMainControlLayout
    java.util.Set mGroupMemberRoutesAdded -> mGroupMemberRoutesAdded
    int mVolumeGroupListItemHeight -> mVolumeGroupListItemHeight
    java.lang.Runnable mGroupListFadeInAnimation -> mGroupListFadeInAnimation
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    android.support.v7.app.MediaRouteControllerDialog$VolumeChangeListener mVolumeChangeListener -> mVolumeChangeListener
    android.view.animation.Interpolator mLinearOutSlowInInterpolator -> mLinearOutSlowInInterpolator
    android.widget.TextView mRouteNameTextView -> mRouteNameTextView
    android.support.v7.app.MediaRouteControllerDialog$MediaControllerCallback mControllerCallback -> mControllerCallback
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    android.graphics.Bitmap mArtIconBitmap -> mArtIconBitmap
    java.util.List mGroupMemberRoutes -> mGroupMemberRoutes
    int CONNECTION_TIMEOUT_MILLIS -> CONNECTION_TIMEOUT_MILLIS
    boolean mVolumeControlEnabled -> mVolumeControlEnabled
    int mVolumeGroupListMaxHeight -> mVolumeGroupListMaxHeight
    android.view.animation.Interpolator mAccelerateDecelerateInterpolator -> mAccelerateDecelerateInterpolator
    android.support.v4.media.session.MediaControllerCompat mMediaController -> mMediaController
    android.widget.SeekBar mVolumeSlider -> mVolumeSlider
    boolean mIsGroupListAnimating -> mIsGroupListAnimating
    int mGroupListFadeInDurationMs -> mGroupListFadeInDurationMs
    android.widget.ImageButton mCloseButton -> mCloseButton
    android.widget.ImageView mArtView -> mArtView
    android.view.animation.Interpolator mFastOutSlowInInterpolator -> mFastOutSlowInInterpolator
    boolean mIsGroupExpanded -> mIsGroupExpanded
    android.support.v7.media.MediaRouter mRouter -> mRouter
    android.view.View mDividerView -> mDividerView
    int mDialogContentWidth -> mDialogContentWidth
    android.net.Uri mArtIconUri -> mArtIconUri
    boolean mArtIconIsLoaded -> mArtIconIsLoaded
    boolean DEBUG -> DEBUG
    android.widget.LinearLayout mVolumeControlLayout -> mVolumeControlLayout
    android.widget.LinearLayout mDialogAreaLayout -> mDialogAreaLayout
    android.widget.Button mStopCastingButton -> mStopCastingButton
    int mVolumeGroupListPaddingTop -> mVolumeGroupListPaddingTop
    android.support.v7.app.MediaRouteControllerDialog$FetchArtTask mFetchArtTask -> mFetchArtTask
    android.support.v7.media.MediaRouter$RouteInfo mRouteInVolumeSliderTouched -> mRouteInVolumeSliderTouched
    void update(boolean) -> update
    void onAttachedToWindow() -> onAttachedToWindow
    void setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token) -> setMediaSession
    void onCreate(android.os.Bundle) -> onCreate
    void startGroupListFadeInAnimation() -> startGroupListFadeInAnimation
    boolean canShowPlaybackControlLayout() -> canShowPlaybackControlLayout
    boolean uriEquals(android.net.Uri,android.net.Uri) -> uriEquals
    void updatePlaybackControlLayout() -> updatePlaybackControlLayout
    void updateVolumeGroupItemHeight(android.view.View) -> updateVolumeGroupItemHeight
    boolean -wrap1(android.support.v7.app.MediaRouteControllerDialog) -> -wrap1
    void updateMediaControlVisibility(boolean) -> updateMediaControlVisibility
    void <init>(android.content.Context,int) -> <init>
    void animateGroupListItems(java.util.Map,java.util.Map) -> animateGroupListItems
    int getMainControllerHeight(boolean) -> getMainControllerHeight
    boolean isStopActionSupported() -> isStopActionSupported
    boolean -wrap0(android.support.v7.app.MediaRouteControllerDialog,android.graphics.Bitmap) -> -wrap0
    void animateGroupListItemsInternal(java.util.Map,java.util.Map) -> animateGroupListItemsInternal
    boolean isPlayActionSupported() -> isPlayActionSupported
    android.support.v7.media.MediaRouter$RouteGroup getGroup() -> getGroup
    int getDesiredArtHeight(int,int) -> getDesiredArtHeight
    void fadeInAddedRoutes() -> fadeInAddedRoutes
    void animateLayoutHeight(android.view.View,int) -> animateLayoutHeight
    void updateArtIconIfNeeded() -> updateArtIconIfNeeded
    boolean isVolumeControlAvailable(android.support.v7.media.MediaRouter$RouteInfo) -> isVolumeControlAvailable
    void finishAnimation(boolean) -> finishAnimation
    void clearLoadedBitmap() -> clearLoadedBitmap
    void startGroupListFadeInAnimationInternal() -> startGroupListFadeInAnimationInternal
    boolean -wrap2(android.support.v7.app.MediaRouteControllerDialog) -> -wrap2
    void setLayoutHeight(android.view.View,int) -> setLayoutHeight
    boolean isBitmapRecycled(android.graphics.Bitmap) -> isBitmapRecycled
    void rebuildVolumeGroupList(boolean) -> rebuildVolumeGroupList
    void updateVolumeControlLayout() -> updateVolumeControlLayout
    void updateLayout() -> updateLayout
    void updateLayoutHeight(boolean) -> updateLayoutHeight
    boolean -wrap3(android.support.v7.app.MediaRouteControllerDialog) -> -wrap3
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void <init>(android.content.Context) -> <init>
    void clearGroupListAnimation(boolean) -> clearGroupListAnimation
    boolean isIconChanged() -> isIconChanged
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void loadInterpolator() -> loadInterpolator
    void <clinit>() -> <clinit>
    boolean isPauseActionSupported() -> isPauseActionSupported
    void updateLayoutHeightInternal(boolean) -> updateLayoutHeightInternal
    int getLayoutHeight(android.view.View) -> getLayoutHeight
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.View onCreateMediaControlView(android.os.Bundle) -> onCreateMediaControlView
com.android.systemui.ViewInvertHelper$1 -> com.android.systemui.ViewInvertHelper$1:
    com.android.systemui.ViewInvertHelper this$0 -> this$0
    void <init>(com.android.systemui.ViewInvertHelper) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v17.leanback.widget.SpeechRecognitionCallback -> android.support.v17.leanback.widget.SpeechRecognitionCallback:
    void recognizeSpeech() -> recognizeSpeech
com.android.systemui.statusbar.phone.-$Lambda$XqY7sa9kEG02uT1QAmuBm8yeXIU$1 -> com.android.systemui.statusbar.phone.-$Lambda$XqY7sa9kEG02uT1QAmuBm8yeXIU$1:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(int,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.statusbar.BackDropView -> com.android.systemui.statusbar.BackDropView:
    java.lang.Runnable mOnVisibilityChangedRunnable -> mOnVisibilityChangedRunnable
    void setOnVisibilityChangedRunnable(java.lang.Runnable) -> setOnVisibilityChangedRunnable
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
com.android.systemui.classifier.AnglesClassifier -> com.android.systemui.classifier.AnglesClassifier:
    java.util.HashMap mStrokeMap -> mStrokeMap
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.stackdivider.ForcedResizableInfoActivity -> com.android.systemui.stackdivider.ForcedResizableInfoActivity:
    java.lang.Runnable mFinishRunnable -> mFinishRunnable
    void <init>() -> <init>
    void finish() -> finish
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setTaskDescription(android.app.ActivityManager$TaskDescription) -> setTaskDescription
com.android.systemui.statusbar.notification.NotificationBigTextTemplateViewWrapper -> com.android.systemui.statusbar.notification.NotificationBigTextTemplateViewWrapper:
    com.android.internal.widget.ImageFloatingTextView mBigtext -> mBigtext
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onContentUpdated(com.android.systemui.statusbar.ExpandableNotificationRow) -> onContentUpdated
    void resolveViews(android.service.notification.StatusBarNotification) -> resolveViews
    void updateTransformedTypes() -> updateTransformedTypes
com.android.systemui.recents.events.ui.UpdateFreeformTaskViewVisibilityEvent -> com.android.systemui.recents.events.ui.UpdateFreeformTaskViewVisibilityEvent:
    boolean visible -> visible
    void <init>(boolean) -> <init>
com.android.keyguard.PasswordTextView$CharState$1 -> com.android.keyguard.PasswordTextView$CharState$1:
    boolean mCancelled -> mCancelled
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24:
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
com.android.systemui.keyguard.WakefulnessLifecycle$Observer -> com.android.systemui.keyguard.WakefulnessLifecycle$Observer:
    void onFinishedGoingToSleep() -> onFinishedGoingToSleep
    void onFinishedWakingUp() -> onFinishedWakingUp
    void onStartedGoingToSleep() -> onStartedGoingToSleep
    void onStartedWakingUp() -> onStartedWakingUp
com.android.systemui.tuner.BetterListPreference -> com.android.systemui.tuner.BetterListPreference:
    java.lang.CharSequence mSummary -> mSummary
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.CharSequence getSummary() -> getSummary
    void setSummary(java.lang.CharSequence) -> setSummary
android.support.v17.leanback.widget.picker.Picker$PickerScrollArrayAdapter -> android.support.v17.leanback.widget.picker.Picker$PickerScrollArrayAdapter:
    int mColIndex -> mColIndex
    int mResource -> mResource
    android.support.v17.leanback.widget.picker.Picker this$0 -> this$0
    android.support.v17.leanback.widget.picker.PickerColumn mData -> mData
    int mTextViewResourceId -> mTextViewResourceId
    void onBindViewHolder(android.support.v17.leanback.widget.picker.Picker$ViewHolder,int) -> onBindViewHolder
    android.support.v17.leanback.widget.picker.Picker$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void <init>(android.support.v17.leanback.widget.picker.Picker,android.content.Context,int,int,int) -> <init>
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onViewAttachedToWindow(android.support.v17.leanback.widget.picker.Picker$ViewHolder) -> onViewAttachedToWindow
    int getItemCount() -> getItemCount
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
com.android.systemui.ForegroundServiceControllerImpl -> com.android.systemui.ForegroundServiceControllerImpl:
    java.lang.Object mMutex -> mMutex
    android.util.SparseArray mUserServices -> mUserServices
    void <init>(android.content.Context) -> <init>
    void addNotification(android.service.notification.StatusBarNotification,int) -> addNotification
    boolean isDungeonNeededForUser(int) -> isDungeonNeededForUser
    boolean isDungeonNotification(android.service.notification.StatusBarNotification) -> isDungeonNotification
    boolean removeNotification(android.service.notification.StatusBarNotification) -> removeNotification
    void updateNotification(android.service.notification.StatusBarNotification,int) -> updateNotification
com.android.settingslib.bluetooth.BluetoothEventManager$DockEventHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$DockEventHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$DockEventHandler) -> <init>
android.support.v17.leanback.widget.Parallax$PropertyMarkerValue -> android.support.v17.leanback.widget.Parallax$PropertyMarkerValue:
    java.lang.Object mProperty -> mProperty
    java.lang.Object getProperty() -> getProperty
com.android.systemui.recents.misc.Utilities -> com.android.systemui.recents.misc.Utilities:
    android.util.Property DRAWABLE_ALPHA -> DRAWABLE_ALPHA
    android.util.Property DRAWABLE_RECT -> DRAWABLE_RECT
    android.animation.RectEvaluator RECT_EVALUATOR -> RECT_EVALUATOR
    android.graphics.Rect EMPTY_RECT -> EMPTY_RECT
    com.android.systemui.recents.misc.RectFEvaluator RECTF_EVALUATOR -> RECTF_EVALUATOR
    void scaleRectAboutCenter(android.graphics.RectF,float) -> scaleRectAboutCenter
    float computeContrastBetweenColors(int,int) -> computeContrastBetweenColors
    float mapRange(float,float,float) -> mapRange
    java.lang.String dumpRect(android.graphics.Rect) -> dumpRect
    int getColorWithOverlay(int,int,float) -> getColorWithOverlay
    android.view.ViewStub findViewStubById(android.view.View,int) -> findViewStubById
    android.view.View findParent(android.view.View,java.lang.Class) -> findParent
    float clamp(float,float,float) -> clamp
    float clamp01(float) -> clamp01
    android.content.res.Configuration getAppConfiguration(android.content.Context) -> getAppConfiguration
    void cancelAnimationWithoutCallbacks(android.animation.Animator) -> cancelAnimationWithoutCallbacks
    void <init>() -> <init>
    android.util.ArraySet arrayToSet(java.lang.Object[],android.util.ArraySet) -> arrayToSet
    int clamp(int,int,int) -> clamp
    android.view.ViewStub findViewStubById(android.app.Activity,int) -> findViewStubById
    boolean isDescendentAccessibilityFocused(android.view.View) -> isDescendentAccessibilityFocused
    void matchTaskListSize(java.util.List,java.util.List) -> matchTaskListSize
    void removeAnimationListenersRecursive(android.animation.Animator) -> removeAnimationListenersRecursive
    void setViewFrameFromTranslation(android.view.View) -> setViewFrameFromTranslation
    void <clinit>() -> <clinit>
com.android.settingslib.animation.AppearAnimationUtils$2 -> com.android.settingslib.animation.AppearAnimationUtils$2:
    java.lang.Runnable val$endRunnable -> val$endRunnable
    com.android.settingslib.animation.AppearAnimationUtils this$0 -> this$0
    void <init>(com.android.settingslib.animation.AppearAnimationUtils,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.ScreenPinningRequest -> com.android.systemui.recents.ScreenPinningRequest:
    android.view.accessibility.AccessibilityManager mAccessibilityService -> mAccessibilityService
    android.content.Context mContext -> mContext
    com.android.systemui.recents.ScreenPinningRequest$RequestWindowView mRequestWindow -> mRequestWindow
    android.view.WindowManager mWindowManager -> mWindowManager
    int taskId -> taskId
    void <init>(android.content.Context) -> <init>
    void onConfigurationChanged() -> onConfigurationChanged
    void showPrompt(int,boolean) -> showPrompt
    void clearPrompt() -> clearPrompt
    android.widget.FrameLayout$LayoutParams getRequestLayoutParams(int) -> getRequestLayoutParams
    android.view.WindowManager$LayoutParams getWindowLayoutParams() -> getWindowLayoutParams
    void onClick(android.view.View) -> onClick
    android.view.accessibility.AccessibilityManager -get0(com.android.systemui.recents.ScreenPinningRequest) -> -get0
    android.view.WindowManager -get1(com.android.systemui.recents.ScreenPinningRequest) -> -get1
com.android.systemui.plugins.PluginFragment -> com.android.systemui.plugins.PluginFragment:
    android.content.Context mPluginContext -> mPluginContext
    void onCreate(android.content.Context,android.content.Context) -> onCreate
    void <init>() -> <init>
    android.content.Context getContext() -> getContext
    android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.android.systemui.volume.ZenModePanel$Callback -> com.android.systemui.volume.ZenModePanel$Callback:
    void onExpanded(boolean) -> onExpanded
    void onInteraction() -> onInteraction
    void onPrioritySettings() -> onPrioritySettings
com.android.systemui.statusbar.phone.StatusBar$14 -> com.android.systemui.statusbar.phone.StatusBar$14:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.qs.external.TileServiceManager -> com.android.systemui.qs.external.TileServiceManager:
    java.lang.String PREFS_FILE -> PREFS_FILE
    boolean mBindAllowed -> mBindAllowed
    boolean mBindRequested -> mBindRequested
    boolean mBound -> mBound
    android.os.Handler mHandler -> mHandler
    boolean mJustBound -> mJustBound
    java.lang.Runnable mJustBoundOver -> mJustBoundOver
    long mLastUpdate -> mLastUpdate
    boolean mPendingBind -> mPendingBind
    int mPriority -> mPriority
    com.android.systemui.qs.external.TileServices mServices -> mServices
    boolean mShowingDialog -> mShowingDialog
    com.android.systemui.qs.external.TileLifecycleManager mStateManager -> mStateManager
    java.lang.Runnable mUnbind -> mUnbind
    android.content.BroadcastReceiver mUninstallReceiver -> mUninstallReceiver
    int getBindPriority() -> getBindPriority
    android.os.IBinder getToken() -> getToken
    void <init>(com.android.systemui.qs.external.TileServices,android.os.Handler,android.content.ComponentName,android.service.quicksettings.Tile) -> <init>
    void setBindAllowed(boolean) -> setBindAllowed
    void handleDestroy() -> handleDestroy
    void calculateBindPriority(long) -> calculateBindPriority
    boolean isActiveTile() -> isActiveTile
    void setBindRequested(boolean) -> setBindRequested
    android.service.quicksettings.IQSTileService getTileService() -> getTileService
    void clearPendingBind() -> clearPendingBind
    void setLastUpdate(long) -> setLastUpdate
    void setShowingDialog(boolean) -> setShowingDialog
    void setTileChangeListener(com.android.systemui.qs.external.TileLifecycleManager$TileChangeListener) -> setTileChangeListener
    boolean hasPendingBind() -> hasPendingBind
    void <init>(com.android.systemui.qs.external.TileServices,android.os.Handler,com.android.systemui.qs.external.TileLifecycleManager) -> <init>
    void bindService() -> bindService
    void unbindService() -> unbindService
    boolean -get0(com.android.systemui.qs.external.TileServiceManager) -> -get0
    boolean -get1(com.android.systemui.qs.external.TileServiceManager) -> -get1
    com.android.systemui.qs.external.TileServices -get2(com.android.systemui.qs.external.TileServiceManager) -> -get2
    com.android.systemui.qs.external.TileLifecycleManager -get3(com.android.systemui.qs.external.TileServiceManager) -> -get3
    boolean -set0(com.android.systemui.qs.external.TileServiceManager,boolean) -> -set0
    void -wrap0(com.android.systemui.qs.external.TileServiceManager) -> -wrap0
com.android.systemui.statusbar.phone.VelocityTrackerFactory -> com.android.systemui.statusbar.phone.VelocityTrackerFactory:
    void <init>() -> <init>
    com.android.systemui.statusbar.phone.VelocityTrackerInterface obtain(android.content.Context) -> obtain
android.support.v17.leanback.widget.SearchOrbView$1 -> android.support.v17.leanback.widget.SearchOrbView$1:
    android.support.v17.leanback.widget.SearchOrbView this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.SearchOrbView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.graphics.drawable.VectorDrawableCommon -> android.support.graphics.drawable.VectorDrawableCommon:
    android.graphics.drawable.Drawable mDelegateDrawable -> mDelegateDrawable
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    void clearColorFilter() -> clearColorFilter
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    int getMinimumHeight() -> getMinimumHeight
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    void setFilterBitmap(boolean) -> setFilterBitmap
    int[] getState() -> getState
    void setChangingConfigurations(int) -> setChangingConfigurations
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    int getMinimumWidth() -> getMinimumWidth
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    boolean setState(int[]) -> setState
    void setHotspot(float,float) -> setHotspot
    void <init>() -> <init>
    boolean getPadding(android.graphics.Rect) -> getPadding
    boolean onLevelChange(int) -> onLevelChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.android.systemui.util.leak.TrackedObjects -> com.android.systemui.util.leak.TrackedObjects:
    java.util.WeakHashMap mTrackedClasses -> mTrackedClasses
    com.android.systemui.util.leak.TrackedCollections mTrackedCollections -> mTrackedCollections
    void <init>(com.android.systemui.util.leak.TrackedCollections) -> <init>
    boolean isTrackedObject(java.util.Collection) -> isTrackedObject
    void track(java.lang.Object) -> track
com.android.systemui.car.CarSystemUIFactory -> com.android.systemui.car.CarSystemUIFactory:
    void <init>() -> <init>
    void injectDependencies(android.util.ArrayMap,android.content.Context) -> injectDependencies
    java.lang.Object lambda$-com_android_systemui_car_CarSystemUIFactory_1311(android.content.Context) -> lambda$-com_android_systemui_car_CarSystemUIFactory_1311
com.android.systemui.qs.external.TileServices$3 -> com.android.systemui.qs.external.TileServices$3:
    com.android.systemui.qs.external.TileServices this$0 -> this$0
    android.content.ComponentName val$componentName -> val$componentName
    com.android.internal.statusbar.StatusBarIcon val$statusIcon -> val$statusIcon
    void <init>(com.android.systemui.qs.external.TileServices,android.content.ComponentName,com.android.internal.statusbar.StatusBarIcon) -> <init>
    void run() -> run
android.support.v4.widget.CircularProgressDrawable -> android.support.v4.widget.CircularProgressDrawable:
    boolean mFinishing -> mFinishing
    float mRotation -> mRotation
    float mRotationCount -> mRotationCount
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.content.res.Resources mResources -> mResources
    int[] COLORS -> COLORS
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> MATERIAL_INTERPOLATOR
    android.animation.Animator mAnimator -> mAnimator
    android.support.v4.widget.CircularProgressDrawable$Ring mRing -> mRing
    void setAlpha(int) -> setAlpha
    boolean -get0(android.support.v4.widget.CircularProgressDrawable) -> -get0
    void -wrap0(android.support.v4.widget.CircularProgressDrawable,float,android.support.v4.widget.CircularProgressDrawable$Ring,boolean) -> -wrap0
    void applyTransformation(float,android.support.v4.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    void setupAnimators() -> setupAnimators
    int evaluateColorChange(float,int,int) -> evaluateColorChange
    void setProgressRotation(float) -> setProgressRotation
    void -wrap1(android.support.v4.widget.CircularProgressDrawable,float,android.support.v4.widget.CircularProgressDrawable$Ring) -> -wrap1
    void updateRingColor(float,android.support.v4.widget.CircularProgressDrawable$Ring) -> updateRingColor
    int getAlpha() -> getAlpha
    void setStrokeWidth(float) -> setStrokeWidth
    int getOpacity() -> getOpacity
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    float -set1(android.support.v4.widget.CircularProgressDrawable,float) -> -set1
    void setStyle(int) -> setStyle
    boolean isRunning() -> isRunning
    void applyFinishTranslation(float,android.support.v4.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    void setRotation(float) -> setRotation
    void stop() -> stop
    void setArrowEnabled(boolean) -> setArrowEnabled
    void start() -> start
    void draw(android.graphics.Canvas) -> draw
    void setArrowScale(float) -> setArrowScale
    void setStartEndTrim(float,float) -> setStartEndTrim
    boolean -set0(android.support.v4.widget.CircularProgressDrawable,boolean) -> -set0
    void <init>(android.content.Context) -> <init>
    void <clinit>() -> <clinit>
    void setSizeParameters(float,float,float,float) -> setSizeParameters
    float -get1(android.support.v4.widget.CircularProgressDrawable) -> -get1
com.android.systemui.qs.tileimpl.QSTileBaseView$H -> com.android.systemui.qs.tileimpl.QSTileBaseView$H:
    com.android.systemui.qs.tileimpl.QSTileBaseView this$0 -> this$0
    void <init>(com.android.systemui.qs.tileimpl.QSTileBaseView) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v7.widget.helper.ItemTouchHelper$1 -> android.support.v7.widget.helper.ItemTouchHelper$1:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    void run() -> run
android.support.v7.appcompat.R$id -> android.support.v7.appcompat.R$id:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int alertTitle -> alertTitle
    int buttonPanel -> buttonPanel
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int edit_query -> edit_query
    int expand_activities_button -> expand_activities_button
    int icon -> icon
    int image -> image
    int list_item -> list_item
    int message -> message
    int parentPanel -> parentPanel
    int scrollIndicatorDown -> scrollIndicatorDown
    int scrollIndicatorUp -> scrollIndicatorUp
    int scrollView -> scrollView
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int shortcut -> shortcut
    int spacer -> spacer
    int split_action_bar -> split_action_bar
    int submenuarrow -> submenuarrow
    int submit_area -> submit_area
    int textSpacerNoButtons -> textSpacerNoButtons
    int textSpacerNoTitle -> textSpacerNoTitle
    int title -> title
    int titleDividerNoCustom -> titleDividerNoCustom
    int title_template -> title_template
    int topPanel -> topPanel
    void <init>() -> <init>
com.android.systemui.Interpolators -> com.android.systemui.Interpolators:
    android.view.animation.Interpolator FAST_OUT_SLOW_IN -> FAST_OUT_SLOW_IN
    android.view.animation.Interpolator ALPHA_OUT -> ALPHA_OUT
    android.view.animation.Interpolator ALPHA_IN -> ALPHA_IN
    android.view.animation.Interpolator ICON_OVERSHOT -> ICON_OVERSHOT
    android.view.animation.Interpolator ACCELERATE_DECELERATE -> ACCELERATE_DECELERATE
    android.view.animation.Interpolator LINEAR_OUT_SLOW_IN -> LINEAR_OUT_SLOW_IN
    android.view.animation.Interpolator FAST_OUT_LINEAR_IN -> FAST_OUT_LINEAR_IN
    android.view.animation.Interpolator LINEAR -> LINEAR
    android.view.animation.Interpolator TOUCH_RESPONSE -> TOUCH_RESPONSE
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator HEADS_UP_APPEAR -> HEADS_UP_APPEAR
    android.view.animation.Interpolator ACCELERATE -> ACCELERATE
    android.view.animation.Interpolator CUSTOM_40_40 -> CUSTOM_40_40
    android.view.animation.Interpolator PANEL_CLOSE_ACCELERATED -> PANEL_CLOSE_ACCELERATED
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.power.PowerNotificationWarnings$Receiver -> com.android.systemui.power.PowerNotificationWarnings$Receiver:
    com.android.systemui.power.PowerNotificationWarnings this$0 -> this$0
    void <init>(com.android.systemui.power.PowerNotificationWarnings) -> <init>
    void init() -> init
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(com.android.systemui.power.PowerNotificationWarnings,com.android.systemui.power.PowerNotificationWarnings$Receiver) -> <init>
android.support.v7.app.MediaRouteControllerDialog$3 -> android.support.v7.app.MediaRouteControllerDialog$3:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.CommandQueue$CommandQueueStart -> com.android.systemui.statusbar.CommandQueue$CommandQueueStart:
    void <init>() -> <init>
    void start() -> start
android.support.v7.widget.DefaultItemAnimator$5 -> android.support.v7.widget.DefaultItemAnimator$5:
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.view.View val$view -> val$view
    android.view.ViewPropertyAnimator val$animation -> val$animation
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.events.activity.ConfigurationChangedEvent -> com.android.systemui.recents.events.activity.ConfigurationChangedEvent:
    boolean fromDeviceOrientationChange -> fromDeviceOrientationChange
    boolean fromDisplayDensityChange -> fromDisplayDensityChange
    boolean fromMultiWindow -> fromMultiWindow
    boolean hasStackTasks -> hasStackTasks
    void <init>(boolean,boolean,boolean,boolean) -> <init>
com.android.systemui.qs.tiles.CastTile$CastDetailAdapter$1 -> com.android.systemui.qs.tiles.CastTile$CastDetailAdapter$1:
    com.android.systemui.qs.tiles.CastTile$CastDetailAdapter this$1 -> this$1
    void <init>(com.android.systemui.qs.tiles.CastTile$CastDetailAdapter) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.android.systemui.statusbar.GestureRecorder$Gesture$TagRecord -> com.android.systemui.statusbar.GestureRecorder$Gesture$TagRecord:
    java.lang.String info -> info
    java.lang.String tag -> tag
    com.android.systemui.statusbar.GestureRecorder$Gesture this$1 -> this$1
    void <init>(com.android.systemui.statusbar.GestureRecorder$Gesture,long,java.lang.String,java.lang.String) -> <init>
com.android.systemui.tuner.StatusBarSwitch -> com.android.systemui.tuner.StatusBarSwitch:
    java.util.Set mBlacklist -> mBlacklist
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    boolean persistBoolean(boolean) -> persistBoolean
    void setList(java.util.Set) -> setList
com.android.systemui.statusbar.car.UserGridView$WrappedBaseUserAdapter -> com.android.systemui.statusbar.car.UserGridView$WrappedBaseUserAdapter:
    com.android.systemui.statusbar.car.UserGridView$Adapter mContainer -> mContainer
    com.android.systemui.statusbar.car.UserGridView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.UserGridView,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.car.UserGridView$Adapter) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v7.widget.RecyclerView$RecyclerViewDataObserver -> android.support.v7.widget.RecyclerView$RecyclerViewDataObserver:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void onChanged() -> onChanged
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void triggerUpdateProcessor() -> triggerUpdateProcessor
    void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
com.android.systemui.statusbar.NotificationInfo$OnSettingsClickListener -> com.android.systemui.statusbar.NotificationInfo$OnSettingsClickListener:
    void onClick(android.view.View,android.app.NotificationChannel,int) -> onClick
android.support.v7.widget.helper.ItemTouchHelper$Callback$1 -> android.support.v7.widget.helper.ItemTouchHelper$Callback$1:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
com.android.systemui.tuner.LockscreenFragment$StaticShortcut -> com.android.systemui.tuner.LockscreenFragment$StaticShortcut:
    android.content.Context mContext -> mContext
    com.android.systemui.tuner.ShortcutParser$Shortcut mShortcut -> mShortcut
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    java.lang.Boolean getExpando() -> getExpando
    java.lang.String getLabel() -> getLabel
com.android.systemui.statusbar.notification.NotificationInflater$AsyncInflationTask -> com.android.systemui.statusbar.notification.NotificationInflater$AsyncInflationTask:
    com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback mCallback -> mCallback
    android.os.CancellationSignal mCancellationSignal -> mCancellationSignal
    android.content.Context mContext -> mContext
    java.lang.Exception mError -> mError
    boolean mIsChildInGroup -> mIsChildInGroup
    boolean mIsLowPriority -> mIsLowPriority
    int mReInflateFlags -> mReInflateFlags
    boolean mRedactAmbient -> mRedactAmbient
    android.widget.RemoteViews$OnClickHandler mRemoteViewClickHandler -> mRemoteViewClickHandler
    com.android.systemui.statusbar.ExpandableNotificationRow mRow -> mRow
    android.service.notification.StatusBarNotification mSbn -> mSbn
    boolean mUsesIncreasedHeadsUpHeight -> mUsesIncreasedHeadsUpHeight
    boolean mUsesIncreasedHeight -> mUsesIncreasedHeight
    void <init>(android.service.notification.StatusBarNotification,int,com.android.systemui.statusbar.ExpandableNotificationRow,boolean,boolean,boolean,boolean,boolean,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback,android.widget.RemoteViews$OnClickHandler) -> <init>
    void abort() -> abort
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress doInBackground(java.lang.Void[]) -> doInBackground
    int getReInflateFlags() -> getReInflateFlags
    void handleError(java.lang.Exception) -> handleError
    void handleInflationException(android.service.notification.StatusBarNotification,java.lang.Exception) -> handleInflationException
    void onAsyncInflationFinished(com.android.systemui.statusbar.NotificationData$Entry) -> onAsyncInflationFinished
    void onPostExecute(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> onPostExecute
    void supersedeTask(com.android.systemui.statusbar.InflationTask) -> supersedeTask
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void <init>(android.service.notification.StatusBarNotification,int,com.android.systemui.statusbar.ExpandableNotificationRow,boolean,boolean,boolean,boolean,boolean,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback,android.widget.RemoteViews$OnClickHandler,com.android.systemui.statusbar.notification.NotificationInflater$AsyncInflationTask) -> <init>
com.android.systemui.Dependency -> com.android.systemui.Dependency:
    com.android.systemui.Dependency$DependencyKey BG_LOOPER -> BG_LOOPER
    com.android.systemui.Dependency$DependencyKey TIME_TICK_HANDLER -> TIME_TICK_HANDLER
    com.android.systemui.Dependency$DependencyKey MAIN_HANDLER -> MAIN_HANDLER
    com.android.systemui.Dependency$DependencyKey LEAK_REPORT_EMAIL -> LEAK_REPORT_EMAIL
    android.util.ArrayMap mDependencies -> mDependencies
    android.util.ArrayMap mProviders -> mProviders
    com.android.systemui.Dependency sDependency -> sDependency
    java.lang.Object get(java.lang.Class) -> get
    java.lang.Object get(com.android.systemui.Dependency$DependencyKey) -> get
    void initDependencies(android.content.Context) -> initDependencies
    void destroy(java.lang.Class,java.util.function.Consumer) -> destroy
    void clearDependencies() -> clearDependencies
    void <init>() -> <init>
    java.lang.Object createDependency(java.lang.Object) -> createDependency
    void destroyDependency(java.lang.Class,java.util.function.Consumer) -> destroyDependency
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object getDependency(java.lang.Class) -> getDependency
    java.lang.Object getDependency(com.android.systemui.Dependency$DependencyKey) -> getDependency
    java.lang.Object getDependencyInner(java.lang.Object) -> getDependencyInner
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void start() -> start
    void <clinit>() -> <clinit>
    java.lang.Object lambda$-com_android_systemui_Dependency_7617() -> lambda$-com_android_systemui_Dependency_7617
    java.lang.Object lambda$-com_android_systemui_Dependency_7817() -> lambda$-com_android_systemui_Dependency_7817
    java.lang.Object lambda$-com_android_systemui_Dependency_8062() -> lambda$-com_android_systemui_Dependency_8062
    java.lang.Object lambda$-com_android_systemui_Dependency_8152() -> lambda$-com_android_systemui_Dependency_8152
    java.lang.Object lambda$-com_android_systemui_Dependency_8244() -> lambda$-com_android_systemui_Dependency_8244
    java.lang.Object lambda$-com_android_systemui_Dependency_8355() -> lambda$-com_android_systemui_Dependency_8355
    java.lang.Object lambda$-com_android_systemui_Dependency_8501() -> lambda$-com_android_systemui_Dependency_8501
    java.lang.Object lambda$-com_android_systemui_Dependency_8639() -> lambda$-com_android_systemui_Dependency_8639
    java.lang.Object lambda$-com_android_systemui_Dependency_8780() -> lambda$-com_android_systemui_Dependency_8780
    java.lang.Object lambda$-com_android_systemui_Dependency_8894() -> lambda$-com_android_systemui_Dependency_8894
    java.lang.Object lambda$-com_android_systemui_Dependency_9103() -> lambda$-com_android_systemui_Dependency_9103
    java.lang.Object lambda$-com_android_systemui_Dependency_9241() -> lambda$-com_android_systemui_Dependency_9241
    java.lang.Object lambda$-com_android_systemui_Dependency_9347() -> lambda$-com_android_systemui_Dependency_9347
    java.lang.Object lambda$-com_android_systemui_Dependency_9456() -> lambda$-com_android_systemui_Dependency_9456
    java.lang.Object lambda$-com_android_systemui_Dependency_9566() -> lambda$-com_android_systemui_Dependency_9566
    java.lang.Object lambda$-com_android_systemui_Dependency_9678() -> lambda$-com_android_systemui_Dependency_9678
    java.lang.Object lambda$-com_android_systemui_Dependency_9918() -> lambda$-com_android_systemui_Dependency_9918
    java.lang.Object lambda$-com_android_systemui_Dependency_10028() -> lambda$-com_android_systemui_Dependency_10028
    java.lang.Object lambda$-com_android_systemui_Dependency_10142() -> lambda$-com_android_systemui_Dependency_10142
    java.lang.Object lambda$-com_android_systemui_Dependency_10259() -> lambda$-com_android_systemui_Dependency_10259
    java.lang.Object lambda$-com_android_systemui_Dependency_10377() -> lambda$-com_android_systemui_Dependency_10377
    java.lang.Object lambda$-com_android_systemui_Dependency_10490() -> lambda$-com_android_systemui_Dependency_10490
    java.lang.Object lambda$-com_android_systemui_Dependency_10623() -> lambda$-com_android_systemui_Dependency_10623
    java.lang.Object lambda$-com_android_systemui_Dependency_10744() -> lambda$-com_android_systemui_Dependency_10744
    java.lang.Object lambda$-com_android_systemui_Dependency_10859() -> lambda$-com_android_systemui_Dependency_10859
    java.lang.Object lambda$-com_android_systemui_Dependency_10960() -> lambda$-com_android_systemui_Dependency_10960
    java.lang.Object lambda$-com_android_systemui_Dependency_11112() -> lambda$-com_android_systemui_Dependency_11112
    java.lang.Object -com_android_systemui_Dependency-mthref-0() -> -com_android_systemui_Dependency-mthref-0
    java.lang.Object lambda$-com_android_systemui_Dependency_11283() -> lambda$-com_android_systemui_Dependency_11283
    java.lang.Object lambda$-com_android_systemui_Dependency_11340() -> lambda$-com_android_systemui_Dependency_11340
    java.lang.Object lambda$-com_android_systemui_Dependency_11539() -> lambda$-com_android_systemui_Dependency_11539
    java.lang.Object lambda$-com_android_systemui_Dependency_11755() -> lambda$-com_android_systemui_Dependency_11755
    java.lang.Object lambda$-com_android_systemui_Dependency_11864() -> lambda$-com_android_systemui_Dependency_11864
    java.lang.Object lambda$-com_android_systemui_Dependency_11975() -> lambda$-com_android_systemui_Dependency_11975
    java.lang.Object lambda$-com_android_systemui_Dependency_12091() -> lambda$-com_android_systemui_Dependency_12091
    java.lang.Object lambda$-com_android_systemui_Dependency_12212() -> lambda$-com_android_systemui_Dependency_12212
    java.lang.Object lambda$-com_android_systemui_Dependency_12325() -> lambda$-com_android_systemui_Dependency_12325
    java.lang.Object lambda$-com_android_systemui_Dependency_12423() -> lambda$-com_android_systemui_Dependency_12423
    java.lang.Object lambda$-com_android_systemui_Dependency_12521() -> lambda$-com_android_systemui_Dependency_12521
    java.lang.Object lambda$-com_android_systemui_Dependency_12626() -> lambda$-com_android_systemui_Dependency_12626
    java.lang.Object lambda$-com_android_systemui_Dependency_12744() -> lambda$-com_android_systemui_Dependency_12744
    java.lang.Object lambda$-com_android_systemui_Dependency_12876() -> lambda$-com_android_systemui_Dependency_12876
    java.lang.Object lambda$-com_android_systemui_Dependency_13004() -> lambda$-com_android_systemui_Dependency_13004
    java.lang.Object lambda$-com_android_systemui_Dependency_13114() -> lambda$-com_android_systemui_Dependency_13114
    java.lang.Object lambda$-com_android_systemui_Dependency_13217() -> lambda$-com_android_systemui_Dependency_13217
    java.lang.Object lambda$-com_android_systemui_Dependency_13509() -> lambda$-com_android_systemui_Dependency_13509
    java.lang.Object lambda$-com_android_systemui_Dependency_13604() -> lambda$-com_android_systemui_Dependency_13604
    java.lang.Object lambda$-com_android_systemui_Dependency_13715() -> lambda$-com_android_systemui_Dependency_13715
    java.lang.Object -com_android_systemui_Dependency-mthref-1() -> -com_android_systemui_Dependency-mthref-1
    java.lang.Object lambda$-com_android_systemui_Dependency_13889() -> lambda$-com_android_systemui_Dependency_13889
    java.lang.Object lambda$-com_android_systemui_Dependency_13979() -> lambda$-com_android_systemui_Dependency_13979
    java.lang.Object lambda$-com_android_systemui_Dependency_14144() -> lambda$-com_android_systemui_Dependency_14144
    java.lang.Object lambda$-com_android_systemui_Dependency_14231() -> lambda$-com_android_systemui_Dependency_14231
    boolean lambda$-com_android_systemui_Dependency_14696(java.lang.Object) -> lambda$-com_android_systemui_Dependency_14696
    void lambda$-com_android_systemui_Dependency_14753(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.Object) -> lambda$-com_android_systemui_Dependency_14753
    boolean lambda$-com_android_systemui_Dependency_14993(java.lang.Object) -> lambda$-com_android_systemui_Dependency_14993
    void lambda$-com_android_systemui_Dependency_15070(android.content.res.Configuration,java.lang.Object) -> lambda$-com_android_systemui_Dependency_15070
com.android.systemui.statusbar.phone.PanelView$2 -> com.android.systemui.statusbar.phone.PanelView$2:
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PanelView) -> <init>
    void run() -> run
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    boolean elevationSupported() -> elevationSupported
    void onMeasure(int,int) -> onMeasure
    void onAnimationStart() -> onAnimationStart
    void <init>(android.content.Context,int) -> <init>
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColor(int) -> setBackgroundColor
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    void <init>() -> <init>
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.app.MediaRouteControllerDialog$9 -> android.support.v7.app.MediaRouteControllerDialog$9:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent -> com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent:
    android.content.Context applicationContext -> applicationContext
    boolean visible -> visible
    void <init>(android.content.Context,boolean) -> <init>
android.support.v7.media.RegisteredMediaRouteProviderWatcher$2 -> android.support.v7.media.RegisteredMediaRouteProviderWatcher$2:
    android.support.v7.media.RegisteredMediaRouteProviderWatcher this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.media.RegisteredMediaRouteProviderWatcher) -> <init>
android.support.v7.app.TwilightCalculator -> android.support.v7.app.TwilightCalculator:
    android.support.v7.app.TwilightCalculator sInstance -> sInstance
    int state -> state
    long sunrise -> sunrise
    long sunset -> sunset
    android.support.v7.app.TwilightCalculator getInstance() -> getInstance
    void <init>() -> <init>
    void calculateTwilight(long,double,double) -> calculateTwilight
com.android.systemui.recents.views.TaskViewTransform -> com.android.systemui.recents.views.TaskViewTransform:
    float scale -> scale
    float alpha -> alpha
    float translationZ -> translationZ
    float dimAlpha -> dimAlpha
    float viewOutlineAlpha -> viewOutlineAlpha
    android.graphics.RectF rect -> rect
    boolean visible -> visible
    android.util.Property LTRB -> LTRB
    void reset() -> reset
    void <init>() -> <init>
    void fillIn(com.android.systemui.recents.views.TaskView) -> fillIn
    void copyFrom(com.android.systemui.recents.views.TaskViewTransform) -> copyFrom
    void applyToTaskView(com.android.systemui.recents.views.TaskView,java.util.ArrayList,com.android.systemui.recents.views.AnimationProps,boolean) -> applyToTaskView
    void reset(com.android.systemui.recents.views.TaskView) -> reset
    boolean isSame(com.android.systemui.recents.views.TaskViewTransform) -> isSame
    boolean hasAlphaChangedFrom(float) -> hasAlphaChangedFrom
    boolean hasRectChangedFrom(android.view.View) -> hasRectChangedFrom
    boolean hasScaleChangedFrom(float) -> hasScaleChangedFrom
    boolean hasTranslationZChangedFrom(float) -> hasTranslationZChangedFrom
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v17.leanback.widget.SearchBar$8 -> android.support.v17.leanback.widget.SearchBar$8:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
com.android.systemui.statusbar.ExpandableNotificationRow$5 -> com.android.systemui.statusbar.ExpandableNotificationRow$5:
    boolean cancelled -> cancelled
    com.android.systemui.statusbar.ExpandableNotificationRow this$0 -> this$0
    float val$leftTarget -> val$leftTarget
    void <init>(com.android.systemui.statusbar.ExpandableNotificationRow,float) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.DarkIconDispatcherImpl -> com.android.systemui.statusbar.phone.DarkIconDispatcherImpl:
    float mDarkIntensity -> mDarkIntensity
    int mDarkModeIconColorSingleTone -> mDarkModeIconColorSingleTone
    int mIconTint -> mIconTint
    int mLightModeIconColorSingleTone -> mLightModeIconColorSingleTone
    android.util.ArrayMap mReceivers -> mReceivers
    android.graphics.Rect mTintArea -> mTintArea
    com.android.systemui.statusbar.phone.LightBarTransitionsController mTransitionsController -> mTransitionsController
    void <init>(android.content.Context) -> <init>
    void addDarkReceiver(com.android.systemui.statusbar.policy.DarkIconDispatcher$DarkReceiver) -> addDarkReceiver
    void addDarkReceiver(android.widget.ImageView) -> addDarkReceiver
    void applyDark(android.widget.ImageView) -> applyDark
    void applyIconTint() -> applyIconTint
    com.android.systemui.statusbar.phone.LightBarTransitionsController getTransitionsController() -> getTransitionsController
    void removeDarkReceiver(com.android.systemui.statusbar.policy.DarkIconDispatcher$DarkReceiver) -> removeDarkReceiver
    void removeDarkReceiver(android.widget.ImageView) -> removeDarkReceiver
    void setIconTintInternal(float) -> setIconTintInternal
    void setIconsDarkArea(android.graphics.Rect) -> setIconsDarkArea
    void -com_android_systemui_statusbar_phone_DarkIconDispatcherImpl-mthref-0(float) -> -com_android_systemui_statusbar_phone_DarkIconDispatcherImpl-mthref-0
    void lambda$-com_android_systemui_statusbar_phone_DarkIconDispatcherImpl_2255(android.widget.ImageView,android.graphics.Rect,float,int) -> lambda$-com_android_systemui_statusbar_phone_DarkIconDispatcherImpl_2255
com.android.systemui.recents.events.activity.HideStackActionButtonEvent -> com.android.systemui.recents.events.activity.HideStackActionButtonEvent:
    boolean translate -> translate
    void <init>(boolean) -> <init>
    void <init>() -> <init>
android.support.v17.leanback.widget.picker.DatePicker$1 -> android.support.v17.leanback.widget.picker.DatePicker$1:
    android.support.v17.leanback.widget.picker.DatePicker this$0 -> this$0
    boolean val$animation -> val$animation
    void <init>(android.support.v17.leanback.widget.picker.DatePicker,boolean) -> <init>
    void run() -> run
com.android.systemui.qs.QSDetailItems$Item -> com.android.systemui.qs.QSDetailItems$Item:
    int icon -> icon
    java.lang.CharSequence line1 -> line1
    java.lang.CharSequence line2 -> line2
    java.lang.Object tag -> tag
    boolean canDisconnect -> canDisconnect
    int icon2 -> icon2
    com.android.systemui.plugins.qs.QSTile$Icon iconDrawable -> iconDrawable
    android.graphics.drawable.Drawable overlay -> overlay
    void <init>() -> <init>
com.android.systemui.classifier.SpeedEvaluator -> com.android.systemui.classifier.SpeedEvaluator:
    float evaluate(float) -> evaluate
    void <init>() -> <init>
android.support.v4.graphics.PathParser -> android.support.v4.graphics.PathParser:
    android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    float[] getFloats(java.lang.String) -> getFloats
    void addNode(java.util.ArrayList,char,float[]) -> addNode
    void extract(java.lang.String,int,android.support.v4.graphics.PathParser$ExtractFloatResult) -> extract
    float[] copyOfRange(float[],int,int) -> copyOfRange
    android.support.v4.graphics.PathParser$PathDataNode[] deepCopyNodes(android.support.v4.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    int nextStart(java.lang.String,int) -> nextStart
    void <init>() -> <init>
    android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    boolean canMorph(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> canMorph
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.Toolbar$SavedState$1:
    android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    android.support.v7.widget.Toolbar$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.plugins.R$string -> com.android.systemui.plugins.R$string:
    int China_Mobile -> China_Mobile
    int China_Mobile_HD -> China_Mobile_HD
    int China_Telecom -> China_Telecom
    int China_Unicom -> China_Unicom
    int abbrev_wday_month_day_no_year -> abbrev_wday_month_day_no_year
    int abbrev_wday_month_day_no_year_alarm -> abbrev_wday_month_day_no_year_alarm
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_capital_off -> abc_capital_off
    int abc_capital_on -> abc_capital_on
    int abc_font_family_body_1_material -> abc_font_family_body_1_material
    int abc_font_family_body_2_material -> abc_font_family_body_2_material
    int abc_font_family_button_material -> abc_font_family_button_material
    int abc_font_family_caption_material -> abc_font_family_caption_material
    int abc_font_family_display_1_material -> abc_font_family_display_1_material
    int abc_font_family_display_2_material -> abc_font_family_display_2_material
    int abc_font_family_display_3_material -> abc_font_family_display_3_material
    int abc_font_family_display_4_material -> abc_font_family_display_4_material
    int abc_font_family_headline_material -> abc_font_family_headline_material
    int abc_font_family_menu_material -> abc_font_family_menu_material
    int abc_font_family_subhead_material -> abc_font_family_subhead_material
    int abc_font_family_title_material -> abc_font_family_title_material
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int accessibility_accessibility_button -> accessibility_accessibility_button
    int accessibility_action_divider_bottom_full -> accessibility_action_divider_bottom_full
    int accessibility_action_divider_left_30 -> accessibility_action_divider_left_30
    int accessibility_action_divider_left_50 -> accessibility_action_divider_left_50
    int accessibility_action_divider_left_70 -> accessibility_action_divider_left_70
    int accessibility_action_divider_left_full -> accessibility_action_divider_left_full
    int accessibility_action_divider_right_full -> accessibility_action_divider_right_full
    int accessibility_action_divider_top_30 -> accessibility_action_divider_top_30
    int accessibility_action_divider_top_50 -> accessibility_action_divider_top_50
    int accessibility_action_divider_top_70 -> accessibility_action_divider_top_70
    int accessibility_action_divider_top_full -> accessibility_action_divider_top_full
    int accessibility_airplane_mode -> accessibility_airplane_mode
    int accessibility_ambient_display_charging -> accessibility_ambient_display_charging
    int accessibility_back -> accessibility_back
    int accessibility_battery_details -> accessibility_battery_details
    int accessibility_battery_full -> accessibility_battery_full
    int accessibility_battery_level -> accessibility_battery_level
    int accessibility_battery_level_charging -> accessibility_battery_level_charging
    int accessibility_battery_one_bar -> accessibility_battery_one_bar
    int accessibility_battery_three_bars -> accessibility_battery_three_bars
    int accessibility_battery_two_bars -> accessibility_battery_two_bars
    int accessibility_bluetooth_connected -> accessibility_bluetooth_connected
    int accessibility_bluetooth_disconnected -> accessibility_bluetooth_disconnected
    int accessibility_bluetooth_name -> accessibility_bluetooth_name
    int accessibility_bluetooth_tether -> accessibility_bluetooth_tether
    int accessibility_brightness -> accessibility_brightness
    int accessibility_camera_button -> accessibility_camera_button
    int accessibility_carrier_network_change_mode -> accessibility_carrier_network_change_mode
    int accessibility_cast_name -> accessibility_cast_name
    int accessibility_casting -> accessibility_casting
    int accessibility_casting_turned_off -> accessibility_casting_turned_off
    int accessibility_cell_data -> accessibility_cell_data
    int accessibility_cell_data_off -> accessibility_cell_data_off
    int accessibility_cell_data_on -> accessibility_cell_data_on
    int accessibility_clear_all -> accessibility_clear_all
    int accessibility_compatibility_zoom_button -> accessibility_compatibility_zoom_button
    int accessibility_compatibility_zoom_example -> accessibility_compatibility_zoom_example
    int accessibility_data_connection_1x -> accessibility_data_connection_1x
    int accessibility_data_connection_3_5g -> accessibility_data_connection_3_5g
    int accessibility_data_connection_3g -> accessibility_data_connection_3g
    int accessibility_data_connection_4g -> accessibility_data_connection_4g
    int accessibility_data_connection_4g_plus -> accessibility_data_connection_4g_plus
    int accessibility_data_connection_cdma -> accessibility_data_connection_cdma
    int accessibility_data_connection_edge -> accessibility_data_connection_edge
    int accessibility_data_connection_gprs -> accessibility_data_connection_gprs
    int accessibility_data_connection_hspa -> accessibility_data_connection_hspa
    int accessibility_data_connection_lte -> accessibility_data_connection_lte
    int accessibility_data_connection_lte_plus -> accessibility_data_connection_lte_plus
    int accessibility_data_connection_roaming -> accessibility_data_connection_roaming
    int accessibility_data_connection_wifi -> accessibility_data_connection_wifi
    int accessibility_data_one_bar -> accessibility_data_one_bar
    int accessibility_data_saver_off -> accessibility_data_saver_off
    int accessibility_data_saver_on -> accessibility_data_saver_on
    int accessibility_data_signal_full -> accessibility_data_signal_full
    int accessibility_data_three_bars -> accessibility_data_three_bars
    int accessibility_data_two_bars -> accessibility_data_two_bars
    int accessibility_desc_close -> accessibility_desc_close
    int accessibility_desc_connected -> accessibility_desc_connected
    int accessibility_desc_connecting -> accessibility_desc_connecting
    int accessibility_desc_lock_screen -> accessibility_desc_lock_screen
    int accessibility_desc_notification_icon -> accessibility_desc_notification_icon
    int accessibility_desc_notification_shade -> accessibility_desc_notification_shade
    int accessibility_desc_off -> accessibility_desc_off
    int accessibility_desc_on -> accessibility_desc_on
    int accessibility_desc_quick_settings -> accessibility_desc_quick_settings
    int accessibility_desc_quick_settings_edit -> accessibility_desc_quick_settings_edit
    int accessibility_desc_recent_apps -> accessibility_desc_recent_apps
    int accessibility_desc_settings -> accessibility_desc_settings
    int accessibility_desc_work_lock -> accessibility_desc_work_lock
    int accessibility_display_daltonizer_preference_subtitle -> accessibility_display_daltonizer_preference_subtitle
    int accessibility_display_daltonizer_preference_title -> accessibility_display_daltonizer_preference_title
    int accessibility_divider -> accessibility_divider
    int accessibility_ethernet_connected -> accessibility_ethernet_connected
    int accessibility_ethernet_disconnected -> accessibility_ethernet_disconnected
    int accessibility_gps_acquiring -> accessibility_gps_acquiring
    int accessibility_gps_enabled -> accessibility_gps_enabled
    int accessibility_home -> accessibility_home
    int accessibility_ime_switch_button -> accessibility_ime_switch_button
    int accessibility_key -> accessibility_key
    int accessibility_location_active -> accessibility_location_active
    int accessibility_managed_profile -> accessibility_managed_profile
    int accessibility_menu -> accessibility_menu
    int accessibility_multi_user_switch_inactive -> accessibility_multi_user_switch_inactive
    int accessibility_multi_user_switch_quick_contact -> accessibility_multi_user_switch_quick_contact
    int accessibility_multi_user_switch_switcher -> accessibility_multi_user_switch_switcher
    int accessibility_multi_user_switch_switcher_with_current -> accessibility_multi_user_switch_switcher_with_current
    int accessibility_no_battery -> accessibility_no_battery
    int accessibility_no_data -> accessibility_no_data
    int accessibility_no_phone -> accessibility_no_phone
    int accessibility_no_signal -> accessibility_no_signal
    int accessibility_no_sim -> accessibility_no_sim
    int accessibility_no_sims -> accessibility_no_sims
    int accessibility_no_wifi -> accessibility_no_wifi
    int accessibility_no_wimax -> accessibility_no_wimax
    int accessibility_not_connected -> accessibility_not_connected
    int accessibility_notification_dismissed -> accessibility_notification_dismissed
    int accessibility_notifications_button -> accessibility_notifications_button
    int accessibility_one_bar -> accessibility_one_bar
    int accessibility_overflow_action -> accessibility_overflow_action
    int accessibility_phone_button -> accessibility_phone_button
    int accessibility_phone_one_bar -> accessibility_phone_one_bar
    int accessibility_phone_signal_full -> accessibility_phone_signal_full
    int accessibility_phone_three_bars -> accessibility_phone_three_bars
    int accessibility_phone_two_bars -> accessibility_phone_two_bars
    int accessibility_qs_edit_add_tile_label -> accessibility_qs_edit_add_tile_label
    int accessibility_qs_edit_move_tile -> accessibility_qs_edit_move_tile
    int accessibility_qs_edit_position_label -> accessibility_qs_edit_position_label
    int accessibility_qs_edit_remove_tile -> accessibility_qs_edit_remove_tile
    int accessibility_qs_edit_tile_added -> accessibility_qs_edit_tile_added
    int accessibility_qs_edit_tile_label -> accessibility_qs_edit_tile_label
    int accessibility_qs_edit_tile_moved -> accessibility_qs_edit_tile_moved
    int accessibility_qs_edit_tile_removed -> accessibility_qs_edit_tile_removed
    int accessibility_quick_settings_airplane_changed_off -> accessibility_quick_settings_airplane_changed_off
    int accessibility_quick_settings_airplane_changed_on -> accessibility_quick_settings_airplane_changed_on
    int accessibility_quick_settings_airplane_off -> accessibility_quick_settings_airplane_off
    int accessibility_quick_settings_airplane_on -> accessibility_quick_settings_airplane_on
    int accessibility_quick_settings_alarm -> accessibility_quick_settings_alarm
    int accessibility_quick_settings_alarm_set -> accessibility_quick_settings_alarm_set
    int accessibility_quick_settings_battery -> accessibility_quick_settings_battery
    int accessibility_quick_settings_bluetooth -> accessibility_quick_settings_bluetooth
    int accessibility_quick_settings_bluetooth_changed_off -> accessibility_quick_settings_bluetooth_changed_off
    int accessibility_quick_settings_bluetooth_changed_on -> accessibility_quick_settings_bluetooth_changed_on
    int accessibility_quick_settings_bluetooth_connected -> accessibility_quick_settings_bluetooth_connected
    int accessibility_quick_settings_bluetooth_connecting -> accessibility_quick_settings_bluetooth_connecting
    int accessibility_quick_settings_bluetooth_off -> accessibility_quick_settings_bluetooth_off
    int accessibility_quick_settings_bluetooth_on -> accessibility_quick_settings_bluetooth_on
    int accessibility_quick_settings_close -> accessibility_quick_settings_close
    int accessibility_quick_settings_collapse -> accessibility_quick_settings_collapse
    int accessibility_quick_settings_color_inversion_changed_off -> accessibility_quick_settings_color_inversion_changed_off
    int accessibility_quick_settings_color_inversion_changed_on -> accessibility_quick_settings_color_inversion_changed_on
    int accessibility_quick_settings_data_saver_changed_off -> accessibility_quick_settings_data_saver_changed_off
    int accessibility_quick_settings_data_saver_changed_on -> accessibility_quick_settings_data_saver_changed_on
    int accessibility_quick_settings_detail -> accessibility_quick_settings_detail
    int accessibility_quick_settings_dnd -> accessibility_quick_settings_dnd
    int accessibility_quick_settings_dnd_alarms_on -> accessibility_quick_settings_dnd_alarms_on
    int accessibility_quick_settings_dnd_changed_off -> accessibility_quick_settings_dnd_changed_off
    int accessibility_quick_settings_dnd_changed_on -> accessibility_quick_settings_dnd_changed_on
    int accessibility_quick_settings_dnd_none_on -> accessibility_quick_settings_dnd_none_on
    int accessibility_quick_settings_dnd_off -> accessibility_quick_settings_dnd_off
    int accessibility_quick_settings_dnd_priority_on -> accessibility_quick_settings_dnd_priority_on
    int accessibility_quick_settings_edit -> accessibility_quick_settings_edit
    int accessibility_quick_settings_expand -> accessibility_quick_settings_expand
    int accessibility_quick_settings_flashlight_changed_off -> accessibility_quick_settings_flashlight_changed_off
    int accessibility_quick_settings_flashlight_changed_on -> accessibility_quick_settings_flashlight_changed_on
    int accessibility_quick_settings_flashlight_off -> accessibility_quick_settings_flashlight_off
    int accessibility_quick_settings_flashlight_on -> accessibility_quick_settings_flashlight_on
    int accessibility_quick_settings_flashlight_unavailable -> accessibility_quick_settings_flashlight_unavailable
    int accessibility_quick_settings_hotspot_changed_off -> accessibility_quick_settings_hotspot_changed_off
    int accessibility_quick_settings_hotspot_changed_on -> accessibility_quick_settings_hotspot_changed_on
    int accessibility_quick_settings_less_time -> accessibility_quick_settings_less_time
    int accessibility_quick_settings_location_changed_off -> accessibility_quick_settings_location_changed_off
    int accessibility_quick_settings_location_changed_on -> accessibility_quick_settings_location_changed_on
    int accessibility_quick_settings_location_off -> accessibility_quick_settings_location_off
    int accessibility_quick_settings_location_on -> accessibility_quick_settings_location_on
    int accessibility_quick_settings_mobile -> accessibility_quick_settings_mobile
    int accessibility_quick_settings_more_time -> accessibility_quick_settings_more_time
    int accessibility_quick_settings_no_internet -> accessibility_quick_settings_no_internet
    int accessibility_quick_settings_open_details -> accessibility_quick_settings_open_details
    int accessibility_quick_settings_open_settings -> accessibility_quick_settings_open_settings
    int accessibility_quick_settings_page -> accessibility_quick_settings_page
    int accessibility_quick_settings_rotation -> accessibility_quick_settings_rotation
    int accessibility_quick_settings_rotation_value -> accessibility_quick_settings_rotation_value
    int accessibility_quick_settings_settings -> accessibility_quick_settings_settings
    int accessibility_quick_settings_user -> accessibility_quick_settings_user
    int accessibility_quick_settings_wifi -> accessibility_quick_settings_wifi
    int accessibility_quick_settings_wifi_changed_off -> accessibility_quick_settings_wifi_changed_off
    int accessibility_quick_settings_wifi_changed_on -> accessibility_quick_settings_wifi_changed_on
    int accessibility_quick_settings_work_mode_changed_off -> accessibility_quick_settings_work_mode_changed_off
    int accessibility_quick_settings_work_mode_changed_on -> accessibility_quick_settings_work_mode_changed_on
    int accessibility_quick_settings_work_mode_off -> accessibility_quick_settings_work_mode_off
    int accessibility_quick_settings_work_mode_on -> accessibility_quick_settings_work_mode_on
    int accessibility_recent -> accessibility_recent
    int accessibility_recents_all_items_dismissed -> accessibility_recents_all_items_dismissed
    int accessibility_recents_item_dismissed -> accessibility_recents_item_dismissed
    int accessibility_recents_item_launched -> accessibility_recents_item_launched
    int accessibility_recents_item_open_app_info -> accessibility_recents_item_open_app_info
    int accessibility_recents_item_will_be_dismissed -> accessibility_recents_item_will_be_dismissed
    int accessibility_recents_task_header -> accessibility_recents_task_header
    int accessibility_remove_notification -> accessibility_remove_notification
    int accessibility_ringer_silent -> accessibility_ringer_silent
    int accessibility_ringer_vibrate -> accessibility_ringer_vibrate
    int accessibility_rotation_lock_off -> accessibility_rotation_lock_off
    int accessibility_rotation_lock_off_changed -> accessibility_rotation_lock_off_changed
    int accessibility_rotation_lock_on_landscape -> accessibility_rotation_lock_on_landscape
    int accessibility_rotation_lock_on_landscape_changed -> accessibility_rotation_lock_on_landscape_changed
    int accessibility_rotation_lock_on_portrait -> accessibility_rotation_lock_on_portrait
    int accessibility_rotation_lock_on_portrait_changed -> accessibility_rotation_lock_on_portrait_changed
    int accessibility_search_light -> accessibility_search_light
    int accessibility_settings_button -> accessibility_settings_button
    int accessibility_signal_full -> accessibility_signal_full
    int accessibility_status_bar_headphones -> accessibility_status_bar_headphones
    int accessibility_status_bar_headset -> accessibility_status_bar_headset
    int accessibility_status_bar_hotspot -> accessibility_status_bar_hotspot
    int accessibility_three_bars -> accessibility_three_bars
    int accessibility_tty_enabled -> accessibility_tty_enabled
    int accessibility_two_bars -> accessibility_two_bars
    int accessibility_unlock_button -> accessibility_unlock_button
    int accessibility_unlock_without_fingerprint -> accessibility_unlock_without_fingerprint
    int accessibility_voice_assist_button -> accessibility_voice_assist_button
    int accessibility_volume_collapse -> accessibility_volume_collapse
    int accessibility_volume_expand -> accessibility_volume_expand
    int accessibility_vpn_on -> accessibility_vpn_on
    int accessibility_waiting_for_fingerprint -> accessibility_waiting_for_fingerprint
    int accessibility_wifi_name -> accessibility_wifi_name
    int accessibility_wifi_off -> accessibility_wifi_off
    int accessibility_wifi_one_bar -> accessibility_wifi_one_bar
    int accessibility_wifi_security_type_none -> accessibility_wifi_security_type_none
    int accessibility_wifi_security_type_secured -> accessibility_wifi_security_type_secured
    int accessibility_wifi_signal_full -> accessibility_wifi_signal_full
    int accessibility_wifi_three_bars -> accessibility_wifi_three_bars
    int accessibility_wifi_two_bars -> accessibility_wifi_two_bars
    int accessibility_wimax_one_bar -> accessibility_wimax_one_bar
    int accessibility_wimax_signal_full -> accessibility_wimax_signal_full
    int accessibility_wimax_three_bars -> accessibility_wimax_three_bars
    int accessibility_wimax_two_bars -> accessibility_wimax_two_bars
    int accessibility_work_mode -> accessibility_work_mode
    int accessibility_zero_bars -> accessibility_zero_bars
    int active_input_method_subtypes -> active_input_method_subtypes
    int activity_launch_on_secondary_display_failed_text -> activity_launch_on_secondary_display_failed_text
    int activity_not_found -> activity_not_found
    int adb_keys_warning_message -> adb_keys_warning_message
    int adb_warning_message -> adb_warning_message
    int adb_warning_title -> adb_warning_title
    int add_tile -> add_tile
    int adjust_button_width -> adjust_button_width
    int airplane_mode -> airplane_mode
    int alarm_template -> alarm_template
    int alarm_template_far -> alarm_template_far
    int allow_mock_location -> allow_mock_location
    int allow_mock_location_summary -> allow_mock_location_summary
    int always_use_accessory -> always_use_accessory
    int always_use_device -> always_use_device
    int animator_duration_scale_title -> animator_duration_scale_title
    int apn_settings_not_available -> apn_settings_not_available
    int app_info -> app_info
    int app_label -> app_label
    int app_name -> app_name
    int app_process_limit_title -> app_process_limit_title
    int available_via_carrier -> available_via_carrier
    int available_via_passpoint -> available_via_passpoint
    int battery -> battery
    int battery_detail_charging_summary -> battery_detail_charging_summary
    int battery_detail_switch_summary -> battery_detail_switch_summary
    int battery_detail_switch_title -> battery_detail_switch_title
    int battery_info_status_charging -> battery_info_status_charging
    int battery_info_status_charging_lower -> battery_info_status_charging_lower
    int battery_info_status_discharging -> battery_info_status_discharging
    int battery_info_status_full -> battery_info_status_full
    int battery_info_status_not_charging -> battery_info_status_not_charging
    int battery_info_status_unknown -> battery_info_status_unknown
    int battery_low_percent_format -> battery_low_percent_format
    int battery_low_percent_format_saver_started -> battery_low_percent_format_saver_started
    int battery_low_title -> battery_low_title
    int battery_low_why -> battery_low_why
    int battery_meter_very_low_overlay_symbol -> battery_meter_very_low_overlay_symbol
    int battery_panel_title -> battery_panel_title
    int battery_saver_confirmation_ok -> battery_saver_confirmation_ok
    int battery_saver_confirmation_title -> battery_saver_confirmation_title
    int battery_saver_notification_action_text -> battery_saver_notification_action_text
    int battery_saver_notification_text -> battery_saver_notification_text
    int battery_saver_notification_title -> battery_saver_notification_title
    int battery_saver_start_action -> battery_saver_start_action
    int block -> block
    int bluetooth_a2dp_profile_summary_connected -> bluetooth_a2dp_profile_summary_connected
    int bluetooth_a2dp_profile_summary_use_for -> bluetooth_a2dp_profile_summary_use_for
    int bluetooth_connected -> bluetooth_connected
    int bluetooth_connected_battery_level -> bluetooth_connected_battery_level
    int bluetooth_connected_no_a2dp -> bluetooth_connected_no_a2dp
    int bluetooth_connected_no_a2dp_battery_level -> bluetooth_connected_no_a2dp_battery_level
    int bluetooth_connected_no_headset -> bluetooth_connected_no_headset
    int bluetooth_connected_no_headset_battery_level -> bluetooth_connected_no_headset_battery_level
    int bluetooth_connected_no_headset_no_a2dp -> bluetooth_connected_no_headset_no_a2dp
    int bluetooth_connected_no_headset_no_a2dp_battery_level -> bluetooth_connected_no_headset_no_a2dp_battery_level
    int bluetooth_connected_no_map -> bluetooth_connected_no_map
    int bluetooth_connecting -> bluetooth_connecting
    int bluetooth_disable_absolute_volume -> bluetooth_disable_absolute_volume
    int bluetooth_disable_absolute_volume_summary -> bluetooth_disable_absolute_volume_summary
    int bluetooth_disconnected -> bluetooth_disconnected
    int bluetooth_disconnecting -> bluetooth_disconnecting
    int bluetooth_dun_profile_summary_connected -> bluetooth_dun_profile_summary_connected
    int bluetooth_dun_profile_summary_use_for -> bluetooth_dun_profile_summary_use_for
    int bluetooth_enable_inband_ringing -> bluetooth_enable_inband_ringing
    int bluetooth_enable_inband_ringing_summary -> bluetooth_enable_inband_ringing_summary
    int bluetooth_headset_profile_summary_connected -> bluetooth_headset_profile_summary_connected
    int bluetooth_headset_profile_summary_use_for -> bluetooth_headset_profile_summary_use_for
    int bluetooth_hid_profile_summary_connected -> bluetooth_hid_profile_summary_connected
    int bluetooth_hid_profile_summary_use_for -> bluetooth_hid_profile_summary_use_for
    int bluetooth_map_profile_summary_connected -> bluetooth_map_profile_summary_connected
    int bluetooth_map_profile_summary_use_for -> bluetooth_map_profile_summary_use_for
    int bluetooth_opp_profile_summary_connected -> bluetooth_opp_profile_summary_connected
    int bluetooth_opp_profile_summary_not_connected -> bluetooth_opp_profile_summary_not_connected
    int bluetooth_opp_profile_summary_use_for -> bluetooth_opp_profile_summary_use_for
    int bluetooth_pairing -> bluetooth_pairing
    int bluetooth_pairing_accept -> bluetooth_pairing_accept
    int bluetooth_pairing_accept_all_caps -> bluetooth_pairing_accept_all_caps
    int bluetooth_pairing_decline -> bluetooth_pairing_decline
    int bluetooth_pairing_device_down_error_message -> bluetooth_pairing_device_down_error_message
    int bluetooth_pairing_error_message -> bluetooth_pairing_error_message
    int bluetooth_pairing_pin_error_message -> bluetooth_pairing_pin_error_message
    int bluetooth_pairing_rejected_error_message -> bluetooth_pairing_rejected_error_message
    int bluetooth_pairing_will_share_phonebook -> bluetooth_pairing_will_share_phonebook
    int bluetooth_pan_nap_profile_summary_connected -> bluetooth_pan_nap_profile_summary_connected
    int bluetooth_pan_profile_summary_use_for -> bluetooth_pan_profile_summary_use_for
    int bluetooth_pan_user_profile_summary_connected -> bluetooth_pan_user_profile_summary_connected
    int bluetooth_profile_a2dp -> bluetooth_profile_a2dp
    int bluetooth_profile_a2dp_high_quality -> bluetooth_profile_a2dp_high_quality
    int bluetooth_profile_a2dp_high_quality_unknown_codec -> bluetooth_profile_a2dp_high_quality_unknown_codec
    int bluetooth_profile_dun -> bluetooth_profile_dun
    int bluetooth_profile_headset -> bluetooth_profile_headset
    int bluetooth_profile_hid -> bluetooth_profile_hid
    int bluetooth_profile_map -> bluetooth_profile_map
    int bluetooth_profile_opp -> bluetooth_profile_opp
    int bluetooth_profile_pan -> bluetooth_profile_pan
    int bluetooth_profile_pan_nap -> bluetooth_profile_pan_nap
    int bluetooth_profile_pbap -> bluetooth_profile_pbap
    int bluetooth_profile_pbap_summary -> bluetooth_profile_pbap_summary
    int bluetooth_profile_sap -> bluetooth_profile_sap
    int bluetooth_sap_profile_summary_connected -> bluetooth_sap_profile_summary_connected
    int bluetooth_sap_profile_summary_use_for -> bluetooth_sap_profile_summary_use_for
    int bluetooth_select_a2dp_codec_bits_per_sample -> bluetooth_select_a2dp_codec_bits_per_sample
    int bluetooth_select_a2dp_codec_bits_per_sample_dialog_title -> bluetooth_select_a2dp_codec_bits_per_sample_dialog_title
    int bluetooth_select_a2dp_codec_channel_mode -> bluetooth_select_a2dp_codec_channel_mode
    int bluetooth_select_a2dp_codec_channel_mode_dialog_title -> bluetooth_select_a2dp_codec_channel_mode_dialog_title
    int bluetooth_select_a2dp_codec_ldac_playback_quality -> bluetooth_select_a2dp_codec_ldac_playback_quality
    int bluetooth_select_a2dp_codec_ldac_playback_quality_dialog_title -> bluetooth_select_a2dp_codec_ldac_playback_quality_dialog_title
    int bluetooth_select_a2dp_codec_sample_rate -> bluetooth_select_a2dp_codec_sample_rate
    int bluetooth_select_a2dp_codec_sample_rate_dialog_title -> bluetooth_select_a2dp_codec_sample_rate_dialog_title
    int bluetooth_select_a2dp_codec_streaming_label -> bluetooth_select_a2dp_codec_streaming_label
    int bluetooth_select_a2dp_codec_type -> bluetooth_select_a2dp_codec_type
    int bluetooth_select_a2dp_codec_type_dialog_title -> bluetooth_select_a2dp_codec_type_dialog_title
    int bluetooth_select_avrcp_version_dialog_title -> bluetooth_select_avrcp_version_dialog_title
    int bluetooth_select_avrcp_version_string -> bluetooth_select_avrcp_version_string
    int bluetooth_show_devices_without_names -> bluetooth_show_devices_without_names
    int bluetooth_show_devices_without_names_summary -> bluetooth_show_devices_without_names_summary
    int bluetooth_tethered -> bluetooth_tethered
    int branded_monitoring_description_app_personal -> branded_monitoring_description_app_personal
    int branded_vpn_footer -> branded_vpn_footer
    int broadcast_tile -> broadcast_tile
    int bt_hci_snoop_log -> bt_hci_snoop_log
    int bt_hci_snoop_log_summary -> bt_hci_snoop_log_summary
    int bt_is_off -> bt_is_off
    int bugreport_in_power -> bugreport_in_power
    int bugreport_in_power_summary -> bugreport_in_power_summary
    int button_convert_fbe -> button_convert_fbe
    int camera_hint -> camera_hint
    int camera_label -> camera_label
    int cancel -> cancel
    int category_personal -> category_personal
    int category_work -> category_work
    int certinstaller_package -> certinstaller_package
    int change_theme_reboot -> change_theme_reboot
    int charge_length_format -> charge_length_format
    int choose_profile -> choose_profile
    int clear_adb_keys -> clear_adb_keys
    int clear_all_notifications_text -> clear_all_notifications_text
    int clipboard -> clipboard
    int clock -> clock
    int clock_12hr_format -> clock_12hr_format
    int clock_24hr_format -> clock_24hr_format
    int clock_seconds -> clock_seconds
    int clock_seconds_desc -> clock_seconds_desc
    int compat_mode_off -> compat_mode_off
    int compat_mode_on -> compat_mode_on
    int config_navBarLayout -> config_navBarLayout
    int config_persistentDockedActivityIntentUri -> config_persistentDockedActivityIntentUri
    int config_rat_2g -> config_rat_2g
    int config_rat_3g -> config_rat_3g
    int config_rat_4g -> config_rat_4g
    int config_rat_unknown -> config_rat_unknown
    int config_statusBarComponent -> config_statusBarComponent
    int config_systemUIFactoryComponent -> config_systemUIFactoryComponent
    int confirm_enable_oem_unlock_text -> confirm_enable_oem_unlock_text
    int confirm_enable_oem_unlock_title -> confirm_enable_oem_unlock_title
    int connected_via_carrier -> connected_via_carrier
    int connected_via_network_scorer -> connected_via_network_scorer
    int connected_via_network_scorer_default -> connected_via_network_scorer_default
    int connected_via_passpoint -> connected_via_passpoint
    int content_description_menu_button -> content_description_menu_button
    int convert_to_fbe_warning -> convert_to_fbe_warning
    int convert_to_file_encryption -> convert_to_file_encryption
    int convert_to_file_encryption_done -> convert_to_file_encryption_done
    int convert_to_file_encryption_enabled -> convert_to_file_encryption_enabled
    int daltonizer_mode_deuteranomaly -> daltonizer_mode_deuteranomaly
    int daltonizer_mode_disabled -> daltonizer_mode_disabled
    int daltonizer_mode_monochromacy -> daltonizer_mode_monochromacy
    int daltonizer_mode_protanomaly -> daltonizer_mode_protanomaly
    int daltonizer_mode_tritanomaly -> daltonizer_mode_tritanomaly
    int daltonizer_type_overridden -> daltonizer_type_overridden
    int data_saver -> data_saver
    int data_usage_disable_mobile -> data_usage_disable_mobile
    int data_usage_disabled_dialog -> data_usage_disabled_dialog
    int data_usage_disabled_dialog_3g_title -> data_usage_disabled_dialog_3g_title
    int data_usage_disabled_dialog_4g_title -> data_usage_disabled_dialog_4g_title
    int data_usage_disabled_dialog_enable -> data_usage_disabled_dialog_enable
    int data_usage_disabled_dialog_mobile_title -> data_usage_disabled_dialog_mobile_title
    int data_usage_disabled_dialog_title -> data_usage_disabled_dialog_title
    int data_usage_uninstalled_apps -> data_usage_uninstalled_apps
    int data_usage_uninstalled_apps_users -> data_usage_uninstalled_apps_users
    int debug_app -> debug_app
    int debug_app_not_set -> debug_app_not_set
    int debug_app_set -> debug_app_set
    int debug_applications_category -> debug_applications_category
    int debug_debugging_category -> debug_debugging_category
    int debug_drawing_category -> debug_drawing_category
    int debug_hw_drawing_category -> debug_hw_drawing_category
    int debug_hw_overdraw -> debug_hw_overdraw
    int debug_hw_renderer -> debug_hw_renderer
    int debug_input_category -> debug_input_category
    int debug_layout -> debug_layout
    int debug_layout_summary -> debug_layout_summary
    int debug_monitoring_category -> debug_monitoring_category
    int debug_networking_category -> debug_networking_category
    int debug_view_attributes -> debug_view_attributes
    int default_theme -> default_theme
    int demo_mode -> demo_mode
    int description_direction_left -> description_direction_left
    int description_direction_up -> description_direction_up
    int description_target_search -> description_target_search
    int dessert_case -> dessert_case
    int dev_logpersist_clear_warning_message -> dev_logpersist_clear_warning_message
    int dev_logpersist_clear_warning_title -> dev_logpersist_clear_warning_title
    int dev_settings_warning_message -> dev_settings_warning_message
    int dev_settings_warning_title -> dev_settings_warning_title
    int development_settings_enable -> development_settings_enable
    int development_settings_not_available -> development_settings_not_available
    int development_settings_summary -> development_settings_summary
    int development_settings_title -> development_settings_title
    int direct_boot_unaware_dialog_message -> direct_boot_unaware_dialog_message
    int disable_carrier_button_text -> disable_carrier_button_text
    int disable_overlays -> disable_overlays
    int disable_overlays_summary -> disable_overlays_summary
    int disable_vpn -> disable_vpn
    int disabled -> disabled
    int disabled_by_admin -> disabled_by_admin
    int disabled_by_admin_summary_text -> disabled_by_admin_summary_text
    int disconnect_vpn -> disconnect_vpn
    int dnd_is_off -> dnd_is_off
    int do_disclosure_generic -> do_disclosure_generic
    int do_disclosure_with_name -> do_disclosure_with_name
    int do_not_silence -> do_not_silence
    int do_not_silence_block -> do_not_silence_block
    int dock_forced_resizable -> dock_forced_resizable
    int dock_non_resizeble_failed_to_dock_text -> dock_non_resizeble_failed_to_dock_text
    int doze_brightness_sensor_type -> doze_brightness_sensor_type
    int doze_pickup_subtype_performs_proximity_check -> doze_pickup_subtype_performs_proximity_check
    int drag_to_add_tiles -> drag_to_add_tiles
    int drag_to_remove_tiles -> drag_to_remove_tiles
    int empty_shade_text -> empty_shade_text
    int enable_adb -> enable_adb
    int enable_adb_summary -> enable_adb_summary
    int enable_bluetooth_confirmation_ok -> enable_bluetooth_confirmation_ok
    int enable_bluetooth_message -> enable_bluetooth_message
    int enable_bluetooth_title -> enable_bluetooth_title
    int enable_demo_mode -> enable_demo_mode
    int enable_freeform_support -> enable_freeform_support
    int enable_freeform_support_summary -> enable_freeform_support_summary
    int enable_opengl_traces_title -> enable_opengl_traces_title
    int enable_terminal_summary -> enable_terminal_summary
    int enable_terminal_title -> enable_terminal_title
    int enabled_by_admin -> enabled_by_admin
    int ethernet_label -> ethernet_label
    int expanded_header_battery_charged -> expanded_header_battery_charged
    int expanded_header_battery_charging -> expanded_header_battery_charging
    int expanded_header_battery_charging_with_time -> expanded_header_battery_charging_with_time
    int expanded_header_battery_not_charging -> expanded_header_battery_not_charging
    int experimental -> experimental
    int external_source_trusted -> external_source_trusted
    int external_source_untrusted -> external_source_untrusted
    int failed_to_open_app_settings_toast -> failed_to_open_app_settings_toast
    int fingerprint_not_recognized -> fingerprint_not_recognized
    int force_allow_on_external -> force_allow_on_external
    int force_allow_on_external_summary -> force_allow_on_external_summary
    int force_hw_ui -> force_hw_ui
    int force_hw_ui_summary -> force_hw_ui_summary
    int force_msaa -> force_msaa
    int force_msaa_summary -> force_msaa_summary
    int force_resizable_activities -> force_resizable_activities
    int force_resizable_activities_summary -> force_resizable_activities_summary
    int force_rtl_layout_all_locales -> force_rtl_layout_all_locales
    int force_rtl_layout_all_locales_summary -> force_rtl_layout_all_locales_summary
    int forced_resizable_secondary_display -> forced_resizable_secondary_display
    int go_to_web -> go_to_web
    int got_it -> got_it
    int gps_notification_found_text -> gps_notification_found_text
    int gps_notification_searching_text -> gps_notification_searching_text
    int guest_exit_guest -> guest_exit_guest
    int guest_exit_guest_dialog_message -> guest_exit_guest_dialog_message
    int guest_exit_guest_dialog_remove -> guest_exit_guest_dialog_remove
    int guest_exit_guest_dialog_title -> guest_exit_guest_dialog_title
    int guest_new_guest -> guest_new_guest
    int guest_nickname -> guest_nickname
    int guest_notification_remove_action -> guest_notification_remove_action
    int guest_notification_text -> guest_notification_text
    int guest_notification_title -> guest_notification_title
    int guest_wipe_session_dontwipe -> guest_wipe_session_dontwipe
    int guest_wipe_session_message -> guest_wipe_session_message
    int guest_wipe_session_title -> guest_wipe_session_title
    int guest_wipe_session_wipe -> guest_wipe_session_wipe
    int hdcp_checking_dialog_title -> hdcp_checking_dialog_title
    int hdcp_checking_title -> hdcp_checking_title
    int headset -> headset
    int help_feedback_label -> help_feedback_label
    int hidden_notifications_cancel -> hidden_notifications_cancel
    int hidden_notifications_setup -> hidden_notifications_setup
    int hidden_notifications_text -> hidden_notifications_text
    int hidden_notifications_title -> hidden_notifications_title
    int high_temp_dialog_message -> high_temp_dialog_message
    int high_temp_notif_message -> high_temp_notif_message
    int high_temp_title -> high_temp_title
    int home -> home
    int ime_security_warning -> ime_security_warning
    int immediately_destroy_activities -> immediately_destroy_activities
    int immediately_destroy_activities_summary -> immediately_destroy_activities_summary
    int inactive_app_active_summary -> inactive_app_active_summary
    int inactive_app_inactive_summary -> inactive_app_inactive_summary
    int inactive_apps_title -> inactive_apps_title
    int install_other_apps -> install_other_apps
    int installer_cd_button_title -> installer_cd_button_title
    int instant_apps -> instant_apps
    int instant_apps_message -> instant_apps_message
    int interruption_level_alarms -> interruption_level_alarms
    int interruption_level_alarms_twoline -> interruption_level_alarms_twoline
    int interruption_level_none -> interruption_level_none
    int interruption_level_none_twoline -> interruption_level_none_twoline
    int interruption_level_none_with_warning -> interruption_level_none_with_warning
    int interruption_level_priority -> interruption_level_priority
    int interruption_level_priority_twoline -> interruption_level_priority_twoline
    int invalid_charger -> invalid_charger
    int invalid_charger_text -> invalid_charger_text
    int invalid_charger_title -> invalid_charger_title
    int keep_screen_on -> keep_screen_on
    int keep_screen_on_summary -> keep_screen_on_summary
    int keyboard_key_back -> keyboard_key_back
    int keyboard_key_backspace -> keyboard_key_backspace
    int keyboard_key_button_template -> keyboard_key_button_template
    int keyboard_key_dpad_center -> keyboard_key_dpad_center
    int keyboard_key_dpad_down -> keyboard_key_dpad_down
    int keyboard_key_dpad_left -> keyboard_key_dpad_left
    int keyboard_key_dpad_right -> keyboard_key_dpad_right
    int keyboard_key_dpad_up -> keyboard_key_dpad_up
    int keyboard_key_enter -> keyboard_key_enter
    int keyboard_key_forward_del -> keyboard_key_forward_del
    int keyboard_key_home -> keyboard_key_home
    int keyboard_key_insert -> keyboard_key_insert
    int keyboard_key_media_fast_forward -> keyboard_key_media_fast_forward
    int keyboard_key_media_next -> keyboard_key_media_next
    int keyboard_key_media_play_pause -> keyboard_key_media_play_pause
    int keyboard_key_media_previous -> keyboard_key_media_previous
    int keyboard_key_media_rewind -> keyboard_key_media_rewind
    int keyboard_key_media_stop -> keyboard_key_media_stop
    int keyboard_key_move_end -> keyboard_key_move_end
    int keyboard_key_move_home -> keyboard_key_move_home
    int keyboard_key_num_lock -> keyboard_key_num_lock
    int keyboard_key_numpad_template -> keyboard_key_numpad_template
    int keyboard_key_page_down -> keyboard_key_page_down
    int keyboard_key_page_up -> keyboard_key_page_up
    int keyboard_key_space -> keyboard_key_space
    int keyboard_key_tab -> keyboard_key_tab
    int keyboard_shortcut_group_applications -> keyboard_shortcut_group_applications
    int keyboard_shortcut_group_applications_assist -> keyboard_shortcut_group_applications_assist
    int keyboard_shortcut_group_applications_browser -> keyboard_shortcut_group_applications_browser
    int keyboard_shortcut_group_applications_calendar -> keyboard_shortcut_group_applications_calendar
    int keyboard_shortcut_group_applications_contacts -> keyboard_shortcut_group_applications_contacts
    int keyboard_shortcut_group_applications_email -> keyboard_shortcut_group_applications_email
    int keyboard_shortcut_group_applications_music -> keyboard_shortcut_group_applications_music
    int keyboard_shortcut_group_applications_sms -> keyboard_shortcut_group_applications_sms
    int keyboard_shortcut_group_applications_youtube -> keyboard_shortcut_group_applications_youtube
    int keyboard_shortcut_group_system -> keyboard_shortcut_group_system
    int keyboard_shortcut_group_system_back -> keyboard_shortcut_group_system_back
    int keyboard_shortcut_group_system_home -> keyboard_shortcut_group_system_home
    int keyboard_shortcut_group_system_notifications -> keyboard_shortcut_group_system_notifications
    int keyboard_shortcut_group_system_recents -> keyboard_shortcut_group_system_recents
    int keyboard_shortcut_group_system_shortcuts_helper -> keyboard_shortcut_group_system_shortcuts_helper
    int keyboard_shortcut_group_system_switch_input -> keyboard_shortcut_group_system_switch_input
    int keyboardview_keycode_delete -> keyboardview_keycode_delete
    int keyboardview_keycode_enter -> keyboardview_keycode_enter
    int keyguard_accessibility_next_alarm -> keyguard_accessibility_next_alarm
    int keyguard_accessibility_pin_area -> keyguard_accessibility_pin_area
    int keyguard_accessibility_sim_pin_area -> keyguard_accessibility_sim_pin_area
    int keyguard_accessibility_sim_puk_area -> keyguard_accessibility_sim_puk_area
    int keyguard_carrier_default -> keyguard_carrier_default
    int keyguard_charged -> keyguard_charged
    int keyguard_fancy_colon -> keyguard_fancy_colon
    int keyguard_indication_charging_time -> keyguard_indication_charging_time
    int keyguard_indication_charging_time_fast -> keyguard_indication_charging_time_fast
    int keyguard_indication_charging_time_slowly -> keyguard_indication_charging_time_slowly
    int keyguard_indication_trust_disabled -> keyguard_indication_trust_disabled
    int keyguard_indication_trust_granted -> keyguard_indication_trust_granted
    int keyguard_indication_trust_managed -> keyguard_indication_trust_managed
    int keyguard_instructions_when_pattern_disabled -> keyguard_instructions_when_pattern_disabled
    int keyguard_low_battery -> keyguard_low_battery
    int keyguard_missing_sim_instructions -> keyguard_missing_sim_instructions
    int keyguard_missing_sim_instructions_long -> keyguard_missing_sim_instructions_long
    int keyguard_missing_sim_message -> keyguard_missing_sim_message
    int keyguard_missing_sim_message_short -> keyguard_missing_sim_message_short
    int keyguard_more_overflow_text -> keyguard_more_overflow_text
    int keyguard_network_locked_message -> keyguard_network_locked_message
    int keyguard_password_enter_password_code -> keyguard_password_enter_password_code
    int keyguard_password_enter_pin_code -> keyguard_password_enter_pin_code
    int keyguard_password_enter_pin_password_code -> keyguard_password_enter_pin_password_code
    int keyguard_password_enter_pin_prompt -> keyguard_password_enter_pin_prompt
    int keyguard_password_enter_puk_code -> keyguard_password_enter_puk_code
    int keyguard_password_enter_puk_prompt -> keyguard_password_enter_puk_prompt
    int keyguard_password_entry_touch_hint -> keyguard_password_entry_touch_hint
    int keyguard_password_wrong_pin_code -> keyguard_password_wrong_pin_code
    int keyguard_permanent_disabled_sim_instructions -> keyguard_permanent_disabled_sim_instructions
    int keyguard_permanent_disabled_sim_message_short -> keyguard_permanent_disabled_sim_message_short
    int keyguard_plugged_in -> keyguard_plugged_in
    int keyguard_plugged_in_charging_fast -> keyguard_plugged_in_charging_fast
    int keyguard_plugged_in_charging_slowly -> keyguard_plugged_in_charging_slowly
    int keyguard_sim_locked_message -> keyguard_sim_locked_message
    int keyguard_sim_puk_locked_message -> keyguard_sim_puk_locked_message
    int keyguard_sim_unlock_progress_dialog_message -> keyguard_sim_unlock_progress_dialog_message
    int keyguard_unlock -> keyguard_unlock
    int keyguard_widget_12_hours_format -> keyguard_widget_12_hours_format
    int keyguard_widget_24_hours_format -> keyguard_widget_24_hours_format
    int kg_enter_confirm_pin_hint -> kg_enter_confirm_pin_hint
    int kg_failed_attempts_almost_at_erase_profile -> kg_failed_attempts_almost_at_erase_profile
    int kg_failed_attempts_almost_at_erase_user -> kg_failed_attempts_almost_at_erase_user
    int kg_failed_attempts_almost_at_login -> kg_failed_attempts_almost_at_login
    int kg_failed_attempts_almost_at_wipe -> kg_failed_attempts_almost_at_wipe
    int kg_failed_attempts_now_erasing_profile -> kg_failed_attempts_now_erasing_profile
    int kg_failed_attempts_now_erasing_user -> kg_failed_attempts_now_erasing_user
    int kg_failed_attempts_now_wiping -> kg_failed_attempts_now_wiping
    int kg_forgot_pattern_button_text -> kg_forgot_pattern_button_text
    int kg_invalid_confirm_pin_hint -> kg_invalid_confirm_pin_hint
    int kg_invalid_puk -> kg_invalid_puk
    int kg_invalid_sim_pin_hint -> kg_invalid_sim_pin_hint
    int kg_invalid_sim_puk_hint -> kg_invalid_sim_puk_hint
    int kg_login_too_many_attempts -> kg_login_too_many_attempts
    int kg_password_instructions -> kg_password_instructions
    int kg_password_pin_failed -> kg_password_pin_failed
    int kg_password_puk_failed -> kg_password_puk_failed
    int kg_password_wrong_pin_code_pukked -> kg_password_wrong_pin_code_pukked
    int kg_password_wrong_puk_code_dead -> kg_password_wrong_puk_code_dead
    int kg_pattern_instructions -> kg_pattern_instructions
    int kg_pin_accepted -> kg_pin_accepted
    int kg_pin_instructions -> kg_pin_instructions
    int kg_prompt_reason_device_admin -> kg_prompt_reason_device_admin
    int kg_prompt_reason_restart_password -> kg_prompt_reason_restart_password
    int kg_prompt_reason_restart_pattern -> kg_prompt_reason_restart_pattern
    int kg_prompt_reason_restart_pin -> kg_prompt_reason_restart_pin
    int kg_prompt_reason_switch_profiles_password -> kg_prompt_reason_switch_profiles_password
    int kg_prompt_reason_switch_profiles_pattern -> kg_prompt_reason_switch_profiles_pattern
    int kg_prompt_reason_switch_profiles_pin -> kg_prompt_reason_switch_profiles_pin
    int kg_prompt_reason_timeout_password -> kg_prompt_reason_timeout_password
    int kg_prompt_reason_timeout_pattern -> kg_prompt_reason_timeout_pattern
    int kg_prompt_reason_timeout_pin -> kg_prompt_reason_timeout_pin
    int kg_prompt_reason_user_request -> kg_prompt_reason_user_request
    int kg_puk_enter_pin_hint -> kg_puk_enter_pin_hint
    int kg_puk_enter_puk_hint -> kg_puk_enter_puk_hint
    int kg_puk_enter_puk_hint_multi -> kg_puk_enter_puk_hint_multi
    int kg_sim_lock_instructions_esim -> kg_sim_lock_instructions_esim
    int kg_sim_pin_instructions -> kg_sim_pin_instructions
    int kg_sim_pin_instructions_multi -> kg_sim_pin_instructions_multi
    int kg_sim_unlock_progress_dialog_message -> kg_sim_unlock_progress_dialog_message
    int kg_too_many_failed_attempts_countdown -> kg_too_many_failed_attempts_countdown
    int kg_too_many_failed_password_attempts_dialog_message -> kg_too_many_failed_password_attempts_dialog_message
    int kg_too_many_failed_pattern_attempts_dialog_message -> kg_too_many_failed_pattern_attempts_dialog_message
    int kg_too_many_failed_pin_attempts_dialog_message -> kg_too_many_failed_pin_attempts_dialog_message
    int kg_wrong_password -> kg_wrong_password
    int kg_wrong_pattern -> kg_wrong_pattern
    int kg_wrong_pin -> kg_wrong_pin
    int label_view -> label_view
    int launch_defaults_none -> launch_defaults_none
    int launch_defaults_some -> launch_defaults_some
    int lb_control_display_fast_forward_multiplier -> lb_control_display_fast_forward_multiplier
    int lb_control_display_rewind_multiplier -> lb_control_display_rewind_multiplier
    int lb_guidedaction_continue_title -> lb_guidedaction_continue_title
    int lb_guidedaction_finish_title -> lb_guidedaction_finish_title
    int lb_guidedactions_item_disabled_chevron_alpha -> lb_guidedactions_item_disabled_chevron_alpha
    int lb_guidedactions_item_disabled_description_text_alpha -> lb_guidedactions_item_disabled_description_text_alpha
    int lb_guidedactions_item_disabled_text_alpha -> lb_guidedactions_item_disabled_text_alpha
    int lb_guidedactions_item_enabled_chevron_alpha -> lb_guidedactions_item_enabled_chevron_alpha
    int lb_guidedactions_item_unselected_description_text_alpha -> lb_guidedactions_item_unselected_description_text_alpha
    int lb_guidedactions_item_unselected_text_alpha -> lb_guidedactions_item_unselected_text_alpha
    int lb_guidedactions_width_weight -> lb_guidedactions_width_weight
    int lb_guidedactions_width_weight_two_panels -> lb_guidedactions_width_weight_two_panels
    int lb_guidedbuttonactions_width_weight -> lb_guidedbuttonactions_width_weight
    int lb_guidedstep_height_weight -> lb_guidedstep_height_weight
    int lb_guidedstep_height_weight_translucent -> lb_guidedstep_height_weight_translucent
    int lb_guidedstep_keyline -> lb_guidedstep_keyline
    int lb_media_player_error -> lb_media_player_error
    int lb_navigation_menu_contentDescription -> lb_navigation_menu_contentDescription
    int lb_onboarding_accessibility_next -> lb_onboarding_accessibility_next
    int lb_onboarding_get_started -> lb_onboarding_get_started
    int lb_playback_controls_closed_captioning_disable -> lb_playback_controls_closed_captioning_disable
    int lb_playback_controls_closed_captioning_enable -> lb_playback_controls_closed_captioning_enable
    int lb_playback_controls_fast_forward -> lb_playback_controls_fast_forward
    int lb_playback_controls_fast_forward_multiplier -> lb_playback_controls_fast_forward_multiplier
    int lb_playback_controls_hidden -> lb_playback_controls_hidden
    int lb_playback_controls_high_quality_disable -> lb_playback_controls_high_quality_disable
    int lb_playback_controls_high_quality_enable -> lb_playback_controls_high_quality_enable
    int lb_playback_controls_more_actions -> lb_playback_controls_more_actions
    int lb_playback_controls_pause -> lb_playback_controls_pause
    int lb_playback_controls_picture_in_picture -> lb_playback_controls_picture_in_picture
    int lb_playback_controls_play -> lb_playback_controls_play
    int lb_playback_controls_repeat_all -> lb_playback_controls_repeat_all
    int lb_playback_controls_repeat_none -> lb_playback_controls_repeat_none
    int lb_playback_controls_repeat_one -> lb_playback_controls_repeat_one
    int lb_playback_controls_rewind -> lb_playback_controls_rewind
    int lb_playback_controls_rewind_multiplier -> lb_playback_controls_rewind_multiplier
    int lb_playback_controls_shown -> lb_playback_controls_shown
    int lb_playback_controls_shuffle_disable -> lb_playback_controls_shuffle_disable
    int lb_playback_controls_shuffle_enable -> lb_playback_controls_shuffle_enable
    int lb_playback_controls_skip_next -> lb_playback_controls_skip_next
    int lb_playback_controls_skip_previous -> lb_playback_controls_skip_previous
    int lb_playback_controls_thumb_down -> lb_playback_controls_thumb_down
    int lb_playback_controls_thumb_down_outline -> lb_playback_controls_thumb_down_outline
    int lb_playback_controls_thumb_up -> lb_playback_controls_thumb_up
    int lb_playback_controls_thumb_up_outline -> lb_playback_controls_thumb_up_outline
    int lb_playback_time_separator -> lb_playback_time_separator
    int lb_search_bar_hint -> lb_search_bar_hint
    int lb_search_bar_hint_speech -> lb_search_bar_hint_speech
    int lb_search_bar_hint_with_title -> lb_search_bar_hint_with_title
    int lb_search_bar_hint_with_title_speech -> lb_search_bar_hint_with_title_speech
    int left_icon -> left_icon
    int left_keycode -> left_keycode
    int left_nav_bar_button_type -> left_nav_bar_button_type
    int legacy_vpn_name -> legacy_vpn_name
    int local_backup_password_summary_change -> local_backup_password_summary_change
    int local_backup_password_summary_none -> local_backup_password_summary_none
    int local_backup_password_title -> local_backup_password_title
    int local_backup_password_toast_confirmation_mismatch -> local_backup_password_toast_confirmation_mismatch
    int local_backup_password_toast_success -> local_backup_password_toast_success
    int local_backup_password_toast_validation_failure -> local_backup_password_toast_validation_failure
    int lockscreen_none -> lockscreen_none
    int lockscreen_shortcut_left -> lockscreen_shortcut_left
    int lockscreen_shortcut_right -> lockscreen_shortcut_right
    int lockscreen_sim_error_message_short -> lockscreen_sim_error_message_short
    int lockscreen_unlock_left -> lockscreen_unlock_left
    int lockscreen_unlock_right -> lockscreen_unlock_right
    int managed_profile_foreground_toast -> managed_profile_foreground_toast
    int managed_user_title -> managed_user_title
    int media_category -> media_category
    int media_projection_action_text -> media_projection_action_text
    int media_projection_dialog_text -> media_projection_dialog_text
    int media_projection_remember_text -> media_projection_remember_text
    int menu_ime -> menu_ime
    int mland -> mland
    int mobile_data -> mobile_data
    int mobile_data_always_on -> mobile_data_always_on
    int mobile_data_always_on_summary -> mobile_data_always_on_summary
    int mock_location_app -> mock_location_app
    int mock_location_app_not_set -> mock_location_app_not_set
    int mock_location_app_set -> mock_location_app_set
    int monitoring_button_view_policies -> monitoring_button_view_policies
    int monitoring_description_app -> monitoring_description_app
    int monitoring_description_app_personal -> monitoring_description_app_personal
    int monitoring_description_app_personal_work -> monitoring_description_app_personal_work
    int monitoring_description_app_work -> monitoring_description_app_work
    int monitoring_description_ca_cert_settings -> monitoring_description_ca_cert_settings
    int monitoring_description_ca_cert_settings_separator -> monitoring_description_ca_cert_settings_separator
    int monitoring_description_ca_certificate -> monitoring_description_ca_certificate
    int monitoring_description_do_body -> monitoring_description_do_body
    int monitoring_description_do_body_vpn -> monitoring_description_do_body_vpn
    int monitoring_description_do_header_generic -> monitoring_description_do_header_generic
    int monitoring_description_do_header_with_name -> monitoring_description_do_header_with_name
    int monitoring_description_do_learn_more -> monitoring_description_do_learn_more
    int monitoring_description_do_learn_more_separator -> monitoring_description_do_learn_more_separator
    int monitoring_description_managed_profile_ca_certificate -> monitoring_description_managed_profile_ca_certificate
    int monitoring_description_managed_profile_named_vpn -> monitoring_description_managed_profile_named_vpn
    int monitoring_description_management -> monitoring_description_management
    int monitoring_description_management_ca_certificate -> monitoring_description_management_ca_certificate
    int monitoring_description_management_network_logging -> monitoring_description_management_network_logging
    int monitoring_description_named_management -> monitoring_description_named_management
    int monitoring_description_named_vpn -> monitoring_description_named_vpn
    int monitoring_description_network_logging -> monitoring_description_network_logging
    int monitoring_description_personal_profile_named_vpn -> monitoring_description_personal_profile_named_vpn
    int monitoring_description_two_named_vpns -> monitoring_description_two_named_vpns
    int monitoring_description_vpn -> monitoring_description_vpn
    int monitoring_description_vpn_profile_owned -> monitoring_description_vpn_profile_owned
    int monitoring_description_vpn_settings -> monitoring_description_vpn_settings
    int monitoring_description_vpn_settings_separator -> monitoring_description_vpn_settings_separator
    int monitoring_subtitle_ca_certificate -> monitoring_subtitle_ca_certificate
    int monitoring_subtitle_network_logging -> monitoring_subtitle_network_logging
    int monitoring_subtitle_vpn -> monitoring_subtitle_vpn
    int monitoring_title -> monitoring_title
    int monitoring_title_device_owned -> monitoring_title_device_owned
    int monitoring_title_profile_owned -> monitoring_title_profile_owned
    int mr_button_content_description -> mr_button_content_description
    int mr_cast_button_connected -> mr_cast_button_connected
    int mr_cast_button_connecting -> mr_cast_button_connecting
    int mr_cast_button_disconnected -> mr_cast_button_disconnected
    int mr_chooser_searching -> mr_chooser_searching
    int mr_chooser_title -> mr_chooser_title
    int mr_controller_album_art -> mr_controller_album_art
    int mr_controller_casting_screen -> mr_controller_casting_screen
    int mr_controller_close_description -> mr_controller_close_description
    int mr_controller_collapse_group -> mr_controller_collapse_group
    int mr_controller_disconnect -> mr_controller_disconnect
    int mr_controller_expand_group -> mr_controller_expand_group
    int mr_controller_no_info_available -> mr_controller_no_info_available
    int mr_controller_no_media_selected -> mr_controller_no_media_selected
    int mr_controller_pause -> mr_controller_pause
    int mr_controller_play -> mr_controller_play
    int mr_controller_stop -> mr_controller_stop
    int mr_controller_stop_casting -> mr_controller_stop_casting
    int mr_controller_volume_slider -> mr_controller_volume_slider
    int mr_system_route_name -> mr_system_route_name
    int mr_user_route_category_name -> mr_user_route_category_name
    int nav_bar -> nav_bar
    int nav_bar_default -> nav_bar_default
    int nav_bar_layout -> nav_bar_layout
    int no_application -> no_application
    int no_tiles_add -> no_tiles_add
    int notification_all_categories -> notification_all_categories
    int notification_app_settings -> notification_app_settings
    int notification_channel_alerts -> notification_channel_alerts
    int notification_channel_battery -> notification_channel_battery
    int notification_channel_controls_closed_accessibility -> notification_channel_controls_closed_accessibility
    int notification_channel_controls_opened_accessibility -> notification_channel_controls_opened_accessibility
    int notification_channel_disabled -> notification_channel_disabled
    int notification_channel_general -> notification_channel_general
    int notification_channel_screenshot -> notification_channel_screenshot
    int notification_channel_storage -> notification_channel_storage
    int notification_channel_switch_accessibility -> notification_channel_switch_accessibility
    int notification_channel_tv_pip -> notification_channel_tv_pip
    int notification_channels_list_desc_2 -> notification_channels_list_desc_2
    int notification_default_channel_desc -> notification_default_channel_desc
    int notification_done -> notification_done
    int notification_group_overflow_indicator -> notification_group_overflow_indicator
    int notification_header_default_channel -> notification_header_default_channel
    int notification_menu_accessibility -> notification_menu_accessibility
    int notification_menu_gear_description -> notification_menu_gear_description
    int notification_menu_snooze_description -> notification_menu_snooze_description
    int notification_more_settings -> notification_more_settings
    int notification_num_channels -> notification_num_channels
    int notification_tap_again -> notification_tap_again
    int notification_unblockable_desc -> notification_unblockable_desc
    int notifications_off_text -> notifications_off_text
    int notifications_off_title -> notifications_off_title
    int oem_preferred_feedback_reporter -> oem_preferred_feedback_reporter
    int oem_unlock_enable -> oem_unlock_enable
    int oem_unlock_enable_summary -> oem_unlock_enable_summary
    int ok -> ok
    int orb_search_action -> orb_search_action
    int other -> other
    int overlay_display_devices_title -> overlay_display_devices_title
    int overview -> overview
    int phone_hint -> phone_hint
    int phone_label -> phone_label
    int picture_color_mode -> picture_color_mode
    int picture_color_mode_desc -> picture_color_mode_desc
    int pip_close -> pip_close
    int pip_fullscreen -> pip_fullscreen
    int pip_menu_bounds -> pip_menu_bounds
    int pip_menu_title -> pip_menu_title
    int pip_notification_message -> pip_notification_message
    int pip_notification_title -> pip_notification_title
    int pip_notification_unknown_title -> pip_notification_unknown_title
    int pip_pause -> pip_pause
    int pip_phone_close -> pip_phone_close
    int pip_phone_dismiss_hint -> pip_phone_dismiss_hint
    int pip_phone_expand -> pip_phone_expand
    int pip_phone_minimize -> pip_phone_minimize
    int pip_play -> pip_play
    int pip_settings_bounds -> pip_settings_bounds
    int pip_skip_to_next -> pip_skip_to_next
    int pip_skip_to_prev -> pip_skip_to_prev
    int plugins -> plugins
    int pointer_location -> pointer_location
    int pointer_location_summary -> pointer_location_summary
    int power_charging -> power_charging
    int power_charging_duration -> power_charging_duration
    int power_discharging_duration -> power_discharging_duration
    int power_discharging_duration_enhanced -> power_discharging_duration_enhanced
    int power_discharging_duration_short -> power_discharging_duration_short
    int power_notification_controls_description -> power_notification_controls_description
    int power_remaining_charging_duration_only -> power_remaining_charging_duration_only
    int power_remaining_duration_only -> power_remaining_duration_only
    int power_remaining_duration_only_enhanced -> power_remaining_duration_only_enhanced
    int power_remaining_duration_only_short -> power_remaining_duration_only_short
    int power_remaining_duration_only_short_enhanced -> power_remaining_duration_only_short_enhanced
    int preference_summary_default_combination -> preference_summary_default_combination
    int process_kernel_label -> process_kernel_label
    int profile_owned_footer -> profile_owned_footer
    int proxy_exclusionlist_hint -> proxy_exclusionlist_hint
    int proxy_hostname_hint -> proxy_hostname_hint
    int proxy_port_hint -> proxy_port_hint
    int proxy_url_hint -> proxy_url_hint
    int qs_customize -> qs_customize
    int qs_customize_info -> qs_customize_info
    int qs_customize_remove -> qs_customize_remove
    int qs_dnd_keep -> qs_dnd_keep
    int qs_dnd_prompt_app -> qs_dnd_prompt_app
    int qs_dnd_prompt_auto_rule -> qs_dnd_prompt_auto_rule
    int qs_dnd_prompt_auto_rule_app -> qs_dnd_prompt_auto_rule_app
    int qs_dnd_replace -> qs_dnd_replace
    int qs_dnd_until -> qs_dnd_until
    int qs_edit -> qs_edit
    int qs_paging -> qs_paging
    int qs_rearrange -> qs_rearrange
    int quick_settings -> quick_settings
    int quick_settings_bluetooth_detail_empty_text -> quick_settings_bluetooth_detail_empty_text
    int quick_settings_bluetooth_label -> quick_settings_bluetooth_label
    int quick_settings_bluetooth_multiple_devices_label -> quick_settings_bluetooth_multiple_devices_label
    int quick_settings_bluetooth_off_label -> quick_settings_bluetooth_off_label
    int quick_settings_brightness_dialog_auto_brightness_label -> quick_settings_brightness_dialog_auto_brightness_label
    int quick_settings_brightness_dialog_title -> quick_settings_brightness_dialog_title
    int quick_settings_brightness_label -> quick_settings_brightness_label
    int quick_settings_cast_detail_empty_text -> quick_settings_cast_detail_empty_text
    int quick_settings_cast_device_default_description -> quick_settings_cast_device_default_description
    int quick_settings_cast_device_default_name -> quick_settings_cast_device_default_name
    int quick_settings_cast_title -> quick_settings_cast_title
    int quick_settings_casting -> quick_settings_casting
    int quick_settings_cellular_detail_data_limit -> quick_settings_cellular_detail_data_limit
    int quick_settings_cellular_detail_data_usage -> quick_settings_cellular_detail_data_usage
    int quick_settings_cellular_detail_data_used -> quick_settings_cellular_detail_data_used
    int quick_settings_cellular_detail_data_warning -> quick_settings_cellular_detail_data_warning
    int quick_settings_cellular_detail_over_limit -> quick_settings_cellular_detail_over_limit
    int quick_settings_cellular_detail_remaining_data -> quick_settings_cellular_detail_remaining_data
    int quick_settings_cellular_detail_title -> quick_settings_cellular_detail_title
    int quick_settings_color_space_label -> quick_settings_color_space_label
    int quick_settings_connected -> quick_settings_connected
    int quick_settings_connected_battery_level -> quick_settings_connected_battery_level
    int quick_settings_connecting -> quick_settings_connecting
    int quick_settings_disclosure_managed_profile_monitoring -> quick_settings_disclosure_managed_profile_monitoring
    int quick_settings_disclosure_managed_profile_named_vpn -> quick_settings_disclosure_managed_profile_named_vpn
    int quick_settings_disclosure_management -> quick_settings_disclosure_management
    int quick_settings_disclosure_management_monitoring -> quick_settings_disclosure_management_monitoring
    int quick_settings_disclosure_management_named_vpn -> quick_settings_disclosure_management_named_vpn
    int quick_settings_disclosure_management_vpns -> quick_settings_disclosure_management_vpns
    int quick_settings_disclosure_monitoring -> quick_settings_disclosure_monitoring
    int quick_settings_disclosure_named_managed_profile_monitoring -> quick_settings_disclosure_named_managed_profile_monitoring
    int quick_settings_disclosure_named_management -> quick_settings_disclosure_named_management
    int quick_settings_disclosure_named_management_monitoring -> quick_settings_disclosure_named_management_monitoring
    int quick_settings_disclosure_named_management_named_vpn -> quick_settings_disclosure_named_management_named_vpn
    int quick_settings_disclosure_named_management_vpns -> quick_settings_disclosure_named_management_vpns
    int quick_settings_disclosure_named_vpn -> quick_settings_disclosure_named_vpn
    int quick_settings_disclosure_personal_profile_named_vpn -> quick_settings_disclosure_personal_profile_named_vpn
    int quick_settings_disclosure_vpns -> quick_settings_disclosure_vpns
    int quick_settings_dnd_alarms_label -> quick_settings_dnd_alarms_label
    int quick_settings_dnd_label -> quick_settings_dnd_label
    int quick_settings_dnd_none_label -> quick_settings_dnd_none_label
    int quick_settings_dnd_priority_label -> quick_settings_dnd_priority_label
    int quick_settings_done -> quick_settings_done
    int quick_settings_flashlight_label -> quick_settings_flashlight_label
    int quick_settings_hotspot_label -> quick_settings_hotspot_label
    int quick_settings_ime_label -> quick_settings_ime_label
    int quick_settings_inversion_label -> quick_settings_inversion_label
    int quick_settings_location_label -> quick_settings_location_label
    int quick_settings_location_off_label -> quick_settings_location_off_label
    int quick_settings_media_device_label -> quick_settings_media_device_label
    int quick_settings_more_settings -> quick_settings_more_settings
    int quick_settings_nfc_label -> quick_settings_nfc_label
    int quick_settings_nfc_off -> quick_settings_nfc_off
    int quick_settings_nfc_on -> quick_settings_nfc_on
    int quick_settings_night_display_label -> quick_settings_night_display_label
    int quick_settings_notifications_label -> quick_settings_notifications_label
    int quick_settings_reset_confirmation_button -> quick_settings_reset_confirmation_button
    int quick_settings_reset_confirmation_message -> quick_settings_reset_confirmation_message
    int quick_settings_reset_confirmation_title -> quick_settings_reset_confirmation_title
    int quick_settings_rotation_locked_label -> quick_settings_rotation_locked_label
    int quick_settings_rotation_locked_landscape_label -> quick_settings_rotation_locked_landscape_label
    int quick_settings_rotation_locked_portrait_label -> quick_settings_rotation_locked_portrait_label
    int quick_settings_rotation_unlocked_label -> quick_settings_rotation_unlocked_label
    int quick_settings_rssi_emergency_only -> quick_settings_rssi_emergency_only
    int quick_settings_rssi_label -> quick_settings_rssi_label
    int quick_settings_settings_label -> quick_settings_settings_label
    int quick_settings_tethering_label -> quick_settings_tethering_label
    int quick_settings_tiles -> quick_settings_tiles
    int quick_settings_tiles_default -> quick_settings_tiles_default
    int quick_settings_tiles_retail_mode -> quick_settings_tiles_retail_mode
    int quick_settings_tiles_stock -> quick_settings_tiles_stock
    int quick_settings_time_label -> quick_settings_time_label
    int quick_settings_user_label -> quick_settings_user_label
    int quick_settings_user_new_user -> quick_settings_user_new_user
    int quick_settings_user_title -> quick_settings_user_title
    int quick_settings_wifi_detail_empty_text -> quick_settings_wifi_detail_empty_text
    int quick_settings_wifi_label -> quick_settings_wifi_label
    int quick_settings_wifi_no_network -> quick_settings_wifi_no_network
    int quick_settings_wifi_not_connected -> quick_settings_wifi_not_connected
    int quick_settings_wifi_off_label -> quick_settings_wifi_off_label
    int quick_settings_wifi_on_label -> quick_settings_wifi_on_label
    int quick_settings_work_mode_label -> quick_settings_work_mode_label
    int recents_accessibility_split_screen_left -> recents_accessibility_split_screen_left
    int recents_accessibility_split_screen_right -> recents_accessibility_split_screen_right
    int recents_accessibility_split_screen_top -> recents_accessibility_split_screen_top
    int recents_app_info_button_label -> recents_app_info_button_label
    int recents_caption_resize -> recents_caption_resize
    int recents_drag_hint_message -> recents_drag_hint_message
    int recents_empty_message -> recents_empty_message
    int recents_empty_message_dismissed_all -> recents_empty_message_dismissed_all
    int recents_launch_disabled_message -> recents_launch_disabled_message
    int recents_launch_error_message -> recents_launch_error_message
    int recents_lock_to_app_button_label -> recents_lock_to_app_button_label
    int recents_multistack_add_stack_dialog_split_custom -> recents_multistack_add_stack_dialog_split_custom
    int recents_multistack_add_stack_dialog_split_horizontal -> recents_multistack_add_stack_dialog_split_horizontal
    int recents_multistack_add_stack_dialog_split_vertical -> recents_multistack_add_stack_dialog_split_vertical
    int recents_search_bar_label -> recents_search_bar_label
    int recents_stack_action_button_label -> recents_stack_action_button_label
    int regrettable_lack_of_easter_egg -> regrettable_lack_of_easter_egg
    int remaining_length_format -> remaining_length_format
    int remove_from_settings -> remove_from_settings
    int remove_from_settings_prompt -> remove_from_settings_prompt
    int report_rejected_touch -> report_rejected_touch
    int reset -> reset
    int retail_demo_reset_message -> retail_demo_reset_message
    int retail_demo_reset_next -> retail_demo_reset_next
    int retail_demo_reset_title -> retail_demo_reset_title
    int right_icon -> right_icon
    int right_keycode -> right_keycode
    int right_nav_bar_button_type -> right_nav_bar_button_type
    int running_foreground_services_msg -> running_foreground_services_msg
    int running_foreground_services_title -> running_foreground_services_title
    int running_process_item_user_label -> running_process_item_user_label
    int runningservices_settings_summary -> runningservices_settings_summary
    int runningservices_settings_title -> runningservices_settings_title
    int save -> save
    int saved_network -> saved_network
    int screen_pinning_description -> screen_pinning_description
    int screen_pinning_description_accessible -> screen_pinning_description_accessible
    int screen_pinning_negative -> screen_pinning_negative
    int screen_pinning_positive -> screen_pinning_positive
    int screen_pinning_title -> screen_pinning_title
    int screen_zoom_summary_custom -> screen_zoom_summary_custom
    int screen_zoom_summary_default -> screen_zoom_summary_default
    int screen_zoom_summary_extremely_large -> screen_zoom_summary_extremely_large
    int screen_zoom_summary_large -> screen_zoom_summary_large
    int screen_zoom_summary_small -> screen_zoom_summary_small
    int screen_zoom_summary_very_large -> screen_zoom_summary_very_large
    int screenshot_failed_title -> screenshot_failed_title
    int screenshot_failed_to_capture_text -> screenshot_failed_to_capture_text
    int screenshot_failed_to_save_text -> screenshot_failed_to_save_text
    int screenshot_failed_to_save_unknown_text -> screenshot_failed_to_save_unknown_text
    int screenshot_saved_text -> screenshot_saved_text
    int screenshot_saved_title -> screenshot_saved_title
    int screenshot_saving_text -> screenshot_saving_text
    int screenshot_saving_ticker -> screenshot_saving_ticker
    int screenshot_saving_title -> screenshot_saving_title
    int search_menu_title -> search_menu_title
    int select_application -> select_application
    int select_logd_size_dialog_title -> select_logd_size_dialog_title
    int select_logd_size_title -> select_logd_size_title
    int select_logpersist_dialog_title -> select_logpersist_dialog_title
    int select_logpersist_title -> select_logpersist_title
    int select_usb_configuration_dialog_title -> select_usb_configuration_dialog_title
    int select_usb_configuration_title -> select_usb_configuration_title
    int select_webview_provider_dialog_title -> select_webview_provider_dialog_title
    int select_webview_provider_title -> select_webview_provider_title
    int select_webview_provider_toast_text -> select_webview_provider_toast_text
    int settings_package -> settings_package
    int show_all_anrs -> show_all_anrs
    int show_all_anrs_summary -> show_all_anrs_summary
    int show_battery_percentage -> show_battery_percentage
    int show_battery_percentage_summary -> show_battery_percentage_summary
    int show_brightness -> show_brightness
    int show_demo_mode -> show_demo_mode
    int show_hw_layers_updates -> show_hw_layers_updates
    int show_hw_layers_updates_summary -> show_hw_layers_updates_summary
    int show_hw_screen_updates -> show_hw_screen_updates
    int show_hw_screen_updates_summary -> show_hw_screen_updates_summary
    int show_non_rect_clip -> show_non_rect_clip
    int show_notification_channel_warnings -> show_notification_channel_warnings
    int show_notification_channel_warnings_summary -> show_notification_channel_warnings_summary
    int show_screen_updates -> show_screen_updates
    int show_screen_updates_summary -> show_screen_updates_summary
    int show_silently -> show_silently
    int show_touches -> show_touches
    int show_touches_summary -> show_touches_summary
    int simulate_color_space -> simulate_color_space
    int snooze_undo -> snooze_undo
    int snoozed_for_time -> snoozed_for_time
    int speed_bump_explanation -> speed_bump_explanation
    int speed_label_fast -> speed_label_fast
    int speed_label_medium -> speed_label_medium
    int speed_label_okay -> speed_label_okay
    int speed_label_slow -> speed_label_slow
    int speed_label_very_fast -> speed_label_very_fast
    int speed_label_very_slow -> speed_label_very_slow
    int ssl_ca_cert_warning -> ssl_ca_cert_warning
    int start_dreams -> start_dreams
    int start_driving -> start_driving
    int status_bar -> status_bar
    int status_bar_accessibility_dismiss_recents -> status_bar_accessibility_dismiss_recents
    int status_bar_airplane -> status_bar_airplane
    int status_bar_alarm -> status_bar_alarm
    int status_bar_clear_all_button -> status_bar_clear_all_button
    int status_bar_date_formatter -> status_bar_date_formatter
    int status_bar_ethernet -> status_bar_ethernet
    int status_bar_input_method_settings_configure_input_methods -> status_bar_input_method_settings_configure_input_methods
    int status_bar_latest_events_title -> status_bar_latest_events_title
    int status_bar_network_name_separator -> status_bar_network_name_separator
    int status_bar_no_notifications_title -> status_bar_no_notifications_title
    int status_bar_no_recent_apps -> status_bar_no_recent_apps
    int status_bar_notification_app_settings_title -> status_bar_notification_app_settings_title
    int status_bar_notification_inspect_item_title -> status_bar_notification_inspect_item_title
    int status_bar_ongoing_events_title -> status_bar_ongoing_events_title
    int status_bar_recent_inspect_item_title -> status_bar_recent_inspect_item_title
    int status_bar_recent_remove_item_title -> status_bar_recent_remove_item_title
    int status_bar_settings_auto_brightness_label -> status_bar_settings_auto_brightness_label
    int status_bar_settings_auto_rotation -> status_bar_settings_auto_rotation
    int status_bar_settings_mute_label -> status_bar_settings_mute_label
    int status_bar_settings_notifications -> status_bar_settings_notifications
    int status_bar_settings_settings_button -> status_bar_settings_settings_button
    int status_bar_settings_signal_meter_disconnected -> status_bar_settings_signal_meter_disconnected
    int status_bar_settings_signal_meter_wifi_nossid -> status_bar_settings_signal_meter_wifi_nossid
    int status_bar_settings_wifi_button -> status_bar_settings_wifi_button
    int status_bar_use_physical_keyboard -> status_bar_use_physical_keyboard
    int status_bar_work -> status_bar_work
    int stream_accessibility -> stream_accessibility
    int stream_alarm -> stream_alarm
    int stream_bluetooth_sco -> stream_bluetooth_sco
    int stream_dtmf -> stream_dtmf
    int stream_music -> stream_music
    int stream_notification -> stream_notification
    int stream_ring -> stream_ring
    int stream_system -> stream_system
    int stream_system_enforced -> stream_system_enforced
    int stream_tts -> stream_tts
    int stream_voice_call -> stream_voice_call
    int strict_mode -> strict_mode
    int strict_mode_summary -> strict_mode_summary
    int switch_bar_off -> switch_bar_off
    int switch_bar_on -> switch_bar_on
    int system_ui_date_pattern -> system_ui_date_pattern
    int system_ui_tuner -> system_ui_tuner
    int telephony_monitor_switch -> telephony_monitor_switch
    int telephony_monitor_switch_summary -> telephony_monitor_switch_summary
    int tether_settings_title_all -> tether_settings_title_all
    int tether_settings_title_bluetooth -> tether_settings_title_bluetooth
    int tether_settings_title_usb -> tether_settings_title_usb
    int tether_settings_title_usb_bluetooth -> tether_settings_title_usb_bluetooth
    int tether_settings_title_wifi -> tether_settings_title_wifi
    int tethering_hardware_offload -> tethering_hardware_offload
    int tethering_hardware_offload_summary -> tethering_hardware_offload_summary
    int tethering_settings_not_available -> tethering_settings_not_available
    int theme -> theme
    int thermal_shutdown_dialog_message -> thermal_shutdown_dialog_message
    int thermal_shutdown_message -> thermal_shutdown_message
    int thermal_shutdown_title -> thermal_shutdown_title
    int title_convert_fbe -> title_convert_fbe
    int title_usb_accessory -> title_usb_accessory
    int toast_rotation_locked -> toast_rotation_locked
    int touch_filtered_warning -> touch_filtered_warning
    int track_frame_time -> track_frame_time
    int transition_animation_scale_title -> transition_animation_scale_title
    int tts_default_lang_summary -> tts_default_lang_summary
    int tts_default_lang_title -> tts_default_lang_title
    int tts_default_pitch_summary -> tts_default_pitch_summary
    int tts_default_pitch_title -> tts_default_pitch_title
    int tts_default_rate_summary -> tts_default_rate_summary
    int tts_default_rate_title -> tts_default_rate_title
    int tts_default_sample_string -> tts_default_sample_string
    int tts_engine_network_required -> tts_engine_network_required
    int tts_engine_preference_section_title -> tts_engine_preference_section_title
    int tts_engine_security_warning -> tts_engine_security_warning
    int tts_engine_settings_button -> tts_engine_settings_button
    int tts_engine_settings_title -> tts_engine_settings_title
    int tts_general_section_title -> tts_general_section_title
    int tts_install_data_summary -> tts_install_data_summary
    int tts_install_data_title -> tts_install_data_title
    int tts_lang_not_selected -> tts_lang_not_selected
    int tts_lang_use_system -> tts_lang_use_system
    int tts_play_example_summary -> tts_play_example_summary
    int tts_play_example_title -> tts_play_example_title
    int tts_reset_speech_pitch_summary -> tts_reset_speech_pitch_summary
    int tts_reset_speech_pitch_title -> tts_reset_speech_pitch_title
    int tts_settings -> tts_settings
    int tts_settings_title -> tts_settings_title
    int tts_status_checking -> tts_status_checking
    int tts_status_not_supported -> tts_status_not_supported
    int tts_status_ok -> tts_status_ok
    int tts_status_requires_network -> tts_status_requires_network
    int tts_status_title -> tts_status_title
    int tuner_app -> tuner_app
    int tuner_circle -> tuner_circle
    int tuner_doze -> tuner_doze
    int tuner_doze_always_on -> tuner_doze_always_on
    int tuner_full_importance_settings -> tuner_full_importance_settings
    int tuner_full_importance_settings_off -> tuner_full_importance_settings_off
    int tuner_full_importance_settings_on -> tuner_full_importance_settings_on
    int tuner_full_zen_title -> tuner_full_zen_title
    int tuner_launch_app -> tuner_launch_app
    int tuner_left -> tuner_left
    int tuner_lock_screen -> tuner_lock_screen
    int tuner_menu -> tuner_menu
    int tuner_minus -> tuner_minus
    int tuner_other_apps -> tuner_other_apps
    int tuner_persistent_warning -> tuner_persistent_warning
    int tuner_plus -> tuner_plus
    int tuner_right -> tuner_right
    int tuner_time -> tuner_time
    int tuner_toast -> tuner_toast
    int tuner_warning -> tuner_warning
    int tuner_warning_title -> tuner_warning_title
    int unknown -> unknown
    int unknown_user_label -> unknown_user_label
    int unlock_label -> unlock_label
    int usb_accessory_confirm_prompt -> usb_accessory_confirm_prompt
    int usb_accessory_permission_prompt -> usb_accessory_permission_prompt
    int usb_accessory_uri_prompt -> usb_accessory_uri_prompt
    int usb_audio_disable_routing -> usb_audio_disable_routing
    int usb_audio_disable_routing_summary -> usb_audio_disable_routing_summary
    int usb_debugging_always -> usb_debugging_always
    int usb_debugging_message -> usb_debugging_message
    int usb_debugging_secondary_user_message -> usb_debugging_secondary_user_message
    int usb_debugging_secondary_user_title -> usb_debugging_secondary_user_title
    int usb_debugging_title -> usb_debugging_title
    int usb_device_confirm_prompt -> usb_device_confirm_prompt
    int usb_device_permission_prompt -> usb_device_permission_prompt
    int usb_preference_title -> usb_preference_title
    int use_mtp_button_title -> use_mtp_button_title
    int use_ptp_button_title -> use_ptp_button_title
    int use_system_language_to_select_input_method_subtypes -> use_system_language_to_select_input_method_subtypes
    int user_add_user -> user_add_user
    int user_add_user_message_short -> user_add_user_message_short
    int user_add_user_title -> user_add_user_title
    int user_guest -> user_guest
    int user_logout_notification_action -> user_logout_notification_action
    int user_logout_notification_text -> user_logout_notification_text
    int user_logout_notification_title -> user_logout_notification_title
    int user_new_user_name -> user_new_user_name
    int user_remove_user_message -> user_remove_user_message
    int user_remove_user_remove -> user_remove_user_remove
    int user_remove_user_title -> user_remove_user_title
    int v7_preference_off -> v7_preference_off
    int v7_preference_on -> v7_preference_on
    int velocity_tracker_impl -> velocity_tracker_impl
    int verify_apps_over_usb_summary -> verify_apps_over_usb_summary
    int verify_apps_over_usb_title -> verify_apps_over_usb_title
    int voice_assist_label -> voice_assist_label
    int voice_hint -> voice_hint
    int volume_and_do_not_disturb -> volume_and_do_not_disturb
    int volume_dialog_accessibility_dismissed_message -> volume_dialog_accessibility_dismissed_message
    int volume_dialog_accessibility_shown_message -> volume_dialog_accessibility_shown_message
    int volume_dnd_silent -> volume_dnd_silent
    int volume_stream_content_description_mute -> volume_stream_content_description_mute
    int volume_stream_content_description_mute_a11y -> volume_stream_content_description_mute_a11y
    int volume_stream_content_description_unmute -> volume_stream_content_description_unmute
    int volume_stream_content_description_vibrate -> volume_stream_content_description_vibrate
    int volume_stream_content_description_vibrate_a11y -> volume_stream_content_description_vibrate_a11y
    int volume_stream_limited_dnd -> volume_stream_limited_dnd
    int volume_stream_muted -> volume_stream_muted
    int volume_stream_muted_dnd -> volume_stream_muted_dnd
    int volume_stream_suppressed -> volume_stream_suppressed
    int volume_stream_vibrate -> volume_stream_vibrate
    int volume_stream_vibrate_dnd -> volume_stream_vibrate_dnd
    int volume_up_silent -> volume_up_silent
    int volume_zen_end_now -> volume_zen_end_now
    int vpn_footer -> vpn_footer
    int vpn_settings_not_available -> vpn_settings_not_available
    int wait_for_debugger -> wait_for_debugger
    int wait_for_debugger_summary -> wait_for_debugger_summary
    int wifi_aggressive_handover -> wifi_aggressive_handover
    int wifi_aggressive_handover_summary -> wifi_aggressive_handover_summary
    int wifi_allow_scan_with_traffic -> wifi_allow_scan_with_traffic
    int wifi_allow_scan_with_traffic_summary -> wifi_allow_scan_with_traffic_summary
    int wifi_ap_unable_to_handle_new_sta -> wifi_ap_unable_to_handle_new_sta
    int wifi_auth_password_wrong -> wifi_auth_password_wrong
    int wifi_cant_connect -> wifi_cant_connect
    int wifi_cant_connect_to_ap -> wifi_cant_connect_to_ap
    int wifi_check_password_try_again -> wifi_check_password_try_again
    int wifi_connected_no_internet -> wifi_connected_no_internet
    int wifi_disabled_by_recommendation_provider -> wifi_disabled_by_recommendation_provider
    int wifi_disabled_generic -> wifi_disabled_generic
    int wifi_disabled_network_failure -> wifi_disabled_network_failure
    int wifi_disabled_password_failure -> wifi_disabled_password_failure
    int wifi_disabled_wifi_failure -> wifi_disabled_wifi_failure
    int wifi_display_certification -> wifi_display_certification
    int wifi_display_certification_summary -> wifi_display_certification_summary
    int wifi_dns1_hint -> wifi_dns1_hint
    int wifi_dns2_hint -> wifi_dns2_hint
    int wifi_fail_to_scan -> wifi_fail_to_scan
    int wifi_gateway_hint -> wifi_gateway_hint
    int wifi_ip_address_hint -> wifi_ip_address_hint
    int wifi_is_off -> wifi_is_off
    int wifi_network_prefix_length_hint -> wifi_network_prefix_length_hint
    int wifi_no_internet -> wifi_no_internet
    int wifi_no_internet_no_reconnect -> wifi_no_internet_no_reconnect
    int wifi_not_in_range -> wifi_not_in_range
    int wifi_remembered -> wifi_remembered
    int wifi_security_eap -> wifi_security_eap
    int wifi_security_none -> wifi_security_none
    int wifi_security_passpoint -> wifi_security_passpoint
    int wifi_security_psk_generic -> wifi_security_psk_generic
    int wifi_security_short_eap -> wifi_security_short_eap
    int wifi_security_short_psk_generic -> wifi_security_short_psk_generic
    int wifi_security_short_wep -> wifi_security_short_wep
    int wifi_security_short_wpa -> wifi_security_short_wpa
    int wifi_security_short_wpa2 -> wifi_security_short_wpa2
    int wifi_security_short_wpa_wpa2 -> wifi_security_short_wpa_wpa2
    int wifi_security_wep -> wifi_security_wep
    int wifi_security_wpa -> wifi_security_wpa
    int wifi_security_wpa2 -> wifi_security_wpa2
    int wifi_security_wpa_wpa2 -> wifi_security_wpa_wpa2
    int wifi_verbose_logging -> wifi_verbose_logging
    int wifi_verbose_logging_summary -> wifi_verbose_logging_summary
    int window_animation_scale_title -> window_animation_scale_title
    int zen_alarm_warning -> zen_alarm_warning
    int zen_alarm_warning_indef -> zen_alarm_warning_indef
    int zen_alarms_introduction -> zen_alarms_introduction
    int zen_mode_and_condition -> zen_mode_and_condition
    int zen_priority_customize_button -> zen_priority_customize_button
    int zen_priority_introduction -> zen_priority_introduction
    int zen_silence_introduction -> zen_silence_introduction
    int zen_silence_introduction_voice -> zen_silence_introduction_voice
    void <init>() -> <init>
com.android.systemui.classifier.FalsingLog -> com.android.systemui.classifier.FalsingLog:
    int MAX_SIZE -> MAX_SIZE
    java.text.SimpleDateFormat mFormat -> mFormat
    java.util.ArrayDeque mLog -> mLog
    com.android.systemui.classifier.FalsingLog sInstance -> sInstance
    void dump(java.io.PrintWriter) -> dump
    void v(java.lang.String,java.lang.String) -> v
    void i(java.lang.String,java.lang.String) -> i
    void wLogcat(java.lang.String,java.lang.String) -> wLogcat
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    void <init>() -> <init>
    void e(java.lang.String,java.lang.String) -> e
    void log(java.lang.String,java.lang.String,java.lang.String) -> log
    void <clinit>() -> <clinit>
com.android.systemui.stackdivider.WindowManagerProxy -> com.android.systemui.stackdivider.WindowManagerProxy:
    float mDimLayerAlpha -> mDimLayerAlpha
    java.lang.Runnable mDimLayerRunnable -> mDimLayerRunnable
    int mDimLayerTargetStack -> mDimLayerTargetStack
    boolean mDimLayerVisible -> mDimLayerVisible
    java.lang.Runnable mDismissRunnable -> mDismissRunnable
    android.graphics.Rect mDockedRect -> mDockedRect
    java.util.concurrent.ExecutorService mExecutor -> mExecutor
    java.lang.Runnable mMaximizeRunnable -> mMaximizeRunnable
    java.lang.Runnable mResizeRunnable -> mResizeRunnable
    java.lang.Runnable mSetTouchableRegionRunnable -> mSetTouchableRegionRunnable
    java.lang.Runnable mSwapRunnable -> mSwapRunnable
    android.graphics.Rect mTempDockedInsetRect -> mTempDockedInsetRect
    android.graphics.Rect mTempDockedTaskRect -> mTempDockedTaskRect
    android.graphics.Rect mTempOtherInsetRect -> mTempOtherInsetRect
    android.graphics.Rect mTempOtherTaskRect -> mTempOtherTaskRect
    android.graphics.Rect mTmpRect1 -> mTmpRect1
    android.graphics.Rect mTmpRect2 -> mTmpRect2
    android.graphics.Rect mTmpRect3 -> mTmpRect3
    android.graphics.Rect mTmpRect4 -> mTmpRect4
    android.graphics.Rect mTmpRect5 -> mTmpRect5
    android.graphics.Rect mTouchableRegion -> mTouchableRegion
    com.android.systemui.stackdivider.WindowManagerProxy sInstance -> sInstance
    com.android.systemui.stackdivider.WindowManagerProxy getInstance() -> getInstance
    int getDockSide() -> getDockSide
    void maximizeDockedStack() -> maximizeDockedStack
    void <init>() -> <init>
    void dismissDockedStack() -> dismissDockedStack
    void resizeDockedStack(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> resizeDockedStack
    void setResizeDimLayer(boolean,int,float) -> setResizeDimLayer
    void setResizing(boolean) -> setResizing
    void setTouchRegion(android.graphics.Rect) -> setTouchRegion
    void <clinit>() -> <clinit>
    float -get0(com.android.systemui.stackdivider.WindowManagerProxy) -> -get0
    int -get1(com.android.systemui.stackdivider.WindowManagerProxy) -> -get1
    boolean -get2(com.android.systemui.stackdivider.WindowManagerProxy) -> -get2
    android.graphics.Rect -get3(com.android.systemui.stackdivider.WindowManagerProxy) -> -get3
    android.graphics.Rect -get4(com.android.systemui.stackdivider.WindowManagerProxy) -> -get4
    android.graphics.Rect -get5(com.android.systemui.stackdivider.WindowManagerProxy) -> -get5
    android.graphics.Rect -get6(com.android.systemui.stackdivider.WindowManagerProxy) -> -get6
    android.graphics.Rect -get7(com.android.systemui.stackdivider.WindowManagerProxy) -> -get7
    android.graphics.Rect -get8(com.android.systemui.stackdivider.WindowManagerProxy) -> -get8
    android.graphics.Rect -get9(com.android.systemui.stackdivider.WindowManagerProxy) -> -get9
    android.graphics.Rect -get10(com.android.systemui.stackdivider.WindowManagerProxy) -> -get10
    android.graphics.Rect -get11(com.android.systemui.stackdivider.WindowManagerProxy) -> -get11
    android.graphics.Rect -get12(com.android.systemui.stackdivider.WindowManagerProxy) -> -get12
    android.graphics.Rect -get13(com.android.systemui.stackdivider.WindowManagerProxy) -> -get13
com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper -> com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    boolean isDismissGesture(android.view.MotionEvent) -> isDismissGesture
    boolean swipedFarEnough(float,float) -> swipedFarEnough
    void snap(android.view.View,float,float) -> snap
    void dismiss(android.view.View,float) -> dismiss
    float getMinDismissVelocity() -> getMinDismissVelocity
    void snooze(android.service.notification.StatusBarNotification,com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption) -> snooze
    boolean isFalseGesture(android.view.MotionEvent) -> isFalseGesture
    boolean swipedFastEnough(float,float) -> swipedFastEnough
com.android.systemui.statusbar.phone.DozeScrimController$6 -> com.android.systemui.statusbar.phone.DozeScrimController$6:
    com.android.systemui.statusbar.phone.DozeScrimController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.DozeScrimController) -> <init>
    void run() -> run
com.android.systemui.volume.VolumeDialogControllerImpl$C$8 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$8:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$OpGenerator -> android.support.v4.app.FragmentManagerImpl$OpGenerator:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
com.android.systemui.recents.events.ui.dragndrop.DragStartInitializeDropTargetsEvent -> com.android.systemui.recents.events.ui.dragndrop.DragStartInitializeDropTargetsEvent:
    com.android.systemui.recents.views.RecentsViewTouchHandler handler -> handler
    com.android.systemui.recents.model.Task task -> task
    com.android.systemui.recents.views.TaskView taskView -> taskView
    void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.RecentsViewTouchHandler) -> <init>
com.android.systemui.recents.views.TaskView$6 -> com.android.systemui.recents.views.TaskView$6:
    com.android.systemui.recents.views.TaskView this$0 -> this$0
    android.animation.Animator$AnimatorListener val$animListener -> val$animListener
    void <init>(com.android.systemui.recents.views.TaskView,android.animation.Animator$AnimatorListener) -> <init>
    void run() -> run
android.support.v17.leanback.widget.BaseCardView$3 -> android.support.v17.leanback.widget.BaseCardView$3:
    android.support.v17.leanback.widget.BaseCardView this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.support.v17.leanback.widget.BaseCardView) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.android.settingslib.AppItem -> com.android.settingslib.AppItem:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int key -> key
    android.util.SparseBooleanArray uids -> uids
    long total -> total
    int category -> category
    int describeContents() -> describeContents
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareTo(java.lang.Object) -> compareTo
    void <init>() -> <init>
    int compareTo(com.android.settingslib.AppItem) -> compareTo
    void <init>(android.os.Parcel) -> <init>
com.android.systemui.volume.VolumeDialogControllerImpl -> com.android.systemui.volume.VolumeDialogControllerImpl:
    android.util.ArrayMap STREAMS -> STREAMS
    java.lang.String TAG -> TAG
    android.media.AudioManager mAudio -> mAudio
    com.android.systemui.volume.VolumeDialogControllerImpl$C mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    boolean mDestroyed -> mDestroyed
    boolean mHasVibrator -> mHasVibrator
    com.android.systemui.volume.MediaSessions mMediaSessions -> mMediaSessions
    com.android.systemui.volume.VolumeDialogControllerImpl$MediaSessionsCallbacks mMediaSessionsCallbacksW -> mMediaSessionsCallbacksW
    android.app.NotificationManager mNoMan -> mNoMan
    com.android.systemui.volume.VolumeDialogControllerImpl$SettingObserver mObserver -> mObserver
    com.android.systemui.volume.VolumeDialogControllerImpl$Receiver mReceiver -> mReceiver
    boolean mShowA11yStream -> mShowA11yStream
    boolean mShowDndTile -> mShowDndTile
    com.android.systemui.plugins.VolumeDialogController$State mState -> mState
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    com.android.systemui.volume.VolumeDialogControllerImpl$UserActivityListener mUserActivityListener -> mUserActivityListener
    android.os.Vibrator mVibrator -> mVibrator
    com.android.systemui.volume.VolumeDialogControllerImpl$VC mVolumeController -> mVolumeController
    android.media.VolumePolicy mVolumePolicy -> mVolumePolicy
    com.android.systemui.volume.VolumeDialogControllerImpl$W mWorker -> mWorker
    android.os.HandlerThread mWorkerThread -> mWorkerThread
    void setUserActivityListener(com.android.systemui.volume.VolumeDialogControllerImpl$UserActivityListener) -> setUserActivityListener
    void setVolumePolicy(android.media.VolumePolicy) -> setVolumePolicy
    void showDndTile(boolean) -> showDndTile
    void dismiss() -> dismiss
    void register() -> register
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.plugins.VolumeDialogController$Callbacks,android.os.Handler) -> addCallback
    boolean checkRoutedToBluetoothW(int) -> checkRoutedToBluetoothW
    com.android.systemui.volume.MediaSessions createMediaSessions(android.content.Context,android.os.Looper,com.android.systemui.volume.MediaSessions$Callbacks) -> createMediaSessions
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String getApplicationName(android.content.Context,android.content.ComponentName) -> getApplicationName
    android.media.AudioManager getAudioManager() -> getAudioManager
    int getAudioManagerStreamMaxVolume(int) -> getAudioManagerStreamMaxVolume
    int getAudioManagerStreamMinVolume(int) -> getAudioManagerStreamMinVolume
    int getAudioManagerStreamVolume(int) -> getAudioManagerStreamVolume
    void getState() -> getState
    boolean hasVibrator() -> hasVibrator
    boolean isLogWorthy(int) -> isLogWorthy
    boolean isRinger(int) -> isRinger
    void notifyVisible(boolean) -> notifyVisible
    void onAccessibilityModeChanged(java.lang.Boolean) -> onAccessibilityModeChanged
    void onDismissRequestedW(int) -> onDismissRequestedW
    void onGetStateW() -> onGetStateW
    void onNotifyVisibleW(boolean) -> onNotifyVisibleW
    void onSetActiveStreamW(int) -> onSetActiveStreamW
    void onSetExitConditionW(android.service.notification.Condition) -> onSetExitConditionW
    void onSetRingerModeW(int,boolean) -> onSetRingerModeW
    void onSetStreamMuteW(int,boolean) -> onSetStreamMuteW
    void onSetStreamVolumeW(int,int) -> onSetStreamVolumeW
    void onSetZenModeW(int) -> onSetZenModeW
    void onShowSafetyWarningW(int) -> onShowSafetyWarningW
    void onUserActivityW() -> onUserActivityW
    boolean onVolumeChangedW(int,int) -> onVolumeChangedW
    void removeCallback(com.android.systemui.plugins.VolumeDialogController$Callbacks) -> removeCallback
    void setActiveStream(int) -> setActiveStream
    void setAudioManagerStreamVolume(int,int,int) -> setAudioManagerStreamVolume
    void setRingerMode(int,boolean) -> setRingerMode
    void setStreamVolume(int,int) -> setStreamVolume
    void setVolumeController() -> setVolumeController
    boolean shouldShowUI(int) -> shouldShowUI
    com.android.systemui.plugins.VolumeDialogController$StreamState streamStateW(int) -> streamStateW
    boolean updateActiveStreamW(int) -> updateActiveStreamW
    boolean updateEffectsSuppressorW(android.content.ComponentName) -> updateEffectsSuppressorW
    boolean updateRingerModeExternalW(int) -> updateRingerModeExternalW
    boolean updateRingerModeInternalW(int) -> updateRingerModeInternalW
    void updateStatusBar() -> updateStatusBar
    boolean updateStreamLevelW(int,int) -> updateStreamLevelW
    boolean updateStreamMuteW(int,boolean) -> updateStreamMuteW
    boolean updateStreamRoutedToBluetoothW(int,boolean) -> updateStreamRoutedToBluetoothW
    boolean updateZenModeW() -> updateZenModeW
    void userActivity() -> userActivity
    void vibrate() -> vibrate
    void <clinit>() -> <clinit>
    java.lang.String -get0() -> -get0
    android.content.Context -get1(com.android.systemui.volume.VolumeDialogControllerImpl) -> -get1
    boolean -get2(com.android.systemui.volume.VolumeDialogControllerImpl) -> -get2
    com.android.systemui.volume.MediaSessions -get3(com.android.systemui.volume.VolumeDialogControllerImpl) -> -get3
    android.app.NotificationManager -get4(com.android.systemui.volume.VolumeDialogControllerImpl) -> -get4
    boolean -get5(com.android.systemui.volume.VolumeDialogControllerImpl) -> -get5
    com.android.systemui.plugins.VolumeDialogController$State -get6(com.android.systemui.volume.VolumeDialogControllerImpl) -> -get6
    com.android.systemui.volume.VolumeDialogControllerImpl$W -get7(com.android.systemui.volume.VolumeDialogControllerImpl) -> -get7
    boolean -set0(com.android.systemui.volume.VolumeDialogControllerImpl,boolean) -> -set0
    boolean -wrap0(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap0
    boolean -wrap1(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap1
    boolean -wrap2(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap2
    boolean -wrap3(com.android.systemui.volume.VolumeDialogControllerImpl,android.content.ComponentName) -> -wrap3
    boolean -wrap4(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap4
    boolean -wrap5(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap5
    boolean -wrap6(com.android.systemui.volume.VolumeDialogControllerImpl,int,int) -> -wrap6
    boolean -wrap7(com.android.systemui.volume.VolumeDialogControllerImpl,int,boolean) -> -wrap7
    boolean -wrap8(com.android.systemui.volume.VolumeDialogControllerImpl) -> -wrap8
    com.android.systemui.plugins.VolumeDialogController$StreamState -wrap9(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap9
    void -wrap10(com.android.systemui.volume.VolumeDialogControllerImpl,java.lang.Boolean) -> -wrap10
    void -wrap11(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap11
    void -wrap12(com.android.systemui.volume.VolumeDialogControllerImpl) -> -wrap12
    void -wrap13(com.android.systemui.volume.VolumeDialogControllerImpl,boolean) -> -wrap13
    void -wrap14(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap14
    void -wrap15(com.android.systemui.volume.VolumeDialogControllerImpl,android.service.notification.Condition) -> -wrap15
    void -wrap16(com.android.systemui.volume.VolumeDialogControllerImpl,int,boolean) -> -wrap16
    void -wrap17(com.android.systemui.volume.VolumeDialogControllerImpl,int,boolean) -> -wrap17
    void -wrap18(com.android.systemui.volume.VolumeDialogControllerImpl,int,int) -> -wrap18
    void -wrap19(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap19
    void -wrap20(com.android.systemui.volume.VolumeDialogControllerImpl,int) -> -wrap20
    void -wrap21(com.android.systemui.volume.VolumeDialogControllerImpl) -> -wrap21
com.android.systemui.statusbar.KeyboardShortcutKeysLayout -> com.android.systemui.statusbar.KeyboardShortcutKeysLayout:
    android.content.Context mContext -> mContext
    int mLineHeight -> mLineHeight
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.android.systemui.statusbar.KeyboardShortcutKeysLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.android.systemui.statusbar.KeyboardShortcutKeysLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    int getHorizontalVerticalSpacing() -> getHorizontalVerticalSpacing
    boolean isRTL() -> isRTL
    void layoutChildrenOnRow(int,int,int,int,int,int) -> layoutChildrenOnRow
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
android.support.v7.recyclerview.R$styleable -> android.support.v7.recyclerview.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int[] ActionMenuItemView -> ActionMenuItemView
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int[] ActivityChooserView -> ActivityChooserView
    int[] AlertDialog -> AlertDialog
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int[] AppCompatTextView -> AppCompatTextView
    int[] AppCompatTheme -> AppCompatTheme
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] BackgroundStyle -> BackgroundStyle
    int[] BatteryMeterView -> BatteryMeterView
    int[] ButtonBarLayout -> ButtonBarLayout
    int[] CarrierText -> CarrierText
    int[] CheckBoxPreference -> CheckBoxPreference
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int[] CompoundButton -> CompoundButton
    int[] DateView -> DateView
    int[] DeadZone -> DeadZone
    int[] DialogPreference -> DialogPreference
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyButtonView -> KeyButtonView
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int[] ListPopupWindow -> ListPopupWindow
    int[] ListPreference -> ListPreference
    int[] MediaRouteButton -> MediaRouteButton
    int[] MenuGroup -> MenuGroup
    int[] MenuItem -> MenuItem
    int[] MenuView -> MenuView
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] NumPadKey -> NumPadKey
    int[] PagingIndicator -> PagingIndicator
    int[] PasswordTextView -> PasswordTextView
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int[] PreferenceGroup -> PreferenceGroup
    int[] PreferenceImageView -> PreferenceImageView
    int[] PreferenceTheme -> PreferenceTheme
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int[] RestrictedPreference -> RestrictedPreference
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int[] SearchView -> SearchView
    int[] SeekBarPreference -> SeekBarPreference
    int[] Spinner -> Spinner
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int[] TextAppearance -> TextAppearance
    int[] ToggleSliderView -> ToggleSliderView
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] UserDetailItemView -> UserDetailItemView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int[] ViewStubCompat -> ViewStubCompat
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int[] lbBaseGridView -> lbBaseGridView
    int[] lbDatePicker -> lbDatePicker
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int[] lbImageCardView -> lbImageCardView
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int[] lbSearchOrbView -> lbSearchOrbView
    int[] lbSlide -> lbSlide
    int[] lbTimePicker -> lbTimePicker
    int[] lbVerticalGridView -> lbVerticalGridView
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.phone.KeyguardBouncer$2 -> com.android.systemui.statusbar.phone.KeyguardBouncer$2:
    com.android.systemui.statusbar.phone.KeyguardBouncer this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBouncer) -> <init>
    void run() -> run
com.android.systemui.power.PowerNotificationWarnings -> com.android.systemui.power.PowerNotificationWarnings:
    android.media.AudioAttributes AUDIO_ATTRIBUTES -> AUDIO_ATTRIBUTES
    boolean DEBUG -> DEBUG
    java.lang.String[] SHOWING_STRINGS -> SHOWING_STRINGS
    int mBatteryLevel -> mBatteryLevel
    int mBucket -> mBucket
    long mBucketDroppedNegativeTimeMs -> mBucketDroppedNegativeTimeMs
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.android.systemui.statusbar.phone.SystemUIDialog mHighTempDialog -> mHighTempDialog
    boolean mHighTempWarning -> mHighTempWarning
    boolean mInvalidCharger -> mInvalidCharger
    android.app.NotificationManager mNoMan -> mNoMan
    android.content.Intent mOpenBatterySettings -> mOpenBatterySettings
    boolean mPlaySound -> mPlaySound
    android.os.PowerManager mPowerMan -> mPowerMan
    com.android.systemui.power.PowerNotificationWarnings$Receiver mReceiver -> mReceiver
    com.android.systemui.statusbar.phone.SystemUIDialog mSaverConfirmation -> mSaverConfirmation
    long mScreenOffTime -> mScreenOffTime
    int mShowing -> mShowing
    android.content.DialogInterface$OnClickListener mStartSaverMode -> mStartSaverMode
    com.android.systemui.statusbar.phone.SystemUIDialog mThermalShutdownDialog -> mThermalShutdownDialog
    boolean mWarning -> mWarning
    void <init>(android.content.Context) -> <init>
    void dismissHighTemperatureWarning() -> dismissHighTemperatureWarning
    void dismissHighTemperatureWarningInternal() -> dismissHighTemperatureWarningInternal
    void dismissInvalidChargerNotification() -> dismissInvalidChargerNotification
    void dismissInvalidChargerWarning() -> dismissInvalidChargerWarning
    void dismissLowBatteryNotification() -> dismissLowBatteryNotification
    void dismissLowBatteryWarning() -> dismissLowBatteryWarning
    void dismissThermalShutdownWarning() -> dismissThermalShutdownWarning
    void dump(java.io.PrintWriter) -> dump
    boolean hasBatterySettings() -> hasBatterySettings
    boolean isInvalidChargerWarningShowing() -> isInvalidChargerWarningShowing
    android.app.PendingIntent pendingBroadcast(java.lang.String) -> pendingBroadcast
    void setSaverMode(boolean) -> setSaverMode
    android.content.Intent settings(java.lang.String) -> settings
    void showHighTemperatureDialog() -> showHighTemperatureDialog
    void showHighTemperatureWarning() -> showHighTemperatureWarning
    void showInvalidChargerNotification() -> showInvalidChargerNotification
    void showInvalidChargerWarning() -> showInvalidChargerWarning
    void showLowBatteryWarning(boolean) -> showLowBatteryWarning
    void showStartSaverConfirmation() -> showStartSaverConfirmation
    void showThermalShutdownDialog() -> showThermalShutdownDialog
    void showThermalShutdownWarning() -> showThermalShutdownWarning
    void showWarningNotification() -> showWarningNotification
    void update(int,int,long) -> update
    void updateLowBatteryWarning() -> updateLowBatteryWarning
    void updateNotification() -> updateNotification
    void userSwitched() -> userSwitched
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_power_PowerNotificationWarnings_11943(android.content.DialogInterface) -> lambda$-com_android_systemui_power_PowerNotificationWarnings_11943
    void lambda$-com_android_systemui_power_PowerNotificationWarnings_12679(android.content.DialogInterface) -> lambda$-com_android_systemui_power_PowerNotificationWarnings_12679
    android.content.Context -get0(com.android.systemui.power.PowerNotificationWarnings) -> -get0
    android.os.Handler -get1(com.android.systemui.power.PowerNotificationWarnings) -> -get1
    android.content.Intent -get2(com.android.systemui.power.PowerNotificationWarnings) -> -get2
    com.android.systemui.statusbar.phone.SystemUIDialog -set0(com.android.systemui.power.PowerNotificationWarnings,com.android.systemui.statusbar.phone.SystemUIDialog) -> -set0
    void -wrap0(com.android.systemui.power.PowerNotificationWarnings) -> -wrap0
    void -wrap1(com.android.systemui.power.PowerNotificationWarnings) -> -wrap1
    void -wrap2(com.android.systemui.power.PowerNotificationWarnings,boolean) -> -wrap2
    void -wrap3(com.android.systemui.power.PowerNotificationWarnings) -> -wrap3
    void -wrap4(com.android.systemui.power.PowerNotificationWarnings) -> -wrap4
    void -wrap5(com.android.systemui.power.PowerNotificationWarnings) -> -wrap5
android.support.v4.view.animation.LinearOutSlowInInterpolator -> android.support.v4.view.animation.LinearOutSlowInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    float getInterpolation(float) -> getInterpolation
com.google.protobuf.nano.FieldData -> com.google.protobuf.nano.FieldData:
    java.util.List unknownFieldData -> unknownFieldData
    com.google.protobuf.nano.Extension cachedExtension -> cachedExtension
    java.lang.Object value -> value
    byte[] toByteArray() -> toByteArray
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int hashCode() -> hashCode
    int computeSerializedSize() -> computeSerializedSize
    com.google.protobuf.nano.FieldData clone() -> clone
    boolean equals(java.lang.Object) -> equals
    java.lang.Object clone() -> clone
    void <init>() -> <init>
com.android.keyguard.KeyguardUpdateMonitor$4 -> com.android.keyguard.KeyguardUpdateMonitor$4:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.classifier.EndPointLengthEvaluator -> com.android.systemui.classifier.EndPointLengthEvaluator:
    float evaluate(float) -> evaluate
    void <init>() -> <init>
com.android.systemui.settings.ToggleSeekBar -> com.android.systemui.settings.ToggleSeekBar:
    java.lang.String mAccessibilityLabel -> mAccessibilityLabel
    void setAccessibilityLabel(java.lang.String) -> setAccessibilityLabel
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.keyguard.KeyguardDisplayManager -> com.android.keyguard.KeyguardDisplayManager:
    boolean DEBUG -> DEBUG
    com.android.keyguard.ViewMediatorCallback mCallback -> mCallback
    android.content.Context mContext -> mContext
    android.media.MediaRouter mMediaRouter -> mMediaRouter
    android.media.MediaRouter$SimpleCallback mMediaRouterCallback -> mMediaRouterCallback
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> mOnDismissListener
    android.app.Presentation mPresentation -> mPresentation
    boolean mShowing -> mShowing
    void hide() -> hide
    void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback) -> <init>
    void show() -> show
    void updateDisplays(boolean) -> updateDisplays
    void <clinit>() -> <clinit>
    boolean -get0() -> -get0
    boolean -get1(com.android.keyguard.KeyguardDisplayManager) -> -get1
com.android.systemui.SysUIToast -> com.android.systemui.SysUIToast:
    void <init>() -> <init>
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
com.android.systemui.recents.RecentsActivity$4 -> com.android.systemui.recents.RecentsActivity$4:
    com.android.systemui.recents.RecentsActivity this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsActivity) -> <init>
    void run() -> run
com.android.systemui.recents.events.activity.DockedFirstAnimationFrameEvent -> com.android.systemui.recents.events.activity.DockedFirstAnimationFrameEvent:
    void <init>() -> <init>
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void play(java.lang.Object) -> play
    void stop(java.lang.Object) -> stop
    void <init>() -> <init>
    void pause(java.lang.Object) -> pause
android.support.v4.view.AbsSavedState$1 -> android.support.v4.view.AbsSavedState$1:
    void <init>() -> <init>
com.android.systemui.qs.QuickQSPanel$1 -> com.android.systemui.qs.QuickQSPanel$1:
    com.android.systemui.qs.QuickQSPanel this$0 -> this$0
    void <init>(com.android.systemui.qs.QuickQSPanel) -> <init>
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
android.support.v17.leanback.widget.Parallax$IntPropertyMarkerValue -> android.support.v17.leanback.widget.Parallax$IntPropertyMarkerValue:
    float mFactionOfMax -> mFactionOfMax
    int mValue -> mValue
    int getMarkerValue(android.support.v17.leanback.widget.Parallax) -> getMarkerValue
android.support.v4.util.Preconditions -> android.support.v4.util.Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void <init>() -> <init>
android.support.v7.preference.EditTextPreference$SavedState$1 -> android.support.v7.preference.EditTextPreference$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v7.preference.EditTextPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.preference.EditTextPreference$SavedState[] newArray(int) -> newArray
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.statusbar.phone.ManagedProfileController -> com.android.systemui.statusbar.phone.ManagedProfileController:
    void setWorkModeEnabled(boolean) -> setWorkModeEnabled
    boolean hasActiveProfile() -> hasActiveProfile
    boolean isWorkModeEnabled() -> isWorkModeEnabled
com.android.systemui.statusbar.phone.-$Lambda$T7g2SiyymZCZdfMR075uHCviYmE -> com.android.systemui.statusbar.phone.-$Lambda$T7g2SiyymZCZdfMR075uHCviYmE:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void $m$1(android.view.View) -> $m$1
    void $m$2(android.view.View) -> $m$2
    void $m$3(android.view.View) -> $m$3
    void onClick(android.view.View) -> onClick
android.support.v17.leanback.widget.SearchBar$6$3 -> android.support.v17.leanback.widget.SearchBar$6$3:
    android.support.v17.leanback.widget.SearchBar$6 this$1 -> this$1
    void run() -> run
    void <init>(android.support.v17.leanback.widget.SearchBar$6) -> <init>
com.android.keyguard.-$Lambda$oZunCo7YRnWwHfeo9lRYuShasms -> com.android.keyguard.-$Lambda$oZunCo7YRnWwHfeo9lRYuShasms:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.recents.RecentsImplProxy -> com.android.systemui.recents.RecentsImplProxy:
    android.os.Handler mHandler -> mHandler
    com.android.systemui.recents.RecentsImpl mImpl -> mImpl
    void <init>(com.android.systemui.recents.RecentsImpl) -> <init>
    void cancelPreloadingRecents() -> cancelPreloadingRecents
    void dockTopTask(int,int,int,android.graphics.Rect) -> dockTopTask
    void hideRecents(boolean,boolean) -> hideRecents
    void onConfigurationChanged() -> onConfigurationChanged
    void onDraggingInRecents(float) -> onDraggingInRecents
    void onDraggingInRecentsEnded(float) -> onDraggingInRecentsEnded
    void preloadRecents() -> preloadRecents
    void showCurrentUserToast(int,int) -> showCurrentUserToast
    void showRecents(boolean,boolean,boolean,boolean,boolean,int) -> showRecents
    void toggleRecents(int) -> toggleRecents
    com.android.systemui.recents.RecentsImpl -get0(com.android.systemui.recents.RecentsImplProxy) -> -get0
com.android.systemui.statusbar.phone.DozeScrimController$2 -> com.android.systemui.statusbar.phone.DozeScrimController$2:
    com.android.systemui.statusbar.phone.DozeScrimController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.DozeScrimController) -> <init>
    void run() -> run
com.android.systemui.util.leak.RotationUtils -> com.android.systemui.util.leak.RotationUtils:
    void <init>() -> <init>
    int getRotation(android.content.Context) -> getRotation
android.support.v7.widget.RecyclerView$ViewFlinger -> android.support.v7.widget.RecyclerView$ViewFlinger:
    boolean mEatRunOnAnimationRequest -> mEatRunOnAnimationRequest
    int mLastFlingY -> mLastFlingY
    boolean mReSchedulePostAnimationCallback -> mReSchedulePostAnimationCallback
    android.widget.OverScroller mScroller -> mScroller
    int mLastFlingX -> mLastFlingX
    android.support.v7.widget.RecyclerView this$0 -> this$0
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    void run() -> run
    void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    android.widget.OverScroller -get0(android.support.v7.widget.RecyclerView$ViewFlinger) -> -get0
    int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    void smoothScrollBy(int,int) -> smoothScrollBy
    void fling(int,int) -> fling
    void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    void postOnAnimation() -> postOnAnimation
    void smoothScrollBy(int,int,int,int) -> smoothScrollBy
    void stop() -> stop
    void smoothScrollBy(int,int,int) -> smoothScrollBy
com.android.settingslib.drawer.TileUtils$1 -> com.android.settingslib.drawer.TileUtils$1:
    int compare(com.android.settingslib.drawer.Tile,com.android.settingslib.drawer.Tile) -> compare
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.qs.customize.CustomizeTileView -> com.android.systemui.qs.customize.CustomizeTileView:
    android.widget.TextView mAppLabel -> mAppLabel
    int mLabelMinLines -> mLabelMinLines
    android.widget.TextView getAppLabel() -> getAppLabel
    void setShowAppLabel(boolean) -> setShowAppLabel
    void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView) -> <init>
    void setAppLabel(java.lang.CharSequence) -> setAppLabel
    void createLabel() -> createLabel
com.android.systemui.statusbar.stack.ViewState$2 -> com.android.systemui.statusbar.stack.ViewState$2:
    void <init>() -> <init>
    int getAnimationEndTag() -> getAnimationEndTag
    int getAnimationStartTag() -> getAnimationStartTag
    int getAnimatorTag() -> getAnimatorTag
    android.util.Property getProperty() -> getProperty
com.android.systemui.qs.customize.TileAdapter$4 -> com.android.systemui.qs.customize.TileAdapter$4:
    com.android.systemui.qs.customize.TileAdapter this$0 -> this$0
    com.android.systemui.qs.customize.TileAdapter$Holder val$holder -> val$holder
    void <init>(com.android.systemui.qs.customize.TileAdapter,com.android.systemui.qs.customize.TileAdapter$Holder) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.systemui.-$Lambda$uQuVkQsTlRTK7IkCm-ljWxBXLj0 -> com.android.systemui.-$Lambda$uQuVkQsTlRTK7IkCm-ljWxBXLj0:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void run() -> run
com.android.systemui.doze.AlwaysOnDisplayPolicy$SettingsObserver -> com.android.systemui.doze.AlwaysOnDisplayPolicy$SettingsObserver:
    android.net.Uri ALWAYS_ON_DISPLAY_CONSTANTS_URI -> ALWAYS_ON_DISPLAY_CONSTANTS_URI
    com.android.systemui.doze.AlwaysOnDisplayPolicy this$0 -> this$0
    void <init>(com.android.systemui.doze.AlwaysOnDisplayPolicy,android.os.Handler) -> <init>
    void observe() -> observe
    void onChange(boolean,android.net.Uri) -> onChange
    void update(android.net.Uri) -> update
com.android.systemui.keyguard.DismissCallbackWrapper -> com.android.systemui.keyguard.DismissCallbackWrapper:
    com.android.internal.policy.IKeyguardDismissCallback mCallback -> mCallback
    void <init>(com.android.internal.policy.IKeyguardDismissCallback) -> <init>
    void notifyDismissError() -> notifyDismissError
    void notifyDismissCancelled() -> notifyDismissCancelled
    void notifyDismissSucceeded() -> notifyDismissSucceeded
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
    android.app.PendingIntent getSessionActivity(java.lang.Object) -> getSessionActivity
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    void <init>() -> <init>
android.support.v7.view.menu.ListMenuPresenter -> android.support.v7.view.menu.ListMenuPresenter:
    android.support.v7.view.menu.ExpandedMenuView mMenuView -> mMenuView
    int mThemeRes -> mThemeRes
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> mCallback
    android.content.Context mContext -> mContext
    int mItemLayoutRes -> mItemLayoutRes
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    int mItemIndexOffset -> mItemIndexOffset
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> mAdapter
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    void <init>(android.content.Context,int) -> <init>
    boolean flagActionItems() -> flagActionItems
    android.widget.ListAdapter getAdapter() -> getAdapter
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    void <init>(int,int) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    void updateMenuView(boolean) -> updateMenuView
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    java.lang.String mName -> mName
    boolean mReorderingAllowed -> mReorderingAllowed
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    int mIndex -> mIndex
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    boolean mCommitted -> mCommitted
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    java.util.ArrayList mOps -> mOps
    int mPopExitAnim -> mPopExitAnim
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    boolean mAddToBackStack -> mAddToBackStack
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    int mTransitionStyle -> mTransitionStyle
    int mTransition -> mTransition
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    int mEnterAnim -> mEnterAnim
    java.util.ArrayList mCommitRunnables -> mCommitRunnables
    void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    int commit() -> commit
    boolean interactsWith(int) -> interactsWith
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.Fragment expandOps(java.util.ArrayList,android.support.v4.app.Fragment) -> expandOps
    android.support.v4.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,android.support.v4.app.Fragment) -> trackAddedFragmentsInPop
    java.lang.String getName() -> getName
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    int commitInternal(boolean) -> commitInternal
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    void runOnCommitRunnables() -> runOnCommitRunnables
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    void executeOps() -> executeOps
    boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op) -> isFragmentPostponed
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    java.lang.String toString() -> toString
    void executePopOps(boolean) -> executePopOps
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    boolean isPostponed() -> isPostponed
com.android.systemui.statusbar.tv.TvStatusBar -> com.android.systemui.statusbar.tv.TvStatusBar:
    com.android.internal.statusbar.IStatusBarService mBarService -> mBarService
    void <init>() -> <init>
    void start() -> start
com.android.systemui.plugins.qs.QS$HeightListener -> com.android.systemui.plugins.qs.QS$HeightListener:
    int VERSION -> VERSION
    void onQsHeightChanged() -> onQsHeightChanged
android.support.v17.leanback.widget.SearchOrbView$Colors -> android.support.v17.leanback.widget.SearchOrbView$Colors:
    int brightColor -> brightColor
    int iconColor -> iconColor
    int color -> color
    void <init>(int,int,int) -> <init>
    int getBrightColor(int) -> getBrightColor
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
android.support.v17.leanback.widget.HorizontalGridView -> android.support.v17.leanback.widget.HorizontalGridView:
    int mHighFadeShaderOffset -> mHighFadeShaderOffset
    boolean mFadingLowEdge -> mFadingLowEdge
    android.graphics.Bitmap mTempBitmapHigh -> mTempBitmapHigh
    android.graphics.LinearGradient mLowFadeShader -> mLowFadeShader
    android.graphics.Bitmap mTempBitmapLow -> mTempBitmapLow
    int mHighFadeShaderLength -> mHighFadeShaderLength
    android.graphics.LinearGradient mHighFadeShader -> mHighFadeShader
    android.graphics.Rect mTempRect -> mTempRect
    int mLowFadeShaderLength -> mLowFadeShaderLength
    int mLowFadeShaderOffset -> mLowFadeShaderOffset
    android.graphics.Paint mTempPaint -> mTempPaint
    boolean mFadingHighEdge -> mFadingHighEdge
    android.graphics.Bitmap getTempBitmapHigh() -> getTempBitmapHigh
    void draw(android.graphics.Canvas) -> draw
    void setNumRows(int) -> setNumRows
    boolean needsFadingHighEdge() -> needsFadingHighEdge
    void setRowHeight(android.content.res.TypedArray) -> setRowHeight
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    boolean needsFadingLowEdge() -> needsFadingLowEdge
    void setRowHeight(int) -> setRowHeight
    android.graphics.Bitmap getTempBitmapLow() -> getTempBitmapLow
    void initAttributes(android.content.Context,android.util.AttributeSet) -> initAttributes
    void updateLayerType() -> updateLayerType
com.android.systemui.RoundedCorners$TunablePaddingTagListener -> com.android.systemui.RoundedCorners$TunablePaddingTagListener:
    int mId -> mId
    int mPadding -> mPadding
    com.android.systemui.tuner.TunablePadding mTunablePadding -> mTunablePadding
    void <init>(int,int) -> <init>
    void onFragmentViewCreated(java.lang.String,android.app.Fragment) -> onFragmentViewCreated
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.SearchView$6:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.systemui.ChargingView -> com.android.systemui.ChargingView:
    com.android.systemui.statusbar.policy.BatteryController mBatteryController -> mBatteryController
    boolean mCharging -> mCharging
    java.lang.Runnable mClearSuppressCharging -> mClearSuppressCharging
    com.android.internal.hardware.AmbientDisplayConfiguration mConfig -> mConfig
    boolean mDark -> mDark
    int mImageResource -> mImageResource
    boolean mSuppressCharging -> mSuppressCharging
    void setDark(boolean) -> setDark
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void clearSuppressCharging() -> clearSuppressCharging
    boolean deviceWillWakeUpWhenPluggedIn() -> deviceWillWakeUpWhenPluggedIn
    void onAttachedToWindow() -> onAttachedToWindow
    void onBatteryLevelChanged(int,boolean,boolean) -> onBatteryLevelChanged
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateVisibility() -> updateVisibility
    void -com_android_systemui_ChargingView-mthref-0() -> -com_android_systemui_ChargingView-mthref-0
com.android.systemui.statusbar.KeyboardShortcutAppItemLayout -> com.android.systemui.statusbar.KeyboardShortcutAppItemLayout:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onMeasure(int,int) -> onMeasure
com.android.systemui.statusbar.KeyguardAffordanceView$2 -> com.android.systemui.statusbar.KeyguardAffordanceView$2:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener -> android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener:
    void onInflateFinished(android.view.View,int,android.view.ViewGroup) -> onInflateFinished
android.support.v4.media.MediaBrowserCompatApi23 -> android.support.v4.media.MediaBrowserCompatApi23:
    java.lang.Object createItemCallback(android.support.v4.media.MediaBrowserCompatApi23$ItemCallback) -> createItemCallback
    void <init>() -> <init>
com.android.systemui.ExpandHelper$2 -> com.android.systemui.ExpandHelper$2:
    boolean mCancelled -> mCancelled
    com.android.systemui.ExpandHelper this$0 -> this$0
    android.view.View val$scaledView -> val$scaledView
    boolean val$expand -> val$expand
    void <init>(com.android.systemui.ExpandHelper,android.view.View,boolean) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> this$0
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
com.android.systemui.qs.QuickStatusBarHeader -> com.android.systemui.qs.QuickStatusBarHeader:
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    boolean mExpanded -> mExpanded
    com.android.systemui.qs.QuickQSPanel mHeaderQsPanel -> mHeaderQsPanel
    com.android.systemui.qs.QSTileHost mHost -> mHost
    boolean mListening -> mListening
    com.android.systemui.qs.QSPanel mQsPanel -> mQsPanel
    void setQSPanel(com.android.systemui.qs.QSPanel) -> setQSPanel
    void setExpanded(boolean) -> setExpanded
    void setListening(boolean) -> setListening
    void setExpansion(float) -> setExpansion
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void applyDarkness(int,android.graphics.Rect,float,int) -> applyDarkness
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void setCallback(com.android.systemui.qs.QSDetail$Callback) -> setCallback
    void setupHost(com.android.systemui.qs.QSTileHost) -> setupHost
    void updateEverything() -> updateEverything
    void updateResources() -> updateResources
    void lambda$-com_android_systemui_qs_QuickStatusBarHeader_4263() -> lambda$-com_android_systemui_qs_QuickStatusBarHeader_4263
android.support.v7.widget.RecyclerView$SmoothScroller$Action -> android.support.v7.widget.RecyclerView$SmoothScroller$Action:
    boolean mChanged -> mChanged
    int mDuration -> mDuration
    int mJumpToPosition -> mJumpToPosition
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    int mConsecutiveUpdates -> mConsecutiveUpdates
    int mDx -> mDx
    int mDy -> mDy
    void validate() -> validate
    void update(int,int,int,android.view.animation.Interpolator) -> update
    void runIfNecessary(android.support.v7.widget.RecyclerView) -> runIfNecessary
    void jumpTo(int) -> jumpTo
    boolean hasJumpTarget() -> hasJumpTarget
    void <init>(int,int) -> <init>
    void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    java.lang.reflect.Method sGetScaledScrollFactorMethod -> sGetScaledScrollFactorMethod
    void <clinit>() -> <clinit>
    float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    void <init>() -> <init>
    float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
com.android.settingslib.graph.BluetoothDeviceLayerDrawable$BluetoothDeviceLayerDrawableState -> com.android.settingslib.graph.BluetoothDeviceLayerDrawable$BluetoothDeviceLayerDrawableState:
    int resId -> resId
    android.content.Context context -> context
    int batteryLevel -> batteryLevel
    float iconScale -> iconScale
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    void <init>(android.content.Context,int,int,float) -> <init>
    int getChangingConfigurations() -> getChangingConfigurations
android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo -> android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    android.support.v7.view.menu.MenuBuilder menu -> menu
    int position -> position
    android.support.v7.widget.MenuPopupWindow window -> window
    android.widget.ListView getListView() -> getListView
    void <init>(android.support.v7.widget.MenuPopupWindow,android.support.v7.view.menu.MenuBuilder,int) -> <init>
android.support.annotation.StringDef -> android.support.annotation.StringDef:
    java.lang.String[] value() -> value
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v4.view.ViewPager) -> <init>
com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl$TunerItem -> com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl$TunerItem:
    com.android.systemui.statusbar.policy.ExtensionController$TunerFactory mFactory -> mFactory
    java.lang.Object mItem -> mItem
    android.util.ArrayMap mSettings -> mSettings
    com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl this$1 -> this$1
    void <init>(com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl,com.android.systemui.statusbar.policy.ExtensionController$TunerFactory,java.lang.String[]) -> <init>
    void destroy() -> destroy
    java.lang.Object get() -> get
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    int sortOrder() -> sortOrder
com.android.systemui.pip.phone.PipMenuActivityController -> com.android.systemui.pip.phone.PipMenuActivityController:
    android.app.IActivityManager mActivityManager -> mActivityManager
    android.content.pm.ParceledListSlice mAppActions -> mAppActions
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.android.systemui.pip.phone.InputConsumerController mInputConsumerController -> mInputConsumerController
    java.util.ArrayList mListeners -> mListeners
    com.android.systemui.pip.phone.PipMediaController$ActionListener mMediaActionListener -> mMediaActionListener
    android.content.pm.ParceledListSlice mMediaActions -> mMediaActions
    com.android.systemui.pip.phone.PipMediaController mMediaController -> mMediaController
    int mMenuState -> mMenuState
    android.os.Messenger mMessenger -> mMessenger
    com.android.systemui.recents.misc.ReferenceCountedTrigger mOnAttachDecrementTrigger -> mOnAttachDecrementTrigger
    boolean mStartActivityRequested -> mStartActivityRequested
    long mStartActivityRequestedTime -> mStartActivityRequestedTime
    java.lang.Runnable mStartActivityRequestedTimeoutRunnable -> mStartActivityRequestedTimeoutRunnable
    android.os.Bundle mTmpDismissFractionData -> mTmpDismissFractionData
    android.os.Messenger mToActivityMessenger -> mToActivityMessenger
    void hideMenuWithoutResize() -> hideMenuWithoutResize
    void showMenu(int,android.graphics.Rect,android.graphics.Rect,boolean,boolean) -> showMenu
    void pokeMenu() -> pokeMenu
    void hideMenu() -> hideMenu
    void addListener(com.android.systemui.pip.phone.PipMenuActivityController$Listener) -> addListener
    boolean isMenuActivityVisible() -> isMenuActivityVisible
    void setDismissFraction(float) -> setDismissFraction
    void <init>(android.content.Context,android.app.IActivityManager,com.android.systemui.pip.phone.PipMediaController,com.android.systemui.pip.phone.InputConsumerController) -> <init>
    void dump(java.io.PrintWriter,java.lang.String) -> dump
    boolean isStartActivityRequestedElapsed() -> isStartActivityRequestedElapsed
    boolean isValidActions(android.content.pm.ParceledListSlice) -> isValidActions
    void onActivityPinned() -> onActivityPinned
    void onActivityUnpinned() -> onActivityUnpinned
    void onBusEvent(com.android.systemui.recents.events.component.HidePipMenuEvent) -> onBusEvent
    void onMenuStateChanged(int,boolean) -> onMenuStateChanged
    void onPinnedStackAnimationEnded() -> onPinnedStackAnimationEnded
    android.content.pm.ParceledListSlice resolveMenuActions() -> resolveMenuActions
    void setAppActions(android.content.pm.ParceledListSlice) -> setAppActions
    void setStartActivityRequested(boolean) -> setStartActivityRequested
    void startMenuActivity(int,android.graphics.Rect,android.graphics.Rect,boolean,boolean) -> startMenuActivity
    void updateMenuActions() -> updateMenuActions
    void lambda$-com_android_systemui_pip_phone_PipMenuActivityController_7178() -> lambda$-com_android_systemui_pip_phone_PipMenuActivityController_7178
    void lambda$-com_android_systemui_pip_phone_PipMenuActivityController_18260(int,boolean,com.android.systemui.pip.phone.PipMenuActivityController$Listener) -> lambda$-com_android_systemui_pip_phone_PipMenuActivityController_18260
    com.android.systemui.pip.phone.InputConsumerController -get0(com.android.systemui.pip.phone.PipMenuActivityController) -> -get0
    java.util.ArrayList -get1(com.android.systemui.pip.phone.PipMenuActivityController) -> -get1
    com.android.systemui.recents.misc.ReferenceCountedTrigger -get2(com.android.systemui.pip.phone.PipMenuActivityController) -> -get2
    android.os.Messenger -get3(com.android.systemui.pip.phone.PipMenuActivityController) -> -get3
    android.content.pm.ParceledListSlice -set0(com.android.systemui.pip.phone.PipMenuActivityController,android.content.pm.ParceledListSlice) -> -set0
    com.android.systemui.recents.misc.ReferenceCountedTrigger -set1(com.android.systemui.pip.phone.PipMenuActivityController,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> -set1
    android.os.Messenger -set2(com.android.systemui.pip.phone.PipMenuActivityController,android.os.Messenger) -> -set2
    void -wrap0(com.android.systemui.pip.phone.PipMenuActivityController,int,boolean) -> -wrap0
    void -wrap1(com.android.systemui.pip.phone.PipMenuActivityController,boolean) -> -wrap1
    void -wrap2(com.android.systemui.pip.phone.PipMenuActivityController) -> -wrap2
com.android.systemui.statusbar.stack.ExpandableViewState$6 -> com.android.systemui.statusbar.stack.ExpandableViewState$6:
    com.android.systemui.statusbar.stack.ExpandableViewState this$0 -> this$0
    com.android.systemui.statusbar.ExpandableView val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.ExpandableView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.media.MediaRouteProvider$ProviderMetadata -> android.support.v7.media.MediaRouteProvider$ProviderMetadata:
    android.content.ComponentName mComponentName -> mComponentName
    java.lang.String toString() -> toString
    java.lang.String getPackageName() -> getPackageName
    void <init>(android.content.ComponentName) -> <init>
    android.content.ComponentName getComponentName() -> getComponentName
com.android.systemui.qs.PagedTileLayout$PageListener -> com.android.systemui.qs.PagedTileLayout$PageListener:
    void onPageChanged(boolean) -> onPageChanged
com.android.systemui.stackdivider.-$Lambda$SF-WjuMwvPZk9i1dL9BXDQtwNzU -> com.android.systemui.stackdivider.-$Lambda$SF-WjuMwvPZk9i1dL9BXDQtwNzU:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
android.support.v17.leanback.widget.TitleViewAdapter -> android.support.v17.leanback.widget.TitleViewAdapter:
    void <init>() -> <init>
com.android.systemui.settings.CurrentUserTracker -> com.android.systemui.settings.CurrentUserTracker:
    java.util.function.Consumer mCallback -> mCallback
    com.android.systemui.settings.CurrentUserTracker$UserReceiver mUserReceiver -> mUserReceiver
    void <init>(android.content.Context) -> <init>
    void startTracking() -> startTracking
    void stopTracking() -> stopTracking
    void <init>(com.android.systemui.settings.CurrentUserTracker$UserReceiver) -> <init>
    void onUserSwitched(int) -> onUserSwitched
    void -com_android_systemui_settings_CurrentUserTracker-mthref-0(java.lang.Integer) -> -com_android_systemui_settings_CurrentUserTracker-mthref-0
com.android.systemui.statusbar.stack.NotificationChildrenContainer$1 -> com.android.systemui.statusbar.stack.NotificationChildrenContainer$1:
    com.android.systemui.statusbar.stack.AnimationFilter mAnimationFilter -> mAnimationFilter
    void <init>() -> <init>
    com.android.systemui.statusbar.stack.AnimationFilter getAnimationFilter() -> getAnimationFilter
com.android.systemui.pip.tv.PipManager$5 -> com.android.systemui.pip.tv.PipManager$5:
    com.android.systemui.pip.tv.PipManager this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipManager) -> <init>
    void onActivityPinned(java.lang.String,int,int) -> onActivityPinned
    void onPinnedActivityRestartAttempt(boolean) -> onPinnedActivityRestartAttempt
    void onPinnedStackAnimationEnded() -> onPinnedStackAnimationEnded
    void onTaskStackChanged() -> onTaskStackChanged
com.android.systemui.statusbar.policy.-$Lambda$W-6ycJ6fGNDsylNVaxVUDbUa4LE -> com.android.systemui.statusbar.policy.-$Lambda$W-6ycJ6fGNDsylNVaxVUDbUa4LE:
    com.android.systemui.statusbar.policy.-$Lambda$W-6ycJ6fGNDsylNVaxVUDbUa4LE $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    int $m$0(java.lang.Object) -> $m$0
    int applyAsInt(java.lang.Object) -> applyAsInt
com.android.systemui.assist.AssistOrbContainer -> com.android.systemui.assist.AssistOrbContainer:
    boolean mAnimatingOut -> mAnimatingOut
    android.view.View mNavbarScrim -> mNavbarScrim
    com.android.systemui.assist.AssistOrbView mOrb -> mOrb
    android.view.View mScrim -> mScrim
    void show(boolean,boolean) -> show
    boolean isShowing() -> isShowing
    com.android.systemui.assist.AssistOrbView getOrb() -> getOrb
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onFinishInflate() -> onFinishInflate
    void reset() -> reset
    void startEnterAnimation() -> startEnterAnimation
    void startExitAnimation(java.lang.Runnable) -> startExitAnimation
    android.view.View -get0(com.android.systemui.assist.AssistOrbContainer) -> -get0
    android.view.View -get1(com.android.systemui.assist.AssistOrbContainer) -> -get1
    boolean -set0(com.android.systemui.assist.AssistOrbContainer,boolean) -> -set0
com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$1 -> com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$1:
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.policy.EmergencyCryptkeeperText$1 -> com.android.systemui.statusbar.policy.EmergencyCryptkeeperText$1:
    com.android.systemui.statusbar.policy.EmergencyCryptkeeperText this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.EmergencyCryptkeeperText) -> <init>
    void onPhoneStateChanged(int) -> onPhoneStateChanged
    void onRefreshCarrierInfo() -> onRefreshCarrierInfo
android.support.v7.media.MediaRouter$RouteInfo -> android.support.v7.media.MediaRouter$RouteInfo:
    java.lang.String mUniqueId -> mUniqueId
    java.lang.String mName -> mName
    int mDeviceType -> mDeviceType
    int mPlaybackType -> mPlaybackType
    android.net.Uri mIconUri -> mIconUri
    android.content.IntentSender mSettingsIntent -> mSettingsIntent
    int mPresentationDisplayId -> mPresentationDisplayId
    int mVolumeMax -> mVolumeMax
    boolean mConnecting -> mConnecting
    android.os.Bundle mExtras -> mExtras
    int mVolume -> mVolume
    java.lang.String mDescription -> mDescription
    android.support.v7.media.MediaRouteDescriptor mDescriptor -> mDescriptor
    boolean mEnabled -> mEnabled
    java.util.ArrayList mControlFilters -> mControlFilters
    int mPlaybackStream -> mPlaybackStream
    android.support.v7.media.MediaRouter$ProviderInfo mProvider -> mProvider
    int mVolumeHandling -> mVolumeHandling
    int mConnectionState -> mConnectionState
    boolean mCanDisconnect -> mCanDisconnect
    java.lang.String mDescriptorId -> mDescriptorId
    android.view.Display mPresentationDisplay -> mPresentationDisplay
    boolean isDefaultOrBluetooth() -> isDefaultOrBluetooth
    boolean -get1(android.support.v7.media.MediaRouter$RouteInfo) -> -get1
    int getPresentationDisplayId() -> getPresentationDisplayId
    int getVolume() -> getVolume
    android.support.v7.media.MediaRouter$ProviderInfo getProvider() -> getProvider
    android.support.v7.media.MediaRouteProvider getProviderInstance() -> getProviderInstance
    java.lang.String -get0(android.support.v7.media.MediaRouter$RouteInfo) -> -get0
    java.lang.String getDescription() -> getDescription
    void select() -> select
    void requestUpdateVolume(int) -> requestUpdateVolume
    int getPlaybackStream() -> getPlaybackStream
    java.lang.String getName() -> getName
    int getDeviceType() -> getDeviceType
    int getVolumeMax() -> getVolumeMax
    android.net.Uri getIconUri() -> getIconUri
    boolean isConnecting() -> isConnecting
    boolean isSelectable() -> isSelectable
    java.lang.String -get2(android.support.v7.media.MediaRouter$RouteInfo) -> -get2
    void requestSetVolume(int) -> requestSetVolume
    java.lang.String getId() -> getId
    boolean isEnabled() -> isEnabled
    boolean isSelected() -> isSelected
    int getConnectionState() -> getConnectionState
    void <init>(android.support.v7.media.MediaRouter$ProviderInfo,java.lang.String,java.lang.String) -> <init>
    boolean canDisconnect() -> canDisconnect
    int getVolumeHandling() -> getVolumeHandling
    int maybeUpdateDescriptor(android.support.v7.media.MediaRouteDescriptor) -> maybeUpdateDescriptor
    java.lang.String getDescriptorId() -> getDescriptorId
    boolean supportsControlCategory(java.lang.String) -> supportsControlCategory
    java.lang.String toString() -> toString
    int updateDescriptor(android.support.v7.media.MediaRouteDescriptor) -> updateDescriptor
    int getPlaybackType() -> getPlaybackType
    boolean isSystemMediaRouteProvider(android.support.v7.media.MediaRouter$RouteInfo) -> isSystemMediaRouteProvider
    boolean matchesSelector(android.support.v7.media.MediaRouteSelector) -> matchesSelector
    boolean isDefault() -> isDefault
android.support.v7.media.MediaRouteProvider -> android.support.v7.media.MediaRouteProvider:
    android.content.Context mContext -> mContext
    android.support.v7.media.MediaRouteProviderDescriptor mDescriptor -> mDescriptor
    android.support.v7.media.MediaRouteProvider$Callback mCallback -> mCallback
    android.support.v7.media.MediaRouteDiscoveryRequest mDiscoveryRequest -> mDiscoveryRequest
    android.support.v7.media.MediaRouteProvider$ProviderHandler mHandler -> mHandler
    boolean mPendingDiscoveryRequestChange -> mPendingDiscoveryRequestChange
    android.support.v7.media.MediaRouteProvider$ProviderMetadata mMetadata -> mMetadata
    boolean mPendingDescriptorChange -> mPendingDescriptorChange
    void deliverDescriptorChanged() -> deliverDescriptorChanged
    void deliverDiscoveryRequestChanged() -> deliverDiscoveryRequestChanged
    void <init>(android.content.Context,android.support.v7.media.MediaRouteProvider$ProviderMetadata) -> <init>
    android.os.Handler getHandler() -> getHandler
    android.support.v7.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String,java.lang.String) -> onCreateRouteController
    void onDiscoveryRequestChanged(android.support.v7.media.MediaRouteDiscoveryRequest) -> onDiscoveryRequestChanged
    void setDiscoveryRequest(android.support.v7.media.MediaRouteDiscoveryRequest) -> setDiscoveryRequest
    void setDescriptor(android.support.v7.media.MediaRouteProviderDescriptor) -> setDescriptor
    android.support.v7.media.MediaRouteProviderDescriptor getDescriptor() -> getDescriptor
    android.support.v7.media.MediaRouteDiscoveryRequest getDiscoveryRequest() -> getDiscoveryRequest
    android.support.v7.media.MediaRouteProvider$ProviderMetadata getMetadata() -> getMetadata
    android.support.v7.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String) -> onCreateRouteController
    android.content.Context getContext() -> getContext
    void setCallback(android.support.v7.media.MediaRouteProvider$Callback) -> setCallback
com.android.systemui.pip.phone.-$Lambda$gnd6A7bpdbRyoF4aZCm-9Zo-dBQ -> com.android.systemui.pip.phone.-$Lambda$gnd6A7bpdbRyoF4aZCm-9Zo-dBQ:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.CommandQueue$Callbacks -> com.android.systemui.statusbar.CommandQueue$Callbacks:
    void setImeWindowStatus(android.os.IBinder,int,int,boolean) -> setImeWindowStatus
    void addQsTile(android.content.ComponentName) -> addQsTile
    void animateCollapsePanels(int) -> animateCollapsePanels
    void animateExpandNotificationsPanel() -> animateExpandNotificationsPanel
    void animateExpandSettingsPanel(java.lang.String) -> animateExpandSettingsPanel
    void appTransitionCancelled() -> appTransitionCancelled
    void appTransitionFinished() -> appTransitionFinished
    void appTransitionPending(boolean) -> appTransitionPending
    void appTransitionStarting(long,long,boolean) -> appTransitionStarting
    void cancelPreloadRecentApps() -> cancelPreloadRecentApps
    void clickTile(android.content.ComponentName) -> clickTile
    void disable(int,int,boolean) -> disable
    void dismissKeyboardShortcutsMenu() -> dismissKeyboardShortcutsMenu
    void handleShowGlobalActionsMenu() -> handleShowGlobalActionsMenu
    void handleShowShutdownUi(boolean,java.lang.String) -> handleShowShutdownUi
    void handleSystemKey(int) -> handleSystemKey
    void hideRecentApps(boolean,boolean) -> hideRecentApps
    void onCameraLaunchGestureDetected(int) -> onCameraLaunchGestureDetected
    void preloadRecentApps() -> preloadRecentApps
    void remQsTile(android.content.ComponentName) -> remQsTile
    void removeIcon(java.lang.String) -> removeIcon
    void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon) -> setIcon
    void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect) -> setSystemUiVisibility
    void setTopAppHidesStatusBar(boolean) -> setTopAppHidesStatusBar
    void setWindowState(int,int) -> setWindowState
    void showAssistDisclosure() -> showAssistDisclosure
    void showPictureInPictureMenu() -> showPictureInPictureMenu
    void showRecentApps(boolean,boolean) -> showRecentApps
    void showScreenPinningRequest(int) -> showScreenPinningRequest
    void startAssist(android.os.Bundle) -> startAssist
    void toggleKeyboardShortcutsMenu(int) -> toggleKeyboardShortcutsMenu
    void togglePanel() -> togglePanel
    void toggleRecentApps() -> toggleRecentApps
    void toggleSplitScreen() -> toggleSplitScreen
    void topAppWindowChanged(boolean) -> topAppWindowChanged
com.android.settingslib.bluetooth.BluetoothEventManager$NameChangedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$NameChangedHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$NameChangedHandler) -> <init>
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.settingslib.bluetooth.BluetoothEventManager$ConnectionStateChangedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$ConnectionStateChangedHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$ConnectionStateChangedHandler) -> <init>
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.systemui.statusbar.phone.NotificationPanelView$13 -> com.android.systemui.statusbar.phone.NotificationPanelView$13:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.NotificationMenuRow$2 -> com.android.systemui.statusbar.NotificationMenuRow$2:
    com.android.systemui.statusbar.NotificationMenuRow this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationMenuRow) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.systemui.-$Lambda$hrhGgnBZlI4TxBMU92uUeesjggg -> com.android.systemui.-$Lambda$hrhGgnBZlI4TxBMU92uUeesjggg:
    boolean -$f0 -> -$f0
    void <init>(boolean) -> <init>
    boolean $m$0(java.lang.Object) -> $m$0
    boolean test(java.lang.Object) -> test
com.android.systemui.UiOffloadThread -> com.android.systemui.UiOffloadThread:
    java.util.concurrent.ExecutorService mExecutorService -> mExecutorService
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    void <init>() -> <init>
com.android.systemui.statusbar.policy.BatteryController -> com.android.systemui.statusbar.policy.BatteryController:
    void setPowerSaveMode(boolean) -> setPowerSaveMode
    boolean isPowerSave() -> isPowerSave
com.android.systemui.plugins.R$attr -> com.android.systemui.plugins.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activatedAnimationDuration -> activatedAnimationDuration
    int activatedFontFamily -> activatedFontFamily
    int activeFrameColor -> activeFrameColor
    int activityChooserViewStyle -> activityChooserViewStyle
    int adjustable -> adjustable
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int allCaps -> allCaps
    int allowDividerAbove -> allowDividerAbove
    int allowDividerAfterLastItem -> allowDividerAfterLastItem
    int allowDividerBelow -> allowDividerBelow
    int allowStacking -> allowStacking
    int alpha -> alpha
    int alphabeticModifiers -> alphabeticModifiers
    int amPmStyle -> amPmStyle
    int arrowBgColor -> arrowBgColor
    int arrowColor -> arrowColor
    int arrowHeadLength -> arrowHeadLength
    int arrowRadius -> arrowRadius
    int arrowShaftLength -> arrowShaftLength
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int autoSizeMaxTextSize -> autoSizeMaxTextSize
    int autoSizeMinTextSize -> autoSizeMinTextSize
    int autoSizePresetSizes -> autoSizePresetSizes
    int autoSizeStepGranularity -> autoSizeStepGranularity
    int autoSizeTextType -> autoSizeTextType
    int avatarPadding -> avatarPadding
    int background -> background
    int backgroundColor -> backgroundColor
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int badgeDiameter -> badgeDiameter
    int badgeMargin -> badgeMargin
    int barLength -> barLength
    int baseCardViewStyle -> baseCardViewStyle
    int borderlessButtonStyle -> borderlessButtonStyle
    int browsePaddingBottom -> browsePaddingBottom
    int browsePaddingEnd -> browsePaddingEnd
    int browsePaddingStart -> browsePaddingStart
    int browsePaddingTop -> browsePaddingTop
    int browseRowsFadingEdgeLength -> browseRowsFadingEdgeLength
    int browseRowsMarginStart -> browseRowsMarginStart
    int browseRowsMarginTop -> browseRowsMarginTop
    int browseTitleIconStyle -> browseTitleIconStyle
    int browseTitleTextStyle -> browseTitleTextStyle
    int browseTitleViewLayout -> browseTitleViewLayout
    int browseTitleViewStyle -> browseTitleViewStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonGravity -> buttonGravity
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int buttonTint -> buttonTint
    int buttonTintMode -> buttonTintMode
    int cardBackground -> cardBackground
    int cardForeground -> cardForeground
    int cardType -> cardType
    int charPadding -> charPadding
    int checkBoxPreferenceStyle -> checkBoxPreferenceStyle
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int clearAllBackgroundColor -> clearAllBackgroundColor
    int clearAllStyle -> clearAllStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int closed_captioning -> closed_captioning
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorBackgroundFloating -> colorBackgroundFloating
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorError -> colorError
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int columnWidth -> columnWidth
    int commitIcon -> commitIcon
    int contentDescription -> contentDescription
    int contentInsetEnd -> contentInsetEnd
    int contentInsetEndWithActions -> contentInsetEndWithActions
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int contentInsetStartWithNavigation -> contentInsetStartWithNavigation
    int controlBackground -> controlBackground
    int customNavigationLayout -> customNavigationLayout
    int darkIconTheme -> darkIconTheme
    int datePattern -> datePattern
    int datePickerFormat -> datePickerFormat
    int decayTime -> decayTime
    int defValue -> defValue
    int defaultBrandColor -> defaultBrandColor
    int defaultBrandColorDark -> defaultBrandColorDark
    int defaultQueryHint -> defaultQueryHint
    int defaultSearchBrightColor -> defaultSearchBrightColor
    int defaultSearchColor -> defaultSearchColor
    int defaultSearchIcon -> defaultSearchIcon
    int defaultSearchIconColor -> defaultSearchIconColor
    int defaultSectionHeaderColor -> defaultSectionHeaderColor
    int defaultValue -> defaultValue
    int dependency -> dependency
    int detailsActionButtonStyle -> detailsActionButtonStyle
    int detailsDescriptionBodyStyle -> detailsDescriptionBodyStyle
    int detailsDescriptionSubtitleStyle -> detailsDescriptionSubtitleStyle
    int detailsDescriptionTitleStyle -> detailsDescriptionTitleStyle
    int dialogIcon -> dialogIcon
    int dialogLayout -> dialogLayout
    int dialogMessage -> dialogMessage
    int dialogPreferenceStyle -> dialogPreferenceStyle
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int dialogTitle -> dialogTitle
    int digit -> digit
    int disableDependentsState -> disableDependentsState
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int dotBgColor -> dotBgColor
    int dotSize -> dotSize
    int dotToArrowGap -> dotToArrowGap
    int dotToDotGap -> dotToDotGap
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int dropdownPreferenceStyle -> dropdownPreferenceStyle
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextPreferenceStyle -> editTextPreferenceStyle
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int enableAutoSizing -> enableAutoSizing
    int enabled -> enabled
    int entries -> entries
    int entryValues -> entryValues
    int errorMessageStyle -> errorMessageStyle
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int externalRouteEnabledDrawable -> externalRouteEnabledDrawable
    int extraVisibility -> extraVisibility
    int fastScrollEnabled -> fastScrollEnabled
    int fastScrollHorizontalThumbDrawable -> fastScrollHorizontalThumbDrawable
    int fastScrollHorizontalTrackDrawable -> fastScrollHorizontalTrackDrawable
    int fastScrollVerticalThumbDrawable -> fastScrollVerticalThumbDrawable
    int fastScrollVerticalTrackDrawable -> fastScrollVerticalTrackDrawable
    int fast_forward -> fast_forward
    int fillColor -> fillColor
    int focusOutEnd -> focusOutEnd
    int focusOutFront -> focusOutFront
    int focusOutSideEnd -> focusOutSideEnd
    int focusOutSideStart -> focusOutSideStart
    int fontFamily -> fontFamily
    int footerPreferenceStyle -> footerPreferenceStyle
    int fragment -> fragment
    int frameColor -> frameColor
    int framePadding -> framePadding
    int frameWidth -> frameWidth
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int guidanceBreadcrumbStyle -> guidanceBreadcrumbStyle
    int guidanceContainerStyle -> guidanceContainerStyle
    int guidanceDescriptionStyle -> guidanceDescriptionStyle
    int guidanceEntryAnimation -> guidanceEntryAnimation
    int guidanceIconStyle -> guidanceIconStyle
    int guidanceTitleStyle -> guidanceTitleStyle
    int guidedActionCheckedAnimation -> guidedActionCheckedAnimation
    int guidedActionContentWidth -> guidedActionContentWidth
    int guidedActionContentWidthNoIcon -> guidedActionContentWidthNoIcon
    int guidedActionContentWidthWeight -> guidedActionContentWidthWeight
    int guidedActionContentWidthWeightTwoPanels -> guidedActionContentWidthWeightTwoPanels
    int guidedActionDescriptionMinLines -> guidedActionDescriptionMinLines
    int guidedActionDisabledChevronAlpha -> guidedActionDisabledChevronAlpha
    int guidedActionEnabledChevronAlpha -> guidedActionEnabledChevronAlpha
    int guidedActionItemCheckmarkStyle -> guidedActionItemCheckmarkStyle
    int guidedActionItemChevronStyle -> guidedActionItemChevronStyle
    int guidedActionItemContainerStyle -> guidedActionItemContainerStyle
    int guidedActionItemContentStyle -> guidedActionItemContentStyle
    int guidedActionItemDescriptionStyle -> guidedActionItemDescriptionStyle
    int guidedActionItemIconStyle -> guidedActionItemIconStyle
    int guidedActionItemTitleStyle -> guidedActionItemTitleStyle
    int guidedActionPressedAnimation -> guidedActionPressedAnimation
    int guidedActionTitleMaxLines -> guidedActionTitleMaxLines
    int guidedActionTitleMinLines -> guidedActionTitleMinLines
    int guidedActionUncheckedAnimation -> guidedActionUncheckedAnimation
    int guidedActionUnpressedAnimation -> guidedActionUnpressedAnimation
    int guidedActionVerticalPadding -> guidedActionVerticalPadding
    int guidedActionsBackground -> guidedActionsBackground
    int guidedActionsBackgroundDark -> guidedActionsBackgroundDark
    int guidedActionsContainerStyle -> guidedActionsContainerStyle
    int guidedActionsElevation -> guidedActionsElevation
    int guidedActionsEntryAnimation -> guidedActionsEntryAnimation
    int guidedActionsListStyle -> guidedActionsListStyle
    int guidedActionsSelectorDrawable -> guidedActionsSelectorDrawable
    int guidedActionsSelectorHideAnimation -> guidedActionsSelectorHideAnimation
    int guidedActionsSelectorShowAnimation -> guidedActionsSelectorShowAnimation
    int guidedActionsSelectorStyle -> guidedActionsSelectorStyle
    int guidedButtonActionsListStyle -> guidedButtonActionsListStyle
    int guidedButtonActionsWidthWeight -> guidedButtonActionsWidthWeight
    int guidedStepBackground -> guidedStepBackground
    int guidedStepEntryAnimation -> guidedStepEntryAnimation
    int guidedStepExitAnimation -> guidedStepExitAnimation
    int guidedStepHeightWeight -> guidedStepHeightWeight
    int guidedStepImeAppearingAnimation -> guidedStepImeAppearingAnimation
    int guidedStepImeDisappearingAnimation -> guidedStepImeDisappearingAnimation
    int guidedStepKeyline -> guidedStepKeyline
    int guidedStepReentryAnimation -> guidedStepReentryAnimation
    int guidedStepReturnAnimation -> guidedStepReturnAnimation
    int guidedStepTheme -> guidedStepTheme
    int guidedStepThemeFlag -> guidedStepThemeFlag
    int guidedSubActionsListStyle -> guidedSubActionsListStyle
    int hasOverlappingRendering -> hasOverlappingRendering
    int headerStyle -> headerStyle
    int headersVerticalGridStyle -> headersVerticalGridStyle
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int high_quality -> high_quality
    int holdTime -> holdTime
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalMargin -> horizontalMargin
    int horizontalSpacing -> horizontalSpacing
    int hybridNotificationStyle -> hybridNotificationStyle
    int hybridNotificationTextStyle -> hybridNotificationTextStyle
    int hybridNotificationTitleStyle -> hybridNotificationTitleStyle
    int icon -> icon
    int iconSpaceReserved -> iconSpaceReserved
    int iconTint -> iconTint
    int iconTintMode -> iconTintMode
    int iconifiedByDefault -> iconifiedByDefault
    int ignoreRightInset -> ignoreRightInset
    int imageButtonStyle -> imageButtonStyle
    int imageCardViewBadgeStyle -> imageCardViewBadgeStyle
    int imageCardViewContentStyle -> imageCardViewContentStyle
    int imageCardViewImageStyle -> imageCardViewImageStyle
    int imageCardViewInfoAreaStyle -> imageCardViewInfoAreaStyle
    int imageCardViewStyle -> imageCardViewStyle
    int imageCardViewTitleStyle -> imageCardViewTitleStyle
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int infoAreaBackground -> infoAreaBackground
    int infoVisibility -> infoVisibility
    int initialActivityCount -> initialActivityCount
    int insetLeft -> insetLeft
    int is24HourFormat -> is24HourFormat
    int isLightTheme -> isLightTheme
    int itemHeight -> itemHeight
    int itemPadding -> itemPadding
    int itemsVerticalGridStyle -> itemsVerticalGridStyle
    int key -> key
    int keyCode -> keyCode
    int keyRepeat -> keyRepeat
    int layout -> layout
    int layoutManager -> layoutManager
    int layout_maxHeight -> layout_maxHeight
    int layout_maxWidth -> layout_maxWidth
    int layout_viewType -> layout_viewType
    int lbDotRadius -> lbDotRadius
    int lbImageCardViewType -> lbImageCardViewType
    int lb_slideEdge -> lb_slideEdge
    int lightIconTheme -> lightIconTheme
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listMenuViewStyle -> listMenuViewStyle
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int logoDescription -> logoDescription
    int maintainLineSpacing -> maintainLineSpacing
    int maxButtonHeight -> maxButtonHeight
    int maxHeight -> maxHeight
    int maxSize -> maxSize
    int maxWidth -> maxWidth
    int measureWithLargestChild -> measureWithLargestChild
    int mediaRouteAudioTrackDrawable -> mediaRouteAudioTrackDrawable
    int mediaRouteButtonStyle -> mediaRouteButtonStyle
    int mediaRouteButtonTint -> mediaRouteButtonTint
    int mediaRouteCloseDrawable -> mediaRouteCloseDrawable
    int mediaRouteControlPanelThemeOverlay -> mediaRouteControlPanelThemeOverlay
    int mediaRouteDefaultIconDrawable -> mediaRouteDefaultIconDrawable
    int mediaRoutePauseDrawable -> mediaRoutePauseDrawable
    int mediaRoutePlayDrawable -> mediaRoutePlayDrawable
    int mediaRouteSpeakerGroupIconDrawable -> mediaRouteSpeakerGroupIconDrawable
    int mediaRouteSpeakerIconDrawable -> mediaRouteSpeakerIconDrawable
    int mediaRouteStopDrawable -> mediaRouteStopDrawable
    int mediaRouteTheme -> mediaRouteTheme
    int mediaRouteTvIconDrawable -> mediaRouteTvIconDrawable
    int metricsAction -> metricsAction
    int min -> min
    int minSize -> minSize
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int negativeButtonText -> negativeButtonText
    int numColumns -> numColumns
    int numberOfColumns -> numberOfColumns
    int numberOfRows -> numberOfRows
    int numericModifiers -> numericModifiers
    int onboardingDescriptionStyle -> onboardingDescriptionStyle
    int onboardingHeaderStyle -> onboardingHeaderStyle
    int onboardingLogoStyle -> onboardingLogoStyle
    int onboardingMainIconStyle -> onboardingMainIconStyle
    int onboardingNavigatorContainerStyle -> onboardingNavigatorContainerStyle
    int onboardingPageIndicatorStyle -> onboardingPageIndicatorStyle
    int onboardingStartButtonStyle -> onboardingStartButtonStyle
    int onboardingTheme -> onboardingTheme
    int onboardingTitleStyle -> onboardingTitleStyle
    int order -> order
    int orderingFromXml -> orderingFromXml
    int orientation -> orientation
    int overlapAnchor -> overlapAnchor
    int overlayDimActiveLevel -> overlayDimActiveLevel
    int overlayDimDimmedLevel -> overlayDimDimmedLevel
    int overlayDimMaskColor -> overlayDimMaskColor
    int paddingBottomNoButtons -> paddingBottomNoButtons
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int paddingTopNoTitle -> paddingTopNoTitle
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int passwordStyle -> passwordStyle
    int pause -> pause
    int persistent -> persistent
    int picture_in_picture -> picture_in_picture
    int play -> play
    int playSound -> playSound
    int playbackControlButtonLabelStyle -> playbackControlButtonLabelStyle
    int playbackControlsActionIcons -> playbackControlsActionIcons
    int playbackControlsButtonStyle -> playbackControlsButtonStyle
    int playbackControlsIconHighlightColor -> playbackControlsIconHighlightColor
    int playbackControlsTimeStyle -> playbackControlsTimeStyle
    int playbackMediaItemDetailsStyle -> playbackMediaItemDetailsStyle
    int playbackMediaItemDurationStyle -> playbackMediaItemDurationStyle
    int playbackMediaItemNameStyle -> playbackMediaItemNameStyle
    int playbackMediaItemNumberStyle -> playbackMediaItemNumberStyle
    int playbackMediaItemNumberViewFlipperLayout -> playbackMediaItemNumberViewFlipperLayout
    int playbackMediaItemNumberViewFlipperStyle -> playbackMediaItemNumberViewFlipperStyle
    int playbackMediaItemPaddingStart -> playbackMediaItemPaddingStart
    int playbackMediaItemRowStyle -> playbackMediaItemRowStyle
    int playbackMediaItemSeparatorStyle -> playbackMediaItemSeparatorStyle
    int playbackMediaListHeaderStyle -> playbackMediaListHeaderStyle
    int playbackMediaListHeaderTitleStyle -> playbackMediaListHeaderTitleStyle
    int playbackPaddingEnd -> playbackPaddingEnd
    int playbackPaddingStart -> playbackPaddingStart
    int playbackProgressPrimaryColor -> playbackProgressPrimaryColor
    int popupMenuStyle -> popupMenuStyle
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int positiveButtonText -> positiveButtonText
    int preferenceActivityStyle -> preferenceActivityStyle
    int preferenceCategoryStyle -> preferenceCategoryStyle
    int preferenceFragmentCompatStyle -> preferenceFragmentCompatStyle
    int preferenceFragmentListStyle -> preferenceFragmentListStyle
    int preferenceFragmentPaddingSide -> preferenceFragmentPaddingSide
    int preferenceFragmentStyle -> preferenceFragmentStyle
    int preferenceHeaderPanelStyle -> preferenceHeaderPanelStyle
    int preferenceInformationStyle -> preferenceInformationStyle
    int preferenceLayoutChild -> preferenceLayoutChild
    int preferenceListStyle -> preferenceListStyle
    int preferencePanelStyle -> preferencePanelStyle
    int preferenceScreenStyle -> preferenceScreenStyle
    int preferenceStyle -> preferenceStyle
    int preferenceTheme -> preferenceTheme
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int ratingBarStyleIndicator -> ratingBarStyleIndicator
    int ratingBarStyleSmall -> ratingBarStyleSmall
    int recentItemLayout -> recentItemLayout
    int regularFontFamily -> regularFontFamily
    int repeat -> repeat
    int repeat_one -> repeat_one
    int resizeTrigger -> resizeTrigger
    int resizedPaddingAdjustmentBottom -> resizedPaddingAdjustmentBottom
    int resizedPaddingAdjustmentTop -> resizedPaddingAdjustmentTop
    int resizedTextSize -> resizedTextSize
    int restrictedSwitchSummary -> restrictedSwitchSummary
    int reverseLayout -> reverseLayout
    int rewind -> rewind
    int ringtonePreferenceStyle -> ringtonePreferenceStyle
    int rowHeaderDescriptionStyle -> rowHeaderDescriptionStyle
    int rowHeaderDockStyle -> rowHeaderDockStyle
    int rowHeaderStyle -> rowHeaderStyle
    int rowHeight -> rowHeight
    int rowHorizontalGridStyle -> rowHorizontalGridStyle
    int rowHoverCardDescriptionStyle -> rowHoverCardDescriptionStyle
    int rowHoverCardTitleStyle -> rowHoverCardTitleStyle
    int rowsVerticalGridStyle -> rowsVerticalGridStyle
    int scaledTextSize -> scaledTextSize
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchOrbBrightColor -> searchOrbBrightColor
    int searchOrbColor -> searchOrbColor
    int searchOrbIcon -> searchOrbIcon
    int searchOrbIconColor -> searchOrbIconColor
    int searchOrbViewStyle -> searchOrbViewStyle
    int searchViewStyle -> searchViewStyle
    int sectionHeaderStyle -> sectionHeaderStyle
    int seekBarIncrement -> seekBarIncrement
    int seekBarPreferenceStyle -> seekBarPreferenceStyle
    int seekBarStyle -> seekBarStyle
    int selectable -> selectable
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int selectedAnimationDelay -> selectedAnimationDelay
    int selectedAnimationDuration -> selectedAnimationDuration
    int shouldDisableView -> shouldDisableView
    int showAsAction -> showAsAction
    int showDark -> showDark
    int showDividers -> showDividers
    int showSeekBarValue -> showSeekBarValue
    int showText -> showText
    int showTitle -> showTitle
    int shuffle -> shuffle
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int singleLineTitle -> singleLineTitle
    int singleToneColor -> singleToneColor
    int skip_next -> skip_next
    int skip_previous -> skip_previous
    int spanCount -> spanCount
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int srcCompat -> srcCompat
    int stackFromEnd -> stackFromEnd
    int state_above_anchor -> state_above_anchor
    int state_encrypted -> state_encrypted
    int state_metered -> state_metered
    int state_saved -> state_saved
    int subMenuArrow -> subMenuArrow
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextColor -> subtitleTextColor
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int summary -> summary
    int summaryOff -> summaryOff
    int summaryOn -> summaryOn
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchPreferenceCompatStyle -> switchPreferenceCompatStyle
    int switchPreferenceStyle -> switchPreferenceStyle
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int switchTextOff -> switchTextOff
    int switchTextOn -> switchTextOn
    int text -> text
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSecondary -> textAppearanceListItemSecondary
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearancePopupMenuHeader -> textAppearancePopupMenuHeader
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int textView -> textView
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int thumbTint -> thumbTint
    int thumbTintMode -> thumbTintMode
    int thumb_down -> thumb_down
    int thumb_down_outline -> thumb_down_outline
    int thumb_up -> thumb_up
    int thumb_up_outline -> thumb_up_outline
    int tickMark -> tickMark
    int tickMarkTint -> tickMarkTint
    int tickMarkTintMode -> tickMarkTintMode
    int tint -> tint
    int tintMode -> tintMode
    int title -> title
    int titleMargin -> titleMargin
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextColor -> titleTextColor
    int titleTextStyle -> titleTextStyle
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int tooltipForegroundColor -> tooltipForegroundColor
    int tooltipFrameBackground -> tooltipFrameBackground
    int tooltipText -> tooltipText
    int track -> track
    int trackTint -> trackTint
    int trackTintMode -> trackTintMode
    int useAdditionalSummary -> useAdditionalSummary
    int useAdminDisabledSummary -> useAdminDisabledSummary
    int useCurrentTime -> useCurrentTime
    int userRestriction -> userRestriction
    int verticalMargin -> verticalMargin
    int verticalSpacing -> verticalSpacing
    int viewType -> viewType
    int voiceIcon -> voiceIcon
    int wallpaperTextColor -> wallpaperTextColor
    int wallpaperTextColorSecondary -> wallpaperTextColorSecondary
    int widgetLayout -> widgetLayout
    int wifi_friction -> wifi_friction
    int wifi_signal -> wifi_signal
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int yesNoPreferenceStyle -> yesNoPreferenceStyle
    void <init>() -> <init>
com.android.systemui.qs.tiles.WifiTile$WifiDetailAdapter -> com.android.systemui.qs.tiles.WifiTile$WifiDetailAdapter:
    com.android.settingslib.wifi.AccessPoint[] mAccessPoints -> mAccessPoints
    com.android.systemui.qs.QSDetailItems mItems -> mItems
    com.android.systemui.qs.tiles.WifiTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.WifiTile) -> <init>
    android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup) -> createDetailView
    void filterUnreachableAPs() -> filterUnreachableAPs
    int getMetricsCategory() -> getMetricsCategory
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.Boolean getToggleState() -> getToggleState
    void onAccessPointsChanged(java.util.List) -> onAccessPointsChanged
    void onDetailItemClick(com.android.systemui.qs.QSDetailItems$Item) -> onDetailItemClick
    void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems$Item) -> onDetailItemDisconnect
    void onSettingsActivityTriggered(android.content.Intent) -> onSettingsActivityTriggered
    void setItemsVisible(boolean) -> setItemsVisible
    void setToggleState(boolean) -> setToggleState
    void updateItems() -> updateItems
    void -wrap0(com.android.systemui.qs.tiles.WifiTile$WifiDetailAdapter) -> -wrap0
com.android.systemui.util.-$Lambda$ciFdFM7iEa_W52MJO7CjiSPHfOo$1 -> com.android.systemui.util.-$Lambda$ciFdFM7iEa_W52MJO7CjiSPHfOo$1:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(byte,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void run() -> run
android.support.v7.preference.Preference$OnPreferenceChangeInternalListener -> android.support.v7.preference.Preference$OnPreferenceChangeInternalListener:
    void onPreferenceVisibilityChange(android.support.v7.preference.Preference) -> onPreferenceVisibilityChange
    void onPreferenceChange(android.support.v7.preference.Preference) -> onPreferenceChange
    void onPreferenceHierarchyChange(android.support.v7.preference.Preference) -> onPreferenceHierarchyChange
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    android.os.Handler mHandler -> mHandler
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsDoubleTapping -> mIsDoubleTapping
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    boolean mStillDown -> mStillDown
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    int mTouchSlopSquare -> mTouchSlopSquare
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    void dispatchLongPress() -> dispatchLongPress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void init(android.content.Context) -> init
    void <clinit>() -> <clinit>
    void cancel() -> cancel
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void cancelTaps() -> cancelTaps
android.support.v4.view.MenuItemCompat$MenuItemCompatApi26Impl -> android.support.v4.view.MenuItemCompat$MenuItemCompatApi26Impl:
    void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    void <init>() -> <init>
    void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
    void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
android.support.annotation.LayoutRes -> android.support.annotation.LayoutRes:
com.android.systemui.statusbar.phone.NavigationBarView$1 -> com.android.systemui.statusbar.phone.NavigationBarView$1:
    com.android.systemui.statusbar.phone.NavigationBarView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NavigationBarView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.car.CarBatteryController$1 -> com.android.systemui.statusbar.car.CarBatteryController$1:
    com.android.systemui.statusbar.car.CarBatteryController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.CarBatteryController) -> <init>
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
com.android.systemui.qs.QuickTileLayout -> com.android.systemui.qs.QuickTileLayout:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
android.support.v17.leanback.widget.GridLayoutManager$4 -> android.support.v17.leanback.widget.GridLayoutManager$4:
    android.support.v17.leanback.widget.GridLayoutManager this$0 -> this$0
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    void <init>(android.support.v17.leanback.widget.GridLayoutManager,android.support.v17.leanback.widget.GridLayoutManager) -> <init>
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    android.view.View val$viewToAnimate -> val$viewToAnimate
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.view.ViewGroup val$container -> val$container
    void <init>(android.support.v4.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.android.systemui.statusbar.policy.KeyButtonView$1 -> com.android.systemui.statusbar.policy.KeyButtonView$1:
    com.android.systemui.statusbar.policy.KeyButtonView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.KeyButtonView) -> <init>
    void run() -> run
com.android.systemui.statusbar.NotificationShelf$ShelfState -> com.android.systemui.statusbar.NotificationShelf$ShelfState:
    boolean hasItemsInStableShelf -> hasItemsInStableShelf
    float maxShelfEnd -> maxShelfEnd
    float openedAmount -> openedAmount
    com.android.systemui.statusbar.NotificationShelf this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationShelf) -> <init>
    void animateTo(android.view.View,com.android.systemui.statusbar.stack.AnimationProperties) -> animateTo
    void applyToView(android.view.View) -> applyToView
    boolean -get0(com.android.systemui.statusbar.NotificationShelf$ShelfState) -> -get0
    boolean -set0(com.android.systemui.statusbar.NotificationShelf$ShelfState,boolean) -> -set0
    float -set1(com.android.systemui.statusbar.NotificationShelf$ShelfState,float) -> -set1
    float -set2(com.android.systemui.statusbar.NotificationShelf$ShelfState,float) -> -set2
    void <init>(com.android.systemui.statusbar.NotificationShelf,com.android.systemui.statusbar.NotificationShelf$ShelfState) -> <init>
com.android.keyguard.KeyguardUpdateMonitor$7 -> com.android.keyguard.KeyguardUpdateMonitor$7:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void onAuthenticationAcquired(int) -> onAuthenticationAcquired
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationFailed() -> onAuthenticationFailed
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
com.android.systemui.recents.views.TaskStackView$3 -> com.android.systemui.recents.views.TaskStackView$3:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskStackView) -> <init>
    boolean acceptsDrop(int,int,int,int,android.graphics.Rect,boolean) -> acceptsDrop
android.support.v7.media.MediaRouterJellybean -> android.support.v7.media.MediaRouterJellybean:
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    java.lang.Object createUserRoute(java.lang.Object,java.lang.Object) -> createUserRoute
    void removeCallback(java.lang.Object,java.lang.Object) -> removeCallback
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
    void addUserRoute(java.lang.Object,java.lang.Object) -> addUserRoute
    java.lang.Object getMediaRouter(android.content.Context) -> getMediaRouter
    java.lang.Object getSelectedRoute(java.lang.Object,int) -> getSelectedRoute
    void addCallback(java.lang.Object,int,java.lang.Object) -> addCallback
    java.lang.Object createRouteCategory(java.lang.Object,java.lang.String,boolean) -> createRouteCategory
    java.lang.Object createVolumeCallback(android.support.v7.media.MediaRouterJellybean$VolumeCallback) -> createVolumeCallback
    java.lang.Object createCallback(android.support.v7.media.MediaRouterJellybean$Callback) -> createCallback
    void <init>() -> <init>
    void removeUserRoute(java.lang.Object,java.lang.Object) -> removeUserRoute
com.android.systemui.statusbar.NotificationShelf -> com.android.systemui.statusbar.NotificationShelf:
    boolean ICON_ANMATIONS_WHILE_SCROLLING -> ICON_ANMATIONS_WHILE_SCROLLING
    boolean USE_ANIMATIONS_WHEN_OPENING -> USE_ANIMATIONS_WHEN_OPENING
    com.android.systemui.statusbar.stack.AmbientState mAmbientState -> mAmbientState
    boolean mAnimationsEnabled -> mAnimationsEnabled
    com.android.systemui.statusbar.phone.NotificationIconContainer mCollapsedIcons -> mCollapsedIcons
    boolean mDark -> mDark
    boolean mHasItemsInStableShelf -> mHasItemsInStableShelf
    boolean mHideBackground -> mHideBackground
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mHostLayout -> mHostLayout
    int mIconAppearTopPadding -> mIconAppearTopPadding
    int mIconSize -> mIconSize
    boolean mInteractive -> mInteractive
    int mMaxLayoutHeight -> mMaxLayoutHeight
    float mMaxShelfEnd -> mMaxShelfEnd
    boolean mNoAnimationsInThisFrame -> mNoAnimationsInThisFrame
    int mNotGoneIndex -> mNotGoneIndex
    float mOpenedAmount -> mOpenedAmount
    int mPaddingBetweenElements -> mPaddingBetweenElements
    int mRelativeOffset -> mRelativeOffset
    int mScrollFastThreshold -> mScrollFastThreshold
    com.android.systemui.statusbar.phone.NotificationIconContainer mShelfIcons -> mShelfIcons
    com.android.systemui.statusbar.NotificationShelf$ShelfState mShelfState -> mShelfState
    boolean mShowNotificationShelf -> mShowNotificationShelf
    int mStatusBarHeight -> mStatusBarHeight
    int mStatusBarPaddingStart -> mStatusBarPaddingStart
    int mStatusBarState -> mStatusBarState
    int[] mTmp -> mTmp
    boolean mTouchActive -> mTouchActive
    boolean mVibrationOnAnimation -> mVibrationOnAnimation
    com.android.systemui.ViewInvertHelper mViewInvertHelper -> mViewInvertHelper
    com.android.systemui.statusbar.phone.NotificationIconContainer getShelfIcons() -> getShelfIcons
    void setCollapsedIcons(com.android.systemui.statusbar.phone.NotificationIconContainer) -> setCollapsedIcons
    int getNotGoneIndex() -> getNotGoneIndex
    void setStatusBarState(int) -> setStatusBarState
    void setMaxLayoutHeight(int) -> setMaxLayoutHeight
    void updateAppearance() -> updateAppearance
    boolean hasItemsInStableShelf() -> hasItemsInStableShelf
    void setAnimationsEnabled(boolean) -> setAnimationsEnabled
    void bind(com.android.systemui.statusbar.stack.AmbientState,com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> bind
    void setDarkOffsetX(int) -> setDarkOffsetX
    void setTouchActive(boolean) -> setTouchActive
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    com.android.systemui.statusbar.stack.ExpandableViewState createNewViewState(com.android.systemui.statusbar.stack.StackScrollState) -> createNewViewState
    android.view.View getContentView() -> getContentView
    float getFullyClosedTranslation() -> getFullyClosedTranslation
    com.android.systemui.statusbar.phone.NotificationIconContainer$IconState getIconState(com.android.systemui.statusbar.StatusBarIconView) -> getIconState
    int getNotificationMergeSize() -> getNotificationMergeSize
    boolean hasNoContentHeight() -> hasNoContentHeight
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void initDimens() -> initDimens
    boolean isInteractive() -> isInteractive
    boolean needsOutline() -> needsOutline
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onFinishInflate() -> onFinishInflate
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    void setDark(boolean,boolean,long) -> setDark
    void setFakeShadowIntensity(float,float,int,int) -> setFakeShadowIntensity
    void setHasItemsInStableShelf(boolean) -> setHasItemsInStableShelf
    void setHideBackground(boolean) -> setHideBackground
    void setIconTransformationAmount(com.android.systemui.statusbar.ExpandableNotificationRow,float,float,boolean,boolean) -> setIconTransformationAmount
    void setMaxShelfEnd(float) -> setMaxShelfEnd
    void setOpenedAmount(float) -> setOpenedAmount
    boolean shouldHideBackground() -> shouldHideBackground
    void updateContinuousClipping(com.android.systemui.statusbar.ExpandableNotificationRow) -> updateContinuousClipping
    float updateIconAppearance(com.android.systemui.statusbar.ExpandableNotificationRow,float,boolean,boolean,boolean,boolean) -> updateIconAppearance
    void updateIconClipAmount(com.android.systemui.statusbar.ExpandableNotificationRow) -> updateIconClipAmount
    void updateIconPositioning(com.android.systemui.statusbar.ExpandableNotificationRow,float,float,float,boolean,boolean,boolean,boolean) -> updateIconPositioning
    void updateInteractiveness() -> updateInteractiveness
    void updateNotificationClipHeight(com.android.systemui.statusbar.ExpandableNotificationRow,float) -> updateNotificationClipHeight
    void updateRelativeOffset() -> updateRelativeOffset
    void updateState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.AmbientState) -> updateState
    void updateVibrationOnAnimation() -> updateVibrationOnAnimation
    void <clinit>() -> <clinit>
    boolean -get0(com.android.systemui.statusbar.NotificationShelf) -> -get0
    com.android.systemui.statusbar.phone.NotificationIconContainer -get1(com.android.systemui.statusbar.NotificationShelf) -> -get1
    boolean -get2(com.android.systemui.statusbar.NotificationShelf) -> -get2
    void -wrap0(com.android.systemui.statusbar.NotificationShelf,boolean) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.NotificationShelf,float) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.NotificationShelf,com.android.systemui.statusbar.ExpandableNotificationRow) -> -wrap2
com.android.systemui.statusbar.phone.StatusBar$23 -> com.android.systemui.statusbar.phone.StatusBar$23:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.phone.StatusBar$2 -> com.android.systemui.statusbar.phone.StatusBar$2:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Bundle mState -> mState
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    int describeContents() -> describeContents
com.android.systemui.recents.events.EventBus$AnimatedEvent -> com.android.systemui.recents.events.EventBus$AnimatedEvent:
    com.android.systemui.recents.misc.ReferenceCountedTrigger mTrigger -> mTrigger
    void <init>() -> <init>
    void addPostAnimationCallback(java.lang.Runnable) -> addPostAnimationCallback
    com.android.systemui.recents.misc.ReferenceCountedTrigger getAnimationTrigger() -> getAnimationTrigger
    java.lang.Object clone() -> clone
    void onPostDispatch() -> onPostDispatch
    void onPreDispatch() -> onPreDispatch
com.android.settingslib.bluetooth.A2dpProfile$A2dpServiceListener -> com.android.settingslib.bluetooth.A2dpProfile$A2dpServiceListener:
    com.android.settingslib.bluetooth.A2dpProfile this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.A2dpProfile) -> <init>
    void <init>(com.android.settingslib.bluetooth.A2dpProfile,com.android.settingslib.bluetooth.A2dpProfile$A2dpServiceListener) -> <init>
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
android.support.v7.widget.ActionBarOverlayLayout -> android.support.v7.widget.ActionBarOverlayLayout:
    int[] ATTRS -> ATTRS
    android.graphics.Rect mInnerInsets -> mInnerInsets
    boolean mIgnoreWindowContentOverlay -> mIgnoreWindowContentOverlay
    java.lang.Runnable mRemoveActionBarHideOffset -> mRemoveActionBarHideOffset
    android.graphics.Rect mBaseInnerInsets -> mBaseInnerInsets
    int mHideOnContentScrollReference -> mHideOnContentScrollReference
    java.lang.Runnable mAddActionBarHideOffset -> mAddActionBarHideOffset
    boolean mHasNonEmbeddedTabs -> mHasNonEmbeddedTabs
    boolean mAnimatingForFling -> mAnimatingForFling
    android.graphics.drawable.Drawable mWindowContentOverlay -> mWindowContentOverlay
    int mLastSystemUiVisibility -> mLastSystemUiVisibility
    boolean mOverlayMode -> mOverlayMode
    int ACTION_BAR_ANIMATE_DELAY -> ACTION_BAR_ANIMATE_DELAY
    android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> mActionBarVisibilityCallback
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    android.graphics.Rect mLastBaseContentInsets -> mLastBaseContentInsets
    int mActionBarHeight -> mActionBarHeight
    android.support.v7.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> mCurrentActionBarTopAnimator
    android.graphics.Rect mLastBaseInnerInsets -> mLastBaseInnerInsets
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> mTopAnimatorListener
    android.widget.OverScroller mFlingEstimator -> mFlingEstimator
    android.graphics.Rect mBaseContentInsets -> mBaseContentInsets
    android.graphics.Rect mLastInnerInsets -> mLastInnerInsets
    int mWindowVisibility -> mWindowVisibility
    android.graphics.Rect mContentInsets -> mContentInsets
    boolean mHideOnContentScroll -> mHideOnContentScroll
    android.support.v7.widget.ActionBarContainer mActionBarTop -> mActionBarTop
    android.support.v7.widget.ContentFrameLayout mContent -> mContent
    android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    void removeActionBarHideOffset() -> removeActionBarHideOffset
    void setShowingForActionMode(boolean) -> setShowingForActionMode
    void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    void initFeature(int) -> initFeature
    void addActionBarHideOffset() -> addActionBarHideOffset
    void setActionBarVisibilityCallback(android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    void pullChildren() -> pullChildren
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    void setMenuPrepared() -> setMenuPrepared
    void dismissPopups() -> dismissPopups
    boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void init(android.content.Context) -> init
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    boolean isInOverlayMode() -> isInOverlayMode
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    void setOverlayMode(boolean) -> setOverlayMode
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    boolean showOverflowMenu() -> showOverflowMenu
    android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    int getNestedScrollAxes() -> getNestedScrollAxes
    android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    void draw(android.graphics.Canvas) -> draw
    void setActionBarHideOffset(int) -> setActionBarHideOffset
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void <init>(android.content.Context) -> <init>
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void <clinit>() -> <clinit>
    int getActionBarHideOffset() -> getActionBarHideOffset
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.android.systemui.statusbar.KeyguardIndicationController$1 -> com.android.systemui.statusbar.KeyguardIndicationController$1:
    com.android.systemui.statusbar.KeyguardIndicationController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardIndicationController) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void lambda$-com_android_systemui_statusbar_KeyguardIndicationController$1_15280() -> lambda$-com_android_systemui_statusbar_KeyguardIndicationController$1_15280
com.android.systemui.recents.views.DropTarget -> com.android.systemui.recents.views.DropTarget:
    boolean acceptsDrop(int,int,int,int,android.graphics.Rect,boolean) -> acceptsDrop
com.android.systemui.fragments.FragmentHostManager$FragmentListener -> com.android.systemui.fragments.FragmentHostManager$FragmentListener:
    void onFragmentViewCreated(java.lang.String,android.app.Fragment) -> onFragmentViewCreated
    void onFragmentViewDestroyed(java.lang.String,android.app.Fragment) -> onFragmentViewDestroyed
com.android.systemui.recents.IRecentsSystemUserCallbacks$Stub$Proxy -> com.android.systemui.recents.IRecentsSystemUserCallbacks$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    void registerNonSystemUserCallbacks(android.os.IBinder,int) -> registerNonSystemUserCallbacks
    void sendDockingTopTaskEvent(int,android.graphics.Rect) -> sendDockingTopTaskEvent
    void sendLaunchRecentsEvent() -> sendLaunchRecentsEvent
    void sendRecentsDrawnEvent() -> sendRecentsDrawnEvent
    void setWaitingForTransitionStartEvent(boolean) -> setWaitingForTransitionStartEvent
    void startScreenPinning(int) -> startScreenPinning
    void updateRecentsVisibility(boolean) -> updateRecentsVisibility
com.android.systemui.volume.VolumeDialogControllerImpl$C$2 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$2:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    int val$reason -> val$reason
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry,int) -> <init>
    void run() -> run
com.android.systemui.keyguard.Lifecycle -> com.android.systemui.keyguard.Lifecycle:
    java.util.ArrayList mObservers -> mObservers
    void <init>() -> <init>
    void dispatch(java.util.function.Consumer) -> dispatch
    void addObserver(java.lang.Object) -> addObserver
com.android.systemui.statusbar.policy.WifiSignalController$WifiState -> com.android.systemui.statusbar.policy.WifiSignalController$WifiState:
    java.lang.String ssid -> ssid
    boolean isTransient -> isTransient
    void <init>() -> <init>
    void copyFrom(com.android.systemui.statusbar.policy.SignalController$State) -> copyFrom
    boolean equals(java.lang.Object) -> equals
    void toString(java.lang.StringBuilder) -> toString
com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA$2 -> com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA$2:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    java.lang.Object $m$0() -> $m$0
    java.lang.Object $m$1() -> $m$1
    java.lang.Object $m$2() -> $m$2
    java.lang.Object $m$3() -> $m$3
    java.lang.Object $m$4() -> $m$4
    java.lang.Object $m$5() -> $m$5
    java.lang.Object $m$6() -> $m$6
    java.lang.Object $m$7() -> $m$7
    java.lang.Object $m$8() -> $m$8
    java.lang.Object $m$9() -> $m$9
    java.lang.Object $m$10() -> $m$10
    java.lang.Object $m$11() -> $m$11
    java.lang.Object $m$12() -> $m$12
    java.lang.Object $m$13() -> $m$13
    java.lang.Object $m$14() -> $m$14
    java.lang.Object $m$15() -> $m$15
    java.lang.Object $m$16() -> $m$16
    java.lang.Object $m$17() -> $m$17
    java.lang.Object $m$18() -> $m$18
    java.lang.Object $m$19() -> $m$19
    java.lang.Object $m$20() -> $m$20
    java.lang.Object $m$21() -> $m$21
    java.lang.Object $m$22() -> $m$22
    java.lang.Object $m$23() -> $m$23
    java.lang.Object $m$24() -> $m$24
    java.lang.Object $m$25() -> $m$25
    java.lang.Object $m$26() -> $m$26
    java.lang.Object $m$27() -> $m$27
    java.lang.Object $m$28() -> $m$28
    java.lang.Object $m$29() -> $m$29
    java.lang.Object $m$30() -> $m$30
    java.lang.Object $m$31() -> $m$31
    java.lang.Object $m$32() -> $m$32
    java.lang.Object $m$33() -> $m$33
    java.lang.Object $m$34() -> $m$34
    java.lang.Object $m$35() -> $m$35
    java.lang.Object $m$36() -> $m$36
    java.lang.Object $m$37() -> $m$37
    java.lang.Object $m$38() -> $m$38
    java.lang.Object createDependency() -> createDependency
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$4 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$4:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.String,android.app.Fragment) -> $m$0
    void onFragmentViewCreated(java.lang.String,android.app.Fragment) -> onFragmentViewCreated
com.android.systemui.recents.-$Lambda$s3onfRoxdAGXRhy8h9aH8AYjDzM$1 -> com.android.systemui.recents.-$Lambda$s3onfRoxdAGXRhy8h9aH8AYjDzM$1:
    boolean -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(boolean,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.settingslib.drawer.CategoryKey -> com.android.settingslib.drawer.CategoryKey:
    java.util.Map KEY_COMPAT_MAP -> KEY_COMPAT_MAP
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.recents.views.FixedSizeImageView -> com.android.systemui.recents.views.FixedSizeImageView:
    boolean mAllowInvalidate -> mAllowInvalidate
    boolean mAllowRelayout -> mAllowRelayout
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void invalidate() -> invalidate
    void requestLayout() -> requestLayout
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
android.support.v4.media.MediaBrowserCompatApi23$ItemCallback -> android.support.v4.media.MediaBrowserCompatApi23$ItemCallback:
    void onItemLoaded(android.os.Parcel) -> onItemLoaded
    void onError(java.lang.String) -> onError
com.android.systemui.qs.tiles.DndTile -> com.android.systemui.qs.tiles.DndTile:
    com.android.systemui.plugins.qs.QSTile$Icon TOTAL_SILENCE -> TOTAL_SILENCE
    android.content.Intent ZEN_PRIORITY_SETTINGS -> ZEN_PRIORITY_SETTINGS
    android.content.Intent ZEN_SETTINGS -> ZEN_SETTINGS
    com.android.systemui.statusbar.policy.ZenModeController mController -> mController
    com.android.systemui.qs.tiles.DndTile$DndDetailAdapter mDetailAdapter -> mDetailAdapter
    boolean mListening -> mListening
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefListener -> mPrefListener
    android.content.BroadcastReceiver mReceiver -> mReceiver
    boolean mReceiverRegistered -> mReceiverRegistered
    boolean mShowingDetail -> mShowingDetail
    com.android.systemui.statusbar.policy.ZenModeController$Callback mZenCallback -> mZenCallback
    com.android.systemui.volume.ZenModePanel$Callback mZenModePanelCallback -> mZenModePanelCallback
    void setCombinedIcon(android.content.Context,boolean) -> setCombinedIcon
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    void setVisible(android.content.Context,boolean) -> setVisible
    boolean isVisible(android.content.Context) -> isVisible
    boolean isCombinedIcon(android.content.Context) -> isCombinedIcon
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter() -> getDetailAdapter
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleDestroy() -> handleDestroy
    void handleSecondaryClick() -> handleSecondaryClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void <clinit>() -> <clinit>
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    java.lang.String -get0(com.android.systemui.qs.tiles.DndTile) -> -get0
    android.content.Intent -get1() -> -get1
    android.content.Intent -get2() -> -get2
    android.content.Context -get3(com.android.systemui.qs.tiles.DndTile) -> -get3
    com.android.systemui.statusbar.policy.ZenModeController -get4(com.android.systemui.qs.tiles.DndTile) -> -get4
    com.android.systemui.qs.tiles.DndTile$DndDetailAdapter -get5(com.android.systemui.qs.tiles.DndTile) -> -get5
    com.android.systemui.plugins.qs.QSTile$State -get6(com.android.systemui.qs.tiles.DndTile) -> -get6
    com.android.systemui.volume.ZenModePanel$Callback -get7(com.android.systemui.qs.tiles.DndTile) -> -get7
    boolean -set0(com.android.systemui.qs.tiles.DndTile,boolean) -> -set0
    boolean -wrap0(com.android.systemui.qs.tiles.DndTile) -> -wrap0
    void -wrap1(com.android.systemui.qs.tiles.DndTile,java.lang.Object) -> -wrap1
android.support.v7.content.res.GrowingArrayUtils -> android.support.v7.content.res.GrowingArrayUtils:
    boolean -assertionsDisabled -> -assertionsDisabled
    java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    int[] append(int[],int,int) -> append
    int growSize(int) -> growSize
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    java.util.Collection getValues() -> getValues
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    java.util.Set getKeySet() -> getKeySet
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Map colGetMap() -> colGetMap
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colClear() -> colClear
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    int colGetSize() -> colGetSize
    void colRemoveAt(int) -> colRemoveAt
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    void <init>() -> <init>
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
android.support.v7.widget.RecyclerView$State$LayoutState -> android.support.v7.widget.RecyclerView$State$LayoutState:
com.android.systemui.statusbar.phone.BarTransitions$BarBackgroundDrawable -> com.android.systemui.statusbar.phone.BarTransitions$BarBackgroundDrawable:
    boolean mAnimating -> mAnimating
    int mColor -> mColor
    int mColorStart -> mColorStart
    long mEndTime -> mEndTime
    android.graphics.drawable.Drawable mGradient -> mGradient
    int mGradientAlpha -> mGradientAlpha
    int mGradientAlphaStart -> mGradientAlphaStart
    int mMode -> mMode
    int mOpaque -> mOpaque
    android.graphics.Paint mPaint -> mPaint
    int mSemiTransparent -> mSemiTransparent
    long mStartTime -> mStartTime
    android.graphics.PorterDuffColorFilter mTintFilter -> mTintFilter
    int mTransparent -> mTransparent
    int mWarning -> mWarning
    void <init>(android.content.Context,int) -> <init>
    void applyModeBackground(int,int,boolean) -> applyModeBackground
    void draw(android.graphics.Canvas) -> draw
    void finishAnimation() -> finishAnimation
    int getOpacity() -> getOpacity
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setTint(int) -> setTint
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.android.systemui.ForegroundServiceControllerImpl$UserServices -> com.android.systemui.ForegroundServiceControllerImpl$UserServices:
    android.util.ArrayMap mNotifications -> mNotifications
    java.lang.String[] mRunning -> mRunning
    long mServiceStartTime -> mServiceStartTime
    void <init>() -> <init>
    void addNotification(java.lang.String,java.lang.String) -> addNotification
    boolean isDungeonNeeded() -> isDungeonNeeded
    boolean removeNotification(java.lang.String,java.lang.String) -> removeNotification
    void setRunningServices(java.lang.String[],long) -> setRunningServices
    void <init>(com.android.systemui.ForegroundServiceControllerImpl$UserServices) -> <init>
android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager -> android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager:
    android.support.v7.app.TwilightManager mTwilightManager -> mTwilightManager
    boolean mIsNight -> mIsNight
    android.support.v7.app.AppCompatDelegateImplV14 this$0 -> this$0
    android.content.BroadcastReceiver mAutoTimeChangeReceiver -> mAutoTimeChangeReceiver
    android.content.IntentFilter mAutoTimeChangeReceiverFilter -> mAutoTimeChangeReceiverFilter
    int getApplyableNightMode() -> getApplyableNightMode
    void dispatchTimeChanged() -> dispatchTimeChanged
    void setup() -> setup
    void cleanup() -> cleanup
    void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.support.v7.app.TwilightManager) -> <init>
android.support.v4.app.OneShotPreDrawListener -> android.support.v4.app.OneShotPreDrawListener:
    android.view.View mView -> mView
    java.lang.Runnable mRunnable -> mRunnable
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    void removeListener() -> removeListener
    void <init>(android.view.View,java.lang.Runnable) -> <init>
    android.support.v4.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    boolean onPreDraw() -> onPreDraw
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.android.systemui.statusbar.policy.MobileSignalController$MobilePhoneStateListener -> com.android.systemui.statusbar.policy.MobileSignalController$MobilePhoneStateListener:
    com.android.systemui.statusbar.policy.MobileSignalController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.MobileSignalController,int,android.os.Looper) -> <init>
    void onCarrierNetworkChange(boolean) -> onCarrierNetworkChange
    void onDataActivity(int) -> onDataActivity
    void onDataConnectionStateChanged(int,int) -> onDataConnectionStateChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.android.systemui.DessertCaseView$2$1 -> com.android.systemui.DessertCaseView$2$1:
    com.android.systemui.DessertCaseView$2 this$1 -> this$1
    void <init>(com.android.systemui.DessertCaseView$2) -> <init>
    void run() -> run
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.LayoutInflaterCompat:
    boolean sCheckedField -> sCheckedField
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatBaseImpl IMPL -> IMPL
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> sLayoutInflaterFactory2Field
    void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
    void <clinit>() -> <clinit>
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    void <init>() -> <init>
com.android.systemui.statusbar.phone.NotificationPanelView$6 -> com.android.systemui.statusbar.phone.NotificationPanelView$6:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.phone.NoisyVelocityTracker$MotionEventCopy -> com.android.systemui.statusbar.phone.NoisyVelocityTracker$MotionEventCopy:
    long t -> t
    float x -> x
    float y -> y
    void <init>(float,float,long) -> <init>
com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl$1 -> com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl$1:
    com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl,android.os.Handler) -> <init>
    void onChange(boolean,android.net.Uri,int) -> onChange
com.android.systemui.recents.views.RecentsTransitionHelper$1 -> com.android.systemui.recents.views.RecentsTransitionHelper$1:
    boolean mHandled -> mHandled
    com.android.systemui.recents.views.RecentsTransitionHelper this$0 -> this$0
    com.android.systemui.recents.model.Task val$task -> val$task
    com.android.systemui.recents.views.TaskStackView val$stackView -> val$stackView
    boolean val$screenPinningRequested -> val$screenPinningRequested
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskStackView,boolean) -> <init>
    void onAnimationStarted() -> onAnimationStarted
com.android.systemui.statusbar.policy.DataSaverControllerImpl$1$1 -> com.android.systemui.statusbar.policy.DataSaverControllerImpl$1$1:
    com.android.systemui.statusbar.policy.DataSaverControllerImpl$1 this$1 -> this$1
    boolean val$isDataSaving -> val$isDataSaving
    void <init>(com.android.systemui.statusbar.policy.DataSaverControllerImpl$1,boolean) -> <init>
    void run() -> run
android.support.v7.widget.ChildHelper$Callback -> android.support.v7.widget.ChildHelper$Callback:
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void removeViewAt(int) -> removeViewAt
    void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    void detachViewFromParent(int) -> detachViewFromParent
    void addView(android.view.View,int) -> addView
    int indexOfChild(android.view.View) -> indexOfChild
    int getChildCount() -> getChildCount
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void removeAllViews() -> removeAllViews
    void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    android.view.View getChildAt(int) -> getChildAt
com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry -> com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry:
    long earliestRemovaltime -> earliestRemovaltime
    com.android.systemui.statusbar.NotificationData$Entry entry -> entry
    boolean expanded -> expanded
    java.lang.Runnable mRemoveHeadsUpRunnable -> mRemoveHeadsUpRunnable
    long postTime -> postTime
    boolean remoteInputActive -> remoteInputActive
    com.android.systemui.statusbar.policy.HeadsUpManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.HeadsUpManager) -> <init>
    int compareTo(com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry) -> compareTo
    boolean isSticky() -> isSticky
    void removeAsSoonAsPossible() -> removeAsSoonAsPossible
    void removeAutoRemovalCallbacks() -> removeAutoRemovalCallbacks
    void reset() -> reset
    void setEntry(com.android.systemui.statusbar.NotificationData$Entry) -> setEntry
    void updateEntry() -> updateEntry
    void updateEntry(boolean) -> updateEntry
    boolean wasShownLongEnough() -> wasShownLongEnough
    int compareTo(java.lang.Object) -> compareTo
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    int mScrollState -> mScrollState
    void <init>(android.support.v4.view.PagerTitleStrip) -> <init>
    void onChanged() -> onChanged
    void onAdapterChanged(android.support.v4.view.ViewPager,android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
android.support.v7.app.AppCompatDelegate -> android.support.v7.app.AppCompatDelegate:
    boolean sCompatVectorFromResourcesEnabled -> sCompatVectorFromResourcesEnabled
    int sDefaultNightMode -> sDefaultNightMode
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> create
    boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    android.support.v7.app.AppCompatDelegate create(android.app.Dialog,android.support.v7.app.AppCompatCallback) -> create
    boolean requestWindowFeature(int) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void installViewFactory() -> installViewFactory
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    int getDefaultNightMode() -> getDefaultNightMode
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void setContentView(android.view.View) -> setContentView
    boolean applyDayNight() -> applyDayNight
com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup -> com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup:
    int mActivityId -> mActivityId
    int mDataContentDescription -> mDataContentDescription
    int mDataType -> mDataType
    boolean mIsWide -> mIsWide
    int mQsDataType -> mQsDataType
    int mSingleSignalIcon -> mSingleSignalIcon
    int mStackedDataIcon -> mStackedDataIcon
    int mStackedVoiceIcon -> mStackedVoiceIcon
    void <init>(java.lang.String,int[][],int[][],int[],int,int,int,int,int,int,int,boolean,int) -> <init>
    void <init>(java.lang.String,int[][],int[][],int[],int,int,int,int,int,int,int,boolean,int,int,int,int,int) -> <init>
android.support.v7.app.MediaRouteControllerDialog$11 -> android.support.v7.app.MediaRouteControllerDialog$11:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
android.support.v4.content.PermissionChecker -> android.support.v4.content.PermissionChecker:
    void <init>() -> <init>
    int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
com.android.systemui.recents.events.activity.ExitRecentsWindowFirstAnimationFrameEvent -> com.android.systemui.recents.events.activity.ExitRecentsWindowFirstAnimationFrameEvent:
    void <init>() -> <init>
com.android.systemui.settings.BrightnessController$9 -> com.android.systemui.settings.BrightnessController$9:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    int val$val -> val$val
    void <init>(com.android.systemui.settings.BrightnessController,int) -> <init>
    void run() -> run
com.android.systemui.qs.QSDetail$Callback -> com.android.systemui.qs.QSDetail$Callback:
    void onScanStateChanged(boolean) -> onScanStateChanged
    void onShowingDetail(com.android.systemui.plugins.qs.DetailAdapter,int,int) -> onShowingDetail
    void onToggleStateChanged(boolean) -> onToggleStateChanged
com.android.systemui.settings.BrightnessController$2 -> com.android.systemui.settings.BrightnessController$2:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    void <init>(com.android.systemui.settings.BrightnessController) -> <init>
    void run() -> run
com.android.systemui.globalactions.GlobalActionsDialog$Action -> com.android.systemui.globalactions.GlobalActionsDialog$Action:
    android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater) -> create
    java.lang.CharSequence getLabelForAccessibility(android.content.Context) -> getLabelForAccessibility
    boolean isEnabled() -> isEnabled
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
android.support.v4.widget.TextViewCompat$TextViewCompatApi17Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi17Impl:
    void <init>() -> <init>
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$4 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$4:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.phone.LockIcon -> com.android.systemui.statusbar.phone.LockIcon:
    com.android.systemui.statusbar.policy.AccessibilityController mAccessibilityController -> mAccessibilityController
    int mDensity -> mDensity
    boolean mDeviceInteractive -> mDeviceInteractive
    java.lang.Runnable mDrawOffTimeout -> mDrawOffTimeout
    boolean mHasFingerPrintIcon -> mHasFingerPrintIcon
    boolean mLastDeviceInteractive -> mLastDeviceInteractive
    boolean mLastScreenOn -> mLastScreenOn
    int mLastState -> mLastState
    boolean mScreenOn -> mScreenOn
    boolean mTransientFpError -> mTransientFpError
    com.android.systemui.statusbar.phone.TrustDrawable mTrustDrawable -> mTrustDrawable
    com.android.systemui.statusbar.phone.UnlockMethodCache mUnlockMethodCache -> mUnlockMethodCache
    android.graphics.drawable.Drawable mUserAvatarIcon -> mUserAvatarIcon
    void setDeviceInteractive(boolean) -> setDeviceInteractive
    void setScreenOn(boolean) -> setScreenOn
    void update() -> update
    void setAccessibilityController(com.android.systemui.statusbar.policy.AccessibilityController) -> setAccessibilityController
    void update(boolean) -> update
    void setTransientFpError(boolean) -> setTransientFpError
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getAnimationResForTransition(int,int,boolean,boolean,boolean,boolean) -> getAnimationResForTransition
    android.graphics.drawable.Drawable getIconForState(int,boolean,boolean) -> getIconForState
    int getState() -> getState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> onUserInfoChanged
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void updateClickability() -> updateClickability
    void lambda$-com_android_systemui_statusbar_phone_LockIcon_2330() -> lambda$-com_android_systemui_statusbar_phone_LockIcon_2330
com.android.systemui.qs.tiles.NightDisplayTile -> com.android.systemui.qs.tiles.NightDisplayTile:
    com.android.internal.app.NightDisplayController mController -> mController
    boolean mIsListening -> mIsListening
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    void handleUserSwitch(int) -> handleUserSwitch
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void onActivated(boolean) -> onActivated
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
com.android.systemui.qs.SlashDrawable$1 -> com.android.systemui.qs.SlashDrawable$1:
    com.android.systemui.qs.SlashDrawable this$0 -> this$0
    void <init>(com.android.systemui.qs.SlashDrawable,java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.qs.SlashDrawable) -> get
    void setValue(com.android.systemui.qs.SlashDrawable,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
android.support.v17.leanback.transition.SlideKitkat$3 -> android.support.v17.leanback.transition.SlideKitkat$3:
    void <init>() -> <init>
    float getGone(android.view.View) -> getGone
android.support.v7.widget.ListViewCompat -> android.support.v7.widget.ListViewCompat:
    int mSelectionBottomPadding -> mSelectionBottomPadding
    java.lang.reflect.Field mIsChildViewEnabled -> mIsChildViewEnabled
    int mSelectionRightPadding -> mSelectionRightPadding
    int mMotionPosition -> mMotionPosition
    int mSelectionLeftPadding -> mSelectionLeftPadding
    android.support.v7.widget.ListViewCompat$GateKeeperDrawable mSelector -> mSelector
    int mSelectionTopPadding -> mSelectionTopPadding
    int[] STATE_SET_NOTHING -> STATE_SET_NOTHING
    android.graphics.Rect mSelectorRect -> mSelectorRect
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    boolean shouldShowSelectorCompat() -> shouldShowSelectorCompat
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void drawableStateChanged() -> drawableStateChanged
    void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    void <clinit>() -> <clinit>
    void updateSelectorStateCompat() -> updateSelectorStateCompat
android.support.graphics.drawable.AnimationUtilsCompat -> android.support.graphics.drawable.AnimationUtilsCompat:
    android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
    void <init>() -> <init>
    android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
com.android.systemui.pip.phone.PipDismissViewController -> com.android.systemui.pip.phone.PipDismissViewController:
    android.content.Context mContext -> mContext
    android.view.View mDismissView -> mDismissView
    android.view.WindowManager mWindowManager -> mWindowManager
    void <init>(android.content.Context) -> <init>
    void createDismissTarget() -> createDismissTarget
    void destroyDismissTarget() -> destroyDismissTarget
    void showDismissTarget() -> showDismissTarget
    android.view.View -get0(com.android.systemui.pip.phone.PipDismissViewController) -> -get0
    android.view.WindowManager -get1(com.android.systemui.pip.phone.PipDismissViewController) -> -get1
    android.view.View -set0(com.android.systemui.pip.phone.PipDismissViewController,android.view.View) -> -set0
com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$2 -> com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$2:
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> <init>
    void run() -> run
com.android.systemui.statusbar.car.-$Lambda$FZ4mtee2vnK98nAu2Wi9_aZl9Po -> com.android.systemui.statusbar.car.-$Lambda$FZ4mtee2vnK98nAu2Wi9_aZl9Po:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void $m$1(android.view.View) -> $m$1
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.FlingAnimationUtils$InterpolatorInterpolator -> com.android.systemui.statusbar.FlingAnimationUtils$InterpolatorInterpolator:
    android.view.animation.Interpolator mCrossfader -> mCrossfader
    android.view.animation.Interpolator mInterpolator1 -> mInterpolator1
    android.view.animation.Interpolator mInterpolator2 -> mInterpolator2
    void <init>(android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.TextViewCompat$TextViewCompatApi23Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi23Impl:
    void <init>() -> <init>
    void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
com.android.systemui.statusbar.phone.PlatformVelocityTracker -> com.android.systemui.statusbar.phone.PlatformVelocityTracker:
    android.view.VelocityTracker mTracker -> mTracker
    android.util.Pools$SynchronizedPool sPool -> sPool
    com.android.systemui.statusbar.phone.PlatformVelocityTracker obtain() -> obtain
    void <init>() -> <init>
    void addMovement(android.view.MotionEvent) -> addMovement
    void computeCurrentVelocity(int) -> computeCurrentVelocity
    float getXVelocity() -> getXVelocity
    float getYVelocity() -> getYVelocity
    void recycle() -> recycle
    void setTracker(android.view.VelocityTracker) -> setTracker
    void <clinit>() -> <clinit>
android.support.v7.widget.ActionMenuPresenter$SavedState -> android.support.v7.widget.ActionMenuPresenter$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int openSubMenuId -> openSubMenuId
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    java.lang.String mMediaId -> mMediaId
    android.support.v4.media.MediaBrowserCompat$ItemCallback mCallback -> mCallback
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v7.widget.AppCompatTextViewAutoSizeHelper -> android.support.v7.widget.AppCompatTextViewAutoSizeHelper:
    android.content.Context mContext -> mContext
    android.text.TextPaint mTempTextPaint -> mTempTextPaint
    float mAutoSizeMinTextSizeInPx -> mAutoSizeMinTextSizeInPx
    float mAutoSizeMaxTextSizeInPx -> mAutoSizeMaxTextSizeInPx
    int mAutoSizeTextType -> mAutoSizeTextType
    boolean mHasPresetAutoSizeValues -> mHasPresetAutoSizeValues
    java.util.Hashtable sTextViewMethodByNameCache -> sTextViewMethodByNameCache
    float mAutoSizeStepGranularityInPx -> mAutoSizeStepGranularityInPx
    android.widget.TextView mTextView -> mTextView
    boolean mNeedsAutoSizeText -> mNeedsAutoSizeText
    android.graphics.RectF TEMP_RECTF -> TEMP_RECTF
    int[] mAutoSizeTextSizesInPx -> mAutoSizeTextSizesInPx
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    boolean supportsAutoSizeText() -> supportsAutoSizeText
    java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    void setRawTextSize(float) -> setRawTextSize
    void autoSizeText() -> autoSizeText
    boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    void <clinit>() -> <clinit>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void setTextSizeInternal(int,float) -> setTextSizeInternal
    void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    void <init>(android.widget.TextView) -> <init>
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    int getAutoSizeTextType() -> getAutoSizeTextType
    boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    boolean setupAutoSizeText() -> setupAutoSizeText
com.android.systemui.volume.MediaSessions$Callbacks -> com.android.systemui.volume.MediaSessions$Callbacks:
    void onRemoteRemoved(android.media.session.MediaSession$Token) -> onRemoteRemoved
    void onRemoteUpdate(android.media.session.MediaSession$Token,java.lang.String,android.media.session.MediaController$PlaybackInfo) -> onRemoteUpdate
    void onRemoteVolumeChanged(android.media.session.MediaSession$Token,int) -> onRemoteVolumeChanged
com.android.systemui.statusbar.policy.SecurityControllerImpl$2 -> com.android.systemui.statusbar.policy.SecurityControllerImpl$2:
    com.android.systemui.statusbar.policy.SecurityControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.SecurityControllerImpl) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.recents.views.TaskStackView$7 -> com.android.systemui.recents.views.TaskStackView$7:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    com.android.systemui.recents.events.ui.dragndrop.DragEndEvent val$event -> val$event
    void <init>(com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.events.ui.dragndrop.DragEndEvent) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    android.view.View val$viewToAnimate -> val$viewToAnimate
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.view.ViewGroup val$container -> val$container
    void <init>(android.support.v4.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.ActionMenuView$OnMenuItemClickListener -> android.support.v7.widget.ActionMenuView$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat mCompat -> mCompat
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
com.android.systemui.statusbar.policy.KeyguardMonitor -> com.android.systemui.statusbar.policy.KeyguardMonitor:
    boolean isSecure() -> isSecure
    boolean canSkipBouncer() -> canSkipBouncer
    boolean isShowing() -> isShowing
    boolean isKeyguardGoingAway() -> isKeyguardGoingAway
    long getKeyguardFadingAwayDelay() -> getKeyguardFadingAwayDelay
    long getKeyguardFadingAwayDuration() -> getKeyguardFadingAwayDuration
    boolean isKeyguardFadingAway() -> isKeyguardFadingAway
    boolean isOccluded() -> isOccluded
com.android.systemui.statusbar.policy.EmergencyCryptkeeperText$2 -> com.android.systemui.statusbar.policy.EmergencyCryptkeeperText$2:
    com.android.systemui.statusbar.policy.EmergencyCryptkeeperText this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.EmergencyCryptkeeperText) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.qs.car.-$Lambda$PJuwMVrpZEqa7QDEs4dfDCdYkDI$2 -> com.android.systemui.qs.car.-$Lambda$PJuwMVrpZEqa7QDEs4dfDCdYkDI$2:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.settingslib.bluetooth.LocalBluetoothManager -> com.android.settingslib.bluetooth.LocalBluetoothManager:
    android.content.Context mContext -> mContext
    com.android.settingslib.bluetooth.BluetoothEventManager mEventManager -> mEventManager
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    com.android.settingslib.bluetooth.LocalBluetoothManager sInstance -> sInstance
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mCachedDeviceManager -> mCachedDeviceManager
    com.android.settingslib.bluetooth.LocalBluetoothManager getInstance(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager$BluetoothManagerCallback) -> getInstance
    com.android.settingslib.bluetooth.LocalBluetoothAdapter getBluetoothAdapter() -> getBluetoothAdapter
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager getCachedDeviceManager() -> getCachedDeviceManager
    com.android.settingslib.bluetooth.BluetoothEventManager getEventManager() -> getEventManager
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager getProfileManager() -> getProfileManager
    void <init>(com.android.settingslib.bluetooth.LocalBluetoothAdapter,android.content.Context) -> <init>
android.support.v7.mediarouter.R$layout -> android.support.v7.mediarouter.R$layout:
    int mr_chooser_dialog -> mr_chooser_dialog
    int mr_chooser_list_item -> mr_chooser_list_item
    int mr_controller_material_dialog_b -> mr_controller_material_dialog_b
    int mr_controller_volume_item -> mr_controller_volume_item
    void <init>() -> <init>
android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi21Impl -> android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi21Impl:
    java.lang.reflect.Field sOverlapAnchorField -> sOverlapAnchorField
    void <clinit>() -> <clinit>
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void <init>() -> <init>
com.android.settingslib.core.lifecycle.events.OnStop -> com.android.settingslib.core.lifecycle.events.OnStop:
    void onStop() -> onStop
com.android.systemui.qs.customize.QSCustomizer$3 -> com.android.systemui.qs.customize.QSCustomizer$3:
    com.android.systemui.qs.customize.QSCustomizer this$0 -> this$0
    void <init>(com.android.systemui.qs.customize.QSCustomizer) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.pip.phone.PipMenuActivityController$2 -> com.android.systemui.pip.phone.PipMenuActivityController$2:
    com.android.systemui.pip.phone.PipMenuActivityController this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMenuActivityController) -> <init>
    void onMediaActionsChanged(java.util.List) -> onMediaActionsChanged
com.android.systemui.recents.events.activity.EnterRecentsWindowLastAnimationFrameEvent -> com.android.systemui.recents.events.activity.EnterRecentsWindowLastAnimationFrameEvent:
    void <init>() -> <init>
com.android.systemui.statusbar.policy.HotspotController -> com.android.systemui.statusbar.policy.HotspotController:
    boolean isHotspotSupported() -> isHotspotSupported
    void setHotspotEnabled(boolean) -> setHotspotEnabled
    boolean isHotspotEnabled() -> isHotspotEnabled
    boolean isHotspotTransient() -> isHotspotTransient
com.android.systemui.recents.Recents$7 -> com.android.systemui.recents.Recents$7:
    com.android.systemui.recents.Recents this$0 -> this$0
    void <init>(com.android.systemui.recents.Recents) -> <init>
    void run() -> run
com.android.systemui.plugins.statusbar.phone.NavGesture$GestureHelper -> com.android.systemui.plugins.statusbar.phone.NavGesture$GestureHelper:
    void setBarState(boolean,boolean) -> setBarState
    void destroy() -> destroy
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.doze.DozeReceiver -> com.android.systemui.doze.DozeReceiver:
    void setDozing(boolean) -> setDozing
android.support.v7.preference.Preference$BaseSavedState$1 -> android.support.v7.preference.Preference$BaseSavedState$1:
    android.support.v7.preference.Preference$BaseSavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v7.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.volume.ZenModePanel$2$1 -> com.android.systemui.volume.ZenModePanel$2$1:
    com.android.systemui.volume.ZenModePanel$2 this$1 -> this$1
    int val$zen -> val$zen
    android.net.Uri val$realConditionId -> val$realConditionId
    void <init>(com.android.systemui.volume.ZenModePanel$2,int,android.net.Uri) -> <init>
    void run() -> run
com.android.systemui.plugins.IntentButtonProvider -> com.android.systemui.plugins.IntentButtonProvider:
    int VERSION -> VERSION
    com.android.systemui.plugins.IntentButtonProvider$IntentButton getIntentButton() -> getIntentButton
com.android.systemui.usb.StorageNotification$1 -> com.android.systemui.usb.StorageNotification$1:
    com.android.systemui.usb.StorageNotification this$0 -> this$0
    void <init>(com.android.systemui.usb.StorageNotification) -> <init>
    void onDiskDestroyed(android.os.storage.DiskInfo) -> onDiskDestroyed
    void onDiskScanned(android.os.storage.DiskInfo,int) -> onDiskScanned
    void onVolumeForgotten(java.lang.String) -> onVolumeForgotten
    void onVolumeRecordChanged(android.os.storage.VolumeRecord) -> onVolumeRecordChanged
    void onVolumeStateChanged(android.os.storage.VolumeInfo,int,int) -> onVolumeStateChanged
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    int mSize -> mSize
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    boolean mGarbage -> mGarbage
    void gc() -> gc
    void delete(int) -> delete
    void <init>(int) -> <init>
    java.lang.Object get(int,java.lang.Object) -> get
    java.lang.Object clone() -> clone
    android.support.v4.util.SparseArrayCompat clone() -> clone
    void append(int,java.lang.Object) -> append
    java.lang.Object valueAt(int) -> valueAt
    void clear() -> clear
    void remove(int) -> remove
    java.lang.Object get(int) -> get
    int keyAt(int) -> keyAt
    int size() -> size
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void put(int,java.lang.Object) -> put
    void <init>() -> <init>
com.android.systemui.statusbar.stack.AnimationFilter -> com.android.systemui.statusbar.stack.AnimationFilter:
    boolean animateDimmed -> animateDimmed
    boolean animateHideSensitive -> animateHideSensitive
    boolean animateDark -> animateDark
    boolean animateHeight -> animateHeight
    boolean animateShadowAlpha -> animateShadowAlpha
    boolean animateTopInset -> animateTopInset
    boolean animateAlpha -> animateAlpha
    boolean animateX -> animateX
    boolean animateY -> animateY
    android.support.v4.util.ArraySet animateYViews -> animateYViews
    boolean animateZ -> animateZ
    boolean hasDelays -> hasDelays
    boolean hasGoToFullShadeEvent -> hasGoToFullShadeEvent
    boolean hasHeadsUpDisappearClickEvent -> hasHeadsUpDisappearClickEvent
    android.support.v4.util.ArraySet mAnimatedProperties -> mAnimatedProperties
    void reset() -> reset
    void combineFilter(com.android.systemui.statusbar.stack.AnimationFilter) -> combineFilter
    com.android.systemui.statusbar.stack.AnimationFilter animateX() -> animateX
    void <init>() -> <init>
    com.android.systemui.statusbar.stack.AnimationFilter animateY() -> animateY
    com.android.systemui.statusbar.stack.AnimationFilter animateAlpha() -> animateAlpha
    com.android.systemui.statusbar.stack.AnimationFilter animateScale() -> animateScale
    com.android.systemui.statusbar.stack.AnimationFilter animate(android.util.Property) -> animate
    com.android.systemui.statusbar.stack.AnimationFilter animateDark() -> animateDark
    com.android.systemui.statusbar.stack.AnimationFilter animateDimmed() -> animateDimmed
    com.android.systemui.statusbar.stack.AnimationFilter animateHeight() -> animateHeight
    com.android.systemui.statusbar.stack.AnimationFilter animateHideSensitive() -> animateHideSensitive
    com.android.systemui.statusbar.stack.AnimationFilter animateShadowAlpha() -> animateShadowAlpha
    com.android.systemui.statusbar.stack.AnimationFilter animateTopInset() -> animateTopInset
    com.android.systemui.statusbar.stack.AnimationFilter animateY(android.view.View) -> animateY
    com.android.systemui.statusbar.stack.AnimationFilter animateZ() -> animateZ
    void applyCombination(java.util.ArrayList) -> applyCombination
    com.android.systemui.statusbar.stack.AnimationFilter hasDelays() -> hasDelays
    boolean shouldAnimateProperty(android.util.Property) -> shouldAnimateProperty
    boolean shouldAnimateY(android.view.View) -> shouldAnimateY
com.android.systemui.statusbar.KeyguardIndicationController$BaseKeyguardCallback -> com.android.systemui.statusbar.KeyguardIndicationController$BaseKeyguardCallback:
    int mLastSuccessiveErrorMessage -> mLastSuccessiveErrorMessage
    com.android.systemui.statusbar.KeyguardIndicationController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardIndicationController) -> <init>
    void onFingerprintAuthFailed() -> onFingerprintAuthFailed
    void onFingerprintAuthenticated(int) -> onFingerprintAuthenticated
    void onFingerprintError(int,java.lang.String) -> onFingerprintError
    void onFingerprintHelp(int,java.lang.String) -> onFingerprintHelp
    void onFingerprintRunningStateChanged(boolean) -> onFingerprintRunningStateChanged
    void onKeyguardVisibilityChanged(boolean) -> onKeyguardVisibilityChanged
    void onRefreshBatteryInfo(com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus) -> onRefreshBatteryInfo
    void onScreenTurnedOn() -> onScreenTurnedOn
    void onUserUnlocked() -> onUserUnlocked
android.support.v17.leanback.widget.ScaleFrameLayout -> android.support.v17.leanback.widget.ScaleFrameLayout:
    float mLayoutScaleX -> mLayoutScaleX
    float mLayoutScaleY -> mLayoutScaleY
    float mChildScale -> mChildScale
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void setForeground(android.graphics.drawable.Drawable) -> setForeground
    void <init>(android.content.Context) -> <init>
    boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    int getScaledMeasureSpec(int,float) -> getScaledMeasureSpec
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    void onShuffleModeChangedDeprecated(boolean) -> onShuffleModeChangedDeprecated
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionReady() -> onSessionReady
    void onShuffleModeChanged(int) -> onShuffleModeChanged
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
    void <init>(android.os.IBinder) -> <init>
    void onRepeatModeChanged(int) -> onRepeatModeChanged
    android.os.IBinder asBinder() -> asBinder
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
com.android.systemui.statusbar.phone.KeyguardAffordanceHelper -> com.android.systemui.statusbar.phone.KeyguardAffordanceHelper:
    java.lang.Runnable mAnimationEndRunnable -> mAnimationEndRunnable
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$Callback mCallback -> mCallback
    com.android.systemui.statusbar.KeyguardAffordanceView mCenterIcon -> mCenterIcon
    android.content.Context mContext -> mContext
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    android.animation.AnimatorListenerAdapter mFlingEndListener -> mFlingEndListener
    int mHintGrowAmount -> mHintGrowAmount
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    com.android.systemui.statusbar.KeyguardAffordanceView mLeftIcon -> mLeftIcon
    int mMinBackgroundRadius -> mMinBackgroundRadius
    int mMinFlingVelocity -> mMinFlingVelocity
    int mMinTranslationAmount -> mMinTranslationAmount
    boolean mMotionCancelled -> mMotionCancelled
    com.android.systemui.statusbar.KeyguardAffordanceView mRightIcon -> mRightIcon
    android.animation.Animator mSwipeAnimator -> mSwipeAnimator
    boolean mSwipingInProgress -> mSwipingInProgress
    android.view.View mTargetedView -> mTargetedView
    int mTouchSlop -> mTouchSlop
    boolean mTouchSlopExeeded -> mTouchSlopExeeded
    int mTouchTargetSize -> mTouchTargetSize
    float mTranslation -> mTranslation
    float mTranslationOnDown -> mTranslationOnDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void <init>(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$Callback,android.content.Context) -> <init>
    void reset(boolean) -> reset
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isOnAffordanceIcon(float,float) -> isOnAffordanceIcon
    void animateHideLeftRightIcon() -> animateHideLeftRightIcon
    void onConfigurationChanged() -> onConfigurationChanged
    void onRtlPropertiesChanged() -> onRtlPropertiesChanged
    void startHintAnimation(boolean,java.lang.Runnable) -> startHintAnimation
    void launchAffordance(boolean,boolean) -> launchAffordance
    boolean isSwipingInProgress() -> isSwipingInProgress
    void updatePreviews() -> updatePreviews
    void cancelAnimation() -> cancelAnimation
    void endMotion(boolean,float,float) -> endMotion
    void fling(float,boolean,boolean) -> fling
    void flingWithCurrentVelocity(boolean,float,float) -> flingWithCurrentVelocity
    android.animation.ValueAnimator getAnimatorToRadius(boolean,int) -> getAnimatorToRadius
    float getCurrentVelocity(float,float) -> getCurrentVelocity
    android.view.View getIconAtPosition(float,float) -> getIconAtPosition
    int getMinTranslationAmount() -> getMinTranslationAmount
    float getRadiusFromTranslation(float) -> getRadiusFromTranslation
    float getScale(float,com.android.systemui.statusbar.KeyguardAffordanceView) -> getScale
    float getTranslationFromRadius(float) -> getTranslationFromRadius
    void initDimens() -> initDimens
    void initIcons() -> initIcons
    void initVelocityTracker() -> initVelocityTracker
    boolean isBelowFalsingThreshold() -> isBelowFalsingThreshold
    boolean isOnIcon(android.view.View,float,float) -> isOnIcon
    boolean leftSwipePossible() -> leftSwipePossible
    boolean rightSwipePossible() -> rightSwipePossible
    void setTranslation(float,boolean,boolean) -> setTranslation
    void startFinishingCircleAnimation(float,java.lang.Runnable,boolean) -> startFinishingCircleAnimation
    void startHintAnimationPhase1(boolean,java.lang.Runnable) -> startHintAnimationPhase1
    void startSwiping(android.view.View) -> startSwiping
    void startUnlockHintAnimationPhase2(boolean,java.lang.Runnable) -> startUnlockHintAnimationPhase2
    void trackMovement(android.view.MotionEvent) -> trackMovement
    void updateIcon(com.android.systemui.statusbar.KeyguardAffordanceView,float,float,boolean,boolean,boolean,boolean) -> updateIcon
    void updateIconAlpha(com.android.systemui.statusbar.KeyguardAffordanceView,float,boolean) -> updateIconAlpha
    void updateIconsFromTranslation(com.android.systemui.statusbar.KeyguardAffordanceView) -> updateIconsFromTranslation
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$Callback -get0(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper) -> -get0
    android.animation.Animator -set0(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,android.animation.Animator) -> -set0
    boolean -set1(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,boolean) -> -set1
    android.view.View -set2(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,android.view.View) -> -set2
    float -set3(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,float) -> -set3
    float -wrap0(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,float) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,boolean,java.lang.Runnable) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,com.android.systemui.statusbar.KeyguardAffordanceView) -> -wrap2
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.ref.WeakReference mView -> mView
    java.lang.Runnable mEndAction -> mEndAction
    java.lang.Runnable mStartAction -> mStartAction
    int mOldLayerType -> mOldLayerType
    void setListenerInternal(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListenerInternal
    void <init>(android.view.View) -> <init>
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
com.android.keyguard.KeyguardSimPinView -> com.android.keyguard.KeyguardSimPinView:
    com.android.keyguard.KeyguardSimPinView$CheckSimPin mCheckSimPinThread -> mCheckSimPinThread
    int mRemainingAttempts -> mRemainingAttempts
    android.app.AlertDialog mRemainingAttemptsDialog -> mRemainingAttemptsDialog
    boolean mShowDefaultMessage -> mShowDefaultMessage
    android.widget.ImageView mSimImageView -> mSimImageView
    android.app.ProgressDialog mSimUnlockProgressDialog -> mSimUnlockProgressDialog
    int mSubId -> mSubId
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateMonitorCallback -> mUpdateMonitorCallback
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getPasswordTextViewId() -> getPasswordTextViewId
    java.lang.String getPinPasswordErrorMessage(int,boolean) -> getPinPasswordErrorMessage
    int getPromtReasonStringRes(int) -> getPromtReasonStringRes
    android.app.Dialog getSimRemainingAttemptsDialog(int) -> getSimRemainingAttemptsDialog
    android.app.Dialog getSimUnlockProgressDialog() -> getSimUnlockProgressDialog
    void handleSubInfoChangeIfNeeded() -> handleSubInfoChangeIfNeeded
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onPause() -> onPause
    void resetState() -> resetState
    boolean shouldLockout(long) -> shouldLockout
    void showDefaultMessage() -> showDefaultMessage
    void startAppearAnimation() -> startAppearAnimation
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    void verifyPasswordAndUnlock() -> verifyPasswordAndUnlock
    android.app.ProgressDialog -get0(com.android.keyguard.KeyguardSimPinView) -> -get0
    int -get1(com.android.keyguard.KeyguardSimPinView) -> -get1
    com.android.keyguard.KeyguardSimPinView$CheckSimPin -set0(com.android.keyguard.KeyguardSimPinView,com.android.keyguard.KeyguardSimPinView$CheckSimPin) -> -set0
    int -set1(com.android.keyguard.KeyguardSimPinView,int) -> -set1
    boolean -set2(com.android.keyguard.KeyguardSimPinView,boolean) -> -set2
    android.app.Dialog -wrap0(com.android.keyguard.KeyguardSimPinView,int) -> -wrap0
    java.lang.String -wrap1(com.android.keyguard.KeyguardSimPinView,int,boolean) -> -wrap1
android.support.annotation.RequiresPermission -> android.support.annotation.RequiresPermission:
    java.lang.String[] anyOf() -> anyOf
com.android.systemui.globalactions.GlobalActionsComponent -> com.android.systemui.globalactions.GlobalActionsComponent:
    com.android.internal.statusbar.IStatusBarService mBarService -> mBarService
    com.android.systemui.statusbar.policy.ExtensionController$Extension mExtension -> mExtension
    void <init>() -> <init>
    void handleShowGlobalActionsMenu() -> handleShowGlobalActionsMenu
    void handleShowShutdownUi(boolean,java.lang.String) -> handleShowShutdownUi
    void onGlobalActionsHidden() -> onGlobalActionsHidden
    void onGlobalActionsShown() -> onGlobalActionsShown
    void reboot(boolean) -> reboot
    void shutdown() -> shutdown
    void start() -> start
    com.android.systemui.plugins.GlobalActions lambda$-com_android_systemui_globalactions_GlobalActionsComponent_1864() -> lambda$-com_android_systemui_globalactions_GlobalActionsComponent_1864
com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText$1 -> com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText$1:
    com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText this$1 -> this$1
    android.view.inputmethod.InputMethodManager val$imm -> val$imm
    void <init>(com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText,android.view.inputmethod.InputMethodManager) -> <init>
    void run() -> run
com.android.systemui.doze.-$Lambda$krmSGe4g6CSLLG4RW6_aYJyrfaw$2 -> com.android.systemui.doze.-$Lambda$krmSGe4g6CSLLG4RW6_aYJyrfaw$2:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(int,java.lang.Object) -> <init>
    void $m$0(int) -> $m$0
    void accept(int) -> accept
android.support.v7.widget.AppCompatSpinner$DropDownAdapter -> android.support.v7.widget.AppCompatSpinner$DropDownAdapter:
    android.widget.ListAdapter mListAdapter -> mListAdapter
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getItemViewType(int) -> getItemViewType
    boolean isEnabled(int) -> isEnabled
    void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    boolean isEmpty() -> isEmpty
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
com.android.systemui.statusbar.NotificationGuts -> com.android.systemui.statusbar.NotificationGuts:
    int mActualHeight -> mActualHeight
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mClipBottomAmount -> mClipBottomAmount
    int mClipTopAmount -> mClipTopAmount
    com.android.systemui.statusbar.NotificationGuts$OnGutsClosedListener mClosedListener -> mClosedListener
    boolean mExposed -> mExposed
    java.lang.Runnable mFalsingCheck -> mFalsingCheck
    com.android.systemui.statusbar.NotificationGuts$GutsContent mGutsContent -> mGutsContent
    android.os.Handler mHandler -> mHandler
    com.android.systemui.statusbar.NotificationGuts$OnHeightChangedListener mHeightListener -> mHeightListener
    boolean mNeedsFalsingProtection -> mNeedsFalsingProtection
    boolean isLeavebehind() -> isLeavebehind
    boolean willBeRemoved() -> willBeRemoved
    void setClosedListener(com.android.systemui.statusbar.NotificationGuts$OnGutsClosedListener) -> setClosedListener
    void setHeightChangedListener(com.android.systemui.statusbar.NotificationGuts$OnHeightChangedListener) -> setHeightChangedListener
    void resetFalsingCheck() -> resetFalsingCheck
    void setExposed(boolean,boolean) -> setExposed
    void closeControls(boolean,boolean,int,int,boolean) -> closeControls
    com.android.systemui.statusbar.NotificationGuts$GutsContent getGutsContent() -> getGutsContent
    boolean isExposed() -> isExposed
    void onHeightChanged() -> onHeightChanged
    void closeControls(int,int,boolean,boolean) -> closeControls
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateClose(int,int) -> animateClose
    void draw(android.graphics.Canvas,android.graphics.drawable.Drawable) -> draw
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    void drawableStateChanged() -> drawableStateChanged
    void drawableStateChanged(android.graphics.drawable.Drawable) -> drawableStateChanged
    int getIntrinsicHeight() -> getIntrinsicHeight
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onDraw(android.graphics.Canvas) -> onDraw
    void onFinishInflate() -> onFinishInflate
    void setActualHeight(int) -> setActualHeight
    void setClipBottomAmount(int) -> setClipBottomAmount
    void setClipTopAmount(int) -> setClipTopAmount
    void setGutsContent(com.android.systemui.statusbar.NotificationGuts$GutsContent) -> setGutsContent
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    boolean -get0(com.android.systemui.statusbar.NotificationGuts) -> -get0
    boolean -get1(com.android.systemui.statusbar.NotificationGuts) -> -get1
com.android.systemui.stackdivider.ForcedResizableInfoActivityController$PendingTaskRecord -> com.android.systemui.stackdivider.ForcedResizableInfoActivityController$PendingTaskRecord:
    int reason -> reason
    int taskId -> taskId
    com.android.systemui.stackdivider.ForcedResizableInfoActivityController this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.ForcedResizableInfoActivityController,int,int) -> <init>
com.android.systemui.statusbar.NotificationContentView$2 -> com.android.systemui.statusbar.NotificationContentView$2:
    com.android.systemui.statusbar.NotificationContentView this$0 -> this$0
    com.android.systemui.statusbar.TransformableView val$hiddenView -> val$hiddenView
    void <init>(com.android.systemui.statusbar.NotificationContentView,com.android.systemui.statusbar.TransformableView) -> <init>
    void run() -> run
com.android.systemui.plugins.qs.QSTile$BooleanState -> com.android.systemui.plugins.qs.QSTile$BooleanState:
    int VERSION -> VERSION
    boolean value -> value
    java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    com.android.systemui.plugins.qs.QSTile$State copy() -> copy
    void <init>() -> <init>
    boolean copyTo(com.android.systemui.plugins.qs.QSTile$State) -> copyTo
android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener -> android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
com.android.systemui.statusbar.phone.-$Lambda$xi3kZulKa4Jejb86H3DhiUTLjgc -> com.android.systemui.statusbar.phone.-$Lambda$xi3kZulKa4Jejb86H3DhiUTLjgc:
    byte $id -> $id
    com.android.systemui.statusbar.phone.-$Lambda$xi3kZulKa4Jejb86H3DhiUTLjgc $INST$0 -> $INST$0
    com.android.systemui.statusbar.phone.-$Lambda$xi3kZulKa4Jejb86H3DhiUTLjgc $INST$1 -> $INST$1
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    java.lang.Object $m$0(java.lang.Object) -> $m$0
    java.lang.Object $m$1(java.lang.Object) -> $m$1
    java.lang.Object apply(java.lang.Object) -> apply
android.support.v17.leanback.widget.GuidedActionsRelativeLayout$InterceptKeyEventListener -> android.support.v17.leanback.widget.GuidedActionsRelativeLayout$InterceptKeyEventListener:
    boolean onInterceptKeyEvent(android.view.KeyEvent) -> onInterceptKeyEvent
com.android.systemui.statusbar.policy.NetworkController$IconState -> com.android.systemui.statusbar.policy.NetworkController$IconState:
    boolean visible -> visible
    int icon -> icon
    java.lang.String contentDescription -> contentDescription
    void <init>(boolean,int,int,android.content.Context) -> <init>
    void <init>(boolean,int,java.lang.String) -> <init>
android.support.v7.widget.AppCompatCheckBox -> android.support.v7.widget.AppCompatCheckBox:
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> mCompoundButtonHelper
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setButtonDrawable(int) -> setButtonDrawable
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
com.android.systemui.recents.views.-$Lambda$bDnSBDseuQaoK45kM_ChDov9g9M$1 -> com.android.systemui.recents.views.-$Lambda$bDnSBDseuQaoK45kM_ChDov9g9M$1:
    float -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(float,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatBaseImpl -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatBaseImpl:
    void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
    void <init>() -> <init>
com.android.systemui.statusbar.policy.KeyguardMonitor$Callback -> com.android.systemui.statusbar.policy.KeyguardMonitor$Callback:
    void onKeyguardShowingChanged() -> onKeyguardShowingChanged
com.android.systemui.classifier.DirectionClassifier -> com.android.systemui.classifier.DirectionClassifier:
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
com.android.systemui.pip.phone.PipMenuActivity$5 -> com.android.systemui.pip.phone.PipMenuActivity$5:
    com.android.systemui.pip.phone.PipMenuActivity this$0 -> this$0
    java.lang.Runnable val$animationFinishedRunnable -> val$animationFinishedRunnable
    void <init>(com.android.systemui.pip.phone.PipMenuActivity,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.policy.KeyButtonView$2 -> com.android.systemui.statusbar.policy.KeyButtonView$2:
    com.android.systemui.statusbar.policy.KeyButtonView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.KeyButtonView) -> <init>
    android.graphics.drawable.Drawable doInBackground(android.graphics.drawable.Icon[]) -> doInBackground
    void onPostExecute(android.graphics.drawable.Drawable) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.android.settingslib.core.lifecycle.events.OnSaveInstanceState -> com.android.settingslib.core.lifecycle.events.OnSaveInstanceState:
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.android.systemui.keyboard.KeyboardUI$KeyboardScanCallback -> com.android.systemui.keyboard.KeyboardUI$KeyboardScanCallback:
    com.android.systemui.keyboard.KeyboardUI this$0 -> this$0
    void <init>(com.android.systemui.keyboard.KeyboardUI) -> <init>
    boolean isDeviceDiscoverable(android.bluetooth.le.ScanResult) -> isDeviceDiscoverable
    void onBatchScanResults(java.util.List) -> onBatchScanResults
    void onScanFailed(int) -> onScanFailed
    void onScanResult(int,android.bluetooth.le.ScanResult) -> onScanResult
    void <init>(com.android.systemui.keyboard.KeyboardUI,com.android.systemui.keyboard.KeyboardUI$KeyboardScanCallback) -> <init>
com.android.systemui.statusbar.phone.-$Lambda$TkQS9JwI9bZlvLqtI6ZgzsrKRiU -> com.android.systemui.statusbar.phone.-$Lambda$TkQS9JwI9bZlvLqtI6ZgzsrKRiU:
    com.android.systemui.statusbar.phone.-$Lambda$TkQS9JwI9bZlvLqtI6ZgzsrKRiU $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.appcompat.R$dimen -> android.support.v7.appcompat.R$dimen:
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_cascading_menus_min_smallest_width -> abc_cascading_menus_min_smallest_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_search_view_preferred_height -> abc_search_view_preferred_height
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int tooltip_precise_anchor_extra_offset -> tooltip_precise_anchor_extra_offset
    int tooltip_precise_anchor_threshold -> tooltip_precise_anchor_threshold
    int tooltip_y_offset_non_touch -> tooltip_y_offset_non_touch
    int tooltip_y_offset_touch -> tooltip_y_offset_touch
    void <init>() -> <init>
com.android.systemui.recents.misc.Utilities$1 -> com.android.systemui.recents.misc.Utilities$1:
    void <init>(java.lang.String) -> <init>
    java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    void setValue(android.graphics.drawable.Drawable,int) -> setValue
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.statusbar.notification.NotificationIconDozeHelper -> com.android.systemui.statusbar.notification.NotificationIconDozeHelper:
    int mColor -> mColor
    android.graphics.PorterDuffColorFilter mImageColorFilter -> mImageColorFilter
    int mImageDarkAlpha -> mImageDarkAlpha
    int mImageDarkColor -> mImageDarkColor
    void setImageDark(android.widget.ImageView,boolean,boolean,long,boolean) -> setImageDark
    void <init>(android.content.Context) -> <init>
    void setColor(int) -> setColor
    void fadeImageAlpha(android.widget.ImageView,boolean,long) -> fadeImageAlpha
    void fadeImageColorFilter(android.widget.ImageView,boolean,long) -> fadeImageColorFilter
    void updateImageAlpha(android.widget.ImageView,boolean) -> updateImageAlpha
    void updateImageColorFilter(android.widget.ImageView,boolean) -> updateImageColorFilter
    void updateImageColorFilter(android.widget.ImageView,float) -> updateImageColorFilter
    void lambda$-com_android_systemui_statusbar_notification_NotificationIconDozeHelper_2231(android.widget.ImageView,android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_notification_NotificationIconDozeHelper_2231
    void lambda$-com_android_systemui_statusbar_notification_NotificationIconDozeHelper_2497(android.widget.ImageView,android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_notification_NotificationIconDozeHelper_2497
android.support.v7.widget.GridLayoutManager -> android.support.v7.widget.GridLayoutManager:
    android.view.View[] mSet -> mSet
    android.graphics.Rect mDecorInsets -> mDecorInsets
    int[] mCachedBorders -> mCachedBorders
    boolean mPendingSpanCountChange -> mPendingSpanCountChange
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> mPreLayoutSpanIndexCache
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> mSpanSizeLookup
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> mPreLayoutSpanSizeCache
    int mSpanCount -> mSpanCount
    int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanIndex
    void <init>(android.content.Context,int) -> <init>
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    void ensureViewSet() -> ensureViewSet
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    void setSpanSizeLookup(android.support.v7.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void calculateItemBorders(int) -> calculateItemBorders
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    void setSpanCount(int) -> setSpanCount
    int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanSize
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    void guessMeasurement(float,int) -> guessMeasurement
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void ensureAnchorIsInCorrectSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    void updateMeasurements() -> updateMeasurements
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanGroupIndex
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    void measureChild(android.view.View,int,boolean) -> measureChild
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
com.android.systemui.BatteryMeterView$1 -> com.android.systemui.BatteryMeterView$1:
    com.android.systemui.BatteryMeterView this$0 -> this$0
    void <init>(com.android.systemui.BatteryMeterView,android.content.Context) -> <init>
    void onUserSwitched(int) -> onUserSwitched
com.android.systemui.assist.AssistManager$3 -> com.android.systemui.assist.AssistManager$3:
    com.android.systemui.assist.AssistManager this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistManager) -> <init>
    void onVoiceSessionHidden() -> onVoiceSessionHidden
    void onVoiceSessionShown() -> onVoiceSessionShown
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    android.support.v4.media.session.MediaControllerCompat$TransportControls mTransportControls -> mTransportControls
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    void <init>(android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
com.android.systemui.classifier.AnglesVarianceEvaluator -> com.android.systemui.classifier.AnglesVarianceEvaluator:
    void <init>() -> <init>
    float evaluate(float) -> evaluate
com.android.systemui.qs.AutoSizingList$2 -> com.android.systemui.qs.AutoSizingList$2:
    com.android.systemui.qs.AutoSizingList this$0 -> this$0
    void <init>(com.android.systemui.qs.AutoSizingList) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
com.android.systemui.statusbar.policy.BluetoothControllerImpl$ActuallyCachedState -> com.android.systemui.statusbar.policy.BluetoothControllerImpl$ActuallyCachedState:
    int mBondState -> mBondState
    java.lang.ref.WeakReference mDevice -> mDevice
    int mMaxConnectionState -> mMaxConnectionState
    android.os.Handler mUiHandler -> mUiHandler
    void <init>(com.android.settingslib.bluetooth.CachedBluetoothDevice,android.os.Handler) -> <init>
    void run() -> run
    int -get0(com.android.systemui.statusbar.policy.BluetoothControllerImpl$ActuallyCachedState) -> -get0
    void <init>(com.android.settingslib.bluetooth.CachedBluetoothDevice,android.os.Handler,com.android.systemui.statusbar.policy.BluetoothControllerImpl$ActuallyCachedState) -> <init>
com.android.systemui.pip.phone.-$Lambda$M-ZooI5stUmj1n2x6aQGdCZpBH4$1 -> com.android.systemui.pip.phone.-$Lambda$M-ZooI5stUmj1n2x6aQGdCZpBH4$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
android.support.v7.widget.ActivityChooserModel$HistoricalRecord -> android.support.v7.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <init>(java.lang.String,long,float) -> <init>
    void <init>(android.content.ComponentName,long,float) -> <init>
com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted -> com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted:
    boolean animated -> animated
    void <init>(boolean) -> <init>
android.support.v7.app.AlertController$AlertParams$1 -> android.support.v7.app.AlertController$AlertParams$1:
    android.support.v7.app.AlertController$AlertParams this$1 -> this$1
    android.support.v7.app.AlertController$RecycleListView val$listView -> val$listView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],android.support.v7.app.AlertController$RecycleListView) -> <init>
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    void <init>() -> <init>
android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState -> android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState:
    android.view.View shownPanelView -> shownPanelView
    android.view.View createdPanelView -> createdPanelView
    boolean refreshMenuContent -> refreshMenuContent
    boolean isPrepared -> isPrepared
    android.view.ViewGroup decorView -> decorView
    android.content.Context listPresenterContext -> listPresenterContext
    android.os.Bundle frozenActionViewState -> frozenActionViewState
    android.support.v7.view.menu.ListMenuPresenter listMenuPresenter -> listMenuPresenter
    int windowAnimations -> windowAnimations
    int featureId -> featureId
    int gravity -> gravity
    boolean isHandled -> isHandled
    boolean isOpen -> isOpen
    int y -> y
    int x -> x
    boolean refreshDecorView -> refreshDecorView
    android.support.v7.view.menu.MenuBuilder menu -> menu
    int background -> background
    boolean qwertyMode -> qwertyMode
    android.support.v7.view.menu.MenuView getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback) -> getListMenuView
    void setStyle(android.content.Context) -> setStyle
    void <init>(int) -> <init>
    void setMenu(android.support.v7.view.menu.MenuBuilder) -> setMenu
    boolean hasPanelItems() -> hasPanelItems
com.android.systemui.statusbar.policy.SignalController$IconGroup -> com.android.systemui.statusbar.policy.SignalController$IconGroup:
    int mSbDiscState -> mSbDiscState
    int[] mContentDesc -> mContentDesc
    int mDiscContentDesc -> mDiscContentDesc
    java.lang.String mName -> mName
    int mQsDiscState -> mQsDiscState
    int[][] mQsIcons -> mQsIcons
    int mQsNullState -> mQsNullState
    int[][] mSbIcons -> mSbIcons
    int mSbNullState -> mSbNullState
    void <init>(java.lang.String,int[][],int[][],int[],int,int,int,int,int) -> <init>
    java.lang.String toString() -> toString
com.android.systemui.qs.customize.TileAdapter$5 -> com.android.systemui.qs.customize.TileAdapter$5:
    com.android.systemui.qs.customize.TileAdapter this$0 -> this$0
    com.android.systemui.qs.customize.TileAdapter$Holder val$holder -> val$holder
    void <init>(com.android.systemui.qs.customize.TileAdapter,com.android.systemui.qs.customize.TileAdapter$Holder) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v14.preference.ListPreferenceDialogFragment$1 -> android.support.v14.preference.ListPreferenceDialogFragment$1:
    android.support.v14.preference.ListPreferenceDialogFragment this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(android.support.v14.preference.ListPreferenceDialogFragment) -> <init>
android.support.v7.app.MediaRouteControllerDialog$VolumeChangeListener$1 -> android.support.v7.app.MediaRouteControllerDialog$VolumeChangeListener$1:
    android.support.v7.app.MediaRouteControllerDialog$VolumeChangeListener this$1 -> this$1
    void <init>(android.support.v7.app.MediaRouteControllerDialog$VolumeChangeListener) -> <init>
    void run() -> run
android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi23Impl -> android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi23Impl:
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void <init>() -> <init>
android.support.v7.app.MediaRouteControllerDialog$FetchArtTask -> android.support.v7.app.MediaRouteControllerDialog$FetchArtTask:
    android.net.Uri mIconUri -> mIconUri
    int mBackgroundColor -> mBackgroundColor
    android.graphics.Bitmap mIconBitmap -> mIconBitmap
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    long mStartTimeMillis -> mStartTimeMillis
    android.net.Uri getIconUri() -> getIconUri
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    java.io.InputStream openInputStreamByScheme(android.net.Uri) -> openInputStreamByScheme
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
    android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
com.android.systemui.statusbar.NotificationMenuRow$NotificationMenuItem -> com.android.systemui.statusbar.NotificationMenuRow$NotificationMenuItem:
    java.lang.String mContentDescription -> mContentDescription
    com.android.systemui.statusbar.NotificationGuts$GutsContent mGutsContent -> mGutsContent
    android.view.View mMenuView -> mMenuView
    void <init>(android.content.Context,java.lang.String,com.android.systemui.statusbar.NotificationGuts$GutsContent,int) -> <init>
    java.lang.String getContentDescription() -> getContentDescription
    android.view.View getGutsView() -> getGutsView
    android.view.View getMenuView() -> getMenuView
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    android.support.v4.widget.CircleImageView this$0 -> this$0
    android.graphics.Paint mShadowPaint -> mShadowPaint
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    void <init>(android.support.v4.widget.CircleImageView,int) -> <init>
    void onResize(float,float) -> onResize
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    void updateRadialGradient(int) -> updateRadialGradient
android.support.v4.provider.FontsContractCompat$FontInfo -> android.support.v4.provider.FontsContractCompat$FontInfo:
    int mWeight -> mWeight
    int mResultCode -> mResultCode
    android.net.Uri mUri -> mUri
    int mTtcIndex -> mTtcIndex
    boolean mItalic -> mItalic
    int getTtcIndex() -> getTtcIndex
    boolean isItalic() -> isItalic
    void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    int getWeight() -> getWeight
    int getResultCode() -> getResultCode
    android.net.Uri getUri() -> getUri
android.support.v7.view.menu.MenuItemWrapperJB -> android.support.v7.view.menu.MenuItemWrapperJB:
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
android.support.v17.leanback.widget.SearchEditText -> android.support.v17.leanback.widget.SearchEditText:
    java.lang.String TAG -> TAG
    android.support.v17.leanback.widget.SearchEditText$OnKeyboardDismissListener mKeyboardDismissListener -> mKeyboardDismissListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setOnKeyboardDismissListener(android.support.v17.leanback.widget.SearchEditText$OnKeyboardDismissListener) -> setOnKeyboardDismissListener
    void updateRecognizedText(java.lang.String,java.lang.String) -> updateRecognizedText
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void <init>(android.content.Context) -> <init>
    void <clinit>() -> <clinit>
    void reset() -> reset
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
android.support.v7.preference.TwoStatePreference -> android.support.v7.preference.TwoStatePreference:
    java.lang.CharSequence mSummaryOff -> mSummaryOff
    java.lang.CharSequence mSummaryOn -> mSummaryOn
    boolean mChecked -> mChecked
    boolean mCheckedSet -> mCheckedSet
    boolean mDisableDependentsState -> mDisableDependentsState
    boolean shouldDisableDependents() -> shouldDisableDependents
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setSummaryOff(java.lang.CharSequence) -> setSummaryOff
    void onClick() -> onClick
    boolean isChecked() -> isChecked
    void setDisableDependentsState(boolean) -> setDisableDependentsState
    void syncSummaryView(android.view.View) -> syncSummaryView
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setSummaryOn(java.lang.CharSequence) -> setSummaryOn
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void <init>(android.content.Context) -> <init>
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setChecked(boolean) -> setChecked
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void syncSummaryView(android.support.v7.preference.PreferenceViewHolder) -> syncSummaryView
com.android.systemui.pip.tv.PipNotification$2 -> com.android.systemui.pip.tv.PipNotification$2:
    com.android.systemui.pip.tv.PipNotification this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipNotification) -> <init>
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
com.android.systemui.pip.tv.PipNotification$4 -> com.android.systemui.pip.tv.PipNotification$4:
    com.android.systemui.pip.tv.PipNotification this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipNotification) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v17.leanback.transition.SlideKitkat$CalculateSlideHorizontal -> android.support.v17.leanback.transition.SlideKitkat$CalculateSlideHorizontal:
    android.util.Property getProperty() -> getProperty
    float getHere(android.view.View) -> getHere
    void <init>() -> <init>
android.support.v17.leanback.widget.SearchBar -> android.support.v17.leanback.widget.SearchBar:
    int mTextHintColorSpeechMode -> mTextHintColorSpeechMode
    android.os.Handler mHandler -> mHandler
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    boolean mRecognizing -> mRecognizing
    int mBackgroundSpeechAlpha -> mBackgroundSpeechAlpha
    int mTextHintColor -> mTextHintColor
    java.lang.String mSearchQuery -> mSearchQuery
    android.support.v17.leanback.widget.SearchBar$SearchBarPermissionListener mPermissionListener -> mPermissionListener
    android.util.SparseIntArray mSoundMap -> mSoundMap
    android.widget.ImageView mBadgeView -> mBadgeView
    int mTextColor -> mTextColor
    java.lang.String mHint -> mHint
    android.support.v17.leanback.widget.SearchEditText mSearchTextEditor -> mSearchTextEditor
    int mBackgroundAlpha -> mBackgroundAlpha
    android.content.Context mContext -> mContext
    android.graphics.drawable.Drawable mBarBackground -> mBarBackground
    android.media.SoundPool mSoundPool -> mSoundPool
    int mTextColorSpeechMode -> mTextColorSpeechMode
    android.support.v17.leanback.widget.SpeechRecognitionCallback mSpeechRecognitionCallback -> mSpeechRecognitionCallback
    android.support.v17.leanback.widget.SearchBar$SearchBarListener mSearchBarListener -> mSearchBarListener
    android.view.inputmethod.InputMethodManager mInputMethodManager -> mInputMethodManager
    boolean mListening -> mListening
    android.support.v17.leanback.widget.SpeechOrbView mSpeechOrbView -> mSpeechOrbView
    android.speech.SpeechRecognizer mSpeechRecognizer -> mSpeechRecognizer
    android.graphics.drawable.Drawable mBadgeDrawable -> mBadgeDrawable
    boolean mAutoStartRecognition -> mAutoStartRecognition
    int mBarHeight -> mBarHeight
    java.lang.String TAG -> TAG
    java.lang.String mTitle -> mTitle
    android.media.AudioManager mAudioManager -> mAudioManager
    void onAttachedToWindow() -> onAttachedToWindow
    void playSearchSuccess() -> playSearchSuccess
    void setSearchQueryInternal(java.lang.String) -> setSearchQueryInternal
    void toggleRecognition() -> toggleRecognition
    void play(int) -> play
    void showNativeKeyboard() -> showNativeKeyboard
    void updateHint() -> updateHint
    void playSearchOpen() -> playSearchOpen
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void updateUi(boolean) -> updateUi
    boolean isVoiceMode() -> isVoiceMode
    void onFinishInflate() -> onFinishInflate
    void loadSounds(android.content.Context) -> loadSounds
    void setNextFocusDownId(int) -> setNextFocusDownId
    void hideNativeKeyboard() -> hideNativeKeyboard
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void playSearchFailure() -> playSearchFailure
    void submitQuery() -> submitQuery
    void stopRecognition() -> stopRecognition
    void <init>(android.content.Context) -> <init>
    void <clinit>() -> <clinit>
    void startRecognition() -> startRecognition
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.systemui.statusbar.phone.StatusBar$16 -> com.android.systemui.statusbar.phone.StatusBar$16:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onScreenTurnedOff() -> onScreenTurnedOff
    void onScreenTurnedOn() -> onScreenTurnedOn
    void onScreenTurningOn() -> onScreenTurningOn
com.android.systemui.qs.QSDetailItems -> com.android.systemui.qs.QSDetailItems:
    boolean DEBUG -> DEBUG
    com.android.systemui.qs.QSDetailItems$Adapter mAdapter -> mAdapter
    com.android.systemui.qs.QSDetailItems$Callback mCallback -> mCallback
    android.content.Context mContext -> mContext
    android.view.View mEmpty -> mEmpty
    android.widget.ImageView mEmptyIcon -> mEmptyIcon
    android.widget.TextView mEmptyText -> mEmptyText
    com.android.systemui.qs.QSDetailItems$H mHandler -> mHandler
    com.android.systemui.qs.AutoSizingList mItemList -> mItemList
    com.android.systemui.qs.QSDetailItems$Item[] mItems -> mItems
    boolean mItemsVisible -> mItemsVisible
    int mQsDetailIconOverlaySize -> mQsDetailIconOverlaySize
    java.lang.String mTag -> mTag
    com.android.systemui.qs.QSDetailItems convertOrInflate(android.content.Context,android.view.View,android.view.ViewGroup) -> convertOrInflate
    void setTagSuffix(java.lang.String) -> setTagSuffix
    void setEmptyState(int,int) -> setEmptyState
    void setCallback(com.android.systemui.qs.QSDetailItems$Callback) -> setCallback
    void setItems(com.android.systemui.qs.QSDetailItems$Item[]) -> setItems
    void setItemsVisible(boolean) -> setItemsVisible
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void handleSetCallback(com.android.systemui.qs.QSDetailItems$Callback) -> handleSetCallback
    void handleSetItems(com.android.systemui.qs.QSDetailItems$Item[]) -> handleSetItems
    void handleSetItemsVisible(boolean) -> handleSetItemsVisible
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_qs_QSDetailItems_3811(int,int) -> lambda$-com_android_systemui_qs_QSDetailItems_3811
    com.android.systemui.qs.QSDetailItems$Callback -get0(com.android.systemui.qs.QSDetailItems) -> -get0
    android.content.Context -get1(com.android.systemui.qs.QSDetailItems) -> -get1
    com.android.systemui.qs.QSDetailItems$Item[] -get2(com.android.systemui.qs.QSDetailItems) -> -get2
    boolean -get3(com.android.systemui.qs.QSDetailItems) -> -get3
    int -get4(com.android.systemui.qs.QSDetailItems) -> -get4
    void -wrap0(com.android.systemui.qs.QSDetailItems,com.android.systemui.qs.QSDetailItems$Callback) -> -wrap0
    void -wrap1(com.android.systemui.qs.QSDetailItems,boolean) -> -wrap1
    void -wrap2(com.android.systemui.qs.QSDetailItems,com.android.systemui.qs.QSDetailItems$Item[]) -> -wrap2
android.support.v7.app.MediaRouteControllerDialog$4 -> android.support.v7.app.MediaRouteControllerDialog$4:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase -> android.support.v4.media.session.MediaControllerCompat$TransportControlsBase:
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    void <init>(android.support.v4.media.session.IMediaSession) -> <init>
    void play() -> play
    void pause() -> pause
    void stop() -> stop
android.support.annotation.CallSuper -> android.support.annotation.CallSuper:
com.android.systemui.statusbar.phone.NavigationBarFragment$MagnificationContentObserver -> com.android.systemui.statusbar.phone.NavigationBarFragment$MagnificationContentObserver:
    com.android.systemui.statusbar.phone.NavigationBarFragment this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NavigationBarFragment,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.systemui.fragments.-$Lambda$Orft6iZeSCGwvUDlDavecgztrvw -> com.android.systemui.fragments.-$Lambda$Orft6iZeSCGwvUDlDavecgztrvw:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.mediarouter.R$styleable -> android.support.v7.mediarouter.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int[] ActionMenuItemView -> ActionMenuItemView
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int[] ActivityChooserView -> ActivityChooserView
    int[] AlertDialog -> AlertDialog
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int[] AppCompatTextView -> AppCompatTextView
    int[] AppCompatTheme -> AppCompatTheme
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] BackgroundStyle -> BackgroundStyle
    int[] BatteryMeterView -> BatteryMeterView
    int[] ButtonBarLayout -> ButtonBarLayout
    int[] CarrierText -> CarrierText
    int[] CheckBoxPreference -> CheckBoxPreference
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int[] CompoundButton -> CompoundButton
    int[] DateView -> DateView
    int[] DeadZone -> DeadZone
    int[] DialogPreference -> DialogPreference
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyButtonView -> KeyButtonView
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int[] ListPopupWindow -> ListPopupWindow
    int[] ListPreference -> ListPreference
    int[] MediaRouteButton -> MediaRouteButton
    int MediaRouteButton_android_minHeight -> MediaRouteButton_android_minHeight
    int MediaRouteButton_android_minWidth -> MediaRouteButton_android_minWidth
    int MediaRouteButton_externalRouteEnabledDrawable -> MediaRouteButton_externalRouteEnabledDrawable
    int MediaRouteButton_mediaRouteButtonTint -> MediaRouteButton_mediaRouteButtonTint
    int[] MenuGroup -> MenuGroup
    int[] MenuItem -> MenuItem
    int[] MenuView -> MenuView
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] NumPadKey -> NumPadKey
    int[] PagingIndicator -> PagingIndicator
    int[] PasswordTextView -> PasswordTextView
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int[] PreferenceGroup -> PreferenceGroup
    int[] PreferenceImageView -> PreferenceImageView
    int[] PreferenceTheme -> PreferenceTheme
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int[] RecyclerView -> RecyclerView
    int[] RestrictedPreference -> RestrictedPreference
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int[] SearchView -> SearchView
    int[] SeekBarPreference -> SeekBarPreference
    int[] Spinner -> Spinner
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int[] TextAppearance -> TextAppearance
    int[] ToggleSliderView -> ToggleSliderView
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] UserDetailItemView -> UserDetailItemView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int[] ViewStubCompat -> ViewStubCompat
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int[] lbBaseGridView -> lbBaseGridView
    int[] lbDatePicker -> lbDatePicker
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int[] lbImageCardView -> lbImageCardView
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int[] lbSearchOrbView -> lbSearchOrbView
    int[] lbSlide -> lbSlide
    int[] lbTimePicker -> lbTimePicker
    int[] lbVerticalGridView -> lbVerticalGridView
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.recents.events.ui.DeleteTaskDataEvent -> com.android.systemui.recents.events.ui.DeleteTaskDataEvent:
    com.android.systemui.recents.model.Task task -> task
    void <init>(com.android.systemui.recents.model.Task) -> <init>
android.support.v17.leanback.widget.ResizingTextView -> android.support.v17.leanback.widget.ResizingTextView:
    int mDefaultTextSize -> mDefaultTextSize
    int mResizedPaddingAdjustmentTop -> mResizedPaddingAdjustmentTop
    float mDefaultLineSpacingExtra -> mDefaultLineSpacingExtra
    int mResizedPaddingAdjustmentBottom -> mResizedPaddingAdjustmentBottom
    int mDefaultPaddingBottom -> mDefaultPaddingBottom
    int mResizedTextSize -> mResizedTextSize
    boolean mIsResized -> mIsResized
    int mDefaultPaddingTop -> mDefaultPaddingTop
    boolean mMaintainLineSpacing -> mMaintainLineSpacing
    int mTriggerConditions -> mTriggerConditions
    boolean mDefaultsInitialized -> mDefaultsInitialized
    void onMeasure(int,int) -> onMeasure
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setPaddingTopAndBottom(int,int) -> setPaddingTopAndBottom
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatApi23Impl -> android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatApi23Impl:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
com.android.systemui.statusbar.phone.BounceInterpolator -> com.android.systemui.statusbar.phone.BounceInterpolator:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
com.android.systemui.tuner.NavBarTuner -> com.android.systemui.tuner.NavBarTuner:
    int[][] ICONS -> ICONS
    android.os.Handler mHandler -> mHandler
    java.util.ArrayList mTunables -> mTunables
    void <init>() -> <init>
    void addTunable(com.android.systemui.tuner.TunerService$Tunable,java.lang.String[]) -> addTunable
    void bindButton(java.lang.String,java.lang.String,java.lang.String) -> bindButton
    void bindLayout(android.support.v7.preference.ListPreference) -> bindLayout
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreate(android.os.Bundle) -> onCreate
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    void onDestroy() -> onDestroy
    void setValue(java.lang.String,android.support.v7.preference.ListPreference,android.support.v7.preference.Preference,android.support.v7.preference.ListPreference) -> setValue
    void setupIcons(android.support.v7.preference.ListPreference) -> setupIcons
    void updateSummary(android.support.v7.preference.ListPreference) -> updateSummary
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_tuner_NavBarTuner_4724(com.android.systemui.tuner.TunerService$Tunable) -> lambda$-com_android_systemui_tuner_NavBarTuner_4724
    void lambda$-com_android_systemui_tuner_NavBarTuner_5038(android.support.v7.preference.ListPreference,java.lang.String,java.lang.String) -> lambda$-com_android_systemui_tuner_NavBarTuner_5038
    void lambda$-com_android_systemui_tuner_NavBarTuner_5071(java.lang.String,android.support.v7.preference.ListPreference) -> lambda$-com_android_systemui_tuner_NavBarTuner_5071
    boolean lambda$-com_android_systemui_tuner_NavBarTuner_5307(android.support.v7.preference.Preference,java.lang.Object) -> lambda$-com_android_systemui_tuner_NavBarTuner_5307
    void lambda$-com_android_systemui_tuner_NavBarTuner_5887(java.lang.String,android.support.v7.preference.ListPreference,android.support.v7.preference.ListPreference,android.support.v7.preference.Preference,java.lang.String,java.lang.String) -> lambda$-com_android_systemui_tuner_NavBarTuner_5887
    void lambda$-com_android_systemui_tuner_NavBarTuner_5920(java.lang.String,java.lang.String,android.support.v7.preference.ListPreference,android.support.v7.preference.ListPreference,android.support.v7.preference.Preference) -> lambda$-com_android_systemui_tuner_NavBarTuner_5920
    boolean lambda$-com_android_systemui_tuner_NavBarTuner_6689(java.lang.String,android.support.v7.preference.ListPreference,android.support.v7.preference.Preference,android.support.v7.preference.ListPreference,android.support.v7.preference.Preference,java.lang.Object) -> lambda$-com_android_systemui_tuner_NavBarTuner_6689
    void lambda$-com_android_systemui_tuner_NavBarTuner_6743(java.lang.String,android.support.v7.preference.ListPreference,android.support.v7.preference.Preference,android.support.v7.preference.ListPreference) -> lambda$-com_android_systemui_tuner_NavBarTuner_6743
    boolean lambda$-com_android_systemui_tuner_NavBarTuner_7049(android.support.v7.preference.Preference,java.lang.String,android.support.v7.preference.ListPreference,android.support.v7.preference.ListPreference,android.support.v7.preference.Preference) -> lambda$-com_android_systemui_tuner_NavBarTuner_7049
    void lambda$-com_android_systemui_tuner_NavBarTuner_7397(android.widget.EditText,android.support.v7.preference.Preference,java.lang.String,android.support.v7.preference.ListPreference,android.support.v7.preference.ListPreference,android.content.DialogInterface,int) -> lambda$-com_android_systemui_tuner_NavBarTuner_7397
com.android.systemui.stackdivider.ForcedResizableInfoActivityController -> com.android.systemui.stackdivider.ForcedResizableInfoActivityController:
    android.content.Context mContext -> mContext
    boolean mDividerDraging -> mDividerDraging
    android.os.Handler mHandler -> mHandler
    android.util.ArraySet mPackagesShownInSession -> mPackagesShownInSession
    android.util.ArraySet mPendingTasks -> mPendingTasks
    java.lang.Runnable mTimeoutRunnable -> mTimeoutRunnable
    void <init>(android.content.Context) -> <init>
    void activityDismissingDockedStack() -> activityDismissingDockedStack
    void activityForcedResizable(java.lang.String,int,int) -> activityForcedResizable
    void activityLaunchOnSecondaryDisplayFailed() -> activityLaunchOnSecondaryDisplayFailed
    boolean debounce(java.lang.String) -> debounce
    void notifyDockedStackExistsChanged(boolean) -> notifyDockedStackExistsChanged
    void onBusEvent(com.android.systemui.recents.events.activity.AppTransitionFinishedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.stackdivider.events.StartedDragingEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.stackdivider.events.StoppedDragingEvent) -> onBusEvent
    void postTimeout() -> postTimeout
    void showPending() -> showPending
    void -wrap0(com.android.systemui.stackdivider.ForcedResizableInfoActivityController) -> -wrap0
    void -wrap1(com.android.systemui.stackdivider.ForcedResizableInfoActivityController,java.lang.String,int,int) -> -wrap1
    void -wrap2(com.android.systemui.stackdivider.ForcedResizableInfoActivityController) -> -wrap2
    void -wrap3(com.android.systemui.stackdivider.ForcedResizableInfoActivityController) -> -wrap3
android.support.v7.preference.PreferenceManager$OnNavigateToScreenListener -> android.support.v7.preference.PreferenceManager$OnNavigateToScreenListener:
    void onNavigateToScreen(android.support.v7.preference.PreferenceScreen) -> onNavigateToScreen
com.android.systemui.assist.AssistOrbContainer$2 -> com.android.systemui.assist.AssistOrbContainer$2:
    com.android.systemui.assist.AssistOrbContainer this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistOrbContainer) -> <init>
    void run() -> run
android.support.v17.leanback.R$style -> android.support.v17.leanback.R$style:
    int TextAppearance_Leanback_SearchTextEdit -> TextAppearance_Leanback_SearchTextEdit
    int Widget_Leanback_ImageCardView -> Widget_Leanback_ImageCardView
    void <init>() -> <init>
android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback -> android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback:
    android.support.v7.app.ToolbarActionBar this$0 -> this$0
    boolean mClosingActionMenu -> mClosingActionMenu
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.android.systemui.statusbar.phone.StatusBarWindowManager$OtherwisedCollapsedListener -> com.android.systemui.statusbar.phone.StatusBarWindowManager$OtherwisedCollapsedListener:
    void setWouldOtherwiseCollapse(boolean) -> setWouldOtherwiseCollapse
com.android.settingslib.widget.AnimatedImageView -> com.android.settingslib.widget.AnimatedImageView:
    boolean mAnimating -> mAnimating
    android.graphics.drawable.AnimatedRotateDrawable mDrawable -> mDrawable
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void updateDrawable() -> updateDrawable
    void setImageResource(int) -> setImageResource
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateAnimating() -> updateAnimating
com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl$FeatureItem -> com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl$FeatureItem:
    java.lang.String mFeature -> mFeature
    java.util.function.Supplier mSupplier -> mSupplier
    com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl this$1 -> this$1
    void <init>(com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl,java.lang.String,java.util.function.Supplier) -> <init>
    void destroy() -> destroy
    java.lang.Object get() -> get
    int sortOrder() -> sortOrder
com.android.systemui.statusbar.NotificationInfo$OnAppSettingsClickListener -> com.android.systemui.statusbar.NotificationInfo$OnAppSettingsClickListener:
    void onClick(android.view.View,android.content.Intent) -> onClick
com.android.systemui.plugins.PluginListener -> com.android.systemui.plugins.PluginListener:
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
com.android.systemui.tuner.DemoModeFragment -> com.android.systemui.tuner.DemoModeFragment:
    java.lang.String[] STATUS_ICONS -> STATUS_ICONS
    android.database.ContentObserver mDemoModeObserver -> mDemoModeObserver
    android.support.v14.preference.SwitchPreference mEnabledSwitch -> mEnabledSwitch
    android.support.v14.preference.SwitchPreference mOnSwitch -> mOnSwitch
    void <init>() -> <init>
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    void onDestroy() -> onDestroy
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPause() -> onPause
    boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object) -> onPreferenceChange
    void onResume() -> onResume
    void setGlobal(java.lang.String,int) -> setGlobal
    void startDemoMode() -> startDemoMode
    void stopDemoMode() -> stopDemoMode
    void updateDemoModeEnabled() -> updateDemoModeEnabled
    void updateDemoModeOn() -> updateDemoModeOn
    void <clinit>() -> <clinit>
    void -wrap0(com.android.systemui.tuner.DemoModeFragment) -> -wrap0
    void -wrap1(com.android.systemui.tuner.DemoModeFragment) -> -wrap1
android.support.v17.leanback.widget.OnChildSelectedListener -> android.support.v17.leanback.widget.OnChildSelectedListener:
    void onChildSelected(android.view.ViewGroup,android.view.View,int,long) -> onChildSelected
android.support.v17.leanback.widget.ForegroundHelper -> android.support.v17.leanback.widget.ForegroundHelper:
    void <init>() -> <init>
    void setForeground(android.view.View,android.graphics.drawable.Drawable) -> setForeground
com.android.systemui.statusbar.phone.ExpandableIndicator -> com.android.systemui.statusbar.phone.ExpandableIndicator:
    boolean mExpanded -> mExpanded
    boolean mIsDefaultDirection -> mIsDefaultDirection
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.String getContentDescription(boolean) -> getContentDescription
    int getDrawableResourceId(boolean) -> getDrawableResourceId
    void onFinishInflate() -> onFinishInflate
    void setExpanded(boolean) -> setExpanded
    void updateIndicatorDrawable() -> updateIndicatorDrawable
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$5 -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$5:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.String,java.lang.String) -> $m$0
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
android.support.v17.leanback.widget.SeekBar -> android.support.v17.leanback.widget.SeekBar:
    int mKnobx -> mKnobx
    android.graphics.Paint mSecondProgressPaint -> mSecondProgressPaint
    android.graphics.RectF mBackgroundRect -> mBackgroundRect
    int mBarHeight -> mBarHeight
    android.graphics.Paint mProgressPaint -> mProgressPaint
    int mSecondProgress -> mSecondProgress
    int mMax -> mMax
    int mProgress -> mProgress
    android.graphics.RectF mProgressRect -> mProgressRect
    android.graphics.RectF mSecondProgressRect -> mSecondProgressRect
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    int mActiveBarHeight -> mActiveBarHeight
    android.support.v17.leanback.widget.SeekBar$AccessibilitySeekListener mAccessibilitySeekListener -> mAccessibilitySeekListener
    int mActiveRadius -> mActiveRadius
    android.graphics.Paint mKnobPaint -> mKnobPaint
    void calculate() -> calculate
    java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
android.support.v7.app.AlertController$4 -> android.support.v7.app.AlertController$4:
    android.view.View val$top -> val$top
    android.support.v7.app.AlertController this$0 -> this$0
    android.view.View val$bottom -> val$bottom
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.android.systemui.statusbar.phone.NotificationIconAreaController -> com.android.systemui.statusbar.phone.NotificationIconAreaController:
    android.content.Context mContext -> mContext
    int mIconHPadding -> mIconHPadding
    int mIconSize -> mIconSize
    int mIconTint -> mIconTint
    com.android.internal.util.NotificationColorUtil mNotificationColorUtil -> mNotificationColorUtil
    android.view.View mNotificationIconArea -> mNotificationIconArea
    com.android.systemui.statusbar.phone.NotificationIconContainer mNotificationIcons -> mNotificationIcons
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mNotificationScrollLayout -> mNotificationScrollLayout
    com.android.systemui.statusbar.phone.NotificationIconContainer mShelfIcons -> mShelfIcons
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    android.graphics.Rect mTintArea -> mTintArea
    void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void applyNotificationIconsTint() -> applyNotificationIconsTint
    android.widget.FrameLayout$LayoutParams generateIconLayoutParams() -> generateIconLayoutParams
    int getHeight() -> getHeight
    android.view.View getNotificationInnerAreaView() -> getNotificationInnerAreaView
    android.view.View inflateIconArea(android.view.LayoutInflater) -> inflateIconArea
    void initializeNotificationAreaViews(android.content.Context) -> initializeNotificationAreaViews
    void onDarkChanged(android.graphics.Rect,float,int) -> onDarkChanged
    void onDensityOrFontScaleChanged(android.content.Context) -> onDensityOrFontScaleChanged
    void reloadDimens(android.content.Context) -> reloadDimens
    void setupShelf(com.android.systemui.statusbar.NotificationShelf) -> setupShelf
    boolean shouldShowNotificationIcon(com.android.systemui.statusbar.NotificationData$Entry,com.android.systemui.statusbar.NotificationData,boolean) -> shouldShowNotificationIcon
    void updateIconsForLayout(com.android.systemui.statusbar.NotificationData,java.util.function.Function,com.android.systemui.statusbar.phone.NotificationIconContainer,boolean) -> updateIconsForLayout
    void updateNotificationIcons(com.android.systemui.statusbar.NotificationData) -> updateNotificationIcons
    void updateTintForIcon(com.android.systemui.statusbar.StatusBarIconView) -> updateTintForIcon
    com.android.systemui.statusbar.StatusBarIconView lambda$-com_android_systemui_statusbar_phone_NotificationIconAreaController_5478(com.android.systemui.statusbar.NotificationData$Entry) -> lambda$-com_android_systemui_statusbar_phone_NotificationIconAreaController_5478
    com.android.systemui.statusbar.StatusBarIconView lambda$-com_android_systemui_statusbar_phone_NotificationIconAreaController_5608(com.android.systemui.statusbar.NotificationData$Entry) -> lambda$-com_android_systemui_statusbar_phone_NotificationIconAreaController_5608
    void lambda$-com_android_systemui_statusbar_phone_NotificationIconAreaController_11125(com.android.systemui.statusbar.StatusBarIconView) -> lambda$-com_android_systemui_statusbar_phone_NotificationIconAreaController_11125
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$DefaultRightButton -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$DefaultRightButton:
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState mIconState -> mIconState
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> <init>
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView,com.android.systemui.statusbar.phone.KeyguardBottomAreaView$DefaultRightButton) -> <init>
com.android.systemui.recents.events.activity.ToggleRecentsEvent -> com.android.systemui.recents.events.activity.ToggleRecentsEvent:
    void <init>() -> <init>
com.google.protobuf.nano.MessageNanoPrinter -> com.google.protobuf.nano.MessageNanoPrinter:
    void print(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer) -> print
    java.lang.String sanitizeString(java.lang.String) -> sanitizeString
    java.lang.String deCamelCaseify(java.lang.String) -> deCamelCaseify
    java.lang.String print(com.google.protobuf.nano.MessageNano) -> print
    void <init>() -> <init>
    void appendQuotedBytes(byte[],java.lang.StringBuffer) -> appendQuotedBytes
    java.lang.String escapeString(java.lang.String) -> escapeString
com.android.systemui.qs.TouchAnimator$FloatKeyframeSet -> com.android.systemui.qs.TouchAnimator$FloatKeyframeSet:
    android.util.Property mProperty -> mProperty
    float[] mValues -> mValues
    void <init>(android.util.Property,float[]) -> <init>
    void interpolate(int,float,java.lang.Object) -> interpolate
com.android.systemui.analytics.DataCollector -> com.android.systemui.analytics.DataCollector:
    boolean mAllowReportRejectedTouch -> mAllowReportRejectedTouch
    boolean mCollectBadTouches -> mCollectBadTouches
    android.content.Context mContext -> mContext
    boolean mCornerSwiping -> mCornerSwiping
    com.android.systemui.analytics.SensorLoggerSession mCurrentSession -> mCurrentSession
    boolean mEnableCollector -> mEnableCollector
    android.os.Handler mHandler -> mHandler
    android.database.ContentObserver mSettingsObserver -> mSettingsObserver
    boolean mTimeoutActive -> mTimeoutActive
    boolean mTrackingStarted -> mTrackingStarted
    com.android.systemui.analytics.DataCollector sInstance -> sInstance
    void <init>(android.content.Context) -> <init>
    void addEvent(int) -> addEvent
    void enforceTimeout() -> enforceTimeout
    com.android.systemui.analytics.DataCollector getInstance(android.content.Context) -> getInstance
    boolean isEnabled() -> isEnabled
    boolean isEnabledFull() -> isEnabledFull
    boolean isReportingEnabled() -> isReportingEnabled
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onAffordanceSwipingAborted() -> onAffordanceSwipingAborted
    void onAffordanceSwipingStarted(boolean) -> onAffordanceSwipingStarted
    void onBouncerHidden() -> onBouncerHidden
    void onBouncerShown() -> onBouncerShown
    void onCameraHintStarted() -> onCameraHintStarted
    void onCameraOn() -> onCameraOn
    void onLeftAffordanceHintStarted() -> onLeftAffordanceHintStarted
    void onLeftAffordanceOn() -> onLeftAffordanceOn
    void onNotificationActive() -> onNotificationActive
    void onNotificationDismissed() -> onNotificationDismissed
    void onNotificationDoubleTap() -> onNotificationDoubleTap
    void onNotificatonStartDismissing() -> onNotificatonStartDismissing
    void onNotificatonStartDraggingDown() -> onNotificatonStartDraggingDown
    void onNotificatonStopDismissing() -> onNotificatonStopDismissing
    void onNotificatonStopDraggingDown() -> onNotificatonStopDraggingDown
    void onQsDown() -> onQsDown
    void onScreenOff() -> onScreenOff
    void onScreenOnFromTouch() -> onScreenOnFromTouch
    void onScreenTurningOn() -> onScreenTurningOn
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onSessionEnd(int) -> onSessionEnd
    void onSessionStart() -> onSessionStart
    void onSucccessfulUnlock() -> onSucccessfulUnlock
    void onTouchEvent(android.view.MotionEvent,int,int) -> onTouchEvent
    void onTrackingStarted() -> onTrackingStarted
    void onTrackingStopped() -> onTrackingStopped
    void onUnlockHintStarted() -> onUnlockHintStarted
    void queueSession(com.android.systemui.analytics.SensorLoggerSession) -> queueSession
    android.net.Uri reportRejectedTouch() -> reportRejectedTouch
    boolean sessionEntrypoint() -> sessionEntrypoint
    void sessionExitpoint(int) -> sessionExitpoint
    void setNotificationExpanded() -> setNotificationExpanded
    void setQsExpanded(boolean) -> setQsExpanded
    void updateConfiguration() -> updateConfiguration
    void <clinit>() -> <clinit>
    boolean -get0(com.android.systemui.analytics.DataCollector) -> -get0
    android.content.Context -get1(com.android.systemui.analytics.DataCollector) -> -get1
    void -wrap0(com.android.systemui.analytics.DataCollector) -> -wrap0
com.android.systemui.DessertCaseDream$1 -> com.android.systemui.DessertCaseDream$1:
    com.android.systemui.DessertCaseDream this$0 -> this$0
    void <init>(com.android.systemui.DessertCaseDream) -> <init>
    void run() -> run
com.android.keyguard.LiftToActivateListener -> com.android.keyguard.LiftToActivateListener:
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    boolean mCachedClickableState -> mCachedClickableState
    void <init>(android.content.Context) -> <init>
    boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
com.android.systemui.statusbar.notification.AboveShelfObserver$HasViewAboveShelfChangedListener -> com.android.systemui.statusbar.notification.AboveShelfObserver$HasViewAboveShelfChangedListener:
    void onHasViewsAboveShelfChanged(boolean) -> onHasViewsAboveShelfChanged
android.support.v17.leanback.transition.FadeAndShortSlide$1 -> android.support.v17.leanback.transition.FadeAndShortSlide$1:
    void <init>() -> <init>
    float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[]) -> getGoneX
com.android.systemui.classifier.EndPointRatioClassifier -> com.android.systemui.classifier.EndPointRatioClassifier:
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    android.view.CollapsibleActionView mWrappedView -> mWrappedView
    void <init>(android.view.View) -> <init>
    void onActionViewExpanded() -> onActionViewExpanded
    android.view.View getWrappedView() -> getWrappedView
    void onActionViewCollapsed() -> onActionViewCollapsed
com.android.systemui.stackdivider.DividerHandleView -> com.android.systemui.stackdivider.DividerHandleView:
    android.util.Property HEIGHT_PROPERTY -> HEIGHT_PROPERTY
    android.util.Property WIDTH_PROPERTY -> WIDTH_PROPERTY
    android.animation.AnimatorSet mAnimator -> mAnimator
    int mCircleDiameter -> mCircleDiameter
    int mCurrentHeight -> mCurrentHeight
    int mCurrentWidth -> mCurrentWidth
    int mHeight -> mHeight
    android.graphics.Paint mPaint -> mPaint
    boolean mTouching -> mTouching
    int mWidth -> mWidth
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateToTarget(int,int,boolean) -> animateToTarget
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onDraw(android.graphics.Canvas) -> onDraw
    void setTouching(boolean,boolean) -> setTouching
    void <clinit>() -> <clinit>
    int -get0(com.android.systemui.stackdivider.DividerHandleView) -> -get0
    int -get1(com.android.systemui.stackdivider.DividerHandleView) -> -get1
    android.animation.AnimatorSet -set0(com.android.systemui.stackdivider.DividerHandleView,android.animation.AnimatorSet) -> -set0
    int -set1(com.android.systemui.stackdivider.DividerHandleView,int) -> -set1
    int -set2(com.android.systemui.stackdivider.DividerHandleView,int) -> -set2
com.android.systemui.screenshot.GlobalScreenshot$7 -> com.android.systemui.screenshot.GlobalScreenshot$7:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v7.app.MediaRouteControllerDialog$VolumeChangeListener -> android.support.v7.app.MediaRouteControllerDialog$VolumeChangeListener:
    java.lang.Runnable mStopTrackingTouch -> mStopTrackingTouch
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
com.android.systemui.statusbar.KeyguardAffordanceView$3 -> com.android.systemui.statusbar.KeyguardAffordanceView$3:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1$2 -> android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1$2:
    android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1 this$3 -> this$3
    int val$direction -> val$direction
    void <init>(android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1,int) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransition -> android.support.v4.app.FragmentTransition:
    int[] INVERSE_OPS -> INVERSE_OPS
    android.support.v4.app.FragmentTransitionImpl SUPPORT_IMPL -> SUPPORT_IMPL
    android.support.v4.app.FragmentTransitionImpl PLATFORM_IMPL -> PLATFORM_IMPL
    android.support.v4.util.ArrayMap captureInSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    android.support.v4.app.FragmentTransition$FragmentContainerTransition ensureContainer(android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    java.lang.Object getExitTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object mergeTransitions(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,android.support.v4.app.Fragment,boolean) -> mergeTransitions
    android.view.View -wrap1(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> -wrap1
    android.support.v4.util.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    void scheduleTargetChange(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.support.v4.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    java.lang.Object getEnterTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,boolean) -> getEnterTransition
    boolean canHandleAll(android.support.v4.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    java.lang.Object configureSharedElementsOrdered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    void -wrap3(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean) -> -wrap3
    void callSharedElementStartEnd(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean) -> callSharedElementStartEnd
    android.view.View getInEpicenterView(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
    void configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap) -> configureTransitionsOrdered
    void configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap) -> configureTransitionsReordered
    void replaceHide(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList) -> replaceHide
    void calculateFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    android.support.v4.util.ArrayMap -wrap0(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> -wrap0
    android.support.v4.util.ArrayMap captureOutSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    android.support.v4.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    void -wrap4(java.util.ArrayList,int) -> -wrap4
    java.lang.Object getSharedElementTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.util.ArrayList -wrap2(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View) -> -wrap2
    java.lang.Object configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    void setOutEpicenter(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,android.support.v4.util.ArrayMap,boolean,android.support.v4.app.BackStackRecord) -> setOutEpicenter
    java.lang.String findKeyForValue(android.support.v4.util.ArrayMap,java.lang.String) -> findKeyForValue
    java.util.ArrayList configureEnteringExitingViews(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void calculatePopFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    void retainValues(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> retainValues
    android.support.v4.app.FragmentTransitionImpl chooseImpl(android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> chooseImpl
com.android.systemui.statusbar.policy.CastController$CastDevice -> com.android.systemui.statusbar.policy.CastController$CastDevice:
    int state -> state
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.Object tag -> tag
    void <init>() -> <init>
com.android.systemui.statusbar.car.-$Lambda$JqfYPs5jG3hhVYu6rIxnLDxI5nQ -> com.android.systemui.statusbar.car.-$Lambda$JqfYPs5jG3hhVYu6rIxnLDxI5nQ:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.String,android.app.Fragment) -> $m$0
    void onFragmentViewCreated(java.lang.String,android.app.Fragment) -> onFragmentViewCreated
com.android.settingslib.drawer.-$Lambda$fie9DrpofQitFBkgTwa4lEr0wug -> com.android.settingslib.drawer.-$Lambda$fie9DrpofQitFBkgTwa4lEr0wug:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    int $m$0(java.lang.Object,java.lang.Object) -> $m$0
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.statusbar.policy.SecurityController -> com.android.systemui.statusbar.policy.SecurityController:
    java.lang.CharSequence getDeviceOwnerOrganizationName() -> getDeviceOwnerOrganizationName
    java.lang.String getPrimaryVpnName() -> getPrimaryVpnName
    java.lang.CharSequence getWorkProfileOrganizationName() -> getWorkProfileOrganizationName
    java.lang.String getWorkProfileVpnName() -> getWorkProfileVpnName
    boolean hasCACertInCurrentUser() -> hasCACertInCurrentUser
    boolean hasCACertInWorkProfile() -> hasCACertInWorkProfile
    boolean hasWorkProfile() -> hasWorkProfile
    boolean isDeviceManaged() -> isDeviceManaged
    boolean isNetworkLoggingEnabled() -> isNetworkLoggingEnabled
    boolean isVpnBranded() -> isVpnBranded
    boolean isVpnEnabled() -> isVpnEnabled
android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData -> android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData:
    long mBindRunningAverageNs -> mBindRunningAverageNs
    long mCreateRunningAverageNs -> mCreateRunningAverageNs
    java.util.ArrayList mScrapHeap -> mScrapHeap
    int mMaxScrap -> mMaxScrap
    void <init>() -> <init>
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObserver mViewPagerObserver -> mViewPagerObserver
    android.database.DataSetObservable mObservable -> mObservable
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void startUpdate(android.view.View) -> startUpdate
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.ViewGroup) -> startUpdate
    android.os.Parcelable saveState() -> saveState
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    float getPageWidth(int) -> getPageWidth
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    void <init>() -> <init>
    int getItemPosition(java.lang.Object) -> getItemPosition
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
com.android.systemui.plugins.R$style -> com.android.systemui.plugins.R$style:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int Animation -> Animation
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int Animation_AppCompat_Tooltip -> Animation_AppCompat_Tooltip
    int Animation_ForcedResizable -> Animation_ForcedResizable
    int Animation_NavigationBarFadeIn -> Animation_NavigationBarFadeIn
    int Animation_PipPhoneOverlayControl -> Animation_PipPhoneOverlayControl
    int Animation_RecentPanel -> Animation_RecentPanel
    int Animation_ShirtPocketPanel -> Animation_ShirtPocketPanel
    int Animation_StatusBar -> Animation_StatusBar
    int AutoSizingList -> AutoSizingList
    int BaseBrightnessDialogContainer -> BaseBrightnessDialogContainer
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_Animation_AppCompat_Tooltip -> Base_Animation_AppCompat_Tooltip
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Tooltip -> Base_TextAppearance_AppCompat_Tooltip
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_Button -> Base_TextAppearance_AppCompat_Widget_Button
    int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored -> Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
    int Base_TextAppearance_AppCompat_Widget_Button_Colored -> Base_TextAppearance_AppCompat_Widget_Button_Colored
    int Base_TextAppearance_AppCompat_Widget_Button_Inverse -> Base_TextAppearance_AppCompat_Widget_Button_Inverse
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Dialog -> Base_ThemeOverlay_AppCompat_Dialog
    int Base_ThemeOverlay_AppCompat_Dialog_Alert -> Base_ThemeOverlay_AppCompat_Dialog_Alert
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_V11_ThemeOverlay_AppCompat_Dialog -> Base_V11_ThemeOverlay_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V21_ThemeOverlay_AppCompat_Dialog -> Base_V21_ThemeOverlay_AppCompat_Dialog
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V22_Theme_AppCompat -> Base_V22_Theme_AppCompat
    int Base_V22_Theme_AppCompat_Light -> Base_V22_Theme_AppCompat_Light
    int Base_V23_Theme_AppCompat -> Base_V23_Theme_AppCompat
    int Base_V23_Theme_AppCompat_Light -> Base_V23_Theme_AppCompat_Light
    int Base_V26_Theme_AppCompat -> Base_V26_Theme_AppCompat
    int Base_V26_Theme_AppCompat_Light -> Base_V26_Theme_AppCompat_Light
    int Base_V26_Widget_AppCompat_Toolbar -> Base_V26_Widget_AppCompat_Toolbar
    int Base_V7_ThemeOverlay_AppCompat_Dialog -> Base_V7_ThemeOverlay_AppCompat_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_V7_Widget_AppCompat_Toolbar -> Base_V7_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Colored -> Base_Widget_AppCompat_Button_Colored
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ImageButton -> Base_Widget_AppCompat_ImageButton
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListMenuView -> Base_Widget_AppCompat_ListMenuView
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_RatingBar_Indicator -> Base_Widget_AppCompat_RatingBar_Indicator
    int Base_Widget_AppCompat_RatingBar_Small -> Base_Widget_AppCompat_RatingBar_Small
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_SeekBar -> Base_Widget_AppCompat_SeekBar
    int Base_Widget_AppCompat_SeekBar_Discrete -> Base_Widget_AppCompat_SeekBar_Discrete
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int BouncerSecurityContainer -> BouncerSecurityContainer
    int BrightnessDialogContainer -> BrightnessDialogContainer
    int CarUserSwitcher_ProgressBar -> CarUserSwitcher_ProgressBar
    int CarUserSwitcher_StartDrivingButton -> CarUserSwitcher_StartDrivingButton
    int ClearAllButtonDefaultMargins -> ClearAllButtonDefaultMargins
    int DockedDividerBackground -> DockedDividerBackground
    int DockedDividerHandle -> DockedDividerHandle
    int DockedDividerMinimizedShadow -> DockedDividerMinimizedShadow
    int DualToneDarkTheme -> DualToneDarkTheme
    int DualToneLightTheme -> DualToneLightTheme
    int ForcedResizableTheme -> ForcedResizableTheme
    int HybridNotification -> HybridNotification
    int HybridNotification_Ambient -> HybridNotification_Ambient
    int Keyguard_ImageButton_NumPadEnter -> Keyguard_ImageButton_NumPadEnter
    int Keyguard_TextView -> Keyguard_TextView
    int Keyguard_TextView_EmergencyButton -> Keyguard_TextView_EmergencyButton
    int LockPatternStyle -> LockPatternStyle
    int PasswordTheme -> PasswordTheme
    int PasswordTheme_Light -> PasswordTheme_Light
    int PipPhoneOverlayControlTheme -> PipPhoneOverlayControlTheme
    int PipTheme -> PipTheme
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat -> Platform_ThemeOverlay_AppCompat
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int Platform_V21_AppCompat -> Platform_V21_AppCompat
    int Platform_V21_AppCompat_Light -> Platform_V21_AppCompat_Light
    int Platform_V25_AppCompat -> Platform_V25_AppCompat
    int Platform_V25_AppCompat_Light -> Platform_V25_AppCompat_Light
    int Platform_Widget_AppCompat_Spinner -> Platform_Widget_AppCompat_Spinner
    int Preference -> Preference
    int PreferenceFragment -> PreferenceFragment
    int PreferenceFragmentList -> PreferenceFragmentList
    int PreferenceFragmentList_Material -> PreferenceFragmentList_Material
    int PreferenceFragmentStyle_SettingsBase -> PreferenceFragmentStyle_SettingsBase
    int PreferenceFragment_Material -> PreferenceFragment_Material
    int PreferenceThemeOverlay -> PreferenceThemeOverlay
    int PreferenceThemeOverlay_SettingsBase -> PreferenceThemeOverlay_SettingsBase
    int PreferenceThemeOverlay_v14 -> PreferenceThemeOverlay_v14
    int PreferenceThemeOverlay_v14_Material -> PreferenceThemeOverlay_v14_Material
    int Preference_Category -> Preference_Category
    int Preference_Category_Material -> Preference_Category_Material
    int Preference_Category_SettingsBase -> Preference_Category_SettingsBase
    int Preference_CheckBoxPreference -> Preference_CheckBoxPreference
    int Preference_CheckBoxPreference_Material -> Preference_CheckBoxPreference_Material
    int Preference_DialogPreference -> Preference_DialogPreference
    int Preference_DialogPreference_EditTextPreference -> Preference_DialogPreference_EditTextPreference
    int Preference_DialogPreference_EditTextPreference_Material -> Preference_DialogPreference_EditTextPreference_Material
    int Preference_DialogPreference_Material -> Preference_DialogPreference_Material
    int Preference_DropDown -> Preference_DropDown
    int Preference_DropDown_Material -> Preference_DropDown_Material
    int Preference_DropdownPreference_SettingsBase -> Preference_DropdownPreference_SettingsBase
    int Preference_EditTextPreference_SettingsBase -> Preference_EditTextPreference_SettingsBase
    int Preference_FooterPreference_SettingsBase -> Preference_FooterPreference_SettingsBase
    int Preference_Information -> Preference_Information
    int Preference_Information_Material -> Preference_Information_Material
    int Preference_Material -> Preference_Material
    int Preference_PreferenceScreen -> Preference_PreferenceScreen
    int Preference_PreferenceScreen_Material -> Preference_PreferenceScreen_Material
    int Preference_Screen_SettingsBase -> Preference_Screen_SettingsBase
    int Preference_SeekBarPreference -> Preference_SeekBarPreference
    int Preference_SeekBarPreference_Material -> Preference_SeekBarPreference_Material
    int Preference_SettingsBase -> Preference_SettingsBase
    int Preference_SwitchPreference -> Preference_SwitchPreference
    int Preference_SwitchPreferenceCompat -> Preference_SwitchPreferenceCompat
    int Preference_SwitchPreferenceCompat_Material -> Preference_SwitchPreferenceCompat_Material
    int Preference_SwitchPreference_Material -> Preference_SwitchPreference_Material
    int Preference_SwitchPreference_SettingsBase -> Preference_SwitchPreference_SettingsBase
    int Preference_TextAppearanceMaterialBody2 -> Preference_TextAppearanceMaterialBody2
    int Preference_TextAppearanceMaterialSubhead -> Preference_TextAppearanceMaterialSubhead
    int QSBorderlessButton -> QSBorderlessButton
    int QSIconTheme -> QSIconTheme
    int RecentsTheme -> RecentsTheme
    int RecentsTheme_NoWallpaper -> RecentsTheme_NoWallpaper
    int RecentsTheme_Wallpaper -> RecentsTheme_Wallpaper
    int RecentsTheme_Wallpaper_Light -> RecentsTheme_Wallpaper_Light
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int RtlUnderlay_Widget_AppCompat_ActionButton -> RtlUnderlay_Widget_AppCompat_ActionButton
    int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow -> RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
    int SearchPanelCircle -> SearchPanelCircle
    int TextAppearance -> TextAppearance
    int TextAppearanceMedium -> TextAppearanceMedium
    int TextAppearanceSmall -> TextAppearanceSmall
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Tooltip -> TextAppearance_AppCompat_Tooltip
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Button -> TextAppearance_AppCompat_Widget_Button
    int TextAppearance_AppCompat_Widget_Button_Borderless_Colored -> TextAppearance_AppCompat_Widget_Button_Borderless_Colored
    int TextAppearance_AppCompat_Widget_Button_Colored -> TextAppearance_AppCompat_Widget_Button_Colored
    int TextAppearance_AppCompat_Widget_Button_Inverse -> TextAppearance_AppCompat_Widget_Button_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Header -> TextAppearance_AppCompat_Widget_PopupMenu_Header
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_Leanback -> TextAppearance_Leanback
    int TextAppearance_LeanbackBase -> TextAppearance_LeanbackBase
    int TextAppearance_Leanback_DetailsActionButton -> TextAppearance_Leanback_DetailsActionButton
    int TextAppearance_Leanback_DetailsDescriptionBody -> TextAppearance_Leanback_DetailsDescriptionBody
    int TextAppearance_Leanback_DetailsDescriptionSubtitle -> TextAppearance_Leanback_DetailsDescriptionSubtitle
    int TextAppearance_Leanback_DetailsDescriptionTitle -> TextAppearance_Leanback_DetailsDescriptionTitle
    int TextAppearance_Leanback_ErrorMessage -> TextAppearance_Leanback_ErrorMessage
    int TextAppearance_Leanback_Header -> TextAppearance_Leanback_Header
    int TextAppearance_Leanback_Header_Section -> TextAppearance_Leanback_Header_Section
    int TextAppearance_Leanback_ImageCardView -> TextAppearance_Leanback_ImageCardView
    int TextAppearance_Leanback_ImageCardView_Content -> TextAppearance_Leanback_ImageCardView_Content
    int TextAppearance_Leanback_ImageCardView_Title -> TextAppearance_Leanback_ImageCardView_Title
    int TextAppearance_Leanback_PlaybackControlLabel -> TextAppearance_Leanback_PlaybackControlLabel
    int TextAppearance_Leanback_PlaybackControlsTime -> TextAppearance_Leanback_PlaybackControlsTime
    int TextAppearance_Leanback_PlaybackMediaItemDuration -> TextAppearance_Leanback_PlaybackMediaItemDuration
    int TextAppearance_Leanback_PlaybackMediaItemName -> TextAppearance_Leanback_PlaybackMediaItemName
    int TextAppearance_Leanback_PlaybackMediaItemNumber -> TextAppearance_Leanback_PlaybackMediaItemNumber
    int TextAppearance_Leanback_PlaybackMediaListHeaderTitle -> TextAppearance_Leanback_PlaybackMediaListHeaderTitle
    int TextAppearance_Leanback_Row_Header -> TextAppearance_Leanback_Row_Header
    int TextAppearance_Leanback_Row_Header_Description -> TextAppearance_Leanback_Row_Header_Description
    int TextAppearance_Leanback_Row_HoverCardDescription -> TextAppearance_Leanback_Row_HoverCardDescription
    int TextAppearance_Leanback_Row_HoverCardTitle -> TextAppearance_Leanback_Row_HoverCardTitle
    int TextAppearance_Leanback_SearchTextEdit -> TextAppearance_Leanback_SearchTextEdit
    int TextAppearance_Leanback_Title -> TextAppearance_Leanback_Title
    int TextAppearance_Material_Notification_HeaderTitle -> TextAppearance_Material_Notification_HeaderTitle
    int TextAppearance_Material_Notification_HybridNotificationDivider -> TextAppearance_Material_Notification_HybridNotificationDivider
    int TextAppearance_MediaRouter_PrimaryText -> TextAppearance_MediaRouter_PrimaryText
    int TextAppearance_MediaRouter_SecondaryText -> TextAppearance_MediaRouter_SecondaryText
    int TextAppearance_MediaRouter_Title -> TextAppearance_MediaRouter_Title
    int TextAppearance_NotificationInfo -> TextAppearance_NotificationInfo
    int TextAppearance_NotificationInfo_Button -> TextAppearance_NotificationInfo_Button
    int TextAppearance_NotificationInfo_Primary -> TextAppearance_NotificationInfo_Primary
    int TextAppearance_NotificationInfo_Secondary -> TextAppearance_NotificationInfo_Secondary
    int TextAppearance_NotificationInfo_Secondary_Link -> TextAppearance_NotificationInfo_Secondary_Link
    int TextAppearance_NotificationInfo_Secondary_Warning -> TextAppearance_NotificationInfo_Secondary_Warning
    int TextAppearance_QS -> TextAppearance_QS
    int TextAppearance_QS_DataUsage -> TextAppearance_QS_DataUsage
    int TextAppearance_QS_DataUsage_Secondary -> TextAppearance_QS_DataUsage_Secondary
    int TextAppearance_QS_DataUsage_Usage -> TextAppearance_QS_DataUsage_Usage
    int TextAppearance_QS_DetailButton -> TextAppearance_QS_DetailButton
    int TextAppearance_QS_DetailButton_White -> TextAppearance_QS_DetailButton_White
    int TextAppearance_QS_DetailEmpty -> TextAppearance_QS_DetailEmpty
    int TextAppearance_QS_DetailHeader -> TextAppearance_QS_DetailHeader
    int TextAppearance_QS_DetailItemPrimary -> TextAppearance_QS_DetailItemPrimary
    int TextAppearance_QS_DetailItemSecondary -> TextAppearance_QS_DetailItemSecondary
    int TextAppearance_QS_Introduction -> TextAppearance_QS_Introduction
    int TextAppearance_QS_SegmentedButton -> TextAppearance_QS_SegmentedButton
    int TextAppearance_QS_Subhead -> TextAppearance_QS_Subhead
    int TextAppearance_QS_TileLabel -> TextAppearance_QS_TileLabel
    int TextAppearance_QS_Warning -> TextAppearance_QS_Warning
    int TextAppearance_StatusBar_Clock -> TextAppearance_StatusBar_Clock
    int TextAppearance_StatusBar_Expanded -> TextAppearance_StatusBar_Expanded
    int TextAppearance_StatusBar_Expanded_AboveDateTime -> TextAppearance_StatusBar_Expanded_AboveDateTime
    int TextAppearance_StatusBar_Expanded_ChargingInfo -> TextAppearance_StatusBar_Expanded_ChargingInfo
    int TextAppearance_StatusBar_Expanded_Clock -> TextAppearance_StatusBar_Expanded_Clock
    int TextAppearance_StatusBar_Expanded_Date -> TextAppearance_StatusBar_Expanded_Date
    int TextAppearance_StatusBar_Expanded_EmergencyCallsOnly -> TextAppearance_StatusBar_Expanded_EmergencyCallsOnly
    int TextAppearance_StatusBar_Expanded_UserSwitcher -> TextAppearance_StatusBar_Expanded_UserSwitcher
    int TextAppearance_StatusBar_Expanded_UserSwitcher_UserName -> TextAppearance_StatusBar_Expanded_UserSwitcher_UserName
    int TextAppearance_StatusBar_HeadsUp -> TextAppearance_StatusBar_HeadsUp
    int TextAppearance_StatusBar_SystemPanel -> TextAppearance_StatusBar_SystemPanel
    int TextAppearance_Volume -> TextAppearance_Volume
    int TextAppearance_Volume_Header -> TextAppearance_Volume_Header
    int TextAppearance_Volume_ZenDetail -> TextAppearance_Volume_ZenDetail
    int TextAppearance_Volume_ZenSummary -> TextAppearance_Volume_ZenSummary
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Dialog -> ThemeOverlay_AppCompat_Dialog
    int ThemeOverlay_AppCompat_Dialog_Alert -> ThemeOverlay_AppCompat_Dialog_Alert
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int ThemeOverlay_MediaRouter_Dark -> ThemeOverlay_MediaRouter_Dark
    int ThemeOverlay_MediaRouter_Light -> ThemeOverlay_MediaRouter_Light
    int Theme_AlertDialogHost -> Theme_AlertDialogHost
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_DayNight -> Theme_AppCompat_DayNight
    int Theme_AppCompat_DayNight_DarkActionBar -> Theme_AppCompat_DayNight_DarkActionBar
    int Theme_AppCompat_DayNight_Dialog -> Theme_AppCompat_DayNight_Dialog
    int Theme_AppCompat_DayNight_DialogWhenLarge -> Theme_AppCompat_DayNight_DialogWhenLarge
    int Theme_AppCompat_DayNight_Dialog_Alert -> Theme_AppCompat_DayNight_Dialog_Alert
    int Theme_AppCompat_DayNight_Dialog_MinWidth -> Theme_AppCompat_DayNight_Dialog_MinWidth
    int Theme_AppCompat_DayNight_NoActionBar -> Theme_AppCompat_DayNight_NoActionBar
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Theme_Leanback -> Theme_Leanback
    int Theme_LeanbackBase -> Theme_LeanbackBase
    int Theme_Leanback_Browse -> Theme_Leanback_Browse
    int Theme_Leanback_Details -> Theme_Leanback_Details
    int Theme_Leanback_Details_NoSharedElementTransition -> Theme_Leanback_Details_NoSharedElementTransition
    int Theme_Leanback_GuidedStep -> Theme_Leanback_GuidedStep
    int Theme_Leanback_GuidedStepBase -> Theme_Leanback_GuidedStepBase
    int Theme_Leanback_GuidedStep_Half -> Theme_Leanback_GuidedStep_Half
    int Theme_Leanback_GuidedStep_HalfBase -> Theme_Leanback_GuidedStep_HalfBase
    int Theme_Leanback_Onboarding -> Theme_Leanback_Onboarding
    int Theme_Leanback_VerticalGrid -> Theme_Leanback_VerticalGrid
    int Theme_MediaRouter -> Theme_MediaRouter
    int Theme_MediaRouter_Light -> Theme_MediaRouter_Light
    int Theme_MediaRouter_LightControlPanel -> Theme_MediaRouter_LightControlPanel
    int Theme_MediaRouter_Light_DarkControlPanel -> Theme_MediaRouter_Light_DarkControlPanel
    int Theme_SystemUI -> Theme_SystemUI
    int Theme_SystemUI_Dialog -> Theme_SystemUI_Dialog
    int Theme_SystemUI_Dialog_Alert -> Theme_SystemUI_Dialog_Alert
    int Theme_SystemUI_Dialog_GlobalActions -> Theme_SystemUI_Dialog_GlobalActions
    int Theme_SystemUI_Light -> Theme_SystemUI_Light
    int TunerPreferenceTheme -> TunerPreferenceTheme
    int TunerSettings -> TunerSettings
    int UserDetailView -> UserDetailView
    int VolumeButtons -> VolumeButtons
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Colored -> Widget_AppCompat_Button_Colored
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_ImageButton -> Widget_AppCompat_ImageButton
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListMenuView -> Widget_AppCompat_ListMenuView
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_RatingBar_Indicator -> Widget_AppCompat_RatingBar_Indicator
    int Widget_AppCompat_RatingBar_Small -> Widget_AppCompat_RatingBar_Small
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_SeekBar -> Widget_AppCompat_SeekBar
    int Widget_AppCompat_SeekBar_Discrete -> Widget_AppCompat_SeekBar_Discrete
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
    int Widget_Leanback -> Widget_Leanback
    int Widget_LeanbackBase -> Widget_LeanbackBase
    int Widget_Leanback_BaseCardViewStyle -> Widget_Leanback_BaseCardViewStyle
    int Widget_Leanback_DetailsActionButtonStyle -> Widget_Leanback_DetailsActionButtonStyle
    int Widget_Leanback_DetailsActionButtonStyleBase -> Widget_Leanback_DetailsActionButtonStyleBase
    int Widget_Leanback_DetailsDescriptionBodyStyle -> Widget_Leanback_DetailsDescriptionBodyStyle
    int Widget_Leanback_DetailsDescriptionSubtitleStyle -> Widget_Leanback_DetailsDescriptionSubtitleStyle
    int Widget_Leanback_DetailsDescriptionTitleStyle -> Widget_Leanback_DetailsDescriptionTitleStyle
    int Widget_Leanback_ErrorMessageStyle -> Widget_Leanback_ErrorMessageStyle
    int Widget_Leanback_GridItems -> Widget_Leanback_GridItems
    int Widget_Leanback_GridItems_VerticalGridView -> Widget_Leanback_GridItems_VerticalGridView
    int Widget_Leanback_GuidanceBreadcrumbStyle -> Widget_Leanback_GuidanceBreadcrumbStyle
    int Widget_Leanback_GuidanceContainerStyle -> Widget_Leanback_GuidanceContainerStyle
    int Widget_Leanback_GuidanceDescriptionStyle -> Widget_Leanback_GuidanceDescriptionStyle
    int Widget_Leanback_GuidanceIconStyle -> Widget_Leanback_GuidanceIconStyle
    int Widget_Leanback_GuidanceTitleStyle -> Widget_Leanback_GuidanceTitleStyle
    int Widget_Leanback_GuidedActionItemCheckmarkStyle -> Widget_Leanback_GuidedActionItemCheckmarkStyle
    int Widget_Leanback_GuidedActionItemChevronStyle -> Widget_Leanback_GuidedActionItemChevronStyle
    int Widget_Leanback_GuidedActionItemContainerStyle -> Widget_Leanback_GuidedActionItemContainerStyle
    int Widget_Leanback_GuidedActionItemContentStyle -> Widget_Leanback_GuidedActionItemContentStyle
    int Widget_Leanback_GuidedActionItemDescriptionStyle -> Widget_Leanback_GuidedActionItemDescriptionStyle
    int Widget_Leanback_GuidedActionItemIconStyle -> Widget_Leanback_GuidedActionItemIconStyle
    int Widget_Leanback_GuidedActionItemTitleStyle -> Widget_Leanback_GuidedActionItemTitleStyle
    int Widget_Leanback_GuidedActionsContainerStyle -> Widget_Leanback_GuidedActionsContainerStyle
    int Widget_Leanback_GuidedActionsListStyle -> Widget_Leanback_GuidedActionsListStyle
    int Widget_Leanback_GuidedActionsSelectorStyle -> Widget_Leanback_GuidedActionsSelectorStyle
    int Widget_Leanback_GuidedButtonActionsListStyle -> Widget_Leanback_GuidedButtonActionsListStyle
    int Widget_Leanback_GuidedSubActionsListStyle -> Widget_Leanback_GuidedSubActionsListStyle
    int Widget_Leanback_Header -> Widget_Leanback_Header
    int Widget_Leanback_Header_Section -> Widget_Leanback_Header_Section
    int Widget_Leanback_Headers -> Widget_Leanback_Headers
    int Widget_Leanback_Headers_VerticalGridView -> Widget_Leanback_Headers_VerticalGridView
    int Widget_Leanback_ImageCardView -> Widget_Leanback_ImageCardView
    int Widget_Leanback_ImageCardViewStyle -> Widget_Leanback_ImageCardViewStyle
    int Widget_Leanback_ImageCardView_BadgeStyle -> Widget_Leanback_ImageCardView_BadgeStyle
    int Widget_Leanback_ImageCardView_ContentStyle -> Widget_Leanback_ImageCardView_ContentStyle
    int Widget_Leanback_ImageCardView_ImageStyle -> Widget_Leanback_ImageCardView_ImageStyle
    int Widget_Leanback_ImageCardView_InfoAreaStyle -> Widget_Leanback_ImageCardView_InfoAreaStyle
    int Widget_Leanback_ImageCardView_TitleStyle -> Widget_Leanback_ImageCardView_TitleStyle
    int Widget_Leanback_OnboardingDescriptionStyle -> Widget_Leanback_OnboardingDescriptionStyle
    int Widget_Leanback_OnboardingHeaderStyle -> Widget_Leanback_OnboardingHeaderStyle
    int Widget_Leanback_OnboardingLogoStyle -> Widget_Leanback_OnboardingLogoStyle
    int Widget_Leanback_OnboardingMainIconStyle -> Widget_Leanback_OnboardingMainIconStyle
    int Widget_Leanback_OnboardingNavigatorContainerStyle -> Widget_Leanback_OnboardingNavigatorContainerStyle
    int Widget_Leanback_OnboardingPageIndicatorStyle -> Widget_Leanback_OnboardingPageIndicatorStyle
    int Widget_Leanback_OnboardingStartButtonStyle -> Widget_Leanback_OnboardingStartButtonStyle
    int Widget_Leanback_OnboardingStartButtonStyleBase -> Widget_Leanback_OnboardingStartButtonStyleBase
    int Widget_Leanback_OnboardingTitleStyle -> Widget_Leanback_OnboardingTitleStyle
    int Widget_Leanback_PlaybackControlLabelStyle -> Widget_Leanback_PlaybackControlLabelStyle
    int Widget_Leanback_PlaybackControlsActionIconsStyle -> Widget_Leanback_PlaybackControlsActionIconsStyle
    int Widget_Leanback_PlaybackControlsButtonStyle -> Widget_Leanback_PlaybackControlsButtonStyle
    int Widget_Leanback_PlaybackControlsTimeStyle -> Widget_Leanback_PlaybackControlsTimeStyle
    int Widget_Leanback_PlaybackMediaItemDetailsStyle -> Widget_Leanback_PlaybackMediaItemDetailsStyle
    int Widget_Leanback_PlaybackMediaItemDurationStyle -> Widget_Leanback_PlaybackMediaItemDurationStyle
    int Widget_Leanback_PlaybackMediaItemNameStyle -> Widget_Leanback_PlaybackMediaItemNameStyle
    int Widget_Leanback_PlaybackMediaItemNumberStyle -> Widget_Leanback_PlaybackMediaItemNumberStyle
    int Widget_Leanback_PlaybackMediaItemNumberViewFlipperStyle -> Widget_Leanback_PlaybackMediaItemNumberViewFlipperStyle
    int Widget_Leanback_PlaybackMediaItemRowStyle -> Widget_Leanback_PlaybackMediaItemRowStyle
    int Widget_Leanback_PlaybackMediaItemSeparatorStyle -> Widget_Leanback_PlaybackMediaItemSeparatorStyle
    int Widget_Leanback_PlaybackMediaListHeaderStyle -> Widget_Leanback_PlaybackMediaListHeaderStyle
    int Widget_Leanback_PlaybackMediaListHeaderTitleStyle -> Widget_Leanback_PlaybackMediaListHeaderTitleStyle
    int Widget_Leanback_PlaybackRow -> Widget_Leanback_PlaybackRow
    int Widget_Leanback_Row -> Widget_Leanback_Row
    int Widget_Leanback_Row_Header -> Widget_Leanback_Row_Header
    int Widget_Leanback_Row_HeaderDock -> Widget_Leanback_Row_HeaderDock
    int Widget_Leanback_Row_Header_Description -> Widget_Leanback_Row_Header_Description
    int Widget_Leanback_Row_HorizontalGridView -> Widget_Leanback_Row_HorizontalGridView
    int Widget_Leanback_Row_HoverCardDescription -> Widget_Leanback_Row_HoverCardDescription
    int Widget_Leanback_Row_HoverCardTitle -> Widget_Leanback_Row_HoverCardTitle
    int Widget_Leanback_Rows -> Widget_Leanback_Rows
    int Widget_Leanback_Rows_VerticalGridView -> Widget_Leanback_Rows_VerticalGridView
    int Widget_Leanback_SearchOrbViewStyle -> Widget_Leanback_SearchOrbViewStyle
    int Widget_Leanback_Title -> Widget_Leanback_Title
    int Widget_Leanback_TitleView -> Widget_Leanback_TitleView
    int Widget_Leanback_Title_Icon -> Widget_Leanback_Title_Icon
    int Widget_Leanback_Title_Text -> Widget_Leanback_Title_Text
    int Widget_MediaRouter_Light_MediaRouteButton -> Widget_MediaRouter_Light_MediaRouteButton
    int Widget_MediaRouter_MediaRouteButton -> Widget_MediaRouter_MediaRouteButton
    int Widget_TextView_NumPadKey -> Widget_TextView_NumPadKey
    int Widget_TextView_NumPadKey_Klondike -> Widget_TextView_NumPadKey_Klondike
    int edit_theme -> edit_theme
    int hybrid_notification -> hybrid_notification
    int hybrid_notification_ambient -> hybrid_notification_ambient
    int hybrid_notification_text -> hybrid_notification_text
    int hybrid_notification_text_ambient -> hybrid_notification_text_ambient
    int hybrid_notification_title -> hybrid_notification_title
    int hybrid_notification_title_ambient -> hybrid_notification_title_ambient
    int keyguard_presentation_theme -> keyguard_presentation_theme
    int preference_icon_frame -> preference_icon_frame
    int qs_base -> qs_base
    int qs_theme -> qs_theme
    int systemui_theme_remote_input -> systemui_theme_remote_input
    int widget_big_thin -> widget_big_thin
    int widget_label -> widget_label
    void <init>() -> <init>
com.android.systemui.statusbar.phone.NotificationPanelView$2 -> com.android.systemui.statusbar.phone.NotificationPanelView$2:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
android.support.v17.leanback.widget.SearchBar$9 -> android.support.v17.leanback.widget.SearchBar$9:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
    void run() -> run
com.android.systemui.volume.VolumeDialogControllerImpl$W -> com.android.systemui.volume.VolumeDialogControllerImpl$W:
    com.android.systemui.volume.VolumeDialogControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$AccessibilityDelegate:
    void <init>() -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.android.systemui.pip.tv.PipManager$4 -> com.android.systemui.pip.tv.PipManager$4:
    com.android.systemui.pip.tv.PipManager this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipManager) -> <init>
    void onActiveSessionsChanged(java.util.List) -> onActiveSessionsChanged
com.android.systemui.plugins.PluginManagerImpl$CrashWhilePluginActiveException -> com.android.systemui.plugins.PluginManagerImpl$CrashWhilePluginActiveException:
    com.android.systemui.plugins.PluginManagerImpl this$0 -> this$0
    void <init>(com.android.systemui.plugins.PluginManagerImpl,java.lang.Throwable) -> <init>
com.android.systemui.doze.DozeScreenStatePreventingAdapter -> com.android.systemui.doze.DozeScreenStatePreventingAdapter:
    com.android.systemui.doze.DozeMachine$Service wrapIfNeeded(com.android.systemui.doze.DozeMachine$Service,com.android.systemui.statusbar.phone.DozeParameters) -> wrapIfNeeded
    void <init>(com.android.systemui.doze.DozeMachine$Service) -> <init>
    boolean isNeeded(com.android.systemui.statusbar.phone.DozeParameters) -> isNeeded
    void setDozeScreenState(int) -> setDozeScreenState
android.support.v17.leanback.widget.ShadowOverlayContainer -> android.support.v17.leanback.widget.ShadowOverlayContainer:
    float mFocusedZ -> mFocusedZ
    float mUnfocusedZ -> mUnfocusedZ
    int mOverlayColor -> mOverlayColor
    int mShadowType -> mShadowType
    android.graphics.Rect sTempRect -> sTempRect
    android.view.View mWrappedView -> mWrappedView
    boolean mInitialized -> mInitialized
    android.graphics.Paint mOverlayPaint -> mOverlayPaint
    void useStaticShadow() -> useStaticShadow
    boolean supportsDynamicShadow() -> supportsDynamicShadow
    void draw(android.graphics.Canvas) -> draw
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    void <clinit>() -> <clinit>
    void useDynamicShadow() -> useDynamicShadow
    void useDynamicShadow(float,float) -> useDynamicShadow
    boolean supportsShadow() -> supportsShadow
com.android.systemui.statusbar.NotificationHeaderUtil$5 -> com.android.systemui.statusbar.NotificationHeaderUtil$5:
    com.android.systemui.statusbar.NotificationHeaderUtil this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationHeaderUtil) -> <init>
    boolean compare(android.view.View,android.view.View,java.lang.Object,java.lang.Object) -> compare
    boolean isEmpty(android.view.View) -> isEmpty
com.android.systemui.statusbar.policy.UserSwitcherController$6 -> com.android.systemui.statusbar.policy.UserSwitcherController$6:
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    void onKeyguardShowingChanged() -> onKeyguardShowingChanged
    void -com_android_systemui_statusbar_policy_UserSwitcherController$6-mthref-0() -> -com_android_systemui_statusbar_policy_UserSwitcherController$6-mthref-0
com.android.systemui.statusbar.phone.-$Lambda$M2GC-aczdMiLkSdwOGpMTs1Dam8$1 -> com.android.systemui.statusbar.phone.-$Lambda$M2GC-aczdMiLkSdwOGpMTs1Dam8$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.accessibility.AccessibilityManager) -> $m$0
    void onAccessibilityServicesStateChanged(android.view.accessibility.AccessibilityManager) -> onAccessibilityServicesStateChanged
com.android.settingslib.wifi.WifiStatusTracker -> com.android.settingslib.wifi.WifiStatusTracker:
    int rssi -> rssi
    java.lang.String ssid -> ssid
    int state -> state
    boolean enabled -> enabled
    int level -> level
    boolean connecting -> connecting
    android.net.wifi.WifiManager mWifiManager -> mWifiManager
    boolean connected -> connected
    java.lang.String getSsid(android.net.wifi.WifiInfo) -> getSsid
    void <init>(android.net.wifi.WifiManager) -> <init>
    void handleBroadcast(android.content.Intent) -> handleBroadcast
com.android.systemui.statusbar.ViewTransformationHelper$4 -> com.android.systemui.statusbar.ViewTransformationHelper$4:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.ViewTransformationHelper this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ViewTransformationHelper) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentTransition$FragmentContainerTransition -> android.support.v4.app.FragmentTransition$FragmentContainerTransition:
    android.support.v4.app.Fragment lastIn -> lastIn
    android.support.v4.app.Fragment firstOut -> firstOut
    boolean firstOutIsPop -> firstOutIsPop
    android.support.v4.app.BackStackRecord firstOutTransaction -> firstOutTransaction
    boolean lastInIsPop -> lastInIsPop
    android.support.v4.app.BackStackRecord lastInTransaction -> lastInTransaction
    void <init>() -> <init>
com.android.systemui.qs.tiles.DndTile$4 -> com.android.systemui.qs.tiles.DndTile$4:
    com.android.systemui.qs.tiles.DndTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.DndTile) -> <init>
    void onExpanded(boolean) -> onExpanded
    void onInteraction() -> onInteraction
    void onPrioritySettings() -> onPrioritySettings
com.android.systemui.qs.customize.QSCustomizer$4 -> com.android.systemui.qs.customize.QSCustomizer$4:
    com.android.systemui.qs.customize.QSCustomizer this$0 -> this$0
    void <init>(com.android.systemui.qs.customize.QSCustomizer) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.app.OverlayListView -> android.support.v7.app.OverlayListView:
    java.util.List mOverlayObjects -> mOverlayObjects
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void startAnimationAll() -> startAnimationAll
    void stopAnimationAll() -> stopAnimationAll
    void addOverlayObject(android.support.v7.app.OverlayListView$OverlayObject) -> addOverlayObject
    void onDraw(android.graphics.Canvas) -> onDraw
android.support.v7.view.menu.MenuBuilder -> android.support.v7.view.menu.MenuBuilder:
    java.lang.CharSequence mHeaderTitle -> mHeaderTitle
    android.content.Context mContext -> mContext
    boolean mOptionalIconsVisible -> mOptionalIconsVisible
    boolean mIsClosing -> mIsClosing
    boolean mIsVisibleItemsStale -> mIsVisibleItemsStale
    boolean mOverrideVisibleItems -> mOverrideVisibleItems
    boolean mItemsChangedWhileDispatchPrevented -> mItemsChangedWhileDispatchPrevented
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> mCurrentMenuInfo
    boolean mStructureChangedWhileDispatchPrevented -> mStructureChangedWhileDispatchPrevented
    android.content.res.Resources mResources -> mResources
    boolean mShortcutsVisible -> mShortcutsVisible
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mTempShortcutItemList -> mTempShortcutItemList
    android.support.v7.view.menu.MenuItemImpl mExpandedItem -> mExpandedItem
    android.view.View mHeaderView -> mHeaderView
    int[] sCategoryToOrder -> sCategoryToOrder
    int mDefaultShowAsAction -> mDefaultShowAsAction
    android.graphics.drawable.Drawable mHeaderIcon -> mHeaderIcon
    boolean mPreventDispatchingItemsChanged -> mPreventDispatchingItemsChanged
    android.support.v7.view.menu.MenuBuilder$Callback mCallback -> mCallback
    boolean mIsActionItemsStale -> mIsActionItemsStale
    java.util.ArrayList mVisibleItems -> mVisibleItems
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> mPresenters
    java.util.ArrayList mActionItems -> mActionItems
    boolean mQwertyMode -> mQwertyMode
    java.util.ArrayList mNonActionItems -> mNonActionItems
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.view.View getHeaderView() -> getHeaderView
    android.support.v7.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    android.support.v7.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    java.util.ArrayList getVisibleItems() -> getVisibleItems
    android.view.MenuItem add(int) -> add
    boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int) -> performItemAction
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void clear() -> clear
    android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void onItemsChanged(boolean) -> onItemsChanged
    android.support.v7.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    android.content.res.Resources getResources() -> getResources
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    void removeMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> removeMenuPresenter
    void onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl) -> onItemVisibleChanged
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    android.view.MenuItem add(int,int,int,int) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    int size() -> size
    int findGroupIndex(int) -> findGroupIndex
    android.support.v7.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    java.util.ArrayList getNonActionItems() -> getNonActionItems
    android.view.MenuItem findItem(int) -> findItem
    int findGroupIndex(int,int) -> findGroupIndex
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    void removeItemAtInt(int,boolean) -> removeItemAtInt
    void clearHeader() -> clearHeader
    int getOrdering(int) -> getOrdering
    boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    android.view.MenuItem add(java.lang.CharSequence) -> add
    boolean dispatchSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder,android.support.v7.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    android.support.v7.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> setCallback
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    boolean isQwertyMode() -> isQwertyMode
    android.support.v7.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    java.util.ArrayList getActionItems() -> getActionItems
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.support.v7.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void changeMenuMode() -> changeMenuMode
    void addMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> addMenuPresenter
    void close(boolean) -> close
    void close() -> close
    android.view.MenuItem getItem(int) -> getItem
    void onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    void flagActionItems() -> flagActionItems
    int findItemIndex(int) -> findItemIndex
    void setQwertyMode(boolean) -> setQwertyMode
    void setGroupVisible(int,boolean) -> setGroupVisible
    void removeGroup(int) -> removeGroup
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    void addMenuPresenter(android.support.v7.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeItem(int) -> removeItem
    void <init>(android.content.Context) -> <init>
    void <clinit>() -> <clinit>
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.SubMenu addSubMenu(int) -> addSubMenu
com.android.systemui.doze.DozeSensors$1 -> com.android.systemui.doze.DozeSensors$1:
    com.android.systemui.doze.DozeSensors this$0 -> this$0
    void <init>(com.android.systemui.doze.DozeSensors,android.os.Handler) -> <init>
    void onChange(boolean,android.net.Uri,int) -> onChange
com.android.systemui.pip.tv.PipControlsView$2 -> com.android.systemui.pip.tv.PipControlsView$2:
    com.android.systemui.pip.tv.PipControlsView this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipControlsView) -> <init>
    void onMediaControllerChanged() -> onMediaControllerChanged
com.android.systemui.qs.tileimpl.QSIconViewImpl -> com.android.systemui.qs.tileimpl.QSIconViewImpl:
    boolean mAnimationEnabled -> mAnimationEnabled
    android.view.View mIcon -> mIcon
    int mIconSizePx -> mIconSizePx
    int mState -> mState
    int mTilePaddingBelowIconPx -> mTilePaddingBelowIconPx
    int mTint -> mTint
    void <init>(android.content.Context) -> <init>
    void animateGrayScale(int,int,android.widget.ImageView) -> animateGrayScale
    android.view.View createIcon() -> createIcon
    void disableAnimation() -> disableAnimation
    int exactly(int) -> exactly
    int getColor(int) -> getColor
    int getIconMeasureMode() -> getIconMeasureMode
    android.view.View getIconView() -> getIconView
    void layout(android.view.View,int,int) -> layout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setIcon(com.android.systemui.plugins.qs.QSTile$State) -> setIcon
    void setIcon(android.widget.ImageView,com.android.systemui.plugins.qs.QSTile$State) -> setIcon
    void setTint(android.widget.ImageView,int) -> setTint
    void updateIcon(android.widget.ImageView,com.android.systemui.plugins.qs.QSTile$State) -> updateIcon
    void lambda$-com_android_systemui_qs_tileimpl_QSIconViewImpl_6437(float,float,float,float,android.widget.ImageView,android.animation.ValueAnimator) -> lambda$-com_android_systemui_qs_tileimpl_QSIconViewImpl_6437
android.support.v7.widget.RecyclerView$RecycledViewPool -> android.support.v7.widget.RecyclerView$RecycledViewPool:
    int mAttachCount -> mAttachCount
    android.util.SparseArray mScrap -> mScrap
    void factorInBindTime(int,long) -> factorInBindTime
    void attach(android.support.v7.widget.RecyclerView$Adapter) -> attach
    boolean willCreateInTime(int,long,long) -> willCreateInTime
    void factorInCreateTime(int,long) -> factorInCreateTime
    void putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder) -> putRecycledView
    boolean willBindInTime(int,long,long) -> willBindInTime
    void detach() -> detach
    void clear() -> clear
    android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    android.support.v7.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    void <init>() -> <init>
    long runningAverage(long,long) -> runningAverage
com.android.systemui.volume.VolumeDialogControllerImpl$C$7 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$7:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry) -> <init>
    void run() -> run
android.support.v7.widget.RecyclerView$4 -> android.support.v7.widget.RecyclerView$4:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    void processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void unused(android.support.v7.widget.RecyclerView$ViewHolder) -> unused
com.android.systemui.plugins.VolumeDialog$Callback -> com.android.systemui.plugins.VolumeDialog$Callback:
    int VERSION -> VERSION
    void onZenSettingsClicked() -> onZenSettingsClicked
    void onZenPrioritySettingsClicked() -> onZenPrioritySettingsClicked
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatApi21Impl -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatApi21Impl:
    void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
    void <init>() -> <init>
com.android.systemui.qs.customize.TileAdapter$Holder -> com.android.systemui.qs.customize.TileAdapter$Holder:
    com.android.systemui.qs.customize.CustomizeTileView mTileView -> mTileView
    com.android.systemui.qs.customize.TileAdapter this$0 -> this$0
    void <init>(com.android.systemui.qs.customize.TileAdapter,android.view.View) -> <init>
    void clearDrag() -> clearDrag
    void startDrag() -> startDrag
    void stopDrag() -> stopDrag
    com.android.systemui.qs.customize.CustomizeTileView -get0(com.android.systemui.qs.customize.TileAdapter$Holder) -> -get0
android.support.v7.widget.AppCompatSpinner$1 -> android.support.v7.widget.AppCompatSpinner$1:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup val$popup -> val$popup
    android.support.v7.widget.AppCompatSpinner this$0 -> this$0
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
    void <init>(android.support.v7.widget.AppCompatSpinner,android.view.View,android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
android.support.annotation.UiThread -> android.support.annotation.UiThread:
android.support.v17.leanback.widget.BaseCardView$InfoAlphaAnimation -> android.support.v17.leanback.widget.BaseCardView$InfoAlphaAnimation:
    float mDelta -> mDelta
    android.support.v17.leanback.widget.BaseCardView this$0 -> this$0
    float mStartValue -> mStartValue
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void <init>(android.support.v17.leanback.widget.BaseCardView,float,float) -> <init>
android.support.v4.graphics.PathParser$ExtractFloatResult -> android.support.v4.graphics.PathParser$ExtractFloatResult:
    boolean mEndWithNegOrDot -> mEndWithNegOrDot
    int mEndPosition -> mEndPosition
    void <init>() -> <init>
com.android.systemui.pip.phone.PipTouchHandler$1 -> com.android.systemui.pip.phone.PipTouchHandler$1:
    com.android.systemui.pip.phone.PipTouchHandler this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipTouchHandler) -> <init>
    void run() -> run
com.android.systemui.qs.tiles.LocationTile$Callback -> com.android.systemui.qs.tiles.LocationTile$Callback:
    com.android.systemui.qs.tiles.LocationTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.LocationTile) -> <init>
    void onKeyguardShowingChanged() -> onKeyguardShowingChanged
    void onLocationSettingsChanged(boolean) -> onLocationSettingsChanged
    void <init>(com.android.systemui.qs.tiles.LocationTile,com.android.systemui.qs.tiles.LocationTile$Callback) -> <init>
com.android.systemui.statusbar.policy.RemoteInputView$1 -> com.android.systemui.statusbar.policy.RemoteInputView$1:
    com.android.systemui.statusbar.policy.RemoteInputView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.RemoteInputView) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.android.systemui.recents.events.EventBus$Event -> com.android.systemui.recents.events.EventBus$Event:
    boolean cancelled -> cancelled
    boolean requiresPost -> requiresPost
    boolean trace -> trace
    void <init>() -> <init>
    java.lang.Object clone() -> clone
    void onPostDispatch() -> onPostDispatch
    void onPreDispatch() -> onPreDispatch
com.android.systemui.qs.-$Lambda$uCboUVxW0nO2arKRJvhyjA6aQd0 -> com.android.systemui.qs.-$Lambda$uCboUVxW0nO2arKRJvhyjA6aQd0:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
android.support.v7.widget.ScrollingTabContainerView$TabView -> android.support.v7.widget.ScrollingTabContainerView$TabView:
    int[] BG_ATTRS -> BG_ATTRS
    android.support.v7.app.ActionBar$Tab mTab -> mTab
    android.widget.TextView mTextView -> mTextView
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    android.view.View mCustomView -> mCustomView
    android.widget.ImageView mIconView -> mIconView
    void <init>(android.support.v7.widget.ScrollingTabContainerView,android.content.Context,android.support.v7.app.ActionBar$Tab,boolean) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    android.support.v7.app.ActionBar$Tab getTab() -> getTab
    void onMeasure(int,int) -> onMeasure
    void setSelected(boolean) -> setSelected
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void update() -> update
    void bindTab(android.support.v7.app.ActionBar$Tab) -> bindTab
com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$3 -> com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$3:
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBar$37 -> com.android.systemui.statusbar.phone.StatusBar$37:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    android.content.Intent val$intent -> val$intent
    boolean val$disallowEnterPictureInPictureWhileLaunching -> val$disallowEnterPictureInPictureWhileLaunching
    com.android.systemui.plugins.ActivityStarter$Callback val$callback -> val$callback
    void <init>(com.android.systemui.statusbar.phone.StatusBar,android.content.Intent,boolean,com.android.systemui.plugins.ActivityStarter$Callback) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.NavigationBarView$NavTransitionListener -> com.android.systemui.statusbar.phone.NavigationBarView$NavTransitionListener:
    boolean mBackTransitioning -> mBackTransitioning
    long mDuration -> mDuration
    boolean mHomeAppearing -> mHomeAppearing
    android.animation.TimeInterpolator mInterpolator -> mInterpolator
    long mStartDelay -> mStartDelay
    com.android.systemui.statusbar.phone.NavigationBarView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NavigationBarView) -> <init>
    void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int) -> endTransition
    void onBackAltCleared() -> onBackAltCleared
    void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int) -> startTransition
    void <init>(com.android.systemui.statusbar.phone.NavigationBarView,com.android.systemui.statusbar.phone.NavigationBarView$NavTransitionListener) -> <init>
android.support.v7.widget.RecyclerView$1 -> android.support.v7.widget.RecyclerView$1:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
com.android.systemui.statusbar.phone.DemoStatusIcons -> com.android.systemui.statusbar.phone.DemoStatusIcons:
    boolean mDemoMode -> mDemoMode
    int mIconSize -> mIconSize
    android.widget.LinearLayout mStatusIcons -> mStatusIcons
    void <init>(android.widget.LinearLayout,int) -> <init>
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
    void updateSlot(java.lang.String,java.lang.String,int) -> updateSlot
com.android.systemui.statusbar.StatusBarState -> com.android.systemui.statusbar.StatusBarState:
    java.lang.String toShortString(int) -> toShortString
    void <init>() -> <init>
com.android.systemui.tuner.-$Lambda$U4ktHPNI6BrZ_s6jDC6qSbjiuiE$2 -> com.android.systemui.tuner.-$Lambda$U4ktHPNI6BrZ_s6jDC6qSbjiuiE$2:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.String,java.lang.String) -> $m$0
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
com.android.systemui.qs.tiles.BatterySaverTile -> com.android.systemui.qs.tiles.BatterySaverTile:
    com.android.systemui.statusbar.policy.BatteryController mBatteryController -> mBatteryController
    boolean mCharging -> mCharging
    int mLevel -> mLevel
    boolean mPluggedIn -> mPluggedIn
    boolean mPowerSave -> mPowerSave
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void onBatteryLevelChanged(int,boolean,boolean) -> onBatteryLevelChanged
    void onPowerSaveChanged(boolean) -> onPowerSaveChanged
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
android.support.v7.view.menu.CascadingMenuPopup$1 -> android.support.v7.view.menu.CascadingMenuPopup$1:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
com.android.systemui.classifier.DurationCountClassifier -> com.android.systemui.classifier.DurationCountClassifier:
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
com.android.systemui.statusbar.phone.StatusBar$39 -> com.android.systemui.statusbar.phone.StatusBar$39:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    java.lang.Runnable val$beforeFading -> val$beforeFading
    void <init>(com.android.systemui.statusbar.phone.StatusBar,java.lang.Runnable) -> <init>
    void run() -> run
android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate:
    void <init>() -> <init>
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
android.support.v7.app.MediaRouteChooserDialog$RouteComparator -> android.support.v7.app.MediaRouteChooserDialog$RouteComparator:
    android.support.v7.app.MediaRouteChooserDialog$RouteComparator sInstance -> sInstance
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    int compare(android.support.v7.media.MediaRouter$RouteInfo,android.support.v7.media.MediaRouter$RouteInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.statusbar.AlphaOptimizedButton -> com.android.systemui.statusbar.AlphaOptimizedButton:
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry:
android.support.v7.widget.ActionMenuPresenter$SavedState$1 -> android.support.v7.widget.ActionMenuPresenter$SavedState$1:
    android.support.v7.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    android.support.v7.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.plugins.R$interpolator -> com.android.systemui.plugins.R$interpolator:
    int assist_disclosure_trace -> assist_disclosure_trace
    int error_to_trustedstate_animation_interpolator_0 -> error_to_trustedstate_animation_interpolator_0
    int error_to_trustedstate_animation_interpolator_1 -> error_to_trustedstate_animation_interpolator_1
    int error_to_trustedstate_animation_interpolator_2 -> error_to_trustedstate_animation_interpolator_2
    int error_to_trustedstate_animation_interpolator_3 -> error_to_trustedstate_animation_interpolator_3
    int error_to_trustedstate_animation_interpolator_4 -> error_to_trustedstate_animation_interpolator_4
    int error_to_trustedstate_animation_interpolator_5 -> error_to_trustedstate_animation_interpolator_5
    int error_to_trustedstate_animation_interpolator_6 -> error_to_trustedstate_animation_interpolator_6
    int ic_caret_down_animation_interpolator_0 -> ic_caret_down_animation_interpolator_0
    int ic_caret_up_animation_interpolator_0 -> ic_caret_up_animation_interpolator_0
    int ic_fingerprint_toerror_animation_interpolator_0 -> ic_fingerprint_toerror_animation_interpolator_0
    int ic_fingerprint_toerror_animation_interpolator_1 -> ic_fingerprint_toerror_animation_interpolator_1
    int ic_fingerprint_toerror_animation_interpolator_2 -> ic_fingerprint_toerror_animation_interpolator_2
    int ic_fingerprint_toerror_animation_interpolator_3 -> ic_fingerprint_toerror_animation_interpolator_3
    int ic_fingerprint_toerror_animation_interpolator_4 -> ic_fingerprint_toerror_animation_interpolator_4
    int ic_fingerprint_toerror_animation_interpolator_5 -> ic_fingerprint_toerror_animation_interpolator_5
    int ic_fingerprint_toerror_animation_interpolator_6 -> ic_fingerprint_toerror_animation_interpolator_6
    int ic_fingerprint_tofp_animation_interpolator_0 -> ic_fingerprint_tofp_animation_interpolator_0
    int ic_fingerprint_tofp_animation_interpolator_1 -> ic_fingerprint_tofp_animation_interpolator_1
    int ic_fingerprint_tofp_animation_interpolator_2 -> ic_fingerprint_tofp_animation_interpolator_2
    int ic_fingerprint_tofp_animation_interpolator_3 -> ic_fingerprint_tofp_animation_interpolator_3
    int ic_fingerprint_tofp_animation_interpolator_4 -> ic_fingerprint_tofp_animation_interpolator_4
    int ic_fingerprint_tofp_animation_interpolator_5 -> ic_fingerprint_tofp_animation_interpolator_5
    int ic_landscape_to_rotate_animation_interpolator_0 -> ic_landscape_to_rotate_animation_interpolator_0
    int ic_rotate_to_landscape_animation_interpolator_0 -> ic_rotate_to_landscape_animation_interpolator_0
    int ic_rotate_to_portrait_animation_interpolator_0 -> ic_rotate_to_portrait_animation_interpolator_0
    int ic_signal_workmode_disable_animation_interpolator_0 -> ic_signal_workmode_disable_animation_interpolator_0
    int ic_signal_workmode_disable_animation_interpolator_1 -> ic_signal_workmode_disable_animation_interpolator_1
    int ic_signal_workmode_disable_animation_interpolator_2 -> ic_signal_workmode_disable_animation_interpolator_2
    int ic_signal_workmode_disable_animation_interpolator_3 -> ic_signal_workmode_disable_animation_interpolator_3
    int ic_signal_workmode_disable_animation_interpolator_4 -> ic_signal_workmode_disable_animation_interpolator_4
    int ic_signal_workmode_disable_animation_interpolator_5 -> ic_signal_workmode_disable_animation_interpolator_5
    int ic_signal_workmode_disable_cross_1_pathdata_interpolator -> ic_signal_workmode_disable_cross_1_pathdata_interpolator
    int ic_signal_workmode_enable_animation_interpolator_0 -> ic_signal_workmode_enable_animation_interpolator_0
    int ic_signal_workmode_enable_animation_interpolator_1 -> ic_signal_workmode_enable_animation_interpolator_1
    int ic_signal_workmode_enable_animation_interpolator_2 -> ic_signal_workmode_enable_animation_interpolator_2
    int ic_signal_workmode_enable_animation_interpolator_3 -> ic_signal_workmode_enable_animation_interpolator_3
    int ic_signal_workmode_enable_animation_interpolator_4 -> ic_signal_workmode_enable_animation_interpolator_4
    int ic_signal_workmode_enable_animation_interpolator_5 -> ic_signal_workmode_enable_animation_interpolator_5
    int ic_signal_workmode_enable_cross_1_pathdata_interpolator -> ic_signal_workmode_enable_cross_1_pathdata_interpolator
    int ic_signal_workmode_enable_mask_pathdata_interpolator -> ic_signal_workmode_enable_mask_pathdata_interpolator
    int lockscreen_fingerprint_draw_off_animation_interpolator_0 -> lockscreen_fingerprint_draw_off_animation_interpolator_0
    int lockscreen_fingerprint_draw_off_animation_interpolator_1 -> lockscreen_fingerprint_draw_off_animation_interpolator_1
    int lockscreen_fingerprint_draw_on_animation_interpolator_0 -> lockscreen_fingerprint_draw_on_animation_interpolator_0
    int lockscreen_fingerprint_draw_on_animation_interpolator_1 -> lockscreen_fingerprint_draw_on_animation_interpolator_1
    int mr_fast_out_slow_in -> mr_fast_out_slow_in
    int mr_linear_out_slow_in -> mr_linear_out_slow_in
    int recents_from_launcher_exit_interpolator -> recents_from_launcher_exit_interpolator
    int recents_launch_next_affiliated_task_bounce_scale -> recents_launch_next_affiliated_task_bounce_scale
    int recents_launch_prev_affiliated_task_bounce_ydelta -> recents_launch_prev_affiliated_task_bounce_ydelta
    int recents_to_launcher_enter_interpolator -> recents_to_launcher_enter_interpolator
    int trusted_state_to_error_animation_interpolator_0 -> trusted_state_to_error_animation_interpolator_0
    int trusted_state_to_error_animation_interpolator_1 -> trusted_state_to_error_animation_interpolator_1
    int trusted_state_to_error_animation_interpolator_2 -> trusted_state_to_error_animation_interpolator_2
    int trusted_state_to_error_animation_interpolator_3 -> trusted_state_to_error_animation_interpolator_3
    int trusted_state_to_error_animation_interpolator_4 -> trusted_state_to_error_animation_interpolator_4
    int trusted_state_to_error_animation_interpolator_5 -> trusted_state_to_error_animation_interpolator_5
    void <init>() -> <init>
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelClosed(android.view.View) -> onPanelClosed
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
com.android.systemui.keyguard.-$Lambda$-f994CCMz_70U6Oz06JHEMP788Q$2 -> com.android.systemui.keyguard.-$Lambda$-f994CCMz_70U6Oz06JHEMP788Q$2:
    boolean -$f0 -> -$f0
    int -$f1 -> -$f1
    void <init>(boolean,int) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.ActivityStarterDelegate -> com.android.systemui.ActivityStarterDelegate:
    com.android.systemui.plugins.ActivityStarter mActualStarter -> mActualStarter
    void <init>() -> <init>
    void postQSRunnableDismissingKeyguard(java.lang.Runnable) -> postQSRunnableDismissingKeyguard
    void postStartActivityDismissingKeyguard(android.app.PendingIntent) -> postStartActivityDismissingKeyguard
    void postStartActivityDismissingKeyguard(android.content.Intent,int) -> postStartActivityDismissingKeyguard
    void setActivityStarterImpl(com.android.systemui.plugins.ActivityStarter) -> setActivityStarterImpl
    void startActivity(android.content.Intent,boolean) -> startActivity
    void startActivity(android.content.Intent,boolean,boolean) -> startActivity
    void startActivity(android.content.Intent,boolean,com.android.systemui.plugins.ActivityStarter$Callback) -> startActivity
    void startPendingIntentDismissingKeyguard(android.app.PendingIntent) -> startPendingIntentDismissingKeyguard
com.android.systemui.statusbar.FlingAnimationUtils$VelocityInterpolator -> com.android.systemui.statusbar.FlingAnimationUtils$VelocityInterpolator:
    float mDiff -> mDiff
    float mDurationSeconds -> mDurationSeconds
    float mVelocity -> mVelocity
    void <init>(float,float,float) -> <init>
    float getInterpolation(float) -> getInterpolation
    void <init>(float,float,float,com.android.systemui.statusbar.FlingAnimationUtils$VelocityInterpolator) -> <init>
com.android.systemui.statusbar.car.CarNavigationButton -> com.android.systemui.statusbar.car.CarNavigationButton:
    com.android.keyguard.AlphaOptimizedImageButton mIcon -> mIcon
    com.android.keyguard.AlphaOptimizedImageButton mMoreIcon -> mMoreIcon
    void setResources(android.graphics.drawable.Drawable) -> setResources
    void setSelected(boolean,boolean) -> setSelected
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder -> com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder:
    com.android.systemui.statusbar.policy.ExtensionController$Extension build() -> build
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withCallback(java.util.function.Consumer) -> withCallback
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withDefault(java.util.function.Supplier) -> withDefault
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withFeature(java.lang.String,java.util.function.Supplier) -> withFeature
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withPlugin(java.lang.Class) -> withPlugin
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withPlugin(java.lang.Class,java.lang.String,com.android.systemui.statusbar.policy.ExtensionController$PluginConverter) -> withPlugin
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder withTunerFactory(com.android.systemui.statusbar.policy.ExtensionController$TunerFactory) -> withTunerFactory
com.android.systemui.statusbar.policy.BatteryControllerImpl -> com.android.systemui.statusbar.policy.BatteryControllerImpl:
    boolean DEBUG -> DEBUG
    java.util.ArrayList mChangeCallbacks -> mChangeCallbacks
    boolean mCharged -> mCharged
    boolean mCharging -> mCharging
    android.content.Context mContext -> mContext
    boolean mDemoMode -> mDemoMode
    android.os.Handler mHandler -> mHandler
    boolean mHasReceivedBattery -> mHasReceivedBattery
    int mLevel -> mLevel
    boolean mPluggedIn -> mPluggedIn
    android.os.PowerManager mPowerManager -> mPowerManager
    boolean mPowerSave -> mPowerSave
    boolean mTestmode -> mTestmode
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.BatteryController$BatteryStateChangeCallback) -> addCallback
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void fireBatteryLevelChanged() -> fireBatteryLevelChanged
    void firePowerSaveChanged() -> firePowerSaveChanged
    boolean isPowerSave() -> isPowerSave
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void registerReceiver() -> registerReceiver
    void removeCallback(com.android.systemui.statusbar.policy.BatteryController$BatteryStateChangeCallback) -> removeCallback
    void setPowerSave(boolean) -> setPowerSave
    void setPowerSaveMode(boolean) -> setPowerSaveMode
    void updatePowerSave() -> updatePowerSave
    void <clinit>() -> <clinit>
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    android.os.Handler -get0(com.android.systemui.statusbar.policy.BatteryControllerImpl) -> -get0
    boolean -get1(com.android.systemui.statusbar.policy.BatteryControllerImpl) -> -get1
    boolean -set0(com.android.systemui.statusbar.policy.BatteryControllerImpl,boolean) -> -set0
android.support.v17.leanback.widget.GuidedActionItemContainer -> android.support.v17.leanback.widget.GuidedActionItemContainer:
    boolean mFocusOutAllowed -> mFocusOutAllowed
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
com.android.systemui.qs.tileimpl.-$Lambda$WsTIdrONXN0xqrg6dEUrWDnuqDU -> com.android.systemui.qs.tileimpl.-$Lambda$WsTIdrONXN0xqrg6dEUrWDnuqDU:
    float -$f0 -> -$f0
    float -$f1 -> -$f1
    float -$f2 -> -$f2
    float -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    void <init>(float,float,float,float,java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.keyguard.KeyguardSimPukView$CheckSimPuk -> com.android.keyguard.KeyguardSimPukView$CheckSimPuk:
    java.lang.String mPin -> mPin
    java.lang.String mPuk -> mPuk
    int mSubId -> mSubId
    com.android.keyguard.KeyguardSimPukView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSimPukView,java.lang.String,java.lang.String,int) -> <init>
    void onSimLockChangedResponse(int,int) -> onSimLockChangedResponse
    void run() -> run
android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate -> android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate:
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> mItemDelegate
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.support.v4.view.AccessibilityDelegateCompat mDefaultItemDelegate -> mDefaultItemDelegate
    android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.SuggestionsAdapter:
    boolean mClosed -> mClosed
    int mIconName2Col -> mIconName2Col
    int mFlagsCol -> mFlagsCol
    int mText2Col -> mText2Col
    int mText2UrlCol -> mText2UrlCol
    android.content.Context mProviderContext -> mProviderContext
    android.app.SearchableInfo mSearchable -> mSearchable
    android.content.res.ColorStateList mUrlColor -> mUrlColor
    int mIconName1Col -> mIconName1Col
    int mQueryRefinement -> mQueryRefinement
    int mCommitIconResId -> mCommitIconResId
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    android.support.v7.widget.SearchView mSearchView -> mSearchView
    int mText1Col -> mText1Col
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    boolean hasStableIds() -> hasStableIds
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
android.support.v7.util.ListUpdateCallback -> android.support.v7.util.ListUpdateCallback:
    void onMoved(int,int) -> onMoved
    void onRemoved(int,int) -> onRemoved
    void onChanged(int,int,java.lang.Object) -> onChanged
    void onInserted(int,int) -> onInserted
com.android.settingslib.bluetooth.A2dpSinkProfile$A2dpSinkServiceListener -> com.android.settingslib.bluetooth.A2dpSinkProfile$A2dpSinkServiceListener:
    com.android.settingslib.bluetooth.A2dpSinkProfile this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.A2dpSinkProfile) -> <init>
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
    void <init>(com.android.settingslib.bluetooth.A2dpSinkProfile,com.android.settingslib.bluetooth.A2dpSinkProfile$A2dpSinkServiceListener) -> <init>
android.support.v4.app.BaseFragmentActivityApi16 -> android.support.v4.app.BaseFragmentActivityApi16:
    boolean mStartedActivityFromFragment -> mStartedActivityFromFragment
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    void <init>() -> <init>
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    java.lang.Runnable mRunShowSoftInputIfNecessary -> mRunShowSoftInputIfNecessary
    boolean mHasPendingShowSoftInputRequest -> mHasPendingShowSoftInputRequest
    int mThreshold -> mThreshold
    android.support.v7.widget.SearchView mSearchView -> mSearchView
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    boolean -wrap0(android.support.v7.widget.SearchView$SearchAutoComplete) -> -wrap0
    void onFinishInflate() -> onFinishInflate
    void showSoftInputIfNecessary() -> showSoftInputIfNecessary
    void setThreshold(int) -> setThreshold
    void -wrap1(android.support.v7.widget.SearchView$SearchAutoComplete,boolean) -> -wrap1
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    boolean enoughToFilter() -> enoughToFilter
    int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    void setImeVisibility(boolean) -> setImeVisibility
    boolean isEmpty() -> isEmpty
    void replaceText(java.lang.CharSequence) -> replaceText
    void -wrap2(android.support.v7.widget.SearchView$SearchAutoComplete) -> -wrap2
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    void performCompletion() -> performCompletion
com.android.systemui.statusbar.NotificationShelf$1 -> com.android.systemui.statusbar.NotificationShelf$1:
    com.android.systemui.statusbar.NotificationShelf this$0 -> this$0
    com.android.systemui.statusbar.StatusBarIconView val$icon -> val$icon
    com.android.systemui.statusbar.ExpandableNotificationRow val$row -> val$row
    void <init>(com.android.systemui.statusbar.NotificationShelf,com.android.systemui.statusbar.StatusBarIconView,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v7.app.AppCompatViewInflater -> android.support.v7.app.AppCompatViewInflater:
    java.util.Map sConstructorMap -> sConstructorMap
    java.lang.Class[] sConstructorSignature -> sConstructorSignature
    java.lang.Object[] mConstructorArgs -> mConstructorArgs
    java.lang.String[] sClassPrefixList -> sClassPrefixList
    int[] sOnClickAttrs -> sOnClickAttrs
    android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    void <clinit>() -> <clinit>
    android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    void <init>() -> <init>
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    android.view.View createView(android.content.Context,java.lang.String,java.lang.String) -> createView
com.android.systemui.statusbar.phone.SettingsButton$1 -> com.android.systemui.statusbar.phone.SettingsButton$1:
    com.android.systemui.statusbar.phone.SettingsButton this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.SettingsButton) -> <init>
    void run() -> run
com.android.systemui.statusbar.DismissView$DismissViewState -> com.android.systemui.statusbar.DismissView$DismissViewState:
    com.android.systemui.statusbar.DismissView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.DismissView) -> <init>
    void applyToView(android.view.View) -> applyToView
com.android.systemui.screenshot.GlobalScreenshot$8 -> com.android.systemui.screenshot.GlobalScreenshot$8:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.keyguard.KeyguardEsimArea$1 -> com.android.keyguard.KeyguardEsimArea$1:
    com.android.keyguard.KeyguardEsimArea this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardEsimArea) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.recents.views.TaskViewHeader$1 -> com.android.systemui.recents.views.TaskViewHeader$1:
    com.android.systemui.recents.views.TaskViewHeader this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskViewHeader,long,long) -> <init>
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.android.systemui.pip.tv.PipManager$PinnedStackListener -> com.android.systemui.pip.tv.PipManager$PinnedStackListener:
    com.android.systemui.pip.tv.PipManager this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipManager) -> <init>
    void onActionsChanged(android.content.pm.ParceledListSlice) -> onActionsChanged
    void onImeVisibilityChanged(boolean,int) -> onImeVisibilityChanged
    void onListenerRegistered(android.view.IPinnedStackController) -> onListenerRegistered
    void onMinimizedStateChanged(boolean) -> onMinimizedStateChanged
    void onMovementBoundsChanged(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,int) -> onMovementBoundsChanged
    void lambda$-com_android_systemui_pip_tv_PipManager$PinnedStackListener_7796(android.graphics.Rect) -> lambda$-com_android_systemui_pip_tv_PipManager$PinnedStackListener_7796
    void lambda$-com_android_systemui_pip_tv_PipManager$PinnedStackListener_8032() -> lambda$-com_android_systemui_pip_tv_PipManager$PinnedStackListener_8032
    void <init>(com.android.systemui.pip.tv.PipManager,com.android.systemui.pip.tv.PipManager$PinnedStackListener) -> <init>
com.android.systemui.statusbar.policy.WifiSignalController$WifiHandler -> com.android.systemui.statusbar.policy.WifiSignalController$WifiHandler:
    com.android.systemui.statusbar.policy.WifiSignalController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.WifiSignalController,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.statusbar.notification.CustomInterpolatorTransformation -> com.android.systemui.statusbar.notification.CustomInterpolatorTransformation:
    int mViewType -> mViewType
    void <init>(int) -> <init>
    boolean hasCustomTransformation() -> hasCustomTransformation
    boolean transformFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    boolean transformTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float) -> transformTo
com.android.systemui.statusbar.policy.NextAlarmController$NextAlarmChangeCallback -> com.android.systemui.statusbar.policy.NextAlarmController$NextAlarmChangeCallback:
    void onNextAlarmChanged(android.app.AlarmManager$AlarmClockInfo) -> onNextAlarmChanged
android.support.v7.view.menu.ExpandedMenuView -> android.support.v7.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void <clinit>() -> <clinit>
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
    void onDetachedFromWindow() -> onDetachedFromWindow
    void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
com.android.systemui.recents.misc.DozeTrigger -> com.android.systemui.recents.misc.DozeTrigger:
    int mDozeDurationMilliseconds -> mDozeDurationMilliseconds
    java.lang.Runnable mDozeRunnable -> mDozeRunnable
    android.os.Handler mHandler -> mHandler
    boolean mIsAsleep -> mIsAsleep
    boolean mIsDozing -> mIsDozing
    java.lang.Runnable mOnSleepRunnable -> mOnSleepRunnable
    void <init>(int,java.lang.Runnable) -> <init>
    boolean isAsleep() -> isAsleep
    void stopDozing() -> stopDozing
    boolean isDozing() -> isDozing
    void startDozing() -> startDozing
    void poke() -> poke
    void forcePoke() -> forcePoke
    void setDozeDuration(int) -> setDozeDuration
android.support.v7.app.MediaRouteControllerDialog$1 -> android.support.v7.app.MediaRouteControllerDialog$1:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
android.support.v7.app.MediaRouterThemeHelper -> android.support.v7.app.MediaRouterThemeHelper:
    int getButtonTextColor(android.content.Context) -> getButtonTextColor
    void setVolumeSliderColor(android.content.Context,android.support.v7.app.MediaRouteVolumeSlider,android.view.View) -> setVolumeSliderColor
    int getControllerColor(android.content.Context,int) -> getControllerColor
    float getDisabledAlpha(android.content.Context) -> getDisabledAlpha
    int createThemeForDialog(android.content.Context,int) -> createThemeForDialog
    android.content.Context createThemedContext(android.content.Context,int) -> createThemedContext
    int getStyledRouterThemeId(android.content.Context,int) -> getStyledRouterThemeId
    int getThemeResource(android.content.Context,int) -> getThemeResource
    boolean isLightTheme(android.content.Context) -> isLightTheme
    void <init>() -> <init>
    int getThemeColor(android.content.Context,int,int) -> getThemeColor
    int getAlertDialogResolvedTheme(android.content.Context,int) -> getAlertDialogResolvedTheme
    void setMediaControlsBackgroundColor(android.content.Context,android.view.View,android.view.View,boolean) -> setMediaControlsBackgroundColor
com.android.systemui.pip.phone.-$Lambda$NAHws3nqeyxCJVceltMK08RHs0M -> com.android.systemui.pip.phone.-$Lambda$NAHws3nqeyxCJVceltMK08RHs0M:
    byte $id -> $id
    boolean -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,boolean,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
com.android.systemui.statusbar.policy.AccessPointControllerImpl -> com.android.systemui.statusbar.policy.AccessPointControllerImpl:
    boolean DEBUG -> DEBUG
    int[] ICONS -> ICONS
    java.util.ArrayList mCallbacks -> mCallbacks
    android.net.wifi.WifiManager$ActionListener mConnectListener -> mConnectListener
    android.content.Context mContext -> mContext
    int mCurrentUser -> mCurrentUser
    android.os.UserManager mUserManager -> mUserManager
    com.android.settingslib.wifi.WifiTracker mWifiTracker -> mWifiTracker
    void <init>(android.content.Context,android.os.Looper) -> <init>
    void onUserSwitched(int) -> onUserSwitched
    void dump(java.io.PrintWriter) -> dump
    void addAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController$AccessPointController$AccessPointCallback) -> addAccessPointCallback
    boolean canConfigWifi() -> canConfigWifi
    boolean connect(com.android.settingslib.wifi.AccessPoint) -> connect
    void fireAcccessPointsCallback(java.util.List) -> fireAcccessPointsCallback
    void fireSettingsIntentCallback(android.content.Intent) -> fireSettingsIntentCallback
    int getIcon(com.android.settingslib.wifi.AccessPoint) -> getIcon
    void onAccessPointsChanged() -> onAccessPointsChanged
    void onConnectedChanged() -> onConnectedChanged
    void onWifiStateChanged(int) -> onWifiStateChanged
    void removeAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController$AccessPointController$AccessPointCallback) -> removeAccessPointCallback
    void scanForAccessPoints() -> scanForAccessPoints
    void <clinit>() -> <clinit>
    boolean -get0() -> -get0
com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$2 -> com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$2:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.recents.model.HighResThumbnailLoader -> com.android.systemui.recents.model.HighResThumbnailLoader:
    boolean mFlingingFast -> mFlingingFast
    boolean mIsLowRamDevice -> mIsLowRamDevice
    java.util.ArrayDeque mLoadQueue -> mLoadQueue
    java.lang.Thread mLoadThread -> mLoadThread
    java.lang.Runnable mLoader -> mLoader
    boolean mLoaderIdling -> mLoaderIdling
    boolean mLoading -> mLoading
    android.util.ArraySet mLoadingTasks -> mLoadingTasks
    android.os.Handler mMainThreadHandler -> mMainThreadHandler
    com.android.systemui.recents.misc.SystemServicesProxy mSystemServicesProxy -> mSystemServicesProxy
    boolean mTaskLoadQueueIdle -> mTaskLoadQueueIdle
    boolean mVisible -> mVisible
    java.util.ArrayList mVisibleTasks -> mVisibleTasks
    void setFlingingFast(boolean) -> setFlingingFast
    void onTaskVisible(com.android.systemui.recents.model.Task) -> onTaskVisible
    void onTaskInvisible(com.android.systemui.recents.model.Task) -> onTaskInvisible
    void <init>(com.android.systemui.recents.misc.SystemServicesProxy,android.os.Looper,boolean) -> <init>
    void setTaskLoadQueueIdle(boolean) -> setTaskLoadQueueIdle
    void setVisible(boolean) -> setVisible
    boolean isLoading() -> isLoading
    void onTaskDataLoaded(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.ThumbnailData) -> onTaskDataLoaded
    void onTaskDataUnloaded() -> onTaskDataUnloaded
    void onTaskStackIdChanged() -> onTaskStackIdChanged
    void setLoading(boolean) -> setLoading
    void startLoading() -> startLoading
    void stopLoading() -> stopLoading
    void updateLoading() -> updateLoading
    void waitForLoaderIdle() -> waitForLoaderIdle
    java.util.ArrayDeque -get0(com.android.systemui.recents.model.HighResThumbnailLoader) -> -get0
    boolean -get1(com.android.systemui.recents.model.HighResThumbnailLoader) -> -get1
    android.util.ArraySet -get2(com.android.systemui.recents.model.HighResThumbnailLoader) -> -get2
    android.os.Handler -get3(com.android.systemui.recents.model.HighResThumbnailLoader) -> -get3
    com.android.systemui.recents.misc.SystemServicesProxy -get4(com.android.systemui.recents.model.HighResThumbnailLoader) -> -get4
    java.util.ArrayList -get5(com.android.systemui.recents.model.HighResThumbnailLoader) -> -get5
    boolean -set0(com.android.systemui.recents.model.HighResThumbnailLoader,boolean) -> -set0
com.android.systemui.statusbar.ExpandableNotificationRow$6 -> com.android.systemui.statusbar.ExpandableNotificationRow$6:
    com.android.systemui.statusbar.ExpandableNotificationRow this$0 -> this$0
    android.view.View val$hiddenView -> val$hiddenView
    void <init>(com.android.systemui.statusbar.ExpandableNotificationRow,android.view.View) -> <init>
    void run() -> run
com.android.systemui.statusbar.KeyboardShortcuts$2 -> com.android.systemui.statusbar.KeyboardShortcuts$2:
    com.android.systemui.statusbar.KeyboardShortcuts this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyboardShortcuts) -> <init>
    int compare(android.view.KeyboardShortcutInfo,android.view.KeyboardShortcutInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.globalactions.GlobalActionsDialog$8 -> com.android.systemui.globalactions.GlobalActionsDialog$8:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,int,int) -> <init>
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm$Result -> com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm$Result:
    int clockX -> clockX
    int clockY -> clockY
    float clockAlpha -> clockAlpha
    float clockScale -> clockScale
    int stackScrollerPadding -> stackScrollerPadding
    int stackScrollerPaddingAdjustment -> stackScrollerPaddingAdjustment
    void <init>() -> <init>
com.android.systemui.statusbar.phone.ScrimController$1 -> com.android.systemui.statusbar.phone.ScrimController$1:
    com.android.systemui.statusbar.phone.ScrimController this$0 -> this$0
    android.view.View val$scrim -> val$scrim
    void <init>(com.android.systemui.statusbar.phone.ScrimController,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.annotation.StyleRes -> android.support.annotation.StyleRes:
com.android.systemui.statusbar.phone.NotificationIconContainer$1 -> com.android.systemui.statusbar.phone.NotificationIconContainer$1:
    com.android.systemui.statusbar.stack.AnimationFilter mAnimationFilter -> mAnimationFilter
    void <init>() -> <init>
    com.android.systemui.statusbar.stack.AnimationFilter getAnimationFilter() -> getAnimationFilter
com.android.systemui.classifier.-$Lambda$cbp1GoQjSW3ocYuW3wmIobRpooQ$2 -> com.android.systemui.classifier.-$Lambda$cbp1GoQjSW3ocYuW3wmIobRpooQ$2:
    int -$f0 -> -$f0
    int -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    void <init>(int,int,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.graphics.drawable.AnimatorInflaterCompat -> android.support.graphics.drawable.AnimatorInflaterCompat:
    void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
    android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    boolean isColorType(int) -> isColorType
    android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    void <init>() -> <init>
    int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
com.android.systemui.plugins.VolumeDialogController -> com.android.systemui.plugins.VolumeDialogController:
    int VERSION -> VERSION
    void getState() -> getState
    boolean hasVibrator() -> hasVibrator
    void notifyVisible(boolean) -> notifyVisible
    void setActiveStream(int) -> setActiveStream
    void setStreamVolume(int,int) -> setStreamVolume
    android.media.AudioManager getAudioManager() -> getAudioManager
    void setRingerMode(int,boolean) -> setRingerMode
    void removeCallback(com.android.systemui.plugins.VolumeDialogController$Callbacks) -> removeCallback
    void userActivity() -> userActivity
    void addCallback(com.android.systemui.plugins.VolumeDialogController$Callbacks,android.os.Handler) -> addCallback
    void vibrate() -> vibrate
com.android.systemui.classifier.SpeedVarianceEvaluator -> com.android.systemui.classifier.SpeedVarianceEvaluator:
    void <init>() -> <init>
    float evaluate(float) -> evaluate
android.support.v14.preference.PreferenceDialogFragment -> android.support.v14.preference.PreferenceDialogFragment:
    android.graphics.drawable.BitmapDrawable mDialogIcon -> mDialogIcon
    java.lang.CharSequence mDialogTitle -> mDialogTitle
    java.lang.CharSequence mNegativeButtonText -> mNegativeButtonText
    java.lang.CharSequence mDialogMessage -> mDialogMessage
    int mDialogLayoutRes -> mDialogLayoutRes
    java.lang.CharSequence mPositiveButtonText -> mPositiveButtonText
    android.support.v7.preference.DialogPreference mPreference -> mPreference
    int mWhichButtonClicked -> mWhichButtonClicked
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateDialogView(android.content.Context) -> onCreateDialogView
    boolean needInputMethod() -> needInputMethod
    void onDialogClosed(boolean) -> onDialogClosed
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    void requestInputMethod(android.app.Dialog) -> requestInputMethod
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDismiss(android.content.DialogInterface) -> onDismiss
    android.support.v7.preference.DialogPreference getPreference() -> getPreference
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onBindDialogView(android.view.View) -> onBindDialogView
com.android.systemui.qs.AlphaControlledSignalTileView -> com.android.systemui.qs.AlphaControlledSignalTileView:
    void <init>(android.content.Context) -> <init>
    com.android.systemui.qs.tileimpl.SlashImageView createSlashImageView(android.content.Context) -> createSlashImageView
android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy -> android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy:
    android.support.v4.media.MediaBrowserCompatApi23$ItemCallback mItemCallback -> mItemCallback
    void <init>(android.support.v4.media.MediaBrowserCompatApi23$ItemCallback) -> <init>
    void onItemLoaded(android.media.browse.MediaBrowser$MediaItem) -> onItemLoaded
    void onError(java.lang.String) -> onError
com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$5 -> com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$5:
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> <init>
    void run() -> run
com.android.systemui.recents.views.TaskViewTransform$1 -> com.android.systemui.recents.views.TaskViewTransform$1:
    android.graphics.Rect mTmpRect -> mTmpRect
    void <init>(java.lang.Class,java.lang.String) -> <init>
    android.graphics.Rect get(android.view.View) -> get
    void set(android.view.View,android.graphics.Rect) -> set
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.volume.ZenModePanel$2 -> com.android.systemui.volume.ZenModePanel$2:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    void <init>(com.android.systemui.volume.ZenModePanel) -> <init>
    void onInteraction() -> onInteraction
    void onSelected(java.lang.Object,boolean) -> onSelected
android.support.v7.appcompat.R$layout -> android.support.v7.appcompat.R$layout:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_header_item_layout -> abc_popup_menu_header_item_layout
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int tooltip -> tooltip
    void <init>() -> <init>
com.android.systemui.qs.PagedTileLayout -> com.android.systemui.qs.PagedTileLayout:
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    java.lang.Runnable mDistribute -> mDistribute
    boolean mListening -> mListening
    int mNumPages -> mNumPages
    boolean mOffPage -> mOffPage
    com.android.systemui.qs.PageIndicator mPageIndicator -> mPageIndicator
    com.android.systemui.qs.PagedTileLayout$PageListener mPageListener -> mPageListener
    java.util.ArrayList mPages -> mPages
    int mPosition -> mPosition
    java.util.ArrayList mTiles -> mTiles
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addTile(com.android.systemui.qs.QSPanel$TileRecord) -> addTile
    void distributeTiles() -> distributeTiles
    int getColumnCount() -> getColumnCount
    int getOffsetTop(com.android.systemui.qs.QSPanel$TileRecord) -> getOffsetTop
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onFinishInflate() -> onFinishInflate
    void onMeasure(int,int) -> onMeasure
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void postDistributeTiles() -> postDistributeTiles
    void removeTile(com.android.systemui.qs.QSPanel$TileRecord) -> removeTile
    void setCurrentItem(int,boolean) -> setCurrentItem
    void setCurrentPage(int,boolean) -> setCurrentPage
    void setListening(boolean) -> setListening
    void setPageIndicator(com.android.systemui.qs.PageIndicator) -> setPageIndicator
    void setPageListener(com.android.systemui.qs.PagedTileLayout$PageListener) -> setPageListener
    void setPageListening(int,boolean) -> setPageListening
    boolean updateResources() -> updateResources
    int -get0(com.android.systemui.qs.PagedTileLayout) -> -get0
    com.android.systemui.qs.PageIndicator -get1(com.android.systemui.qs.PagedTileLayout) -> -get1
    com.android.systemui.qs.PagedTileLayout$PageListener -get2(com.android.systemui.qs.PagedTileLayout) -> -get2
    java.util.ArrayList -get3(com.android.systemui.qs.PagedTileLayout) -> -get3
    void -wrap0(com.android.systemui.qs.PagedTileLayout) -> -wrap0
    void -wrap1(com.android.systemui.qs.PagedTileLayout,int,boolean) -> -wrap1
com.android.systemui.recents.events.component.ExpandPipEvent -> com.android.systemui.recents.events.component.ExpandPipEvent:
    boolean clearThumbnailWindows -> clearThumbnailWindows
    void <init>() -> <init>
com.android.systemui.statusbar.policy.KeyButtonRipple$LogInterpolator -> com.android.systemui.statusbar.policy.KeyButtonRipple$LogInterpolator:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <init>(com.android.systemui.statusbar.policy.KeyButtonRipple$LogInterpolator) -> <init>
com.android.keyguard.KeyguardMessageArea$1 -> com.android.keyguard.KeyguardMessageArea$1:
    com.android.keyguard.KeyguardMessageArea this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardMessageArea) -> <init>
    void onFinishedGoingToSleep(int) -> onFinishedGoingToSleep
    void onStartedWakingUp() -> onStartedWakingUp
com.android.systemui.ConfigurationChangedReceiver -> com.android.systemui.ConfigurationChangedReceiver:
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.android.systemui.statusbar.policy.NetworkControllerImpl -> com.android.systemui.statusbar.policy.NetworkControllerImpl:
    boolean CHATTY -> CHATTY
    boolean DEBUG -> DEBUG
    com.android.systemui.statusbar.policy.AccessPointControllerImpl mAccessPoints -> mAccessPoints
    boolean mAirplaneMode -> mAirplaneMode
    com.android.systemui.statusbar.policy.CallbackHandler mCallbackHandler -> mCallbackHandler
    com.android.systemui.statusbar.policy.NetworkControllerImpl$Config mConfig -> mConfig
    java.util.BitSet mConnectedTransports -> mConnectedTransports
    android.net.ConnectivityManager mConnectivityManager -> mConnectivityManager
    android.content.Context mContext -> mContext
    java.util.List mCurrentSubscriptions -> mCurrentSubscriptions
    int mCurrentUserId -> mCurrentUserId
    com.android.systemui.statusbar.policy.DataSaverController mDataSaverController -> mDataSaverController
    com.android.settingslib.net.DataUsageController mDataUsageController -> mDataUsageController
    com.android.systemui.statusbar.policy.MobileSignalController mDefaultSignalController -> mDefaultSignalController
    boolean mDemoInetCondition -> mDemoInetCondition
    boolean mDemoMode -> mDemoMode
    com.android.systemui.statusbar.policy.WifiSignalController$WifiState mDemoWifiState -> mDemoWifiState
    int mEmergencySource -> mEmergencySource
    com.android.systemui.statusbar.policy.EthernetSignalController mEthernetSignalController -> mEthernetSignalController
    boolean mHasMobileDataFeature -> mHasMobileDataFeature
    boolean mHasNoSubs -> mHasNoSubs
    boolean mInetCondition -> mInetCondition
    boolean mIsEmergency -> mIsEmergency
    android.telephony.ServiceState mLastServiceState -> mLastServiceState
    boolean mListening -> mListening
    java.util.Locale mLocale -> mLocale
    android.util.SparseArray mMobileSignalControllers -> mMobileSignalControllers
    android.telephony.TelephonyManager mPhone -> mPhone
    android.os.Handler mReceiverHandler -> mReceiverHandler
    java.lang.Runnable mRegisterListeners -> mRegisterListeners
    boolean mSimDetected -> mSimDetected
    com.android.systemui.statusbar.policy.NetworkControllerImpl$SubscriptionDefaults mSubDefaults -> mSubDefaults
    android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubscriptionListener -> mSubscriptionListener
    android.telephony.SubscriptionManager mSubscriptionManager -> mSubscriptionManager
    boolean mUserSetup -> mUserSetup
    com.android.systemui.settings.CurrentUserTracker mUserTracker -> mUserTracker
    java.util.BitSet mValidatedTransports -> mValidatedTransports
    android.net.wifi.WifiManager mWifiManager -> mWifiManager
    com.android.systemui.statusbar.policy.WifiSignalController mWifiSignalController -> mWifiSignalController
    void <init>(android.content.Context,android.os.Looper,com.android.systemui.statusbar.policy.DeviceProvisionedController) -> <init>
    void <init>(android.content.Context,android.net.ConnectivityManager,android.telephony.TelephonyManager,android.net.wifi.WifiManager,android.telephony.SubscriptionManager,com.android.systemui.statusbar.policy.NetworkControllerImpl$Config,android.os.Looper,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.AccessPointControllerImpl,com.android.settingslib.net.DataUsageController,com.android.systemui.statusbar.policy.NetworkControllerImpl$SubscriptionDefaults,com.android.systemui.statusbar.policy.DeviceProvisionedController) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.NetworkController$SignalCallback) -> addCallback
    void addEmergencyListener(com.android.systemui.statusbar.policy.NetworkController$EmergencyListener) -> addEmergencyListener
    android.telephony.SubscriptionInfo addSignalController(int,int) -> addSignalController
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
    void doUpdateMobileControllers() -> doUpdateMobileControllers
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String emergencyToString(int) -> emergencyToString
    com.android.systemui.statusbar.policy.NetworkController$AccessPointController getAccessPointController() -> getAccessPointController
    com.android.systemui.statusbar.policy.MobileSignalController getDataController() -> getDataController
    com.android.systemui.statusbar.policy.DataSaverController getDataSaverController() -> getDataSaverController
    com.android.settingslib.net.DataUsageController getMobileDataController() -> getMobileDataController
    java.lang.String getMobileDataNetworkName() -> getMobileDataNetworkName
    void handleConfigurationChanged() -> handleConfigurationChanged
    void handleSetUserSetupComplete(boolean) -> handleSetUserSetupComplete
    boolean hasAnySim() -> hasAnySim
    boolean hasCorrectMobileControllers(java.util.List) -> hasCorrectMobileControllers
    boolean hasEmergencyCryptKeeperText() -> hasEmergencyCryptKeeperText
    boolean hasMobileDataFeature() -> hasMobileDataFeature
    boolean hasVoiceCallingFeature() -> hasVoiceCallingFeature
    boolean isEmergencyOnly() -> isEmergencyOnly
    boolean isRadioOn() -> isRadioOn
    void notifyAllListeners() -> notifyAllListeners
    void notifyListeners() -> notifyListeners
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onUserSwitched(int) -> onUserSwitched
    void pushConnectivityToSignals() -> pushConnectivityToSignals
    void recalculateEmergency() -> recalculateEmergency
    void refreshLocale() -> refreshLocale
    void registerListeners() -> registerListeners
    void removeCallback(com.android.systemui.statusbar.policy.NetworkController$SignalCallback) -> removeCallback
    void removeEmergencyListener(com.android.systemui.statusbar.policy.NetworkController$EmergencyListener) -> removeEmergencyListener
    void setCurrentSubscriptions(java.util.List) -> setCurrentSubscriptions
    void setUserSetupComplete(boolean) -> setUserSetupComplete
    void setWifiEnabled(boolean) -> setWifiEnabled
    void unregisterListeners() -> unregisterListeners
    void updateAirplaneMode(boolean) -> updateAirplaneMode
    void updateConnectivity() -> updateConnectivity
    void updateMobileControllers() -> updateMobileControllers
    void updateNoSims() -> updateNoSims
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_policy_NetworkControllerImpl_24701(boolean) -> lambda$-com_android_systemui_statusbar_policy_NetworkControllerImpl_24701
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    com.android.systemui.statusbar.policy.CallbackHandler -get0(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> -get0
    android.net.ConnectivityManager -get1(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> -get1
    android.net.wifi.WifiManager -get2(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> -get2
    void -wrap0(com.android.systemui.statusbar.policy.NetworkControllerImpl,int) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.policy.NetworkControllerImpl,boolean) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> -wrap3
com.android.keyguard.KeyguardUpdateMonitor$8 -> com.android.keyguard.KeyguardUpdateMonitor$8:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void onTaskStackChangedBackground() -> onTaskStackChangedBackground
com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer -> com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer:
    float pressure_ -> pressure_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$BoundingBox removedBoundingBox -> removedBoundingBox
    int id_ -> id_
    float x_ -> x_
    float y_ -> y_
    int bitField0_ -> bitField0_
    float size_ -> size_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer[] _emptyArray -> _emptyArray
    float removedLength_ -> removedLength_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer setX(float) -> setX
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer[] emptyArray() -> emptyArray
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer clear() -> clear
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer setSize(float) -> setSize
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer setY(float) -> setY
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int computeSerializedSize() -> computeSerializedSize
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer setId(int) -> setId
    void <init>() -> <init>
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$Pointer setPressure(float) -> setPressure
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
android.support.v4.view.PagerTitleStrip$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStrip$SingleLineAllCapsTransform:
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void <init>(android.content.Context) -> <init>
android.support.v7.view.menu.MenuPopup -> android.support.v7.view.menu.MenuPopup:
    android.graphics.Rect mEpicenterBounds -> mEpicenterBounds
    boolean shouldPreserveIconSpacing(android.support.v7.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    void setVerticalOffset(int) -> setVerticalOffset
    void setShowTitle(boolean) -> setShowTitle
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    void setHorizontalOffset(int) -> setHorizontalOffset
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    void setForceShowIcon(boolean) -> setForceShowIcon
    android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    android.support.v7.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
    void setGravity(int) -> setGravity
    boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void setAnchorView(android.view.View) -> setAnchorView
    void <init>() -> <init>
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String curTab -> curTab
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.statusbar.phone.NotificationIconContainer$2 -> com.android.systemui.statusbar.phone.NotificationIconContainer$2:
    com.android.systemui.statusbar.stack.AnimationFilter mAnimationFilter -> mAnimationFilter
    void <init>() -> <init>
    com.android.systemui.statusbar.stack.AnimationFilter getAnimationFilter() -> getAnimationFilter
com.android.systemui.tuner.LockscreenFragment$LockButtonFactory -> com.android.systemui.tuner.LockscreenFragment$LockButtonFactory:
    android.content.Context mContext -> mContext
    java.lang.String mKey -> mKey
    void <init>(android.content.Context,java.lang.String) -> <init>
    com.android.systemui.plugins.IntentButtonProvider$IntentButton create(java.util.Map) -> create
    java.lang.String[] keys() -> keys
    java.lang.Object create(java.util.Map) -> create
com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2 -> com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2:
    com.android.systemui.statusbar.phone.StatusBar$NotificationClicker this$1 -> this$1
    java.lang.String val$notificationKey -> val$notificationKey
    com.android.systemui.statusbar.ExpandableNotificationRow val$row -> val$row
    android.service.notification.StatusBarNotification val$sbn -> val$sbn
    android.app.PendingIntent val$intent -> val$intent
    void <init>(com.android.systemui.statusbar.phone.StatusBar$NotificationClicker,java.lang.String,com.android.systemui.statusbar.ExpandableNotificationRow,android.service.notification.StatusBarNotification,android.app.PendingIntent) -> <init>
    boolean onDismiss() -> onDismiss
com.android.systemui.fragments.FragmentService$FragmentHostState -> com.android.systemui.fragments.FragmentService$FragmentHostState:
    com.android.systemui.fragments.FragmentHostManager mFragmentHostManager -> mFragmentHostManager
    android.view.View mView -> mView
    com.android.systemui.fragments.FragmentService this$0 -> this$0
    void <init>(com.android.systemui.fragments.FragmentService,android.view.View) -> <init>
    com.android.systemui.fragments.FragmentHostManager getFragmentHostManager() -> getFragmentHostManager
    void handleSendConfigurationChange(android.content.res.Configuration) -> handleSendConfigurationChange
    void sendConfigurationChange(android.content.res.Configuration) -> sendConfigurationChange
    void lambda$-com_android_systemui_fragments_FragmentService$FragmentHostState_2673(android.content.res.Configuration) -> lambda$-com_android_systemui_fragments_FragmentService$FragmentHostState_2673
    com.android.systemui.fragments.FragmentHostManager -get0(com.android.systemui.fragments.FragmentService$FragmentHostState) -> -get0
com.android.systemui.recents.events.activity.PackagesChangedEvent -> com.android.systemui.recents.events.activity.PackagesChangedEvent:
    com.android.systemui.recents.model.RecentsPackageMonitor monitor -> monitor
    java.lang.String packageName -> packageName
    int userId -> userId
    void <init>(com.android.systemui.recents.model.RecentsPackageMonitor,java.lang.String,int) -> <init>
com.android.systemui.util.leak.GarbageMonitor$Service -> com.android.systemui.util.leak.GarbageMonitor$Service:
    boolean ENABLED -> ENABLED
    com.android.systemui.util.leak.GarbageMonitor mGarbageMonitor -> mGarbageMonitor
    void <init>() -> <init>
    void start() -> start
    void <clinit>() -> <clinit>
android.support.v17.leanback.widget.ShadowHelper -> android.support.v17.leanback.widget.ShadowHelper:
    android.support.v17.leanback.widget.ShadowHelper$ShadowHelperVersionImpl mImpl -> mImpl
    android.support.v17.leanback.widget.ShadowHelper sInstance -> sInstance
    boolean mSupportsDynamicShadow -> mSupportsDynamicShadow
    void <clinit>() -> <clinit>
    android.support.v17.leanback.widget.ShadowHelper getInstance() -> getInstance
    void <init>() -> <init>
    boolean supportsDynamicShadow() -> supportsDynamicShadow
    void setZ(android.view.View,float) -> setZ
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback:
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void <init>() -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.android.systemui.statusbar.phone.-$Lambda$zS-ds8ZeotIRtpIBySj1ottLxAY -> com.android.systemui.statusbar.phone.-$Lambda$zS-ds8ZeotIRtpIBySj1ottLxAY:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton:
    float[] mTempPts -> mTempPts
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    boolean needsDividerBefore() -> needsDividerBefore
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context) -> <init>
    boolean needsDividerAfter() -> needsDividerAfter
    boolean performClick() -> performClick
    boolean setFrame(int,int,int,int) -> setFrame
com.android.systemui.statusbar.notification.VisualStabilityManager$Callback -> com.android.systemui.statusbar.notification.VisualStabilityManager$Callback:
    void onReorderingAllowed() -> onReorderingAllowed
com.android.keyguard.KeyguardSecurityContainer$1 -> com.android.keyguard.KeyguardSecurityContainer$1:
    com.android.keyguard.KeyguardSecurityContainer this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSecurityContainer) -> <init>
    void dismiss(boolean,int) -> dismiss
    void reportUnlockAttempt(int,boolean,int) -> reportUnlockAttempt
    void reset() -> reset
    void userActivity() -> userActivity
android.support.v7.widget.FastScroller$1 -> android.support.v7.widget.FastScroller$1:
    android.support.v7.widget.FastScroller this$0 -> this$0
    void <init>(android.support.v7.widget.FastScroller) -> <init>
    void run() -> run
android.support.v7.widget.RecyclerView$LayoutManager$2 -> android.support.v7.widget.RecyclerView$LayoutManager$2:
    android.support.v7.widget.RecyclerView$LayoutManager this$1 -> this$1
    int getParentStart() -> getParentStart
    int getChildStart(android.view.View) -> getChildStart
    int getParentEnd() -> getParentEnd
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    android.view.View getChildAt(int) -> getChildAt
    int getChildEnd(android.view.View) -> getChildEnd
android.support.v4.os.BuildCompat -> android.support.v4.os.BuildCompat:
    boolean isAtLeastOMR1() -> isAtLeastOMR1
    void <init>() -> <init>
com.android.systemui.statusbar.GestureRecorder$Gesture$Record -> com.android.systemui.statusbar.GestureRecorder$Gesture$Record:
    long time -> time
    com.android.systemui.statusbar.GestureRecorder$Gesture this$1 -> this$1
    void <init>(com.android.systemui.statusbar.GestureRecorder$Gesture) -> <init>
com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$Callback -> com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$Callback:
    float getAffordanceFalsingFactor() -> getAffordanceFalsingFactor
    com.android.systemui.statusbar.KeyguardAffordanceView getCenterIcon() -> getCenterIcon
    com.android.systemui.statusbar.KeyguardAffordanceView getLeftIcon() -> getLeftIcon
    android.view.View getLeftPreview() -> getLeftPreview
    float getMaxTranslationDistance() -> getMaxTranslationDistance
    com.android.systemui.statusbar.KeyguardAffordanceView getRightIcon() -> getRightIcon
    android.view.View getRightPreview() -> getRightPreview
    boolean needsAntiFalsing() -> needsAntiFalsing
    void onAnimationToSideEnded() -> onAnimationToSideEnded
    void onAnimationToSideStarted(boolean,float,float) -> onAnimationToSideStarted
    void onIconClicked(boolean) -> onIconClicked
    void onSwipingAborted() -> onSwipingAborted
    void onSwipingStarted(boolean) -> onSwipingStarted
com.android.systemui.recents.events.activity.LaunchTaskStartedEvent -> com.android.systemui.recents.events.activity.LaunchTaskStartedEvent:
    com.android.systemui.recents.views.TaskView taskView -> taskView
    boolean screenPinningRequested -> screenPinningRequested
    void <init>(com.android.systemui.recents.views.TaskView,boolean) -> <init>
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void <init>() -> <init>
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
com.android.systemui.statusbar.phone.NotificationPanelView$11$1 -> com.android.systemui.statusbar.phone.NotificationPanelView$11$1:
    com.android.systemui.statusbar.phone.NotificationPanelView$11 this$1 -> this$1
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView$11) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v17.leanback.widget.StaticShadowHelper -> android.support.v17.leanback.widget.StaticShadowHelper:
    android.support.v17.leanback.widget.StaticShadowHelper$ShadowHelperVersionImpl mImpl -> mImpl
    android.support.v17.leanback.widget.StaticShadowHelper sInstance -> sInstance
    boolean mSupportsShadow -> mSupportsShadow
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    android.support.v17.leanback.widget.StaticShadowHelper getInstance() -> getInstance
    boolean supportsShadow() -> supportsShadow
android.support.v4.provider.FontsContractCompat$4 -> android.support.v4.provider.FontsContractCompat$4:
    java.lang.String val$id -> val$id
    void onReply(java.lang.Object) -> onReply
    void <init>(java.lang.String) -> <init>
    void onReply(android.graphics.Typeface) -> onReply
android.support.v17.leanback.widget.ParallaxEffect$IntEffect -> android.support.v17.leanback.widget.ParallaxEffect$IntEffect:
    void <init>() -> <init>
    float calculateFraction(android.support.v17.leanback.widget.Parallax) -> calculateFraction
    java.lang.Number calculateDirectValue(android.support.v17.leanback.widget.Parallax) -> calculateDirectValue
android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    android.view.ActionProvider mInner -> mInner
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    android.view.View onCreateActionView() -> onCreateActionView
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.android.systemui.statusbar.KeyboardShortcuts$1 -> com.android.systemui.statusbar.KeyboardShortcuts$1:
    com.android.systemui.statusbar.KeyboardShortcuts this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyboardShortcuts) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.qs.QSDetail$3 -> com.android.systemui.qs.QSDetail$3:
    com.android.systemui.qs.QSDetail this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetail) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.settingslib.drawer.TileUtils -> com.android.settingslib.drawer.TileUtils:
    java.util.Comparator TILE_COMPARATOR -> TILE_COMPARATOR
    java.util.Comparator CATEGORY_COMPARATOR -> CATEGORY_COMPARATOR
    java.lang.String getString(android.os.Bundle,java.lang.String) -> getString
    java.util.List getCategories(android.content.Context,java.util.Map,boolean,java.lang.String,java.lang.String) -> getCategories
    void getTilesForIntent(android.content.Context,android.os.UserHandle,android.content.Intent,java.util.Map,java.lang.String,java.util.List,boolean,boolean,boolean,boolean) -> getTilesForIntent
    android.content.IContentProvider getProviderFromUri(android.content.Context,android.net.Uri,java.util.Map) -> getProviderFromUri
    java.lang.String getMethodFromUri(android.net.Uri) -> getMethodFromUri
    void getTilesForIntent(android.content.Context,android.os.UserHandle,android.content.Intent,java.util.Map,java.lang.String,java.util.List,boolean,boolean,boolean) -> getTilesForIntent
    void getTilesForAction(android.content.Context,android.os.UserHandle,java.lang.String,java.util.Map,java.lang.String,java.util.ArrayList,boolean,java.lang.String) -> getTilesForAction
    boolean updateTileData(android.content.Context,com.android.settingslib.drawer.Tile,android.content.pm.ActivityInfo,android.content.pm.ApplicationInfo,android.content.pm.PackageManager,java.util.Map,boolean) -> updateTileData
    com.android.settingslib.drawer.DashboardCategory createCategory(android.content.Context,java.lang.String,boolean) -> createCategory
    void getTilesForAction(android.content.Context,android.os.UserHandle,java.lang.String,java.util.Map,java.lang.String,java.util.ArrayList,boolean,boolean,java.lang.String) -> getTilesForAction
    void updateSummaryAndTitle(android.content.Context,java.util.Map,com.android.settingslib.drawer.Tile) -> updateSummaryAndTitle
    void <clinit>() -> <clinit>
    android.os.Bundle getBundleFromUri(android.content.Context,java.lang.String,java.util.Map) -> getBundleFromUri
    void <init>() -> <init>
android.support.v17.leanback.transition.FadeAndShortSlide$4 -> android.support.v17.leanback.transition.FadeAndShortSlide$4:
    void <init>() -> <init>
    float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[]) -> getGoneY
android.support.v7.widget.AppCompatBackgroundHelper -> android.support.v7.widget.AppCompatBackgroundHelper:
    android.support.v7.widget.TintInfo mBackgroundTint -> mBackgroundTint
    android.support.v7.widget.TintInfo mInternalBackgroundTint -> mInternalBackgroundTint
    int mBackgroundResId -> mBackgroundResId
    android.support.v7.widget.AppCompatDrawableManager mDrawableManager -> mDrawableManager
    android.support.v7.widget.TintInfo mTmpInfo -> mTmpInfo
    android.view.View mView -> mView
    void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    void onSetBackgroundResource(int) -> onSetBackgroundResource
    void <init>(android.view.View) -> <init>
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
    void applySupportBackgroundTint() -> applySupportBackgroundTint
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
com.android.systemui.pip.BasePipManager -> com.android.systemui.pip.BasePipManager:
    void dump(java.io.PrintWriter) -> dump
    void initialize(android.content.Context) -> initialize
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void showPictureInPictureMenu() -> showPictureInPictureMenu
com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$4 -> com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$4:
    com.android.systemui.statusbar.phone.PhoneStatusBarPolicy this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> <init>
    void onNextAlarmChanged(android.app.AlarmManager$AlarmClockInfo) -> onNextAlarmChanged
android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState -> android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int featureId -> featureId
    android.os.Bundle menuState -> menuState
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    int describeContents() -> describeContents
com.android.systemui.statusbar.phone.ManagedProfileController$Callback -> com.android.systemui.statusbar.phone.ManagedProfileController$Callback:
    void onManagedProfileChanged() -> onManagedProfileChanged
    void onManagedProfileRemoved() -> onManagedProfileRemoved
com.android.systemui.plugins.VersionInfo$Version -> com.android.systemui.plugins.VersionInfo$Version:
    boolean mRequired -> mRequired
    int mVersion -> mVersion
    void <init>(int,boolean) -> <init>
    boolean -get0(com.android.systemui.plugins.VersionInfo$Version) -> -get0
    int -get1(com.android.systemui.plugins.VersionInfo$Version) -> -get1
com.android.systemui.volume.VolumeDialogImpl$12 -> com.android.systemui.volume.VolumeDialogImpl$12:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    void onTransitionPause(android.transition.Transition) -> onTransitionPause
    void onTransitionResume(android.transition.Transition) -> onTransitionResume
    void onTransitionStart(android.transition.Transition) -> onTransitionStart
com.android.systemui.plugins.-$Lambda$hnKk2Q6NutYOsHxpKvpj5tAJi04 -> com.android.systemui.plugins.-$Lambda$hnKk2Q6NutYOsHxpKvpj5tAJi04:
    com.android.systemui.plugins.-$Lambda$hnKk2Q6NutYOsHxpKvpj5tAJi04 $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0(java.lang.Object,java.lang.Object) -> $m$0
    void accept(java.lang.Object,java.lang.Object) -> accept
com.android.systemui.statusbar.phone.NotificationIconContainer$IconState -> com.android.systemui.statusbar.phone.NotificationIconContainer$IconState:
    float clampedAppearAmount -> clampedAppearAmount
    int customTransformHeight -> customTransformHeight
    float iconAppearAmount -> iconAppearAmount
    int iconColor -> iconColor
    boolean isLastExpandIcon -> isLastExpandIcon
    boolean justAdded -> justAdded
    boolean justReplaced -> justReplaced
    boolean needsCannedAnimation -> needsCannedAnimation
    boolean noAnimations -> noAnimations
    boolean translateContent -> translateContent
    boolean useFullTransitionAmount -> useFullTransitionAmount
    boolean useLinearTransitionAmount -> useLinearTransitionAmount
    int visibleState -> visibleState
    com.android.systemui.statusbar.phone.NotificationIconContainer this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationIconContainer) -> <init>
    void applyToView(android.view.View) -> applyToView
    boolean hasCustomTransformHeight() -> hasCustomTransformHeight
    void initFrom(android.view.View) -> initFrom
    boolean shouldVibrateChange(boolean) -> shouldVibrateChange
    void lambda$-com_android_systemui_statusbar_phone_NotificationIconContainer$IconState_25363() -> lambda$-com_android_systemui_statusbar_phone_NotificationIconContainer$IconState_25363
    boolean -set0(com.android.systemui.statusbar.phone.NotificationIconContainer$IconState,boolean) -> -set0
com.android.systemui.keyboard.KeyboardUI$BluetoothDialogDismissListener -> com.android.systemui.keyboard.KeyboardUI$BluetoothDialogDismissListener:
    com.android.systemui.keyboard.KeyboardUI this$0 -> this$0
    void <init>(com.android.systemui.keyboard.KeyboardUI) -> <init>
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void <init>(com.android.systemui.keyboard.KeyboardUI,com.android.systemui.keyboard.KeyboardUI$BluetoothDialogDismissListener) -> <init>
android.support.v17.leanback.R$drawable -> android.support.v17.leanback.R$drawable:
    int lb_ic_in_app_search -> lb_ic_in_app_search
    int lb_ic_nav_arrow -> lb_ic_nav_arrow
    int lb_ic_search_mic -> lb_ic_search_mic
    int lb_ic_search_mic_out -> lb_ic_search_mic_out
    int lb_text_dot_one -> lb_text_dot_one
    int lb_text_dot_two -> lb_text_dot_two
    void <init>() -> <init>
com.android.settingslib.RestrictedLockUtils$Proxy -> com.android.settingslib.RestrictedLockUtils$Proxy:
    void <init>() -> <init>
android.support.v7.media.MediaRouterJellybean$Callback -> android.support.v7.media.MediaRouterJellybean$Callback:
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
com.android.systemui.usb.UsbDebuggingSecondaryUserActivity$UsbDisconnectedReceiver -> com.android.systemui.usb.UsbDebuggingSecondaryUserActivity$UsbDisconnectedReceiver:
    android.app.Activity mActivity -> mActivity
    com.android.systemui.usb.UsbDebuggingSecondaryUserActivity this$0 -> this$0
    void <init>(com.android.systemui.usb.UsbDebuggingSecondaryUserActivity,android.app.Activity) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.media.MediaRouter$RouteInfo$PlaybackVolume -> android.support.v7.media.MediaRouter$RouteInfo$PlaybackVolume:
android.support.v7.app.MediaRouteButton -> android.support.v7.app.MediaRouteButton:
    boolean mRemoteActive -> mRemoteActive
    android.support.v7.media.MediaRouter mRouter -> mRouter
    android.content.res.ColorStateList mButtonTint -> mButtonTint
    android.support.v7.app.MediaRouteButton$RemoteIndicatorLoader mRemoteIndicatorLoader -> mRemoteIndicatorLoader
    boolean mIsConnecting -> mIsConnecting
    int mMinHeight -> mMinHeight
    int mMinWidth -> mMinWidth
    boolean mAttachedToWindow -> mAttachedToWindow
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    int[] CHECKABLE_STATE_SET -> CHECKABLE_STATE_SET
    android.support.v7.media.MediaRouteSelector mSelector -> mSelector
    android.support.v7.app.MediaRouteButton$MediaRouterCallback mCallback -> mCallback
    android.util.SparseArray sRemoteIndicatorCache -> sRemoteIndicatorCache
    android.graphics.drawable.Drawable mRemoteIndicator -> mRemoteIndicator
    android.support.v7.app.MediaRouteDialogFactory mDialogFactory -> mDialogFactory
    void onAttachedToWindow() -> onAttachedToWindow
    boolean showDialog() -> showDialog
    android.support.v7.app.MediaRouteButton$RemoteIndicatorLoader -set0(android.support.v7.app.MediaRouteButton,android.support.v7.app.MediaRouteButton$RemoteIndicatorLoader) -> -set0
    android.util.SparseArray -get0() -> -get0
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void onMeasure(int,int) -> onMeasure
    void setVisibility(int) -> setVisibility
    void updateContentDescription() -> updateContentDescription
    void refreshRoute() -> refreshRoute
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setRemoteIndicatorDrawable(android.graphics.drawable.Drawable) -> setRemoteIndicatorDrawable
    android.app.Activity getActivity() -> getActivity
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean performClick() -> performClick
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void <clinit>() -> <clinit>
    void onDraw(android.graphics.Canvas) -> onDraw
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
com.android.systemui.statusbar.phone.DozeScrimController$4 -> com.android.systemui.statusbar.phone.DozeScrimController$4:
    com.android.systemui.statusbar.phone.DozeScrimController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.DozeScrimController) -> <init>
    void run() -> run
android.support.v7.util.BatchingListUpdateCallback -> android.support.v7.util.BatchingListUpdateCallback:
    int mLastEventType -> mLastEventType
    android.support.v7.util.ListUpdateCallback mWrapped -> mWrapped
    int mLastEventPosition -> mLastEventPosition
    java.lang.Object mLastEventPayload -> mLastEventPayload
    int mLastEventCount -> mLastEventCount
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int,java.lang.Object) -> onChanged
    void dispatchLastEvent() -> dispatchLastEvent
    void <init>(android.support.v7.util.ListUpdateCallback) -> <init>
    void onInserted(int,int) -> onInserted
com.android.keyguard.KeyguardAbsKeyInputView$2 -> com.android.keyguard.KeyguardAbsKeyInputView$2:
    com.android.keyguard.KeyguardAbsKeyInputView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardAbsKeyInputView,long,long) -> <init>
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.android.systemui.statusbar.policy.BrightnessMirrorController -> com.android.systemui.statusbar.policy.BrightnessMirrorController:
    long TRANSITION_DURATION_IN -> TRANSITION_DURATION_IN
    long TRANSITION_DURATION_OUT -> TRANSITION_DURATION_OUT
    android.view.View mBrightnessMirror -> mBrightnessMirror
    android.util.ArraySet mBrightnessMirrorListeners -> mBrightnessMirrorListeners
    int[] mInt2Cache -> mInt2Cache
    android.view.View mNotificationPanel -> mNotificationPanel
    com.android.systemui.statusbar.phone.ScrimController mScrimController -> mScrimController
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mStackScroller -> mStackScroller
    com.android.systemui.statusbar.phone.StatusBarWindowView mStatusBarWindow -> mStatusBarWindow
    void showMirror() -> showMirror
    void setLocation(android.view.View) -> setLocation
    void hideMirror() -> hideMirror
    void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView,com.android.systemui.statusbar.phone.ScrimController) -> <init>
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onOverlayChanged() -> onOverlayChanged
    void updateResources() -> updateResources
    void addCallback(com.android.systemui.statusbar.policy.BrightnessMirrorController$BrightnessMirrorListener) -> addCallback
    void removeCallback(com.android.systemui.statusbar.policy.BrightnessMirrorController$BrightnessMirrorListener) -> removeCallback
    android.view.View getMirror() -> getMirror
    android.view.ViewPropertyAnimator inAnimation(android.view.ViewPropertyAnimator) -> inAnimation
    android.view.ViewPropertyAnimator outAnimation(android.view.ViewPropertyAnimator) -> outAnimation
    void reinflate() -> reinflate
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    android.view.View -get0(com.android.systemui.statusbar.policy.BrightnessMirrorController) -> -get0
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout -get1(com.android.systemui.statusbar.policy.BrightnessMirrorController) -> -get1
com.android.settingslib.bluetooth.BluetoothEventManager -> com.android.settingslib.bluetooth.BluetoothEventManager:
    android.content.Context mContext -> mContext
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    java.util.Collection mCallbacks -> mCallbacks
    android.os.Handler mReceiverHandler -> mReceiverHandler
    android.content.IntentFilter mProfileIntentFilter -> mProfileIntentFilter
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    android.content.BroadcastReceiver mProfileBroadcastReceiver -> mProfileBroadcastReceiver
    android.content.IntentFilter mAdapterIntentFilter -> mAdapterIntentFilter
    java.util.Map mHandlerMap -> mHandlerMap
    void <init>(com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,android.content.Context) -> <init>
    void addProfileHandler(java.lang.String,com.android.settingslib.bluetooth.BluetoothEventManager$Handler) -> addProfileHandler
    void registerCallback(com.android.settingslib.bluetooth.BluetoothCallback) -> registerCallback
    boolean readPairedDevices() -> readPairedDevices
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.BluetoothEventManager) -> -get1
    java.util.Map -get2(com.android.settingslib.bluetooth.BluetoothEventManager) -> -get2
    void addHandler(java.lang.String,com.android.settingslib.bluetooth.BluetoothEventManager$Handler) -> addHandler
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get5(com.android.settingslib.bluetooth.BluetoothEventManager) -> -get5
    void dispatchDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> dispatchDeviceAdded
    void setProfileManager(com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> setProfileManager
    void -wrap0(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> -wrap0
    void registerProfileIntentReceiver() -> registerProfileIntentReceiver
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get3(com.android.settingslib.bluetooth.BluetoothEventManager) -> -get3
    java.util.Collection -get0(com.android.settingslib.bluetooth.BluetoothEventManager) -> -get0
    void dispatchConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> dispatchConnectionStateChanged
    android.content.BroadcastReceiver -get4(com.android.settingslib.bluetooth.BluetoothEventManager) -> -get4
    void setReceiverHandler(android.os.Handler) -> setReceiverHandler
com.android.systemui.keyguard.KeyguardViewMediator$3 -> com.android.systemui.keyguard.KeyguardViewMediator$3:
    com.android.systemui.keyguard.KeyguardViewMediator this$0 -> this$0
    void <init>(com.android.systemui.keyguard.KeyguardViewMediator) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.widget.LinearLayoutManager$SavedState$1 -> android.support.v7.widget.LinearLayoutManager$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v7.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v7.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.doze.DozeTriggers$2 -> com.android.systemui.doze.DozeTriggers$2:
    com.android.systemui.doze.DozeTriggers this$0 -> this$0
    long val$start -> val$start
    int val$pulseReason -> val$pulseReason
    java.util.function.IntConsumer val$callback -> val$callback
    void <init>(com.android.systemui.doze.DozeTriggers,com.android.systemui.doze.DozeTriggers,long,int,java.util.function.IntConsumer) -> <init>
    void onProximityResult(int) -> onProximityResult
com.google.protobuf.nano.android.ParcelableMessageNano -> com.google.protobuf.nano.android.ParcelableMessageNano:
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    int describeContents() -> describeContents
android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl -> android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl:
    android.support.v7.media.MediaRouterJellybean$GetDefaultRouteWorkaround mGetDefaultRouteWorkaround -> mGetDefaultRouteWorkaround
    java.lang.Object mRouterObj -> mRouterObj
    java.lang.Object mVolumeCallbackObj -> mVolumeCallbackObj
    java.util.ArrayList LIVE_AUDIO_CONTROL_FILTERS -> LIVE_AUDIO_CONTROL_FILTERS
    java.util.ArrayList LIVE_VIDEO_CONTROL_FILTERS -> LIVE_VIDEO_CONTROL_FILTERS
    boolean mCallbackRegistered -> mCallbackRegistered
    int mRouteTypes -> mRouteTypes
    android.support.v7.media.MediaRouterJellybean$SelectRouteWorkaround mSelectRouteWorkaround -> mSelectRouteWorkaround
    java.lang.Object mUserRouteCategoryObj -> mUserRouteCategoryObj
    boolean mActiveScan -> mActiveScan
    android.support.v7.media.SystemMediaRouteProvider$SyncCallback mSyncCallback -> mSyncCallback
    java.util.ArrayList mUserRouteRecords -> mUserRouteRecords
    java.lang.Object mCallbackObj -> mCallbackObj
    java.util.ArrayList mSystemRouteRecords -> mSystemRouteRecords
    void selectRoute(java.lang.Object) -> selectRoute
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onSyncRouteAdded(android.support.v7.media.MediaRouter$RouteInfo) -> onSyncRouteAdded
    void updateCallback() -> updateCallback
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    java.lang.Object createCallbackObj() -> createCallbackObj
    void onDiscoveryRequestChanged(android.support.v7.media.MediaRouteDiscoveryRequest) -> onDiscoveryRequestChanged
    java.lang.Object createVolumeCallbackObj() -> createVolumeCallbackObj
    android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$UserRouteRecord getUserRouteRecord(java.lang.Object) -> getUserRouteRecord
    java.lang.String assignRouteId(java.lang.Object) -> assignRouteId
    java.lang.String getRouteName(java.lang.Object) -> getRouteName
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    android.support.v7.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String) -> onCreateRouteController
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
    void updateSystemRouteDescriptor(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord) -> updateSystemRouteDescriptor
    boolean addSystemRouteNoPublish(java.lang.Object) -> addSystemRouteNoPublish
    java.lang.Object getDefaultRoute() -> getDefaultRoute
    void onBuildSystemRouteDescriptor(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord,android.support.v7.media.MediaRouteDescriptor$Builder) -> onBuildSystemRouteDescriptor
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
    int findUserRouteRecord(android.support.v7.media.MediaRouter$RouteInfo) -> findUserRouteRecord
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
    void updateSystemRoutes() -> updateSystemRoutes
    void onSyncRouteSelected(android.support.v7.media.MediaRouter$RouteInfo) -> onSyncRouteSelected
    void publishRoutes() -> publishRoutes
    void <init>(android.content.Context,android.support.v7.media.SystemMediaRouteProvider$SyncCallback) -> <init>
    void updateUserRouteProperties(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$UserRouteRecord) -> updateUserRouteProperties
    void onSyncRouteChanged(android.support.v7.media.MediaRouter$RouteInfo) -> onSyncRouteChanged
    void onSyncRouteRemoved(android.support.v7.media.MediaRouter$RouteInfo) -> onSyncRouteRemoved
    void <clinit>() -> <clinit>
    int findSystemRouteRecordByDescriptorId(java.lang.String) -> findSystemRouteRecordByDescriptorId
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    int findSystemRouteRecord(java.lang.Object) -> findSystemRouteRecord
android.support.v7.app.MediaRouteControllerDialog$2 -> android.support.v7.app.MediaRouteControllerDialog$2:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.recents.events.activity.LaunchTaskSucceededEvent -> com.android.systemui.recents.events.activity.LaunchTaskSucceededEvent:
    int taskIndexFromStackFront -> taskIndexFromStackFront
    void <init>(int) -> <init>
com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener -> com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener:
    int VERSION -> VERSION
    void onMenuReset(android.view.View) -> onMenuReset
    void onMenuClicked(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> onMenuClicked
    void onMenuShown(android.view.View) -> onMenuShown
android.support.annotation.RestrictTo -> android.support.annotation.RestrictTo:
    android.support.annotation.RestrictTo$Scope[] value() -> value
com.android.systemui.doze.DozeScreenBrightness -> com.android.systemui.doze.DozeScreenBrightness:
    android.content.Context mContext -> mContext
    int mDefaultDozeBrightness -> mDefaultDozeBrightness
    com.android.systemui.doze.DozeHost mDozeHost -> mDozeHost
    com.android.systemui.doze.DozeMachine$Service mDozeService -> mDozeService
    android.os.Handler mHandler -> mHandler
    int mLastSensorValue -> mLastSensorValue
    android.hardware.Sensor mLightSensor -> mLightSensor
    boolean mPaused -> mPaused
    boolean mRegistered -> mRegistered
    android.hardware.SensorManager mSensorManager -> mSensorManager
    int[] mSensorToBrightness -> mSensorToBrightness
    int[] mSensorToScrimOpacity -> mSensorToScrimOpacity
    int[] -com-android-systemui-doze-DozeMachine$StateSwitchesValues -> -com-android-systemui-doze-DozeMachine$StateSwitchesValues
    void <init>(android.content.Context,com.android.systemui.doze.DozeMachine$Service,android.hardware.SensorManager,android.hardware.Sensor,com.android.systemui.doze.DozeHost,android.os.Handler,com.android.systemui.doze.AlwaysOnDisplayPolicy) -> <init>
    void <init>(android.content.Context,com.android.systemui.doze.DozeMachine$Service,android.hardware.SensorManager,android.hardware.Sensor,com.android.systemui.doze.DozeHost,android.os.Handler,int,int[],int[]) -> <init>
    int computeBrightness(int) -> computeBrightness
    int computeScrimOpacity(int) -> computeScrimOpacity
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void resetBrightnessToDefault() -> resetBrightnessToDefault
    void setLightSensorEnabled(boolean) -> setLightSensorEnabled
    void setPaused(boolean) -> setPaused
    void transitionTo(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State) -> transitionTo
    void updateBrightnessAndReady() -> updateBrightnessAndReady
    int[] -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues() -> -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$7 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$7:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(com.android.systemui.statusbar.NotificationGuts) -> $m$0
    void onGutsClosed(com.android.systemui.statusbar.NotificationGuts) -> onGutsClosed
com.android.keyguard.KeyguardPasswordView$2 -> com.android.keyguard.KeyguardPasswordView$2:
    com.android.keyguard.KeyguardPasswordView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPasswordView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.phone.NavigationBarFragment$2 -> com.android.systemui.statusbar.phone.NavigationBarFragment$2:
    com.android.systemui.statusbar.phone.NavigationBarFragment this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NavigationBarFragment) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.NotificationContentView$1$1 -> com.android.systemui.statusbar.NotificationContentView$1$1:
    com.android.systemui.statusbar.NotificationContentView$1 this$1 -> this$1
    void <init>(com.android.systemui.statusbar.NotificationContentView$1) -> <init>
    void run() -> run
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.Toolbar$SavedState:
    boolean isOverflowOpen -> isOverflowOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int expandedMenuItemId -> expandedMenuItemId
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.statusbar.stack.ViewState$1 -> com.android.systemui.statusbar.stack.ViewState$1:
    com.android.systemui.statusbar.stack.AnimationFilter mAnimationFilter -> mAnimationFilter
    void <init>() -> <init>
    com.android.systemui.statusbar.stack.AnimationFilter getAnimationFilter() -> getAnimationFilter
android.support.v7.preference.PreferenceManager$OnDisplayPreferenceDialogListener -> android.support.v7.preference.PreferenceManager$OnDisplayPreferenceDialogListener:
    void onDisplayPreferenceDialog(android.support.v7.preference.Preference) -> onDisplayPreferenceDialog
com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$1 -> com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$1:
    com.android.systemui.statusbar.phone.StatusBar$NotificationClicker this$1 -> this$1
    com.android.systemui.statusbar.ExpandableNotificationRow val$row -> val$row
    void <init>(com.android.systemui.statusbar.phone.StatusBar$NotificationClicker,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void run() -> run
android.support.v7.app.AlertController$2 -> android.support.v7.app.AlertController$2:
    android.view.View val$top -> val$top
    android.support.v7.app.AlertController this$0 -> this$0
    android.view.View val$bottom -> val$bottom
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int) -> onScrollChange
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.graphics.Rect val$epicenter -> val$epicenter
    android.support.v4.app.FragmentTransitionCompat21 this$0 -> this$0
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
    void <init>(android.support.v4.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl$1:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl this$1 -> this$1
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.annotation.IntDef -> android.support.annotation.IntDef:
    boolean flag() -> flag
    long[] value() -> value
com.android.systemui.globalactions.GlobalActionsDialog$10 -> com.android.systemui.globalactions.GlobalActionsDialog$10:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,int,int) -> <init>
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.qs.customize.TileQueryHelper -> com.android.systemui.qs.customize.TileQueryHelper:
    java.lang.Runnable mCompletion -> mCompletion
    android.content.Context mContext -> mContext
    com.android.systemui.qs.QSTileHost mHost -> mHost
    com.android.systemui.qs.customize.TileQueryHelper$TileStateListener mListener -> mListener
    java.util.ArrayList mSpecs -> mSpecs
    java.util.ArrayList mTiles -> mTiles
    void <init>(android.content.Context,com.android.systemui.qs.QSTileHost,com.android.systemui.qs.customize.TileQueryHelper$TileStateListener,java.lang.Runnable) -> <init>
    void addPackageTiles(android.os.Handler,android.os.Handler) -> addPackageTiles
    void addStockTiles(android.os.Handler,android.os.Handler) -> addStockTiles
    void addSystemTiles() -> addSystemTiles
    void addTile(java.lang.String,java.lang.CharSequence,com.android.systemui.plugins.qs.QSTile$State,boolean) -> addTile
    void addTile(java.lang.String,android.graphics.drawable.Drawable,java.lang.CharSequence,java.lang.CharSequence,android.content.Context) -> addTile
    com.android.systemui.plugins.qs.QSTile$State getState(java.util.Collection,java.lang.String) -> getState
    void lambda$-com_android_systemui_qs_customize_TileQueryHelper_4176(android.os.Handler) -> lambda$-com_android_systemui_qs_customize_TileQueryHelper_4176
    void lambda$-com_android_systemui_qs_customize_TileQueryHelper_6090() -> lambda$-com_android_systemui_qs_customize_TileQueryHelper_6090
    com.android.systemui.qs.customize.TileQueryHelper$TileStateListener -get0(com.android.systemui.qs.customize.TileQueryHelper) -> -get0
    java.util.ArrayList -get1(com.android.systemui.qs.customize.TileQueryHelper) -> -get1
    void -wrap0(com.android.systemui.qs.customize.TileQueryHelper,java.lang.String,java.lang.CharSequence,com.android.systemui.plugins.qs.QSTile$State,boolean) -> -wrap0
android.support.v7.widget.AppCompatSeekBar -> android.support.v7.widget.AppCompatSeekBar:
    android.support.v7.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> mAppCompatSeekBarHelper
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onDraw(android.graphics.Canvas) -> onDraw
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    void <init>() -> <init>
com.android.keyguard.KeyguardSimPukView$2$1 -> com.android.keyguard.KeyguardSimPukView$2$1:
    com.android.keyguard.KeyguardSimPukView$2 this$1 -> this$1
    int val$result -> val$result
    int val$attemptsRemaining -> val$attemptsRemaining
    void <init>(com.android.keyguard.KeyguardSimPukView$2,int,int) -> <init>
    void run() -> run
com.android.keyguard.KeyguardHostView -> com.android.keyguard.KeyguardHostView:
    android.media.AudioManager mAudioManager -> mAudioManager
    java.lang.Runnable mCancelAction -> mCancelAction
    com.android.keyguard.KeyguardHostView$OnDismissAction mDismissAction -> mDismissAction
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    com.android.keyguard.KeyguardSecurityContainer mSecurityContainer -> mSecurityContainer
    android.telephony.TelephonyManager mTelephonyManager -> mTelephonyManager
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateCallback -> mUpdateCallback
    com.android.keyguard.ViewMediatorCallback mViewMediatorCallback -> mViewMediatorCallback
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void cancelDismissAction() -> cancelDismissAction
    void cleanUp() -> cleanUp
    boolean dismiss(int) -> dismiss
    boolean dismiss(boolean,int) -> dismiss
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void dispatchSystemUiVisibilityChanged(int) -> dispatchSystemUiVisibilityChanged
    void finish(boolean,int) -> finish
    com.android.keyguard.KeyguardSecurityModel$SecurityMode getCurrentSecurityMode() -> getCurrentSecurityMode
    com.android.keyguard.KeyguardSecurityContainer getSecurityContainer() -> getSecurityContainer
    com.android.keyguard.KeyguardSecurityModel$SecurityMode getSecurityMode() -> getSecurityMode
    void handleMediaKeyEvent(android.view.KeyEvent) -> handleMediaKeyEvent
    boolean interceptMediaKey(android.view.KeyEvent) -> interceptMediaKey
    void onFinishInflate() -> onFinishInflate
    void onPause() -> onPause
    void onResume() -> onResume
    void onSecurityModeChanged(com.android.keyguard.KeyguardSecurityModel$SecurityMode,boolean) -> onSecurityModeChanged
    void reset() -> reset
    void setLockPatternUtils(com.android.internal.widget.LockPatternUtils) -> setLockPatternUtils
    void setOnDismissAction(com.android.keyguard.KeyguardHostView$OnDismissAction,java.lang.Runnable) -> setOnDismissAction
    void setViewMediatorCallback(com.android.keyguard.ViewMediatorCallback) -> setViewMediatorCallback
    boolean shouldEnableMenuKey() -> shouldEnableMenuKey
    void showMessage(java.lang.String,int) -> showMessage
    void showPrimarySecurityScreen() -> showPrimarySecurityScreen
    void showPromptReason(int) -> showPromptReason
    void startAppearAnimation() -> startAppearAnimation
    void startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    void userActivity() -> userActivity
    boolean -wrap0(com.android.keyguard.KeyguardHostView) -> -wrap0
com.android.systemui.qs.QSDetail$4 -> com.android.systemui.qs.QSDetail$4:
    com.android.systemui.qs.QSDetail this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetail) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.stackdivider.MinimizedDockShadow -> com.android.systemui.stackdivider.MinimizedDockShadow:
    int mDockSide -> mDockSide
    android.graphics.Paint mShadowPaint -> mShadowPaint
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setDockSide(int) -> setDockSide
    void updatePaint(int,int,int,int) -> updatePaint
com.android.systemui.volume.VolumeDialogMotion$5 -> com.android.systemui.volume.VolumeDialogMotion$5:
    com.android.systemui.volume.VolumeDialogMotion this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogMotion) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v17.leanback.widget.PagingIndicator$3 -> android.support.v17.leanback.widget.PagingIndicator$3:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Float get(android.support.v17.leanback.widget.PagingIndicator$Dot) -> get
    void set(android.support.v17.leanback.widget.PagingIndicator$Dot,java.lang.Float) -> set
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
android.support.v7.widget.MenuItemHoverListener -> android.support.v7.widget.MenuItemHoverListener:
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
com.android.keyguard.KeyguardSecurityContainer$SecurityCallback -> com.android.keyguard.KeyguardSecurityContainer$SecurityCallback:
    boolean dismiss(boolean,int) -> dismiss
    void finish(boolean,int) -> finish
    void onSecurityModeChanged(com.android.keyguard.KeyguardSecurityModel$SecurityMode,boolean) -> onSecurityModeChanged
    void reset() -> reset
    void userActivity() -> userActivity
com.android.systemui.keyboard.KeyboardUI$BluetoothCallbackHandler -> com.android.systemui.keyboard.KeyboardUI$BluetoothCallbackHandler:
    com.android.systemui.keyboard.KeyboardUI this$0 -> this$0
    void <init>(com.android.systemui.keyboard.KeyboardUI) -> <init>
    void onBluetoothStateChanged(int) -> onBluetoothStateChanged
    void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> onConnectionStateChanged
    void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> onDeviceAdded
    void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> onDeviceBondStateChanged
    void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> onDeviceDeleted
    void onScanningStateChanged(boolean) -> onScanningStateChanged
    void <init>(com.android.systemui.keyboard.KeyboardUI,com.android.systemui.keyboard.KeyboardUI$BluetoothCallbackHandler) -> <init>
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
    void <init>(android.support.v4.widget.ContentLoadingProgressBar) -> <init>
android.support.v7.widget.helper.ItemTouchHelper$4 -> android.support.v7.widget.helper.ItemTouchHelper$4:
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation val$anim -> val$anim
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    int val$swipeDir -> val$swipeDir
    void run() -> run
    void <init>(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> <init>
com.android.systemui.volume.Interaction -> com.android.systemui.volume.Interaction:
    void register(android.view.View,com.android.systemui.volume.Interaction$Callback) -> register
    void <init>() -> <init>
com.android.systemui.doze.-$Lambda$2qmRVMGExkbYQ_v29x6Ef1pccz8 -> com.android.systemui.doze.-$Lambda$2qmRVMGExkbYQ_v29x6Ef1pccz8:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void onAlarm() -> onAlarm
com.android.systemui.keyguard.WorkLockActivityController -> com.android.systemui.keyguard.WorkLockActivityController:
    android.content.Context mContext -> mContext
    android.app.IActivityManager mIam -> mIam
    com.android.systemui.recents.misc.SystemServicesProxy$TaskStackListener mLockListener -> mLockListener
    com.android.systemui.recents.misc.SystemServicesProxy mSsp -> mSsp
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,com.android.systemui.recents.misc.SystemServicesProxy,android.app.IActivityManager) -> <init>
    int startActivityAsUser(android.content.Intent,android.os.Bundle,int) -> startActivityAsUser
    void startWorkChallengeInTask(int,int) -> startWorkChallengeInTask
    void -wrap0(com.android.systemui.keyguard.WorkLockActivityController,int,int) -> -wrap0
com.android.systemui.statusbar.policy.LocationControllerImpl$H -> com.android.systemui.statusbar.policy.LocationControllerImpl$H:
    com.android.systemui.statusbar.policy.LocationControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.LocationControllerImpl) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void locationActiveChanged() -> locationActiveChanged
    void locationSettingsChanged() -> locationSettingsChanged
    void lambda$-com_android_systemui_statusbar_policy_LocationControllerImpl$H_8433(com.android.systemui.statusbar.policy.LocationController$LocationChangeCallback) -> lambda$-com_android_systemui_statusbar_policy_LocationControllerImpl$H_8433
    void lambda$-com_android_systemui_statusbar_policy_LocationControllerImpl$H_8685(boolean,com.android.systemui.statusbar.policy.LocationController$LocationChangeCallback) -> lambda$-com_android_systemui_statusbar_policy_LocationControllerImpl$H_8685
    void <init>(com.android.systemui.statusbar.policy.LocationControllerImpl,com.android.systemui.statusbar.policy.LocationControllerImpl$H) -> <init>
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    android.view.View val$animatingView -> val$animatingView
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.view.ViewGroup val$container -> val$container
    void <init>(android.support.v4.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.StatusBar$40 -> com.android.systemui.statusbar.phone.StatusBar$40:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent -> com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent:
    void <init>() -> <init>
android.support.v7.widget.ThemedSpinnerAdapter -> android.support.v7.widget.ThemedSpinnerAdapter:
    void setDropDownViewTheme(android.content.res.Resources$Theme) -> setDropDownViewTheme
    android.content.res.Resources$Theme getDropDownViewTheme() -> getDropDownViewTheme
android.support.annotation.IntRange -> android.support.annotation.IntRange:
    long from() -> from
    long to() -> to
com.android.systemui.statusbar.car.-$Lambda$gAZ84Xb3Qb415HO2o_U1LzYDKgw$1 -> com.android.systemui.statusbar.car.-$Lambda$gAZ84Xb3Qb415HO2o_U1LzYDKgw$1:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(int,java.lang.Object,java.lang.Object) -> <init>
    boolean $m$0(android.view.View) -> $m$0
    boolean onLongClick(android.view.View) -> onLongClick
com.android.systemui.statusbar.-$Lambda$pfzrTzW0pwWr_NOaX9rVE6jh0v8$2 -> com.android.systemui.statusbar.-$Lambda$pfzrTzW0pwWr_NOaX9rVE6jh0v8$2:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(int,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.settings.BrightnessController$8 -> com.android.systemui.settings.BrightnessController$8:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    int val$val -> val$val
    void <init>(com.android.systemui.settings.BrightnessController,int) -> <init>
    void run() -> run
com.android.systemui.plugins.PluginDependencyProvider -> com.android.systemui.plugins.PluginDependencyProvider:
    android.util.ArrayMap mDependencies -> mDependencies
    com.android.systemui.plugins.PluginManager mManager -> mManager
    void allowPluginDependency(java.lang.Class) -> allowPluginDependency
    void <init>(com.android.systemui.plugins.PluginManager) -> <init>
    void allowPluginDependency(java.lang.Class,java.lang.Object) -> allowPluginDependency
    java.lang.Object get(com.android.systemui.plugins.Plugin,java.lang.Class) -> get
com.android.systemui.classifier.ProximityClassifier -> com.android.systemui.classifier.ProximityClassifier:
    float mAverageNear -> mAverageNear
    long mGestureStartTimeNano -> mGestureStartTimeNano
    boolean mNear -> mNear
    long mNearDuration -> mNearDuration
    long mNearStartTimeNano -> mNearStartTimeNano
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void update(boolean,long) -> update
com.android.systemui.classifier.PointerCountClassifier -> com.android.systemui.classifier.PointerCountClassifier:
    int mCount -> mCount
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.globalactions.GlobalActionsDialog$13 -> com.android.systemui.globalactions.GlobalActionsDialog$13:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    android.content.pm.UserInfo val$user -> val$user
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,int,android.graphics.drawable.Drawable,java.lang.CharSequence,android.content.pm.UserInfo) -> <init>
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.globalactions.GlobalActionsImpl -> com.android.systemui.globalactions.GlobalActionsImpl:
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.DeviceProvisionedController mDeviceProvisionedController -> mDeviceProvisionedController
    com.android.systemui.globalactions.GlobalActionsDialog mGlobalActions -> mGlobalActions
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguardMonitor -> mKeyguardMonitor
    void <init>(android.content.Context) -> <init>
    void showGlobalActions(com.android.systemui.plugins.GlobalActions$GlobalActionsManager) -> showGlobalActions
    void showShutdownUi(boolean,java.lang.String) -> showShutdownUi
android.support.v7.util.DiffUtil$1 -> android.support.v7.util.DiffUtil$1:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compare(android.support.v7.util.DiffUtil$Snake,android.support.v7.util.DiffUtil$Snake) -> compare
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    int MAX_IMAGE_SIZE -> MAX_IMAGE_SIZE
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void <clinit>() -> <clinit>
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    void <init>() -> <init>
com.android.systemui.recents.model.BackgroundTaskLoader -> com.android.systemui.recents.model.BackgroundTaskLoader:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean mCancelled -> mCancelled
    android.content.Context mContext -> mContext
    android.graphics.drawable.BitmapDrawable mDefaultIcon -> mDefaultIcon
    com.android.systemui.recents.model.TaskKeyLruCache mIconCache -> mIconCache
    com.android.systemui.recents.model.TaskResourceLoadQueue mLoadQueue -> mLoadQueue
    android.os.HandlerThread mLoadThread -> mLoadThread
    android.os.Handler mLoadThreadHandler -> mLoadThreadHandler
    android.os.Handler mMainThreadHandler -> mMainThreadHandler
    com.android.systemui.recents.model.BackgroundTaskLoader$OnIdleChangedListener mOnIdleChangedListener -> mOnIdleChangedListener
    boolean mStarted -> mStarted
    boolean mWaitingOnLoadQueue -> mWaitingOnLoadQueue
    void <init>(com.android.systemui.recents.model.TaskResourceLoadQueue,com.android.systemui.recents.model.TaskKeyLruCache,android.graphics.drawable.BitmapDrawable,com.android.systemui.recents.model.BackgroundTaskLoader$OnIdleChangedListener) -> <init>
    void processLoadQueueItem(com.android.systemui.recents.misc.SystemServicesProxy) -> processLoadQueueItem
    void run() -> run
    void start(android.content.Context) -> start
    void stop() -> stop
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_recents_model_BackgroundTaskLoader_5976() -> lambda$-com_android_systemui_recents_model_BackgroundTaskLoader_5976
    void lambda$-com_android_systemui_recents_model_BackgroundTaskLoader_6163() -> lambda$-com_android_systemui_recents_model_BackgroundTaskLoader_6163
    void lambda$-com_android_systemui_recents_model_BackgroundTaskLoader_8341(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.ThumbnailData,android.graphics.drawable.Drawable) -> lambda$-com_android_systemui_recents_model_BackgroundTaskLoader_8341
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    void <init>() -> <init>
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.app.FragmentManagerImpl$PopBackStackState -> android.support.v4.app.FragmentManagerImpl$PopBackStackState:
    int mFlags -> mFlags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    java.lang.String mName -> mName
    int mId -> mId
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    void <init>(android.support.v4.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
android.support.v7.app.TwilightManager$TwilightState -> android.support.v7.app.TwilightManager$TwilightState:
    long tomorrowSunrise -> tomorrowSunrise
    boolean isNight -> isNight
    long yesterdaySunset -> yesterdaySunset
    long nextUpdate -> nextUpdate
    long todaySunrise -> todaySunrise
    long todaySunset -> todaySunset
    void <init>() -> <init>
com.android.systemui.volume.ZenRadioLayout -> com.android.systemui.volume.ZenRadioLayout:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.View findFirstClickable(android.view.View) -> findFirstClickable
    android.view.View findLastClickable(android.view.View) -> findLastClickable
    void onMeasure(int,int) -> onMeasure
com.android.keyguard.KeyguardSimPinView$2 -> com.android.keyguard.KeyguardSimPinView$2:
    com.android.keyguard.KeyguardSimPinView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSimPinView,com.android.keyguard.KeyguardSimPinView,java.lang.String,int) -> <init>
    void onSimCheckResponse(int,int) -> onSimCheckResponse
android.arch.lifecycle.LifecycleOwner -> android.arch.lifecycle.LifecycleOwner:
com.android.systemui.stackdivider.DividerHandleView$3 -> com.android.systemui.stackdivider.DividerHandleView$3:
    com.android.systemui.stackdivider.DividerHandleView this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.DividerHandleView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.tuner.DemoModeFragment$1 -> com.android.systemui.tuner.DemoModeFragment$1:
    com.android.systemui.tuner.DemoModeFragment this$0 -> this$0
    void <init>(com.android.systemui.tuner.DemoModeFragment,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.systemui.DemoMode -> com.android.systemui.DemoMode:
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA$3 -> com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA$3:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(int,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.qs.tiles.NfcTile -> com.android.systemui.qs.tiles.NfcTile:
    android.nfc.NfcAdapter mAdapter -> mAdapter
    boolean mListening -> mListening
    android.content.BroadcastReceiver mNfcReceiver -> mNfcReceiver
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    android.nfc.NfcAdapter getAdapter() -> getAdapter
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSecondaryClick() -> handleSecondaryClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    void handleUserSwitch(int) -> handleUserSwitch
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
android.support.v7.widget.ListViewCompat$GateKeeperDrawable -> android.support.v7.widget.ListViewCompat$GateKeeperDrawable:
    boolean mEnabled -> mEnabled
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void draw(android.graphics.Canvas) -> draw
    boolean setState(int[]) -> setState
    void setEnabled(boolean) -> setEnabled
    void setHotspot(float,float) -> setHotspot
    void <init>(android.graphics.drawable.Drawable) -> <init>
    boolean setVisible(boolean,boolean) -> setVisible
com.android.systemui.EventLogTags -> com.android.systemui.EventLogTags:
    void writeSysuiLockscreenGesture(int,int,int) -> writeSysuiLockscreenGesture
    void <init>() -> <init>
    void writeSysuiStatusBarState(int,int,int,int,int,int) -> writeSysuiStatusBarState
com.android.systemui.statusbar.phone.LightBarTransitionsController -> com.android.systemui.statusbar.phone.LightBarTransitionsController:
    com.android.systemui.statusbar.phone.LightBarTransitionsController$DarkIntensityApplier mApplier -> mApplier
    float mDarkIntensity -> mDarkIntensity
    android.os.Handler mHandler -> mHandler
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguardMonitor -> mKeyguardMonitor
    float mNextDarkIntensity -> mNextDarkIntensity
    float mPendingDarkIntensity -> mPendingDarkIntensity
    android.animation.ValueAnimator mTintAnimator -> mTintAnimator
    boolean mTintChangePending -> mTintChangePending
    boolean mTransitionDeferring -> mTransitionDeferring
    java.lang.Runnable mTransitionDeferringDoneRunnable -> mTransitionDeferringDoneRunnable
    long mTransitionDeferringDuration -> mTransitionDeferringDuration
    long mTransitionDeferringStartTime -> mTransitionDeferringStartTime
    boolean mTransitionPending -> mTransitionPending
    void <init>(android.content.Context,com.android.systemui.statusbar.phone.LightBarTransitionsController$DarkIntensityApplier) -> <init>
    void animateIconTint(float,long,long) -> animateIconTint
    void appTransitionCancelled() -> appTransitionCancelled
    void appTransitionPending(boolean) -> appTransitionPending
    void appTransitionStarting(long,long,boolean) -> appTransitionStarting
    void deferIconTintChange(float) -> deferIconTintChange
    void destroy(android.content.Context) -> destroy
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    float getCurrentDarkIntensity() -> getCurrentDarkIntensity
    void restoreState(android.os.Bundle) -> restoreState
    void saveState(android.os.Bundle) -> saveState
    void setIconTintInternal(float) -> setIconTintInternal
    void setIconsDark(boolean,boolean) -> setIconsDark
    void lambda$-com_android_systemui_statusbar_phone_LightBarTransitionsController_6072(android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_phone_LightBarTransitionsController_6072
    boolean -set0(com.android.systemui.statusbar.phone.LightBarTransitionsController,boolean) -> -set0
android.support.v7.widget.FitWindowsViewGroup -> android.support.v7.widget.FitWindowsViewGroup:
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
com.android.systemui.statusbar.policy.IconLoggerImpl -> com.android.systemui.statusbar.policy.IconLoggerImpl:
    long MIN_LOG_INTERVAL -> MIN_LOG_INTERVAL
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    java.util.List mIconIndex -> mIconIndex
    android.util.ArraySet mIcons -> mIcons
    long mLastLog -> mLastLog
    java.lang.Runnable mLog -> mLog
    com.android.internal.logging.MetricsLogger mLogger -> mLogger
    void <init>(android.content.Context,android.os.Looper,com.android.internal.logging.MetricsLogger) -> <init>
    void doLog() -> doLog
    int getBitField(android.util.ArraySet) -> getBitField
    void onIconHidden(java.lang.String) -> onIconHidden
    void onIconShown(java.lang.String) -> onIconShown
    void <clinit>() -> <clinit>
    void -com_android_systemui_statusbar_policy_IconLoggerImpl-mthref-0() -> -com_android_systemui_statusbar_policy_IconLoggerImpl-mthref-0
com.android.systemui.screenshot.TakeScreenshotService$1 -> com.android.systemui.screenshot.TakeScreenshotService$1:
    com.android.systemui.screenshot.TakeScreenshotService this$0 -> this$0
    void <init>(com.android.systemui.screenshot.TakeScreenshotService) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.statusbar.phone.-$Lambda$-k5BAGrfhYK4ZberDU0XchX3hS0 -> com.android.systemui.statusbar.phone.-$Lambda$-k5BAGrfhYK4ZberDU0XchX3hS0:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.stackdivider.-$Lambda$rUMSNUxunCY-KlbCD-zkL0v-uzo -> com.android.systemui.stackdivider.-$Lambda$rUMSNUxunCY-KlbCD-zkL0v-uzo:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(int,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.statusbar.notification.TransformState -> com.android.systemui.statusbar.notification.TransformState:
    int[] mOwnPosition -> mOwnPosition
    boolean mSameAsAny -> mSameAsAny
    float mTransformationEndX -> mTransformationEndX
    float mTransformationEndY -> mTransformationEndY
    android.view.View mTransformedView -> mTransformedView
    android.util.Pools$SimplePool sInstancePool -> sInstancePool
    void <init>() -> <init>
    void initFrom(android.view.View) -> initFrom
    boolean sameAs(com.android.systemui.statusbar.notification.TransformState) -> sameAs
    int getViewWidth() -> getViewWidth
    void recycle() -> recycle
    void reset() -> reset
    android.view.View getTransformedView() -> getTransformedView
    void transformViewFullyTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation,float) -> transformViewFullyTo
    void transformViewFullyFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation,float) -> transformViewFullyFrom
    void transformViewVerticalTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation,float) -> transformViewVerticalTo
    void setTransformationEndY(float) -> setTransformationEndY
    void transformViewVerticalFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation,float) -> transformViewVerticalFrom
    void setTransformationStartY(float) -> setTransformationStartY
    int[] getLaidOutLocationOnScreen() -> getLaidOutLocationOnScreen
    com.android.systemui.statusbar.notification.TransformState createFrom(android.view.View) -> createFrom
    boolean transformViewTo(com.android.systemui.statusbar.notification.TransformState,float) -> transformViewTo
    void disappear(float,com.android.systemui.statusbar.TransformableView) -> disappear
    void transformViewFrom(com.android.systemui.statusbar.notification.TransformState,float) -> transformViewFrom
    void appear(float,com.android.systemui.statusbar.TransformableView) -> appear
    void setVisible(boolean,boolean) -> setVisible
    void abortTransformation() -> abortTransformation
    int[] getLocationOnScreen() -> getLocationOnScreen
    float getTransformationStartScaleX() -> getTransformationStartScaleX
    float getTransformationStartScaleY() -> getTransformationStartScaleY
    float getTransformationStartX() -> getTransformationStartX
    float getTransformationStartY() -> getTransformationStartY
    int getViewHeight() -> getViewHeight
    com.android.systemui.statusbar.notification.TransformState obtain() -> obtain
    void prepareFadeIn() -> prepareFadeIn
    void resetTransformedView() -> resetTransformedView
    void setClippingDeactivated(android.view.View,boolean) -> setClippingDeactivated
    void setIsSameAsAnyView(boolean) -> setIsSameAsAnyView
    void setTransformationStartScaleX(float) -> setTransformationStartScaleX
    void setTransformationStartScaleY(float) -> setTransformationStartScaleY
    void setTransformationStartX(float) -> setTransformationStartX
    boolean transformScale(com.android.systemui.statusbar.notification.TransformState) -> transformScale
    void transformViewFrom(com.android.systemui.statusbar.notification.TransformState,int,com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation,float) -> transformViewFrom
    void transformViewFullyFrom(com.android.systemui.statusbar.notification.TransformState,float) -> transformViewFullyFrom
    void transformViewFullyTo(com.android.systemui.statusbar.notification.TransformState,float) -> transformViewFullyTo
    void transformViewTo(com.android.systemui.statusbar.notification.TransformState,int,com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation,float) -> transformViewTo
    void transformViewVerticalFrom(com.android.systemui.statusbar.notification.TransformState,float) -> transformViewVerticalFrom
    void transformViewVerticalTo(com.android.systemui.statusbar.notification.TransformState,float) -> transformViewVerticalTo
    void <clinit>() -> <clinit>
android.support.v7.widget.FastScroller$AnimatorUpdater -> android.support.v7.widget.FastScroller$AnimatorUpdater:
    android.support.v7.widget.FastScroller this$0 -> this$0
    void <init>(android.support.v7.widget.FastScroller) -> <init>
    void <init>(android.support.v7.widget.FastScroller,android.support.v7.widget.FastScroller$AnimatorUpdater) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v7.widget.FitWindowsFrameLayout -> android.support.v7.widget.FitWindowsFrameLayout:
    android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> mListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void <init>(android.content.Context) -> <init>
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
com.android.systemui.plugins.R$fraction -> com.android.systemui.plugins.R$fraction:
    int battery_button_height_fraction -> battery_button_height_fraction
    int battery_subpixel_smoothing_left -> battery_subpixel_smoothing_left
    int battery_subpixel_smoothing_right -> battery_subpixel_smoothing_right
    int bt_battery_button_height_fraction -> bt_battery_button_height_fraction
    int bt_battery_ratio_fraction -> bt_battery_ratio_fraction
    int bt_battery_scale_fraction -> bt_battery_scale_fraction
    int keyguard_clock_y_fraction_max -> keyguard_clock_y_fraction_max
    int keyguard_clock_y_fraction_min -> keyguard_clock_y_fraction_min
    int lb_browse_header_unselect_alpha -> lb_browse_header_unselect_alpha
    int lb_browse_rows_scale -> lb_browse_rows_scale
    int lb_focus_zoom_factor_large -> lb_focus_zoom_factor_large
    int lb_focus_zoom_factor_medium -> lb_focus_zoom_factor_medium
    int lb_focus_zoom_factor_small -> lb_focus_zoom_factor_small
    int lb_focus_zoom_factor_xsmall -> lb_focus_zoom_factor_xsmall
    int lb_search_bar_speech_orb_max_level_zoom -> lb_search_bar_speech_orb_max_level_zoom
    int lb_search_orb_focused_zoom -> lb_search_orb_focused_zoom
    int lb_view_active_level -> lb_view_active_level
    int lb_view_dimmed_level -> lb_view_dimmed_level
    void <init>() -> <init>
android.support.v7.preference.PreferenceGroupAdapter -> android.support.v7.preference.PreferenceGroupAdapter:
    android.os.Handler mHandler -> mHandler
    java.util.List mPreferenceList -> mPreferenceList
    java.lang.Runnable mSyncRunnable -> mSyncRunnable
    java.util.List mPreferenceLayouts -> mPreferenceLayouts
    java.util.List mPreferenceListInternal -> mPreferenceListInternal
    android.support.v7.preference.PreferenceGroup mPreferenceGroup -> mPreferenceGroup
    android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout mTempPreferenceLayout -> mTempPreferenceLayout
    long getItemId(int) -> getItemId
    android.support.v7.preference.Preference getItem(int) -> getItem
    void onPreferenceVisibilityChange(android.support.v7.preference.Preference) -> onPreferenceVisibilityChange
    void addPreferenceClassName(android.support.v7.preference.Preference) -> addPreferenceClassName
    void onPreferenceHierarchyChange(android.support.v7.preference.Preference) -> onPreferenceHierarchyChange
    android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout createPreferenceLayout(android.support.v7.preference.Preference,android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout) -> createPreferenceLayout
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void flattenPreferenceGroup(java.util.List,android.support.v7.preference.PreferenceGroup) -> flattenPreferenceGroup
    void onPreferenceChange(android.support.v7.preference.Preference) -> onPreferenceChange
    android.support.v7.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void -wrap0(android.support.v7.preference.PreferenceGroupAdapter) -> -wrap0
    int getItemViewType(int) -> getItemViewType
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder,int) -> onBindViewHolder
    int getItemCount() -> getItemCount
    void <init>(android.support.v7.preference.PreferenceGroup) -> <init>
    void syncMyPreferences() -> syncMyPreferences
com.android.systemui.pip.phone.PipManager -> com.android.systemui.pip.phone.PipManager:
    android.app.IActivityManager mActivityManager -> mActivityManager
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.android.systemui.pip.phone.InputConsumerController mInputConsumerController -> mInputConsumerController
    com.android.systemui.pip.phone.PipMediaController mMediaController -> mMediaController
    com.android.systemui.pip.phone.PipMenuActivityController mMenuController -> mMenuController
    com.android.systemui.pip.phone.PipNotificationController mNotificationController -> mNotificationController
    com.android.systemui.pip.phone.PipManager$PinnedStackListener mPinnedStackListener -> mPinnedStackListener
    com.android.systemui.recents.misc.SystemServicesProxy$TaskStackListener mTaskStackListener -> mTaskStackListener
    com.android.systemui.pip.phone.PipTouchHandler mTouchHandler -> mTouchHandler
    android.view.IWindowManager mWindowManager -> mWindowManager
    com.android.systemui.pip.phone.PipManager sPipController -> sPipController
    com.android.systemui.pip.phone.PipManager getInstance() -> getInstance
    void <init>() -> <init>
    void dump(java.io.PrintWriter) -> dump
    void initialize(android.content.Context) -> initialize
    void onBusEvent(com.android.systemui.recents.events.component.ExpandPipEvent) -> onBusEvent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void showPictureInPictureMenu() -> showPictureInPictureMenu
    android.app.IActivityManager -get0(com.android.systemui.pip.phone.PipManager) -> -get0
    android.content.Context -get1(com.android.systemui.pip.phone.PipManager) -> -get1
    android.os.Handler -get2(com.android.systemui.pip.phone.PipManager) -> -get2
    com.android.systemui.pip.phone.PipMediaController -get3(com.android.systemui.pip.phone.PipManager) -> -get3
    com.android.systemui.pip.phone.PipMenuActivityController -get4(com.android.systemui.pip.phone.PipManager) -> -get4
    com.android.systemui.pip.phone.PipNotificationController -get5(com.android.systemui.pip.phone.PipManager) -> -get5
    com.android.systemui.pip.phone.PipTouchHandler -get6(com.android.systemui.pip.phone.PipManager) -> -get6
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    boolean mCacheDirty -> mCacheDirty
    boolean mCachedAutoMirrored -> mCachedAutoMirrored
    int mCachedRootAlpha -> mCachedRootAlpha
    android.content.res.ColorStateList mCachedTint -> mCachedTint
    android.graphics.PorterDuff$Mode mCachedTintMode -> mCachedTintMode
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> mVPathRenderer
    android.content.res.ColorStateList mTint -> mTint
    android.graphics.Bitmap mCachedBitmap -> mCachedBitmap
    int mChangingConfigurations -> mChangingConfigurations
    boolean mAutoMirrored -> mAutoMirrored
    android.graphics.Paint mTempPaint -> mTempPaint
    void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    boolean hasTranslucentRoot() -> hasTranslucentRoot
    void updateCachedBitmap(int,int) -> updateCachedBitmap
    boolean canReuseCache() -> canReuseCache
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    void <init>() -> <init>
    boolean canReuseBitmap(int,int) -> canReuseBitmap
    void updateCacheStates() -> updateCacheStates
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
com.google.protobuf.nano.InternalNano -> com.google.protobuf.nano.InternalNano:
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.lang.Object LAZY_INIT_LOCK -> LAZY_INIT_LOCK
    void cloneUnknownFieldData(com.google.protobuf.nano.ExtendableMessageNano,com.google.protobuf.nano.ExtendableMessageNano) -> cloneUnknownFieldData
    void <clinit>() -> <clinit>
    void <init>() -> <init>
com.android.systemui.statusbar.car.ConnectedDeviceSignalController$1 -> com.android.systemui.statusbar.car.ConnectedDeviceSignalController$1:
    com.android.systemui.statusbar.car.ConnectedDeviceSignalController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.ConnectedDeviceSignalController) -> <init>
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress -> com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress:
    android.view.View inflatedAmbientView -> inflatedAmbientView
    android.view.View inflatedContentView -> inflatedContentView
    android.view.View inflatedExpandedView -> inflatedExpandedView
    android.view.View inflatedHeadsUpView -> inflatedHeadsUpView
    android.view.View inflatedPublicView -> inflatedPublicView
    android.widget.RemoteViews newAmbientView -> newAmbientView
    android.widget.RemoteViews newContentView -> newContentView
    android.widget.RemoteViews newExpandedView -> newExpandedView
    android.widget.RemoteViews newHeadsUpView -> newHeadsUpView
    android.widget.RemoteViews newPublicView -> newPublicView
    android.content.Context packageContext -> packageContext
    void <init>() -> <init>
    android.view.View -get0(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get0
    android.view.View -get1(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get1
    android.view.View -get2(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get2
    android.view.View -get3(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get3
    android.view.View -get4(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get4
    android.widget.RemoteViews -get5(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get5
    android.widget.RemoteViews -get6(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get6
    android.widget.RemoteViews -get7(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get7
    android.widget.RemoteViews -get8(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get8
    android.widget.RemoteViews -get9(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> -get9
    android.view.View -set0(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.view.View) -> -set0
    android.view.View -set1(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.view.View) -> -set1
    android.view.View -set2(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.view.View) -> -set2
    android.view.View -set3(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.view.View) -> -set3
    android.view.View -set4(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.view.View) -> -set4
    android.widget.RemoteViews -set5(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.widget.RemoteViews) -> -set5
    android.widget.RemoteViews -set6(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.widget.RemoteViews) -> -set6
    android.widget.RemoteViews -set7(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.widget.RemoteViews) -> -set7
    android.widget.RemoteViews -set8(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.widget.RemoteViews) -> -set8
    android.widget.RemoteViews -set9(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,android.widget.RemoteViews) -> -set9
android.support.v7.view.menu.CascadingMenuPopup$3 -> android.support.v7.view.menu.CascadingMenuPopup$3:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> this$0
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v7.widget.AppCompatAutoCompleteTextView -> android.support.v7.widget.AppCompatAutoCompleteTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    void <init>(android.content.Context) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    void setBackgroundResource(int) -> setBackgroundResource
    void <clinit>() -> <clinit>
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
com.android.systemui.statusbar.notification.-$Lambda$gIHVGdltksSGhu3zzApFHCkb-NE$1 -> com.android.systemui.statusbar.notification.-$Lambda$gIHVGdltksSGhu3zzApFHCkb-NE$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void onCancel() -> onCancel
com.android.systemui.statusbar.phone.MultiUserSwitch$1 -> com.android.systemui.statusbar.phone.MultiUserSwitch$1:
    com.android.systemui.statusbar.phone.MultiUserSwitch this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.MultiUserSwitch,com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
android.support.v7.widget.StaggeredGridLayoutManager$SavedState -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState:
    int[] mSpanLookup -> mSpanLookup
    int mVisibleAnchorPosition -> mVisibleAnchorPosition
    boolean mAnchorLayoutFromEnd -> mAnchorLayoutFromEnd
    int mAnchorPosition -> mAnchorPosition
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean mLastLayoutRTL -> mLastLayoutRTL
    int mSpanOffsetsSize -> mSpanOffsetsSize
    boolean mReverseLayout -> mReverseLayout
    int mSpanLookupSize -> mSpanLookupSize
    int[] mSpanOffsets -> mSpanOffsets
    java.util.List mFullSpanItems -> mFullSpanItems
    int describeContents() -> describeContents
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
com.android.systemui.globalactions.GlobalActionsDialog$BugReportAction -> com.android.systemui.globalactions.GlobalActionsDialog$BugReportAction:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    java.lang.String getStatus() -> getStatus
    boolean onLongPress() -> onLongPress
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.qs.-$Lambda$rOAVza9soej4Frj6ETbtStvRIyo -> com.android.systemui.qs.-$Lambda$rOAVza9soej4Frj6ETbtStvRIyo:
    int -$f0 -> -$f0
    int -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(int,int,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v7.media.MediaRouterJellybeanMr1$ActiveScanWorkaround -> android.support.v7.media.MediaRouterJellybeanMr1$ActiveScanWorkaround:
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    java.lang.reflect.Method mScanWifiDisplaysMethod -> mScanWifiDisplaysMethod
    android.os.Handler mHandler -> mHandler
    boolean mActivelyScanningWifiDisplays -> mActivelyScanningWifiDisplays
    void run() -> run
    void setActiveScanRouteTypes(int) -> setActiveScanRouteTypes
    void <init>(android.content.Context,android.os.Handler) -> <init>
android.support.v7.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.widget.ScrollingTabContainerView$TabAdapter:
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
com.android.systemui.qs.TouchAnimator$1 -> com.android.systemui.qs.TouchAnimator$1:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.qs.TouchAnimator) -> get
    void setValue(com.android.systemui.qs.TouchAnimator,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.statusbar.car.FullscreenUserSwitcher$2 -> com.android.systemui.statusbar.car.FullscreenUserSwitcher$2:
    com.android.systemui.statusbar.car.FullscreenUserSwitcher this$0 -> this$0
    android.view.View val$outgoing -> val$outgoing
    void <init>(com.android.systemui.statusbar.car.FullscreenUserSwitcher,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    int val$startingAlpha -> val$startingAlpha
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    int val$endingAlpha -> val$endingAlpha
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void <init>(android.support.v4.widget.SwipeRefreshLayout,int,int) -> <init>
com.android.systemui.statusbar.NotificationData -> com.android.systemui.statusbar.NotificationData:
    android.util.ArrayMap mEntries -> mEntries
    com.android.systemui.statusbar.NotificationData$Environment mEnvironment -> mEnvironment
    com.android.systemui.statusbar.phone.NotificationGroupManager mGroupManager -> mGroupManager
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    java.util.Comparator mRankingComparator -> mRankingComparator
    android.service.notification.NotificationListenerService$RankingMap mRankingMap -> mRankingMap
    java.util.ArrayList mSortedAndFiltered -> mSortedAndFiltered
    android.service.notification.NotificationListenerService$Ranking mTmpRanking -> mTmpRanking
    void <init>(com.android.systemui.statusbar.NotificationData$Environment) -> <init>
    void add(com.android.systemui.statusbar.NotificationData$Entry) -> add
    int checkUidPermission(android.content.pm.IPackageManager,java.lang.String,int) -> checkUidPermission
    void dump(java.io.PrintWriter,java.lang.String) -> dump
    void dumpEntry(java.io.PrintWriter,java.lang.String,int,com.android.systemui.statusbar.NotificationData$Entry) -> dumpEntry
    void filterAndSort() -> filterAndSort
    com.android.systemui.statusbar.NotificationData$Entry get(java.lang.String) -> get
    java.util.ArrayList getActiveNotifications() -> getActiveNotifications
    android.app.NotificationChannel getChannel(java.lang.String) -> getChannel
    int getImportance(java.lang.String) -> getImportance
    java.lang.String getOverrideGroupKey(java.lang.String) -> getOverrideGroupKey
    boolean getRanking(java.lang.String,android.service.notification.NotificationListenerService$Ranking) -> getRanking
    java.util.List getSnoozeCriteria(java.lang.String) -> getSnoozeCriteria
    int getVisibilityOverride(java.lang.String) -> getVisibilityOverride
    boolean isAmbient(java.lang.String) -> isAmbient
    boolean isSystemNotification(android.service.notification.StatusBarNotification) -> isSystemNotification
    com.android.systemui.statusbar.NotificationData$Entry remove(java.lang.String,android.service.notification.NotificationListenerService$RankingMap) -> remove
    void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager) -> setHeadsUpManager
    boolean shouldFilterOut(android.service.notification.StatusBarNotification) -> shouldFilterOut
    boolean shouldSuppressScreenOff(java.lang.String) -> shouldSuppressScreenOff
    boolean shouldSuppressScreenOn(java.lang.String) -> shouldSuppressScreenOn
    boolean showNotificationEvenIfUnprovisioned(android.service.notification.StatusBarNotification) -> showNotificationEvenIfUnprovisioned
    boolean showNotificationEvenIfUnprovisioned(android.content.pm.IPackageManager,android.service.notification.StatusBarNotification) -> showNotificationEvenIfUnprovisioned
    void updateRanking(android.service.notification.NotificationListenerService$RankingMap) -> updateRanking
    void updateRankingAndSort(android.service.notification.NotificationListenerService$RankingMap) -> updateRankingAndSort
    com.android.systemui.statusbar.NotificationData$Environment -get0(com.android.systemui.statusbar.NotificationData) -> -get0
    com.android.systemui.statusbar.policy.HeadsUpManager -get1(com.android.systemui.statusbar.NotificationData) -> -get1
    android.service.notification.NotificationListenerService$RankingMap -get2(com.android.systemui.statusbar.NotificationData) -> -get2
    boolean -wrap0(android.service.notification.StatusBarNotification) -> -wrap0
com.android.systemui.recents.views.RecentsView$6 -> com.android.systemui.recents.views.RecentsView$6:
    com.android.systemui.recents.views.RecentsView this$0 -> this$0
    com.android.systemui.recents.misc.ReferenceCountedTrigger val$postAnimationTrigger -> val$postAnimationTrigger
    void <init>(com.android.systemui.recents.views.RecentsView,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> <init>
    void run() -> run
android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1 -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.CompoundButtonCompat -> android.support.v4.widget.CompoundButtonCompat:
    android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatBaseImpl IMPL -> IMPL
    void <clinit>() -> <clinit>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl:
    android.view.View$AccessibilityDelegate newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessibilityDelegateBridge
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.android.systemui.recents.model.FilteredTaskList -> com.android.systemui.recents.model.FilteredTaskList:
    com.android.systemui.recents.model.TaskFilter mFilter -> mFilter
    java.util.ArrayList mFilteredTasks -> mFilteredTasks
    android.util.ArrayMap mTaskIndices -> mTaskIndices
    java.util.ArrayList mTasks -> mTasks
    void <init>() -> <init>
    boolean contains(com.android.systemui.recents.model.Task) -> contains
    java.util.ArrayList getTasks() -> getTasks
    int indexOf(com.android.systemui.recents.model.Task) -> indexOf
    void moveTaskToStack(com.android.systemui.recents.model.Task,int,int) -> moveTaskToStack
    boolean remove(com.android.systemui.recents.model.Task) -> remove
    void set(java.util.List) -> set
    boolean setFilter(com.android.systemui.recents.model.TaskFilter) -> setFilter
    int size() -> size
    void updateFilteredTaskIndices() -> updateFilteredTaskIndices
    void updateFilteredTasks() -> updateFilteredTasks
com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost$1 -> com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost$1:
    com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost this$1 -> this$1
    com.android.systemui.doze.DozeHost$PulseCallback val$callback -> val$callback
    void <init>(com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost,com.android.systemui.doze.DozeHost$PulseCallback) -> <init>
    void onPulseFinished() -> onPulseFinished
    void onPulseStarted() -> onPulseStarted
    void setPulsing(java.util.Collection) -> setPulsing
com.android.systemui.statusbar.notification.NotificationUtils -> com.android.systemui.statusbar.notification.NotificationUtils:
    int[] sLocationBase -> sLocationBase
    int[] sLocationOffset -> sLocationOffset
    boolean isHapticFeedbackDisabled(android.content.Context) -> isHapticFeedbackDisabled
    float interpolate(float,float,float) -> interpolate
    float getRelativeYOffset(android.view.View,android.view.View) -> getRelativeYOffset
    boolean isGrayscale(android.widget.ImageView,com.android.internal.util.NotificationColorUtil) -> isGrayscale
    void <init>() -> <init>
    int interpolateColors(int,int,float) -> interpolateColors
    void <clinit>() -> <clinit>
android.support.v4.widget.TextViewCompat$TextViewCompatApi18Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi18Impl:
    void <init>() -> <init>
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ActionMenuView$LayoutParams:
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
    boolean isOverflowButton -> isOverflowButton
    boolean expandable -> expandable
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.support.v7.widget.ActionMenuView$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
com.android.keyguard.ViewMediatorCallback -> com.android.keyguard.ViewMediatorCallback:
    void userActivity() -> userActivity
    boolean isScreenOn() -> isScreenOn
    void playTrustedSound() -> playTrustedSound
    void keyguardDoneDrawing() -> keyguardDoneDrawing
    void keyguardDonePending(boolean,int) -> keyguardDonePending
    void keyguardDone(boolean,int) -> keyguardDone
    void resetKeyguard() -> resetKeyguard
    void setNeedsInput(boolean) -> setNeedsInput
    int getBouncerPromptReason() -> getBouncerPromptReason
    void keyguardGone() -> keyguardGone
    void readyForKeyguardDone() -> readyForKeyguardDone
    void onSecondaryDisplayShowingChanged(int) -> onSecondaryDisplayShowingChanged
android.support.v17.leanback.widget.ImeKeyMonitor$ImeKeyListener -> android.support.v17.leanback.widget.ImeKeyMonitor$ImeKeyListener:
    boolean onKeyPreIme(android.widget.EditText,int,android.view.KeyEvent) -> onKeyPreIme
com.android.systemui.qs.customize.QSCustomizer$1 -> com.android.systemui.qs.customize.QSCustomizer$1:
    com.android.systemui.qs.customize.QSCustomizer this$0 -> this$0
    void <init>(com.android.systemui.qs.customize.QSCustomizer) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$6 -> com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$6:
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager this$0 -> this$0
    java.lang.Runnable val$endRunnable -> val$endRunnable
    void <init>(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager,java.lang.Runnable) -> <init>
    void run() -> run
    void lambda$-com_android_systemui_statusbar_phone_StatusBarKeyguardViewManager$6_18318() -> lambda$-com_android_systemui_statusbar_phone_StatusBarKeyguardViewManager$6_18318
android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager$1 -> android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager$1:
    android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager) -> <init>
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$14 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$14:
    boolean -$f0 -> -$f0
    boolean -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(boolean,boolean,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.doze.DozeLog$SummaryStats -> com.android.systemui.doze.DozeLog$SummaryStats:
    int mCount -> mCount
    void <init>() -> <init>
    void append() -> append
    void dump(java.io.PrintWriter,java.lang.String) -> dump
    void <init>(com.android.systemui.doze.DozeLog$SummaryStats) -> <init>
android.support.v17.leanback.widget.picker.PickerUtility$DateConstant -> android.support.v17.leanback.widget.picker.PickerUtility$DateConstant:
    java.lang.String[] days -> days
    java.util.Locale locale -> locale
    java.lang.String[] months -> months
    void <init>(java.util.Locale,android.content.res.Resources,android.support.v17.leanback.widget.picker.PickerUtility$DateConstant) -> <init>
    void <init>(java.util.Locale,android.content.res.Resources) -> <init>
com.android.systemui.doze.-$Lambda$krmSGe4g6CSLLG4RW6_aYJyrfaw -> com.android.systemui.doze.-$Lambda$krmSGe4g6CSLLG4RW6_aYJyrfaw:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(int,boolean,float,float) -> $m$0
    void onSensorPulse(int,boolean,float,float) -> onSensorPulse
com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA -> com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA:
    byte $id -> $id
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$0 -> $INST$0
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$1 -> $INST$1
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$2 -> $INST$2
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$3 -> $INST$3
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$4 -> $INST$4
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$5 -> $INST$5
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$6 -> $INST$6
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$7 -> $INST$7
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$8 -> $INST$8
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$9 -> $INST$9
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$10 -> $INST$10
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$11 -> $INST$11
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$12 -> $INST$12
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA $INST$13 -> $INST$13
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    java.lang.Object $m$0() -> $m$0
    java.lang.Object $m$1() -> $m$1
    java.lang.Object $m$2() -> $m$2
    java.lang.Object $m$3() -> $m$3
    java.lang.Object $m$4() -> $m$4
    java.lang.Object $m$5() -> $m$5
    java.lang.Object $m$6() -> $m$6
    java.lang.Object $m$7() -> $m$7
    java.lang.Object $m$8() -> $m$8
    java.lang.Object $m$9() -> $m$9
    java.lang.Object $m$10() -> $m$10
    java.lang.Object $m$11() -> $m$11
    java.lang.Object $m$12() -> $m$12
    java.lang.Object $m$13() -> $m$13
    java.lang.Object createDependency() -> createDependency
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    float widthFactor -> widthFactor
    java.lang.Object object -> object
    float offset -> offset
    boolean scrolling -> scrolling
    int position -> position
    void <init>() -> <init>
com.android.systemui.statusbar.phone.SettingsButton$3 -> com.android.systemui.statusbar.phone.SettingsButton$3:
    com.android.systemui.statusbar.phone.SettingsButton this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.SettingsButton) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.systemui.power.PowerNotificationWarnings$1 -> com.android.systemui.power.PowerNotificationWarnings$1:
    com.android.systemui.power.PowerNotificationWarnings this$0 -> this$0
    void <init>(com.android.systemui.power.PowerNotificationWarnings) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.app.MediaRouteExpandCollapseButton -> android.support.v7.app.MediaRouteExpandCollapseButton:
    boolean mIsGroupExpanded -> mIsGroupExpanded
    android.view.View$OnClickListener mListener -> mListener
    android.graphics.drawable.AnimationDrawable mExpandAnimationDrawable -> mExpandAnimationDrawable
    java.lang.String mCollapseGroupDescription -> mCollapseGroupDescription
    android.graphics.drawable.AnimationDrawable mCollapseAnimationDrawable -> mCollapseAnimationDrawable
    java.lang.String mExpandGroupDescription -> mExpandGroupDescription
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.widget.ListPopupWindow$PopupScrollListener:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State -> com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State:
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State Off -> Off
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State On -> On
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State TurningOff -> TurningOff
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State TurningOn -> TurningOn
    boolean inTransition -> inTransition
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State[] $VALUES -> $VALUES
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean inTransition() -> inTransition
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State valueOf(java.lang.String) -> valueOf
    com.android.systemui.globalactions.GlobalActionsDialog$ToggleAction$State[] values() -> values
    void <clinit>() -> <clinit>
com.android.settingslib.animation.AppearAnimationUtils -> com.android.settingslib.animation.AppearAnimationUtils:
    boolean mAppearing -> mAppearing
    float mStartTranslation -> mStartTranslation
    float mDelayScale -> mDelayScale
    long mDuration -> mDuration
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    com.android.settingslib.animation.AppearAnimationUtils$AppearAnimationProperties mProperties -> mProperties
    com.android.settingslib.animation.AppearAnimationUtils$RowTranslationScaler mRowTranslationScaler -> mRowTranslationScaler
    float getStartTranslation() -> getStartTranslation
    void startAnimations(com.android.settingslib.animation.AppearAnimationUtils$AppearAnimationProperties,java.lang.Object[],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator) -> startAnimations
    void startTranslationYAnimation(android.view.View,long,long,float,android.view.animation.Interpolator) -> startTranslationYAnimation
    com.android.settingslib.animation.AppearAnimationUtils$AppearAnimationProperties getDelays(java.lang.Object[][]) -> getDelays
    void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator) -> <init>
    long calculateDelay(int,int) -> calculateDelay
    void startAnimation2d(java.lang.Object[][],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator) -> startAnimation2d
    void startAnimation(java.lang.Object[],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator) -> startAnimation
    void startAnimation2d(android.view.View[][],java.lang.Runnable) -> startAnimation2d
    void createAnimation(android.view.View,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable) -> createAnimation
    void <init>(android.content.Context) -> <init>
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    com.android.settingslib.animation.AppearAnimationUtils$AppearAnimationProperties getDelays(java.lang.Object[]) -> getDelays
    void createAnimation(java.lang.Object,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable) -> createAnimation
    void startAnimations(com.android.settingslib.animation.AppearAnimationUtils$AppearAnimationProperties,java.lang.Object[][],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator) -> startAnimations
    void startAnimation(android.view.View[],java.lang.Runnable) -> startAnimation
com.android.systemui.statusbar.policy.BluetoothControllerImpl$H -> com.android.systemui.statusbar.policy.BluetoothControllerImpl$H:
    java.util.ArrayList mCallbacks -> mCallbacks
    com.android.systemui.statusbar.policy.BluetoothControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.BluetoothControllerImpl,android.os.Looper) -> <init>
    void firePairedDevicesChanged() -> firePairedDevicesChanged
    void fireStateChange() -> fireStateChange
    void fireStateChange(com.android.systemui.statusbar.policy.BluetoothController$Callback) -> fireStateChange
    void handleMessage(android.os.Message) -> handleMessage
    java.util.ArrayList -get0(com.android.systemui.statusbar.policy.BluetoothControllerImpl$H) -> -get0
android.support.v4.os.TraceCompat -> android.support.v4.os.TraceCompat:
    void <init>() -> <init>
    void endSection() -> endSection
    void beginSection(java.lang.String) -> beginSection
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.app.MediaRouteChooserDialog$RouteAdapter -> android.support.v7.app.MediaRouteChooserDialog$RouteAdapter:
    android.graphics.drawable.Drawable mSpeakerIcon -> mSpeakerIcon
    android.view.LayoutInflater mInflater -> mInflater
    android.graphics.drawable.Drawable mSpeakerGroupIcon -> mSpeakerGroupIcon
    android.graphics.drawable.Drawable mDefaultIcon -> mDefaultIcon
    android.graphics.drawable.Drawable mTvIcon -> mTvIcon
    android.support.v7.app.MediaRouteChooserDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteChooserDialog,android.content.Context,java.util.List) -> <init>
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    android.graphics.drawable.Drawable getDefaultIconDrawable(android.support.v7.media.MediaRouter$RouteInfo) -> getDefaultIconDrawable
    boolean isEnabled(int) -> isEnabled
    android.graphics.drawable.Drawable getIconDrawable(android.support.v7.media.MediaRouter$RouteInfo) -> getIconDrawable
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.android.systemui.statusbar.policy.DeviceProvisionedController$DeviceProvisionedListener -> com.android.systemui.statusbar.policy.DeviceProvisionedController$DeviceProvisionedListener:
    void onDeviceProvisionedChanged() -> onDeviceProvisionedChanged
    void onUserSetupChanged() -> onUserSetupChanged
    void onUserSwitched() -> onUserSwitched
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24:
    void <init>(java.lang.Object) -> <init>
com.android.systemui.statusbar.policy.-$Lambda$SnNEiKlEvYrU6iyicO3bRfhbXXw -> com.android.systemui.statusbar.policy.-$Lambda$SnNEiKlEvYrU6iyicO3bRfhbXXw:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void $m$2(java.lang.Object) -> $m$2
    void $m$3(java.lang.Object) -> $m$3
    void accept(java.lang.Object) -> accept
android.support.v4.graphics.TypefaceCompat$TypefaceCompatImpl -> android.support.v4.graphics.TypefaceCompat$TypefaceCompatImpl:
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    void <init>() -> <init>
com.android.systemui.recents.model.TaskStack$DockState$ViewState -> com.android.systemui.recents.model.TaskStack$DockState$ViewState:
    android.util.IntProperty HINT_ALPHA -> HINT_ALPHA
    int dockAreaAlpha -> dockAreaAlpha
    android.graphics.drawable.ColorDrawable dockAreaOverlay -> dockAreaOverlay
    int hintTextAlpha -> hintTextAlpha
    int hintTextOrientation -> hintTextOrientation
    android.animation.AnimatorSet mDockAreaOverlayAnimator -> mDockAreaOverlayAnimator
    java.lang.String mHintText -> mHintText
    int mHintTextAlpha -> mHintTextAlpha
    android.graphics.Point mHintTextBounds -> mHintTextBounds
    android.graphics.Paint mHintTextPaint -> mHintTextPaint
    int mHintTextResId -> mHintTextResId
    android.graphics.Rect mTmpRect -> mTmpRect
    void <init>(int,int,int,int) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void startAnimation(android.graphics.Rect,int,int,int,android.view.animation.Interpolator,boolean,boolean) -> startAnimation
    void update(android.content.Context) -> update
    void <clinit>() -> <clinit>
    int -get0(com.android.systemui.recents.model.TaskStack$DockState$ViewState) -> -get0
    int -set0(com.android.systemui.recents.model.TaskStack$DockState$ViewState,int) -> -set0
    void <init>(int,int,int,int,com.android.systemui.recents.model.TaskStack$DockState$ViewState) -> <init>
com.android.systemui.qs.tiles.UserDetailView -> com.android.systemui.qs.tiles.UserDetailView:
    com.android.systemui.qs.tiles.UserDetailView$Adapter mAdapter -> mAdapter
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void createAndSetAdapter(com.android.systemui.statusbar.policy.UserSwitcherController) -> createAndSetAdapter
    com.android.systemui.qs.tiles.UserDetailView inflate(android.content.Context,android.view.ViewGroup,boolean) -> inflate
    void refreshAdapter() -> refreshAdapter
com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction -> com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction:
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction[] $VALUES -> $VALUES
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction DOWN -> DOWN
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction LEFT -> LEFT
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction RIGHT -> RIGHT
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction UNDEFINED -> UNDEFINED
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction UP -> UP
    void <init>(java.lang.String,int) -> <init>
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction valueOf(java.lang.String) -> valueOf
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction[] values() -> values
    void <clinit>() -> <clinit>
android.support.v7.view.menu.SubMenuWrapperICS -> android.support.v7.view.menu.SubMenuWrapperICS:
    void clearHeader() -> clearHeader
    void <init>(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> <init>
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    android.view.MenuItem getItem() -> getItem
    android.support.v4.internal.view.SupportSubMenu getWrappedObject() -> getWrappedObject
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
com.android.systemui.statusbar.policy.MobileSignalController -> com.android.systemui.statusbar.policy.MobileSignalController:
    android.telephony.SubscriptionInfo mSubscriptionInfo -> mSubscriptionInfo
    int STATUS_BAR_STYLE_ANDROID_DEFAULT -> STATUS_BAR_STYLE_ANDROID_DEFAULT
    int STATUS_BAR_STYLE_CDMA_1X_COMBINED -> STATUS_BAR_STYLE_CDMA_1X_COMBINED
    int STATUS_BAR_STYLE_DATA_VOICE -> STATUS_BAR_STYLE_DATA_VOICE
    int STATUS_BAR_STYLE_DEFAULT_DATA -> STATUS_BAR_STYLE_DEFAULT_DATA
    com.android.systemui.statusbar.policy.NetworkControllerImpl$Config mConfig -> mConfig
    int mDataNetType -> mDataNetType
    int mDataState -> mDataState
    com.android.systemui.statusbar.policy.MobileSignalController$MobileIconGroup mDefaultIcons -> mDefaultIcons
    com.android.systemui.statusbar.policy.NetworkControllerImpl$SubscriptionDefaults mDefaults -> mDefaults
    boolean mDualBar -> mDualBar
    java.lang.String mNetworkNameDefault -> mNetworkNameDefault
    java.lang.String mNetworkNameSeparator -> mNetworkNameSeparator
    android.util.SparseArray mNetworkToIconLookup -> mNetworkToIconLookup
    android.database.ContentObserver mObserver -> mObserver
    android.telephony.TelephonyManager mPhone -> mPhone
    android.telephony.PhoneStateListener mPhoneStateListener -> mPhoneStateListener
    android.telephony.ServiceState mServiceState -> mServiceState
    android.telephony.SignalStrength mSignalStrength -> mSignalStrength
    int mStyle -> mStyle
    void registerListener() -> registerListener
    void unregisterListener() -> unregisterListener
    void notifyListeners(com.android.systemui.statusbar.policy.NetworkController$SignalCallback) -> notifyListeners
    void handleBroadcast(android.content.Intent) -> handleBroadcast
    void setConfiguration(com.android.systemui.statusbar.policy.NetworkControllerImpl$Config) -> setConfiguration
    void <init>(android.content.Context,com.android.systemui.statusbar.policy.NetworkControllerImpl$Config,boolean,android.telephony.TelephonyManager,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl,android.telephony.SubscriptionInfo,com.android.systemui.statusbar.policy.NetworkControllerImpl$SubscriptionDefaults,android.os.Looper) -> <init>
    void setUserSetupComplete(boolean) -> setUserSetupComplete
    void setAirplaneMode(boolean) -> setAirplaneMode
    void updateConnectivity(java.util.BitSet,java.util.BitSet) -> updateConnectivity
    void dump(java.io.PrintWriter) -> dump
    void setActivity(int) -> setActivity
    void setCarrierNetworkChangeMode(boolean) -> setCarrierNetworkChangeMode
    com.android.systemui.statusbar.policy.MobileSignalController$MobileState cleanState() -> cleanState
    void generateIconGroup() -> generateIconGroup
    int getAlternateLteLevel(android.telephony.SignalStrength) -> getAlternateLteLevel
    int getCurrentIconId() -> getCurrentIconId
    int getDataNetworkType() -> getDataNetworkType
    int getDataRegState() -> getDataRegState
    int getNumLevels() -> getNumLevels
    int getQsCurrentIconId() -> getQsCurrentIconId
    java.lang.String getResourceName(int) -> getResourceName
    int getSimSlotIndex() -> getSimSlotIndex
    int getVoiceNetworkType() -> getVoiceNetworkType
    int getVoiceRegState() -> getVoiceRegState
    int getVoiceSignalLevel() -> getVoiceSignalLevel
    boolean hasService() -> hasService
    boolean isCarrierNetworkChangeActive() -> isCarrierNetworkChangeActive
    boolean isCdma() -> isCdma
    boolean isDataDisabled() -> isDataDisabled
    boolean isEmergencyOnly() -> isEmergencyOnly
    boolean isRoaming() -> isRoaming
    void mapIconSets() -> mapIconSets
    boolean showDataAndVoice() -> showDataAndVoice
    boolean showMobileActivity() -> showMobileActivity
    void updateDataSim() -> updateDataSim
    void updateNetworkName(boolean,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateNetworkName
    void updateTelephony() -> updateTelephony
    com.android.systemui.statusbar.policy.SignalController$State cleanState() -> cleanState
    int -get0(com.android.systemui.statusbar.policy.MobileSignalController) -> -get0
    android.telephony.ServiceState -get1(com.android.systemui.statusbar.policy.MobileSignalController) -> -get1
    int -set0(com.android.systemui.statusbar.policy.MobileSignalController,int) -> -set0
    int -set1(com.android.systemui.statusbar.policy.MobileSignalController,int) -> -set1
    android.telephony.ServiceState -set2(com.android.systemui.statusbar.policy.MobileSignalController,android.telephony.ServiceState) -> -set2
    android.telephony.SignalStrength -set3(com.android.systemui.statusbar.policy.MobileSignalController,android.telephony.SignalStrength) -> -set3
    void -wrap0(com.android.systemui.statusbar.policy.MobileSignalController) -> -wrap0
android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry -> android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry:
    android.content.res.ColorStateList value -> value
    android.content.res.Configuration configuration -> configuration
    void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
com.android.settingslib.widget.FooterPreference -> com.android.settingslib.widget.FooterPreference:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void init() -> init
com.android.systemui.statusbar.policy.DarkIconDispatcher -> com.android.systemui.statusbar.policy.DarkIconDispatcher:
    int[] sTmpInt2 -> sTmpInt2
    android.graphics.Rect sTmpRect -> sTmpRect
    void addDarkReceiver(com.android.systemui.statusbar.policy.DarkIconDispatcher$DarkReceiver) -> addDarkReceiver
    void removeDarkReceiver(com.android.systemui.statusbar.policy.DarkIconDispatcher$DarkReceiver) -> removeDarkReceiver
    int getTint(android.graphics.Rect,android.view.View,int) -> getTint
    boolean isInArea(android.graphics.Rect,android.view.View) -> isInArea
    void setIconsDarkArea(android.graphics.Rect) -> setIconsDarkArea
    com.android.systemui.statusbar.phone.LightBarTransitionsController getTransitionsController() -> getTransitionsController
    void addDarkReceiver(android.widget.ImageView) -> addDarkReceiver
    void removeDarkReceiver(android.widget.ImageView) -> removeDarkReceiver
    void applyDark(android.widget.ImageView) -> applyDark
    float getDarkIntensity(android.graphics.Rect,android.view.View,float) -> getDarkIntensity
    void <clinit>() -> <clinit>
com.android.systemui.recents.events.ui.TaskSnapshotChangedEvent -> com.android.systemui.recents.events.ui.TaskSnapshotChangedEvent:
    int taskId -> taskId
    com.android.systemui.recents.model.ThumbnailData thumbnailData -> thumbnailData
    void <init>(int,com.android.systemui.recents.model.ThumbnailData) -> <init>
com.android.systemui.pip.phone.-$Lambda$DtUkKn4xIMuq8TSa5smVIdc6GkM$2 -> com.android.systemui.pip.phone.-$Lambda$DtUkKn4xIMuq8TSa5smVIdc6GkM$2:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void onAccessibilityShowMenu() -> onAccessibilityShowMenu
com.android.systemui.recents.views.AnimateableViewBounds -> com.android.systemui.recents.views.AnimateableViewBounds:
    float mAlpha -> mAlpha
    android.graphics.Rect mClipBounds -> mClipBounds
    android.graphics.Rect mClipRect -> mClipRect
    int mCornerRadius -> mCornerRadius
    android.graphics.Rect mLastClipBounds -> mLastClipBounds
    android.view.View mSourceView -> mSourceView
    void <init>(android.view.View,int) -> <init>
    float getAlpha() -> getAlpha
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
    void reset() -> reset
    void setAlpha(float) -> setAlpha
    void setClipBottom(int) -> setClipBottom
    void updateClipBounds() -> updateClipBounds
com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState -> com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState:
    java.util.HashMap paddingMap -> paddingMap
    int scrollY -> scrollY
    java.util.ArrayList visibleChildren -> visibleChildren
    com.android.systemui.statusbar.stack.StackScrollAlgorithm this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.StackScrollAlgorithm) -> <init>
    int getPaddingAfterChild(com.android.systemui.statusbar.ExpandableView) -> getPaddingAfterChild
com.android.systemui.qs.customize.TileAdapter$1 -> com.android.systemui.qs.customize.TileAdapter$1:
    com.android.systemui.qs.customize.TileAdapter this$0 -> this$0
    void <init>(com.android.systemui.qs.customize.TileAdapter) -> <init>
    int getSpanSize(int) -> getSpanSize
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    int mLastScrollerY -> mLastScrollerY
    android.widget.EdgeEffect mEdgeGlowTop -> mEdgeGlowTop
    boolean mSmoothScrollingEnabled -> mSmoothScrollingEnabled
    boolean mIsLayoutDirty -> mIsLayoutDirty
    int mLastMotionY -> mLastMotionY
    int mMinimumVelocity -> mMinimumVelocity
    int mNestedYOffset -> mNestedYOffset
    float mVerticalScrollFactor -> mVerticalScrollFactor
    int[] SCROLLVIEW_STYLEABLE -> SCROLLVIEW_STYLEABLE
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    android.support.v4.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> mOnScrollChangeListener
    long mLastScroll -> mLastScroll
    int mActivePointerId -> mActivePointerId
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> ACCESSIBILITY_DELEGATE
    android.widget.EdgeEffect mEdgeGlowBottom -> mEdgeGlowBottom
    int[] mScrollOffset -> mScrollOffset
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> mSavedState
    android.widget.OverScroller mScroller -> mScroller
    boolean mFillViewport -> mFillViewport
    boolean mIsLaidOut -> mIsLaidOut
    boolean mIsBeingDragged -> mIsBeingDragged
    int[] mScrollConsumed -> mScrollConsumed
    android.view.View mChildToScrollTo -> mChildToScrollTo
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> mChildHelper
    int mMaximumVelocity -> mMaximumVelocity
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void scrollTo(int,int) -> scrollTo
    void doScrollY(int) -> doScrollY
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    void setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    void ensureGlows() -> ensureGlows
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    boolean inChild(int,int) -> inChild
    int getScrollRange() -> getScrollRange
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    int clamp(int,int,int) -> clamp
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    void onMeasure(int,int) -> onMeasure
    boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    void setFillViewport(boolean) -> setFillViewport
    void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    boolean arrowScroll(int) -> arrowScroll
    void initScrollView() -> initScrollView
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void fling(int) -> fling
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean fullScroll(int) -> fullScroll
    boolean isOffScreen(android.view.View) -> isOffScreen
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    void addView(android.view.View) -> addView
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean startNestedScroll(int,int) -> startNestedScroll
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void onAttachedToWindow() -> onAttachedToWindow
    void smoothScrollTo(int,int) -> smoothScrollTo
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    void measureChild(android.view.View,int,int) -> measureChild
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    void requestLayout() -> requestLayout
    void recycleVelocityTracker() -> recycleVelocityTracker
    void addView(android.view.View,int) -> addView
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean canScroll() -> canScroll
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void computeScroll() -> computeScroll
    int getNestedScrollAxes() -> getNestedScrollAxes
    void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void draw(android.graphics.Canvas) -> draw
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    void endDrag() -> endDrag
    void stopNestedScroll(int) -> stopNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean startNestedScroll(int) -> startNestedScroll
    void <init>(android.content.Context) -> <init>
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void scrollToChild(android.view.View) -> scrollToChild
    android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    void <clinit>() -> <clinit>
    void smoothScrollBy(int,int) -> smoothScrollBy
    void stopNestedScroll() -> stopNestedScroll
    boolean pageScroll(int) -> pageScroll
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$3 -> com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$3:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper this$0 -> this$0
    java.lang.Runnable val$onFinishedListener -> val$onFinishedListener
    boolean val$right -> val$right
    void <init>(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,java.lang.Runnable,boolean) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.tuner.CustomListPreference -> com.android.systemui.tuner.CustomListPreference:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    boolean isAutoClosePreference() -> isAutoClosePreference
    void onDialogClosed(boolean) -> onDialogClosed
    android.app.Dialog onDialogCreated(android.app.DialogFragment,android.app.Dialog) -> onDialogCreated
    void onDialogStateRestored(android.app.DialogFragment,android.app.Dialog,android.os.Bundle) -> onDialogStateRestored
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder,android.content.DialogInterface$OnClickListener) -> onPrepareDialogBuilder
android.support.v4.view.AbsSavedState$2 -> android.support.v4.view.AbsSavedState$2:
    android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.view.AbsSavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    void <init>() -> <init>
    android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.plugins.qs.QSTile$State -> com.android.systemui.plugins.qs.QSTile$State:
    com.android.systemui.plugins.qs.QSTile$Icon icon -> icon
    com.android.systemui.plugins.qs.QSTile$SlashState slash -> slash
    boolean disabledByPolicy -> disabledByPolicy
    boolean dualTarget -> dualTarget
    int state -> state
    java.lang.CharSequence label -> label
    boolean isTransient -> isTransient
    java.lang.CharSequence contentDescription -> contentDescription
    java.lang.String expandedAccessibilityClassName -> expandedAccessibilityClassName
    java.lang.CharSequence dualLabelContentDescription -> dualLabelContentDescription
    int VERSION -> VERSION
    java.util.function.Supplier iconSupplier -> iconSupplier
    java.lang.String toString() -> toString
    java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    com.android.systemui.plugins.qs.QSTile$State copy() -> copy
    void <init>() -> <init>
    boolean copyTo(com.android.systemui.plugins.qs.QSTile$State) -> copyTo
android.support.v7.mediarouter.R$style -> android.support.v7.mediarouter.R$style:
    int Theme_MediaRouter -> Theme_MediaRouter
    int Theme_MediaRouter_Light -> Theme_MediaRouter_Light
    int Theme_MediaRouter_LightControlPanel -> Theme_MediaRouter_LightControlPanel
    int Theme_MediaRouter_Light_DarkControlPanel -> Theme_MediaRouter_Light_DarkControlPanel
    void <init>() -> <init>
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.recents.DockRegion -> com.android.systemui.recents.DockRegion:
    com.android.systemui.recents.model.TaskStack$DockState[] PHONE_LANDSCAPE -> PHONE_LANDSCAPE
    com.android.systemui.recents.model.TaskStack$DockState[] PHONE_PORTRAIT -> PHONE_PORTRAIT
    com.android.systemui.recents.model.TaskStack$DockState[] TABLET_LANDSCAPE -> TABLET_LANDSCAPE
    com.android.systemui.recents.model.TaskStack$DockState[] TABLET_PORTRAIT -> TABLET_PORTRAIT
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.helper.ItemTouchUIUtilImpl$Api21Impl -> android.support.v7.widget.helper.ItemTouchUIUtilImpl$Api21Impl:
    void clearView(android.view.View) -> clearView
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void <init>() -> <init>
    float findMaxElevation(android.support.v7.widget.RecyclerView,android.view.View) -> findMaxElevation
android.support.v17.leanback.widget.WindowAlignment$Axis -> android.support.v17.leanback.widget.WindowAlignment$Axis:
    int mSize -> mSize
    int mWindowAlignment -> mWindowAlignment
    float mWindowAlignmentOffsetPercent -> mWindowAlignmentOffsetPercent
    int mPaddingMin -> mPaddingMin
    java.lang.String mName -> mName
    int mMaxScroll -> mMaxScroll
    int mMaxEdge -> mMaxEdge
    int mMinScroll -> mMinScroll
    int mWindowAlignmentOffset -> mWindowAlignmentOffset
    int mPaddingMax -> mPaddingMax
    int mPreferredKeyLine -> mPreferredKeyLine
    boolean mReversedFlow -> mReversedFlow
    int mMinEdge -> mMinEdge
    void setReversedFlow(boolean) -> setReversedFlow
    void invalidateScrollMin() -> invalidateScrollMin
    boolean isMaxUnknown() -> isMaxUnknown
    boolean isPreferKeylineOverLowEdge() -> isPreferKeylineOverLowEdge
    void invalidateScrollMax() -> invalidateScrollMax
    void setSize(int) -> setSize
    int calculateKeyline() -> calculateKeyline
    int getPaddingMin() -> getPaddingMin
    int getClientSize() -> getClientSize
    int getMaxScroll() -> getMaxScroll
    int getPaddingMax() -> getPaddingMax
    void setPadding(int,int) -> setPadding
    void setWindowAlignment(int) -> setWindowAlignment
    int getMinScroll() -> getMinScroll
    void <init>(java.lang.String) -> <init>
    void updateMinMax(int,int,int,int) -> updateMinMax
    java.lang.String toString() -> toString
    int getScroll(int) -> getScroll
    boolean isPreferKeylineOverHighEdge() -> isPreferKeylineOverHighEdge
    void reset() -> reset
    int calculateScrollToKeyLine(int,int) -> calculateScrollToKeyLine
    int getSize() -> getSize
    boolean isMinUnknown() -> isMinUnknown
com.android.systemui.plugins.qs.QSTile$SlashState -> com.android.systemui.plugins.qs.QSTile$SlashState:
    float rotation -> rotation
    int VERSION -> VERSION
    boolean isSlashed -> isSlashed
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    void <init>() -> <init>
    com.android.systemui.plugins.qs.QSTile$SlashState copy() -> copy
android.support.v17.leanback.transition.ParallaxTransition$1 -> android.support.v17.leanback.transition.ParallaxTransition$1:
    android.support.v17.leanback.transition.ParallaxTransition this$0 -> this$0
    android.support.v17.leanback.widget.Parallax val$source -> val$source
    void <init>(android.support.v17.leanback.transition.ParallaxTransition,android.support.v17.leanback.widget.Parallax) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.phone.KeyguardPreviewContainer -> com.android.systemui.statusbar.phone.KeyguardPreviewContainer:
    android.graphics.drawable.Drawable mBlackBarDrawable -> mBlackBarDrawable
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
com.android.systemui.doze.DozeMachine$Service$Delegate -> com.android.systemui.doze.DozeMachine$Service$Delegate:
    com.android.systemui.doze.DozeMachine$Service mDelegate -> mDelegate
    void <init>(com.android.systemui.doze.DozeMachine$Service) -> <init>
    void finish() -> finish
    void requestWakeUp() -> requestWakeUp
    void setDozeScreenBrightness(int) -> setDozeScreenBrightness
    void setDozeScreenState(int) -> setDozeScreenState
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    java.util.ArrayList val$enteringViews -> val$enteringViews
    java.lang.Object val$exitTransition -> val$exitTransition
    java.lang.Object val$enterTransition -> val$enterTransition
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.support.v4.app.FragmentTransitionCompat21 this$0 -> this$0
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    void onTransitionResume(android.transition.Transition) -> onTransitionResume
    void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    void <init>(android.support.v4.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    void onTransitionPause(android.transition.Transition) -> onTransitionPause
    void onTransitionStart(android.transition.Transition) -> onTransitionStart
android.support.v7.app.AlertController$RecycleListView -> android.support.v7.app.AlertController$RecycleListView:
    int mPaddingBottomNoButtons -> mPaddingBottomNoButtons
    int mPaddingTopNoTitle -> mPaddingTopNoTitle
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void setHasDecor(boolean,boolean) -> setHasDecor
com.android.systemui.volume.VolumeDialogImpl$3 -> com.android.systemui.volume.VolumeDialogImpl$3:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v17.leanback.widget.BaseGridView$OnUnhandledKeyListener -> android.support.v17.leanback.widget.BaseGridView$OnUnhandledKeyListener:
    boolean onUnhandledKey(android.view.KeyEvent) -> onUnhandledKey
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowCompatBaseImpl IMPL -> IMPL
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    void <clinit>() -> <clinit>
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
com.android.systemui.statusbar.policy.ZenModeController$Callback -> com.android.systemui.statusbar.policy.ZenModeController$Callback:
    void onConditionsChanged(android.service.notification.Condition[]) -> onConditionsChanged
    void onConfigChanged(android.service.notification.ZenModeConfig) -> onConfigChanged
    void onEffectsSupressorChanged() -> onEffectsSupressorChanged
    void onManualRuleChanged(android.service.notification.ZenModeConfig$ZenRule) -> onManualRuleChanged
    void onNextAlarmChanged() -> onNextAlarmChanged
    void onZenAvailableChanged(boolean) -> onZenAvailableChanged
    void onZenChanged(int) -> onZenChanged
com.android.systemui.volume.VolumeDialogControllerImpl$Receiver -> com.android.systemui.volume.VolumeDialogControllerImpl$Receiver:
    com.android.systemui.volume.VolumeDialogControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl) -> <init>
    void init() -> init
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl,com.android.systemui.volume.VolumeDialogControllerImpl$Receiver) -> <init>
android.support.v7.app.AppCompatDelegateImplV9$5 -> android.support.v7.app.AppCompatDelegateImplV9$5:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
android.support.v7.app.AppCompatDelegateImplV23 -> android.support.v7.app.AppCompatDelegateImplV23:
    android.app.UiModeManager mUiModeManager -> mUiModeManager
    int mapNightMode(int) -> mapNightMode
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
com.android.systemui.qs.tileimpl.QSTileImpl$H -> com.android.systemui.qs.tileimpl.QSTileImpl$H:
    com.android.systemui.qs.tileimpl.QSTileImpl this$0 -> this$0
    void <init>(com.android.systemui.qs.tileimpl.QSTileImpl,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.settingslib.bluetooth.BluetoothEventManager$UuidChangedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$UuidChangedHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$UuidChangedHandler) -> <init>
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int idealLongArraySize(int) -> idealLongArraySize
com.android.systemui.recents.-$Lambda$pgmD0Bxm8kFYR7cdcGYk6DUhgds$2 -> com.android.systemui.recents.-$Lambda$pgmD0Bxm8kFYR7cdcGYk6DUhgds$2:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    java.util.List $m$0() -> $m$0
    java.util.List composeSpecs() -> composeSpecs
com.android.systemui.util.leak.WeakIdentityHashMap$CmpWeakReference -> com.android.systemui.util.leak.WeakIdentityHashMap$CmpWeakReference:
    int mHashCode -> mHashCode
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.android.systemui.statusbar.ActivatableNotificationView$8 -> com.android.systemui.statusbar.ActivatableNotificationView$8:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.external.-$Lambda$M-9wkumtBYjk9ehcB0Dp3L-O2lE -> com.android.systemui.qs.external.-$Lambda$M-9wkumtBYjk9ehcB0Dp3L-O2lE:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.util.leak.TrackedCollections$CollectionState -> com.android.systemui.util.leak.TrackedCollections$CollectionState:
    int halfwayCount -> halfwayCount
    int lastCount -> lastCount
    long lastUptime -> lastUptime
    long startUptime -> startUptime
    java.lang.String tag -> tag
    void <init>() -> <init>
    void dump(java.io.PrintWriter) -> dump
    float ratePerHour(long,int,long,int) -> ratePerHour
    void <init>(com.android.systemui.util.leak.TrackedCollections$CollectionState) -> <init>
com.android.systemui.recents.events.ui.DraggingInRecentsEndedEvent -> com.android.systemui.recents.events.ui.DraggingInRecentsEndedEvent:
    float velocity -> velocity
    void <init>(float) -> <init>
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    android.os.IBinder asBinder() -> asBinder
    void <init>() -> <init>
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
com.android.systemui.classifier.EndPointRatioEvaluator -> com.android.systemui.classifier.EndPointRatioEvaluator:
    float evaluate(float) -> evaluate
    void <init>() -> <init>
com.android.systemui.qs.tiles.RotationLockTile -> com.android.systemui.qs.tiles.RotationLockTile:
    com.android.systemui.qs.tileimpl.QSTileImpl$AnimationIcon mAutoToLandscape -> mAutoToLandscape
    com.android.systemui.qs.tileimpl.QSTileImpl$AnimationIcon mAutoToPortrait -> mAutoToPortrait
    com.android.systemui.statusbar.policy.RotationLockController$RotationLockControllerCallback mCallback -> mCallback
    com.android.systemui.statusbar.policy.RotationLockController mController -> mController
    com.android.systemui.qs.tileimpl.QSTileImpl$AnimationIcon mLandscapeToAuto -> mLandscapeToAuto
    com.android.systemui.qs.tileimpl.QSTileImpl$AnimationIcon mPortraitToAuto -> mPortraitToAuto
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    java.lang.String getAccessibilityString(boolean) -> getAccessibilityString
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    boolean isCurrentOrientationLockPortrait(com.android.systemui.statusbar.policy.RotationLockController,android.content.Context) -> isCurrentOrientationLockPortrait
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    void -wrap0(com.android.systemui.qs.tiles.RotationLockTile,java.lang.Object) -> -wrap0
com.android.systemui.statusbar.phone.CollapsedStatusBarFragment -> com.android.systemui.statusbar.phone.CollapsedStatusBarFragment:
    com.android.systemui.statusbar.phone.StatusBarIconController$DarkIconManager mDarkIconManager -> mDarkIconManager
    int mDisabled1 -> mDisabled1
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguardMonitor -> mKeyguardMonitor
    com.android.systemui.statusbar.policy.NetworkController mNetworkController -> mNetworkController
    android.view.View mNotificationIconAreaInner -> mNotificationIconAreaInner
    com.android.systemui.statusbar.policy.NetworkController$SignalCallback mSignalCallback -> mSignalCallback
    com.android.systemui.statusbar.SignalClusterView mSignalClusterView -> mSignalClusterView
    com.android.systemui.statusbar.phone.PhoneStatusBarView mStatusBar -> mStatusBar
    com.android.systemui.statusbar.phone.StatusBar mStatusBarComponent -> mStatusBarComponent
    android.widget.LinearLayout mSystemIconArea -> mSystemIconArea
    void initNotificationIconArea(com.android.systemui.statusbar.phone.NotificationIconAreaController) -> initNotificationIconArea
    void <init>() -> <init>
    int adjustDisableFlags(int) -> adjustDisableFlags
    void animateHide(android.view.View,boolean) -> animateHide
    void animateShow(android.view.View,boolean) -> animateShow
    void disable(int,int,boolean) -> disable
    void hideNotificationIconArea(boolean) -> hideNotificationIconArea
    void hideSystemIconArea(boolean) -> hideSystemIconArea
    void initEmergencyCryptkeeperText() -> initEmergencyCryptkeeperText
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void onPause() -> onPause
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean shouldHideNotificationIcons() -> shouldHideNotificationIcons
    void showNotificationIconArea(boolean) -> showNotificationIconArea
    void showSystemIconArea(boolean) -> showSystemIconArea
    void lambda$-com_android_systemui_statusbar_phone_CollapsedStatusBarFragment_8813(android.view.View) -> lambda$-com_android_systemui_statusbar_phone_CollapsedStatusBarFragment_8813
    com.android.systemui.statusbar.phone.StatusBar -get0(com.android.systemui.statusbar.phone.CollapsedStatusBarFragment) -> -get0
com.android.systemui.volume.VolumeDialogImpl$2 -> com.android.systemui.volume.VolumeDialogImpl$2:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void onExpanded(boolean) -> onExpanded
    void onInteraction() -> onInteraction
    void onPrioritySettings() -> onPrioritySettings
com.android.settingslib.graph.BatteryMeterDrawableBase -> com.android.settingslib.graph.BatteryMeterDrawableBase:
    android.graphics.RectF mPlusFrame -> mPlusFrame
    android.graphics.RectF mFrame -> mFrame
    android.graphics.Paint mBatteryPaint -> mBatteryPaint
    int[] mColors -> mColors
    android.graphics.RectF mBoltFrame -> mBoltFrame
    float mTextHeight -> mTextHeight
    float mSubpixelSmoothingLeft -> mSubpixelSmoothingLeft
    android.graphics.Paint mTextPaint -> mTextPaint
    int mLevel -> mLevel
    float mButtonHeightFraction -> mButtonHeightFraction
    java.lang.String mWarningString -> mWarningString
    int mWidth -> mWidth
    android.graphics.RectF mButtonFrame -> mButtonFrame
    int mIntrinsicHeight -> mIntrinsicHeight
    float[] mPlusPoints -> mPlusPoints
    float mOldDarkIntensity -> mOldDarkIntensity
    android.graphics.Path mBoltPath -> mBoltPath
    android.content.Context mContext -> mContext
    android.graphics.Path mShapePath -> mShapePath
    int mHeight -> mHeight
    float mSubpixelSmoothingRight -> mSubpixelSmoothingRight
    android.graphics.Rect mPadding -> mPadding
    android.graphics.Paint mWarningTextPaint -> mWarningTextPaint
    android.graphics.Path mTextPath -> mTextPath
    float mWarningTextHeight -> mWarningTextHeight
    int mChargeColor -> mChargeColor
    float[] mBoltPoints -> mBoltPoints
    java.lang.String TAG -> TAG
    android.graphics.Paint mPlusPaint -> mPlusPaint
    boolean mCharging -> mCharging
    int mIconTint -> mIconTint
    android.graphics.Paint mBoltPaint -> mBoltPaint
    int mIntrinsicWidth -> mIntrinsicWidth
    android.graphics.Path mPlusPath -> mPlusPath
    android.graphics.Path mClipPath -> mClipPath
    boolean mShowPercent -> mShowPercent
    android.graphics.Paint mFramePaint -> mFramePaint
    boolean mPowerSaveEnabled -> mPowerSaveEnabled
    int mCriticalLevel -> mCriticalLevel
    void setAlpha(int) -> setAlpha
    int batteryColorForLevel(int) -> batteryColorForLevel
    int getColorForLevel(int) -> getColorForLevel
    void draw(android.graphics.Canvas) -> draw
    float getRadiusRatio() -> getRadiusRatio
    float getAspectRatio() -> getAspectRatio
    int getIntrinsicHeight() -> getIntrinsicHeight
    void postInvalidate() -> postInvalidate
    void <init>(android.content.Context,int) -> <init>
    void setCharging(boolean) -> setCharging
    void setPadding(int,int,int,int) -> setPadding
    void setBatteryLevel(int) -> setBatteryLevel
    void setBounds(int,int,int,int) -> setBounds
    void setPowerSave(boolean) -> setPowerSave
    int getOpacity() -> getOpacity
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void <clinit>() -> <clinit>
    void -com_android_settingslib_graph_BatteryMeterDrawableBase-mthref-0() -> -com_android_settingslib_graph_BatteryMeterDrawableBase-mthref-0
    void -com_android_settingslib_graph_BatteryMeterDrawableBase-mthref-1() -> -com_android_settingslib_graph_BatteryMeterDrawableBase-mthref-1
    void setColors(int,int) -> setColors
    boolean getPadding(android.graphics.Rect) -> getPadding
    float[] loadPoints(android.content.res.Resources,int) -> loadPoints
    int getIntrinsicWidth() -> getIntrinsicWidth
    void updateSize() -> updateSize
com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry$1 -> com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry$1:
    com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry this$1 -> this$1
    com.android.systemui.statusbar.NotificationData$Entry val$entry -> val$entry
    void <init>(com.android.systemui.statusbar.policy.HeadsUpManager$HeadsUpEntry,com.android.systemui.statusbar.NotificationData$Entry) -> <init>
    void run() -> run
android.support.v7.widget.LinearLayoutManager$LayoutChunkResult -> android.support.v7.widget.LinearLayoutManager$LayoutChunkResult:
    int mConsumed -> mConsumed
    boolean mFinished -> mFinished
    boolean mIgnoreConsumed -> mIgnoreConsumed
    boolean mFocusable -> mFocusable
    void <init>() -> <init>
    void resetInternal() -> resetInternal
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    boolean mDrawFullUnderline -> mDrawFullUnderline
    int mIndicatorColor -> mIndicatorColor
    int mMinStripHeight -> mMinStripHeight
    int mMinTextSpacing -> mMinTextSpacing
    int mTabAlpha -> mTabAlpha
    int mIndicatorHeight -> mIndicatorHeight
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    boolean mIgnoreTap -> mIgnoreTap
    int mMinPaddingBottom -> mMinPaddingBottom
    float mInitialMotionY -> mInitialMotionY
    float mInitialMotionX -> mInitialMotionX
    android.graphics.Paint mTabPaint -> mTabPaint
    int mFullUnderlineHeight -> mFullUnderlineHeight
    int mTabPadding -> mTabPadding
    int mTouchSlop -> mTouchSlop
    android.graphics.Rect mTempRect -> mTempRect
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setBackgroundResource(int) -> setBackgroundResource
    int getMinHeight() -> getMinHeight
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void setPadding(int,int,int,int) -> setPadding
    void setBackgroundColor(int) -> setBackgroundColor
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setTextSpacing(int) -> setTextSpacing
    void onDraw(android.graphics.Canvas) -> onDraw
com.android.systemui.screenshot.SaveImageInBackgroundTask -> com.android.systemui.screenshot.SaveImageInBackgroundTask:
    java.lang.String mImageFileName -> mImageFileName
    java.lang.String mImageFilePath -> mImageFilePath
    int mImageHeight -> mImageHeight
    long mImageTime -> mImageTime
    int mImageWidth -> mImageWidth
    android.app.Notification$Builder mNotificationBuilder -> mNotificationBuilder
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    android.app.Notification$BigPictureStyle mNotificationStyle -> mNotificationStyle
    com.android.systemui.screenshot.SaveImageInBackgroundData mParams -> mParams
    android.app.Notification$Builder mPublicNotificationBuilder -> mPublicNotificationBuilder
    java.io.File mScreenshotDir -> mScreenshotDir
    boolean mTickerAddSpace -> mTickerAddSpace
    void <init>(android.content.Context,com.android.systemui.screenshot.SaveImageInBackgroundData,android.app.NotificationManager) -> <init>
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onCancelled(java.lang.Void) -> onCancelled
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.android.systemui.tuner.SelectablePreference -> com.android.systemui.tuner.SelectablePreference:
    int mSize -> mSize
    void <init>(android.content.Context) -> <init>
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    java.lang.String toString() -> toString
com.android.systemui.qs.QSHost$Callback -> com.android.systemui.qs.QSHost$Callback:
    void onTilesChanged() -> onTilesChanged
android.support.v7.util.DiffUtil$PostponedUpdate -> android.support.v7.util.DiffUtil$PostponedUpdate:
    boolean removal -> removal
    int posInOwnerList -> posInOwnerList
    int currentPos -> currentPos
    void <init>(int,int,boolean) -> <init>
com.android.systemui.pip.tv.PipControlsView$6 -> com.android.systemui.pip.tv.PipControlsView$6:
    com.android.systemui.pip.tv.PipControlsView this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipControlsView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.settingslib.bluetooth.LocalBluetoothProfileManager -> com.android.settingslib.bluetooth.LocalBluetoothProfileManager:
    android.content.Context mContext -> mContext
    com.android.settingslib.bluetooth.MapClientProfile mMapClientProfile -> mMapClientProfile
    com.android.settingslib.bluetooth.PanProfile mPanProfile -> mPanProfile
    com.android.settingslib.bluetooth.BluetoothEventManager mEventManager -> mEventManager
    com.android.settingslib.bluetooth.PbapClientProfile mPbapClientProfile -> mPbapClientProfile
    boolean mUsePbapPce -> mUsePbapPce
    com.android.settingslib.bluetooth.HidProfile mHidProfile -> mHidProfile
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.DunServerProfile mDunProfile -> mDunProfile
    java.util.Map mProfileNameMap -> mProfileNameMap
    com.android.settingslib.bluetooth.A2dpSinkProfile mA2dpSinkProfile -> mA2dpSinkProfile
    com.android.settingslib.bluetooth.HeadsetProfile mHeadsetProfile -> mHeadsetProfile
    boolean mUseMapClient -> mUseMapClient
    com.android.settingslib.bluetooth.OppProfile mOppProfile -> mOppProfile
    com.android.settingslib.bluetooth.A2dpProfile mA2dpProfile -> mA2dpProfile
    java.util.Collection mServiceListeners -> mServiceListeners
    com.android.settingslib.bluetooth.PbapServerProfile mPbapProfile -> mPbapProfile
    com.android.settingslib.bluetooth.HfpClientProfile mHfpClientProfile -> mHfpClientProfile
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    com.android.settingslib.bluetooth.MapProfile mMapProfile -> mMapProfile
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get1(com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> -get1
    void updateLocalProfiles(android.os.ParcelUuid[]) -> updateLocalProfiles
    void setBluetoothStateOn() -> setBluetoothStateOn
    void callServiceConnectedListeners() -> callServiceConnectedListeners
    void addProfile(com.android.settingslib.bluetooth.LocalBluetoothProfile,java.lang.String,java.lang.String) -> addProfile
    void updateProfiles(android.os.ParcelUuid[],android.os.ParcelUuid[],java.util.Collection,java.util.Collection,boolean,android.bluetooth.BluetoothDevice) -> updateProfiles
    com.android.settingslib.bluetooth.PbapServerProfile getPbapProfile() -> getPbapProfile
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get0(com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> -get0
    void callServiceDisconnectedListeners() -> callServiceDisconnectedListeners
    void addPanProfile(com.android.settingslib.bluetooth.LocalBluetoothProfile,java.lang.String,java.lang.String) -> addPanProfile
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
android.support.v14.preference.PreferenceFragment$OnPreferenceStartFragmentCallback -> android.support.v14.preference.PreferenceFragment$OnPreferenceStartFragmentCallback:
    boolean onPreferenceStartFragment(android.support.v14.preference.PreferenceFragment,android.support.v7.preference.Preference) -> onPreferenceStartFragment
com.android.keyguard.AlphaOptimizedRelativeLayout -> com.android.keyguard.AlphaOptimizedRelativeLayout:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
com.android.systemui.qs.QSSecurityFooter$2 -> com.android.systemui.qs.QSSecurityFooter$2:
    com.android.systemui.qs.QSSecurityFooter this$0 -> this$0
    void <init>(com.android.systemui.qs.QSSecurityFooter) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.KeyguardUserSwitcher$2 -> com.android.systemui.statusbar.policy.KeyguardUserSwitcher$2:
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> <init>
    void run() -> run
com.android.systemui.statusbar.notification.-$Lambda$Sc7qwEXzLMFEpUxWj_a1qYn-XGQ -> com.android.systemui.statusbar.notification.-$Lambda$Sc7qwEXzLMFEpUxWj_a1qYn-XGQ:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void $m$1(android.animation.ValueAnimator) -> $m$1
    void $m$2(android.animation.ValueAnimator) -> $m$2
    void $m$3(android.animation.ValueAnimator) -> $m$3
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    java.lang.ref.WeakReference mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onSessionDestroyed() -> onSessionDestroyed
android.support.v7.mediarouter.R$dimen -> android.support.v7.mediarouter.R$dimen:
    int mr_controller_volume_group_list_item_height -> mr_controller_volume_group_list_item_height
    int mr_controller_volume_group_list_item_icon_size -> mr_controller_volume_group_list_item_icon_size
    int mr_controller_volume_group_list_max_height -> mr_controller_volume_group_list_max_height
    int mr_controller_volume_group_list_padding_top -> mr_controller_volume_group_list_padding_top
    int mr_dialog_fixed_width_major -> mr_dialog_fixed_width_major
    int mr_dialog_fixed_width_minor -> mr_dialog_fixed_width_minor
    void <init>() -> <init>
com.android.systemui.ViewInvertHelper -> com.android.systemui.ViewInvertHelper:
    android.graphics.Paint mDarkPaint -> mDarkPaint
    long mFadeDuration -> mFadeDuration
    android.graphics.ColorMatrix mGrayscaleMatrix -> mGrayscaleMatrix
    android.graphics.ColorMatrix mMatrix -> mMatrix
    java.util.ArrayList mTargets -> mTargets
    void <init>(android.view.View,long) -> <init>
    void fade(boolean,long) -> fade
    void update(boolean) -> update
    void addTarget(android.view.View) -> addTarget
    void <init>(android.content.Context,long) -> <init>
    void clearTargets() -> clearTargets
    void setInverted(boolean,boolean,long) -> setInverted
    void updateInvertPaint(float) -> updateInvertPaint
    android.graphics.Paint -get0(com.android.systemui.ViewInvertHelper) -> -get0
    java.util.ArrayList -get1(com.android.systemui.ViewInvertHelper) -> -get1
    void -wrap0(com.android.systemui.ViewInvertHelper,float) -> -wrap0
com.android.systemui.tuner.OtherPrefs -> com.android.systemui.tuner.OtherPrefs:
    void <init>() -> <init>
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
com.android.settingslib.wifi.AccessPoint -> com.android.settingslib.wifi.AccessPoint:
    int UNREACHABLE_RSSI -> UNREACHABLE_RSSI
    int mId -> mId
    android.net.wifi.WifiInfo mInfo -> mInfo
    java.lang.String mCarrierName -> mCarrierName
    int pskType -> pskType
    int mCarrierApEapType -> mCarrierApEapType
    int mRssi -> mRssi
    android.content.Context mContext -> mContext
    java.lang.String ssid -> ssid
    com.android.settingslib.wifi.AccessPoint$AccessPointListener mAccessPointListener -> mAccessPointListener
    android.net.wifi.WifiConfiguration mConfig -> mConfig
    boolean mIsCarrierAp -> mIsCarrierAp
    int networkId -> networkId
    java.lang.String bssid -> bssid
    java.util.concurrent.ConcurrentHashMap mScanResultCache -> mScanResultCache
    long mSeen -> mSeen
    int security -> security
    java.lang.String mFqdn -> mFqdn
    java.util.Map mScoredNetworkCache -> mScoredNetworkCache
    int mSpeed -> mSpeed
    android.net.NetworkInfo mNetworkInfo -> mNetworkInfo
    boolean mIsScoredNetworkMetered -> mIsScoredNetworkMetered
    java.lang.String mProviderFriendlyName -> mProviderFriendlyName
    java.util.concurrent.atomic.AtomicInteger sLastId -> sLastId
    boolean isReachable() -> isReachable
    boolean isMetered() -> isMetered
    int generateAverageSpeedForSsid() -> generateAverageSpeedForSsid
    int getPskType(android.net.wifi.ScanResult) -> getPskType
    void generateOpenNetworkConfig() -> generateOpenNetworkConfig
    int getLevel() -> getLevel
    java.lang.String getSummary(android.content.Context,java.lang.String,android.net.NetworkInfo$DetailedState,boolean,java.lang.String) -> getSummary
    boolean isConnectable() -> isConnectable
    void <init>(android.content.Context,com.android.settingslib.wifi.AccessPoint) -> <init>
    void copyFrom(com.android.settingslib.wifi.AccessPoint) -> copyFrom
    int getSecurity(android.net.wifi.ScanResult) -> getSecurity
    void setListener(com.android.settingslib.wifi.AccessPoint$AccessPointListener) -> setListener
    java.lang.String getConfigName() -> getConfigName
    boolean matches(android.net.wifi.ScanResult) -> matches
    int hashCode() -> hashCode
    void update(android.net.wifi.WifiConfiguration) -> update
    java.lang.String getSummary(android.content.Context,android.net.NetworkInfo$DetailedState,boolean,java.lang.String) -> getSummary
    int compareTo(java.lang.Object) -> compareTo
    boolean matches(android.net.wifi.WifiConfiguration) -> matches
    void updateRssi() -> updateRssi
    int getSpecificApSpeed(android.net.wifi.ScanResult) -> getSpecificApSpeed
    java.lang.String getSpeedLabel() -> getSpeedLabel
    void lambda$-com_android_settingslib_wifi_AccessPoint_18276(long,java.util.Iterator,com.android.settingslib.wifi.TimestampedScoredNetwork) -> lambda$-com_android_settingslib_wifi_AccessPoint_18276
    java.lang.String convertToQuotedString(java.lang.String) -> convertToQuotedString
    java.lang.String toString() -> toString
    void loadConfig(android.net.wifi.WifiConfiguration) -> loadConfig
    void initWithScanResult(android.net.wifi.ScanResult) -> initWithScanResult
    boolean update(android.net.wifi.ScanResult,boolean) -> update
    android.net.wifi.WifiConfiguration getConfig() -> getConfig
    boolean isActive() -> isActive
    java.lang.String getSummary() -> getSummary
    boolean updateMetered(android.net.wifi.WifiNetworkScoreCache) -> updateMetered
    boolean isPasspoint() -> isPasspoint
    int getSecurity() -> getSecurity
    void setUnreachable() -> setUnreachable
    boolean isInfoForThisAccessPoint(android.net.wifi.WifiConfiguration,android.net.wifi.WifiInfo) -> isInfoForThisAccessPoint
    java.lang.String getSpeedLabel(int) -> getSpeedLabel
    boolean update(android.net.wifi.WifiNetworkScoreCache,boolean,long) -> update
    void updateSeen() -> updateSeen
    java.lang.String getSettingsSummary(android.net.wifi.WifiConfiguration) -> getSettingsSummary
    java.lang.CharSequence getSsid() -> getSsid
    void <init>(android.content.Context,android.net.wifi.ScanResult) -> <init>
    boolean equals(java.lang.Object) -> equals
    android.net.NetworkInfo$DetailedState getDetailedState() -> getDetailedState
    int getSecurity(android.net.wifi.WifiConfiguration) -> getSecurity
    boolean isEphemeral() -> isEphemeral
    void setRssi(int) -> setRssi
    void clearConfig() -> clearConfig
    void <init>(android.content.Context,android.net.wifi.WifiConfiguration) -> <init>
    java.lang.String getSummary(android.content.Context,android.net.NetworkInfo$DetailedState,boolean) -> getSummary
    int getSpeed() -> getSpeed
    void evictOldScanResults() -> evictOldScanResults
    java.lang.String getSsidStr() -> getSsidStr
    int compareTo(com.android.settingslib.wifi.AccessPoint) -> compareTo
    boolean isSaved() -> isSaved
    java.lang.String removeDoubleQuotes(java.lang.String) -> removeDoubleQuotes
    boolean updateScores(android.net.wifi.WifiNetworkScoreCache,long) -> updateScores
    boolean updateSpeed() -> updateSpeed
    int roundToClosestSpeedEnum(int) -> roundToClosestSpeedEnum
    java.lang.String verboseScanResultSummary(android.net.wifi.ScanResult,java.lang.String,long) -> verboseScanResultSummary
    java.lang.String getVisibilityStatus() -> getVisibilityStatus
    void <clinit>() -> <clinit>
    java.lang.String securityToString(int,int) -> securityToString
    boolean update(android.net.wifi.WifiConfiguration,android.net.wifi.WifiInfo,android.net.NetworkInfo) -> update
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$13 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$13:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    com.android.systemui.statusbar.ExpandableNotificationRow val$changedRow -> val$changedRow
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void run() -> run
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$12 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$12:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void run() -> run
com.android.systemui.pip.phone.InputConsumerController$TouchListener -> com.android.systemui.pip.phone.InputConsumerController$TouchListener:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.keyguard.KeyguardMessageArea$AnnounceRunnable -> com.android.keyguard.KeyguardMessageArea$AnnounceRunnable:
    java.lang.ref.WeakReference mHost -> mHost
    java.lang.CharSequence mTextToAnnounce -> mTextToAnnounce
    void <init>(android.view.View,java.lang.CharSequence) -> <init>
    void run() -> run
android.support.v7.widget.helper.ItemTouchUIUtilImpl$BaseImpl -> android.support.v7.widget.helper.ItemTouchUIUtilImpl$BaseImpl:
    void clearView(android.view.View) -> clearView
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    void <init>() -> <init>
    void onSelected(android.view.View) -> onSelected
com.android.keyguard.KeyguardSimPukView$1 -> com.android.keyguard.KeyguardSimPukView$1:
    com.android.keyguard.KeyguardSimPukView this$0 -> this$0
    int[] -com-android-internal-telephony-IccCardConstants$StateSwitchesValues -> -com-android-internal-telephony-IccCardConstants$StateSwitchesValues
    void <init>(com.android.keyguard.KeyguardSimPukView) -> <init>
    void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants$State) -> onSimStateChanged
    int[] -getcom-android-internal-telephony-IccCardConstants$StateSwitchesValues() -> -getcom-android-internal-telephony-IccCardConstants$StateSwitchesValues
com.android.systemui.media.RingtonePlayer$1 -> com.android.systemui.media.RingtonePlayer$1:
    com.android.systemui.media.RingtonePlayer this$0 -> this$0
    void <init>(com.android.systemui.media.RingtonePlayer) -> <init>
    java.lang.String getTitle(android.net.Uri) -> getTitle
    boolean isPlaying(android.os.IBinder) -> isPlaying
    android.os.ParcelFileDescriptor openRingtone(android.net.Uri) -> openRingtone
    void play(android.os.IBinder,android.net.Uri,android.media.AudioAttributes,float,boolean) -> play
    void playAsync(android.net.Uri,android.os.UserHandle,boolean,android.media.AudioAttributes) -> playAsync
    void setPlaybackProperties(android.os.IBinder,float,boolean) -> setPlaybackProperties
    void stop(android.os.IBinder) -> stop
    void stopAsync() -> stopAsync
android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl -> android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl:
    int mPrefetchDx -> mPrefetchDx
    int mPrefetchDy -> mPrefetchDy
    int mCount -> mCount
    int[] mPrefetchArray -> mPrefetchArray
    void <init>() -> <init>
    void collectPrefetchPositionsFromView(android.support.v7.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    void addPosition(int,int) -> addPosition
    void setPrefetchVector(int,int) -> setPrefetchVector
    void clearPrefetchPositions() -> clearPrefetchPositions
    boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
android.support.v4.widget.EdgeEffectCompat$EdgeEffectBaseImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectBaseImpl:
    void <init>() -> <init>
    void onPull(android.widget.EdgeEffect,float,float) -> onPull
com.android.systemui.statusbar.SignalClusterView -> com.android.systemui.statusbar.SignalClusterView:
    boolean DEBUG -> DEBUG
    boolean mActivityEnabled -> mActivityEnabled
    android.widget.ImageView mAirplane -> mAirplane
    java.lang.String mAirplaneContentDescription -> mAirplaneContentDescription
    int mAirplaneIconId -> mAirplaneIconId
    boolean mBlockAirplane -> mBlockAirplane
    boolean mBlockEthernet -> mBlockEthernet
    boolean mBlockMobile -> mBlockMobile
    boolean mBlockWifi -> mBlockWifi
    float mDarkIntensity -> mDarkIntensity
    int mEndPadding -> mEndPadding
    int mEndPaddingNothingVisible -> mEndPaddingNothingVisible
    android.widget.ImageView mEthernet -> mEthernet
    android.widget.ImageView mEthernetDark -> mEthernetDark
    java.lang.String mEthernetDescription -> mEthernetDescription
    android.view.ViewGroup mEthernetGroup -> mEthernetGroup
    int mEthernetIconId -> mEthernetIconId
    boolean mEthernetVisible -> mEthernetVisible
    boolean mForceBlockWifi -> mForceBlockWifi
    com.android.systemui.statusbar.policy.IconLogger mIconLogger -> mIconLogger
    float mIconScaleFactor -> mIconScaleFactor
    int mIconTint -> mIconTint
    boolean mIsAirplaneMode -> mIsAirplaneMode
    int mLastAirplaneIconId -> mLastAirplaneIconId
    int mLastEthernetIconId -> mLastEthernetIconId
    int mLastVpnIconId -> mLastVpnIconId
    int mLastWifiActivityId -> mLastWifiActivityId
    int mLastWifiStrengthId -> mLastWifiStrengthId
    int mMobileDataIconStartPadding -> mMobileDataIconStartPadding
    android.widget.LinearLayout mMobileSignalGroup -> mMobileSignalGroup
    int mMobileSignalGroupEndPadding -> mMobileSignalGroupEndPadding
    com.android.systemui.statusbar.policy.NetworkController mNetworkController -> mNetworkController
    android.widget.ImageView mNoSims -> mNoSims
    android.view.View mNoSimsCombo -> mNoSimsCombo
    android.widget.ImageView mNoSimsDark -> mNoSimsDark
    int mNoSimsIcon -> mNoSimsIcon
    boolean mNoSimsVisible -> mNoSimsVisible
    java.util.ArrayList mPhoneStates -> mPhoneStates
    boolean mReadIconsFromXML -> mReadIconsFromXML
    int mSecondaryTelephonyPadding -> mSecondaryTelephonyPadding
    com.android.systemui.statusbar.policy.SecurityController mSecurityController -> mSecurityController
    boolean mSimDetected -> mSimDetected
    android.graphics.Rect mTintArea -> mTintArea
    android.widget.ImageView mVpn -> mVpn
    int mVpnIconId -> mVpnIconId
    boolean mVpnVisible -> mVpnVisible
    int mWideTypeIconStartPadding -> mWideTypeIconStartPadding
    android.widget.ImageView mWifi -> mWifi
    boolean mWifiActivityEnabled -> mWifiActivityEnabled
    android.widget.ImageView mWifiActivityIn -> mWifiActivityIn
    android.widget.ImageView mWifiActivityOut -> mWifiActivityOut
    android.view.View mWifiAirplaneSpacer -> mWifiAirplaneSpacer
    android.widget.ImageView mWifiDark -> mWifiDark
    java.lang.String mWifiDescription -> mWifiDescription
    android.view.ViewGroup mWifiGroup -> mWifiGroup
    boolean mWifiIn -> mWifiIn
    boolean mWifiOut -> mWifiOut
    android.view.View mWifiSignalSpacer -> mWifiSignalSpacer
    int mWifiStrengthId -> mWifiStrengthId
    boolean mWifiVisible -> mWifiVisible
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void apply() -> apply
    void applyDarkIntensity(float,android.view.View,android.view.View) -> applyDarkIntensity
    void applyIconTint() -> applyIconTint
    int currentVpnIconId(boolean) -> currentVpnIconId
    boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEventInternal
    int getNoSimIcon() -> getNoSimIcon
    com.android.systemui.statusbar.SignalClusterView$PhoneState getState(int) -> getState
    boolean hasCorrectSubs(java.util.List) -> hasCorrectSubs
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    com.android.systemui.statusbar.SignalClusterView$PhoneState inflatePhoneState(int) -> inflatePhoneState
    void maybeScaleVpnAndNoSimsIcons() -> maybeScaleVpnAndNoSimsIcons
    void onAttachedToWindow() -> onAttachedToWindow
    void onDarkChanged(android.graphics.Rect,float,int) -> onDarkChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onStateChanged() -> onStateChanged
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController$IconState) -> setEthernetIndicators
    void setIconForView(android.widget.ImageView,int) -> setIconForView
    void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController$IconState) -> setIsAirplaneMode
    void setMobileDataEnabled(boolean) -> setMobileDataEnabled
    void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,int,int,boolean,boolean,int,int,int,java.lang.String,java.lang.String,boolean,int,boolean) -> setMobileDataIndicators
    void setNoSims(boolean,boolean) -> setNoSims
    void setSubs(java.util.List) -> setSubs
    void setTint(android.widget.ImageView,int) -> setTint
    void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,boolean,boolean,java.lang.String,boolean) -> setWifiIndicators
    void updateActivityEnabled() -> updateActivityEnabled
    void <clinit>() -> <clinit>
    boolean -get0(com.android.systemui.statusbar.SignalClusterView) -> -get0
    int -get1(com.android.systemui.statusbar.SignalClusterView) -> -get1
    boolean -get2(com.android.systemui.statusbar.SignalClusterView) -> -get2
    int -get3(com.android.systemui.statusbar.SignalClusterView) -> -get3
    com.android.systemui.statusbar.policy.SecurityController -get4(com.android.systemui.statusbar.SignalClusterView) -> -get4
    int -get5(com.android.systemui.statusbar.SignalClusterView) -> -get5
    int -set0(com.android.systemui.statusbar.SignalClusterView,int) -> -set0
    boolean -set1(com.android.systemui.statusbar.SignalClusterView,boolean) -> -set1
    int -wrap0(com.android.systemui.statusbar.SignalClusterView,boolean) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.SignalClusterView,float,android.view.View,android.view.View) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.SignalClusterView) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.SignalClusterView,android.widget.ImageView,int) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.SignalClusterView,android.widget.ImageView,int) -> -wrap4
com.android.systemui.qs.external.-$Lambda$CA4QlgMyuUuRvIn6temzm1LPs5M -> com.android.systemui.qs.external.-$Lambda$CA4QlgMyuUuRvIn6temzm1LPs5M:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.volume.SafetyWarningDialog$1 -> com.android.systemui.volume.SafetyWarningDialog$1:
    com.android.systemui.volume.SafetyWarningDialog this$0 -> this$0
    void <init>(com.android.systemui.volume.SafetyWarningDialog) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.widget.GapWorker$Task -> android.support.v7.widget.GapWorker$Task:
    int distanceToItem -> distanceToItem
    boolean immediate -> immediate
    int viewVelocity -> viewVelocity
    int position -> position
    android.support.v7.widget.RecyclerView view -> view
    void <init>() -> <init>
    void clear() -> clear
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$1 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$1:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.android.systemui.classifier.-$Lambda$cbp1GoQjSW3ocYuW3wmIobRpooQ -> com.android.systemui.classifier.-$Lambda$cbp1GoQjSW3ocYuW3wmIobRpooQ:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.TooltipCompatHandler$2 -> android.support.v7.widget.TooltipCompatHandler$2:
    android.support.v7.widget.TooltipCompatHandler this$0 -> this$0
    void <init>(android.support.v7.widget.TooltipCompatHandler) -> <init>
    void run() -> run
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.app.FragmentActivity$HostCallbacks:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    int onGetWindowAnimations() -> onGetWindowAnimations
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    boolean onHasView() -> onHasView
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    android.view.View onFindViewById(int) -> onFindViewById
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
android.support.v4.graphics.drawable.DrawableWrapperApi19$DrawableWrapperStateKitKat -> android.support.v4.graphics.drawable.DrawableWrapperApi19$DrawableWrapperStateKitKat:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
com.android.settingslib.bluetooth.DunServerProfile -> com.android.settingslib.bluetooth.DunServerProfile:
    android.bluetooth.BluetoothDun mService -> mService
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    boolean -set0(com.android.settingslib.bluetooth.DunServerProfile,boolean) -> -set0
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    void <init>(android.content.Context) -> <init>
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    android.bluetooth.BluetoothDun -set1(com.android.settingslib.bluetooth.DunServerProfile,android.bluetooth.BluetoothDun) -> -set1
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    void finalize() -> finalize
com.android.systemui.qs.tiles.NfcTile$1 -> com.android.systemui.qs.tiles.NfcTile$1:
    com.android.systemui.qs.tiles.NfcTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.NfcTile) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.ActivatableNotificationView$9 -> com.android.systemui.statusbar.ActivatableNotificationView$9:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    android.view.View val$background -> val$background
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.android.systemui.recents.Recents -> com.android.systemui.recents.Recents:
    java.util.Set RECENTS_ACTIVITIES -> RECENTS_ACTIVITIES
    int mDraggingInRecentsCurrentUser -> mDraggingInRecentsCurrentUser
    android.os.Handler mHandler -> mHandler
    com.android.systemui.recents.RecentsImpl mImpl -> mImpl
    java.util.ArrayList mOnConnectRunnables -> mOnConnectRunnables
    java.lang.String mOverrideRecentsPackageName -> mOverrideRecentsPackageName
    com.android.systemui.recents.RecentsSystemUser mSystemToUserCallbacks -> mSystemToUserCallbacks
    com.android.systemui.recents.IRecentsSystemUserCallbacks mUserToSystemCallbacks -> mUserToSystemCallbacks
    android.os.IBinder$DeathRecipient mUserToSystemCallbacksDeathRcpt -> mUserToSystemCallbacksDeathRcpt
    android.content.ServiceConnection mUserToSystemServiceConnection -> mUserToSystemServiceConnection
    com.android.systemui.recents.RecentsConfiguration sConfiguration -> sConfiguration
    com.android.systemui.recents.RecentsDebugFlags sDebugFlags -> sDebugFlags
    com.android.systemui.recents.misc.SystemServicesProxy sSystemServicesProxy -> sSystemServicesProxy
    com.android.systemui.recents.model.RecentsTaskLoader sTaskLoader -> sTaskLoader
    com.android.systemui.recents.misc.SystemServicesProxy getSystemServices() -> getSystemServices
    void logDockAttempt(android.content.Context,android.content.ComponentName,int) -> logDockAttempt
    com.android.systemui.recents.RecentsConfiguration getConfiguration() -> getConfiguration
    com.android.systemui.recents.RecentsDebugFlags getDebugFlags() -> getDebugFlags
    void <init>() -> <init>
    void appTransitionFinished() -> appTransitionFinished
    void cancelPreloadRecentApps() -> cancelPreloadRecentApps
    boolean dockTopTask(int,int,android.graphics.Rect,int) -> dockTopTask
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String getMetricsCounterForResizeMode(int) -> getMetricsCounterForResizeMode
    android.os.IBinder getSystemUserCallbacks() -> getSystemUserCallbacks
    com.android.systemui.recents.model.RecentsTaskLoader getTaskLoader() -> getTaskLoader
    void hideRecentApps(boolean,boolean) -> hideRecentApps
    boolean isUserSetup() -> isUserSetup
    void onBootCompleted() -> onBootCompleted
    void onBusEvent(com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.component.ScreenPinningRequestEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.RecentsDrawnEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DockedTopTaskEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.RecentsActivityStartingEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskFailedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.component.ShowUserToastEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.component.SetWaitingForTransitionStartEvent) -> onBusEvent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraggingInRecents(float) -> onDraggingInRecents
    void onDraggingInRecentsEnded(float) -> onDraggingInRecentsEnded
    void postToSystemUser(java.lang.Runnable) -> postToSystemUser
    void preloadRecentApps() -> preloadRecentApps
    boolean proxyToOverridePackage(java.lang.String) -> proxyToOverridePackage
    void registerWithSystemUser() -> registerWithSystemUser
    void runAndFlushOnConnectRunnables() -> runAndFlushOnConnectRunnables
    void showNextAffiliatedTask() -> showNextAffiliatedTask
    void showPrevAffiliatedTask() -> showPrevAffiliatedTask
    void showRecentApps(boolean,boolean) -> showRecentApps
    void start() -> start
    void toggleRecentApps() -> toggleRecentApps
    void <clinit>() -> <clinit>
    android.os.Handler -get0(com.android.systemui.recents.Recents) -> -get0
    com.android.systemui.recents.RecentsImpl -get1(com.android.systemui.recents.Recents) -> -get1
    com.android.systemui.recents.IRecentsSystemUserCallbacks -get2(com.android.systemui.recents.Recents) -> -get2
    android.os.IBinder$DeathRecipient -get3(com.android.systemui.recents.Recents) -> -get3
    com.android.systemui.recents.misc.SystemServicesProxy -get4() -> -get4
    com.android.systemui.recents.IRecentsSystemUserCallbacks -set0(com.android.systemui.recents.Recents,com.android.systemui.recents.IRecentsSystemUserCallbacks) -> -set0
    void -wrap0(com.android.systemui.recents.Recents) -> -wrap0
    void -wrap1(com.android.systemui.recents.Recents) -> -wrap1
com.android.systemui.recents.views.FixedSizeFrameLayout -> com.android.systemui.recents.views.FixedSizeFrameLayout:
    android.graphics.Rect mLayoutBounds -> mLayoutBounds
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void layoutContents(android.graphics.Rect,boolean) -> layoutContents
    void measureContents(int,int) -> measureContents
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void requestLayout() -> requestLayout
com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo$3 -> com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo$3:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.plugins.-$Lambda$hnKk2Q6NutYOsHxpKvpj5tAJi04$1 -> com.android.systemui.plugins.-$Lambda$hnKk2Q6NutYOsHxpKvpj5tAJi04$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Object,java.lang.Object) -> $m$0
    void accept(java.lang.Object,java.lang.Object) -> accept
com.android.systemui.qs.TouchAnimator$Builder -> com.android.systemui.qs.TouchAnimator$Builder:
    float mEndDelay -> mEndDelay
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    com.android.systemui.qs.TouchAnimator$Listener mListener -> mListener
    float mStartDelay -> mStartDelay
    java.util.List mTargets -> mTargets
    java.util.List mValues -> mValues
    void <init>() -> <init>
    com.android.systemui.qs.TouchAnimator$Builder addFloat(java.lang.Object,java.lang.String,float[]) -> addFloat
    com.android.systemui.qs.TouchAnimator build() -> build
    com.android.systemui.qs.TouchAnimator$Builder setListener(com.android.systemui.qs.TouchAnimator$Listener) -> setListener
    void add(java.lang.Object,com.android.systemui.qs.TouchAnimator$KeyframeSet) -> add
    android.util.Property getProperty(java.lang.Object,java.lang.String,java.lang.Class) -> getProperty
    com.android.systemui.qs.TouchAnimator$Builder setEndDelay(float) -> setEndDelay
    com.android.systemui.qs.TouchAnimator$Builder setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.android.systemui.qs.TouchAnimator$Builder setStartDelay(float) -> setStartDelay
com.android.systemui.assist.AssistDisclosure$AssistDisclosureView -> com.android.systemui.assist.AssistDisclosure$AssistDisclosureView:
    int mAlpha -> mAlpha
    android.animation.ValueAnimator mAlphaInAnimator -> mAlphaInAnimator
    android.animation.ValueAnimator mAlphaOutAnimator -> mAlphaOutAnimator
    android.animation.AnimatorSet mAnimator -> mAnimator
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mShadowPaint -> mShadowPaint
    float mShadowThickness -> mShadowThickness
    float mThickness -> mThickness
    com.android.systemui.assist.AssistDisclosure this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistDisclosure,android.content.Context) -> <init>
    void drawBeam(android.graphics.Canvas,float,float,float,float,android.graphics.Paint,float) -> drawBeam
    void drawGeometry(android.graphics.Canvas,android.graphics.Paint,float) -> drawGeometry
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void startAnimation() -> startAnimation
com.android.systemui.volume.ConfigurableTexts -> com.android.systemui.volume.ConfigurableTexts:
    android.content.Context mContext -> mContext
    android.util.ArrayMap mTextLabels -> mTextLabels
    android.util.ArrayMap mTexts -> mTexts
    java.lang.Runnable mUpdateAll -> mUpdateAll
    void <init>(android.content.Context) -> <init>
    int add(android.widget.TextView,int) -> add
    void update() -> update
    int add(android.widget.TextView) -> add
    void setTextLabelH(android.widget.TextView,int) -> setTextLabelH
    void setTextSizeH(android.widget.TextView,int) -> setTextSizeH
    android.util.ArrayMap -get0(com.android.systemui.volume.ConfigurableTexts) -> -get0
    android.util.ArrayMap -get1(com.android.systemui.volume.ConfigurableTexts) -> -get1
    void -wrap0(com.android.systemui.volume.ConfigurableTexts,android.widget.TextView,int) -> -wrap0
    void -wrap1(com.android.systemui.volume.ConfigurableTexts,android.widget.TextView,int) -> -wrap1
com.android.keyguard.KeyguardPatternView$2 -> com.android.keyguard.KeyguardPatternView$2:
    com.android.keyguard.KeyguardPatternView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPatternView,long,long) -> <init>
    void onFinish() -> onFinish
    void onTick(long) -> onTick
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout) -> <init>
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$3:
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> val$layoutListener
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> this$1
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    void onDismiss() -> onDismiss
android.support.graphics.drawable.VectorDrawableCompat$VGroup -> android.support.graphics.drawable.VectorDrawableCompat$VGroup:
    float mPivotY -> mPivotY
    float mScaleX -> mScaleX
    float mPivotX -> mPivotX
    float mScaleY -> mScaleY
    int[] mThemeAttrs -> mThemeAttrs
    android.graphics.Matrix mLocalMatrix -> mLocalMatrix
    float mTranslateY -> mTranslateY
    float mRotate -> mRotate
    float mTranslateX -> mTranslateX
    int mChangingConfigurations -> mChangingConfigurations
    java.util.ArrayList mChildren -> mChildren
    android.graphics.Matrix mStackedMatrix -> mStackedMatrix
    java.lang.String mGroupName -> mGroupName
    android.graphics.Matrix -get1(android.support.graphics.drawable.VectorDrawableCompat$VGroup) -> -get1
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    java.lang.String getGroupName() -> getGroupName
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap) -> <init>
    void updateLocalMatrix() -> updateLocalMatrix
    android.graphics.Matrix -get0(android.support.graphics.drawable.VectorDrawableCompat$VGroup) -> -get0
    void <init>() -> <init>
com.android.systemui.pip.tv.PipManager -> com.android.systemui.pip.tv.PipManager:
    boolean DEBUG -> DEBUG
    android.media.session.MediaSessionManager$OnActiveSessionsChangedListener mActiveMediaSessionListener -> mActiveMediaSessionListener
    android.app.IActivityManager mActivityManager -> mActivityManager
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    java.lang.Runnable mClosePipRunnable -> mClosePipRunnable
    android.content.Context mContext -> mContext
    android.graphics.Rect mCurrentPipBounds -> mCurrentPipBounds
    android.content.pm.ParceledListSlice mCustomActions -> mCustomActions
    android.graphics.Rect mDefaultPipBounds -> mDefaultPipBounds
    android.os.Handler mHandler -> mHandler
    int mImeHeightAdjustment -> mImeHeightAdjustment
    boolean mImeVisible -> mImeVisible
    boolean mInitialized -> mInitialized
    int mLastOrientation -> mLastOrientation
    java.lang.String[] mLastPackagesResourceGranted -> mLastPackagesResourceGranted
    java.util.List mListeners -> mListeners
    java.util.List mMediaListeners -> mMediaListeners
    android.media.session.MediaSessionManager mMediaSessionManager -> mMediaSessionManager
    android.graphics.Rect mMenuModePipBounds -> mMenuModePipBounds
    com.android.systemui.pip.tv.PipManager$PinnedStackListener mPinnedStackListener -> mPinnedStackListener
    android.graphics.Rect mPipBounds -> mPipBounds
    android.content.ComponentName mPipComponentName -> mPipComponentName
    android.media.session.MediaController mPipMediaController -> mPipMediaController
    com.android.systemui.pip.tv.PipNotification mPipNotification -> mPipNotification
    int mPipTaskId -> mPipTaskId
    java.lang.Runnable mResizePinnedStackRunnable -> mResizePinnedStackRunnable
    int mResumeResizePinnedStackRunnableState -> mResumeResizePinnedStackRunnableState
    android.graphics.Rect mSettingsPipBounds -> mSettingsPipBounds
    int mState -> mState
    int mSuspendPipResizingReason -> mSuspendPipResizingReason
    com.android.systemui.recents.misc.SystemServicesProxy$TaskStackListener mTaskStackListener -> mTaskStackListener
    android.view.IWindowManager mWindowManager -> mWindowManager
    com.android.systemui.pip.tv.PipManager sPipManager -> sPipManager
    java.util.List sSettingsPackageAndClassNamePairList -> sSettingsPackageAndClassNamePairList
    com.android.systemui.pip.tv.PipManager getInstance() -> getInstance
    android.media.session.MediaController getMediaController() -> getMediaController
    void showPictureInPictureMenu() -> showPictureInPictureMenu
    void closePip() -> closePip
    void addListener(com.android.systemui.pip.tv.PipManager$Listener) -> addListener
    void addMediaListener(com.android.systemui.pip.tv.PipManager$MediaListener) -> addMediaListener
    boolean isPipShown() -> isPipShown
    void resizePinnedStack(int) -> resizePinnedStack
    void removeListener(com.android.systemui.pip.tv.PipManager$Listener) -> removeListener
    void resumePipResizing(int) -> resumePipResizing
    void suspendPipResizing(int) -> suspendPipResizing
    void <init>() -> <init>
    void closePipInternal(boolean) -> closePipInternal
    void dump(java.io.PrintWriter) -> dump
    android.app.ActivityManager$StackInfo getPinnedStackInfo() -> getPinnedStackInfo
    int getPlaybackState() -> getPlaybackState
    int getState() -> getState
    void handleMediaResourceGranted(java.lang.String[]) -> handleMediaResourceGranted
    void initialize(android.content.Context) -> initialize
    boolean isSettingsShown() -> isSettingsShown
    void loadConfigurationsAndApply(android.content.res.Configuration) -> loadConfigurationsAndApply
    void movePipToFullscreen() -> movePipToFullscreen
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void removeMediaListener(com.android.systemui.pip.tv.PipManager$MediaListener) -> removeMediaListener
    void showPipMenu() -> showPipMenu
    void updateMediaController(java.util.List) -> updateMediaController
    void updatePipVisibility(boolean) -> updatePipVisibility
    void <clinit>() -> <clinit>
    android.media.session.MediaSessionManager$OnActiveSessionsChangedListener -get0(com.android.systemui.pip.tv.PipManager) -> -get0
    android.content.Context -get1(com.android.systemui.pip.tv.PipManager) -> -get1
    android.content.pm.ParceledListSlice -get2(com.android.systemui.pip.tv.PipManager) -> -get2
    android.graphics.Rect -get3(com.android.systemui.pip.tv.PipManager) -> -get3
    android.os.Handler -get4(com.android.systemui.pip.tv.PipManager) -> -get4
    int -get5(com.android.systemui.pip.tv.PipManager) -> -get5
    boolean -get6(com.android.systemui.pip.tv.PipManager) -> -get6
    java.util.List -get7(com.android.systemui.pip.tv.PipManager) -> -get7
    android.media.session.MediaSessionManager -get8(com.android.systemui.pip.tv.PipManager) -> -get8
    android.graphics.Rect -get9(com.android.systemui.pip.tv.PipManager) -> -get9
    int -get10(com.android.systemui.pip.tv.PipManager) -> -get10
    int -get11(com.android.systemui.pip.tv.PipManager) -> -get11
    android.graphics.Rect -get12(com.android.systemui.pip.tv.PipManager) -> -get12
    int -get13(com.android.systemui.pip.tv.PipManager) -> -get13
    android.graphics.Rect -set0(com.android.systemui.pip.tv.PipManager,android.graphics.Rect) -> -set0
    android.content.pm.ParceledListSlice -set1(com.android.systemui.pip.tv.PipManager,android.content.pm.ParceledListSlice) -> -set1
    int -set2(com.android.systemui.pip.tv.PipManager,int) -> -set2
    boolean -set3(com.android.systemui.pip.tv.PipManager,boolean) -> -set3
    android.graphics.Rect -set4(com.android.systemui.pip.tv.PipManager,android.graphics.Rect) -> -set4
    android.content.ComponentName -set5(com.android.systemui.pip.tv.PipManager,android.content.ComponentName) -> -set5
    int -set6(com.android.systemui.pip.tv.PipManager,int) -> -set6
    int -set7(com.android.systemui.pip.tv.PipManager,int) -> -set7
    android.app.ActivityManager$StackInfo -wrap0(com.android.systemui.pip.tv.PipManager) -> -wrap0
    boolean -wrap1(com.android.systemui.pip.tv.PipManager) -> -wrap1
    int -wrap2(com.android.systemui.pip.tv.PipManager) -> -wrap2
    void -wrap3(com.android.systemui.pip.tv.PipManager,boolean) -> -wrap3
    void -wrap4(com.android.systemui.pip.tv.PipManager,java.lang.String[]) -> -wrap4
    void -wrap5(com.android.systemui.pip.tv.PipManager) -> -wrap5
    void -wrap6(com.android.systemui.pip.tv.PipManager,java.util.List) -> -wrap6
    void -wrap7(com.android.systemui.pip.tv.PipManager,boolean) -> -wrap7
com.android.systemui.statusbar.notification.NotificationInflater$6 -> com.android.systemui.statusbar.notification.NotificationInflater$6:
    boolean val$isNewView -> val$isNewView
    com.android.systemui.statusbar.notification.NotificationInflater$ApplyCallback val$applyCallback -> val$applyCallback
    com.android.systemui.statusbar.notification.NotificationViewWrapper val$existingWrapper -> val$existingWrapper
    java.util.HashMap val$runningInflations -> val$runningInflations
    int val$inflationId -> val$inflationId
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress val$result -> val$result
    int val$reInflateFlags -> val$reInflateFlags
    com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback val$callback -> val$callback
    com.android.systemui.statusbar.ExpandableNotificationRow val$row -> val$row
    boolean val$redactAmbient -> val$redactAmbient
    android.view.View val$existingView -> val$existingView
    android.widget.RemoteViews val$newContentView -> val$newContentView
    com.android.systemui.statusbar.NotificationContentView val$parentLayout -> val$parentLayout
    android.widget.RemoteViews$OnClickHandler val$remoteViewClickHandler -> val$remoteViewClickHandler
    com.android.systemui.statusbar.NotificationData$Entry val$entry -> val$entry
    void <init>(boolean,com.android.systemui.statusbar.notification.NotificationInflater$ApplyCallback,com.android.systemui.statusbar.notification.NotificationViewWrapper,java.util.HashMap,int,com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,int,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback,com.android.systemui.statusbar.ExpandableNotificationRow,boolean,android.view.View,android.widget.RemoteViews,com.android.systemui.statusbar.NotificationContentView,android.widget.RemoteViews$OnClickHandler,com.android.systemui.statusbar.NotificationData$Entry) -> <init>
    void onError(java.lang.Exception) -> onError
    void onViewApplied(android.view.View) -> onViewApplied
android.support.annotation.NonNull -> android.support.annotation.NonNull:
android.support.v7.view.WindowCallbackWrapper -> android.support.v7.view.WindowCallbackWrapper:
    android.view.Window$Callback mWrapped -> mWrapped
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    void onAttachedToWindow() -> onAttachedToWindow
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onContentChanged() -> onContentChanged
    void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void <init>(android.view.Window$Callback) -> <init>
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
com.android.systemui.qs.external.TileServices$2 -> com.android.systemui.qs.external.TileServices$2:
    void <init>() -> <init>
    int compare(com.android.systemui.qs.external.TileServiceManager,com.android.systemui.qs.external.TileServiceManager) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$1:
    android.support.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> this$0
    void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
com.android.systemui.screenshot.GlobalScreenshot$11 -> com.android.systemui.screenshot.GlobalScreenshot$11:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.LatencyTester -> com.android.systemui.LatencyTester:
    void <init>() -> <init>
    void fakeTurnOnScreen() -> fakeTurnOnScreen
    void fakeWakeAndUnlock() -> fakeWakeAndUnlock
    void start() -> start
    void -wrap0(com.android.systemui.LatencyTester) -> -wrap0
    void -wrap1(com.android.systemui.LatencyTester) -> -wrap1
android.support.v7.app.WindowDecorActionBar$ActionModeImpl -> android.support.v7.app.WindowDecorActionBar$ActionModeImpl:
    android.content.Context mActionModeContext -> mActionModeContext
    java.lang.ref.WeakReference mCustomView -> mCustomView
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    android.support.v7.view.ActionMode$Callback mCallback -> mCallback
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(int) -> setSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    android.view.Menu getMenu() -> getMenu
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void invalidate() -> invalidate
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    boolean isTitleOptional() -> isTitleOptional
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setTitle(int) -> setTitle
    void finish() -> finish
    void <init>(android.support.v7.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback) -> <init>
    boolean dispatchOnCreate() -> dispatchOnCreate
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    boolean mFirstLayout -> mFirstLayout
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    float mParallaxOffset -> mParallaxOffset
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    android.view.View mSlideableView -> mSlideableView
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    int mSlideRange -> mSlideRange
    int mOverhangSize -> mOverhangSize
    int mParallaxBy -> mParallaxBy
    int mCoveredFadeColor -> mCoveredFadeColor
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.graphics.Rect mTmpRect -> mTmpRect
    float mSlideOffset -> mSlideOffset
    boolean mCanSlide -> mCanSlide
    float mInitialMotionY -> mInitialMotionY
    boolean mPreservedOpenState -> mPreservedOpenState
    float mInitialMotionX -> mInitialMotionX
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    int mSliderFadeColor -> mSliderFadeColor
    boolean mIsUnableToDrag -> mIsUnableToDrag
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    boolean isOpen() -> isOpen
    void onAttachedToWindow() -> onAttachedToWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setAllChildrenVisible() -> setAllChildrenVisible
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean openPane(android.view.View,int) -> openPane
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void parallaxOtherViews(float) -> parallaxOtherViews
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    boolean isDimmed(android.view.View) -> isDimmed
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void computeScroll() -> computeScroll
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean closePane(android.view.View,int) -> closePane
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean openPane() -> openPane
    void onMeasure(int,int) -> onMeasure
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean isSlideable() -> isSlideable
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    boolean closePane() -> closePane
    void draw(android.graphics.Canvas) -> draw
    void onPanelDragged(int) -> onPanelDragged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void onLayout(boolean,int,int,int,int) -> onLayout
    void <clinit>() -> <clinit>
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void onDetachedFromWindow() -> onDetachedFromWindow
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$6 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$6:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> <init>
    void onActivityStarted(int) -> onActivityStarted
com.android.systemui.statusbar.phone.NavigationBarView -> com.android.systemui.statusbar.phone.NavigationBarView:
    com.android.systemui.statusbar.policy.KeyButtonDrawable mAccessibilityIcon -> mAccessibilityIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mBackAltCarModeIcon -> mBackAltCarModeIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mBackAltIcon -> mBackAltIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mBackAltLandCarModeIcon -> mBackAltLandCarModeIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mBackAltLandIcon -> mBackAltLandIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mBackCarModeIcon -> mBackCarModeIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mBackIcon -> mBackIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mBackLandCarModeIcon -> mBackLandCarModeIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mBackLandIcon -> mBackLandIcon
    com.android.systemui.statusbar.phone.NavigationBarTransitions mBarTransitions -> mBarTransitions
    android.util.SparseArray mButtonDispatchers -> mButtonDispatchers
    android.content.res.Configuration mConfiguration -> mConfiguration
    int mCurrentRotation -> mCurrentRotation
    android.view.View mCurrentView -> mCurrentView
    com.android.systemui.statusbar.policy.DeadZone mDeadZone -> mDeadZone
    int mDisabledFlags -> mDisabledFlags
    android.view.Display mDisplay -> mDisplay
    com.android.systemui.stackdivider.Divider mDivider -> mDivider
    com.android.systemui.statusbar.policy.KeyButtonDrawable mDockedIcon -> mDockedIcon
    java.util.function.Consumer mDockedListener -> mDockedListener
    boolean mDockedStackExists -> mDockedStackExists
    com.android.systemui.plugins.statusbar.phone.NavGesture$GestureHelper mGestureHelper -> mGestureHelper
    com.android.systemui.statusbar.phone.NavigationBarView$H mHandler -> mHandler
    com.android.systemui.statusbar.policy.KeyButtonDrawable mHomeCarModeIcon -> mHomeCarModeIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mHomeDefaultIcon -> mHomeDefaultIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable mImeIcon -> mImeIcon
    android.view.View$OnClickListener mImeSwitcherClickListener -> mImeSwitcherClickListener
    boolean mInCarMode -> mInCarMode
    boolean mLayoutTransitionsEnabled -> mLayoutTransitionsEnabled
    boolean mLongClickableAccessibilityButton -> mLongClickableAccessibilityButton
    com.android.systemui.statusbar.policy.KeyButtonDrawable mMenuIcon -> mMenuIcon
    int mNavigationIconHints -> mNavigationIconHints
    com.android.systemui.statusbar.phone.NavigationBarInflaterView mNavigationInflaterView -> mNavigationInflaterView
    com.android.systemui.statusbar.phone.NavigationBarView$OnVerticalChangedListener mOnVerticalChangedListener -> mOnVerticalChangedListener
    com.android.systemui.statusbar.policy.KeyButtonDrawable mRecentIcon -> mRecentIcon
    com.android.systemui.RecentsComponent mRecentsComponent -> mRecentsComponent
    android.view.View[] mRotatedViews -> mRotatedViews
    boolean mShowAccessibilityButton -> mShowAccessibilityButton
    boolean mShowMenu -> mShowMenu
    com.android.systemui.statusbar.phone.NavigationBarView$NavTransitionListener mTransitionListener -> mTransitionListener
    boolean mUseCarModeUi -> mUseCarModeUi
    boolean mVertical -> mVertical
    boolean mWakeAndUnlocking -> mWakeAndUnlocking
    void setWakeAndUnlocking(boolean) -> setWakeAndUnlocking
    boolean needsReorient(int) -> needsReorient
    void setDisabledFlags(int) -> setDisabledFlags
    void setComponents(com.android.systemui.RecentsComponent,com.android.systemui.stackdivider.Divider) -> setComponents
    void setOnVerticalChangedListener(com.android.systemui.statusbar.phone.NavigationBarView$OnVerticalChangedListener) -> setOnVerticalChangedListener
    com.android.systemui.statusbar.phone.LightBarTransitionsController getLightTransitionsController() -> getLightTransitionsController
    com.android.systemui.statusbar.phone.BarTransitions getBarTransitions() -> getBarTransitions
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void setNavigationIconHints(int) -> setNavigationIconHints
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setLayoutDirection(int) -> setLayoutDirection
    void notifyScreenOn() -> notifyScreenOn
    void reorient() -> reorient
    com.android.systemui.statusbar.phone.ButtonDispatcher getRecentsButton() -> getRecentsButton
    com.android.systemui.statusbar.phone.ButtonDispatcher getBackButton() -> getBackButton
    com.android.systemui.statusbar.phone.ButtonDispatcher getHomeButton() -> getHomeButton
    com.android.systemui.statusbar.phone.ButtonDispatcher getAccessibilityButton() -> getAccessibilityButton
    void abortCurrentGesture() -> abortCurrentGesture
    void setDisabledFlags(int,boolean) -> setDisabledFlags
    void setAccessibilityButtonState(boolean,boolean) -> setAccessibilityButtonState
    void setLayoutTransitionsEnabled(boolean) -> setLayoutTransitionsEnabled
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void dumpButton(java.io.PrintWriter,java.lang.String,com.android.systemui.statusbar.phone.ButtonDispatcher) -> dumpButton
    com.android.systemui.statusbar.policy.KeyButtonDrawable getBackIcon(boolean,boolean) -> getBackIcon
    com.android.systemui.statusbar.policy.KeyButtonDrawable getBackIconWithAlt(boolean,boolean) -> getBackIconWithAlt
    android.util.SparseArray getButtonDispatchers() -> getButtonDispatchers
    android.view.View getCurrentView() -> getCurrentView
    com.android.systemui.statusbar.policy.KeyButtonDrawable getDrawable(android.content.Context,int,int) -> getDrawable
    com.android.systemui.statusbar.policy.KeyButtonDrawable getDrawable(android.content.Context,android.content.Context,int,int) -> getDrawable
    com.android.systemui.statusbar.phone.ButtonDispatcher getImeSwitchButton() -> getImeSwitchButton
    com.android.systemui.statusbar.phone.ButtonDispatcher getMenuButton() -> getMenuButton
    java.lang.String getResourceName(int) -> getResourceName
    boolean inLockTask() -> inLockTask
    void notifyVerticalChangedListener(boolean) -> notifyVerticalChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onPluginConnected(com.android.systemui.plugins.statusbar.phone.NavGesture,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.statusbar.phone.NavGesture) -> onPluginDisconnected
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void postCheckForInvalidLayout(java.lang.String) -> postCheckForInvalidLayout
    void setMenuVisibility(boolean,boolean) -> setMenuVisibility
    void setNavigationIconHints(int,boolean) -> setNavigationIconHints
    void setUseFadingAnimations(boolean) -> setUseFadingAnimations
    boolean updateCarMode(android.content.res.Configuration) -> updateCarMode
    void updateCurrentView() -> updateCurrentView
    void updateIcons(android.content.Context,android.content.res.Configuration,android.content.res.Configuration) -> updateIcons
    void updateLayoutTransitionsEnabled() -> updateLayoutTransitionsEnabled
    void updateRecentsIcon() -> updateRecentsIcon
    void updateRotatedViews() -> updateRotatedViews
    void updateTaskSwitchHelper() -> updateTaskSwitchHelper
    java.lang.String visibilityToString(int) -> visibilityToString
    void lambda$-com_android_systemui_statusbar_phone_NavigationBarView_32376(java.lang.Boolean) -> lambda$-com_android_systemui_statusbar_phone_NavigationBarView_32376
    void lambda$-com_android_systemui_statusbar_phone_NavigationBarView_32400(java.lang.Boolean) -> lambda$-com_android_systemui_statusbar_phone_NavigationBarView_32400
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
    android.content.Context -get0(com.android.systemui.statusbar.phone.NavigationBarView) -> -get0
com.android.settingslib.core.lifecycle.Lifecycle -> com.android.settingslib.core.lifecycle.Lifecycle:
    java.util.List mObservers -> mObservers
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onAttach(android.content.Context) -> onAttach
    void onDestroy() -> onDestroy
    void setPreferenceScreen(android.support.v7.preference.PreferenceScreen) -> setPreferenceScreen
    void onPause() -> onPause
    void <init>() -> <init>
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask -> android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask:
    android.support.v7.widget.ActivityChooserModel this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(android.support.v7.widget.ActivityChooserModel) -> <init>
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void <init>() -> <init>
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
com.android.systemui.recents.events.EventBus$4 -> com.android.systemui.recents.events.EventBus$4:
    com.android.systemui.recents.events.EventBus this$0 -> this$0
    com.android.systemui.recents.events.EventHandler val$eventHandler -> val$eventHandler
    com.android.systemui.recents.events.EventBus$Event val$event -> val$event
    void <init>(com.android.systemui.recents.events.EventBus,com.android.systemui.recents.events.EventHandler,com.android.systemui.recents.events.EventBus$Event) -> <init>
    void run() -> run
android.support.v7.app.ActionBar$OnMenuVisibilityListener -> android.support.v7.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.android.systemui.util.wakelock.DelayedWakeLock -> com.android.systemui.util.wakelock.DelayedWakeLock:
    android.os.Handler mHandler -> mHandler
    com.android.systemui.util.wakelock.WakeLock mInner -> mInner
    java.lang.Runnable mRelease -> mRelease
    void <init>(android.os.Handler,com.android.systemui.util.wakelock.WakeLock) -> <init>
    void acquire() -> acquire
    void release() -> release
    java.lang.Runnable wrap(java.lang.Runnable) -> wrap
    void -com_android_systemui_util_wakelock_DelayedWakeLock-mthref-0(com.android.systemui.util.wakelock.WakeLock) -> -com_android_systemui_util_wakelock_DelayedWakeLock-mthref-0
com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus -> com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus:
    int status -> status
    int maxChargingWattage -> maxChargingWattage
    int health -> health
    int level -> level
    int plugged -> plugged
    boolean isPluggedIn() -> isPluggedIn
    boolean isCharged() -> isCharged
    int getChargingSpeed(int,int) -> getChargingSpeed
    void <init>(int,int,int,int,int) -> <init>
    boolean isBatteryLow() -> isBatteryLow
android.support.v7.preference.ListPreference -> android.support.v7.preference.ListPreference:
    java.lang.CharSequence[] mEntries -> mEntries
    java.lang.CharSequence[] mEntryValues -> mEntryValues
    java.lang.String mSummary -> mSummary
    java.lang.String mValue -> mValue
    boolean mValueSet -> mValueSet
    java.lang.CharSequence getSummary() -> getSummary
    void setEntryValues(java.lang.CharSequence[]) -> setEntryValues
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    int findIndexOfValue(java.lang.String) -> findIndexOfValue
    java.lang.CharSequence[] getEntryValues() -> getEntryValues
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void <init>(android.content.Context) -> <init>
    java.lang.String getValue() -> getValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void setSummary(java.lang.CharSequence) -> setSummary
    java.lang.CharSequence getEntry() -> getEntry
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    java.lang.CharSequence[] getEntries() -> getEntries
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void setEntries(java.lang.CharSequence[]) -> setEntries
    int getValueIndex() -> getValueIndex
    void setValue(java.lang.String) -> setValue
com.android.systemui.plugins.qs.QSTile -> com.android.systemui.plugins.qs.QSTile:
    int VERSION -> VERSION
    void clearState() -> clearState
    com.android.systemui.plugins.qs.QSIconView createTileView(android.content.Context) -> createTileView
    void secondaryClick() -> secondaryClick
    android.metrics.LogMaker populate(android.metrics.LogMaker) -> populate
    void refreshState() -> refreshState
    void addCallback(com.android.systemui.plugins.qs.QSTile$Callback) -> addCallback
    void click() -> click
    void setTileSpec(java.lang.String) -> setTileSpec
    void setListening(java.lang.Object,boolean) -> setListening
    boolean isAvailable() -> isAvailable
    void setDetailListening(boolean) -> setDetailListening
    com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter() -> getDetailAdapter
    java.lang.CharSequence getTileLabel() -> getTileLabel
    int getMetricsCategory() -> getMetricsCategory
    com.android.systemui.plugins.qs.QSTile$State getState() -> getState
    void removeCallback(com.android.systemui.plugins.qs.QSTile$Callback) -> removeCallback
    void removeCallbacks() -> removeCallbacks
    java.lang.String getTileSpec() -> getTileSpec
    void longClick() -> longClick
    void userSwitch(int) -> userSwitch
    void destroy() -> destroy
com.android.systemui.tuner.-$Lambda$U4ktHPNI6BrZ_s6jDC6qSbjiuiE$1 -> com.android.systemui.tuner.-$Lambda$U4ktHPNI6BrZ_s6jDC6qSbjiuiE$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    int getRowSpan() -> getRowSpan
    int getColumnSpan() -> getColumnSpan
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    void <init>(java.lang.Object) -> <init>
    int getRowIndex() -> getRowIndex
    boolean isSelected() -> isSelected
    int getColumnIndex() -> getColumnIndex
com.android.systemui.statusbar.ActivatableNotificationView -> com.android.systemui.statusbar.ActivatableNotificationView:
    android.view.animation.Interpolator ACTIVATE_INVERSE_ALPHA_INTERPOLATOR -> ACTIVATE_INVERSE_ALPHA_INTERPOLATOR
    android.view.animation.Interpolator ACTIVATE_INVERSE_INTERPOLATOR -> ACTIVATE_INVERSE_INTERPOLATOR
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    boolean mActivated -> mActivated
    float mAnimationTranslationY -> mAnimationTranslationY
    float mAppearAnimationFraction -> mAppearAnimationFraction
    android.graphics.RectF mAppearAnimationRect -> mAppearAnimationRect
    float mAppearAnimationTranslation -> mAppearAnimationTranslation
    android.animation.ValueAnimator mAppearAnimator -> mAppearAnimator
    android.animation.ObjectAnimator mBackgroundAnimator -> mBackgroundAnimator
    android.animation.ValueAnimator mBackgroundColorAnimator -> mBackgroundColorAnimator
    com.android.systemui.statusbar.NotificationBackgroundView mBackgroundDimmed -> mBackgroundDimmed
    com.android.systemui.statusbar.NotificationBackgroundView mBackgroundNormal -> mBackgroundNormal
    android.animation.ValueAnimator$AnimatorUpdateListener mBackgroundVisibilityUpdater -> mBackgroundVisibilityUpdater
    float mBgAlpha -> mBgAlpha
    int mBgTint -> mBgTint
    android.view.animation.Interpolator mCurrentAlphaInterpolator -> mCurrentAlphaInterpolator
    android.view.animation.Interpolator mCurrentAppearInterpolator -> mCurrentAppearInterpolator
    int mCurrentBackgroundTint -> mCurrentBackgroundTint
    boolean mDark -> mDark
    boolean mDimmed -> mDimmed
    int mDimmedAlpha -> mDimmedAlpha
    float mDimmedBackgroundFadeInAmount -> mDimmedBackgroundFadeInAmount
    com.android.systemui.statusbar.phone.DoubleTapHelper mDoubleTapHelper -> mDoubleTapHelper
    boolean mDrawingAppearAnimation -> mDrawingAppearAnimation
    android.animation.AnimatorListenerAdapter mFadeInEndListener -> mFadeInEndListener
    android.animation.ValueAnimator mFadeInFromDarkAnimator -> mFadeInFromDarkAnimator
    com.android.systemui.statusbar.notification.FakeShadowView mFakeShadow -> mFakeShadow
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    boolean mIsBelowSpeedBump -> mIsBelowSpeedBump
    int mLowPriorityColor -> mLowPriorityColor
    int mLowPriorityRippleColor -> mLowPriorityRippleColor
    boolean mNeedsDimming -> mNeedsDimming
    float mNormalBackgroundVisibilityAmount -> mNormalBackgroundVisibilityAmount
    int mNormalColor -> mNormalColor
    int mNormalRippleColor -> mNormalRippleColor
    com.android.systemui.statusbar.ActivatableNotificationView$OnActivatedListener mOnActivatedListener -> mOnActivatedListener
    float mOverrideAmount -> mOverrideAmount
    int mOverrideTint -> mOverrideTint
    float mShadowAlpha -> mShadowAlpha
    boolean mShadowHidden -> mShadowHidden
    android.view.animation.Interpolator mSlowOutFastInInterpolator -> mSlowOutFastInInterpolator
    android.view.animation.Interpolator mSlowOutLinearInInterpolator -> mSlowOutLinearInInterpolator
    int mStartTint -> mStartTint
    java.lang.Runnable mTapTimeoutRunnable -> mTapTimeoutRunnable
    int mTargetTint -> mTargetTint
    int mTintedRippleColor -> mTintedRippleColor
    android.animation.ValueAnimator$AnimatorUpdateListener mUpdateOutlineListener -> mUpdateOutlineListener
    boolean mWasActivatedOnDown -> mWasActivatedOnDown
    void setFakeShadowIntensity(float,float,int,int) -> setFakeShadowIntensity
    int calculateBgColor() -> calculateBgColor
    void setOnActivatedListener(com.android.systemui.statusbar.ActivatableNotificationView$OnActivatedListener) -> setOnActivatedListener
    void makeInactive(boolean) -> makeInactive
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int calculateBgColor(boolean,boolean) -> calculateBgColor
    void cancelAppearAnimation() -> cancelAppearAnimation
    void cancelFadeAnimations() -> cancelFadeAnimations
    boolean disallowSingleClick(android.view.MotionEvent) -> disallowSingleClick
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    void drawableStateChanged() -> drawableStateChanged
    void enableAppearDrawing(boolean) -> enableAppearDrawing
    void fadeDimmedBackground() -> fadeDimmedBackground
    void fadeInFromDark(long) -> fadeInFromDark
    int getBackgroundColorWithoutTint() -> getBackgroundColorWithoutTint
    android.view.View getContentView() -> getContentView
    int getRippleColor() -> getRippleColor
    float getShadowAlpha() -> getShadowAlpha
    boolean handleSlideBack() -> handleSlideBack
    boolean handleTouchEventDimmed(android.view.MotionEvent) -> handleTouchEventDimmed
    void initBackground() -> initBackground
    boolean isBelowSpeedBump() -> isBelowSpeedBump
    boolean isDimmable() -> isDimmable
    boolean isDrawingAppearAnimation() -> isDrawingAppearAnimation
    boolean isInteractive() -> isInteractive
    boolean isTouchExplorationEnabled() -> isTouchExplorationEnabled
    void makeActive() -> makeActive
    void onAppearAnimationFinished(boolean) -> onAppearAnimationFinished
    void onBelowSpeedBumpChanged() -> onBelowSpeedBumpChanged
    void onFinishInflate() -> onFinishInflate
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void performAddAnimation(long,long) -> performAddAnimation
    boolean performClick() -> performClick
    void performRemoveAnimation(long,float,java.lang.Runnable) -> performRemoveAnimation
    void resetBackgroundAlpha() -> resetBackgroundAlpha
    void setActualHeight(int,boolean) -> setActualHeight
    void setBackgroundTintColor(int) -> setBackgroundTintColor
    void setBelowSpeedBump(boolean) -> setBelowSpeedBump
    void setClipBottomAmount(int) -> setClipBottomAmount
    void setClipTopAmount(int) -> setClipTopAmount
    void setContentAlpha(float) -> setContentAlpha
    void setDark(boolean,boolean,long) -> setDark
    void setDimmed(boolean,boolean) -> setDimmed
    void setNormalBackgroundVisibilityAmount(float) -> setNormalBackgroundVisibilityAmount
    void setOverrideTintColor(int,float) -> setOverrideTintColor
    void setShadowAlpha(float) -> setShadowAlpha
    void setTintColor(int) -> setTintColor
    void setTintColor(int,boolean) -> setTintColor
    boolean shouldHideBackground() -> shouldHideBackground
    void startActivateAnimation(boolean) -> startActivateAnimation
    void startAppearAnimation(boolean,float,long,long,java.lang.Runnable) -> startAppearAnimation
    void updateAppearAnimationAlpha() -> updateAppearAnimationAlpha
    void updateAppearRect() -> updateAppearRect
    void updateBackground() -> updateBackground
    void updateBackgroundAlpha(float) -> updateBackgroundAlpha
    void updateBackgroundTint() -> updateBackgroundTint
    void updateBackgroundTint(boolean) -> updateBackgroundTint
    void updateOutlineAlpha() -> updateOutlineAlpha
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_ActivatableNotificationView_8375(boolean) -> lambda$-com_android_systemui_statusbar_ActivatableNotificationView_8375
    boolean -com_android_systemui_statusbar_ActivatableNotificationView-mthref-0() -> -com_android_systemui_statusbar_ActivatableNotificationView-mthref-0
    boolean -com_android_systemui_statusbar_ActivatableNotificationView-mthref-1() -> -com_android_systemui_statusbar_ActivatableNotificationView-mthref-1
    void -com_android_systemui_statusbar_ActivatableNotificationView-mthref-2(com.android.systemui.classifier.FalsingManager,boolean,float,float) -> -com_android_systemui_statusbar_ActivatableNotificationView-mthref-2
    com.android.systemui.statusbar.NotificationBackgroundView -get0(com.android.systemui.statusbar.ActivatableNotificationView) -> -get0
    com.android.systemui.statusbar.NotificationBackgroundView -get1(com.android.systemui.statusbar.ActivatableNotificationView) -> -get1
    android.animation.ValueAnimator -get2(com.android.systemui.statusbar.ActivatableNotificationView) -> -get2
    int -get3(com.android.systemui.statusbar.ActivatableNotificationView) -> -get3
    int -get4(com.android.systemui.statusbar.ActivatableNotificationView) -> -get4
    float -set0(com.android.systemui.statusbar.ActivatableNotificationView,float) -> -set0
    android.animation.ObjectAnimator -set1(com.android.systemui.statusbar.ActivatableNotificationView,android.animation.ObjectAnimator) -> -set1
    android.animation.ValueAnimator -set2(com.android.systemui.statusbar.ActivatableNotificationView,android.animation.ValueAnimator) -> -set2
    float -set3(com.android.systemui.statusbar.ActivatableNotificationView,float) -> -set3
    android.animation.ValueAnimator -set4(com.android.systemui.statusbar.ActivatableNotificationView,android.animation.ValueAnimator) -> -set4
    void -wrap0(com.android.systemui.statusbar.ActivatableNotificationView,boolean) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.ActivatableNotificationView,int) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.ActivatableNotificationView) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.ActivatableNotificationView) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.ActivatableNotificationView) -> -wrap4
com.android.systemui.usb.UsbDebuggingActivity -> com.android.systemui.usb.UsbDebuggingActivity:
    android.widget.CheckBox mAlwaysAllow -> mAlwaysAllow
    com.android.systemui.usb.UsbDebuggingActivity$UsbDisconnectedReceiver mDisconnectedReceiver -> mDisconnectedReceiver
    java.lang.String mKey -> mKey
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    boolean lambda$-com_android_systemui_usb_UsbDebuggingActivity_3614(android.view.View,android.view.MotionEvent) -> lambda$-com_android_systemui_usb_UsbDebuggingActivity_3614
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectBaseImpl IMPL -> IMPL
    void <clinit>() -> <clinit>
    void onPull(android.widget.EdgeEffect,float,float) -> onPull
com.android.systemui.qs.SignalTileView -> com.android.systemui.qs.SignalTileView:
    long DEFAULT_DURATION -> DEFAULT_DURATION
    long SHORT_DURATION -> SHORT_DURATION
    android.widget.FrameLayout mIconFrame -> mIconFrame
    android.widget.ImageView mIn -> mIn
    android.widget.ImageView mOut -> mOut
    android.widget.ImageView mOverlay -> mOverlay
    android.widget.ImageView mSignal -> mSignal
    int mWideOverlayIconStartPadding -> mWideOverlayIconStartPadding
    void <init>(android.content.Context) -> <init>
    android.widget.ImageView addTrafficView(int) -> addTrafficView
    android.view.View createIcon() -> createIcon
    com.android.systemui.qs.tileimpl.SlashImageView createSlashImageView(android.content.Context) -> createSlashImageView
    int getIconMeasureMode() -> getIconMeasureMode
    void layoutIndicator(android.view.View) -> layoutIndicator
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setIcon(com.android.systemui.plugins.qs.QSTile$State) -> setIcon
    void setVisibility(android.view.View,boolean,boolean) -> setVisibility
    void <clinit>() -> <clinit>
android.support.v7.app.MediaRouteControllerDialog$6 -> android.support.v7.app.MediaRouteControllerDialog$6:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    boolean val$animate -> val$animate
    void <init>(android.support.v7.app.MediaRouteControllerDialog,boolean) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.android.systemui.statusbar.phone.TrustDrawable -> com.android.systemui.statusbar.phone.TrustDrawable:
    int mAlpha -> mAlpha
    android.animation.ValueAnimator$AnimatorUpdateListener mAlphaUpdateListener -> mAlphaUpdateListener
    boolean mAnimating -> mAnimating
    int mCurAlpha -> mCurAlpha
    android.animation.Animator mCurAnimator -> mCurAnimator
    float mCurInnerRadius -> mCurInnerRadius
    float mInnerRadiusEnter -> mInnerRadiusEnter
    float mInnerRadiusExit -> mInnerRadiusExit
    float mInnerRadiusVisibleMax -> mInnerRadiusVisibleMax
    float mInnerRadiusVisibleMin -> mInnerRadiusVisibleMin
    android.graphics.Paint mPaint -> mPaint
    android.animation.ValueAnimator$AnimatorUpdateListener mRadiusUpdateListener -> mRadiusUpdateListener
    int mState -> mState
    float mThickness -> mThickness
    boolean mTrustManaged -> mTrustManaged
    android.animation.Animator mVisibleAnimator -> mVisibleAnimator
    void <init>(android.content.Context) -> <init>
    android.animation.ValueAnimator configureAnimator(android.animation.ValueAnimator,long,android.animation.ValueAnimator$AnimatorUpdateListener,android.view.animation.Interpolator,boolean) -> configureAnimator
    void draw(android.graphics.Canvas) -> draw
    int getAlpha() -> getAlpha
    int getOpacity() -> getOpacity
    android.animation.Animator makeAnimators(float,float,int,int,long,android.view.animation.Interpolator,boolean,boolean) -> makeAnimators
    android.animation.Animator makeEnterAnimator(float,int) -> makeEnterAnimator
    android.animation.Animator makeExitAnimator(float,int) -> makeExitAnimator
    android.animation.Animator makeVisibleAnimator() -> makeVisibleAnimator
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setTrustManaged(boolean) -> setTrustManaged
    void start() -> start
    void stop() -> stop
    void updateState(boolean) -> updateState
    int -set0(com.android.systemui.statusbar.phone.TrustDrawable,int) -> -set0
    float -set1(com.android.systemui.statusbar.phone.TrustDrawable,float) -> -set1
    void -wrap0(com.android.systemui.statusbar.phone.TrustDrawable,boolean) -> -wrap0
com.android.systemui.qs.tiles.ColorInversionTile -> com.android.systemui.qs.tiles.ColorInversionTile:
    com.android.systemui.plugins.qs.QSTile$Icon mIcon -> mIcon
    com.android.systemui.qs.SecureSetting mSetting -> mSetting
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleDestroy() -> handleDestroy
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    void handleUserSwitch(int) -> handleUserSwitch
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    void -wrap0(com.android.systemui.qs.tiles.ColorInversionTile,java.lang.Object) -> -wrap0
android.support.v7.widget.AppCompatTextHelper -> android.support.v7.widget.AppCompatTextHelper:
    android.support.v7.widget.TintInfo mDrawableRightTint -> mDrawableRightTint
    android.support.v7.widget.TintInfo mDrawableBottomTint -> mDrawableBottomTint
    int mStyle -> mStyle
    android.graphics.Typeface mFontTypeface -> mFontTypeface
    android.support.v7.widget.TintInfo mDrawableLeftTint -> mDrawableLeftTint
    android.support.v7.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> mAutoSizeTextHelper
    android.support.v7.widget.TintInfo mDrawableTopTint -> mDrawableTopTint
    android.widget.TextView mView -> mView
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    void autoSizeText() -> autoSizeText
    void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo) -> applyCompoundDrawableTint
    void setAllCaps(boolean) -> setAllCaps
    void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int) -> createTintInfo
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void updateTypefaceAndStyle(android.content.Context,android.support.v7.widget.TintTypedArray) -> updateTypefaceAndStyle
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.widget.AppCompatTextHelper create(android.widget.TextView) -> create
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void setTextSizeInternal(int,float) -> setTextSizeInternal
    void setTextSize(int,float) -> setTextSize
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    void <init>(android.widget.TextView) -> <init>
    boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    int getAutoSizeTextType() -> getAutoSizeTextType
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
com.android.keyguard.AlphaOptimizedLinearLayout -> com.android.keyguard.AlphaOptimizedLinearLayout:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
android.support.v7.view.ActionMode -> android.support.v7.view.ActionMode:
    java.lang.Object mTag -> mTag
    boolean mTitleOptionalHint -> mTitleOptionalHint
    void setTag(java.lang.Object) -> setTag
    void setCustomView(android.view.View) -> setCustomView
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.View getCustomView() -> getCustomView
    android.view.Menu getMenu() -> getMenu
    void invalidate() -> invalidate
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void <init>() -> <init>
    void finish() -> finish
    java.lang.Object getTag() -> getTag
com.android.systemui.statusbar.policy.SecurityControllerImpl$1 -> com.android.systemui.statusbar.policy.SecurityControllerImpl$1:
    com.android.systemui.statusbar.policy.SecurityControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.SecurityControllerImpl) -> <init>
    void onAvailable(android.net.Network) -> onAvailable
    void onLost(android.net.Network) -> onLost
com.android.systemui.statusbar.ExpandableNotificationRow$2 -> com.android.systemui.statusbar.ExpandableNotificationRow$2:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.statusbar.ExpandableNotificationRow) -> get
    void setValue(com.android.systemui.statusbar.ExpandableNotificationRow,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.qs.PagedTileLayout$1 -> com.android.systemui.qs.PagedTileLayout$1:
    com.android.systemui.qs.PagedTileLayout this$0 -> this$0
    void <init>(com.android.systemui.qs.PagedTileLayout) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBar -> com.android.systemui.statusbar.phone.StatusBar:
    boolean ENABLE_CHILD_NOTIFICATIONS -> ENABLE_CHILD_NOTIFICATIONS
    android.view.animation.Interpolator ALPHA_IN -> ALPHA_IN
    android.view.animation.Interpolator ALPHA_OUT -> ALPHA_OUT
    boolean ENABLE_LOCK_SCREEN_ALLOW_REMOTE_INPUT -> ENABLE_LOCK_SCREEN_ALLOW_REMOTE_INPUT
    boolean ENABLE_REMOTE_INPUT -> ENABLE_REMOTE_INPUT
    boolean FORCE_REMOTE_INPUT_HISTORY -> FORCE_REMOTE_INPUT_HISTORY
    boolean FREEFORM_WINDOW_MANAGEMENT -> FREEFORM_WINDOW_MANAGEMENT
    boolean ONLY_CORE_APPS -> ONLY_CORE_APPS
    android.media.AudioAttributes VIBRATION_ATTRIBUTES -> VIBRATION_ATTRIBUTES
    com.android.systemui.statusbar.notification.AboveShelfObserver mAboveShelfObserver -> mAboveShelfObserver
    int[] mAbsPos -> mAbsPos
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    android.content.BroadcastReceiver mAllUsersReceiver -> mAllUsersReceiver
    boolean mAllowLockscreenRemoteInput -> mAllowLockscreenRemoteInput
    boolean mAlwaysExpandNonGroupedNotification -> mAlwaysExpandNonGroupedNotification
    android.view.View mAmbientIndicationContainer -> mAmbientIndicationContainer
    java.lang.Runnable mAnimateCollapsePanels -> mAnimateCollapsePanels
    com.android.systemui.assist.AssistManager mAssistManager -> mAssistManager
    java.lang.Runnable mAutoDim -> mAutoDim
    java.lang.Runnable mAutohide -> mAutohide
    boolean mAutohideSuspended -> mAutohideSuspended
    com.android.systemui.statusbar.BackDropView mBackdrop -> mBackdrop
    android.widget.ImageView mBackdropBack -> mBackdropBack
    android.widget.ImageView mBackdropFront -> mBackdropFront
    com.android.internal.statusbar.IStatusBarService mBarService -> mBarService
    android.content.BroadcastReceiver mBaseBroadcastReceiver -> mBaseBroadcastReceiver
    com.android.systemui.statusbar.policy.BatteryController mBatteryController -> mBatteryController
    boolean mBouncerShowing -> mBouncerShowing
    boolean mBouncerWasShowingWhenHidden -> mBouncerWasShowingWhenHidden
    com.android.systemui.statusbar.policy.BrightnessMirrorController mBrightnessMirrorController -> mBrightnessMirrorController
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    long[] mCameraLaunchGestureVibePattern -> mCameraLaunchGestureVibePattern
    java.lang.Runnable mCheckBarModes -> mCheckBarModes
    boolean mClearAllEnabled -> mClearAllEnabled
    com.android.systemui.colorextraction.SysuiColorExtractor mColorExtractor -> mColorExtractor
    com.android.systemui.statusbar.CommandQueue mCommandQueue -> mCommandQueue
    android.graphics.Point mCurrentDisplaySize -> mCurrentDisplaySize
    android.util.SparseArray mCurrentProfiles -> mCurrentProfiles
    int mCurrentUserId -> mCurrentUserId
    android.util.ArraySet mCurrentlyVisibleNotifications -> mCurrentlyVisibleNotifications
    boolean mDemoMode -> mDemoMode
    boolean mDemoModeAllowed -> mDemoModeAllowed
    android.content.BroadcastReceiver mDemoReceiver -> mDemoReceiver
    boolean mDeviceInteractive -> mDeviceInteractive
    android.app.admin.DevicePolicyManager mDevicePolicyManager -> mDevicePolicyManager
    com.android.systemui.statusbar.policy.DeviceProvisionedController mDeviceProvisionedController -> mDeviceProvisionedController
    com.android.systemui.statusbar.policy.DeviceProvisionedController$DeviceProvisionedListener mDeviceProvisionedListener -> mDeviceProvisionedListener
    boolean mDisableNotificationAlerts -> mDisableNotificationAlerts
    int mDisabled1 -> mDisabled1
    int mDisabled2 -> mDisabled2
    int mDisabledUnmodified1 -> mDisabledUnmodified1
    int mDisabledUnmodified2 -> mDisabledUnmodified2
    com.android.systemui.statusbar.DismissView mDismissView -> mDismissView
    android.view.Display mDisplay -> mDisplay
    android.util.DisplayMetrics mDisplayMetrics -> mDisplayMetrics
    com.android.systemui.statusbar.phone.DozeScrimController mDozeScrimController -> mDozeScrimController
    com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost mDozeServiceHost -> mDozeServiceHost
    boolean mDozing -> mDozing
    boolean mDozingRequested -> mDozingRequested
    com.android.systemui.statusbar.ExpandableNotificationRow mDraggedDownRow -> mDraggedDownRow
    com.android.systemui.statusbar.EmptyShadeView mEmptyShadeView -> mEmptyShadeView
    android.view.View mExpandedContents -> mExpandedContents
    boolean mExpandedVisible -> mExpandedVisible
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    com.android.systemui.statusbar.phone.FingerprintUnlockController mFingerprintUnlockController -> mFingerprintUnlockController
    com.android.systemui.ForegroundServiceController mForegroundServiceController -> mForegroundServiceController
    com.android.systemui.statusbar.GestureRecorder mGestureRec -> mGestureRec
    android.os.PowerManager$WakeLock mGestureWakeLock -> mGestureWakeLock
    android.view.View$OnClickListener mGoToLockedShadeListener -> mGoToLockedShadeListener
    com.android.systemui.statusbar.phone.NotificationGroupManager mGroupManager -> mGroupManager
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem mGutsMenuItem -> mGutsMenuItem
    com.android.systemui.statusbar.phone.StatusBar$H mHandler -> mHandler
    android.util.ArraySet mHeadsUpEntriesToRemoveOnSwitch -> mHeadsUpEntriesToRemoveOnSwitch
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    android.database.ContentObserver mHeadsUpObserver -> mHeadsUpObserver
    boolean mHeadsUpTicker -> mHeadsUpTicker
    java.lang.Runnable mHideBackdropFront -> mHideBackdropFront
    boolean mHideIconsForBouncer -> mHideIconsForBouncer
    com.android.systemui.statusbar.phone.StatusBarIconController mIconController -> mIconController
    com.android.systemui.statusbar.phone.PhoneStatusBarPolicy mIconPolicy -> mIconPolicy
    int mInteractingWindows -> mInteractingWindows
    boolean mIsKeyguard -> mIsKeyguard
    boolean mIsOccluded -> mIsOccluded
    java.lang.String mKeyToRemoveOnGutsClosed -> mKeyToRemoveOnGutsClosed
    boolean mKeyguardFadingAway -> mKeyguardFadingAway
    long mKeyguardFadingAwayDelay -> mKeyguardFadingAwayDelay
    long mKeyguardFadingAwayDuration -> mKeyguardFadingAwayDuration
    boolean mKeyguardGoingAway -> mKeyguardGoingAway
    com.android.systemui.statusbar.KeyguardIndicationController mKeyguardIndicationController -> mKeyguardIndicationController
    android.app.KeyguardManager mKeyguardManager -> mKeyguardManager
    com.android.systemui.statusbar.policy.KeyguardMonitorImpl mKeyguardMonitor -> mKeyguardMonitor
    boolean mKeyguardRequested -> mKeyguardRequested
    com.android.systemui.statusbar.phone.KeyguardStatusBarView mKeyguardStatusBar -> mKeyguardStatusBar
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher mKeyguardUserSwitcher -> mKeyguardUserSwitcher
    com.android.keyguard.ViewMediatorCallback mKeyguardViewMediatorCallback -> mKeyguardViewMediatorCallback
    android.util.ArraySet mKeysKeptForRemoteInput -> mKeysKeptForRemoteInput
    int mLastCameraLaunchSource -> mLastCameraLaunchSource
    int mLastDispatchedSystemUiVisibility -> mLastDispatchedSystemUiVisibility
    android.graphics.Rect mLastDockedStackBounds -> mLastDockedStackBounds
    android.graphics.Rect mLastFullscreenStackBounds -> mLastFullscreenStackBounds
    int mLastLoggedStateFingerprint -> mLastLoggedStateFingerprint
    long mLastVisibilityReportUptimeMs -> mLastVisibilityReportUptimeMs
    android.service.notification.NotificationListenerService$RankingMap mLatestRankingMap -> mLatestRankingMap
    boolean mLaunchCameraOnFinishedGoingToSleep -> mLaunchCameraOnFinishedGoingToSleep
    boolean mLaunchCameraOnScreenTurningOn -> mLaunchCameraOnScreenTurningOn
    java.lang.Runnable mLaunchTransitionEndRunnable -> mLaunchTransitionEndRunnable
    boolean mLaunchTransitionFadingAway -> mLaunchTransitionFadingAway
    int mLayoutDirection -> mLayoutDirection
    boolean mLeaveOpenOnKeyguardHide -> mLeaveOpenOnKeyguardHide
    com.android.systemui.statusbar.phone.LightBarController mLightBarController -> mLightBarController
    java.util.Locale mLocale -> mLocale
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    com.android.systemui.statusbar.phone.LockscreenGestureLogger mLockscreenGestureLogger -> mLockscreenGestureLogger
    android.util.SparseBooleanArray mLockscreenPublicMode -> mLockscreenPublicMode
    android.database.ContentObserver mLockscreenSettingsObserver -> mLockscreenSettingsObserver
    com.android.systemui.statusbar.phone.LockscreenWallpaper mLockscreenWallpaper -> mLockscreenWallpaper
    int mMaxAllowedKeyguardNotifications -> mMaxAllowedKeyguardNotifications
    int mMaxKeyguardNotifications -> mMaxKeyguardNotifications
    android.media.session.MediaController mMediaController -> mMediaController
    android.media.session.MediaController$Callback mMediaListener -> mMediaListener
    android.media.MediaMetadata mMediaMetadata -> mMediaMetadata
    java.lang.String mMediaNotificationKey -> mMediaNotificationKey
    android.media.session.MediaSessionManager mMediaSessionManager -> mMediaSessionManager
    com.android.internal.util.NotificationMessagingUtil mMessagingUtil -> mMessagingUtil
    com.android.internal.logging.MetricsLogger mMetricsLogger -> mMetricsLogger
    int mNaturalBarHeight -> mNaturalBarHeight
    com.android.systemui.statusbar.phone.NavigationBarFragment mNavigationBar -> mNavigationBar
    android.view.View mNavigationBarView -> mNavigationBarView
    com.android.systemui.statusbar.policy.NetworkController mNetworkController -> mNetworkController
    boolean mNoAnimationOnNextBarModeChange -> mNoAnimationOnNextBarModeChange
    java.util.Set mNonBlockablePkgs -> mNonBlockablePkgs
    com.android.systemui.statusbar.phone.StatusBar$NotificationClicker mNotificationClicker -> mNotificationClicker
    com.android.systemui.statusbar.NotificationData mNotificationData -> mNotificationData
    com.android.systemui.statusbar.NotificationGuts mNotificationGutsExposed -> mNotificationGutsExposed
    com.android.systemui.statusbar.phone.NotificationIconAreaController mNotificationIconAreaController -> mNotificationIconAreaController
    com.android.systemui.statusbar.phone.NotificationListenerWithPlugins mNotificationListener -> mNotificationListener
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnChildLocationsChangedListener mNotificationLocationsChangedListener -> mNotificationLocationsChangedListener
    com.android.systemui.statusbar.phone.NotificationPanelView mNotificationPanel -> mNotificationPanel
    com.android.systemui.statusbar.NotificationShelf mNotificationShelf -> mNotificationShelf
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnChildLocationsChangedListener mOnChildLocationsChangedListener -> mOnChildLocationsChangedListener
    android.widget.RemoteViews$OnClickHandler mOnClickHandler -> mOnClickHandler
    android.content.om.IOverlayManager mOverlayManager -> mOverlayManager
    boolean mPanelExpanded -> mPanelExpanded
    java.util.HashMap mPendingNotifications -> mPendingNotifications
    android.view.View mPendingRemoteInputView -> mPendingRemoteInputView
    android.view.View mPendingWorkRemoteInputView -> mPendingWorkRemoteInputView
    int mPixelFormat -> mPixelFormat
    java.util.ArrayList mPostCollapseRunnables -> mPostCollapseRunnables
    android.os.PowerManager mPowerManager -> mPowerManager
    com.android.systemui.qs.QSPanel mQSPanel -> mQSPanel
    java.lang.Object mQueueLock -> mQueueLock
    com.android.systemui.RecentsComponent mRecents -> mRecents
    boolean mReinflateNotificationsOnUserSwitched -> mReinflateNotificationsOnUserSwitched
    com.android.systemui.statusbar.RemoteInputController mRemoteInputController -> mRemoteInputController
    android.util.ArraySet mRemoteInputEntriesToRemoveOnCollapse -> mRemoteInputEntriesToRemoveOnCollapse
    android.view.View mReportRejectedTouch -> mReportRejectedTouch
    com.android.systemui.keyguard.ScreenLifecycle mScreenLifecycle -> mScreenLifecycle
    com.android.systemui.keyguard.ScreenLifecycle$Observer mScreenObserver -> mScreenObserver
    com.android.systemui.recents.ScreenPinningRequest mScreenPinningRequest -> mScreenPinningRequest
    com.android.systemui.statusbar.phone.ScrimController mScrimController -> mScrimController
    boolean mScrimSrcModeEnabled -> mScrimSrcModeEnabled
    android.database.ContentObserver mSettingsObserver -> mSettingsObserver
    boolean mShowLockscreenNotifications -> mShowLockscreenNotifications
    android.graphics.PorterDuffXfermode mSrcOverXferMode -> mSrcOverXferMode
    android.graphics.PorterDuffXfermode mSrcXferMode -> mSrcXferMode
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mStackScroller -> mStackScroller
    java.lang.Runnable mStartTracing -> mStartTracing
    int mState -> mState
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager mStatusBarKeyguardViewManager -> mStatusBarKeyguardViewManager
    int mStatusBarMode -> mStatusBarMode
    android.metrics.LogMaker mStatusBarStateLog -> mStatusBarStateLog
    com.android.systemui.statusbar.phone.PhoneStatusBarView mStatusBarView -> mStatusBarView
    com.android.systemui.statusbar.phone.StatusBarWindowView mStatusBarWindow -> mStatusBarWindow
    boolean mStatusBarWindowHidden -> mStatusBarWindowHidden
    com.android.systemui.statusbar.phone.StatusBarWindowManager mStatusBarWindowManager -> mStatusBarWindowManager
    int mStatusBarWindowState -> mStatusBarWindowState
    java.lang.Runnable mStopTracing -> mStopTracing
    com.android.systemui.recents.misc.SystemServicesProxy mSystemServicesProxy -> mSystemServicesProxy
    int mSystemUiVisibility -> mSystemUiVisibility
    java.util.HashMap mTmpChildOrderMap -> mTmpChildOrderMap
    int[] mTmpInt2 -> mTmpInt2
    android.graphics.Rect mTmpRect -> mTmpRect
    boolean mTopHidesStatusBar -> mTopHidesStatusBar
    boolean mTracking -> mTracking
    int mTrackingPosition -> mTrackingPosition
    com.android.systemui.UiOffloadThread mUiOffloadThread -> mUiOffloadThread
    com.android.systemui.statusbar.phone.UnlockMethodCache mUnlockMethodCache -> mUnlockMethodCache
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateCallback -> mUpdateCallback
    boolean mUseHeadsUp -> mUseHeadsUp
    android.os.UserManager mUserManager -> mUserManager
    boolean mUserSetup -> mUserSetup
    com.android.systemui.statusbar.policy.DeviceProvisionedController$DeviceProvisionedListener mUserSetupObserver -> mUserSetupObserver
    com.android.systemui.statusbar.policy.UserSwitcherController mUserSwitcherController -> mUserSwitcherController
    android.util.SparseBooleanArray mUsersAllowingNotifications -> mUsersAllowingNotifications
    android.util.SparseBooleanArray mUsersAllowingPrivateNotifications -> mUsersAllowingPrivateNotifications
    android.os.Vibrator mVibrator -> mVibrator
    java.lang.Runnable mVisibilityReporter -> mVisibilityReporter
    boolean mVisible -> mVisible
    boolean mVisibleToUser -> mVisibleToUser
    com.android.systemui.statusbar.notification.VisualStabilityManager mVisualStabilityManager -> mVisualStabilityManager
    com.android.systemui.volume.VolumeComponent mVolumeComponent -> mVolumeComponent
    boolean mVrMode -> mVrMode
    android.service.vr.IVrStateCallbacks mVrStateCallbacks -> mVrStateCallbacks
    boolean mWaitingForKeyguardExit -> mWaitingForKeyguardExit
    boolean mWakeUpComingFromTouch -> mWakeUpComingFromTouch
    android.graphics.PointF mWakeUpTouchLocation -> mWakeUpTouchLocation
    com.android.systemui.keyguard.WakefulnessLifecycle mWakefulnessLifecycle -> mWakefulnessLifecycle
    com.android.systemui.keyguard.WakefulnessLifecycle$Observer mWakefulnessObserver -> mWakefulnessObserver
    boolean mWereIconsJustHidden -> mWereIconsJustHidden
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.IWindowManager mWindowManagerService -> mWindowManagerService
    int mZenMode -> mZenMode
    void postAnimateCollapsePanels() -> postAnimateCollapsePanels
    void postAnimateForceCollapsePanels() -> postAnimateForceCollapsePanels
    void postAnimateOpenPanels() -> postAnimateOpenPanels
    void updateMediaMetaData(boolean,boolean) -> updateMediaMetaData
    boolean isBouncerShowing() -> isBouncerShowing
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout getNotificationScrollLayout() -> getNotificationScrollLayout
    void makeExpandedInvisible() -> makeExpandedInvisible
    boolean panelsEnabled() -> panelsEnabled
    void makeExpandedVisible(boolean) -> makeExpandedVisible
    boolean interceptTouchEvent(android.view.MotionEvent) -> interceptTouchEvent
    void onTrackingStarted() -> onTrackingStarted
    void onClosingFinished() -> onClosingFinished
    void onTrackingStopped(boolean) -> onTrackingStopped
    com.android.systemui.statusbar.phone.FingerprintUnlockController getFingerprintUnlockController() -> getFingerprintUnlockController
    int getStatusBarHeight() -> getStatusBarHeight
    boolean isTopLevelChild(com.android.systemui.statusbar.NotificationData$Entry) -> isTopLevelChild
    int getWakefulnessState() -> getWakefulnessState
    boolean isDeviceInteractive() -> isDeviceInteractive
    void <init>() -> <init>
    void abortExistingInflation(java.lang.String) -> abortExistingInflation
    void addEntry(com.android.systemui.statusbar.NotificationData$Entry) -> addEntry
    void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> addNotification
    void addNotificationChildrenAndSort() -> addNotificationChildrenAndSort
    void addNotificationViews(com.android.systemui.statusbar.NotificationData$Entry) -> addNotificationViews
    void addPostCollapseAction(java.lang.Runnable) -> addPostCollapseAction
    void addQsTile(android.content.ComponentName) -> addQsTile
    void addStatusBarWindow() -> addStatusBarWindow
    boolean adminAllowsUnredactedNotifications(int) -> adminAllowsUnredactedNotifications
    boolean alertAgain(com.android.systemui.statusbar.NotificationData$Entry,android.app.Notification) -> alertAgain
    void animateCollapsePanels() -> animateCollapsePanels
    void animateCollapsePanels(int) -> animateCollapsePanels
    void animateCollapsePanels(int,boolean) -> animateCollapsePanels
    void animateCollapsePanels(int,boolean,boolean) -> animateCollapsePanels
    void animateCollapsePanels(int,boolean,boolean,float) -> animateCollapsePanels
    void animateCollapseQuickSettings() -> animateCollapseQuickSettings
    void animateExpandNotificationsPanel() -> animateExpandNotificationsPanel
    void animateExpandSettingsPanel(java.lang.String) -> animateExpandSettingsPanel
    void animateKeyguardUnoccluding() -> animateKeyguardUnoccluding
    void appTransitionCancelled() -> appTransitionCancelled
    void appTransitionFinished() -> appTransitionFinished
    boolean areLightsOn() -> areLightsOn
    void awakenDreams() -> awakenDreams
    int barMode(int,int,int,int) -> barMode
    void bindGuts(com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> bindGuts
    void bindRow(com.android.systemui.statusbar.NotificationData$Entry,android.content.pm.PackageManager,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.ExpandableNotificationRow) -> bindRow
    long calculateGoingToFullShadeDelay() -> calculateGoingToFullShadeDelay
    void cancelAutohide() -> cancelAutohide
    void cancelPreloadRecentApps() -> cancelPreloadRecentApps
    void checkBarMode(int,int,com.android.systemui.statusbar.phone.BarTransitions) -> checkBarMode
    void checkBarModes() -> checkBarModes
    void checkRemoteInputOutside(android.view.MotionEvent) -> checkRemoteInputOutside
    void checkUserAutohide(android.view.View,android.view.MotionEvent) -> checkUserAutohide
    void clearAllNotifications() -> clearAllNotifications
    void clearCurrentMediaNotification() -> clearCurrentMediaNotification
    void clearNotificationEffects() -> clearNotificationEffects
    void clickTile(android.content.ComponentName) -> clickTile
    void closeAndSaveGuts(boolean,boolean,boolean,int,int,boolean) -> closeAndSaveGuts
    int computeBarMode(int,int,int,int,int) -> computeBarMode
    int computeStatusBarMode(int,int) -> computeStatusBarMode
    void createAndAddWindows() -> createAndAddWindows
    com.android.systemui.statusbar.phone.StatusBar$H createHandler() -> createHandler
    void createNavigationBar() -> createNavigationBar
    com.android.systemui.statusbar.NotificationData$Entry createNotificationViews(android.service.notification.StatusBarNotification) -> createNotificationViews
    void createUserSwitcher() -> createUserSwitcher
    void disable(int,int,boolean) -> disable
    void dismissKeyboardShortcuts() -> dismissKeyboardShortcuts
    void dismissKeyboardShortcutsMenu() -> dismissKeyboardShortcutsMenu
    void dismissKeyguardThenExecute(com.android.keyguard.KeyguardHostView$OnDismissAction,boolean) -> dismissKeyguardThenExecute
    void dismissKeyguardThenExecute(com.android.keyguard.KeyguardHostView$OnDismissAction,java.lang.Runnable,boolean) -> dismissKeyguardThenExecute
    void dismissVolumeDialog() -> dismissVolumeDialog
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
    void dispatchDemoCommandToView(java.lang.String,android.os.Bundle,int) -> dispatchDemoCommandToView
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dumpBarTransitions(java.io.PrintWriter,java.lang.String,com.android.systemui.statusbar.phone.BarTransitions) -> dumpBarTransitions
    void endAffordanceLaunch() -> endAffordanceLaunch
    void executeRunnableDismissingKeyguard(java.lang.Runnable,java.lang.Runnable,boolean,boolean,boolean) -> executeRunnableDismissingKeyguard
    void fadeKeyguardAfterLaunchTransition(java.lang.Runnable,java.lang.Runnable) -> fadeKeyguardAfterLaunchTransition
    void fadeKeyguardWhilePulsing() -> fadeKeyguardWhilePulsing
    void findAndUpdateMediaNotifications() -> findAndUpdateMediaNotifications
    void finishBarAnimations() -> finishBarAnimations
    void finishKeyguardFadingAway() -> finishKeyguardFadingAway
    android.os.Bundle getActivityOptions() -> getActivityOptions
    android.view.View getAmbientIndicationContainer() -> getAmbientIndicationContainer
    int getBarState() -> getBarState
    android.view.ViewGroup getBouncerContainer() -> getBouncerContainer
    java.lang.String getCurrentMediaNotificationKey() -> getCurrentMediaNotificationKey
    float getDisplayDensity() -> getDisplayDensity
    com.android.systemui.statusbar.NotificationGuts getExposedGuts() -> getExposedGuts
    com.android.systemui.statusbar.GestureRecorder getGestureRecorder() -> getGestureRecorder
    com.android.systemui.statusbar.phone.NotificationGroupManager getGroupManager() -> getGroupManager
    long getKeyguardFadingAwayDelay() -> getKeyguardFadingAwayDelay
    long getKeyguardFadingAwayDuration() -> getKeyguardFadingAwayDuration
    int getLoggingFingerprint(int,boolean,boolean,boolean,boolean,boolean) -> getLoggingFingerprint
    int getMaxKeyguardNotifications() -> getMaxKeyguardNotifications
    int getMaxKeyguardNotifications(boolean) -> getMaxKeyguardNotifications
    int getMediaControllerPlaybackState(android.media.session.MediaController) -> getMediaControllerPlaybackState
    com.android.systemui.statusbar.phone.NavigationBarView getNavigationBarView() -> getNavigationBarView
    com.android.systemui.SwipeHelper$LongPressListener getNotificationLongClicker() -> getNotificationLongClicker
    android.content.pm.PackageManager getPackageManagerForUser(android.content.Context,int) -> getPackageManagerForUser
    com.android.systemui.statusbar.phone.BarTransitions getStatusBarTransitions() -> getStatusBarTransitions
    android.view.View getStatusBarView() -> getStatusBarView
    com.android.systemui.statusbar.phone.StatusBarWindowView getStatusBarWindow() -> getStatusBarWindow
    android.view.View$OnTouchListener getStatusBarWindowTouchListener() -> getStatusBarWindowTouchListener
    void goToKeyguard() -> goToKeyguard
    void goToLockedShade(android.view.View) -> goToLockedShade
    void handleGroupSummaryRemoved(java.lang.String,android.service.notification.NotificationListenerService$RankingMap) -> handleGroupSummaryRemoved
    void handleInflationException(android.service.notification.StatusBarNotification,java.lang.Exception) -> handleInflationException
    void handleNotificationError(android.service.notification.StatusBarNotification,java.lang.String) -> handleNotificationError
    void handlePeekToExpandTransistion() -> handlePeekToExpandTransistion
    void handleStartActivityDismissingKeyguard(android.content.Intent,boolean) -> handleStartActivityDismissingKeyguard
    void handleSystemKey(int) -> handleSystemKey
    void handleVisibleToUserChanged(boolean) -> handleVisibleToUserChanged
    void handleVisibleToUserChangedImpl(boolean) -> handleVisibleToUserChangedImpl
    boolean hasActiveClearableNotifications() -> hasActiveClearableNotifications
    boolean hasActiveNotifications() -> hasActiveNotifications
    boolean hideKeyguard() -> hideKeyguard
    boolean hideKeyguardImpl() -> hideKeyguardImpl
    boolean hideStatusBarIconsForBouncer() -> hideStatusBarIconsForBouncer
    boolean hideStatusBarIconsWhenExpanded() -> hideStatusBarIconsWhenExpanded
    void inflateDismissView() -> inflateDismissView
    void inflateEmptyShadeView() -> inflateEmptyShadeView
    void inflateShelf() -> inflateShelf
    void inflateSignalClusters() -> inflateSignalClusters
    void inflateStatusBarWindow(android.content.Context) -> inflateStatusBarWindow
    void inflateViews(com.android.systemui.statusbar.NotificationData$Entry,android.view.ViewGroup) -> inflateViews
    void instantCollapseNotificationPanel() -> instantCollapseNotificationPanel
    void instantExpandNotificationsPanel() -> instantExpandNotificationsPanel
    boolean interceptMediaKey(android.view.KeyEvent) -> interceptMediaKey
    boolean isAnyProfilePublicMode() -> isAnyProfilePublicMode
    boolean isCameraAllowedByAdmin() -> isCameraAllowedByAdmin
    boolean isCollapsing() -> isCollapsing
    boolean isCurrentProfile(int) -> isCurrentProfile
    boolean isDeviceInVrMode() -> isDeviceInVrMode
    boolean isDeviceProvisioned() -> isDeviceProvisioned
    boolean isDozing() -> isDozing
    boolean isFalsingCheckNeeded() -> isFalsingCheckNeeded
    boolean isFalsingThresholdNeeded() -> isFalsingThresholdNeeded
    boolean isGoingToNotificationShade() -> isGoingToNotificationShade
    boolean isGoingToSleep() -> isGoingToSleep
    boolean isHeadsUp(java.lang.String) -> isHeadsUp
    boolean isInLaunchTransition() -> isInLaunchTransition
    boolean isKeyguardCurrentlySecure() -> isKeyguardCurrentlySecure
    boolean isKeyguardFadingAway() -> isKeyguardFadingAway
    boolean isKeyguardSecure() -> isKeyguardSecure
    boolean isKeyguardShowing() -> isKeyguardShowing
    boolean isLaunchTransitionFadingAway() -> isLaunchTransitionFadingAway
    boolean isLockscreenPublicMode(int) -> isLockscreenPublicMode
    boolean isMediaNotification(com.android.systemui.statusbar.NotificationData$Entry) -> isMediaNotification
    boolean isNotificationForCurrentProfiles(android.service.notification.StatusBarNotification) -> isNotificationForCurrentProfiles
    boolean isPanelFullyCollapsed() -> isPanelFullyCollapsed
    boolean isPlaybackActive(int) -> isPlaybackActive
    boolean isPulsing() -> isPulsing
    boolean isScreenFullyOff() -> isScreenFullyOff
    boolean isScreenTurningOnOrOn() -> isScreenTurningOnOrOn
    boolean isScrimSrcModeEnabled() -> isScrimSrcModeEnabled
    boolean isSecurelyLocked(int) -> isSecurelyLocked
    boolean isSnoozedPackage(android.service.notification.StatusBarNotification) -> isSnoozedPackage
    boolean isUsingDarkTheme() -> isUsingDarkTheme
    boolean isWakeUpComingFromTouch() -> isWakeUpComingFromTouch
    void keyguardGoingAway() -> keyguardGoingAway
    void loadDimens() -> loadDimens
    void logNotificationExpansion(java.lang.String,boolean,boolean) -> logNotificationExpansion
    void logNotificationVisibilityChanges(java.util.Collection,java.util.Collection) -> logNotificationVisibilityChanges
    void logStateToEventlog() -> logStateToEventlog
    void makeStatusBarView() -> makeStatusBarView
    void maybeEscalateHeadsUp() -> maybeEscalateHeadsUp
    void maybePrepareWakeUpFromAod() -> maybePrepareWakeUpFromAod
    boolean needsRedaction(com.android.systemui.statusbar.NotificationData$Entry) -> needsRedaction
    void notifyFpAuthModeChanged() -> notifyFpAuthModeChanged
    void notifyHeadsUpGoingToSleep() -> notifyHeadsUpGoingToSleep
    void notifyUiVisibilityChanged(int) -> notifyUiVisibilityChanged
    void notifyUserAboutHiddenNotifications() -> notifyUserAboutHiddenNotifications
    void onActivated(com.android.systemui.statusbar.ActivatableNotificationView) -> onActivated
    void onActivated(android.view.View) -> onActivated
    void onActivationReset(com.android.systemui.statusbar.ActivatableNotificationView) -> onActivationReset
    void onActivationReset(android.view.View) -> onActivationReset
    void onAsyncInflationFinished(com.android.systemui.statusbar.NotificationData$Entry) -> onAsyncInflationFinished
    boolean onBackPressed() -> onBackPressed
    void onCameraHintStarted() -> onCameraHintStarted
    void onCameraLaunchGestureDetected(int) -> onCameraLaunchGestureDetected
    void onColorsChanged(com.android.internal.colorextraction.ColorExtractor,int) -> onColorsChanged
    void onConfigChanged(android.content.res.Configuration) -> onConfigChanged
    void onCrossedThreshold(boolean) -> onCrossedThreshold
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onDragDownReset() -> onDragDownReset
    boolean onDraggedDown(android.view.View,int) -> onDraggedDown
    void onExpandClicked(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> onExpandClicked
    void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpPinned
    void onHeadsUpPinnedModeChanged(boolean) -> onHeadsUpPinnedModeChanged
    void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> onHeadsUpStateChanged
    void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpUnPinned
    void onHintFinished() -> onHintFinished
    void onKeyguardViewManagerStatesUpdated() -> onKeyguardViewManagerStatesUpdated
    void onLaunchTransitionFadingEnded() -> onLaunchTransitionFadingEnded
    void onLaunchTransitionTimeout() -> onLaunchTransitionTimeout
    void onLockedNotificationImportanceChange(com.android.keyguard.KeyguardHostView$OnDismissAction) -> onLockedNotificationImportanceChange
    void onLockedRemoteInput(com.android.systemui.statusbar.ExpandableNotificationRow,android.view.View) -> onLockedRemoteInput
    void onLockedWorkRemoteInput(int,com.android.systemui.statusbar.ExpandableNotificationRow,android.view.View) -> onLockedWorkRemoteInput
    void onMakeExpandedVisibleForRemoteInput(com.android.systemui.statusbar.ExpandableNotificationRow,android.view.View) -> onMakeExpandedVisibleForRemoteInput
    boolean onMenuPressed() -> onMenuPressed
    void onPanelLaidOut() -> onPanelLaidOut
    void onPhoneHintStarted() -> onPhoneHintStarted
    void onReorderingAllowed() -> onReorderingAllowed
    boolean onSpacePressed() -> onSpacePressed
    void onTouchSlopExceeded() -> onTouchSlopExceeded
    void onUnlockHintStarted() -> onUnlockHintStarted
    void onUnlockMethodStateChanged() -> onUnlockMethodStateChanged
    void onVoiceAssistHintStarted() -> onVoiceAssistHintStarted
    void onWorkChallengeChanged() -> onWorkChallengeChanged
    boolean packageHasVisibilityOverride(java.lang.String) -> packageHasVisibilityOverride
    void performDismissAllAnimations(java.util.ArrayList) -> performDismissAllAnimations
    void performRemoveNotification(android.service.notification.StatusBarNotification) -> performRemoveNotification
    void postQSRunnableDismissingKeyguard(java.lang.Runnable) -> postQSRunnableDismissingKeyguard
    void postStartActivityDismissingKeyguard(android.app.PendingIntent) -> postStartActivityDismissingKeyguard
    void postStartActivityDismissingKeyguard(android.content.Intent,int) -> postStartActivityDismissingKeyguard
    void preloadRecentApps() -> preloadRecentApps
    void processForRemoteInput(android.app.Notification) -> processForRemoteInput
    void readyForKeyguardDone() -> readyForKeyguardDone
    void recomputeDisableFlags(boolean) -> recomputeDisableFlags
    void recycleAllVisibilityObjects(android.util.ArraySet) -> recycleAllVisibilityObjects
    void reevaluateStyles() -> reevaluateStyles
    com.android.systemui.statusbar.SignalClusterView reinflateSignalCluster(android.view.View) -> reinflateSignalCluster
    void reinflateViews() -> reinflateViews
    void releaseGestureWakeLock() -> releaseGestureWakeLock
    void remQsTile(android.content.ComponentName) -> remQsTile
    void removeNotification(java.lang.String,android.service.notification.NotificationListenerService$RankingMap) -> removeNotification
    void removeNotificationChildren() -> removeNotificationChildren
    android.service.notification.StatusBarNotification removeNotificationViews(java.lang.String,android.service.notification.NotificationListenerService$RankingMap) -> removeNotificationViews
    void removeRemoteInputEntriesKeptUntilCollapsed() -> removeRemoteInputEntriesKeptUntilCollapsed
    void requestNotificationUpdate() -> requestNotificationUpdate
    void resetUserExpandedStates() -> resetUserExpandedStates
    void resumeSuspendedAutohide() -> resumeSuspendedAutohide
    void runLaunchTransitionEndRunnable() -> runLaunchTransitionEndRunnable
    void runPostCollapseRunnables() -> runPostCollapseRunnables
    boolean sameSessions(android.media.session.MediaController,android.media.session.MediaController) -> sameSessions
    void saveAndCloseNotificationMenu(com.android.systemui.statusbar.NotificationInfo,com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.statusbar.NotificationGuts,android.view.View) -> saveAndCloseNotificationMenu
    void scheduleAutohide() -> scheduleAutohide
    void setAreThereNotifications() -> setAreThereNotifications
    void setBarState(int) -> setBarState
    void setBouncerShowing(boolean) -> setBouncerShowing
    void setEmptyDragAmount(float) -> setEmptyDragAmount
    void setHeadsUpUser(int) -> setHeadsUpUser
    void setInteracting(int,boolean) -> setInteracting
    void setKeyguardFadingAway(long,long,long) -> setKeyguardFadingAway
    void setLightsOn(boolean) -> setLightsOn
    void setLockScreenAllowRemoteInput(boolean) -> setLockScreenAllowRemoteInput
    void setLockscreenPublicMode(boolean,int) -> setLockscreenPublicMode
    void setLockscreenUser(int) -> setLockscreenUser
    void setNotificationShown(android.service.notification.StatusBarNotification) -> setNotificationShown
    void setNotificationSnoozed(android.service.notification.StatusBarNotification,com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption) -> setNotificationSnoozed
    void setNotificationsShown(java.lang.String[]) -> setNotificationsShown
    void setOccluded(boolean) -> setOccluded
    void setPanelExpanded(boolean) -> setPanelExpanded
    void setQsExpanded(boolean) -> setQsExpanded
    void setQsScrimEnabled(boolean) -> setQsScrimEnabled
    void setShowLockscreenNotifications(boolean) -> setShowLockscreenNotifications
    void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect) -> setSystemUiVisibility
    void setTopAppHidesStatusBar(boolean) -> setTopAppHidesStatusBar
    void setWindowState(int,int) -> setWindowState
    void setZenMode(int) -> setZenMode
    boolean shouldHideNotifications(int) -> shouldHideNotifications
    boolean shouldHideNotifications(java.lang.String) -> shouldHideNotifications
    boolean shouldIgnoreTouch() -> shouldIgnoreTouch
    boolean shouldPeek(com.android.systemui.statusbar.NotificationData$Entry) -> shouldPeek
    boolean shouldPeek(com.android.systemui.statusbar.NotificationData$Entry,android.service.notification.StatusBarNotification) -> shouldPeek
    boolean shouldShowOnKeyguard(android.service.notification.StatusBarNotification) -> shouldShowOnKeyguard
    boolean shouldSuppressFullScreenIntent(java.lang.String) -> shouldSuppressFullScreenIntent
    boolean shouldUnlockOnMenuPressed() -> shouldUnlockOnMenuPressed
    void showAssistDisclosure() -> showAssistDisclosure
    void showBouncer() -> showBouncer
    void showBouncerIfKeyguard() -> showBouncerIfKeyguard
    void showKeyguard() -> showKeyguard
    void showKeyguardImpl() -> showKeyguardImpl
    void showScreenPinningRequest(int) -> showScreenPinningRequest
    void showScreenPinningRequest(int,boolean) -> showScreenPinningRequest
    void start() -> start
    void startActivity(android.content.Intent,boolean) -> startActivity
    void startActivity(android.content.Intent,boolean,boolean) -> startActivity
    void startActivity(android.content.Intent,boolean,com.android.systemui.plugins.ActivityStarter$Callback) -> startActivity
    void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean) -> startActivityDismissingKeyguard
    void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean,boolean,com.android.systemui.plugins.ActivityStarter$Callback) -> startActivityDismissingKeyguard
    void startAppNotificationSettingsActivity(java.lang.String,int,android.app.NotificationChannel) -> startAppNotificationSettingsActivity
    void startAssist(android.os.Bundle) -> startAssist
    void startKeyguard() -> startKeyguard
    void startLaunchTransitionTimeout() -> startLaunchTransitionTimeout
    void startNotificationGutsIntent(android.content.Intent,int) -> startNotificationGutsIntent
    void startNotificationLogging() -> startNotificationLogging
    void startPendingIntentDismissingKeyguard(android.app.PendingIntent) -> startPendingIntentDismissingKeyguard
    boolean startWorkChallengeIfNecessary(int,android.content.IntentSender,java.lang.String) -> startWorkChallengeIfNecessary
    void stopNotificationLogging() -> stopNotificationLogging
    void stopWaitingForKeyguardExit() -> stopWaitingForKeyguardExit
    void suspendAutohide() -> suspendAutohide
    void toggleKeyboardShortcuts(int) -> toggleKeyboardShortcuts
    void toggleKeyboardShortcutsMenu(int) -> toggleKeyboardShortcutsMenu
    void togglePanel() -> togglePanel
    void toggleSplitScreen() -> toggleSplitScreen
    boolean toggleSplitScreenMode(int,int) -> toggleSplitScreenMode
    void topAppWindowChanged(boolean) -> topAppWindowChanged
    void touchAutoDim() -> touchAutoDim
    void touchAutoHide() -> touchAutoHide
    void updateClearAll() -> updateClearAll
    void updateCurrentProfilesCache() -> updateCurrentProfilesCache
    void updateDisplaySize() -> updateDisplaySize
    void updateDozing() -> updateDozing
    void updateDozingState() -> updateDozingState
    void updateEmptyShadeView() -> updateEmptyShadeView
    void updateHeadsUp(java.lang.String,com.android.systemui.statusbar.NotificationData$Entry,boolean,boolean) -> updateHeadsUp
    void updateHideIconsForBouncer(boolean) -> updateHideIconsForBouncer
    boolean updateIsKeyguard() -> updateIsKeyguard
    void updateKeyguardMaxNotifications() -> updateKeyguardMaxNotifications
    void updateKeyguardState(boolean,boolean) -> updateKeyguardState
    void updateLockscreenNotificationSetting() -> updateLockscreenNotificationSetting
    void updateNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> updateNotification
    void updateNotification(com.android.systemui.statusbar.NotificationData$Entry,android.content.pm.PackageManager,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.ExpandableNotificationRow) -> updateNotification
    void updateNotificationRanking(android.service.notification.NotificationListenerService$RankingMap) -> updateNotificationRanking
    void updateNotificationShade() -> updateNotificationShade
    void updateNotifications() -> updateNotifications
    void updateNotificationsOnDensityOrFontScaleChanged() -> updateNotificationsOnDensityOrFontScaleChanged
    void updatePanelExpansionForKeyguard() -> updatePanelExpansionForKeyguard
    void updatePublicMode() -> updatePublicMode
    void updateQsExpansionEnabled() -> updateQsExpansionEnabled
    void updateReportRejectedTouchVisibility() -> updateReportRejectedTouchVisibility
    void updateResources() -> updateResources
    void updateRowStates() -> updateRowStates
    void updateSpeedBumpIndex() -> updateSpeedBumpIndex
    void updateStackScrollerState(boolean,boolean) -> updateStackScrollerState
    void updateTheme() -> updateTheme
    void updateVisibleToUser() -> updateVisibleToUser
    void userActivity() -> userActivity
    boolean userAllowsNotificationsInPublic(int) -> userAllowsNotificationsInPublic
    boolean userAllowsPrivateNotificationsInPublic(int) -> userAllowsPrivateNotificationsInPublic
    void userAutohide() -> userAutohide
    void userSwitched(int) -> userSwitched
    void vibrate() -> vibrate
    void vibrateForCameraGesture() -> vibrateForCameraGesture
    java.lang.String viewInfo(android.view.View) -> viewInfo
    void visibilityChanged(boolean) -> visibilityChanged
    void wakeUpIfDozing(long,android.view.View) -> wakeUpIfDozing
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_25350() -> lambda$-com_android_systemui_statusbar_phone_StatusBar_25350
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_34582(android.view.View) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_34582
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_319006() -> lambda$-com_android_systemui_statusbar_phone_StatusBar_319006
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_46850(java.lang.String,android.app.Fragment) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_46850
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_51810(java.lang.Boolean) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_51810
    com.android.systemui.plugins.qs.QS lambda$-com_android_systemui_statusbar_phone_StatusBar_53548() -> lambda$-com_android_systemui_statusbar_phone_StatusBar_53548
    com.android.systemui.plugins.qs.QS lambda$-com_android_systemui_statusbar_phone_StatusBar_53616() -> lambda$-com_android_systemui_statusbar_phone_StatusBar_53616
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_54000(com.android.systemui.qs.QSTileHost,java.lang.String,android.app.Fragment) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_54000
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_54631(android.view.View) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_54631
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_57922(java.lang.String,android.app.Fragment) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_57922
    boolean lambda$-com_android_systemui_statusbar_phone_StatusBar_58484(android.view.View,android.view.MotionEvent) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_58484
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_128482() -> lambda$-com_android_systemui_statusbar_phone_StatusBar_128482
    boolean lambda$-com_android_systemui_statusbar_phone_StatusBar_160825(java.lang.Runnable,boolean,boolean) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_160825
    void -com_android_systemui_statusbar_phone_StatusBar-mthref-0() -> -com_android_systemui_statusbar_phone_StatusBar-mthref-0
    void -com_android_systemui_statusbar_phone_StatusBar-mthref-1(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> -com_android_systemui_statusbar_phone_StatusBar-mthref-1
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_176096(java.lang.Runnable) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_176096
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_176195(java.lang.Runnable) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_176195
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_176411(android.app.PendingIntent) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_176411
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_176600(android.content.Intent) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_176600
    void -com_android_systemui_statusbar_phone_StatusBar-mthref-2(android.view.View) -> -com_android_systemui_statusbar_phone_StatusBar-mthref-2
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_266981(com.android.systemui.statusbar.ExpandableNotificationRow,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.NotificationGuts) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_266981
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_267982(com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.statusbar.NotificationGuts) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_267982
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_268988(com.android.systemui.statusbar.NotificationGuts,java.lang.String,android.view.View,android.app.NotificationChannel,int) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_268988
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_269359(com.android.systemui.statusbar.NotificationGuts,android.service.notification.StatusBarNotification,android.view.View,android.content.Intent) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_269359
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_269663(com.android.systemui.statusbar.NotificationInfo,com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.statusbar.NotificationGuts,android.view.View) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_269663
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_269851(android.os.UserHandle,java.lang.Runnable) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_269851
    boolean lambda$-com_android_systemui_statusbar_phone_StatusBar_270244(java.lang.Runnable) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_270244
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_285100(com.android.systemui.statusbar.NotificationData$Entry,android.content.pm.PackageManager,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.ExpandableNotificationRow) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_285100
    boolean -com_android_systemui_statusbar_phone_StatusBar-mthref-3() -> -com_android_systemui_statusbar_phone_StatusBar-mthref-3
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_286781(com.android.systemui.statusbar.ExpandableNotificationRow) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_286781
    void lambda$-com_android_systemui_statusbar_phone_StatusBar_317774(java.lang.String,boolean,boolean) -> lambda$-com_android_systemui_statusbar_phone_StatusBar_317774
    android.view.View -get0(com.android.systemui.statusbar.phone.StatusBar) -> -get0
    com.android.systemui.statusbar.policy.BatteryController -get1(com.android.systemui.statusbar.phone.StatusBar) -> -get1
    java.lang.Runnable -get2(com.android.systemui.statusbar.phone.StatusBar) -> -get2
    android.util.ArraySet -get3(com.android.systemui.statusbar.phone.StatusBar) -> -get3
    com.android.systemui.statusbar.policy.DeviceProvisionedController -get4(com.android.systemui.statusbar.phone.StatusBar) -> -get4
    com.android.systemui.statusbar.phone.StatusBar$DozeServiceHost -get5(com.android.systemui.statusbar.phone.StatusBar) -> -get5
    boolean -get6(com.android.systemui.statusbar.phone.StatusBar) -> -get6
    com.android.systemui.classifier.FalsingManager -get7(com.android.systemui.statusbar.phone.StatusBar) -> -get7
    int -get8(com.android.systemui.statusbar.phone.StatusBar) -> -get8
    long -get9(com.android.systemui.statusbar.phone.StatusBar) -> -get9
    boolean -get10(com.android.systemui.statusbar.phone.StatusBar) -> -get10
    boolean -get11(com.android.systemui.statusbar.phone.StatusBar) -> -get11
    com.android.internal.widget.LockPatternUtils -get12(com.android.systemui.statusbar.phone.StatusBar) -> -get12
    com.android.internal.logging.MetricsLogger -get13(com.android.systemui.statusbar.phone.StatusBar) -> -get13
    android.view.View -get14(com.android.systemui.statusbar.phone.StatusBar) -> -get14
    com.android.systemui.qs.QSPanel -get15(com.android.systemui.statusbar.phone.StatusBar) -> -get15
    int[] -get16(com.android.systemui.statusbar.phone.StatusBar) -> -get16
    android.os.UserManager -get17(com.android.systemui.statusbar.phone.StatusBar) -> -get17
    boolean -get18(com.android.systemui.statusbar.phone.StatusBar) -> -get18
    android.util.SparseBooleanArray -get19(com.android.systemui.statusbar.phone.StatusBar) -> -get19
    android.util.SparseBooleanArray -get20(com.android.systemui.statusbar.phone.StatusBar) -> -get20
    boolean -set0(com.android.systemui.statusbar.phone.StatusBar,boolean) -> -set0
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem -set1(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> -set1
    long -set2(com.android.systemui.statusbar.phone.StatusBar,long) -> -set2
    boolean -set3(com.android.systemui.statusbar.phone.StatusBar,boolean) -> -set3
    boolean -set4(com.android.systemui.statusbar.phone.StatusBar,boolean) -> -set4
    android.media.MediaMetadata -set5(com.android.systemui.statusbar.phone.StatusBar,android.media.MediaMetadata) -> -set5
    com.android.systemui.statusbar.NotificationGuts -set6(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.NotificationGuts) -> -set6
    android.view.View -set7(com.android.systemui.statusbar.phone.StatusBar,android.view.View) -> -set7
    boolean -set8(com.android.systemui.statusbar.phone.StatusBar,boolean) -> -set8
    boolean -set9(com.android.systemui.statusbar.phone.StatusBar,boolean) -> -set9
    android.graphics.PointF -set10(com.android.systemui.statusbar.phone.StatusBar,android.graphics.PointF) -> -set10
    boolean -wrap0(com.android.systemui.statusbar.phone.StatusBar,int) -> -wrap0
    boolean -wrap1(com.android.systemui.statusbar.phone.StatusBar) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.phone.StatusBar) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.phone.StatusBar) -> -wrap4
    void -wrap5(com.android.systemui.statusbar.phone.StatusBar) -> -wrap5
    void -wrap6(com.android.systemui.statusbar.phone.StatusBar,java.util.Collection,java.util.Collection) -> -wrap6
    void -wrap7(com.android.systemui.statusbar.phone.StatusBar) -> -wrap7
    void -wrap8(com.android.systemui.statusbar.phone.StatusBar) -> -wrap8
    void -wrap9(com.android.systemui.statusbar.phone.StatusBar) -> -wrap9
    void -wrap10(com.android.systemui.statusbar.phone.StatusBar,android.app.Notification) -> -wrap10
    void -wrap11(com.android.systemui.statusbar.phone.StatusBar,android.util.ArraySet) -> -wrap11
    void -wrap12(com.android.systemui.statusbar.phone.StatusBar) -> -wrap12
    void -wrap13(com.android.systemui.statusbar.phone.StatusBar) -> -wrap13
    void -wrap14(com.android.systemui.statusbar.phone.StatusBar) -> -wrap14
    void -wrap15(com.android.systemui.statusbar.phone.StatusBar) -> -wrap15
    void -wrap16(com.android.systemui.statusbar.phone.StatusBar) -> -wrap16
    void -wrap17(com.android.systemui.statusbar.phone.StatusBar) -> -wrap17
    void -wrap18(com.android.systemui.statusbar.phone.StatusBar) -> -wrap18
com.android.systemui.settings.-$Lambda$FaG6AZuqWY7sry7WN_4FSvFXOuY -> com.android.systemui.settings.-$Lambda$FaG6AZuqWY7sry7WN_4FSvFXOuY:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.keyguard.KeyguardUpdateMonitor$SimData -> com.android.keyguard.KeyguardUpdateMonitor$SimData:
    com.android.internal.telephony.IccCardConstants$State simState -> simState
    int slotId -> slotId
    int subId -> subId
    void <init>(com.android.internal.telephony.IccCardConstants$State,int,int) -> <init>
    com.android.keyguard.KeyguardUpdateMonitor$SimData fromIntent(android.content.Intent) -> fromIntent
    java.lang.String toString() -> toString
com.android.systemui.statusbar.phone.ReverseLinearLayout$Reversable -> com.android.systemui.statusbar.phone.ReverseLinearLayout$Reversable:
    void reverse() -> reverse
com.android.systemui.recents.model.TaskStack$DockState -> com.android.systemui.recents.model.TaskStack$DockState:
    com.android.systemui.recents.model.TaskStack$DockState BOTTOM -> BOTTOM
    com.android.systemui.recents.model.TaskStack$DockState LEFT -> LEFT
    com.android.systemui.recents.model.TaskStack$DockState NONE -> NONE
    com.android.systemui.recents.model.TaskStack$DockState RIGHT -> RIGHT
    com.android.systemui.recents.model.TaskStack$DockState TOP -> TOP
    int createMode -> createMode
    android.graphics.RectF dockArea -> dockArea
    int dockSide -> dockSide
    android.graphics.RectF expandedTouchDockArea -> expandedTouchDockArea
    android.graphics.Rect mTmpRect -> mTmpRect
    android.graphics.RectF touchArea -> touchArea
    com.android.systemui.recents.model.TaskStack$DockState$ViewState viewState -> viewState
    void update(android.content.Context) -> update
    void <init>(int,int,int,int,int,android.graphics.RectF,android.graphics.RectF,android.graphics.RectF) -> <init>
    boolean acceptsDrop(int,int,int,int,android.graphics.Rect,boolean) -> acceptsDrop
    android.graphics.Rect getDockedBounds(int,int,int,android.graphics.Rect,android.content.res.Resources) -> getDockedBounds
    android.graphics.Rect getDockedTaskStackBounds(android.graphics.Rect,int,int,int,android.graphics.Rect,com.android.systemui.recents.views.TaskStackLayoutAlgorithm,android.content.res.Resources,android.graphics.Rect) -> getDockedTaskStackBounds
    void getMappedRect(android.graphics.RectF,int,int,android.graphics.Rect) -> getMappedRect
    android.graphics.Rect getPreDockedBounds(int,int,android.graphics.Rect) -> getPreDockedBounds
    android.graphics.Rect updateBoundsWithSystemInsets(android.graphics.Rect,android.graphics.Rect) -> updateBoundsWithSystemInsets
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.phone.-$Lambda$Qa_0r0Wgvb30yriIJPTwPtXGSyk -> com.android.systemui.statusbar.phone.-$Lambda$Qa_0r0Wgvb30yriIJPTwPtXGSyk:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.policy.BluetoothControllerImpl -> com.android.systemui.statusbar.policy.BluetoothControllerImpl:
    boolean DEBUG -> DEBUG
    android.os.Handler mBgHandler -> mBgHandler
    java.util.WeakHashMap mCachedState -> mCachedState
    int mConnectionState -> mConnectionState
    int mCurrentUser -> mCurrentUser
    boolean mEnabled -> mEnabled
    com.android.systemui.statusbar.policy.BluetoothControllerImpl$H mHandler -> mHandler
    com.android.settingslib.bluetooth.CachedBluetoothDevice mLastDevice -> mLastDevice
    com.android.settingslib.bluetooth.LocalBluetoothManager mLocalBluetoothManager -> mLocalBluetoothManager
    int mState -> mState
    android.os.UserManager mUserManager -> mUserManager
    void <init>(android.content.Context,android.os.Looper) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.BluetoothController$Callback) -> addCallback
    boolean canConfigBluetooth() -> canConfigBluetooth
    void connect(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> connect
    void disconnect(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> disconnect
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    int getBluetoothState() -> getBluetoothState
    int getBondState(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> getBondState
    com.android.systemui.statusbar.policy.BluetoothControllerImpl$ActuallyCachedState getCachedState(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> getCachedState
    java.lang.String getDeviceString(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> getDeviceString
    java.util.Collection getDevices() -> getDevices
    com.android.settingslib.bluetooth.CachedBluetoothDevice getLastDevice() -> getLastDevice
    java.lang.String getLastDeviceName() -> getLastDeviceName
    boolean isBluetoothConnected() -> isBluetoothConnected
    boolean isBluetoothConnecting() -> isBluetoothConnecting
    boolean isBluetoothEnabled() -> isBluetoothEnabled
    boolean isBluetoothSupported() -> isBluetoothSupported
    void onBluetoothStateChanged(int) -> onBluetoothStateChanged
    void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> onConnectionStateChanged
    void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> onDeviceAdded
    void onDeviceAttributesChanged() -> onDeviceAttributesChanged
    void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> onDeviceBondStateChanged
    void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> onDeviceDeleted
    void onScanningStateChanged(boolean) -> onScanningStateChanged
    void removeCallback(com.android.systemui.statusbar.policy.BluetoothController$Callback) -> removeCallback
    void setBluetoothEnabled(boolean) -> setBluetoothEnabled
    java.lang.String stateToString(int) -> stateToString
    void updateConnected() -> updateConnected
    void <clinit>() -> <clinit>
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    boolean -get0(com.android.systemui.statusbar.policy.BluetoothControllerImpl) -> -get0
com.android.systemui.recents.events.activity.HideRecentsEvent -> com.android.systemui.recents.events.activity.HideRecentsEvent:
    boolean triggeredFromAltTab -> triggeredFromAltTab
    boolean triggeredFromHomeKey -> triggeredFromHomeKey
    void <init>(boolean,boolean) -> <init>
android.arch.lifecycle.LifecycleRegistry$1 -> android.arch.lifecycle.LifecycleRegistry$1:
    int[] $SwitchMap$android$arch$lifecycle$Lifecycle$Event -> $SwitchMap$android$arch$lifecycle$Lifecycle$Event
    int[] $SwitchMap$android$arch$lifecycle$Lifecycle$State -> $SwitchMap$android$arch$lifecycle$Lifecycle$State
    void <clinit>() -> <clinit>
com.android.systemui.plugins.GlobalActions -> com.android.systemui.plugins.GlobalActions:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    void showGlobalActions(com.android.systemui.plugins.GlobalActions$GlobalActionsManager) -> showGlobalActions
    void showShutdownUi(boolean,java.lang.String) -> showShutdownUi
com.android.systemui.tuner.-$Lambda$UDFMOt0ssYl7h45SkHFyoARHrq8 -> com.android.systemui.tuner.-$Lambda$UDFMOt0ssYl7h45SkHFyoARHrq8:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0(android.view.View) -> $m$0
    boolean onLongClick(android.view.View) -> onLongClick
com.android.systemui.tuner.LockscreenFragment$Adapter -> com.android.systemui.tuner.LockscreenFragment$Adapter:
    java.util.function.Consumer mCallback -> mCallback
    java.util.ArrayList mItems -> mItems
    void addItem(com.android.systemui.tuner.LockscreenFragment$Item,com.android.systemui.tuner.LockscreenFragment$Item) -> addItem
    int getItemCount() -> getItemCount
    void onBindViewHolder(com.android.systemui.tuner.LockscreenFragment$Holder,int) -> onBindViewHolder
    com.android.systemui.tuner.LockscreenFragment$Holder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void remItem(com.android.systemui.tuner.LockscreenFragment$Item) -> remItem
    void lambda$-com_android_systemui_tuner_LockscreenFragment$Adapter_9881(com.android.systemui.tuner.LockscreenFragment$Holder,android.view.View) -> lambda$-com_android_systemui_tuner_LockscreenFragment$Adapter_9881
    void lambda$-com_android_systemui_tuner_LockscreenFragment$Adapter_10215(com.android.systemui.tuner.LockscreenFragment$Holder,android.view.View) -> lambda$-com_android_systemui_tuner_LockscreenFragment$Adapter_10215
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
android.support.v7.preference.PreferenceManager -> android.support.v7.preference.PreferenceManager:
    android.content.Context mContext -> mContext
    android.content.SharedPreferences mSharedPreferences -> mSharedPreferences
    long mNextId -> mNextId
    int mStorage -> mStorage
    android.support.v7.preference.PreferenceScreen mPreferenceScreen -> mPreferenceScreen
    android.support.v7.preference.PreferenceManager$OnDisplayPreferenceDialogListener mOnDisplayPreferenceDialogListener -> mOnDisplayPreferenceDialogListener
    int mSharedPreferencesMode -> mSharedPreferencesMode
    android.support.v7.preference.PreferenceDataStore mPreferenceDataStore -> mPreferenceDataStore
    boolean mNoCommit -> mNoCommit
    android.support.v7.preference.PreferenceManager$OnNavigateToScreenListener mOnNavigateToScreenListener -> mOnNavigateToScreenListener
    android.support.v7.preference.PreferenceManager$PreferenceComparisonCallback mPreferenceComparisonCallback -> mPreferenceComparisonCallback
    android.support.v7.preference.PreferenceManager$OnPreferenceTreeClickListener mOnPreferenceTreeClickListener -> mOnPreferenceTreeClickListener
    java.lang.String mSharedPreferencesName -> mSharedPreferencesName
    android.content.SharedPreferences$Editor mEditor -> mEditor
    void showDialog(android.support.v7.preference.Preference) -> showDialog
    boolean setPreferences(android.support.v7.preference.PreferenceScreen) -> setPreferences
    void setOnPreferenceTreeClickListener(android.support.v7.preference.PreferenceManager$OnPreferenceTreeClickListener) -> setOnPreferenceTreeClickListener
    boolean shouldCommit() -> shouldCommit
    void setOnNavigateToScreenListener(android.support.v7.preference.PreferenceManager$OnNavigateToScreenListener) -> setOnNavigateToScreenListener
    android.support.v7.preference.PreferenceManager$PreferenceComparisonCallback getPreferenceComparisonCallback() -> getPreferenceComparisonCallback
    void setSharedPreferencesName(java.lang.String) -> setSharedPreferencesName
    android.support.v7.preference.PreferenceScreen createPreferenceScreen(android.content.Context) -> createPreferenceScreen
    android.support.v7.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.support.v7.preference.PreferenceScreen) -> inflateFromResource
    android.support.v7.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    android.content.Context getContext() -> getContext
    android.support.v7.preference.PreferenceManager$OnNavigateToScreenListener getOnNavigateToScreenListener() -> getOnNavigateToScreenListener
    android.support.v7.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    android.support.v7.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    android.content.SharedPreferences$Editor getEditor() -> getEditor
    void setOnDisplayPreferenceDialogListener(android.support.v7.preference.PreferenceManager$OnDisplayPreferenceDialogListener) -> setOnDisplayPreferenceDialogListener
    android.support.v7.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener() -> getOnPreferenceTreeClickListener
    void setNoCommit(boolean) -> setNoCommit
    java.lang.String getDefaultSharedPreferencesName(android.content.Context) -> getDefaultSharedPreferencesName
    void <init>(android.content.Context) -> <init>
    long getNextId() -> getNextId
    android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
com.android.systemui.colorextraction.SysuiColorExtractor -> com.android.systemui.colorextraction.SysuiColorExtractor:
    boolean mWallpaperVisible -> mWallpaperVisible
    com.android.internal.colorextraction.ColorExtractor$GradientColors mWpHiddenColors -> mWpHiddenColors
    com.android.internal.colorextraction.ColorExtractor$GradientColors getColors(int,boolean) -> getColors
    com.android.internal.colorextraction.ColorExtractor$GradientColors getColors(int) -> getColors
    void <init>(android.content.Context) -> <init>
    com.android.internal.colorextraction.ColorExtractor$GradientColors getColors(int,int,boolean) -> getColors
    void <init>(android.content.Context,com.android.internal.colorextraction.types.ExtractionType,boolean) -> <init>
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    com.android.internal.colorextraction.ColorExtractor$GradientColors getColors(int,int) -> getColors
    com.android.internal.colorextraction.ColorExtractor$GradientColors getFallbackColors() -> getFallbackColors
    void onColorsChanged(android.app.WallpaperColors,int,int) -> onColorsChanged
    void setWallpaperVisible(boolean) -> setWallpaperVisible
    void updateDefaultGradients(android.app.WallpaperColors) -> updateDefaultGradients
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    long mDeltaTime -> mDeltaTime
    int mEffectiveRampDown -> mEffectiveRampDown
    long mStartTime -> mStartTime
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    int mRampDownDuration -> mRampDownDuration
    long mStopTime -> mStopTime
    int mDeltaX -> mDeltaX
    float mStopValue -> mStopValue
    int mDeltaY -> mDeltaY
    int mRampUpDuration -> mRampUpDuration
    int getDeltaX() -> getDeltaX
    int getHorizontalDirection() -> getHorizontalDirection
    void computeScrollDelta() -> computeScrollDelta
    int getDeltaY() -> getDeltaY
    void setTargetVelocity(float,float) -> setTargetVelocity
    float interpolateValue(float) -> interpolateValue
    boolean isFinished() -> isFinished
    void setRampDownDuration(int) -> setRampDownDuration
    void setRampUpDuration(int) -> setRampUpDuration
    void start() -> start
    int getVerticalDirection() -> getVerticalDirection
    void <init>() -> <init>
    float getValueAt(long) -> getValueAt
    void requestStop() -> requestStop
com.android.systemui.qs.QSFragment$3 -> com.android.systemui.qs.QSFragment$3:
    com.android.systemui.qs.QSFragment this$0 -> this$0
    void <init>(com.android.systemui.qs.QSFragment) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.IRecentsNonSystemUserCallbacks$Stub$Proxy -> com.android.systemui.recents.IRecentsNonSystemUserCallbacks$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    void cancelPreloadingRecents() -> cancelPreloadingRecents
    void dockTopTask(int,int,int,android.graphics.Rect) -> dockTopTask
    void hideRecents(boolean,boolean) -> hideRecents
    void onConfigurationChanged() -> onConfigurationChanged
    void onDraggingInRecents(float) -> onDraggingInRecents
    void onDraggingInRecentsEnded(float) -> onDraggingInRecentsEnded
    void preloadRecents() -> preloadRecents
    void showCurrentUserToast(int,int) -> showCurrentUserToast
    void showRecents(boolean,boolean,boolean,boolean,boolean,int) -> showRecents
    void toggleRecents(int) -> toggleRecents
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Object mDescriptionObj -> mDescriptionObj
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.os.Bundle mExtras -> mExtras
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mDescription -> mDescription
    java.lang.String mMediaId -> mMediaId
    android.net.Uri mMediaUri -> mMediaUri
    android.net.Uri mIconUri -> mIconUri
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri getIconUri() -> getIconUri
    java.lang.CharSequence getTitle() -> getTitle
    int describeContents() -> describeContents
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.CharSequence getSubtitle() -> getSubtitle
    java.lang.Object getMediaDescription() -> getMediaDescription
    void <init>(android.os.Parcel) -> <init>
android.support.v4.widget.TextViewCompat$TextViewCompatApi27Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi27Impl:
    void <init>() -> <init>
com.android.systemui.statusbar.KeyguardAffordanceView$9 -> com.android.systemui.statusbar.KeyguardAffordanceView$9:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    android.graphics.drawable.Drawable val$background -> val$background
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView,android.graphics.drawable.Drawable) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void onAdjustVolume(int) -> onAdjustVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    void <init>(android.support.v4.media.VolumeProviderCompat) -> <init>
android.support.v14.preference.EditTextPreferenceDialogFragment -> android.support.v14.preference.EditTextPreferenceDialogFragment:
    java.lang.CharSequence mText -> mText
    android.widget.EditText mEditText -> mEditText
    android.support.v7.preference.EditTextPreference getEditTextPreference() -> getEditTextPreference
    android.support.v14.preference.EditTextPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    void onCreate(android.os.Bundle) -> onCreate
    boolean needInputMethod() -> needInputMethod
    void onDialogClosed(boolean) -> onDialogClosed
    void <init>() -> <init>
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onBindDialogView(android.view.View) -> onBindDialogView
com.android.systemui.doze.DozeSuspendScreenStatePreventingAdapter -> com.android.systemui.doze.DozeSuspendScreenStatePreventingAdapter:
    com.android.systemui.doze.DozeMachine$Service wrapIfNeeded(com.android.systemui.doze.DozeMachine$Service,com.android.systemui.statusbar.phone.DozeParameters) -> wrapIfNeeded
    void <init>(com.android.systemui.doze.DozeMachine$Service) -> <init>
    boolean isNeeded(com.android.systemui.statusbar.phone.DozeParameters) -> isNeeded
    void setDozeScreenState(int) -> setDozeScreenState
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    void <init>() -> <init>
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
com.android.keyguard.EmergencyButton$3 -> com.android.keyguard.EmergencyButton$3:
    com.android.keyguard.EmergencyButton this$0 -> this$0
    void <init>(com.android.keyguard.EmergencyButton) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.android.systemui.qs.car.-$Lambda$PJuwMVrpZEqa7QDEs4dfDCdYkDI -> com.android.systemui.qs.car.-$Lambda$PJuwMVrpZEqa7QDEs4dfDCdYkDI:
    com.android.systemui.qs.car.-$Lambda$PJuwMVrpZEqa7QDEs4dfDCdYkDI $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer -> com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer:
    int mBottomPadding -> mBottomPadding
    boolean mCustomizerAnimating -> mCustomizerAnimating
    boolean mHasViewsAboveShelf -> mHasViewsAboveShelf
    boolean mInflated -> mInflated
    android.view.View mKeyguardStatusBar -> mKeyguardStatusBar
    boolean mQsExpanded -> mQsExpanded
    android.widget.FrameLayout mQsFrame -> mQsFrame
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mStackScroller -> mStackScroller
    int mStackScrollerMargin -> mStackScrollerMargin
    android.view.View mUserSwitcher -> mUserSwitcher
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onFragmentViewCreated(java.lang.String,android.app.Fragment) -> onFragmentViewCreated
    void onHasViewsAboveShelfChanged(boolean) -> onHasViewsAboveShelfChanged
    void onInflate(android.view.ViewStub,android.view.View) -> onInflate
    void reloadWidth(android.view.View,int) -> reloadWidth
    void setBottomMargin(android.view.View,int) -> setBottomMargin
    void setCustomizerAnimating(boolean) -> setCustomizerAnimating
    void setCustomizerShowing(boolean) -> setCustomizerShowing
    void setQsExpanded(boolean) -> setQsExpanded
com.android.systemui.statusbar.NotificationHeaderUtil -> com.android.systemui.statusbar.NotificationHeaderUtil:
    java.util.ArrayList mComparators -> mComparators
    java.util.HashSet mDividers -> mDividers
    com.android.systemui.statusbar.NotificationHeaderUtil$ResultApplicator mGreyApplicator -> mGreyApplicator
    com.android.systemui.statusbar.ExpandableNotificationRow mRow -> mRow
    com.android.systemui.statusbar.NotificationHeaderUtil$IconComparator sGreyComparator -> sGreyComparator
    com.android.systemui.statusbar.NotificationHeaderUtil$DataExtractor sIconExtractor -> sIconExtractor
    com.android.systemui.statusbar.NotificationHeaderUtil$IconComparator sIconVisibilityComparator -> sIconVisibilityComparator
    com.android.systemui.statusbar.NotificationHeaderUtil$TextViewComparator sTextViewComparator -> sTextViewComparator
    com.android.systemui.statusbar.NotificationHeaderUtil$VisibilityApplicator sVisibilityApplicator -> sVisibilityApplicator
    void restoreNotificationHeader(com.android.systemui.statusbar.ExpandableNotificationRow) -> restoreNotificationHeader
    void updateChildrenHeaderAppearance() -> updateChildrenHeaderAppearance
    void <init>(com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void sanitizeChild(android.view.View) -> sanitizeChild
    void sanitizeHeader(android.view.NotificationHeaderView) -> sanitizeHeader
    void sanitizeHeaderViews(com.android.systemui.statusbar.ExpandableNotificationRow) -> sanitizeHeaderViews
    void <clinit>() -> <clinit>
    com.android.systemui.statusbar.NotificationHeaderUtil$TextViewComparator -get0() -> -get0
    com.android.systemui.statusbar.NotificationHeaderUtil$VisibilityApplicator -get1() -> -get1
com.android.systemui.power.PowerUI -> com.android.systemui.power.PowerUI:
    boolean DEBUG -> DEBUG
    int mBatteryLevel -> mBatteryLevel
    int mBatteryStatus -> mBatteryStatus
    android.os.Handler mHandler -> mHandler
    android.os.HardwarePropertiesManager mHardwarePropertiesManager -> mHardwarePropertiesManager
    int mInvalidCharger -> mInvalidCharger
    android.content.res.Configuration mLastConfiguration -> mLastConfiguration
    int mLowBatteryAlertCloseLevel -> mLowBatteryAlertCloseLevel
    int[] mLowBatteryReminderLevels -> mLowBatteryReminderLevels
    long mNextLogTime -> mNextLogTime
    int mNumTemps -> mNumTemps
    int mPlugType -> mPlugType
    android.os.PowerManager mPowerManager -> mPowerManager
    com.android.systemui.power.PowerUI$Receiver mReceiver -> mReceiver
    float[] mRecentTemps -> mRecentTemps
    long mScreenOffTime -> mScreenOffTime
    float mThresholdTemp -> mThresholdTemp
    java.lang.Runnable mUpdateTempCallback -> mUpdateTempCallback
    com.android.systemui.power.PowerUI$WarningsUI mWarnings -> mWarnings
    void <init>() -> <init>
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    int findBatteryLevelBucket(int) -> findBatteryLevelBucket
    void initTemperatureWarning() -> initTemperatureWarning
    void logAtTemperatureThreshold(float) -> logAtTemperatureThreshold
    void logTemperatureStats() -> logTemperatureStats
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setNextLogTime() -> setNextLogTime
    void showThermalShutdownDialog() -> showThermalShutdownDialog
    void start() -> start
    void updateBatteryWarningLevels() -> updateBatteryWarningLevels
    void updateTemperatureWarning() -> updateTemperatureWarning
    void <clinit>() -> <clinit>
    void -com_android_systemui_power_PowerUI-mthref-0() -> -com_android_systemui_power_PowerUI-mthref-0
    void -com_android_systemui_power_PowerUI-mthref-1() -> -com_android_systemui_power_PowerUI-mthref-1
    int -get0(com.android.systemui.power.PowerUI) -> -get0
    int -get1(com.android.systemui.power.PowerUI) -> -get1
    android.os.Handler -get2(com.android.systemui.power.PowerUI) -> -get2
    int -get3(com.android.systemui.power.PowerUI) -> -get3
    int -get4(com.android.systemui.power.PowerUI) -> -get4
    int[] -get5(com.android.systemui.power.PowerUI) -> -get5
    int -get6(com.android.systemui.power.PowerUI) -> -get6
    android.os.PowerManager -get7(com.android.systemui.power.PowerUI) -> -get7
    long -get8(com.android.systemui.power.PowerUI) -> -get8
    com.android.systemui.power.PowerUI$WarningsUI -get9(com.android.systemui.power.PowerUI) -> -get9
    int -set0(com.android.systemui.power.PowerUI,int) -> -set0
    int -set1(com.android.systemui.power.PowerUI,int) -> -set1
    int -set2(com.android.systemui.power.PowerUI,int) -> -set2
    int -set3(com.android.systemui.power.PowerUI,int) -> -set3
    long -set4(com.android.systemui.power.PowerUI,long) -> -set4
    int -wrap0(com.android.systemui.power.PowerUI,int) -> -wrap0
com.android.systemui.statusbar.-$Lambda$pxhtjefp-4VbVZxPncusN7cxW-w -> com.android.systemui.statusbar.-$Lambda$pxhtjefp-4VbVZxPncusN7cxW-w:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
com.android.systemui.statusbar.ViewTransformationHelper$2 -> com.android.systemui.statusbar.ViewTransformationHelper$2:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.ViewTransformationHelper this$0 -> this$0
    java.lang.Runnable val$endRunnable -> val$endRunnable
    void <init>(com.android.systemui.statusbar.ViewTransformationHelper,java.lang.Runnable) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.QSDetailItems$Adapter$2 -> com.android.systemui.qs.QSDetailItems$Adapter$2:
    com.android.systemui.qs.QSDetailItems$Adapter this$1 -> this$1
    com.android.systemui.qs.QSDetailItems$Item val$item -> val$item
    void <init>(com.android.systemui.qs.QSDetailItems$Adapter,com.android.systemui.qs.QSDetailItems$Item) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.qs.customize.-$Lambda$pQ3JKx5515h-eZeun6umHO-Mluk -> com.android.systemui.qs.customize.-$Lambda$pQ3JKx5515h-eZeun6umHO-Mluk:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v17.leanback.widget.BaseGridView$1 -> android.support.v17.leanback.widget.BaseGridView$1:
    android.support.v17.leanback.widget.BaseGridView this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.BaseGridView) -> <init>
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
com.android.systemui.statusbar.policy.DataSaverControllerImpl -> com.android.systemui.statusbar.policy.DataSaverControllerImpl:
    android.os.Handler mHandler -> mHandler
    java.util.ArrayList mListeners -> mListeners
    android.net.INetworkPolicyListener mPolicyListener -> mPolicyListener
    android.net.NetworkPolicyManager mPolicyManager -> mPolicyManager
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.DataSaverController$Listener) -> addCallback
    void handleRestrictBackgroundChanged(boolean) -> handleRestrictBackgroundChanged
    boolean isDataSaverEnabled() -> isDataSaverEnabled
    void removeCallback(com.android.systemui.statusbar.policy.DataSaverController$Listener) -> removeCallback
    void setDataSaverEnabled(boolean) -> setDataSaverEnabled
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    android.os.Handler -get0(com.android.systemui.statusbar.policy.DataSaverControllerImpl) -> -get0
    void -wrap0(com.android.systemui.statusbar.policy.DataSaverControllerImpl,boolean) -> -wrap0
com.android.systemui.qs.QSDetail$1 -> com.android.systemui.qs.QSDetail$1:
    com.android.systemui.qs.QSDetail this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetail) -> <init>
    void onScanStateChanged(boolean) -> onScanStateChanged
    void onShowingDetail(com.android.systemui.plugins.qs.DetailAdapter,int,int) -> onShowingDetail
    void onToggleStateChanged(boolean) -> onToggleStateChanged
android.support.v7.widget.ActivityChooserView$InnerLayout -> android.support.v7.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> TINT_ATTRS
    void <clinit>() -> <clinit>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.v7.widget.helper.ItemTouchHelper$5 -> android.support.v7.widget.helper.ItemTouchHelper$5:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
com.android.systemui.egg.MLand$Stem -> com.android.systemui.egg.MLand$Stem:
    int id -> id
    boolean mDrawShadow -> mDrawShadow
    android.graphics.drawable.GradientDrawable mGradient -> mGradient
    android.graphics.Path mJandystripe -> mJandystripe
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPaint2 -> mPaint2
    android.graphics.Path mShadow -> mShadow
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context,float,boolean) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDraw(android.graphics.Canvas) -> onDraw
com.android.systemui.plugins.PluginManagerImpl$PluginInstanceManagerFactory -> com.android.systemui.plugins.PluginManagerImpl$PluginInstanceManagerFactory:
    void <init>() -> <init>
    com.android.systemui.plugins.PluginInstanceManager createPluginInstanceManager(android.content.Context,java.lang.String,com.android.systemui.plugins.PluginListener,boolean,android.os.Looper,java.lang.Class,com.android.systemui.plugins.PluginManagerImpl) -> createPluginInstanceManager
android.support.v7.widget.MenuPopupWindow$MenuDropDownListView -> android.support.v7.widget.MenuPopupWindow$MenuDropDownListView:
    android.support.v7.widget.MenuItemHoverListener mHoverListener -> mHoverListener
    int mRetreatKey -> mRetreatKey
    int mAdvanceKey -> mAdvanceKey
    android.view.MenuItem mHoveredMenuItem -> mHoveredMenuItem
    void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isInTouchMode() -> isInTouchMode
    boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    void <init>(android.content.Context,boolean) -> <init>
    boolean hasFocus() -> hasFocus
    boolean isFocused() -> isFocused
com.android.systemui.statusbar.phone.StatusBarIconController$IconManager -> com.android.systemui.statusbar.phone.StatusBarIconController$IconManager:
    android.view.ViewGroup mGroup -> mGroup
    android.content.Context mContext -> mContext
    int mIconSize -> mIconSize
    void onIconAdded(int,java.lang.String,boolean,com.android.internal.statusbar.StatusBarIcon) -> onIconAdded
    void destroy() -> destroy
    void onIconExternal(int,int) -> onIconExternal
    void onRemoveIcon(int) -> onRemoveIcon
    void onSetIcon(int,com.android.internal.statusbar.StatusBarIcon) -> onSetIcon
    void <init>(android.view.ViewGroup) -> <init>
    com.android.systemui.statusbar.StatusBarIconView addIcon(int,java.lang.String,boolean,com.android.internal.statusbar.StatusBarIcon) -> addIcon
    android.widget.LinearLayout$LayoutParams onCreateLayoutParams() -> onCreateLayoutParams
    com.android.systemui.statusbar.StatusBarIconView onCreateStatusBarIconView(java.lang.String,boolean) -> onCreateStatusBarIconView
    void setHeightAndCenter(android.widget.ImageView,int) -> setHeightAndCenter
com.android.systemui.statusbar.AnimatedImageView -> com.android.systemui.statusbar.AnimatedImageView:
    boolean mAllowAnimation -> mAllowAnimation
    android.graphics.drawable.AnimationDrawable mAnim -> mAnim
    boolean mAttached -> mAttached
    int mDrawableId -> mDrawableId
    boolean mHasOverlappingRendering -> mHasOverlappingRendering
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setAllowAnimation(boolean) -> setAllowAnimation
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void setImageResource(int) -> setImageResource
    void updateAnim() -> updateAnim
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.widget.ListPopupWindow$ListSelectorHider:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
com.android.systemui.tuner.TunerServiceImpl$Observer -> com.android.systemui.tuner.TunerServiceImpl$Observer:
    com.android.systemui.tuner.TunerServiceImpl this$0 -> this$0
    void <init>(com.android.systemui.tuner.TunerServiceImpl) -> <init>
    void onChange(boolean,android.net.Uri,int) -> onChange
com.android.systemui.statusbar.phone.StatusBar$22 -> com.android.systemui.statusbar.phone.StatusBar$22:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.DejankUtils -> com.android.systemui.DejankUtils:
    java.lang.Runnable sAnimationCallbackRunnable -> sAnimationCallbackRunnable
    android.view.Choreographer sChoreographer -> sChoreographer
    android.os.Handler sHandler -> sHandler
    java.util.ArrayList sPendingRunnables -> sPendingRunnables
    void postAfterTraversal(java.lang.Runnable) -> postAfterTraversal
    void <init>() -> <init>
    void postAnimationCallback() -> postAnimationCallback
    void removeCallbacks(java.lang.Runnable) -> removeCallbacks
    void <clinit>() -> <clinit>
    android.os.Handler -get0() -> -get0
    java.util.ArrayList -get1() -> -get1
com.android.systemui.plugins.qs.QSTileView -> com.android.systemui.plugins.qs.QSTileView:
    int VERSION -> VERSION
    android.view.View updateAccessibilityOrder(android.view.View) -> updateAccessibilityOrder
    void init(com.android.systemui.plugins.qs.QSTile) -> init
    void onStateChanged(com.android.systemui.plugins.qs.QSTile$State) -> onStateChanged
    int getDetailY() -> getDetailY
    void <init>(android.content.Context) -> <init>
    com.android.systemui.plugins.qs.QSIconView getIcon() -> getIcon
com.android.systemui.qs.PagedTileLayout$TilePage -> com.android.systemui.qs.PagedTileLayout$TilePage:
    int mMaxRows -> mMaxRows
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getRows() -> getRows
    boolean isFull() -> isFull
    boolean updateResources() -> updateResources
com.android.systemui.statusbar.phone.-$Lambda$t84YMscG_HuhcF-TFkwLvEAF9dg -> com.android.systemui.statusbar.phone.-$Lambda$t84YMscG_HuhcF-TFkwLvEAF9dg:
    com.android.systemui.statusbar.phone.-$Lambda$t84YMscG_HuhcF-TFkwLvEAF9dg $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    int $m$0(java.lang.Object) -> $m$0
    int applyAsInt(java.lang.Object) -> applyAsInt
android.support.v7.media.SystemMediaRouteProvider$Api24Impl -> android.support.v7.media.SystemMediaRouteProvider$Api24Impl:
    void onBuildSystemRouteDescriptor(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord,android.support.v7.media.MediaRouteDescriptor$Builder) -> onBuildSystemRouteDescriptor
    void <init>(android.content.Context,android.support.v7.media.SystemMediaRouteProvider$SyncCallback) -> <init>
com.android.systemui.SwipeHelper$4 -> com.android.systemui.SwipeHelper$4:
    com.android.systemui.SwipeHelper this$0 -> this$0
    android.view.View val$animView -> val$animView
    boolean val$canBeDismissed -> val$canBeDismissed
    void <init>(com.android.systemui.SwipeHelper,android.view.View,boolean) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.StatusBarIconView -> com.android.systemui.statusbar.StatusBarIconView:
    int ANIMATION_DURATION_FAST -> ANIMATION_DURATION_FAST
    android.util.Property DOT_APPEAR_AMOUNT -> DOT_APPEAR_AMOUNT
    android.util.Property ICON_APPEAR_AMOUNT -> ICON_APPEAR_AMOUNT
    boolean mAlwaysScaleIcon -> mAlwaysScaleIcon
    int mAnimationStartColor -> mAnimationStartColor
    boolean mBlocked -> mBlocked
    int mCachedContrastBackgroundColor -> mCachedContrastBackgroundColor
    android.animation.ValueAnimator mColorAnimator -> mColorAnimator
    android.animation.ValueAnimator$AnimatorUpdateListener mColorUpdater -> mColorUpdater
    int mContrastedDrawableColor -> mContrastedDrawableColor
    int mCurrentSetColor -> mCurrentSetColor
    float mDarkAmount -> mDarkAmount
    int mDecorColor -> mDecorColor
    int mDensity -> mDensity
    android.animation.ObjectAnimator mDotAnimator -> mDotAnimator
    float mDotAppearAmount -> mDotAppearAmount
    android.graphics.Paint mDotPaint -> mDotPaint
    float mDotRadius -> mDotRadius
    com.android.systemui.statusbar.notification.NotificationIconDozeHelper mDozer -> mDozer
    int mDrawableColor -> mDrawableColor
    com.android.internal.statusbar.StatusBarIcon mIcon -> mIcon
    float mIconAppearAmount -> mIconAppearAmount
    android.animation.ObjectAnimator mIconAppearAnimator -> mIconAppearAnimator
    int mIconColor -> mIconColor
    float mIconScale -> mIconScale
    boolean mIsInShelf -> mIsInShelf
    java.lang.Runnable mLayoutRunnable -> mLayoutRunnable
    float[] mMatrix -> mMatrix
    android.graphics.ColorMatrixColorFilter mMatrixColorFilter -> mMatrixColorFilter
    android.service.notification.StatusBarNotification mNotification -> mNotification
    android.graphics.drawable.Drawable mNumberBackground -> mNumberBackground
    android.graphics.Paint mNumberPain -> mNumberPain
    java.lang.String mNumberText -> mNumberText
    int mNumberX -> mNumberX
    int mNumberY -> mNumberY
    com.android.systemui.statusbar.StatusBarIconView$OnVisibilityChangedListener mOnVisibilityChangedListener -> mOnVisibilityChangedListener
    java.lang.String mSlot -> mSlot
    int mStaticDotRadius -> mStaticDotRadius
    int mStatusBarIconDrawingSize -> mStatusBarIconDrawingSize
    int mStatusBarIconDrawingSizeDark -> mStatusBarIconDrawingSizeDark
    int mStatusBarIconSize -> mStatusBarIconSize
    int mVisibleState -> mVisibleState
    void setVisibleState(int,boolean) -> setVisibleState
    int getVisibleState() -> getVisibleState
    void setIconColor(int,boolean) -> setIconColor
    boolean isInShelf() -> isInShelf
    void setIsInShelf(boolean) -> setIsInShelf
    int getStaticDrawableColor() -> getStaticDrawableColor
    void setDark(boolean,boolean,long) -> setDark
    android.graphics.drawable.Icon getSourceIcon() -> getSourceIcon
    android.service.notification.StatusBarNotification getNotification() -> getNotification
    void setVisibleState(int,boolean,java.lang.Runnable) -> setVisibleState
    float getIconScaleFullyDark() -> getIconScaleFullyDark
    void <init>(android.content.Context,java.lang.String,android.service.notification.StatusBarNotification) -> <init>
    java.lang.String contentDescForNotification(android.content.Context,android.app.Notification) -> contentDescForNotification
    boolean set(com.android.internal.statusbar.StatusBarIcon) -> set
    void setVisibility(int) -> setVisibility
    void setOnVisibilityChangedListener(com.android.systemui.statusbar.StatusBarIconView$OnVisibilityChangedListener) -> setOnVisibilityChangedListener
    void setNotification(android.service.notification.StatusBarNotification) -> setNotification
    com.android.internal.statusbar.StatusBarIcon getStatusBarIcon() -> getStatusBarIcon
    void executeOnLayout(java.lang.Runnable) -> executeOnLayout
    void setStaticDrawableColor(int) -> setStaticDrawableColor
    void setDecorColor(int) -> setDecorColor
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,java.lang.String,android.service.notification.StatusBarNotification,boolean) -> <init>
    void debug(int) -> debug
    boolean equalIcons(android.graphics.drawable.Icon,android.graphics.drawable.Icon) -> equalIcons
    int getContrastedStaticDrawableColor(int) -> getContrastedStaticDrawableColor
    float getDotAppearAmount() -> getDotAppearAmount
    void getDrawingRect(android.graphics.Rect) -> getDrawingRect
    android.graphics.drawable.Drawable getIcon(com.android.internal.statusbar.StatusBarIcon) -> getIcon
    android.graphics.drawable.Drawable getIcon(android.content.Context,com.android.internal.statusbar.StatusBarIcon) -> getIcon
    float getIconAppearAmount() -> getIconAppearAmount
    float getIconScale() -> getIconScale
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void maybeUpdateIconScaleDimens() -> maybeUpdateIconScaleDimens
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void placeNumber() -> placeNumber
    void reloadDimens() -> reloadDimens
    void runRunnable(java.lang.Runnable) -> runRunnable
    void setColorInternal(int) -> setColorInternal
    void setContentDescription(android.app.Notification) -> setContentDescription
    void setDotAppearAmount(float) -> setDotAppearAmount
    void setIconAppearAmount(float) -> setIconAppearAmount
    java.lang.String toString() -> toString
    void updateAllowAnimation() -> updateAllowAnimation
    void updateContrastedStaticColor() -> updateContrastedStaticColor
    void updateDecorColor() -> updateDecorColor
    void updateDrawable() -> updateDrawable
    boolean updateDrawable(boolean) -> updateDrawable
    void updateIconColor() -> updateIconColor
    void updateIconScale() -> updateIconScale
    void updateIconScaleDimens() -> updateIconScaleDimens
    void updateTintMatrix(float[],int,float) -> updateTintMatrix
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_StatusBarIconView_4967(android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_StatusBarIconView_4967
    void lambda$-com_android_systemui_statusbar_StatusBarIconView_28475(java.lang.Float) -> lambda$-com_android_systemui_statusbar_StatusBarIconView_28475
    int -set0(com.android.systemui.statusbar.StatusBarIconView,int) -> -set0
    android.animation.ValueAnimator -set1(com.android.systemui.statusbar.StatusBarIconView,android.animation.ValueAnimator) -> -set1
    android.animation.ObjectAnimator -set2(com.android.systemui.statusbar.StatusBarIconView,android.animation.ObjectAnimator) -> -set2
    android.animation.ObjectAnimator -set3(com.android.systemui.statusbar.StatusBarIconView,android.animation.ObjectAnimator) -> -set3
    void -wrap0(com.android.systemui.statusbar.StatusBarIconView,java.lang.Runnable) -> -wrap0
com.android.systemui.recents.misc.ReferenceCountedTrigger -> com.android.systemui.recents.misc.ReferenceCountedTrigger:
    int mCount -> mCount
    java.lang.Runnable mDecrementRunnable -> mDecrementRunnable
    java.lang.Runnable mErrorRunnable -> mErrorRunnable
    java.util.ArrayList mFirstIncRunnables -> mFirstIncRunnables
    java.lang.Runnable mIncrementRunnable -> mIncrementRunnable
    java.util.ArrayList mLastDecRunnables -> mLastDecRunnables
    void increment() -> increment
    void decrement() -> decrement
    void <init>() -> <init>
    void <init>(java.lang.Runnable,java.lang.Runnable,java.lang.Runnable) -> <init>
    void addLastDecrementRunnable(java.lang.Runnable) -> addLastDecrementRunnable
    android.animation.Animator$AnimatorListener decrementOnAnimationEnd() -> decrementOnAnimationEnd
    void flushLastDecrementRunnables() -> flushLastDecrementRunnables
com.android.systemui.statusbar.phone.NotificationGroupManager$OnGroupChangeListener -> com.android.systemui.statusbar.phone.NotificationGroupManager$OnGroupChangeListener:
    void onGroupCreatedFromChildren(com.android.systemui.statusbar.phone.NotificationGroupManager$NotificationGroup) -> onGroupCreatedFromChildren
    void onGroupExpansionChanged(com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> onGroupExpansionChanged
    void onGroupsChanged() -> onGroupsChanged
android.support.v7.widget.DefaultItemAnimator$8 -> android.support.v7.widget.DefaultItemAnimator$8:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> val$changeInfo
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    android.view.ViewPropertyAnimator val$newViewAnimation -> val$newViewAnimation
    android.view.View val$newView -> val$newView
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.events.component.HidePipMenuEvent -> com.android.systemui.recents.events.component.HidePipMenuEvent:
    void <init>() -> <init>
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    int mResultCode -> mResultCode
    android.support.v4.os.ResultReceiver this$0 -> this$0
    android.os.Bundle mResultData -> mResultData
    void run() -> run
    void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
com.android.systemui.recents.views.RecentsEntrancePathInterpolator -> com.android.systemui.recents.views.RecentsEntrancePathInterpolator:
    float mStartOffsetFraction -> mStartOffsetFraction
    void <init>(float,float,float,float,float) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v14.preference.MultiSelectListPreferenceDialogFragment -> android.support.v14.preference.MultiSelectListPreferenceDialogFragment:
    java.util.Set mNewValues -> mNewValues
    java.lang.CharSequence[] mEntryValues -> mEntryValues
    java.lang.CharSequence[] mEntries -> mEntries
    boolean mPreferenceChanged -> mPreferenceChanged
    boolean -get2(android.support.v14.preference.MultiSelectListPreferenceDialogFragment) -> -get2
    android.support.v7.preference.internal.AbstractMultiSelectListPreference getListPreference() -> getListPreference
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.CharSequence[] -get0(android.support.v14.preference.MultiSelectListPreferenceDialogFragment) -> -get0
    boolean -set0(android.support.v14.preference.MultiSelectListPreferenceDialogFragment,boolean) -> -set0
    void onDialogClosed(boolean) -> onDialogClosed
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    android.support.v14.preference.MultiSelectListPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    void <init>() -> <init>
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    java.util.Set -get1(android.support.v14.preference.MultiSelectListPreferenceDialogFragment) -> -get1
com.android.systemui.globalactions.GlobalActionsDialog$7 -> com.android.systemui.globalactions.GlobalActionsDialog$7:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.android.settingslib.animation.AppearAnimationUtils$AppearAnimationProperties -> com.android.settingslib.animation.AppearAnimationUtils$AppearAnimationProperties:
    long[][] delays -> delays
    int maxDelayRowIndex -> maxDelayRowIndex
    com.android.settingslib.animation.AppearAnimationUtils this$0 -> this$0
    int maxDelayColIndex -> maxDelayColIndex
    void <init>(com.android.settingslib.animation.AppearAnimationUtils) -> <init>
android.support.v7.view.menu.ActionMenuItem -> android.support.v7.view.menu.ActionMenuItem:
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    android.graphics.PorterDuff$Mode mIconTintMode -> mIconTintMode
    android.content.Context mContext -> mContext
    int mId -> mId
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    java.lang.CharSequence mTitle -> mTitle
    int mOrdering -> mOrdering
    int mCategoryOrder -> mCategoryOrder
    boolean mHasIconTintMode -> mHasIconTintMode
    int mIconResId -> mIconResId
    char mShortcutNumericChar -> mShortcutNumericChar
    int mFlags -> mFlags
    boolean mHasIconTint -> mHasIconTint
    java.lang.CharSequence mTooltipText -> mTooltipText
    java.lang.CharSequence mContentDescription -> mContentDescription
    int mShortcutAlphabeticModifiers -> mShortcutAlphabeticModifiers
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    android.content.res.ColorStateList mIconTintList -> mIconTintList
    int mGroup -> mGroup
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    int mShortcutNumericModifiers -> mShortcutNumericModifiers
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    void applyIconTint() -> applyIconTint
    java.lang.CharSequence getTitle() -> getTitle
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setVisible(boolean) -> setVisible
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    boolean collapseActionView() -> collapseActionView
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    boolean expandActionView() -> expandActionView
    android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    int getOrder() -> getOrder
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setActionView(int) -> setActionView
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    java.lang.CharSequence getTooltipText() -> getTooltipText
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    void setShowAsAction(int) -> setShowAsAction
    boolean isVisible() -> isVisible
    int getGroupId() -> getGroupId
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.View getActionView() -> getActionView
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    int getItemId() -> getItemId
    boolean isChecked() -> isChecked
    java.lang.CharSequence getContentDescription() -> getContentDescription
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean hasSubMenu() -> hasSubMenu
    android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    int getNumericModifiers() -> getNumericModifiers
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
com.android.systemui.statusbar.phone.StatusBarWindowManager$State -> com.android.systemui.statusbar.phone.StatusBarWindowManager$State:
    boolean backdropShowing -> backdropShowing
    boolean bouncerShowing -> bouncerShowing
    boolean dozing -> dozing
    boolean forceCollapsed -> forceCollapsed
    boolean forceDozeBrightness -> forceDozeBrightness
    boolean forcePluginOpen -> forcePluginOpen
    boolean forceStatusBarVisible -> forceStatusBarVisible
    boolean forceUserActivity -> forceUserActivity
    boolean headsUpShowing -> headsUpShowing
    boolean keyguardFadingAway -> keyguardFadingAway
    boolean keyguardNeedsInput -> keyguardNeedsInput
    boolean keyguardOccluded -> keyguardOccluded
    boolean keyguardShowing -> keyguardShowing
    boolean panelExpanded -> panelExpanded
    boolean panelVisible -> panelVisible
    boolean qsExpanded -> qsExpanded
    boolean remoteInputActive -> remoteInputActive
    boolean scrimsVisible -> scrimsVisible
    boolean statusBarFocusable -> statusBarFocusable
    int statusBarState -> statusBarState
    void <init>() -> <init>
    boolean isKeyguardShowingAndNotOccluded() -> isKeyguardShowingAndNotOccluded
    java.lang.String toString() -> toString
    boolean -wrap0(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> -wrap0
    void <init>(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> <init>
android.support.annotation.GuardedBy -> android.support.annotation.GuardedBy:
    java.lang.String value() -> value
android.support.v4.view.AsyncLayoutInflater$InflateThread -> android.support.v4.view.AsyncLayoutInflater$InflateThread:
    android.support.v4.util.Pools$SynchronizedPool mRequestPool -> mRequestPool
    java.util.concurrent.ArrayBlockingQueue mQueue -> mQueue
    android.support.v4.view.AsyncLayoutInflater$InflateThread sInstance -> sInstance
    void run() -> run
    android.support.v4.view.AsyncLayoutInflater$InflateThread getInstance() -> getInstance
    void enqueue(android.support.v4.view.AsyncLayoutInflater$InflateRequest) -> enqueue
    android.support.v4.view.AsyncLayoutInflater$InflateRequest obtainRequest() -> obtainRequest
    void releaseRequest(android.support.v4.view.AsyncLayoutInflater$InflateRequest) -> releaseRequest
    void runInner() -> runInner
    void <clinit>() -> <clinit>
    void <init>() -> <init>
com.android.systemui.util.leak.TrackedGarbage$LeakReference -> com.android.systemui.util.leak.TrackedGarbage$LeakReference:
    java.lang.Class clazz -> clazz
    long createdUptimeMillis -> createdUptimeMillis
    void <init>(java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
    java.lang.Class -get0(com.android.systemui.util.leak.TrackedGarbage$LeakReference) -> -get0
    long -get1(com.android.systemui.util.leak.TrackedGarbage$LeakReference) -> -get1
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$fragmentView -> val$fragmentView
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.support.v4.app.FragmentTransitionCompat21 this$0 -> this$0
    void <init>(android.support.v4.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    void onTransitionResume(android.transition.Transition) -> onTransitionResume
    void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    void onTransitionPause(android.transition.Transition) -> onTransitionPause
    void onTransitionStart(android.transition.Transition) -> onTransitionStart
com.android.settingslib.R$id -> com.android.settingslib.R$id:
    int action_bar -> action_bar
    int additional_summary -> additional_summary
    int content_frame -> content_frame
    int content_header_container -> content_header_container
    int friction_icon -> friction_icon
    int restricted_icon -> restricted_icon
    int two_target_divider -> two_target_divider
    void <init>() -> <init>
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.ClassLoader loader -> loader
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.globalactions.GlobalActionsDialog$BugReportAction$1 -> com.android.systemui.globalactions.GlobalActionsDialog$BugReportAction$1:
    com.android.systemui.globalactions.GlobalActionsDialog$BugReportAction this$1 -> this$1
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog$BugReportAction) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.NoisyVelocityTracker -> com.android.systemui.statusbar.phone.NoisyVelocityTracker:
    int MAX_EVENTS -> MAX_EVENTS
    java.util.ArrayDeque mEventBuf -> mEventBuf
    float mVX -> mVX
    float mVY -> mVY
    android.util.Pools$SynchronizedPool sNoisyPool -> sNoisyPool
    com.android.systemui.statusbar.phone.NoisyVelocityTracker obtain() -> obtain
    void <init>() -> <init>
    void addMovement(android.view.MotionEvent) -> addMovement
    void computeCurrentVelocity(int) -> computeCurrentVelocity
    float getXVelocity() -> getXVelocity
    float getYVelocity() -> getYVelocity
    void recycle() -> recycle
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.ActivatableNotificationView$OnActivatedListener -> com.android.systemui.statusbar.ActivatableNotificationView$OnActivatedListener:
    void onActivated(com.android.systemui.statusbar.ActivatableNotificationView) -> onActivated
    void onActivationReset(com.android.systemui.statusbar.ActivatableNotificationView) -> onActivationReset
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter:
    android.support.v7.widget.Toolbar this$0 -> this$0
    android.support.v7.view.menu.MenuItemImpl mCurrentExpandedItem -> mCurrentExpandedItem
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    void updateMenuView(boolean) -> updateMenuView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.android.keyguard.KeyguardPINView$1 -> com.android.keyguard.KeyguardPINView$1:
    com.android.keyguard.KeyguardPINView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPINView) -> <init>
    void run() -> run
com.android.systemui.qs.tiles.DataSaverTile -> com.android.systemui.qs.tiles.DataSaverTile:
    com.android.systemui.statusbar.policy.DataSaverController mDataSaverController -> mDataSaverController
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void onDataSaverChanged(boolean) -> onDataSaverChanged
    void toggleDataSaver() -> toggleDataSaver
    void lambda$-com_android_systemui_qs_tiles_DataSaverTile_2763(android.content.DialogInterface,int) -> lambda$-com_android_systemui_qs_tiles_DataSaverTile_2763
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
com.android.systemui.keyguard.KeyguardViewMediator -> com.android.systemui.keyguard.KeyguardViewMediator:
    android.content.Intent USER_PRESENT_INTENT -> USER_PRESENT_INTENT
    android.app.AlarmManager mAlarmManager -> mAlarmManager
    android.media.AudioManager mAudioManager -> mAudioManager
    boolean mBootCompleted -> mBootCompleted
    boolean mBootSendUserPresent -> mBootSendUserPresent
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    int mDelayedProfileShowingSequence -> mDelayedProfileShowingSequence
    int mDelayedShowingSequence -> mDelayedShowingSequence
    boolean mDeviceInteractive -> mDeviceInteractive
    com.android.systemui.keyguard.DismissCallbackRegistry mDismissCallbackRegistry -> mDismissCallbackRegistry
    com.android.internal.policy.IKeyguardDrawnCallback mDrawnCallback -> mDrawnCallback
    com.android.internal.policy.IKeyguardExitCallback mExitSecureCallback -> mExitSecureCallback
    boolean mExternallyEnabled -> mExternallyEnabled
    boolean mGoingToSleep -> mGoingToSleep
    android.os.Handler mHandler -> mHandler
    android.view.animation.Animation mHideAnimation -> mHideAnimation
    java.lang.Runnable mHideAnimationFinishedRunnable -> mHideAnimationFinishedRunnable
    boolean mHideAnimationRun -> mHideAnimationRun
    boolean mHideAnimationRunning -> mHideAnimationRunning
    boolean mHiding -> mHiding
    boolean mInputRestricted -> mInputRestricted
    com.android.keyguard.KeyguardDisplayManager mKeyguardDisplayManager -> mKeyguardDisplayManager
    boolean mKeyguardDonePending -> mKeyguardDonePending
    java.lang.Runnable mKeyguardGoingAwayRunnable -> mKeyguardGoingAwayRunnable
    java.util.ArrayList mKeyguardStateCallbacks -> mKeyguardStateCallbacks
    boolean mLockLater -> mLockLater
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    int mLockSoundId -> mLockSoundId
    int mLockSoundStreamId -> mLockSoundStreamId
    float mLockSoundVolume -> mLockSoundVolume
    android.media.SoundPool mLockSounds -> mLockSounds
    boolean mLockWhenSimRemoved -> mLockWhenSimRemoved
    boolean mNeedToReshowWhenReenabled -> mNeedToReshowWhenReenabled
    boolean mOccluded -> mOccluded
    android.os.PowerManager mPM -> mPM
    boolean mPendingLock -> mPendingLock
    boolean mPendingReset -> mPendingReset
    java.lang.String mPhoneState -> mPhoneState
    int mSecondaryDisplayShowing -> mSecondaryDisplayShowing
    android.os.PowerManager$WakeLock mShowKeyguardWakeLock -> mShowKeyguardWakeLock
    boolean mShowing -> mShowing
    boolean mShuttingDown -> mShuttingDown
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager mStatusBarKeyguardViewManager -> mStatusBarKeyguardViewManager
    android.app.StatusBarManager mStatusBarManager -> mStatusBarManager
    boolean mSystemReady -> mSystemReady
    android.app.trust.TrustManager mTrustManager -> mTrustManager
    int mTrustedSoundId -> mTrustedSoundId
    com.android.systemui.UiOffloadThread mUiOffloadThread -> mUiOffloadThread
    int mUiSoundsStreamType -> mUiSoundsStreamType
    int mUnlockSoundId -> mUnlockSoundId
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateCallback -> mUpdateCallback
    com.android.keyguard.KeyguardUpdateMonitor mUpdateMonitor -> mUpdateMonitor
    com.android.keyguard.ViewMediatorCallback mViewMediatorCallback -> mViewMediatorCallback
    boolean mWaitingUntilKeyguardVisible -> mWaitingUntilKeyguardVisible
    boolean mWakeAndUnlocking -> mWakeAndUnlocking
    com.android.systemui.keyguard.WorkLockActivityController mWorkLockController -> mWorkLockController
    void userActivity() -> userActivity
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager registerStatusBar(com.android.systemui.statusbar.phone.StatusBar,android.view.ViewGroup,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.FingerprintUnlockController) -> registerStatusBar
    com.android.keyguard.ViewMediatorCallback getViewMediatorCallback() -> getViewMediatorCallback
    void onWakeAndUnlocking() -> onWakeAndUnlocking
    void <init>() -> <init>
    void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback) -> addStateMonitorCallback
    void adjustStatusBarLocked() -> adjustStatusBarLocked
    void cancelDoKeyguardForChildProfilesLocked() -> cancelDoKeyguardForChildProfilesLocked
    void cancelDoKeyguardLaterLocked() -> cancelDoKeyguardLaterLocked
    void dismiss(com.android.internal.policy.IKeyguardDismissCallback) -> dismiss
    void doKeyguardForChildProfilesLocked() -> doKeyguardForChildProfilesLocked
    void doKeyguardLaterForChildProfilesLocked() -> doKeyguardLaterForChildProfilesLocked
    void doKeyguardLaterLocked() -> doKeyguardLaterLocked
    void doKeyguardLaterLocked(long) -> doKeyguardLaterLocked
    void doKeyguardLocked(android.os.Bundle) -> doKeyguardLocked
    void doKeyguardTimeout(android.os.Bundle) -> doKeyguardTimeout
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    com.android.internal.widget.LockPatternUtils getLockPatternUtils() -> getLockPatternUtils
    long getLockTimeout(int) -> getLockTimeout
    void handleDismiss(com.android.internal.policy.IKeyguardDismissCallback) -> handleDismiss
    void handleHide() -> handleHide
    void handleKeyguardDone() -> handleKeyguardDone
    void handleKeyguardDoneDrawing() -> handleKeyguardDoneDrawing
    void handleNotifyFinishedGoingToSleep() -> handleNotifyFinishedGoingToSleep
    void handleNotifyScreenTurnedOff() -> handleNotifyScreenTurnedOff
    void handleNotifyScreenTurnedOn() -> handleNotifyScreenTurnedOn
    void handleNotifyScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback) -> handleNotifyScreenTurningOn
    void handleNotifyStartedGoingToSleep() -> handleNotifyStartedGoingToSleep
    void handleNotifyStartedWakingUp() -> handleNotifyStartedWakingUp
    void handleReset() -> handleReset
    void handleSetOccluded(boolean,boolean) -> handleSetOccluded
    void handleShow(android.os.Bundle) -> handleShow
    void handleStartKeyguardExitAnimation(long,long) -> handleStartKeyguardExitAnimation
    void handleVerifyUnlock() -> handleVerifyUnlock
    void hideLocked() -> hideLocked
    boolean isInputRestricted() -> isInputRestricted
    boolean isSecure() -> isSecure
    boolean isSecure(int) -> isSecure
    boolean isShowingAndNotOccluded() -> isShowingAndNotOccluded
    void keyguardDone() -> keyguardDone
    void lockProfile(int) -> lockProfile
    void maybeSendUserPresentBroadcast() -> maybeSendUserPresentBroadcast
    boolean mustNotUnlockCurrentUser() -> mustNotUnlockCurrentUser
    void notifyDefaultDisplayCallbacks(boolean) -> notifyDefaultDisplayCallbacks
    void notifyDrawn(com.android.internal.policy.IKeyguardDrawnCallback) -> notifyDrawn
    void notifyFinishedGoingToSleep() -> notifyFinishedGoingToSleep
    void notifyHasLockscreenWallpaperChanged(boolean) -> notifyHasLockscreenWallpaperChanged
    void notifyScreenOn(com.android.internal.policy.IKeyguardDrawnCallback) -> notifyScreenOn
    void notifyScreenTurnedOff() -> notifyScreenTurnedOff
    void notifyScreenTurnedOn() -> notifyScreenTurnedOn
    void notifyStartedGoingToSleep() -> notifyStartedGoingToSleep
    void notifyStartedWakingUp() -> notifyStartedWakingUp
    void notifyTrustedChangedLocked(boolean) -> notifyTrustedChangedLocked
    void onBootCompleted() -> onBootCompleted
    void onDreamingStarted() -> onDreamingStarted
    void onDreamingStopped() -> onDreamingStopped
    void onFinishedGoingToSleep(int,boolean) -> onFinishedGoingToSleep
    void onScreenTurnedOff() -> onScreenTurnedOff
    void onScreenTurnedOn() -> onScreenTurnedOn
    void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback) -> onScreenTurningOn
    void onShortPowerPressedGoHome() -> onShortPowerPressedGoHome
    void onStartedGoingToSleep(int) -> onStartedGoingToSleep
    void onStartedWakingUp() -> onStartedWakingUp
    void onSystemReady() -> onSystemReady
    void playSound(int) -> playSound
    void playSounds(boolean) -> playSounds
    void playTrustedSound() -> playTrustedSound
    void resetKeyguardDonePendingLocked() -> resetKeyguardDonePendingLocked
    void resetStateLocked() -> resetStateLocked
    void sendUserPresentBroadcast() -> sendUserPresentBroadcast
    void setCurrentUser(int) -> setCurrentUser
    void setKeyguardEnabled(boolean) -> setKeyguardEnabled
    void setOccluded(boolean,boolean) -> setOccluded
    void setShowingLocked(boolean) -> setShowingLocked
    void setShowingLocked(boolean,int,boolean) -> setShowingLocked
    void setSwitchingUser(boolean) -> setSwitchingUser
    void setupLocked() -> setupLocked
    boolean shouldWaitForProvisioning() -> shouldWaitForProvisioning
    void showLocked(android.os.Bundle) -> showLocked
    void start() -> start
    void startKeyguardExitAnimation(long,long) -> startKeyguardExitAnimation
    void tryKeyguardDone() -> tryKeyguardDone
    void updateActivityLockScreenState(boolean,int) -> updateActivityLockScreenState
    void updateInputRestricted() -> updateInputRestricted
    void updateInputRestrictedLocked() -> updateInputRestrictedLocked
    void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback) -> verifyUnlock
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_keyguard_KeyguardViewMediator_73777() -> lambda$-com_android_systemui_keyguard_KeyguardViewMediator_73777
    void lambda$-com_android_systemui_keyguard_KeyguardViewMediator_66540(int) -> lambda$-com_android_systemui_keyguard_KeyguardViewMediator_66540
    void lambda$-com_android_systemui_keyguard_KeyguardViewMediator_68176(android.os.UserManager,android.os.UserHandle,int) -> lambda$-com_android_systemui_keyguard_KeyguardViewMediator_68176
    void lambda$-com_android_systemui_keyguard_KeyguardViewMediator_70204(int) -> lambda$-com_android_systemui_keyguard_KeyguardViewMediator_70204
    void lambda$-com_android_systemui_keyguard_KeyguardViewMediator_70849(boolean,int) -> lambda$-com_android_systemui_keyguard_KeyguardViewMediator_70849
    void lambda$-com_android_systemui_keyguard_KeyguardViewMediator_86758() -> lambda$-com_android_systemui_keyguard_KeyguardViewMediator_86758
    int -get0(com.android.systemui.keyguard.KeyguardViewMediator) -> -get0
    int -get1(com.android.systemui.keyguard.KeyguardViewMediator) -> -get1
    boolean -get2(com.android.systemui.keyguard.KeyguardViewMediator) -> -get2
    boolean -get3(com.android.systemui.keyguard.KeyguardViewMediator) -> -get3
    android.os.Handler -get4(com.android.systemui.keyguard.KeyguardViewMediator) -> -get4
    java.lang.Runnable -get5(com.android.systemui.keyguard.KeyguardViewMediator) -> -get5
    com.android.keyguard.KeyguardDisplayManager -get6(com.android.systemui.keyguard.KeyguardViewMediator) -> -get6
    boolean -get7(com.android.systemui.keyguard.KeyguardViewMediator) -> -get7
    java.util.ArrayList -get8(com.android.systemui.keyguard.KeyguardViewMediator) -> -get8
    com.android.internal.widget.LockPatternUtils -get9(com.android.systemui.keyguard.KeyguardViewMediator) -> -get9
    boolean -get10(com.android.systemui.keyguard.KeyguardViewMediator) -> -get10
    boolean -get11(com.android.systemui.keyguard.KeyguardViewMediator) -> -get11
    boolean -get12(com.android.systemui.keyguard.KeyguardViewMediator) -> -get12
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager -get13(com.android.systemui.keyguard.KeyguardViewMediator) -> -get13
    android.app.trust.TrustManager -get14(com.android.systemui.keyguard.KeyguardViewMediator) -> -get14
    com.android.keyguard.KeyguardUpdateMonitor -get15(com.android.systemui.keyguard.KeyguardViewMediator) -> -get15
    boolean -get16(com.android.systemui.keyguard.KeyguardViewMediator) -> -get16
    boolean -set0(com.android.systemui.keyguard.KeyguardViewMediator,boolean) -> -set0
    boolean -set1(com.android.systemui.keyguard.KeyguardViewMediator,boolean) -> -set1
    boolean -set2(com.android.systemui.keyguard.KeyguardViewMediator,boolean) -> -set2
    boolean -set3(com.android.systemui.keyguard.KeyguardViewMediator,boolean) -> -set3
    boolean -set4(com.android.systemui.keyguard.KeyguardViewMediator,boolean) -> -set4
    boolean -wrap0(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap0
    void -wrap1(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap1
    void -wrap2(com.android.systemui.keyguard.KeyguardViewMediator,android.os.Bundle) -> -wrap2
    void -wrap3(com.android.systemui.keyguard.KeyguardViewMediator,com.android.internal.policy.IKeyguardDismissCallback) -> -wrap3
    void -wrap4(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap4
    void -wrap5(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap5
    void -wrap6(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap6
    void -wrap7(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap7
    void -wrap8(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap8
    void -wrap9(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap9
    void -wrap10(com.android.systemui.keyguard.KeyguardViewMediator,com.android.internal.policy.IKeyguardDrawnCallback) -> -wrap10
    void -wrap11(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap11
    void -wrap12(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap12
    void -wrap13(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap13
    void -wrap14(com.android.systemui.keyguard.KeyguardViewMediator,boolean,boolean) -> -wrap14
    void -wrap15(com.android.systemui.keyguard.KeyguardViewMediator,android.os.Bundle) -> -wrap15
    void -wrap16(com.android.systemui.keyguard.KeyguardViewMediator,long,long) -> -wrap16
    void -wrap17(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap17
    void -wrap18(com.android.systemui.keyguard.KeyguardViewMediator,int) -> -wrap18
    void -wrap19(com.android.systemui.keyguard.KeyguardViewMediator,boolean) -> -wrap19
    void -wrap20(com.android.systemui.keyguard.KeyguardViewMediator,boolean) -> -wrap20
    void -wrap21(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap21
    void -wrap22(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap22
    void -wrap23(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap23
    void -wrap24(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap24
    void -wrap25(com.android.systemui.keyguard.KeyguardViewMediator,boolean,int,boolean) -> -wrap25
    void -wrap26(com.android.systemui.keyguard.KeyguardViewMediator) -> -wrap26
android.support.v17.leanback.widget.ItemAlignmentFacetHelper -> android.support.v17.leanback.widget.ItemAlignmentFacetHelper:
    android.graphics.Rect sRect -> sRect
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    int getAlignmentPosition(android.view.View,android.support.v17.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef,int) -> getAlignmentPosition
android.support.v7.media.MediaRouterJellybean$VolumeCallbackProxy -> android.support.v7.media.MediaRouterJellybean$VolumeCallbackProxy:
    android.support.v7.media.MediaRouterJellybean$VolumeCallback mCallback -> mCallback
    void onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeUpdateRequest
    void onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeSetRequest
    void <init>(android.support.v7.media.MediaRouterJellybean$VolumeCallback) -> <init>
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    int mLayout -> mLayout
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
    void <init>(java.lang.String) -> <init>
com.android.systemui.keyguard.KeyguardService$1 -> com.android.systemui.keyguard.KeyguardService$1:
    com.android.systemui.keyguard.KeyguardService this$0 -> this$0
    void <init>(com.android.systemui.keyguard.KeyguardService) -> <init>
    void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback) -> addStateMonitorCallback
    void dismiss(com.android.internal.policy.IKeyguardDismissCallback) -> dismiss
    void doKeyguardTimeout(android.os.Bundle) -> doKeyguardTimeout
    void onBootCompleted() -> onBootCompleted
    void onDreamingStarted() -> onDreamingStarted
    void onDreamingStopped() -> onDreamingStopped
    void onFinishedGoingToSleep(int,boolean) -> onFinishedGoingToSleep
    void onFinishedWakingUp() -> onFinishedWakingUp
    void onScreenTurnedOff() -> onScreenTurnedOff
    void onScreenTurnedOn() -> onScreenTurnedOn
    void onScreenTurningOff() -> onScreenTurningOff
    void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback) -> onScreenTurningOn
    void onShortPowerPressedGoHome() -> onShortPowerPressedGoHome
    void onStartedGoingToSleep(int) -> onStartedGoingToSleep
    void onStartedWakingUp() -> onStartedWakingUp
    void onSystemReady() -> onSystemReady
    void setCurrentUser(int) -> setCurrentUser
    void setKeyguardEnabled(boolean) -> setKeyguardEnabled
    void setOccluded(boolean,boolean) -> setOccluded
    void setSwitchingUser(boolean) -> setSwitchingUser
    void startKeyguardExitAnimation(long,long) -> startKeyguardExitAnimation
    void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback) -> verifyUnlock
com.android.systemui.settings.BrightnessController$10 -> com.android.systemui.settings.BrightnessController$10:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    float val$adj -> val$adj
    void <init>(com.android.systemui.settings.BrightnessController,float) -> <init>
    void run() -> run
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionClick(int) -> onSuggestionClick
    boolean onSuggestionSelect(int) -> onSuggestionSelect
com.android.systemui.volume.MediaSessions -> com.android.systemui.volume.MediaSessions:
    java.lang.String TAG -> TAG
    com.android.systemui.volume.MediaSessions$Callbacks mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    com.android.systemui.volume.MediaSessions$H mHandler -> mHandler
    boolean mInit -> mInit
    android.media.session.MediaSessionManager mMgr -> mMgr
    java.util.Map mRecords -> mRecords
    android.media.IRemoteVolumeController mRvc -> mRvc
    android.media.session.MediaSessionManager$OnActiveSessionsChangedListener mSessionsListener -> mSessionsListener
    void <init>(android.content.Context,android.os.Looper,com.android.systemui.volume.MediaSessions$Callbacks) -> <init>
    void dump(java.io.PrintWriter) -> dump
    void dump(int,java.io.PrintWriter,android.media.session.MediaController) -> dump
    java.lang.String getControllerName(android.media.session.MediaController) -> getControllerName
    void init() -> init
    boolean isRemote(android.media.session.MediaController$PlaybackInfo) -> isRemote
    void onActiveSessionsUpdatedH(java.util.List) -> onActiveSessionsUpdatedH
    void onRemoteVolumeChangedH(android.media.session.ISessionController,int) -> onRemoteVolumeChangedH
    void onUpdateRemoteControllerH(android.media.session.ISessionController) -> onUpdateRemoteControllerH
    void postUpdateSessions() -> postUpdateSessions
    void setVolume(android.media.session.MediaSession$Token,int) -> setVolume
    void updateRemoteH(android.media.session.MediaSession$Token,java.lang.String,android.media.session.MediaController$PlaybackInfo) -> updateRemoteH
    void <clinit>() -> <clinit>
    java.lang.String -get0() -> -get0
    com.android.systemui.volume.MediaSessions$Callbacks -get1(com.android.systemui.volume.MediaSessions) -> -get1
    com.android.systemui.volume.MediaSessions$H -get2(com.android.systemui.volume.MediaSessions) -> -get2
    android.media.session.MediaSessionManager -get3(com.android.systemui.volume.MediaSessions) -> -get3
    boolean -wrap0(android.media.session.MediaController$PlaybackInfo) -> -wrap0
    void -wrap1(com.android.systemui.volume.MediaSessions,android.media.session.ISessionController,int) -> -wrap1
    void -wrap2(com.android.systemui.volume.MediaSessions,android.media.session.ISessionController) -> -wrap2
    void -wrap3(com.android.systemui.volume.MediaSessions,android.media.session.MediaSession$Token,java.lang.String,android.media.session.MediaController$PlaybackInfo) -> -wrap3
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    java.lang.ref.WeakReference mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    void onShuffleModeChangedDeprecated(boolean) -> onShuffleModeChangedDeprecated
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
    void onRepeatModeChanged(int) -> onRepeatModeChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionReady() -> onSessionReady
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onShuffleModeChanged(int) -> onShuffleModeChanged
com.android.systemui.plugins.R$mipmap -> com.android.systemui.plugins.R$mipmap:
    int ic_daydreams -> ic_daydreams
    int ic_launcher_dreams -> ic_launcher_dreams
    void <init>() -> <init>
com.android.keyguard.KeyguardSecurityView -> com.android.keyguard.KeyguardSecurityView:
    boolean needsInput() -> needsInput
    void onPause() -> onPause
    void onResume(int) -> onResume
    void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback) -> setKeyguardCallback
    void setLockPatternUtils(com.android.internal.widget.LockPatternUtils) -> setLockPatternUtils
    void showMessage(java.lang.String,int) -> showMessage
    void showPromptReason(int) -> showPromptReason
    void startAppearAnimation() -> startAppearAnimation
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
android.support.v17.leanback.transition.SlideKitkat$6 -> android.support.v17.leanback.transition.SlideKitkat$6:
    void <init>() -> <init>
    float getGone(android.view.View) -> getGone
com.android.systemui.plugins.VersionInfo -> com.android.systemui.plugins.VersionInfo:
    java.lang.Class mDefault -> mDefault
    android.util.ArrayMap mVersions -> mVersions
    void <init>() -> <init>
    com.android.systemui.plugins.VersionInfo addClass(java.lang.Class) -> addClass
    void addClass(java.lang.Class,boolean) -> addClass
    void checkVersion(com.android.systemui.plugins.VersionInfo) -> checkVersion
    com.android.systemui.plugins.VersionInfo$Version createVersion(java.lang.Class) -> createVersion
    int getDefaultVersion() -> getDefaultVersion
    boolean hasClass(java.lang.Class) -> hasClass
    boolean hasVersionInfo() -> hasVersionInfo
    void lambda$-com_android_systemui_plugins_VersionInfo_2940(android.util.ArrayMap,java.lang.Class,com.android.systemui.plugins.VersionInfo$Version) -> lambda$-com_android_systemui_plugins_VersionInfo_2940
    void lambda$-com_android_systemui_plugins_VersionInfo_3527(java.lang.Class,com.android.systemui.plugins.VersionInfo$Version) -> lambda$-com_android_systemui_plugins_VersionInfo_3527
com.android.settingslib.bluetooth.BluetoothEventManager$Handler -> com.android.settingslib.bluetooth.BluetoothEventManager$Handler:
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
com.android.systemui.plugins.PluginManagerImpl$PluginExceptionHandler -> com.android.systemui.plugins.PluginManagerImpl$PluginExceptionHandler:
    java.lang.Thread$UncaughtExceptionHandler mHandler -> mHandler
    com.android.systemui.plugins.PluginManagerImpl this$0 -> this$0
    void <init>(com.android.systemui.plugins.PluginManagerImpl,java.lang.Thread$UncaughtExceptionHandler) -> <init>
    boolean checkStack(java.lang.Throwable) -> checkStack
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void <init>(com.android.systemui.plugins.PluginManagerImpl,java.lang.Thread$UncaughtExceptionHandler,com.android.systemui.plugins.PluginManagerImpl$PluginExceptionHandler) -> <init>
com.android.systemui.qs.tiles.CellularTile -> com.android.systemui.qs.tiles.CellularTile:
    android.content.Intent CELLULAR_SETTINGS -> CELLULAR_SETTINGS
    android.content.ComponentName CELLULAR_SETTING_COMPONENT -> CELLULAR_SETTING_COMPONENT
    android.content.ComponentName DATA_PLAN_CELLULAR_COMPONENT -> DATA_PLAN_CELLULAR_COMPONENT
    android.content.Intent DATA_PLAN_CELLULAR_SETTINGS -> DATA_PLAN_CELLULAR_SETTINGS
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    com.android.systemui.statusbar.policy.NetworkController mController -> mController
    com.android.settingslib.net.DataUsageController mDataController -> mDataController
    com.android.systemui.qs.tiles.CellularTile$CellularDetailAdapter mDetailAdapter -> mDetailAdapter
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguardMonitor -> mKeyguardMonitor
    com.android.systemui.qs.tiles.CellularTile$CellSignalCallback mSignalCallback -> mSignalCallback
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    com.android.systemui.plugins.qs.QSIconView createTileView(android.content.Context) -> createTileView
    android.content.Intent getCellularSettingIntent(android.content.Context) -> getCellularSettingIntent
    com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter() -> getDetailAdapter
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSecondaryClick() -> handleSecondaryClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$SignalState,java.lang.Object) -> handleUpdateState
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$SignalState newTileState() -> newTileState
    void showDisableDialog() -> showDisableDialog
    void <clinit>() -> <clinit>
    void -com_android_systemui_qs_tiles_CellularTile-mthref-0() -> -com_android_systemui_qs_tiles_CellularTile-mthref-0
    void -com_android_systemui_qs_tiles_CellularTile-mthref-1() -> -com_android_systemui_qs_tiles_CellularTile-mthref-1
    void lambda$-com_android_systemui_qs_tiles_CellularTile_5270(android.content.DialogInterface,int) -> lambda$-com_android_systemui_qs_tiles_CellularTile_5270
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    android.content.Context -get0(com.android.systemui.qs.tiles.CellularTile) -> -get0
    com.android.settingslib.net.DataUsageController -get1(com.android.systemui.qs.tiles.CellularTile) -> -get1
    com.android.systemui.qs.tiles.CellularTile$CellularDetailAdapter -get2(com.android.systemui.qs.tiles.CellularTile) -> -get2
    com.android.systemui.qs.tiles.CellularTile$CellSignalCallback -get3(com.android.systemui.qs.tiles.CellularTile) -> -get3
    void -wrap0(com.android.systemui.qs.tiles.CellularTile,java.lang.Object) -> -wrap0
com.android.systemui.statusbar.policy.Clock -> com.android.systemui.statusbar.policy.Clock:
    int mAmPmStyle -> mAmPmStyle
    boolean mAttached -> mAttached
    java.util.Calendar mCalendar -> mCalendar
    java.text.SimpleDateFormat mClockFormat -> mClockFormat
    java.lang.String mClockFormatString -> mClockFormatString
    boolean mClockVisibleByPolicy -> mClockVisibleByPolicy
    boolean mClockVisibleByUser -> mClockVisibleByUser
    java.text.SimpleDateFormat mContentDescriptionFormat -> mContentDescriptionFormat
    boolean mDemoMode -> mDemoMode
    android.content.BroadcastReceiver mIntentReceiver -> mIntentReceiver
    java.util.Locale mLocale -> mLocale
    android.content.BroadcastReceiver mScreenReceiver -> mScreenReceiver
    java.lang.Runnable mSecondTick -> mSecondTick
    android.os.Handler mSecondsHandler -> mSecondsHandler
    boolean mShowDark -> mShowDark
    boolean mShowSeconds -> mShowSeconds
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void disable(int,int,boolean) -> disable
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
    java.lang.CharSequence getSmallTime() -> getSmallTime
    void onAttachedToWindow() -> onAttachedToWindow
    void onDarkChanged(android.graphics.Rect,float,int) -> onDarkChanged
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void setClockVisibilityByPolicy(boolean) -> setClockVisibilityByPolicy
    void setClockVisibleByUser(boolean) -> setClockVisibleByUser
    void updateClock() -> updateClock
    void updateClockVisibility() -> updateClockVisibility
    void updateShowSeconds() -> updateShowSeconds
    java.util.Calendar -get0(com.android.systemui.statusbar.policy.Clock) -> -get0
    java.text.SimpleDateFormat -get1(com.android.systemui.statusbar.policy.Clock) -> -get1
    java.util.Locale -get2(com.android.systemui.statusbar.policy.Clock) -> -get2
    java.lang.Runnable -get3(com.android.systemui.statusbar.policy.Clock) -> -get3
    android.os.Handler -get4(com.android.systemui.statusbar.policy.Clock) -> -get4
    java.util.Calendar -set0(com.android.systemui.statusbar.policy.Clock,java.util.Calendar) -> -set0
    java.lang.String -set1(com.android.systemui.statusbar.policy.Clock,java.lang.String) -> -set1
    java.util.Locale -set2(com.android.systemui.statusbar.policy.Clock,java.util.Locale) -> -set2
com.android.systemui.screenshot.GlobalScreenshot$10 -> com.android.systemui.screenshot.GlobalScreenshot$10:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.QSPanel$QSTileLayout -> com.android.systemui.qs.QSPanel$QSTileLayout:
    void removeTile(com.android.systemui.qs.QSPanel$TileRecord) -> removeTile
    void setListening(boolean) -> setListening
    void addTile(com.android.systemui.qs.QSPanel$TileRecord) -> addTile
    int getOffsetTop(com.android.systemui.qs.QSPanel$TileRecord) -> getOffsetTop
    boolean updateResources() -> updateResources
com.android.systemui.recents.events.activity.LaunchTaskFailedEvent -> com.android.systemui.recents.events.activity.LaunchTaskFailedEvent:
    void <init>() -> <init>
android.support.v17.leanback.widget.ListRowView -> android.support.v17.leanback.widget.ListRowView:
    android.support.v17.leanback.widget.HorizontalGridView mGridView -> mGridView
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener -> android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(android.support.v7.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.android.systemui.statusbar.-$Lambda$lHCf4iJXJj1ODt2YAfgGVLZsSQw -> com.android.systemui.statusbar.-$Lambda$lHCf4iJXJj1ODt2YAfgGVLZsSQw:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(int) -> $m$0
    void onVisibilityChanged(int) -> onVisibilityChanged
com.android.systemui.tuner.TunerPreferenceFragment -> com.android.systemui.tuner.TunerPreferenceFragment:
    void <init>() -> <init>
    void onDisplayPreferenceDialog(android.support.v7.preference.Preference) -> onDisplayPreferenceDialog
android.support.v7.widget.AppCompatTextHelperV17 -> android.support.v7.widget.AppCompatTextHelperV17:
    android.support.v7.widget.TintInfo mDrawableEndTint -> mDrawableEndTint
    android.support.v7.widget.TintInfo mDrawableStartTint -> mDrawableStartTint
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    void <init>(android.widget.TextView) -> <init>
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable:
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mPopup -> mPopup
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    void run() -> run
com.android.systemui.volume.Events -> com.android.systemui.volume.Events:
    java.lang.String[] DISMISS_REASONS -> DISMISS_REASONS
    java.lang.String[] EVENT_TAGS -> EVENT_TAGS
    java.lang.String[] SHOW_REASONS -> SHOW_REASONS
    java.lang.String TAG -> TAG
    com.android.systemui.volume.Events$Callback sCallback -> sCallback
    void <init>() -> <init>
    java.lang.String iconStateToString(int) -> iconStateToString
    java.lang.String ringerModeToString(int) -> ringerModeToString
    void writeEvent(android.content.Context,int,java.lang.Object[]) -> writeEvent
    void writeState(long,com.android.systemui.plugins.VolumeDialogController$State) -> writeState
    java.lang.String zenModeToString(int) -> zenModeToString
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.notification.FakeShadowView -> com.android.systemui.statusbar.notification.FakeShadowView:
    android.view.View mFakeShadow -> mFakeShadow
    float mOutlineAlpha -> mOutlineAlpha
    int mShadowMinHeight -> mShadowMinHeight
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setFakeShadowTranslationZ(float,float,int,int) -> setFakeShadowTranslationZ
    android.view.View -get0(com.android.systemui.statusbar.notification.FakeShadowView) -> -get0
    float -get1(com.android.systemui.statusbar.notification.FakeShadowView) -> -get1
com.android.systemui.recents.views.TaskView -> com.android.systemui.recents.views.TaskView:
    com.android.systemui.recents.views.TaskViewThumbnail mThumbnailView -> mThumbnailView
    com.android.systemui.recents.views.TaskViewHeader mHeaderView -> mHeaderView
    android.util.Property DIM_ALPHA -> DIM_ALPHA
    android.util.Property DIM_ALPHA_WITHOUT_HEADER -> DIM_ALPHA_WITHOUT_HEADER
    android.util.Property VIEW_OUTLINE_ALPHA -> VIEW_OUTLINE_ALPHA
    float mActionButtonTranslationZ -> mActionButtonTranslationZ
    android.view.View mActionButtonView -> mActionButtonView
    com.android.systemui.recents.views.TaskView$TaskViewCallbacks mCb -> mCb
    boolean mClipViewInStack -> mClipViewInStack
    float mDimAlpha -> mDimAlpha
    android.animation.ObjectAnimator mDimAnimator -> mDimAnimator
    android.widget.Toast mDisabledAppToast -> mDisabledAppToast
    android.graphics.Point mDownTouchPos -> mDownTouchPos
    android.view.View mIncompatibleAppToastView -> mIncompatibleAppToastView
    boolean mIsDisabledInSafeMode -> mIsDisabledInSafeMode
    android.animation.ObjectAnimator mOutlineAnimator -> mOutlineAnimator
    com.android.systemui.recents.views.TaskViewTransform mTargetAnimationTransform -> mTargetAnimationTransform
    com.android.systemui.recents.model.Task mTask -> mTask
    boolean mTaskBound -> mTaskBound
    java.util.ArrayList mTmpAnimators -> mTmpAnimators
    boolean mTouchExplorationEnabled -> mTouchExplorationEnabled
    android.animation.AnimatorSet mTransformAnimation -> mTransformAnimation
    com.android.systemui.recents.views.AnimateableViewBounds mViewBounds -> mViewBounds
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void onFinishInflate() -> onFinishInflate
    void onConfigurationChanged() -> onConfigurationChanged
    void dismissTask() -> dismissTask
    com.android.systemui.recents.model.Task getTask() -> getTask
    void startNoUserInteractionAnimation() -> startNoUserInteractionAnimation
    void onReload(boolean) -> onReload
    boolean isAnimatingTo(com.android.systemui.recents.views.TaskViewTransform) -> isAnimatingTo
    void cancelTransformAnimation() -> cancelTransformAnimation
    void updateViewPropertiesToTaskTransform(com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.AnimationProps,android.animation.ValueAnimator$AnimatorUpdateListener) -> updateViewPropertiesToTaskTransform
    boolean shouldClipViewInStack() -> shouldClipViewInStack
    com.android.systemui.recents.views.AnimateableViewBounds getViewBounds() -> getViewBounds
    com.android.systemui.recents.views.TaskViewHeader getHeaderView() -> getHeaderView
    void setFocusedState(boolean,boolean) -> setFocusedState
    void showActionButton(boolean,int) -> showActionButton
    void resetViewProperties() -> resetViewProperties
    void setClipViewInStack(boolean) -> setClipViewInStack
    void hideActionButton(boolean,int,boolean,android.animation.Animator$AnimatorListener) -> hideActionButton
    void setCallbacks(com.android.systemui.recents.views.TaskView$TaskViewCallbacks) -> setCallbacks
    void setTouchEnabled(boolean) -> setTouchEnabled
    void onTaskBound(com.android.systemui.recents.model.Task,boolean,int,android.graphics.Rect) -> onTaskBound
    void setNoUserInteractionState() -> setNoUserInteractionState
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void cancelDimAnimationIfExists() -> cancelDimAnimationIfExists
    com.android.systemui.recents.views.AnimateableViewBounds createOutlineProvider() -> createOutlineProvider
    float getDimAlpha() -> getDimAlpha
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void measureContents(int,int) -> measureContents
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent) -> onBusEvent
    void onClick(android.view.View) -> onClick
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onLongClick(android.view.View) -> onLongClick
    void onPrepareLaunchTargetForEnterAnimation() -> onPrepareLaunchTargetForEnterAnimation
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onStartFrontTaskEnterAnimation(boolean) -> onStartFrontTaskEnterAnimation
    void onStartLaunchTargetEnterAnimation(com.android.systemui.recents.views.TaskViewTransform,int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> onStartLaunchTargetEnterAnimation
    void onStartLaunchTargetLaunchAnimation(int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> onStartLaunchTargetLaunchAnimation
    void onTaskDataLoaded(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.ThumbnailData) -> onTaskDataLoaded
    void onTaskDataUnloaded() -> onTaskDataUnloaded
    void onTaskStackIdChanged() -> onTaskStackIdChanged
    void resetNoUserInteractionState() -> resetNoUserInteractionState
    void setDimAlpha(float) -> setDimAlpha
    void setDimAlphaWithoutHeader(float) -> setDimAlphaWithoutHeader
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_recents_views_TaskView_27891() -> lambda$-com_android_systemui_recents_views_TaskView_27891
    void lambda$-com_android_systemui_recents_views_TaskView_28304() -> lambda$-com_android_systemui_recents_views_TaskView_28304
    android.view.View -get0(com.android.systemui.recents.views.TaskView) -> -get0
    com.android.systemui.recents.model.Task -get1(com.android.systemui.recents.views.TaskView) -> -get1
com.android.systemui.util.leak.-$Lambda$mhfXwkSkgp7i941uE4Iktf2bLLE -> com.android.systemui.util.leak.-$Lambda$mhfXwkSkgp7i941uE4Iktf2bLLE:
    byte $id -> $id
    com.android.systemui.util.leak.-$Lambda$mhfXwkSkgp7i941uE4Iktf2bLLE $INST$0 -> $INST$0
    com.android.systemui.util.leak.-$Lambda$mhfXwkSkgp7i941uE4Iktf2bLLE $INST$1 -> $INST$1
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    boolean $m$0(java.lang.Object) -> $m$0
    boolean $m$1(java.lang.Object) -> $m$1
    boolean test(java.lang.Object) -> test
android.support.v17.leanback.widget.MediaRowFocusView -> android.support.v17.leanback.widget.MediaRowFocusView:
    int mRoundRectRadius -> mRoundRectRadius
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mRoundRectF -> mRoundRectF
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.graphics.Paint createPaint(android.content.Context) -> createPaint
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
android.support.v17.leanback.widget.picker.PickerUtility -> android.support.v17.leanback.widget.picker.PickerUtility:
    boolean SUPPORTS_BEST_DATE_TIME_PATTERN -> SUPPORTS_BEST_DATE_TIME_PATTERN
    void <clinit>() -> <clinit>
    java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale) -> getCalendarForLocale
    android.support.v17.leanback.widget.picker.PickerUtility$DateConstant getDateConstantInstance(java.util.Locale,android.content.res.Resources) -> getDateConstantInstance
    java.lang.String[] createStringIntArrays(int,int,java.lang.String) -> createStringIntArrays
    android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant getTimeConstantInstance(java.util.Locale,android.content.res.Resources) -> getTimeConstantInstance
    void <init>() -> <init>
android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener -> android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener:
    boolean mIsBack -> mIsBack
    int mNumPostponed -> mNumPostponed
    android.support.v4.app.BackStackRecord mRecord -> mRecord
    boolean isReady() -> isReady
    void onStartEnterTransition() -> onStartEnterTransition
    android.support.v4.app.BackStackRecord -get1(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener) -> -get1
    void cancelTransaction() -> cancelTransaction
    void completeTransaction() -> completeTransaction
    void startListening() -> startListening
    boolean -get0(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener) -> -get0
    void <init>(android.support.v4.app.BackStackRecord,boolean) -> <init>
com.android.systemui.statusbar.policy.MobileSignalController$1 -> com.android.systemui.statusbar.policy.MobileSignalController$1:
    com.android.systemui.statusbar.policy.MobileSignalController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.MobileSignalController,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
android.support.v7.widget.ActivityChooserModel$ActivitySorter -> android.support.v7.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.android.systemui.statusbar.phone.NotificationGroupManager -> com.android.systemui.statusbar.phone.NotificationGroupManager:
    int mBarState -> mBarState
    java.util.HashMap mGroupMap -> mGroupMap
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    boolean mIsUpdatingUnchangedGroup -> mIsUpdatingUnchangedGroup
    java.util.HashMap mIsolatedEntries -> mIsolatedEntries
    com.android.systemui.statusbar.phone.NotificationGroupManager$OnGroupChangeListener mListener -> mListener
    void onEntryAdded(com.android.systemui.statusbar.NotificationData$Entry) -> onEntryAdded
    void onEntryRemoved(com.android.systemui.statusbar.NotificationData$Entry) -> onEntryRemoved
    void onEntryUpdated(com.android.systemui.statusbar.NotificationData$Entry,android.service.notification.StatusBarNotification) -> onEntryUpdated
    boolean isChildInGroupWithSummary(android.service.notification.StatusBarNotification) -> isChildInGroupWithSummary
    com.android.systemui.statusbar.ExpandableNotificationRow getGroupSummary(android.service.notification.StatusBarNotification) -> getGroupSummary
    boolean isOnlyChildInGroup(android.service.notification.StatusBarNotification) -> isOnlyChildInGroup
    com.android.systemui.statusbar.ExpandableNotificationRow getLogicalGroupSummary(android.service.notification.StatusBarNotification) -> getLogicalGroupSummary
    void <init>() -> <init>
    void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager) -> setHeadsUpManager
    void setOnGroupChangeListener(com.android.systemui.statusbar.phone.NotificationGroupManager$OnGroupChangeListener) -> setOnGroupChangeListener
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void setStatusBarState(int) -> setStatusBarState
    boolean isSummaryOfSuppressedGroup(android.service.notification.StatusBarNotification) -> isSummaryOfSuppressedGroup
    void collapseAllGroups() -> collapseAllGroups
    boolean isGroupExpanded(android.service.notification.StatusBarNotification) -> isGroupExpanded
    java.lang.String getGroupKey(android.service.notification.StatusBarNotification) -> getGroupKey
    com.android.systemui.statusbar.ExpandableNotificationRow getGroupSummary(java.lang.String) -> getGroupSummary
    com.android.systemui.statusbar.NotificationData$Entry getIsolatedChild(java.lang.String) -> getIsolatedChild
    int getNumberOfIsolatedChildren(java.lang.String) -> getNumberOfIsolatedChildren
    int getTotalNumberOfChildren(android.service.notification.StatusBarNotification) -> getTotalNumberOfChildren
    void handleSuppressedSummaryHeadsUpped(com.android.systemui.statusbar.NotificationData$Entry) -> handleSuppressedSummaryHeadsUpped
    boolean hasIsolatedChildren(com.android.systemui.statusbar.phone.NotificationGroupManager$NotificationGroup) -> hasIsolatedChildren
    boolean isGroupChild(android.service.notification.StatusBarNotification) -> isGroupChild
    boolean isGroupNotFullyVisible(com.android.systemui.statusbar.phone.NotificationGroupManager$NotificationGroup) -> isGroupNotFullyVisible
    boolean isGroupSummary(android.service.notification.StatusBarNotification) -> isGroupSummary
    boolean isGroupSuppressed(java.lang.String) -> isGroupSuppressed
    boolean isIsolated(android.service.notification.StatusBarNotification) -> isIsolated
    boolean isOnlyChild(android.service.notification.StatusBarNotification) -> isOnlyChild
    boolean isSummaryOfGroup(android.service.notification.StatusBarNotification) -> isSummaryOfGroup
    void onEntryBecomingChild(com.android.systemui.statusbar.NotificationData$Entry) -> onEntryBecomingChild
    void onEntryRemovedInternal(com.android.systemui.statusbar.NotificationData$Entry,android.service.notification.StatusBarNotification) -> onEntryRemovedInternal
    void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpPinned
    void onHeadsUpPinnedModeChanged(boolean) -> onHeadsUpPinnedModeChanged
    void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> onHeadsUpStateChanged
    void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpUnPinned
    void setGroupExpanded(android.service.notification.StatusBarNotification,boolean) -> setGroupExpanded
    void setGroupExpanded(com.android.systemui.statusbar.phone.NotificationGroupManager$NotificationGroup,boolean) -> setGroupExpanded
    boolean shouldIsolate(android.service.notification.StatusBarNotification) -> shouldIsolate
    boolean toggleGroupExpansion(android.service.notification.StatusBarNotification) -> toggleGroupExpansion
    void updateSuppression(com.android.systemui.statusbar.phone.NotificationGroupManager$NotificationGroup) -> updateSuppression
com.android.systemui.plugins.qs.QS -> com.android.systemui.plugins.qs.QS:
    java.lang.String TAG -> TAG
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    android.view.View getHeader() -> getHeader
    int getDesiredHeight() -> getDesiredHeight
    void setExpandClickListener(android.view.View$OnClickListener) -> setExpandClickListener
    boolean isShowingDetail() -> isShowingDetail
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void setContainer(android.view.ViewGroup) -> setContainer
    void setHeaderClickable(boolean) -> setHeaderClickable
    void setPanelView(com.android.systemui.plugins.qs.QS$HeightListener) -> setPanelView
    void setExpanded(boolean) -> setExpanded
    void setHeightOverride(int) -> setHeightOverride
    void animateHeaderSlidingOut() -> animateHeaderSlidingOut
    void notifyCustomizeChanged() -> notifyCustomizeChanged
    void setHasNotifications(boolean) -> setHasNotifications
    void closeDetail() -> closeDetail
    void hideImmediately() -> hideImmediately
    int getQsMinExpansionHeight() -> getQsMinExpansionHeight
    void setListening(boolean) -> setListening
    boolean isCustomizing() -> isCustomizing
    void setQsExpansion(float,float) -> setQsExpansion
    void setHeaderListening(boolean) -> setHeaderListening
    void animateHeaderSlidingIn(long) -> animateHeaderSlidingIn
    void setOverscrolling(boolean) -> setOverscrolling
com.android.systemui.volume.-$Lambda$FeP6WQ9udtwStQlGHdOGywTkHZE -> com.android.systemui.volume.-$Lambda$FeP6WQ9udtwStQlGHdOGywTkHZE:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.keyguard.KeyguardSecurityViewFlipper$LayoutParams -> com.android.keyguard.KeyguardSecurityViewFlipper$LayoutParams:
    int maxHeight -> maxHeight
    int maxWidth -> maxWidth
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(com.android.keyguard.KeyguardSecurityViewFlipper$LayoutParams) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void encodeProperties(android.view.ViewHierarchyEncoder) -> encodeProperties
com.android.systemui.statusbar.stack.ViewState$3 -> com.android.systemui.statusbar.stack.ViewState$3:
    void <init>() -> <init>
    int getAnimationEndTag() -> getAnimationEndTag
    int getAnimationStartTag() -> getAnimationStartTag
    int getAnimatorTag() -> getAnimatorTag
    android.util.Property getProperty() -> getProperty
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl this$1 -> this$1
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
com.android.systemui.statusbar.NotificationContentView$1 -> com.android.systemui.statusbar.NotificationContentView$1:
    com.android.systemui.statusbar.NotificationContentView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationContentView) -> <init>
    boolean onPreDraw() -> onPreDraw
com.android.systemui.classifier.SpeedClassifier -> com.android.systemui.classifier.SpeedClassifier:
    float NANOS_TO_SECONDS -> NANOS_TO_SECONDS
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
com.android.systemui.statusbar.policy.FlashlightControllerImpl$1 -> com.android.systemui.statusbar.policy.FlashlightControllerImpl$1:
    com.android.systemui.statusbar.policy.FlashlightControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.FlashlightControllerImpl) -> <init>
    void onTorchModeChanged(java.lang.String,boolean) -> onTorchModeChanged
    void onTorchModeUnavailable(java.lang.String) -> onTorchModeUnavailable
    void setCameraAvailable(boolean) -> setCameraAvailable
    void setTorchMode(boolean) -> setTorchMode
com.android.systemui.qs.AutoSizingList$1 -> com.android.systemui.qs.AutoSizingList$1:
    com.android.systemui.qs.AutoSizingList this$0 -> this$0
    void <init>(com.android.systemui.qs.AutoSizingList) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.LockscreenWallpaper -> com.android.systemui.statusbar.phone.LockscreenWallpaper:
    com.android.systemui.statusbar.phone.StatusBar mBar -> mBar
    android.graphics.Bitmap mCache -> mCache
    boolean mCached -> mCached
    int mCurrentUserId -> mCurrentUserId
    android.os.Handler mH -> mH
    android.os.AsyncTask mLoader -> mLoader
    android.os.UserHandle mSelectedUser -> mSelectedUser
    com.android.keyguard.KeyguardUpdateMonitor mUpdateMonitor -> mUpdateMonitor
    android.app.WallpaperManager mWallpaperManager -> mWallpaperManager
    void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBar,android.os.Handler) -> <init>
    android.graphics.Bitmap getBitmap() -> getBitmap
    com.android.systemui.statusbar.phone.LockscreenWallpaper$LoaderResult loadBitmap(int,android.os.UserHandle) -> loadBitmap
    void onWallpaperChanged() -> onWallpaperChanged
    void onWallpaperColorsChanged(android.app.WallpaperColors,int,int) -> onWallpaperColorsChanged
    void postUpdateWallpaper() -> postUpdateWallpaper
    void run() -> run
    void setCurrentUser(int) -> setCurrentUser
    com.android.systemui.statusbar.phone.StatusBar -get0(com.android.systemui.statusbar.phone.LockscreenWallpaper) -> -get0
    com.android.keyguard.KeyguardUpdateMonitor -get1(com.android.systemui.statusbar.phone.LockscreenWallpaper) -> -get1
    android.graphics.Bitmap -set0(com.android.systemui.statusbar.phone.LockscreenWallpaper,android.graphics.Bitmap) -> -set0
    boolean -set1(com.android.systemui.statusbar.phone.LockscreenWallpaper,boolean) -> -set1
    android.os.AsyncTask -set2(com.android.systemui.statusbar.phone.LockscreenWallpaper,android.os.AsyncTask) -> -set2
com.android.systemui.statusbar.ExpandableView$OnHeightChangedListener -> com.android.systemui.statusbar.ExpandableView$OnHeightChangedListener:
    void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean) -> onHeightChanged
    void onReset(com.android.systemui.statusbar.ExpandableView) -> onReset
com.android.systemui.statusbar.phone.NotificationListenerWithPlugins$1 -> com.android.systemui.statusbar.phone.NotificationListenerWithPlugins$1:
    com.android.systemui.statusbar.phone.NotificationListenerWithPlugins this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationListenerWithPlugins) -> <init>
    void addNotification(android.service.notification.StatusBarNotification) -> addNotification
    android.service.notification.StatusBarNotification[] getActiveNotifications() -> getActiveNotifications
    android.service.notification.NotificationListenerService$RankingMap getRankingMap() -> getRankingMap
    void removeNotification(android.service.notification.StatusBarNotification) -> removeNotification
    void updateRanking() -> updateRanking
com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper -> com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper:
    com.android.systemui.statusbar.ViewTransformationHelper mTransformationHelper -> mTransformationHelper
    com.android.systemui.ViewInvertHelper mInvertHelper -> mInvertHelper
    int mColor -> mColor
    android.view.animation.Interpolator LOW_PRIORITY_HEADER_CLOSE -> LOW_PRIORITY_HEADER_CLOSE
    com.android.internal.widget.NotificationExpandButton mExpandButton -> mExpandButton
    android.widget.TextView mHeaderText -> mHeaderText
    android.widget.ImageView mIcon -> mIcon
    boolean mIsLowPriority -> mIsLowPriority
    android.view.NotificationHeaderView mNotificationHeader -> mNotificationHeader
    boolean mShowExpandButtonAtEnd -> mShowExpandButtonAtEnd
    boolean mTransformLowPriorityTitle -> mTransformLowPriorityTitle
    android.widget.ImageView mWorkProfileImage -> mWorkProfileImage
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onContentUpdated(com.android.systemui.statusbar.ExpandableNotificationRow) -> onContentUpdated
    void updateInvertHelper() -> updateInvertHelper
    void updateTransformedTypes() -> updateTransformedTypes
    void setDark(boolean,boolean,long) -> setDark
    com.android.systemui.statusbar.notification.NotificationIconDozeHelper getDozer() -> getDozer
    void addRemainingTransformTypes() -> addRemainingTransformTypes
    com.android.systemui.statusbar.notification.NotificationDozeHelper createDozer(android.content.Context) -> createDozer
    com.android.systemui.statusbar.notification.TransformState getCurrentState(int) -> getCurrentState
    android.view.NotificationHeaderView getNotificationHeader() -> getNotificationHeader
    int resolveColor(android.widget.ImageView) -> resolveColor
    void resolveHeaderViews() -> resolveHeaderViews
    void setIsChildInGroup(boolean) -> setIsChildInGroup
    void setVisible(boolean) -> setVisible
    void transformFrom(com.android.systemui.statusbar.TransformableView) -> transformFrom
    void transformFrom(com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable) -> transformTo
    void transformTo(com.android.systemui.statusbar.TransformableView,float) -> transformTo
    void updateCropToPaddingForImageViews() -> updateCropToPaddingForImageViews
    void updateExpandability(boolean,android.view.View$OnClickListener) -> updateExpandability
    void <clinit>() -> <clinit>
    com.android.systemui.statusbar.notification.NotificationDozeHelper getDozer() -> getDozer
    android.view.animation.Interpolator -get0() -> -get0
    boolean -get1(com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper) -> -get1
    boolean -get2(com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper) -> -get2
android.support.v7.preference.PreferenceScreen -> android.support.v7.preference.PreferenceScreen:
    boolean mShouldUseGeneratedIds -> mShouldUseGeneratedIds
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean shouldUseGeneratedIds() -> shouldUseGeneratedIds
    boolean isOnSameScreenAsChildren() -> isOnSameScreenAsChildren
    void onClick() -> onClick
android.support.v7.view.menu.MenuPopupHelper$1 -> android.support.v7.view.menu.MenuPopupHelper$1:
    android.support.v7.view.menu.MenuPopupHelper this$0 -> this$0
    void onDismiss() -> onDismiss
    void <init>(android.support.v7.view.menu.MenuPopupHelper) -> <init>
com.android.systemui.qs.tiles.BluetoothTile$BluetoothBatteryDrawable -> com.android.systemui.qs.tiles.BluetoothTile$BluetoothBatteryDrawable:
    float mIconScale -> mIconScale
    int mLevel -> mLevel
    com.android.systemui.qs.tiles.BluetoothTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.BluetoothTile,int) -> <init>
    void <init>(com.android.systemui.qs.tiles.BluetoothTile,int,float) -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$6 -> com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$6:
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.ActivatableNotificationView$2 -> com.android.systemui.statusbar.ActivatableNotificationView$2:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.external.PackageManagerAdapter -> com.android.systemui.qs.external.PackageManagerAdapter:
    android.content.pm.IPackageManager mIPackageManager -> mIPackageManager
    android.content.pm.PackageManager mPackageManager -> mPackageManager
    void <init>(android.content.Context) -> <init>
    android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int) -> getServiceInfo
    android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int) -> getServiceInfo
    android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int) -> getPackageInfoAsUser
android.support.v7.widget.ForwardingListener -> android.support.v7.widget.ForwardingListener:
    int mLongPressTimeout -> mLongPressTimeout
    android.view.View mSrc -> mSrc
    boolean mForwarding -> mForwarding
    int[] mTmpLocation -> mTmpLocation
    int mTapTimeout -> mTapTimeout
    java.lang.Runnable mDisallowIntercept -> mDisallowIntercept
    float mScaledTouchSlop -> mScaledTouchSlop
    int mActivePointerId -> mActivePointerId
    java.lang.Runnable mTriggerLongPress -> mTriggerLongPress
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    void onLongPress() -> onLongPress
    void clearCallbacks() -> clearCallbacks
    boolean pointInView(android.view.View,float,float,float) -> pointInView
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void <init>(android.view.View) -> <init>
    boolean onForwardingStopped() -> onForwardingStopped
    boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.recents.model.-$Lambda$Axgxu45YJQo5IuRLI_Rd_bZPThM -> com.android.systemui.recents.model.-$Lambda$Axgxu45YJQo5IuRLI_Rd_bZPThM:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(byte,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
com.android.systemui.recents.views.TaskViewHeader$HighlightColorDrawable -> com.android.systemui.recents.views.TaskViewHeader$HighlightColorDrawable:
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    int mColor -> mColor
    float mDimAlpha -> mDimAlpha
    android.graphics.Paint mHighlightPaint -> mHighlightPaint
    com.android.systemui.recents.views.TaskViewHeader this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskViewHeader) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getColor() -> getColor
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorAndDim(int,float) -> setColorAndDim
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.android.keyguard.KeyguardUpdateMonitor$9 -> com.android.keyguard.KeyguardUpdateMonitor$9:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void onUserSwitchComplete(int) -> onUserSwitchComplete
    void onUserSwitching(int,android.os.IRemoteCallback) -> onUserSwitching
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onSessionDestroyed() -> onSessionDestroyed
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout) -> <init>
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
com.android.systemui.recents.misc.SystemServicesProxy$H -> com.android.systemui.recents.misc.SystemServicesProxy$H:
    com.android.systemui.recents.misc.SystemServicesProxy this$0 -> this$0
    void <init>(com.android.systemui.recents.misc.SystemServicesProxy) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.android.systemui.recents.misc.SystemServicesProxy,com.android.systemui.recents.misc.SystemServicesProxy$H) -> <init>
com.android.systemui.qs.tiles.RotationLockTile$1 -> com.android.systemui.qs.tiles.RotationLockTile$1:
    com.android.systemui.qs.tiles.RotationLockTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.RotationLockTile) -> <init>
    void onRotationLockStateChanged(boolean,boolean) -> onRotationLockStateChanged
com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText -> com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText:
    android.graphics.drawable.Drawable mBackground -> mBackground
    com.android.systemui.statusbar.policy.RemoteInputView mRemoteInputView -> mRemoteInputView
    boolean mShowImeOnInputConnection -> mShowImeOnInputConnection
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void defocusIfNeeded(boolean) -> defocusIfNeeded
    void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    boolean onCheckIsTextEditor() -> onCheckIsTextEditor
    void onCommitCompletion(android.view.inputmethod.CompletionInfo) -> onCommitCompletion
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    boolean requestRectangleOnScreen(android.graphics.Rect) -> requestRectangleOnScreen
    void setInnerFocusable(boolean) -> setInnerFocusable
    com.android.systemui.statusbar.policy.RemoteInputView -set0(com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText,com.android.systemui.statusbar.policy.RemoteInputView) -> -set0
    void -wrap0(com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText,boolean) -> -wrap0
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    boolean mDismissed -> mDismissed
    long mStartTime -> mStartTime
    java.lang.Runnable mDelayedHide -> mDelayedHide
    boolean mPostedShow -> mPostedShow
    boolean mPostedHide -> mPostedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void removeCallbacks() -> removeCallbacks
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.keyguard.KeyguardPasswordView$4 -> com.android.keyguard.KeyguardPasswordView$4:
    com.android.keyguard.KeyguardPasswordView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPasswordView) -> <init>
    void run() -> run
android.support.v7.widget.AppCompatButton -> android.support.v7.widget.AppCompatButton:
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void setBackgroundResource(int) -> setBackgroundResource
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    void drawableStateChanged() -> drawableStateChanged
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void setTextSize(int,float) -> setTextSize
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    int getAutoSizeTextType() -> getAutoSizeTextType
com.android.systemui.volume.Interaction$1 -> com.android.systemui.volume.Interaction$1:
    com.android.systemui.volume.Interaction$Callback val$callback -> val$callback
    void <init>(com.android.systemui.volume.Interaction$Callback) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.settings.BrightnessController$7 -> com.android.systemui.settings.BrightnessController$7:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    void <init>(com.android.systemui.settings.BrightnessController,android.content.Context) -> <init>
    void onUserSwitched(int) -> onUserSwitched
com.android.systemui.statusbar.policy.ExtensionControllerImpl -> com.android.systemui.statusbar.policy.ExtensionControllerImpl:
    android.content.Context mDefaultContext -> mDefaultContext
    void <init>(android.content.Context) -> <init>
    com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionBuilder newExtension(java.lang.Class) -> newExtension
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder newExtension(java.lang.Class) -> newExtension
    android.content.Context -get0(com.android.systemui.statusbar.policy.ExtensionControllerImpl) -> -get0
android.support.v17.leanback.widget.Util -> android.support.v17.leanback.widget.Util:
    void <init>() -> <init>
    boolean isDescendant(android.view.ViewGroup,android.view.View) -> isDescendant
android.support.v17.leanback.transition.SlideKitkat$SlideAnimatorListener -> android.support.v17.leanback.transition.SlideKitkat$SlideAnimatorListener:
    boolean mCanceled -> mCanceled
    float mPausedValue -> mPausedValue
    android.util.Property mProp -> mProp
    float mEndValue -> mEndValue
    android.view.View mView -> mView
    int mFinalVisibility -> mFinalVisibility
    float mTerminalValue -> mTerminalValue
    void onAnimationResume(android.animation.Animator) -> onAnimationResume
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void <init>(android.view.View,android.util.Property,float,float,int) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationPause(android.animation.Animator) -> onAnimationPause
android.support.v7.view.StandaloneActionMode -> android.support.v7.view.StandaloneActionMode:
    boolean mFinished -> mFinished
    android.content.Context mContext -> mContext
    java.lang.ref.WeakReference mCustomView -> mCustomView
    android.support.v7.view.ActionMode$Callback mCallback -> mCallback
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    boolean mFocusable -> mFocusable
    android.support.v7.widget.ActionBarContextView mContextView -> mContextView
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(int) -> setSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    android.view.Menu getMenu() -> getMenu
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    void <init>(android.content.Context,android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode$Callback,boolean) -> <init>
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void invalidate() -> invalidate
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    boolean isTitleOptional() -> isTitleOptional
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setTitle(int) -> setTitle
    void finish() -> finish
com.android.systemui.recents.views.TaskStackLayoutAlgorithm$TaskStackLayoutAlgorithmCallbacks -> com.android.systemui.recents.views.TaskStackLayoutAlgorithm$TaskStackLayoutAlgorithmCallbacks:
    void onFocusStateChanged(int,int) -> onFocusStateChanged
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
    void <init>(android.support.v4.widget.ContentLoadingProgressBar) -> <init>
com.android.systemui.statusbar.policy.DeadZone -> com.android.systemui.statusbar.policy.DeadZone:
    java.lang.Runnable mDebugFlash -> mDebugFlash
    int mDecay -> mDecay
    int mDisplayRotation -> mDisplayRotation
    float mFlashFrac -> mFlashFrac
    int mHold -> mHold
    long mLastPokeTime -> mLastPokeTime
    boolean mShouldFlash -> mShouldFlash
    int mSizeMax -> mSizeMax
    int mSizeMin -> mSizeMin
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    boolean mVertical -> mVertical
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    float getSize(long) -> getSize
    float lerp(float,float,float) -> lerp
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void poke(android.view.MotionEvent) -> poke
    void setDisplayRotation(int) -> setDisplayRotation
    void setFlashOnTouchCapture(boolean) -> setFlashOnTouchCapture
android.support.v4.media.VolumeProviderCompat$ControlType -> android.support.v4.media.VolumeProviderCompat$ControlType:
com.android.keyguard.KeyguardStatusView -> com.android.keyguard.KeyguardStatusView:
    android.app.AlarmManager mAlarmManager -> mAlarmManager
    android.widget.TextView mAlarmStatusView -> mAlarmStatusView
    int mAlarmTextColor -> mAlarmTextColor
    com.android.systemui.ChargingView mBatteryDoze -> mBatteryDoze
    android.view.ViewGroup mClockContainer -> mClockContainer
    android.widget.TextClock mClockView -> mClockView
    float mDarkAmount -> mDarkAmount
    int mDateTextColor -> mDateTextColor
    com.android.systemui.statusbar.policy.DateView mDateView -> mDateView
    android.os.Handler mHandler -> mHandler
    com.android.keyguard.KeyguardUpdateMonitorCallback mInfoCallback -> mInfoCallback
    android.view.View mKeyguardStatusArea -> mKeyguardStatusArea
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    android.widget.TextView mOwnerInfo -> mOwnerInfo
    java.lang.Runnable mPendingMarqueeStart -> mPendingMarqueeStart
    boolean mPulsing -> mPulsing
    int mTextColor -> mTextColor
    android.view.View[] mVisibleInDoze -> mVisibleInDoze
    java.lang.String formatNextAlarm(android.content.Context,android.app.AlarmManager$AlarmClockInfo) -> formatNextAlarm
    float getClockTextSize() -> getClockTextSize
    int getClockBottom() -> getClockBottom
    void refreshTime() -> refreshTime
    void setDark(float) -> setDark
    void setPulsing(boolean) -> setPulsing
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    java.lang.String getOwnerInfo() -> getOwnerInfo
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void refresh() -> refresh
    void refreshAlarmStatus(android.app.AlarmManager$AlarmClockInfo) -> refreshAlarmStatus
    void setEnableMarquee(boolean) -> setEnableMarquee
    void setEnableMarqueeImpl(boolean) -> setEnableMarqueeImpl
    void updateDozeVisibleViews() -> updateDozeVisibleViews
    void updateOwnerInfo() -> updateOwnerInfo
    void lambda$-com_android_keyguard_KeyguardStatusView_4126() -> lambda$-com_android_keyguard_KeyguardStatusView_4126
    void -wrap0(com.android.keyguard.KeyguardStatusView) -> -wrap0
    void -wrap1(com.android.keyguard.KeyguardStatusView,boolean) -> -wrap1
    void -wrap2(com.android.keyguard.KeyguardStatusView) -> -wrap2
com.android.systemui.settings.BrightnessController -> com.android.systemui.settings.BrightnessController:
    boolean mAutomatic -> mAutomatic
    boolean mAutomaticAvailable -> mAutomaticAvailable
    android.os.Handler mBackgroundHandler -> mBackgroundHandler
    com.android.systemui.settings.BrightnessController$BrightnessObserver mBrightnessObserver -> mBrightnessObserver
    java.util.ArrayList mChangeCallbacks -> mChangeCallbacks
    android.content.Context mContext -> mContext
    com.android.systemui.settings.ToggleSlider mControl -> mControl
    boolean mExternalChange -> mExternalChange
    android.os.Handler mHandler -> mHandler
    android.widget.ImageView mIcon -> mIcon
    boolean mIsVrModeEnabled -> mIsVrModeEnabled
    boolean mListening -> mListening
    int mMaximumBacklight -> mMaximumBacklight
    int mMaximumBacklightForVr -> mMaximumBacklightForVr
    int mMinimumBacklight -> mMinimumBacklight
    int mMinimumBacklightForVr -> mMinimumBacklightForVr
    android.os.IPowerManager mPower -> mPower
    java.lang.Runnable mStartListeningRunnable -> mStartListeningRunnable
    java.lang.Runnable mStopListeningRunnable -> mStopListeningRunnable
    java.lang.Runnable mUpdateModeRunnable -> mUpdateModeRunnable
    java.lang.Runnable mUpdateSliderRunnable -> mUpdateSliderRunnable
    com.android.systemui.settings.CurrentUserTracker mUserTracker -> mUserTracker
    android.service.vr.IVrManager mVrManager -> mVrManager
    android.service.vr.IVrStateCallbacks mVrStateCallbacks -> mVrStateCallbacks
    void <init>(android.content.Context,android.widget.ImageView,com.android.systemui.settings.ToggleSlider) -> <init>
    void registerCallbacks() -> registerCallbacks
    void unregisterCallbacks() -> unregisterCallbacks
    void onChanged(com.android.systemui.settings.ToggleSlider,boolean,boolean,int,boolean) -> onChanged
    void onInit(com.android.systemui.settings.ToggleSlider) -> onInit
    void setBrightness(int) -> setBrightness
    void setBrightnessAdj(float) -> setBrightnessAdj
    void updateIcon(boolean) -> updateIcon
    void updateVrMode(boolean) -> updateVrMode
    boolean -get0(com.android.systemui.settings.BrightnessController) -> -get0
    boolean -get1(com.android.systemui.settings.BrightnessController) -> -get1
    android.os.Handler -get2(com.android.systemui.settings.BrightnessController) -> -get2
    com.android.systemui.settings.BrightnessController$BrightnessObserver -get3(com.android.systemui.settings.BrightnessController) -> -get3
    java.util.ArrayList -get4(com.android.systemui.settings.BrightnessController) -> -get4
    android.content.Context -get5(com.android.systemui.settings.BrightnessController) -> -get5
    com.android.systemui.settings.ToggleSlider -get6(com.android.systemui.settings.BrightnessController) -> -get6
    android.os.Handler -get7(com.android.systemui.settings.BrightnessController) -> -get7
    boolean -get8(com.android.systemui.settings.BrightnessController) -> -get8
    int -get9(com.android.systemui.settings.BrightnessController) -> -get9
    int -get10(com.android.systemui.settings.BrightnessController) -> -get10
    int -get11(com.android.systemui.settings.BrightnessController) -> -get11
    int -get12(com.android.systemui.settings.BrightnessController) -> -get12
    java.lang.Runnable -get13(com.android.systemui.settings.BrightnessController) -> -get13
    java.lang.Runnable -get14(com.android.systemui.settings.BrightnessController) -> -get14
    com.android.systemui.settings.CurrentUserTracker -get15(com.android.systemui.settings.BrightnessController) -> -get15
    boolean -set0(com.android.systemui.settings.BrightnessController,boolean) -> -set0
    boolean -set1(com.android.systemui.settings.BrightnessController,boolean) -> -set1
    void -wrap0(com.android.systemui.settings.BrightnessController,boolean) -> -wrap0
    void -wrap1(com.android.systemui.settings.BrightnessController,boolean) -> -wrap1
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
com.android.systemui.stackdivider.Divider$2 -> com.android.systemui.stackdivider.Divider$2:
    com.android.systemui.stackdivider.Divider this$0 -> this$0
    boolean val$isHomeStackResizable -> val$isHomeStackResizable
    boolean val$minimized -> val$minimized
    long val$animDuration -> val$animDuration
    void <init>(com.android.systemui.stackdivider.Divider,boolean,boolean,long) -> <init>
    void run() -> run
com.android.systemui.volume.ZenFooter$3 -> com.android.systemui.volume.ZenFooter$3:
    com.android.systemui.volume.ZenFooter this$0 -> this$0
    com.android.systemui.statusbar.policy.ZenModeController val$controller -> val$controller
    void <init>(com.android.systemui.volume.ZenFooter,com.android.systemui.statusbar.policy.ZenModeController) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.policy.ZenModeControllerImpl$4 -> com.android.systemui.statusbar.policy.ZenModeControllerImpl$4:
    com.android.systemui.statusbar.policy.ZenModeControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.ZenModeControllerImpl,android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void handleValueChanged(int) -> handleValueChanged
com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1$1 -> com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1$1:
    com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1 this$3 -> this$3
    android.service.notification.StatusBarNotification val$parentToCancelFinal -> val$parentToCancelFinal
    void <init>(com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1,android.service.notification.StatusBarNotification) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBar$44$1 -> com.android.systemui.statusbar.phone.StatusBar$44$1:
    com.android.systemui.statusbar.phone.StatusBar$44 this$1 -> this$1
    android.app.PendingIntent val$intent -> val$intent
    void <init>(com.android.systemui.statusbar.phone.StatusBar$44,android.app.PendingIntent) -> <init>
    void run() -> run
android.support.v17.leanback.widget.picker.Picker$PickerValueListener -> android.support.v17.leanback.widget.picker.Picker$PickerValueListener:
    void onValueChanged(android.support.v17.leanback.widget.picker.Picker,int) -> onValueChanged
android.support.v17.leanback.widget.StaggeredGrid$Location -> android.support.v17.leanback.widget.StaggeredGrid$Location:
    int size -> size
    int offset -> offset
    void <init>(int,int,int) -> <init>
com.android.systemui.qs.external.TileLifecycleManager$TileChangeListener -> com.android.systemui.qs.external.TileLifecycleManager$TileChangeListener:
    void onTileChanged(android.content.ComponentName) -> onTileChanged
com.android.systemui.DessertCaseView$2 -> com.android.systemui.DessertCaseView$2:
    com.android.systemui.DessertCaseView this$0 -> this$0
    android.widget.ImageView val$v -> val$v
    void <init>(com.android.systemui.DessertCaseView,android.widget.ImageView) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v14.preference.MultiSelectListPreference$SavedState$1 -> android.support.v14.preference.MultiSelectListPreference$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v14.preference.MultiSelectListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    void <init>() -> <init>
    android.support.v14.preference.MultiSelectListPreference$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.settingslib.R$array -> com.android.settingslib.R$array:
    int batterymeter_bolt_points -> batterymeter_bolt_points
    int batterymeter_color_levels -> batterymeter_color_levels
    int batterymeter_color_values -> batterymeter_color_values
    int batterymeter_plus_points -> batterymeter_plus_points
    int wifi_status -> wifi_status
    int wifi_status_with_ssid -> wifi_status_with_ssid
    void <init>() -> <init>
com.android.systemui.statusbar.stack.ViewState$5 -> com.android.systemui.statusbar.stack.ViewState$5:
    com.android.systemui.statusbar.stack.ViewState this$0 -> this$0
    android.view.View val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ViewState,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.settings.BrightnessDialog -> com.android.systemui.settings.BrightnessDialog:
    com.android.systemui.settings.BrightnessController mBrightnessController -> mBrightnessController
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onStart() -> onStart
    void onStop() -> onStop
com.android.systemui.pip.tv.PipControlsView -> com.android.systemui.pip.tv.PipControlsView:
    java.lang.String TAG -> TAG
    com.android.systemui.pip.tv.PipControlButtonView mCloseButtonView -> mCloseButtonView
    java.util.List mCustomActions -> mCustomActions
    java.util.ArrayList mCustomButtonViews -> mCustomButtonViews
    android.view.View$OnFocusChangeListener mFocusChangeListener -> mFocusChangeListener
    com.android.systemui.pip.tv.PipControlButtonView mFocusedChild -> mFocusedChild
    com.android.systemui.pip.tv.PipControlButtonView mFullButtonView -> mFullButtonView
    android.os.Handler mHandler -> mHandler
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    com.android.systemui.pip.tv.PipControlsView$Listener mListener -> mListener
    android.media.session.MediaController mMediaController -> mMediaController
    android.media.session.MediaController$Callback mMediaControllerCallback -> mMediaControllerCallback
    com.android.systemui.pip.tv.PipManager mPipManager -> mPipManager
    com.android.systemui.pip.tv.PipManager$MediaListener mPipMediaListener -> mPipMediaListener
    com.android.systemui.pip.tv.PipControlButtonView mPlayPauseButtonView -> mPlayPauseButtonView
    void setActions(java.util.List) -> setActions
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void updateMediaController() -> updateMediaController
    void updateUserActions() -> updateUserActions
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_pip_tv_PipControlsView_8465(com.android.systemui.pip.tv.PipControlButtonView,android.graphics.drawable.Drawable) -> lambda$-com_android_systemui_pip_tv_PipControlsView_8465
    void lambda$-com_android_systemui_pip_tv_PipControlsView_8758(android.app.RemoteAction,android.view.View) -> lambda$-com_android_systemui_pip_tv_PipControlsView_8758
    com.android.systemui.pip.tv.PipControlButtonView -get0(com.android.systemui.pip.tv.PipControlsView) -> -get0
    com.android.systemui.pip.tv.PipControlsView$Listener -get1(com.android.systemui.pip.tv.PipControlsView) -> -get1
    android.media.session.MediaController -get2(com.android.systemui.pip.tv.PipControlsView) -> -get2
    com.android.systemui.pip.tv.PipManager -get3(com.android.systemui.pip.tv.PipControlsView) -> -get3
    com.android.systemui.pip.tv.PipControlButtonView -set0(com.android.systemui.pip.tv.PipControlsView,com.android.systemui.pip.tv.PipControlButtonView) -> -set0
    void -wrap0(com.android.systemui.pip.tv.PipControlsView) -> -wrap0
    void -wrap1(com.android.systemui.pip.tv.PipControlsView) -> -wrap1
com.google.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException -> com.google.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException:
    long serialVersionUID -> serialVersionUID
    void <init>(int,int) -> <init>
com.android.systemui.qs.QSDetailClipper$2 -> com.android.systemui.qs.QSDetailClipper$2:
    com.android.systemui.qs.QSDetailClipper this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetailClipper) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.keyguard.-$Lambda$ixCe0YZjSUKZcgBoacOfgGDmm1A -> com.android.keyguard.-$Lambda$ixCe0YZjSUKZcgBoacOfgGDmm1A:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.tuner.TunerZenModePanel$1 -> com.android.systemui.tuner.TunerZenModePanel$1:
    com.android.systemui.tuner.TunerZenModePanel this$0 -> this$0
    void <init>(com.android.systemui.tuner.TunerZenModePanel) -> <init>
    void run() -> run
android.support.v7.mediarouter.R$attr -> android.support.v7.mediarouter.R$attr:
    int mediaRouteButtonStyle -> mediaRouteButtonStyle
    int mediaRouteDefaultIconDrawable -> mediaRouteDefaultIconDrawable
    int mediaRoutePauseDrawable -> mediaRoutePauseDrawable
    int mediaRoutePlayDrawable -> mediaRoutePlayDrawable
    int mediaRouteSpeakerGroupIconDrawable -> mediaRouteSpeakerGroupIconDrawable
    int mediaRouteSpeakerIconDrawable -> mediaRouteSpeakerIconDrawable
    int mediaRouteStopDrawable -> mediaRouteStopDrawable
    int mediaRouteTheme -> mediaRouteTheme
    int mediaRouteTvIconDrawable -> mediaRouteTvIconDrawable
    void <init>() -> <init>
com.android.systemui.volume.SegmentedButtons$Callback -> com.android.systemui.volume.SegmentedButtons$Callback:
    void onSelected(java.lang.Object,boolean) -> onSelected
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    boolean release(java.lang.Object) -> release
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
com.android.systemui.statusbar.policy.IconLogger -> com.android.systemui.statusbar.policy.IconLogger:
    void onIconVisibility(java.lang.String,boolean) -> onIconVisibility
    void onIconHidden(java.lang.String) -> onIconHidden
    void onIconShown(java.lang.String) -> onIconShown
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    long[] mKeys -> mKeys
    int mSize -> mSize
    java.lang.Object[] mValues -> mValues
    boolean mGarbage -> mGarbage
    void gc() -> gc
    android.support.v4.util.LongSparseArray clone() -> clone
    void delete(long) -> delete
    void put(long,java.lang.Object) -> put
    void <init>(int) -> <init>
    java.lang.Object clone() -> clone
    void removeAt(int) -> removeAt
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void clear() -> clear
    java.lang.Object get(long) -> get
    int size() -> size
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object get(long,java.lang.Object) -> get
com.android.systemui.fragments.FragmentHostManager$1 -> com.android.systemui.fragments.FragmentHostManager$1:
    com.android.systemui.fragments.FragmentHostManager this$0 -> this$0
    void <init>(com.android.systemui.fragments.FragmentHostManager) -> <init>
    void onFragmentDestroyed(android.app.FragmentManager,android.app.Fragment) -> onFragmentDestroyed
    void onFragmentViewCreated(android.app.FragmentManager,android.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    void onFragmentViewDestroyed(android.app.FragmentManager,android.app.Fragment) -> onFragmentViewDestroyed
com.android.systemui.qs.tiles.LocationTile -> com.android.systemui.qs.tiles.LocationTile:
    com.android.systemui.qs.tiles.LocationTile$Callback mCallback -> mCallback
    com.android.systemui.statusbar.policy.LocationController mController -> mController
    com.android.systemui.plugins.qs.QSTile$Icon mIcon -> mIcon
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguard -> mKeyguard
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void lambda$-com_android_systemui_qs_tiles_LocationTile_2694() -> lambda$-com_android_systemui_qs_tiles_LocationTile_2694
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$6 -> com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$6:
    com.android.systemui.statusbar.phone.PhoneStatusBarPolicy this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.widget.ViewBoundsCheck$ViewBounds -> android.support.v7.widget.ViewBoundsCheck$ViewBounds:
com.android.systemui.recents.views.TaskStackViewTouchHandler -> com.android.systemui.recents.views.TaskStackViewTouchHandler:
    boolean mIsScrolling -> mIsScrolling
    android.view.animation.Interpolator OVERSCROLL_INTERP -> OVERSCROLL_INTERP
    int mActivePointerId -> mActivePointerId
    com.android.systemui.recents.views.TaskView mActiveTaskView -> mActiveTaskView
    android.content.Context mContext -> mContext
    java.util.ArrayList mCurrentTaskTransforms -> mCurrentTaskTransforms
    java.util.ArrayList mCurrentTasks -> mCurrentTasks
    float mDownScrollP -> mDownScrollP
    int mDownX -> mDownX
    int mDownY -> mDownY
    java.util.ArrayList mFinalTaskTransforms -> mFinalTaskTransforms
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimUtils -> mFlingAnimUtils
    boolean mInterceptedBySwipeHelper -> mInterceptedBySwipeHelper
    int mLastY -> mLastY
    int mMaximumVelocity -> mMaximumVelocity
    int mMinimumVelocity -> mMinimumVelocity
    int mOverscrollSize -> mOverscrollSize
    android.animation.ValueAnimator mScrollFlingAnimator -> mScrollFlingAnimator
    int mScrollTouchSlop -> mScrollTouchSlop
    com.android.systemui.recents.views.TaskStackViewScroller mScroller -> mScroller
    com.android.systemui.recents.events.ui.StackViewScrolledEvent mStackViewScrolledEvent -> mStackViewScrolledEvent
    com.android.systemui.recents.views.TaskStackView mSv -> mSv
    com.android.systemui.SwipeHelper mSwipeHelper -> mSwipeHelper
    android.util.ArrayMap mSwipeHelperAnimations -> mSwipeHelperAnimations
    float mTargetStackScroll -> mTargetStackScroll
    com.android.systemui.recents.views.TaskViewTransform mTmpTransform -> mTmpTransform
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mWindowTouchSlop -> mWindowTouchSlop
    void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.TaskStackViewScroller) -> <init>
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    void cancelNonDismissTaskAnimations() -> cancelNonDismissTaskAnimations
    boolean canChildBeDismissed(android.view.View) -> canChildBeDismissed
    com.android.systemui.recents.views.TaskView findViewAtPoint(int,int) -> findViewAtPoint
    android.view.View getChildAtPosition(android.view.MotionEvent) -> getChildAtPosition
    float getFalsingThresholdFactor() -> getFalsingThresholdFactor
    float getScaledDismissSize() -> getScaledDismissSize
    boolean handleTouchEvent(android.view.MotionEvent) -> handleTouchEvent
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    boolean isAntiFalsingNeeded() -> isAntiFalsingNeeded
    boolean isSwipingEnabled() -> isSwipingEnabled
    void maybeHideRecentsFromBackgroundTap(int,int) -> maybeHideRecentsFromBackgroundTap
    void onBeginDrag(android.view.View) -> onBeginDrag
    void onBeginManualDrag(com.android.systemui.recents.views.TaskView) -> onBeginManualDrag
    void onChildDismissed(android.view.View) -> onChildDismissed
    void onChildSnappedBack(android.view.View,float) -> onChildSnappedBack
    void onDragCancelled(android.view.View) -> onDragCancelled
    void recycleVelocityTracker() -> recycleVelocityTracker
    boolean updateSwipeProgress(android.view.View,boolean,float) -> updateSwipeProgress
    void updateTaskViewTransforms(float) -> updateTaskViewTransforms
    void <clinit>() -> <clinit>
    android.util.ArrayMap -get0(com.android.systemui.recents.views.TaskStackViewTouchHandler) -> -get0
android.support.v7.widget.Toolbar$3 -> android.support.v7.widget.Toolbar$3:
    android.support.v7.widget.Toolbar this$0 -> this$0
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.graphics.Palette$Builder -> android.support.v7.graphics.Palette$Builder:
    java.util.List mSwatches -> mSwatches
    java.util.List mFilters -> mFilters
    android.graphics.Rect mRegion -> mRegion
    int mResizeMaxDimension -> mResizeMaxDimension
    java.util.List mTargets -> mTargets
    int mMaxColors -> mMaxColors
    int mResizeArea -> mResizeArea
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Bitmap scaleBitmapDown(android.graphics.Bitmap) -> scaleBitmapDown
    int[] getPixelsFromBitmap(android.graphics.Bitmap) -> getPixelsFromBitmap
    android.support.v7.graphics.Palette$Builder resizeBitmapArea(int) -> resizeBitmapArea
    android.support.v7.graphics.Palette$Builder addFilter(android.support.v7.graphics.Palette$Filter) -> addFilter
    android.support.v7.graphics.Palette$Builder clearFilters() -> clearFilters
    android.support.v7.graphics.Palette generate() -> generate
    android.support.v7.graphics.Palette$Builder setRegion(int,int,int,int) -> setRegion
    void <init>(android.graphics.Bitmap) -> <init>
    android.support.v7.graphics.Palette$Builder maximumColorCount(int) -> maximumColorCount
com.android.systemui.statusbar.notification.ImageGradientColorizer -> com.android.systemui.statusbar.notification.ImageGradientColorizer:
    void <init>() -> <init>
    android.graphics.Bitmap colorize(android.graphics.drawable.Drawable,int,boolean) -> colorize
com.android.systemui.statusbar.phone.AutoTileManager$2 -> com.android.systemui.statusbar.phone.AutoTileManager$2:
    com.android.systemui.statusbar.phone.AutoTileManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.AutoTileManager) -> <init>
    void onDataSaverChanged(boolean) -> onDataSaverChanged
    void lambda$-com_android_systemui_statusbar_phone_AutoTileManager$2_5161() -> lambda$-com_android_systemui_statusbar_phone_AutoTileManager$2_5161
com.android.systemui.statusbar.-$Lambda$Riuh3zYDe2TsfH5PQkGwv6ei6pQ$3 -> com.android.systemui.statusbar.-$Lambda$Riuh3zYDe2TsfH5PQkGwv6ei6pQ$3:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0() -> $m$0
    boolean onSlideBack() -> onSlideBack
com.android.systemui.pip.tv.PipNotification -> com.android.systemui.pip.tv.PipNotification:
    boolean DEBUG -> DEBUG
    java.lang.String NOTIFICATION_TAG -> NOTIFICATION_TAG
    android.graphics.Bitmap mArt -> mArt
    int mDefaultIconResId -> mDefaultIconResId
    java.lang.String mDefaultTitle -> mDefaultTitle
    android.content.BroadcastReceiver mEventReceiver -> mEventReceiver
    android.media.session.MediaController mMediaController -> mMediaController
    android.media.session.MediaController$Callback mMediaControllerCallback -> mMediaControllerCallback
    android.app.Notification$Builder mNotificationBuilder -> mNotificationBuilder
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    boolean mNotified -> mNotified
    com.android.systemui.pip.tv.PipManager$Listener mPipListener -> mPipListener
    com.android.systemui.pip.tv.PipManager mPipManager -> mPipManager
    com.android.systemui.pip.tv.PipManager$MediaListener mPipMediaListener -> mPipMediaListener
    java.lang.String mTitle -> mTitle
    void <init>(android.content.Context) -> <init>
    android.app.PendingIntent createPendingIntent(android.content.Context,java.lang.String) -> createPendingIntent
    void dismissPipNotification() -> dismissPipNotification
    void notifyPipNotification() -> notifyPipNotification
    void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    boolean updateMediaControllerMetadata() -> updateMediaControllerMetadata
    void <clinit>() -> <clinit>
    boolean -get0() -> -get0
    android.media.session.MediaController -get1(com.android.systemui.pip.tv.PipNotification) -> -get1
    android.media.session.MediaController$Callback -get2(com.android.systemui.pip.tv.PipNotification) -> -get2
    boolean -get3(com.android.systemui.pip.tv.PipNotification) -> -get3
    com.android.systemui.pip.tv.PipManager -get4(com.android.systemui.pip.tv.PipNotification) -> -get4
    android.media.session.MediaController -set0(com.android.systemui.pip.tv.PipNotification,android.media.session.MediaController) -> -set0
    boolean -wrap0(com.android.systemui.pip.tv.PipNotification) -> -wrap0
    void -wrap1(com.android.systemui.pip.tv.PipNotification) -> -wrap1
    void -wrap2(com.android.systemui.pip.tv.PipNotification) -> -wrap2
com.android.systemui.plugins.R$id -> com.android.systemui.plugins.R$id:
    int ALT -> ALT
    int CTRL -> CTRL
    int Content -> Content
    int FUNCTION -> FUNCTION
    int IconOnLeft -> IconOnLeft
    int IconOnRight -> IconOnRight
    int ImageOnly -> ImageOnly
    int META -> META
    int SHIFT -> SHIFT
    int SYM -> SYM
    int Title -> Title
    int accessibility_button -> accessibility_button
    int actionIcon -> actionIcon
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_fragment -> action_fragment
    int action_fragment_background -> action_fragment_background
    int action_fragment_root -> action_fragment_root
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int action_move_rb_full -> action_move_rb_full
    int action_move_tl_30 -> action_move_tl_30
    int action_move_tl_50 -> action_move_tl_50
    int action_move_tl_70 -> action_move_tl_70
    int action_move_tl_full -> action_move_tl_full
    int action_snooze_assistant_suggestion_1 -> action_snooze_assistant_suggestion_1
    int action_snooze_long -> action_snooze_long
    int action_snooze_longer -> action_snooze_longer
    int action_snooze_short -> action_snooze_short
    int action_snooze_shorter -> action_snooze_shorter
    int action_snooze_undo -> action_snooze_undo
    int action_split_task_to_left -> action_split_task_to_left
    int action_split_task_to_right -> action_split_task_to_right
    int action_split_task_to_top -> action_split_task_to_top
    int actions_container -> actions_container
    int actions_group -> actions_group
    int activated -> activated
    int activity_chooser_view_content -> activity_chooser_view_content
    int add -> add
    int additional_summary -> additional_summary
    int airplane -> airplane
    int alarm_status -> alarm_status
    int alarm_status_collapsed -> alarm_status_collapsed
    int alertTitle -> alertTitle
    int alpha_animator_end_value_tag -> alpha_animator_end_value_tag
    int alpha_animator_start_value_tag -> alpha_animator_start_value_tag
    int alpha_animator_tag -> alpha_animator_tag
    int always -> always
    int am_pm_view -> am_pm_view
    int ambient_indication_container -> ambient_indication_container
    int app_icon -> app_icon
    int app_info -> app_info
    int app_label -> app_label
    int app_name -> app_name
    int app_overlay -> app_overlay
    int app_overlay_stub -> app_overlay_stub
    int app_settings -> app_settings
    int app_title -> app_title
    int assist_orb -> assist_orb
    int assist_orb_navbar_scrim -> assist_orb_navbar_scrim
    int assist_orb_scrim -> assist_orb_scrim
    int auto_rule -> auto_rule
    int back -> back
    int backdrop -> backdrop
    int backdrop_back -> backdrop_back
    int backdrop_front -> backdrop_front
    int background -> background
    int backgroundDimmed -> backgroundDimmed
    int backgroundNormal -> backgroundNormal
    int background_container -> background_container
    int background_imagein -> background_imagein
    int background_imageout -> background_imageout
    int bar1 -> bar1
    int bar2 -> bar2
    int bar3 -> bar3
    int battery -> battery
    int battery_doze -> battery_doze
    int battery_percentage_view -> battery_percentage_view
    int beginning -> beginning
    int bottom -> bottom
    int bottom_spacer -> bottom_spacer
    int brightness_icon -> brightness_icon
    int brightness_mirror -> brightness_mirror
    int brightness_slider -> brightness_slider
    int browse_container_dock -> browse_container_dock
    int browse_dummy -> browse_dummy
    int browse_frame -> browse_frame
    int browse_grid -> browse_grid
    int browse_grid_dock -> browse_grid_dock
    int browse_headers -> browse_headers
    int browse_headers_dock -> browse_headers_dock
    int browse_headers_root -> browse_headers_root
    int browse_title_group -> browse_title_group
    int button -> button
    int buttonPanel -> buttonPanel
    int button_start -> button_start
    int ca_certs_disclosures -> ca_certs_disclosures
    int ca_certs_subtitle -> ca_certs_subtitle
    int ca_certs_warning -> ca_certs_warning
    int camera_button -> camera_button
    int car_nav_button_icon -> car_nav_button_icon
    int car_nav_button_more_icon -> car_nav_button_more_icon
    int carrier_text -> carrier_text
    int center_group -> center_group
    int channel_disabled -> channel_disabled
    int channel_enabled_switch -> channel_enabled_switch
    int channel_name -> channel_name
    int checkbox -> checkbox
    int child_container_stub -> child_container_stub
    int clip_children_set_tag -> clip_children_set_tag
    int clip_children_tag -> clip_children_tag
    int clip_to_padding_tag -> clip_to_padding_tag
    int clock -> clock
    int clock_view -> clock_view
    int close -> close
    int close_button -> close_button
    int collapseActionView -> collapseActionView
    int column -> column
    int connected_device_network_signal -> connected_device_network_signal
    int connected_device_signals -> connected_device_signals
    int connected_device_signals_stub -> connected_device_signals_stub
    int container -> container
    int container_list -> container_list
    int contains_transformed_view -> contains_transformed_view
    int content -> content
    int contentPanel -> contentPanel
    int content_container -> content_container
    int content_fragment -> content_fragment
    int content_frame -> content_frame
    int content_header_container -> content_header_container
    int content_parent -> content_parent
    int content_text -> content_text
    int continuous_clipping_tag -> continuous_clipping_tag
    int control_bar -> control_bar
    int controls_card -> controls_card
    int controls_card_right_panel -> controls_card_right_panel
    int controls_container -> controls_container
    int controls_dock -> controls_dock
    int countdown_progress -> countdown_progress
    int current_time -> current_time
    int custom -> custom
    int customPanel -> customPanel
    int data_inout -> data_inout
    int date -> date
    int date_time_alarm_group -> date_time_alarm_group
    int date_time_group -> date_time_group
    int date_view -> date_view
    int deadzone -> deadzone
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int delete_button -> delete_button
    int desc -> desc
    int description -> description
    int description_dock -> description_dock
    int details_background_view -> details_background_view
    int details_fragment_root -> details_fragment_root
    int details_frame -> details_frame
    int details_overview -> details_overview
    int details_overview_actions -> details_overview_actions
    int details_overview_actions_background -> details_overview_actions_background
    int details_overview_description -> details_overview_description
    int details_overview_image -> details_overview_image
    int details_overview_right_panel -> details_overview_right_panel
    int details_root -> details_root
    int details_rows_dock -> details_rows_dock
    int device_management_disclosures -> device_management_disclosures
    int device_management_subtitle -> device_management_subtitle
    int device_management_warning -> device_management_warning
    int digit_text -> digit_text
    int disableHome -> disableHome
    int dismiss -> dismiss
    int dismiss_task -> dismiss_task
    int dismiss_text -> dismiss_text
    int divider -> divider
    int docked_divider_background -> docked_divider_background
    int docked_divider_handle -> docked_divider_handle
    int done -> done
    int doze_saved_filter_tag -> doze_saved_filter_tag
    int drag -> drag
    int drawer_layout -> drawer_layout
    int dummy -> dummy
    int edit_container -> edit_container
    int edit_query -> edit_query
    int emergency_call_button -> emergency_call_button
    int emergency_cryptkeeper_text -> emergency_cryptkeeper_text
    int empty_text -> empty_text
    int empty_time_view -> empty_time_view
    int end -> end
    int ends_group -> ends_group
    int error_frame -> error_frame
    int ethernet -> ethernet
    int ethernet_combo -> ethernet_combo
    int ethernet_dark -> ethernet_dark
    int expand -> expand
    int expand_activities_button -> expand_activities_button
    int expand_button -> expand_button
    int expand_container -> expand_container
    int expand_indicator -> expand_indicator
    int expand_space -> expand_space
    int expanded -> expanded
    int expandedPublic -> expandedPublic
    int expanded_menu -> expanded_menu
    int extra -> extra
    int extra_badge -> extra_badge
    int fade_out_edge -> fade_out_edge
    int fake_shadow -> fake_shadow
    int focus_timer_indicator -> focus_timer_indicator
    int focus_timer_indicator_stub -> focus_timer_indicator_stub
    int footer_icon -> footer_icon
    int footer_text -> footer_text
    int foreground_container -> foreground_container
    int friction_icon -> friction_icon
    int full_button -> full_button
    int fullscreen_user_switcher_stub -> fullscreen_user_switcher_stub
    int global_screenshot -> global_screenshot
    int global_screenshot_background -> global_screenshot_background
    int global_screenshot_flash -> global_screenshot_flash
    int global_screenshot_selector -> global_screenshot_selector
    int gone -> gone
    int grid_frame -> grid_frame
    int group_name -> group_name
    int guidance_breadcrumb -> guidance_breadcrumb
    int guidance_container -> guidance_container
    int guidance_description -> guidance_description
    int guidance_icon -> guidance_icon
    int guidance_title -> guidance_title
    int guidedactions_activator_item -> guidedactions_activator_item
    int guidedactions_content -> guidedactions_content
    int guidedactions_content2 -> guidedactions_content2
    int guidedactions_item_checkmark -> guidedactions_item_checkmark
    int guidedactions_item_chevron -> guidedactions_item_chevron
    int guidedactions_item_content -> guidedactions_item_content
    int guidedactions_item_description -> guidedactions_item_description
    int guidedactions_item_icon -> guidedactions_item_icon
    int guidedactions_item_title -> guidedactions_item_title
    int guidedactions_list -> guidedactions_list
    int guidedactions_list2 -> guidedactions_list2
    int guidedactions_list_background -> guidedactions_list_background
    int guidedactions_list_background2 -> guidedactions_list_background2
    int guidedactions_root -> guidedactions_root
    int guidedactions_root2 -> guidedactions_root2
    int guidedactions_sub_list -> guidedactions_sub_list
    int guidedactions_sub_list_background -> guidedactions_sub_list_background
    int guidedstep_background -> guidedstep_background
    int guidedstep_background_view_root -> guidedstep_background_view_root
    int guidedstep_root -> guidedstep_root
    int header -> header
    int header_debug_info -> header_debug_info
    int heads_up_scrim -> heads_up_scrim
    int height_animator_end_value_tag -> height_animator_end_value_tag
    int height_animator_start_value_tag -> height_animator_start_value_tag
    int height_animator_tag -> height_animator_tag
    int home -> home
    int homeAsUp -> homeAsUp
    int horizontal -> horizontal
    int hovercard_panel -> hovercard_panel
    int icon -> icon
    int icon_container -> icon_container
    int icon_frame -> icon_frame
    int icon_is_grayscale -> icon_is_grayscale
    int icon_is_pre_L -> icon_is_pre_L
    int ifRoom -> ifRoom
    int image -> image
    int image_icon_tag -> image_icon_tag
    int ime_switcher -> ime_switcher
    int incompatible_app_overlay -> incompatible_app_overlay
    int incompatible_app_overlay_stub -> incompatible_app_overlay_stub
    int incompatible_app_toast -> incompatible_app_toast
    int incompatible_app_toast_stub -> incompatible_app_toast_stub
    int info -> info
    int infoOver -> infoOver
    int infoUnder -> infoUnder
    int infoUnderWithExtra -> infoUnderWithExtra
    int info_field -> info_field
    int initial -> initial
    int is_clicked_heads_up_tag -> is_clicked_heads_up_tag
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int key0 -> key0
    int key1 -> key1
    int key2 -> key2
    int key3 -> key3
    int key4 -> key4
    int key5 -> key5
    int key6 -> key6
    int key7 -> key7
    int key8 -> key8
    int key9 -> key9
    int key_enter -> key_enter
    int keyboard_shortcuts_container -> keyboard_shortcuts_container
    int keyboard_shortcuts_icon -> keyboard_shortcuts_icon
    int keyboard_shortcuts_item_container -> keyboard_shortcuts_item_container
    int keyboard_shortcuts_keyword -> keyboard_shortcuts_keyword
    int keyboard_shortcuts_scroll_view -> keyboard_shortcuts_scroll_view
    int keyguard_bottom_area -> keyguard_bottom_area
    int keyguard_carrier_text -> keyguard_carrier_text
    int keyguard_clock_container -> keyguard_clock_container
    int keyguard_disable_esim -> keyguard_disable_esim
    int keyguard_esim_area -> keyguard_esim_area
    int keyguard_header -> keyguard_header
    int keyguard_host_view -> keyguard_host_view
    int keyguard_indication_area -> keyguard_indication_area
    int keyguard_indication_enterprise_disclosure -> keyguard_indication_enterprise_disclosure
    int keyguard_indication_text -> keyguard_indication_text
    int keyguard_message_area -> keyguard_message_area
    int keyguard_password_view -> keyguard_password_view
    int keyguard_pattern_view -> keyguard_pattern_view
    int keyguard_pin_view -> keyguard_pin_view
    int keyguard_security_container -> keyguard_security_container
    int keyguard_selector_fade_container -> keyguard_selector_fade_container
    int keyguard_sim -> keyguard_sim
    int keyguard_sim_pin_view -> keyguard_sim_pin_view
    int keyguard_sim_puk_view -> keyguard_sim_puk_view
    int keyguard_status_area -> keyguard_status_area
    int keyguard_status_view -> keyguard_status_view
    int keyguard_user_switcher -> keyguard_user_switcher
    int keyguard_user_switcher_inner -> keyguard_user_switcher_inner
    int klondike_text -> klondike_text
    int label -> label
    int label_group -> label_group
    int lb_action_button -> lb_action_button
    int lb_control_closed_captioning -> lb_control_closed_captioning
    int lb_control_fast_forward -> lb_control_fast_forward
    int lb_control_fast_rewind -> lb_control_fast_rewind
    int lb_control_high_quality -> lb_control_high_quality
    int lb_control_more_actions -> lb_control_more_actions
    int lb_control_picture_in_picture -> lb_control_picture_in_picture
    int lb_control_play_pause -> lb_control_play_pause
    int lb_control_repeat -> lb_control_repeat
    int lb_control_shuffle -> lb_control_shuffle
    int lb_control_skip_next -> lb_control_skip_next
    int lb_control_skip_previous -> lb_control_skip_previous
    int lb_control_thumbs_down -> lb_control_thumbs_down
    int lb_control_thumbs_up -> lb_control_thumbs_up
    int lb_details_description_body -> lb_details_description_body
    int lb_details_description_subtitle -> lb_details_description_subtitle
    int lb_details_description_title -> lb_details_description_title
    int lb_focus_animator -> lb_focus_animator
    int lb_guidedstep_background -> lb_guidedstep_background
    int lb_parallax_source -> lb_parallax_source
    int lb_results_frame -> lb_results_frame
    int lb_row_container_header_dock -> lb_row_container_header_dock
    int lb_search_bar -> lb_search_bar
    int lb_search_bar_badge -> lb_search_bar_badge
    int lb_search_bar_items -> lb_search_bar_items
    int lb_search_bar_speech_orb -> lb_search_bar_speech_orb
    int lb_search_frame -> lb_search_frame
    int lb_search_text_editor -> lb_search_text_editor
    int lb_shadow_focused -> lb_shadow_focused
    int lb_shadow_impl -> lb_shadow_impl
    int lb_shadow_normal -> lb_shadow_normal
    int lb_slide_transition_value -> lb_slide_transition_value
    int left -> left
    int left_button -> left_button
    int lights_out -> lights_out
    int list -> list
    int listMode -> listMode
    int list_item -> list_item
    int lockPatternView -> lockPatternView
    int lock_icon -> lock_icon
    int lock_to_app_fab -> lock_to_app_fab
    int logo -> logo
    int main -> main
    int mainOnly -> mainOnly
    int main_icon -> main_icon
    int main_image -> main_image
    int maxLines -> maxLines
    int mediaItemActionsContainer -> mediaItemActionsContainer
    int mediaItemDetails -> mediaItemDetails
    int mediaItemDuration -> mediaItemDuration
    int mediaItemName -> mediaItemName
    int mediaItemNumberViewFlipper -> mediaItemNumberViewFlipper
    int mediaItemRow -> mediaItemRow
    int mediaListHeader -> mediaListHeader
    int mediaRowSelector -> mediaRowSelector
    int mediaRowSeparator -> mediaRowSeparator
    int menu -> menu
    int menu_container -> menu_container
    int message -> message
    int middle -> middle
    int minimized_dock_shadow -> minimized_dock_shadow
    int mobile_combo -> mobile_combo
    int mobile_in -> mobile_in
    int mobile_out -> mobile_out
    int mobile_roaming -> mobile_roaming
    int mobile_signal -> mobile_signal
    int mobile_signal_dark -> mobile_signal_dark
    int mobile_signal_data -> mobile_signal_data
    int mobile_signal_group -> mobile_signal_group
    int mobile_signal_single -> mobile_signal_single
    int mobile_signal_stacked -> mobile_signal_stacked
    int mobile_signal_voice -> mobile_signal_voice
    int mobile_type -> mobile_type
    int more_actions_dock -> more_actions_dock
    int more_settings -> more_settings
    int move_task -> move_task
    int mr_art -> mr_art
    int mr_chooser_list -> mr_chooser_list
    int mr_chooser_route_desc -> mr_chooser_route_desc
    int mr_chooser_route_icon -> mr_chooser_route_icon
    int mr_chooser_route_name -> mr_chooser_route_name
    int mr_chooser_title -> mr_chooser_title
    int mr_close -> mr_close
    int mr_control_divider -> mr_control_divider
    int mr_control_playback_ctrl -> mr_control_playback_ctrl
    int mr_control_subtitle -> mr_control_subtitle
    int mr_control_title -> mr_control_title
    int mr_control_title_container -> mr_control_title_container
    int mr_custom_control -> mr_custom_control
    int mr_default_control -> mr_default_control
    int mr_dialog_area -> mr_dialog_area
    int mr_expandable_area -> mr_expandable_area
    int mr_group_expand_collapse -> mr_group_expand_collapse
    int mr_media_main_control -> mr_media_main_control
    int mr_name -> mr_name
    int mr_playback_control -> mr_playback_control
    int mr_title_bar -> mr_title_bar
    int mr_volume_control -> mr_volume_control
    int mr_volume_group_list -> mr_volume_group_list
    int mr_volume_item_icon -> mr_volume_item_icon
    int mr_volume_slider -> mr_volume_slider
    int multi_user_avatar -> multi_user_avatar
    int multi_user_switch -> multi_user_switch
    int multiply -> multiply
    int nav_bar_background -> nav_bar_background
    int nav_bar_scrim -> nav_bar_scrim
    int nav_buttons -> nav_buttons
    int navigation_bar_frame -> navigation_bar_frame
    int navigation_inflater -> navigation_inflater
    int navigator_container -> navigator_container
    int network_logging_disclosures -> network_logging_disclosures
    int network_logging_subtitle -> network_logging_subtitle
    int network_logging_warning -> network_logging_warning
    int never -> never
    int no_notifications -> no_notifications
    int no_sims -> no_sims
    int no_sims_combo -> no_sims_combo
    int no_sims_dark -> no_sims_dark
    int none -> none
    int normal -> normal
    int notificationIcons -> notificationIcons
    int notification_children_container -> notification_children_container
    int notification_container_parent -> notification_container_parent
    int notification_guts -> notification_guts
    int notification_guts_stub -> notification_guts_stub
    int notification_hidden -> notification_hidden
    int notification_icon_area -> notification_icon_area
    int notification_icon_area_inner -> notification_icon_area_inner
    int notification_lights_out -> notification_lights_out
    int notification_more_divider -> notification_more_divider
    int notification_panel -> notification_panel
    int notification_plugin -> notification_plugin
    int notification_power -> notification_power
    int notification_screenshot -> notification_screenshot
    int notification_snooze -> notification_snooze
    int notification_stack_scroller -> notification_stack_scroller
    int notification_temperature -> notification_temperature
    int notification_text -> notification_text
    int notification_title -> notification_title
    int num_channels_desc -> num_channels_desc
    int onboarding_fragment_root -> onboarding_fragment_root
    int overlay_container -> overlay_container
    int owner_info -> owner_info
    int page_container -> page_container
    int page_decor -> page_decor
    int page_indicator -> page_indicator
    int parentPanel -> parentPanel
    int passwordEntry -> passwordEntry
    int paused -> paused
    int picker -> picker
    int pinEntry -> pinEntry
    int pip_controls -> pip_controls
    int pip_dismiss_text -> pip_dismiss_text
    int pkg_group_divider -> pkg_group_divider
    int pkgicon -> pkgicon
    int pkgname -> pkgname
    int play_button -> play_button
    int play_button_image -> play_button_image
    int play_button_text -> play_button_text
    int play_pause_button -> play_pause_button
    int playback_controls_dock -> playback_controls_dock
    int playback_fragment_background -> playback_fragment_background
    int playback_fragment_root -> playback_fragment_root
    int playback_progress -> playback_progress
    int player_minus_button -> player_minus_button
    int player_plus_button -> player_plus_button
    int player_setup -> player_setup
    int playing -> playing
    int presentation -> presentation
    int preview_container -> preview_container
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int pukEntry -> pukEntry
    int qs_carrier_text -> qs_carrier_text
    int qs_customize -> qs_customize
    int qs_detail -> qs_detail
    int qs_detail_header -> qs_detail_header
    int qs_detail_header_progress -> qs_detail_header_progress
    int qs_footer -> qs_footer
    int qs_frame -> qs_frame
    int qs_icon_tag -> qs_icon_tag
    int qs_navbar_scrim -> qs_navbar_scrim
    int qs_slash_tag -> qs_slash_tag
    int quick_qs_panel -> quick_qs_panel
    int quick_settings_container -> quick_settings_container
    int quick_settings_panel -> quick_settings_panel
    int radio -> radio
    int radio_button -> radio_button
    int recent_apps -> recent_apps
    int recents_view -> recents_view
    int remember -> remember
    int remote_input -> remote_input
    int remote_input_progress -> remote_input_progress
    int remote_input_send -> remote_input_send
    int remote_input_text -> remote_input_text
    int report_rejected_touch -> report_rejected_touch
    int restricted_icon -> restricted_icon
    int restricted_padlock -> restricted_padlock
    int right -> right
    int roaming_text -> roaming_text
    int rot0 -> rot0
    int rot90 -> rot90
    int row0 -> row0
    int row1 -> row1
    int row2 -> row2
    int row3 -> row3
    int row4 -> row4
    int row_content -> row_content
    int row_header -> row_header
    int row_header_description -> row_header_description
    int scale_frame -> scale_frame
    int scale_x_animator_end_value_tag -> scale_x_animator_end_value_tag
    int scale_x_animator_start_value_tag -> scale_x_animator_start_value_tag
    int scale_x_animator_tag -> scale_x_animator_tag
    int scale_y_animator_end_value_tag -> scale_y_animator_end_value_tag
    int scale_y_animator_start_value_tag -> scale_y_animator_start_value_tag
    int scale_y_animator_tag -> scale_y_animator_tag
    int score -> score
    int scores -> scores
    int screen -> screen
    int screen_pinning_back_bg -> screen_pinning_back_bg
    int screen_pinning_back_bg_light -> screen_pinning_back_bg_light
    int screen_pinning_back_group -> screen_pinning_back_group
    int screen_pinning_buttons -> screen_pinning_buttons
    int screen_pinning_cancel_button -> screen_pinning_cancel_button
    int screen_pinning_description -> screen_pinning_description
    int screen_pinning_home_group -> screen_pinning_home_group
    int screen_pinning_ok_button -> screen_pinning_ok_button
    int screen_pinning_recents_bg -> screen_pinning_recents_bg
    int screen_pinning_recents_bg_light -> screen_pinning_recents_bg_light
    int screen_pinning_recents_group -> screen_pinning_recents_group
    int screen_pinning_text_area -> screen_pinning_text_area
    int screen_pinning_title -> screen_pinning_title
    int scrim -> scrim
    int scrim_alpha_end -> scrim_alpha_end
    int scrim_alpha_start -> scrim_alpha_start
    int scrim_behind -> scrim_behind
    int scrim_in_front -> scrim_in_front
    int scrim_target -> scrim_target
    int scrollIndicatorDown -> scrollIndicatorDown
    int scrollIndicatorUp -> scrollIndicatorUp
    int scrollView -> scrollView
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_logo -> search_logo
    int search_mag_icon -> search_mag_icon
    int search_orb -> search_orb
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int secondary_controls_dock -> secondary_controls_dock
    int seekbar -> seekbar
    int seekbar_value -> seekbar_value
    int select_dialog_listview -> select_dialog_listview
    int selected -> selected
    int separate_time -> separate_time
    int separator -> separator
    int settings -> settings
    int settings_button -> settings_button
    int settings_button_container -> settings_button_container
    int shadow_alpha_animator_end_value_tag -> shadow_alpha_animator_end_value_tag
    int shadow_alpha_animator_start_value_tag -> shadow_alpha_animator_start_value_tag
    int shadow_alpha_animator_tag -> shadow_alpha_animator_tag
    int shelf_menu_anchor_anchor -> shelf_menu_anchor_anchor
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int signal_cluster -> signal_cluster
    int simPinEntry -> simPinEntry
    int slider -> slider
    int small -> small
    int snooze_option_default -> snooze_option_default
    int snooze_options -> snooze_options
    int spacer -> spacer
    int spinner -> spinner
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int start -> start
    int start_driving -> start_driving
    int statusIcons -> statusIcons
    int status_bar -> status_bar
    int status_bar_container -> status_bar_container
    int status_bar_contents -> status_bar_contents
    int submenuarrow -> submenuarrow
    int submit_area -> submit_area
    int switchWidget -> switchWidget
    int switch_bar -> switch_bar
    int switch_ime_button -> switch_ime_button
    int switch_text -> switch_text
    int switching_users -> switching_users
    int system_icon_area -> system_icon_area
    int system_icons -> system_icons
    int system_icons_container -> system_icons_container
    int system_icons_super_container -> system_icons_super_container
    int tabMode -> tabMode
    int task_view_bar -> task_view_bar
    int task_view_thumbnail -> task_view_thumbnail
    int textSpacerNoButtons -> textSpacerNoButtons
    int textSpacerNoTitle -> textSpacerNoTitle
    int thumbs_row -> thumbs_row
    int tile_label -> tile_label
    int tile_page -> tile_page
    int time_view -> time_view
    int title -> title
    int titleDividerNoCustom -> titleDividerNoCustom
    int title_badge -> title_badge
    int title_orb -> title_orb
    int title_template -> title_template
    int title_text -> title_text
    int toggle -> toggle
    int top -> top
    int topPanel -> topPanel
    int top_inset_animator_end_value_tag -> top_inset_animator_end_value_tag
    int top_inset_animator_start_value_tag -> top_inset_animator_start_value_tag
    int top_inset_animator_tag -> top_inset_animator_tag
    int total_time -> total_time
    int transformation_start_scale_x_tag -> transformation_start_scale_x_tag
    int transformation_start_scale_y_tag -> transformation_start_scale_y_tag
    int transformation_start_x_tag -> transformation_start_x_tag
    int transformation_start_y_tag -> transformation_start_y_tag
    int transitionPosition -> transitionPosition
    int translation_x_animator_end_value_tag -> translation_x_animator_end_value_tag
    int translation_x_animator_start_value_tag -> translation_x_animator_start_value_tag
    int translation_x_animator_tag -> translation_x_animator_tag
    int translation_y_animator_end_value_tag -> translation_y_animator_end_value_tag
    int translation_y_animator_start_value_tag -> translation_y_animator_start_value_tag
    int translation_y_animator_tag -> translation_y_animator_tag
    int translation_z_animator_end_value_tag -> translation_z_animator_end_value_tag
    int translation_z_animator_start_value_tag -> translation_z_animator_start_value_tag
    int translation_z_animator_tag -> translation_z_animator_tag
    int transport_row -> transport_row
    int tuner_icon -> tuner_icon
    int tuner_zen_buttons -> tuner_zen_buttons
    int tuner_zen_mode_panel -> tuner_zen_mode_panel
    int tuner_zen_switch -> tuner_zen_switch
    int two_target_divider -> two_target_divider
    int underline -> underline
    int undo -> undo
    int uniform -> uniform
    int up -> up
    int usage_carrier_text -> usage_carrier_text
    int usage_graph -> usage_graph
    int usage_info_bottom_text -> usage_info_bottom_text
    int usage_info_top_text -> usage_info_top_text
    int usage_period_text -> usage_period_text
    int usage_text -> usage_text
    int useLogo -> useLogo
    int user_avatar -> user_avatar
    int user_grid -> user_grid
    int user_name -> user_name
    int user_picture -> user_picture
    int user_switcher_page_indicator -> user_switcher_page_indicator
    int vertical -> vertical
    int veto -> veto
    int video_surface -> video_surface
    int video_surface_container -> video_surface_container
    int view_flipper -> view_flipper
    int volume_dialog -> volume_dialog
    int volume_dialog_content -> volume_dialog_content
    int volume_dialog_rows -> volume_dialog_rows
    int volume_expand_button -> volume_expand_button
    int volume_item_container -> volume_item_container
    int volume_row_header -> volume_row_header
    int volume_row_icon -> volume_row_icon
    int volume_row_slider -> volume_row_slider
    int volume_zen_end_now -> volume_zen_end_now
    int volume_zen_footer -> volume_zen_footer
    int volume_zen_icon -> volume_zen_icon
    int volume_zen_summary_line_1 -> volume_zen_summary_line_1
    int volume_zen_summary_line_2 -> volume_zen_summary_line_2
    int vpn -> vpn
    int vpn_disclosures -> vpn_disclosures
    int vpn_subtitle -> vpn_subtitle
    int vpn_warning -> vpn_warning
    int welcome -> welcome
    int widget_icon -> widget_icon
    int width -> width
    int wifi_airplane_spacer -> wifi_airplane_spacer
    int wifi_combo -> wifi_combo
    int wifi_in -> wifi_in
    int wifi_inout -> wifi_inout
    int wifi_out -> wifi_out
    int wifi_signal -> wifi_signal
    int wifi_signal_dark -> wifi_signal_dark
    int wifi_signal_spacer -> wifi_signal_spacer
    int withText -> withText
    int world -> world
    int wrap_content -> wrap_content
    int zen_alarm_warning -> zen_alarm_warning
    int zen_buttons -> zen_buttons
    int zen_conditions -> zen_conditions
    int zen_embedded_divider -> zen_embedded_divider
    int zen_introduction -> zen_introduction
    int zen_introduction_confirm -> zen_introduction_confirm
    int zen_introduction_customize -> zen_introduction_customize
    int zen_introduction_message -> zen_introduction_message
    int zen_mode_panel -> zen_mode_panel
    int zen_radio_buttons -> zen_radio_buttons
    int zen_radio_buttons_content -> zen_radio_buttons_content
    void <init>() -> <init>
com.android.systemui.statusbar.policy.LocationController$LocationChangeCallback -> com.android.systemui.statusbar.policy.LocationController$LocationChangeCallback:
    void onLocationActiveChanged(boolean) -> onLocationActiveChanged
    void onLocationSettingsChanged(boolean) -> onLocationSettingsChanged
com.android.systemui.egg.MLand$2 -> com.android.systemui.egg.MLand$2:
    com.android.systemui.egg.MLand this$0 -> this$0
    android.widget.TextView val$playText -> val$playText
    void <init>(com.android.systemui.egg.MLand,android.widget.TextView) -> <init>
    void run() -> run
com.android.systemui.qs.customize.TileAdapter$3 -> com.android.systemui.qs.customize.TileAdapter$3:
    com.android.systemui.qs.customize.TileAdapter this$0 -> this$0
    com.android.systemui.qs.customize.TileAdapter$Holder val$holder -> val$holder
    void <init>(com.android.systemui.qs.customize.TileAdapter,com.android.systemui.qs.customize.TileAdapter$Holder) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.phone.NotificationPanelView$8 -> com.android.systemui.statusbar.phone.NotificationPanelView$8:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void onFragmentViewCreated(java.lang.String,android.app.Fragment) -> onFragmentViewCreated
    void onFragmentViewDestroyed(java.lang.String,android.app.Fragment) -> onFragmentViewDestroyed
    void lambda$-com_android_systemui_statusbar_phone_NotificationPanelView$8_111493(android.view.View,int,int,int,int,int,int,int,int) -> lambda$-com_android_systemui_statusbar_phone_NotificationPanelView$8_111493
com.android.systemui.statusbar.ScalingDrawableWrapper -> com.android.systemui.statusbar.ScalingDrawableWrapper:
    float mScaleFactor -> mScaleFactor
    void <init>(android.graphics.drawable.Drawable,float) -> <init>
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
com.android.systemui.statusbar.ActivatableNotificationView$4 -> com.android.systemui.statusbar.ActivatableNotificationView$4:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void run() -> run
android.support.v17.leanback.widget.picker.Picker$ViewHolder -> android.support.v17.leanback.widget.picker.Picker$ViewHolder:
    android.widget.TextView textView -> textView
    void <init>(android.view.View,android.widget.TextView) -> <init>
com.google.protobuf.nano.android.ParcelableExtendableMessageNano -> com.google.protobuf.nano.android.ParcelableExtendableMessageNano:
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    int describeContents() -> describeContents
android.support.v4.view.ViewCompat$ViewCompatApi24Impl -> android.support.v4.view.ViewCompat$ViewCompatApi24Impl:
    void <init>() -> <init>
com.android.systemui.volume.SegmentedButtons$2 -> com.android.systemui.volume.SegmentedButtons$2:
    com.android.systemui.volume.SegmentedButtons this$0 -> this$0
    void <init>(com.android.systemui.volume.SegmentedButtons) -> <init>
    void onInteraction() -> onInteraction
com.android.systemui.statusbar.phone.StatusBarWindowView$1 -> com.android.systemui.statusbar.phone.StatusBarWindowView$1:
    com.android.systemui.statusbar.phone.StatusBarWindowView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView,android.content.Context) -> <init>
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void alwaysReadCloseOnTouchAttr() -> alwaysReadCloseOnTouchAttr
    void clearContentView() -> clearContentView
    void closeAllPanels() -> closeAllPanels
    void closePanel(int) -> closePanel
    android.view.View getCurrentFocus() -> getCurrentFocus
    android.view.View getDecorView() -> getDecorView
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    int getNavigationBarColor() -> getNavigationBarColor
    int getStatusBarColor() -> getStatusBarColor
    int getVolumeControlStream() -> getVolumeControlStream
    void invalidatePanelMenu(int) -> invalidatePanelMenu
    boolean isFloating() -> isFloating
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void onActive() -> onActive
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onMultiWindowModeChanged() -> onMultiWindowModeChanged
    void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    void openPanel(int,android.view.KeyEvent) -> openPanel
    android.view.View peekDecorView() -> peekDecorView
    boolean performContextMenuIdentifierAction(int,int) -> performContextMenuIdentifierAction
    boolean performPanelIdentifierAction(int,int,int) -> performPanelIdentifierAction
    boolean performPanelShortcut(int,int,android.view.KeyEvent,int) -> performPanelShortcut
    void reportActivityRelaunched() -> reportActivityRelaunched
    void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    android.os.Bundle saveHierarchyState() -> saveHierarchyState
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setChildDrawable(int,android.graphics.drawable.Drawable) -> setChildDrawable
    void setChildInt(int,int) -> setChildInt
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setDecorCaptionShade(int) -> setDecorCaptionShade
    void setFeatureDrawable(int,android.graphics.drawable.Drawable) -> setFeatureDrawable
    void setFeatureDrawableAlpha(int,int) -> setFeatureDrawableAlpha
    void setFeatureDrawableResource(int,int) -> setFeatureDrawableResource
    void setFeatureDrawableUri(int,android.net.Uri) -> setFeatureDrawableUri
    void setFeatureInt(int,int) -> setFeatureInt
    void setNavigationBarColor(int) -> setNavigationBarColor
    void setResizingCaptionDrawable(android.graphics.drawable.Drawable) -> setResizingCaptionDrawable
    void setStatusBarColor(int) -> setStatusBarColor
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitleColor(int) -> setTitleColor
    void setVolumeControlStream(int) -> setVolumeControlStream
    boolean superDispatchGenericMotionEvent(android.view.MotionEvent) -> superDispatchGenericMotionEvent
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    boolean superDispatchKeyShortcutEvent(android.view.KeyEvent) -> superDispatchKeyShortcutEvent
    boolean superDispatchTouchEvent(android.view.MotionEvent) -> superDispatchTouchEvent
    boolean superDispatchTrackballEvent(android.view.MotionEvent) -> superDispatchTrackballEvent
    void takeInputQueue(android.view.InputQueue$Callback) -> takeInputQueue
    void takeKeyEvents(boolean) -> takeKeyEvents
    void takeSurface(android.view.SurfaceHolder$Callback2) -> takeSurface
    void togglePanel(int,android.view.KeyEvent) -> togglePanel
com.android.systemui.volume.Interaction$Callback -> com.android.systemui.volume.Interaction$Callback:
    void onInteraction() -> onInteraction
android.support.v17.leanback.widget.TitleView$1 -> android.support.v17.leanback.widget.TitleView$1:
    android.support.v17.leanback.widget.TitleView this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.TitleView) -> <init>
com.android.systemui.recents.RecentsImpl -> com.android.systemui.recents.RecentsImpl:
    android.util.ArraySet EMPTY_SET -> EMPTY_SET
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm mBackgroundLayoutAlgorithm -> mBackgroundLayoutAlgorithm
    android.content.Context mContext -> mContext
    boolean mDraggingInRecents -> mDraggingInRecents
    com.android.systemui.recents.views.TaskStackView mDummyStackView -> mDummyStackView
    com.android.systemui.recents.misc.DozeTrigger mFastAltTabTrigger -> mFastAltTabTrigger
    android.os.Handler mHandler -> mHandler
    com.android.systemui.recents.views.TaskViewHeader mHeaderBar -> mHeaderBar
    java.lang.Object mHeaderBarLock -> mHeaderBarLock
    long mLastToggleTime -> mLastToggleTime
    boolean mLaunchedWhileDocking -> mLaunchedWhileDocking
    android.app.ActivityOptions$OnAnimationStartedListener mResetToggleFlagListener -> mResetToggleFlagListener
    int mTaskBarHeight -> mTaskBarHeight
    com.android.systemui.recents.RecentsImpl$TaskStackListenerImpl mTaskStackListener -> mTaskStackListener
    android.graphics.Rect mTmpBounds -> mTmpBounds
    com.android.systemui.recents.views.TaskViewTransform mTmpTransform -> mTmpTransform
    boolean mToggleFollowingTransitionStart -> mToggleFollowingTransitionStart
    boolean mTriggeredFromAltTab -> mTriggeredFromAltTab
    boolean mWaitingForTransitionStart -> mWaitingForTransitionStart
    com.android.systemui.recents.model.RecentsTaskLoadPlan sInstanceLoadPlan -> sInstanceLoadPlan
    long sLastPipTime -> sLastPipTime
    void <init>(android.content.Context) -> <init>
    void onBootCompleted() -> onBootCompleted
    void showRecents(boolean,boolean,boolean,boolean,boolean,int) -> showRecents
    void hideRecents(boolean,boolean) -> hideRecents
    void toggleRecents(int) -> toggleRecents
    void preloadRecents() -> preloadRecents
    void cancelPreloadingRecents() -> cancelPreloadingRecents
    void dockTopTask(int,int,int,android.graphics.Rect) -> dockTopTask
    void onDraggingInRecents(float) -> onDraggingInRecents
    void onDraggingInRecentsEnded(float) -> onDraggingInRecentsEnded
    void showNextAffiliatedTask() -> showNextAffiliatedTask
    void showPrevAffiliatedTask() -> showPrevAffiliatedTask
    void onConfigurationChanged() -> onConfigurationChanged
    void onVisibilityChanged(android.content.Context,boolean) -> onVisibilityChanged
    void setWaitingForTransitionStart(boolean) -> setWaitingForTransitionStart
    void onStartScreenPinning(android.content.Context,int) -> onStartScreenPinning
    void onShowCurrentUserToast(int,int) -> onShowCurrentUserToast
    void calculateWindowStableInsets(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> calculateWindowStableInsets
    void clearLastPipTime() -> clearLastPipTime
    com.android.systemui.recents.model.RecentsTaskLoadPlan consumeInstanceLoadPlan() -> consumeInstanceLoadPlan
    android.graphics.GraphicBuffer drawThumbnailTransitionBitmap(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskViewTransform) -> drawThumbnailTransitionBitmap
    android.app.ActivityOptions getHomeTransitionActivityOptions() -> getHomeTransitionActivityOptions
    long getLastPipTime() -> getLastPipTime
    android.util.Pair getThumbnailTransitionActivityOptions(android.app.ActivityManager$RunningTaskInfo,android.graphics.Rect) -> getThumbnailTransitionActivityOptions
    com.android.systemui.recents.views.TaskViewTransform getThumbnailTransitionTransform(com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.model.Task,android.graphics.Rect) -> getThumbnailTransitionTransform
    android.app.ActivityOptions getUnknownTransitionActivityOptions() -> getUnknownTransitionActivityOptions
    android.graphics.Rect getWindowRect(android.graphics.Rect) -> getWindowRect
    android.graphics.Rect getWindowRectOverride(int) -> getWindowRectOverride
    void onAnimationFinished() -> onAnimationFinished
    void preloadIcon(int) -> preloadIcon
    void reloadResources() -> reloadResources
    void showNextTask() -> showNextTask
    void showRelativeAffiliatedTask(boolean) -> showRelativeAffiliatedTask
    void startRecentsActivity(android.app.ActivityOptions,com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture) -> startRecentsActivity
    void startRecentsActivity(android.app.ActivityManager$RunningTaskInfo,boolean,boolean,int) -> startRecentsActivity
    void updateDummyStackViewLayout(com.android.systemui.recents.views.TaskStackLayoutAlgorithm,com.android.systemui.recents.model.TaskStack,android.graphics.Rect) -> updateDummyStackViewLayout
    void updateHeaderBarLayout(com.android.systemui.recents.model.TaskStack,android.graphics.Rect) -> updateHeaderBarLayout
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_recents_RecentsImpl_22230(com.android.systemui.recents.misc.SystemServicesProxy) -> lambda$-com_android_systemui_recents_RecentsImpl_22230
    void lambda$-com_android_systemui_recents_RecentsImpl_31575() -> lambda$-com_android_systemui_recents_RecentsImpl_31575
    java.util.List lambda$-com_android_systemui_recents_RecentsImpl_42149(android.graphics.RectF,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskViewTransform) -> lambda$-com_android_systemui_recents_RecentsImpl_42149
    void lambda$-com_android_systemui_recents_RecentsImpl_51344(android.content.Intent,android.app.ActivityOptions,com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture) -> lambda$-com_android_systemui_recents_RecentsImpl_51344
    android.util.ArraySet -get0() -> -get0
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm -get1(com.android.systemui.recents.RecentsImpl) -> -get1
    android.graphics.Rect -wrap0(com.android.systemui.recents.RecentsImpl,android.graphics.Rect) -> -wrap0
    void -wrap1(com.android.systemui.recents.RecentsImpl,com.android.systemui.recents.views.TaskStackLayoutAlgorithm,com.android.systemui.recents.model.TaskStack,android.graphics.Rect) -> -wrap1
com.android.systemui.ForegroundServiceController -> com.android.systemui.ForegroundServiceController:
    boolean isDungeonNotification(android.service.notification.StatusBarNotification) -> isDungeonNotification
    boolean isDungeonNeededForUser(int) -> isDungeonNeededForUser
    void addNotification(android.service.notification.StatusBarNotification,int) -> addNotification
    boolean removeNotification(android.service.notification.StatusBarNotification) -> removeNotification
    void updateNotification(android.service.notification.StatusBarNotification,int) -> updateNotification
android.arch.core.internal.SafeIterableMap -> android.arch.core.internal.SafeIterableMap:
    android.arch.core.internal.SafeIterableMap$Entry mStart -> mStart
    android.arch.core.internal.SafeIterableMap$Entry mEnd -> mEnd
    int mSize -> mSize
    java.util.WeakHashMap mIterators -> mIterators
    java.util.Iterator descendingIterator() -> descendingIterator
    android.arch.core.internal.SafeIterableMap$Entry access$100(android.arch.core.internal.SafeIterableMap) -> access$100
    java.util.Map$Entry newest() -> newest
    boolean equals(java.lang.Object) -> equals
    int size() -> size
    java.util.Map$Entry eldest() -> eldest
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    android.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    void <init>() -> <init>
android.support.v4.content.SharedPreferencesCompat$EditorCompat -> android.support.v4.content.SharedPreferencesCompat$EditorCompat:
    android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper mHelper -> mHelper
    android.support.v4.content.SharedPreferencesCompat$EditorCompat sInstance -> sInstance
    void apply(android.content.SharedPreferences$Editor) -> apply
    android.support.v4.content.SharedPreferencesCompat$EditorCompat getInstance() -> getInstance
    void <init>() -> <init>
android.support.v7.widget.ListPopupWindow$3 -> android.support.v7.widget.ListPopupWindow$3:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v17.leanback.widget.VideoSurfaceView -> android.support.v17.leanback.widget.VideoSurfaceView:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void setTransitionVisibility(int) -> setTransitionVisibility
android.arch.lifecycle.ReportFragment -> android.arch.lifecycle.ReportFragment:
    android.arch.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener -> mProcessListener
    void dispatchCreate(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    void onStop() -> onStop
    void onStart() -> onStart
    void dispatchStart(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onPause() -> onPause
    void dispatch(android.arch.lifecycle.Lifecycle$Event) -> dispatch
    void <init>() -> <init>
    void dispatchResume(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.support.v4.media.session.IMediaSession mExtraBinder -> mExtraBinder
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Object mInner -> mInner
    android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    java.lang.Object getToken() -> getToken
    void <clinit>() -> <clinit>
    void <init>(java.lang.Object) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.systemui.plugins.statusbar.phone.NavBarButtonProvider$ButtonInterface -> com.android.systemui.plugins.statusbar.phone.NavBarButtonProvider$ButtonInterface:
    void abortCurrentGesture() -> abortCurrentGesture
    void setVertical(boolean) -> setVertical
    void setCarMode(boolean) -> setCarMode
    void setDarkIntensity(float) -> setDarkIntensity
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
com.android.systemui.shortcut.ShortcutKeyDispatcher -> com.android.systemui.shortcut.ShortcutKeyDispatcher:
    long ALT_MASK -> ALT_MASK
    long CTRL_MASK -> CTRL_MASK
    long META_MASK -> META_MASK
    long SC_DOCK_LEFT -> SC_DOCK_LEFT
    long SC_DOCK_RIGHT -> SC_DOCK_RIGHT
    long SHIFT_MASK -> SHIFT_MASK
    android.app.IActivityManager mActivityManager -> mActivityManager
    com.android.systemui.shortcut.ShortcutKeyServiceProxy mShortcutKeyServiceProxy -> mShortcutKeyServiceProxy
    android.view.IWindowManager mWindowManagerService -> mWindowManagerService
    void <init>() -> <init>
    void handleDockKey(long) -> handleDockKey
    void onShortcutKeyPressed(long) -> onShortcutKeyPressed
    void registerShortcutKey(long) -> registerShortcutKey
    void start() -> start
com.android.systemui.shortcut.ShortcutKeyServiceProxy -> com.android.systemui.shortcut.ShortcutKeyServiceProxy:
    com.android.systemui.shortcut.ShortcutKeyServiceProxy$Callbacks mCallbacks -> mCallbacks
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    void <init>(com.android.systemui.shortcut.ShortcutKeyServiceProxy$Callbacks) -> <init>
    void notifyShortcutKeyPressed(long) -> notifyShortcutKeyPressed
    com.android.systemui.shortcut.ShortcutKeyServiceProxy$Callbacks -get0(com.android.systemui.shortcut.ShortcutKeyServiceProxy) -> -get0
com.android.systemui.statusbar.car.-$Lambda$ELXiGoyPLg5ZablmtpJiw8QwRdc$1 -> com.android.systemui.statusbar.car.-$Lambda$ELXiGoyPLg5ZablmtpJiw8QwRdc$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.statusbar.ActivatableNotificationView$11 -> com.android.systemui.statusbar.ActivatableNotificationView$11:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.app.BundleCompat -> android.support.v4.app.BundleCompat:
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void <init>() -> <init>
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    android.view.View$AccessibilityDelegate mBridge -> mBridge
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl IMPL -> IMPL
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View$AccessibilityDelegate getBridge() -> getBridge
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v7.app.MediaRouteControllerDialog$7 -> android.support.v7.app.MediaRouteControllerDialog$7:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    int val$endValue -> val$endValue
    int val$startValue -> val$startValue
    android.view.View val$view -> val$view
    void <init>(android.support.v7.app.MediaRouteControllerDialog,int,int,android.view.View) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.android.systemui.recents.views.TaskStackView$InitialStateAction -> com.android.systemui.recents.views.TaskStackView$InitialStateAction:
com.android.systemui.statusbar.DragDownHelper$2 -> com.android.systemui.statusbar.DragDownHelper$2:
    com.android.systemui.statusbar.DragDownHelper this$0 -> this$0
    void <init>(com.android.systemui.statusbar.DragDownHelper) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.policy.ExtensionController$PluginConverter -> com.android.systemui.statusbar.policy.ExtensionController$PluginConverter:
    java.lang.Object getInterfaceFromPlugin(java.lang.Object) -> getInterfaceFromPlugin
android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener -> android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener:
    void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
com.android.systemui.screenshot.GlobalScreenshot$13 -> com.android.systemui.screenshot.GlobalScreenshot$13:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    android.view.animation.Interpolator val$scaleInterpolator -> val$scaleInterpolator
    android.graphics.PointF val$finalPos -> val$finalPos
    void <init>(com.android.systemui.screenshot.GlobalScreenshot,android.view.animation.Interpolator,android.graphics.PointF) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.settingslib.bluetooth.BluetoothEventManager$DeviceDisappearedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$DeviceDisappearedHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$DeviceDisappearedHandler) -> <init>
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl -> com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl:
    java.util.ArrayList mCallbacks -> mCallbacks
    java.lang.Object mItem -> mItem
    android.content.Context mPluginContext -> mPluginContext
    java.util.ArrayList mProducers -> mProducers
    com.android.systemui.statusbar.policy.ExtensionControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.ExtensionControllerImpl) -> <init>
    void addCallback(java.util.function.Consumer) -> addCallback
    void addDefault(java.util.function.Supplier) -> addDefault
    void addFeature(java.lang.String,java.util.function.Supplier) -> addFeature
    void addPlugin(java.lang.String,java.lang.Class,com.android.systemui.statusbar.policy.ExtensionController$PluginConverter) -> addPlugin
    void addTunerFactory(com.android.systemui.statusbar.policy.ExtensionController$TunerFactory,java.lang.String[]) -> addTunerFactory
    void clearItem(boolean) -> clearItem
    void destroy() -> destroy
    java.lang.Object get() -> get
    android.content.Context getContext() -> getContext
    void notifyChanged() -> notifyChanged
    java.lang.Object reload() -> reload
    java.util.ArrayList -get0(com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl) -> -get0
    java.util.ArrayList -get1(com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl) -> -get1
    android.content.Context -set0(com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl,android.content.Context) -> -set0
    void -wrap0(com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl) -> -wrap0
    void <init>(com.android.systemui.statusbar.policy.ExtensionControllerImpl,com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl) -> <init>
com.android.systemui.recents.model.RecentsTaskLoader$1 -> com.android.systemui.recents.model.RecentsTaskLoader$1:
    com.android.systemui.recents.model.RecentsTaskLoader this$0 -> this$0
    void <init>(com.android.systemui.recents.model.RecentsTaskLoader) -> <init>
    void onEntryEvicted(com.android.systemui.recents.model.Task$TaskKey) -> onEntryEvicted
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void <init>(java.lang.Object) -> <init>
    void play() -> play
    void pause() -> pause
    void stop() -> stop
com.android.settingslib.drawer.Tile -> com.android.settingslib.drawer.Tile:
    android.os.Bundle extras -> extras
    int priority -> priority
    android.widget.RemoteViews remoteViews -> remoteViews
    java.lang.CharSequence summary -> summary
    boolean isIconTintable -> isIconTintable
    java.lang.String key -> key
    java.lang.String category -> category
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.graphics.drawable.Icon icon -> icon
    android.content.Intent intent -> intent
    java.util.ArrayList userHandle -> userHandle
    android.os.Bundle metaData -> metaData
    java.lang.CharSequence title -> title
    void <clinit>() -> <clinit>
    void readFromParcel(android.os.Parcel) -> readFromParcel
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
com.android.systemui.globalactions.GlobalActionsDialog$ActionsDialog -> com.android.systemui.globalactions.GlobalActionsDialog$ActionsDialog:
    com.android.systemui.globalactions.GlobalActionsDialog$MyAdapter mAdapter -> mAdapter
    android.content.DialogInterface$OnClickListener mClickListener -> mClickListener
    com.android.internal.colorextraction.ColorExtractor mColorExtractor -> mColorExtractor
    android.content.Context mContext -> mContext
    com.android.internal.colorextraction.drawable.GradientDrawable mGradientDrawable -> mGradientDrawable
    com.android.systemui.HardwareUiLayout mHardwareLayout -> mHardwareLayout
    boolean mKeyguardShowing -> mKeyguardShowing
    android.widget.LinearLayout mListView -> mListView
    android.widget.AdapterView$OnItemLongClickListener mLongClickListener -> mLongClickListener
    void <init>(android.content.Context,android.content.DialogInterface$OnClickListener,com.android.systemui.globalactions.GlobalActionsDialog$MyAdapter,android.widget.AdapterView$OnItemLongClickListener) -> <init>
    void dismiss() -> dismiss
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    float getAnimTranslation() -> getAnimTranslation
    void onColorsChanged(com.android.internal.colorextraction.ColorExtractor,int) -> onColorsChanged
    void onStart() -> onStart
    void onStop() -> onStop
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void show() -> show
    void updateList() -> updateList
    void lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_46008(android.view.View) -> lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_46008
    void lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_46310(int,android.view.View) -> lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_46310
    boolean lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_46395(android.view.View,int,android.view.View) -> lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_46395
    void lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_47805(android.animation.ValueAnimator) -> lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_47805
    void lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_48096() -> lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_48096
    void lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_48535() -> lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_48535
    void lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_48667(android.animation.ValueAnimator) -> lambda$-com_android_systemui_globalactions_GlobalActionsDialog$ActionsDialog_48667
com.google.protobuf.nano.Extension -> com.google.protobuf.nano.Extension:
    boolean repeated -> repeated
    int tag -> tag
    java.lang.Class clazz -> clazz
    int type -> type
    void writeTo(java.lang.Object,com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    void writeSingularData(java.lang.Object,com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeSingularData
    int computeSingularSerializedSize(java.lang.Object) -> computeSingularSerializedSize
    int computeSerializedSize(java.lang.Object) -> computeSerializedSize
    void writeRepeatedData(java.lang.Object,com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeRepeatedData
    int computeRepeatedSerializedSize(java.lang.Object) -> computeRepeatedSerializedSize
android.support.v4.view.AsyncLayoutInflater$InflateRequest -> android.support.v4.view.AsyncLayoutInflater$InflateRequest:
    android.support.v4.view.AsyncLayoutInflater inflater -> inflater
    android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener callback -> callback
    int resid -> resid
    android.view.View view -> view
    android.view.ViewGroup parent -> parent
    void <init>() -> <init>
android.support.v7.widget.SearchView$SearchAutoComplete$1 -> android.support.v7.widget.SearchView$SearchAutoComplete$1:
    android.support.v7.widget.SearchView$SearchAutoComplete this$1 -> this$1
    void run() -> run
    void <init>(android.support.v7.widget.SearchView$SearchAutoComplete) -> <init>
com.google.protobuf.nano.MessageNano -> com.google.protobuf.nano.MessageNano:
    int cachedSize -> cachedSize
    int getCachedSize() -> getCachedSize
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.MessageNano,byte[]) -> mergeFrom
    int getSerializedSize() -> getSerializedSize
    int computeSerializedSize() -> computeSerializedSize
    com.google.protobuf.nano.MessageNano clone() -> clone
    void toByteArray(com.google.protobuf.nano.MessageNano,byte[],int,int) -> toByteArray
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.MessageNano,byte[],int,int) -> mergeFrom
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void <init>() -> <init>
    byte[] toByteArray(com.google.protobuf.nano.MessageNano) -> toByteArray
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
android.support.v17.leanback.R$attr -> android.support.v17.leanback.R$attr:
    int baseCardViewStyle -> baseCardViewStyle
    int browseTitleViewStyle -> browseTitleViewStyle
    int imageCardViewStyle -> imageCardViewStyle
    int rowHeaderStyle -> rowHeaderStyle
    int searchOrbViewStyle -> searchOrbViewStyle
    void <init>() -> <init>
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver -> android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    java.lang.String mAction -> mAction
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback mCallback -> mCallback
    android.os.Bundle mExtras -> mExtras
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v17.leanback.widget.ItemAlignmentFacet -> android.support.v17.leanback.widget.ItemAlignmentFacet:
    android.support.v17.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef[] mAlignmentDefs -> mAlignmentDefs
    android.support.v17.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef[] getAlignmentDefs() -> getAlignmentDefs
    void <init>() -> <init>
android.support.v7.app.AlertController$AlertParams$4 -> android.support.v7.app.AlertController$AlertParams$4:
    android.support.v7.app.AlertController$AlertParams this$1 -> this$1
    android.support.v7.app.AlertController$RecycleListView val$listView -> val$listView
    android.support.v7.app.AlertController val$dialog -> val$dialog
    void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController$RecycleListView,android.support.v7.app.AlertController) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$11 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$11:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    java.lang.Object mInfo -> mInfo
    void <init>(java.lang.Object) -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
com.android.systemui.keyboard.KeyboardUI$KeyboardHandler -> com.android.systemui.keyboard.KeyboardUI$KeyboardHandler:
    com.android.systemui.keyboard.KeyboardUI this$0 -> this$0
    void <init>(com.android.systemui.keyboard.KeyboardUI,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v7.view.SupportMenuInflater$MenuState -> android.support.v7.view.SupportMenuInflater$MenuState:
    boolean groupEnabled -> groupEnabled
    java.lang.String itemActionProviderClassName -> itemActionProviderClassName
    boolean itemAdded -> itemAdded
    int itemCategoryOrder -> itemCategoryOrder
    int itemActionViewLayout -> itemActionViewLayout
    boolean groupVisible -> groupVisible
    android.content.res.ColorStateList itemIconTintList -> itemIconTintList
    android.support.v4.view.ActionProvider itemActionProvider -> itemActionProvider
    int itemShowAsAction -> itemShowAsAction
    int itemAlphabeticModifiers -> itemAlphabeticModifiers
    boolean itemChecked -> itemChecked
    android.support.v7.view.SupportMenuInflater this$0 -> this$0
    int groupCheckable -> groupCheckable
    char itemNumericShortcut -> itemNumericShortcut
    int groupId -> groupId
    int itemId -> itemId
    android.graphics.PorterDuff$Mode itemIconTintMode -> itemIconTintMode
    java.lang.CharSequence itemTitleCondensed -> itemTitleCondensed
    int itemIconResId -> itemIconResId
    java.lang.String itemListenerMethodName -> itemListenerMethodName
    int groupCategory -> groupCategory
    boolean itemVisible -> itemVisible
    java.lang.CharSequence itemTitle -> itemTitle
    int groupOrder -> groupOrder
    boolean itemEnabled -> itemEnabled
    int itemNumericModifiers -> itemNumericModifiers
    android.view.Menu menu -> menu
    java.lang.CharSequence itemTooltipText -> itemTooltipText
    int itemCheckable -> itemCheckable
    char itemAlphabeticShortcut -> itemAlphabeticShortcut
    java.lang.String itemActionViewClassName -> itemActionViewClassName
    java.lang.CharSequence itemContentDescription -> itemContentDescription
    void readGroup(android.util.AttributeSet) -> readGroup
    char getShortcut(java.lang.String) -> getShortcut
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    void setItem(android.view.MenuItem) -> setItem
    void readItem(android.util.AttributeSet) -> readItem
    void <init>(android.support.v7.view.SupportMenuInflater,android.view.Menu) -> <init>
    boolean hasAddedItem() -> hasAddedItem
    android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    void resetGroup() -> resetGroup
    void addItem() -> addItem
com.android.systemui.statusbar.car.-$Lambda$gAZ84Xb3Qb415HO2o_U1LzYDKgw -> com.android.systemui.statusbar.car.-$Lambda$gAZ84Xb3Qb415HO2o_U1LzYDKgw:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(int,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.plugins.Plugin -> com.android.systemui.plugins.Plugin:
    void onCreate(android.content.Context,android.content.Context) -> onCreate
    void onDestroy() -> onDestroy
    int getVersion() -> getVersion
com.android.systemui.statusbar.stack.ExpandableViewState -> com.android.systemui.statusbar.stack.ExpandableViewState:
    int height -> height
    boolean dimmed -> dimmed
    boolean dark -> dark
    boolean hideSensitive -> hideSensitive
    boolean belowSpeedBump -> belowSpeedBump
    int clipTopAmount -> clipTopAmount
    int location -> location
    boolean inShelf -> inShelf
    int notGoneIndex -> notGoneIndex
    float shadowAlpha -> shadowAlpha
    void applyToView(android.view.View) -> applyToView
    void animateTo(android.view.View,com.android.systemui.statusbar.stack.AnimationProperties) -> animateTo
    void <init>() -> <init>
    void copyFrom(com.android.systemui.statusbar.stack.ViewState) -> copyFrom
    int getFinalActualHeight(com.android.systemui.statusbar.ExpandableView) -> getFinalActualHeight
    void startHeightAnimation(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.AnimationProperties) -> startHeightAnimation
    void startInsetAnimation(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.AnimationProperties) -> startInsetAnimation
    void startShadowAlphaAnimation(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.AnimationProperties) -> startShadowAlphaAnimation
com.android.systemui.shortcut.ShortcutKeyServiceProxy$H -> com.android.systemui.shortcut.ShortcutKeyServiceProxy$H:
    com.android.systemui.shortcut.ShortcutKeyServiceProxy this$0 -> this$0
    void <init>(com.android.systemui.shortcut.ShortcutKeyServiceProxy) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.android.systemui.shortcut.ShortcutKeyServiceProxy,com.android.systemui.shortcut.ShortcutKeyServiceProxy$H) -> <init>
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.lang.String[] COLUMNS -> COLUMNS
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    boolean onCreate() -> onCreate
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int modeToMode(java.lang.String) -> modeToMode
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    void <clinit>() -> <clinit>
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    void <init>() -> <init>
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
com.android.keyguard.KeyguardSimPukView$CheckSimPuk$2 -> com.android.keyguard.KeyguardSimPukView$CheckSimPuk$2:
    com.android.keyguard.KeyguardSimPukView$CheckSimPuk this$1 -> this$1
    void <init>(com.android.keyguard.KeyguardSimPukView$CheckSimPuk) -> <init>
    void run() -> run
com.android.systemui.recents.events.ui.UserInteractionEvent -> com.android.systemui.recents.events.ui.UserInteractionEvent:
    void <init>() -> <init>
com.android.systemui.stackdivider.DividerView$4 -> com.android.systemui.stackdivider.DividerView$4:
    com.android.systemui.stackdivider.DividerView this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.DividerView) -> <init>
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.android.systemui.statusbar.phone.StatusBar$34 -> com.android.systemui.statusbar.phone.StatusBar$34:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
android.support.v7.appcompat.R$styleable -> android.support.v7.appcompat.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_showTitle -> AlertDialog_showTitle
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int AppCompatImageView_srcCompat -> AppCompatImageView_srcCompat
    int AppCompatImageView_tint -> AppCompatImageView_tint
    int AppCompatImageView_tintMode -> AppCompatImageView_tintMode
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int AppCompatSeekBar_android_thumb -> AppCompatSeekBar_android_thumb
    int AppCompatSeekBar_tickMark -> AppCompatSeekBar_tickMark
    int AppCompatSeekBar_tickMarkTint -> AppCompatSeekBar_tickMarkTint
    int AppCompatSeekBar_tickMarkTintMode -> AppCompatSeekBar_tickMarkTintMode
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int AppCompatTextHelper_android_drawableBottom -> AppCompatTextHelper_android_drawableBottom
    int AppCompatTextHelper_android_drawableEnd -> AppCompatTextHelper_android_drawableEnd
    int AppCompatTextHelper_android_drawableLeft -> AppCompatTextHelper_android_drawableLeft
    int AppCompatTextHelper_android_drawableRight -> AppCompatTextHelper_android_drawableRight
    int AppCompatTextHelper_android_drawableStart -> AppCompatTextHelper_android_drawableStart
    int AppCompatTextHelper_android_drawableTop -> AppCompatTextHelper_android_drawableTop
    int AppCompatTextHelper_android_textAppearance -> AppCompatTextHelper_android_textAppearance
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_autoSizeMaxTextSize -> AppCompatTextView_autoSizeMaxTextSize
    int AppCompatTextView_autoSizeMinTextSize -> AppCompatTextView_autoSizeMinTextSize
    int AppCompatTextView_autoSizePresetSizes -> AppCompatTextView_autoSizePresetSizes
    int AppCompatTextView_autoSizeStepGranularity -> AppCompatTextView_autoSizeStepGranularity
    int AppCompatTextView_autoSizeTextType -> AppCompatTextView_autoSizeTextType
    int[] AppCompatTheme -> AppCompatTheme
    int AppCompatTheme_android_windowAnimationStyle -> AppCompatTheme_android_windowAnimationStyle
    int AppCompatTheme_android_windowIsFloating -> AppCompatTheme_android_windowIsFloating
    int AppCompatTheme_panelBackground -> AppCompatTheme_panelBackground
    int AppCompatTheme_windowActionBar -> AppCompatTheme_windowActionBar
    int AppCompatTheme_windowActionBarOverlay -> AppCompatTheme_windowActionBarOverlay
    int AppCompatTheme_windowActionModeOverlay -> AppCompatTheme_windowActionModeOverlay
    int AppCompatTheme_windowFixedHeightMajor -> AppCompatTheme_windowFixedHeightMajor
    int AppCompatTheme_windowFixedHeightMinor -> AppCompatTheme_windowFixedHeightMinor
    int AppCompatTheme_windowFixedWidthMajor -> AppCompatTheme_windowFixedWidthMajor
    int AppCompatTheme_windowFixedWidthMinor -> AppCompatTheme_windowFixedWidthMinor
    int AppCompatTheme_windowMinWidthMajor -> AppCompatTheme_windowMinWidthMajor
    int AppCompatTheme_windowMinWidthMinor -> AppCompatTheme_windowMinWidthMinor
    int AppCompatTheme_windowNoTitle -> AppCompatTheme_windowNoTitle
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] BackgroundStyle -> BackgroundStyle
    int[] BatteryMeterView -> BatteryMeterView
    int[] ButtonBarLayout -> ButtonBarLayout
    int ButtonBarLayout_allowStacking -> ButtonBarLayout_allowStacking
    int[] CarrierText -> CarrierText
    int[] CheckBoxPreference -> CheckBoxPreference
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int ColorStateListItem_alpha -> ColorStateListItem_alpha
    int ColorStateListItem_android_alpha -> ColorStateListItem_android_alpha
    int ColorStateListItem_android_color -> ColorStateListItem_android_color
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] DateView -> DateView
    int[] DeadZone -> DeadZone
    int[] DialogPreference -> DialogPreference
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyButtonView -> KeyButtonView
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] ListPreference -> ListPreference
    int[] MediaRouteButton -> MediaRouteButton
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_alphabeticModifiers -> MenuItem_alphabeticModifiers
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_contentDescription -> MenuItem_contentDescription
    int MenuItem_iconTint -> MenuItem_iconTint
    int MenuItem_iconTintMode -> MenuItem_iconTintMode
    int MenuItem_numericModifiers -> MenuItem_numericModifiers
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int MenuItem_tooltipText -> MenuItem_tooltipText
    int[] MenuView -> MenuView
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int MenuView_subMenuArrow -> MenuView_subMenuArrow
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] NumPadKey -> NumPadKey
    int[] PagingIndicator -> PagingIndicator
    int[] PasswordTextView -> PasswordTextView
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int[] PreferenceGroup -> PreferenceGroup
    int[] PreferenceImageView -> PreferenceImageView
    int[] PreferenceTheme -> PreferenceTheme
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int RecycleListView_paddingBottomNoButtons -> RecycleListView_paddingBottomNoButtons
    int RecycleListView_paddingTopNoTitle -> RecycleListView_paddingTopNoTitle
    int[] RecyclerView -> RecyclerView
    int[] RestrictedPreference -> RestrictedPreference
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] SeekBarPreference -> SeekBarPreference
    int[] Spinner -> Spinner
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_entries -> Spinner_android_entries
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_thumbTint -> SwitchCompat_thumbTint
    int SwitchCompat_thumbTintMode -> SwitchCompat_thumbTintMode
    int SwitchCompat_track -> SwitchCompat_track
    int SwitchCompat_trackTint -> SwitchCompat_trackTint
    int SwitchCompat_trackTintMode -> SwitchCompat_trackTintMode
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_fontFamily -> TextAppearance_fontFamily
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] ToggleSliderView -> ToggleSliderView
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_buttonGravity -> Toolbar_buttonGravity
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetEndWithActions -> Toolbar_contentInsetEndWithActions
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_contentInsetStartWithNavigation -> Toolbar_contentInsetStartWithNavigation
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMargin -> Toolbar_titleMargin
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] UserDetailItemView -> UserDetailItemView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_theme -> View_android_theme
    int View_theme -> View_theme
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int[] lbBaseGridView -> lbBaseGridView
    int[] lbDatePicker -> lbDatePicker
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int[] lbImageCardView -> lbImageCardView
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int[] lbSearchOrbView -> lbSearchOrbView
    int[] lbSlide -> lbSlide
    int[] lbTimePicker -> lbTimePicker
    int[] lbVerticalGridView -> lbVerticalGridView
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.qs.tiles.CastTile$CastDetailAdapter -> com.android.systemui.qs.tiles.CastTile$CastDetailAdapter:
    com.android.systemui.qs.QSDetailItems mItems -> mItems
    java.util.LinkedHashMap mVisibleOrder -> mVisibleOrder
    com.android.systemui.qs.tiles.CastTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.CastTile) -> <init>
    android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup) -> createDetailView
    int getMetricsCategory() -> getMetricsCategory
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.Boolean getToggleState() -> getToggleState
    void onDetailItemClick(com.android.systemui.qs.QSDetailItems$Item) -> onDetailItemClick
    void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems$Item) -> onDetailItemDisconnect
    void setToggleState(boolean) -> setToggleState
    void updateItems(java.util.Set) -> updateItems
    java.util.LinkedHashMap -get0(com.android.systemui.qs.tiles.CastTile$CastDetailAdapter) -> -get0
    void -wrap0(com.android.systemui.qs.tiles.CastTile$CastDetailAdapter,java.util.Set) -> -wrap0
    void <init>(com.android.systemui.qs.tiles.CastTile,com.android.systemui.qs.tiles.CastTile$CastDetailAdapter) -> <init>
com.android.systemui.qs.customize.TileAdapter -> com.android.systemui.qs.customize.TileAdapter:
    int mAccessibilityFromIndex -> mAccessibilityFromIndex
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    boolean mAccessibilityMoving -> mAccessibilityMoving
    java.util.List mAllTiles -> mAllTiles
    android.support.v7.widget.helper.ItemTouchHelper$Callback mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    com.android.systemui.qs.customize.TileAdapter$Holder mCurrentDrag -> mCurrentDrag
    java.util.List mCurrentSpecs -> mCurrentSpecs
    android.support.v7.widget.RecyclerView$ItemDecoration mDecoration -> mDecoration
    int mEditIndex -> mEditIndex
    android.os.Handler mHandler -> mHandler
    com.android.systemui.qs.QSTileHost mHost -> mHost
    android.support.v7.widget.helper.ItemTouchHelper mItemTouchHelper -> mItemTouchHelper
    boolean mNeedsFocus -> mNeedsFocus
    java.util.List mOtherTiles -> mOtherTiles
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSizeLookup -> mSizeLookup
    int mTileDividerIndex -> mTileDividerIndex
    java.util.List mTiles -> mTiles
    void <init>(android.content.Context) -> <init>
    com.android.systemui.qs.customize.TileQueryHelper$TileInfo getAndRemoveOther(java.lang.String) -> getAndRemoveOther
    int getItemCount() -> getItemCount
    android.support.v7.widget.RecyclerView$ItemDecoration getItemDecoration() -> getItemDecoration
    android.support.v7.widget.helper.ItemTouchHelper getItemTouchHelper() -> getItemTouchHelper
    int getItemViewType(int) -> getItemViewType
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup getSizeLookup() -> getSizeLookup
    boolean move(int,int,android.view.View) -> move
    void move(int,int,java.util.List) -> move
    void onBindViewHolder(com.android.systemui.qs.customize.TileAdapter$Holder,int) -> onBindViewHolder
    com.android.systemui.qs.customize.TileAdapter$Holder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    boolean onFailedToRecycleView(com.android.systemui.qs.customize.TileAdapter$Holder) -> onFailedToRecycleView
    void onTilesChanged(java.util.List) -> onTilesChanged
    void recalcSpecs() -> recalcSpecs
    void resetTileSpecs(com.android.systemui.qs.QSTileHost,java.util.List) -> resetTileSpecs
    void saveSpecs(com.android.systemui.qs.QSTileHost) -> saveSpecs
    void selectPosition(int,android.view.View) -> selectPosition
    void setHost(com.android.systemui.qs.QSTileHost) -> setHost
    void setTileSpecs(java.util.List) -> setTileSpecs
    void showAccessibilityDialog(int,android.view.View) -> showAccessibilityDialog
    void startAccessibleDrag(int) -> startAccessibleDrag
    java.lang.String strip(com.android.systemui.qs.customize.TileQueryHelper$TileInfo) -> strip
    void updateDividerLocations() -> updateDividerLocations
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    boolean -get0(com.android.systemui.qs.customize.TileAdapter) -> -get0
    com.android.systemui.qs.customize.TileAdapter$Holder -get1(com.android.systemui.qs.customize.TileAdapter) -> -get1
    int -get2(com.android.systemui.qs.customize.TileAdapter) -> -get2
    android.os.Handler -get3(com.android.systemui.qs.customize.TileAdapter) -> -get3
    int -get4(com.android.systemui.qs.customize.TileAdapter) -> -get4
    java.util.List -get5(com.android.systemui.qs.customize.TileAdapter) -> -get5
    com.android.systemui.qs.customize.TileAdapter$Holder -set0(com.android.systemui.qs.customize.TileAdapter,com.android.systemui.qs.customize.TileAdapter$Holder) -> -set0
    boolean -wrap0(com.android.systemui.qs.customize.TileAdapter,int,int,android.view.View) -> -wrap0
    void -wrap1(com.android.systemui.qs.customize.TileAdapter,int,android.view.View) -> -wrap1
    void -wrap2(com.android.systemui.qs.customize.TileAdapter,int,android.view.View) -> -wrap2
    void -wrap3(com.android.systemui.qs.customize.TileAdapter,int) -> -wrap3
com.android.settingslib.wifi.WifiTracker$WifiTrackerNetworkCallback -> com.android.settingslib.wifi.WifiTracker$WifiTrackerNetworkCallback:
    com.android.settingslib.wifi.WifiTracker this$0 -> this$0
    void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities) -> onCapabilitiesChanged
    void <init>(com.android.settingslib.wifi.WifiTracker,com.android.settingslib.wifi.WifiTracker$WifiTrackerNetworkCallback) -> <init>
    void <init>(com.android.settingslib.wifi.WifiTracker) -> <init>
com.android.systemui.statusbar.policy.KeyButtonRipple -> com.android.systemui.statusbar.policy.KeyButtonRipple:
    android.animation.AnimatorListenerAdapter mAnimatorListener -> mAnimatorListener
    android.graphics.CanvasProperty mBottomProp -> mBottomProp
    boolean mDark -> mDark
    boolean mDrawingHardwareGlow -> mDrawingHardwareGlow
    float mGlowAlpha -> mGlowAlpha
    float mGlowScale -> mGlowScale
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mLastDark -> mLastDark
    android.graphics.CanvasProperty mLeftProp -> mLeftProp
    int mMaxWidth -> mMaxWidth
    android.graphics.CanvasProperty mPaintProp -> mPaintProp
    boolean mPressed -> mPressed
    android.graphics.CanvasProperty mRightProp -> mRightProp
    android.graphics.Paint mRipplePaint -> mRipplePaint
    java.util.HashSet mRunningAnimations -> mRunningAnimations
    android.graphics.CanvasProperty mRxProp -> mRxProp
    android.graphics.CanvasProperty mRyProp -> mRyProp
    boolean mSupportHardware -> mSupportHardware
    android.view.View mTargetView -> mTargetView
    java.util.ArrayList mTmpArray -> mTmpArray
    android.graphics.CanvasProperty mTopProp -> mTopProp
    void <init>(android.content.Context,android.view.View) -> <init>
    void setDarkIntensity(float) -> setDarkIntensity
    void cancelAnimations() -> cancelAnimations
    void draw(android.graphics.Canvas) -> draw
    void drawHardware(android.view.DisplayListCanvas) -> drawHardware
    void drawSoftware(android.graphics.Canvas) -> drawSoftware
    void enterHardware() -> enterHardware
    void enterSoftware() -> enterSoftware
    void exitHardware() -> exitHardware
    void exitSoftware() -> exitSoftware
    android.graphics.CanvasProperty getExtendEnd() -> getExtendEnd
    int getExtendSize() -> getExtendSize
    android.graphics.CanvasProperty getExtendStart() -> getExtendStart
    float getGlowAlpha() -> getGlowAlpha
    float getGlowScale() -> getGlowScale
    float getMaxGlowAlpha() -> getMaxGlowAlpha
    int getOpacity() -> getOpacity
    android.graphics.Paint getRipplePaint() -> getRipplePaint
    int getRippleSize() -> getRippleSize
    boolean hasFocusStateSpecified() -> hasFocusStateSpecified
    boolean isHorizontal() -> isHorizontal
    boolean isStateful() -> isStateful
    void jumpToCurrentState() -> jumpToCurrentState
    boolean onStateChange(int[]) -> onStateChange
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setExtendEnd(android.graphics.CanvasProperty) -> setExtendEnd
    void setExtendStart(android.graphics.CanvasProperty) -> setExtendStart
    void setGlowAlpha(float) -> setGlowAlpha
    void setGlowScale(float) -> setGlowScale
    void setPressed(boolean) -> setPressed
    void setPressedHardware(boolean) -> setPressedHardware
    void setPressedSoftware(boolean) -> setPressedSoftware
    boolean -get0(com.android.systemui.statusbar.policy.KeyButtonRipple) -> -get0
    java.util.HashSet -get1(com.android.systemui.statusbar.policy.KeyButtonRipple) -> -get1
    boolean -set0(com.android.systemui.statusbar.policy.KeyButtonRipple,boolean) -> -set0
android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback -> android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback:
    int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
com.android.systemui.statusbar.stack.-$Lambda$kqbaVvbr9Wk-WLdByPvLjdQIVOs -> com.android.systemui.statusbar.stack.-$Lambda$kqbaVvbr9Wk-WLdByPvLjdQIVOs:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void run() -> run
com.android.systemui.statusbar.policy.UserSwitcherController$BaseUserAdapter -> com.android.systemui.statusbar.policy.UserSwitcherController$BaseUserAdapter:
    com.android.systemui.statusbar.policy.UserSwitcherController mController -> mController
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguardMonitor -> mKeyguardMonitor
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord getItem(int) -> getItem
    java.lang.String getName(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> getName
    android.graphics.drawable.Drawable getDrawable(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> getDrawable
    void switchTo(com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> switchTo
    void refresh() -> refresh
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    int getUserCount() -> getUserCount
    java.lang.Object getItem(int) -> getItem
com.android.systemui.statusbar.phone.-$Lambda$M2GC-aczdMiLkSdwOGpMTs1Dam8 -> com.android.systemui.statusbar.phone.-$Lambda$M2GC-aczdMiLkSdwOGpMTs1Dam8:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    boolean $m$0(android.view.View) -> $m$0
    boolean $m$1(android.view.View) -> $m$1
    boolean $m$2(android.view.View) -> $m$2
    boolean $m$3(android.view.View) -> $m$3
    boolean onLongClick(android.view.View) -> onLongClick
com.android.systemui.qs.tiles.-$Lambda$aiEJZko-AiQ1dEx1l9mGRKLhPBA -> com.android.systemui.qs.tiles.-$Lambda$aiEJZko-AiQ1dEx1l9mGRKLhPBA:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.content.DialogInterface,int) -> $m$0
    void $m$1(android.content.DialogInterface,int) -> $m$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.statusbar.DismissViewButton -> com.android.systemui.statusbar.DismissViewButton:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void getDrawingRect(android.graphics.Rect) -> getDrawingRect
com.android.systemui.statusbar.phone.StatusBar$40$1$1 -> com.android.systemui.statusbar.phone.StatusBar$40$1$1:
    com.android.systemui.statusbar.phone.StatusBar$40$1 this$2 -> this$2
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout val$scrollLayout -> val$scrollLayout
    void <init>(com.android.systemui.statusbar.phone.StatusBar$40$1,com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBarWindowView$ActionModeCallback2Wrapper -> com.android.systemui.statusbar.phone.StatusBarWindowView$ActionModeCallback2Wrapper:
    android.view.ActionMode$Callback mWrapped -> mWrapped
    com.android.systemui.statusbar.phone.StatusBarWindowView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView,android.view.ActionMode$Callback) -> <init>
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect) -> onGetContentRect
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
android.support.v7.view.menu.MenuView -> android.support.v7.view.menu.MenuView:
    void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem -> com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem:
    int VERSION -> VERSION
    android.view.View getMenuView() -> getMenuView
    java.lang.String getContentDescription() -> getContentDescription
    android.view.View getGutsView() -> getGutsView
com.android.systemui.recents.views.-$Lambda$UsNiZzzHtOnAHQyNVTbOVt0a-mE$1 -> com.android.systemui.recents.views.-$Lambda$UsNiZzzHtOnAHQyNVTbOVt0a-mE$1:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    void <init>(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    java.util.List $m$0() -> $m$0
    java.util.List composeSpecs() -> composeSpecs
com.android.systemui.usb.UsbDebuggingActivity$UsbDisconnectedReceiver -> com.android.systemui.usb.UsbDebuggingActivity$UsbDisconnectedReceiver:
    android.app.Activity mActivity -> mActivity
    com.android.systemui.usb.UsbDebuggingActivity this$0 -> this$0
    void <init>(com.android.systemui.usb.UsbDebuggingActivity,android.app.Activity) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.phone.DoubleTapHelper$DoubleTapLogListener -> com.android.systemui.statusbar.phone.DoubleTapHelper$DoubleTapLogListener:
    void onDoubleTapLog(boolean,float,float) -> onDoubleTapLog
com.android.settingslib.bluetooth.BluetoothEventManager$ClassChangedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$ClassChangedHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$ClassChangedHandler) -> <init>
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
android.support.v17.leanback.widget.ViewsStateBundle -> android.support.v17.leanback.widget.ViewsStateBundle:
    android.support.v4.util.LruCache mChildStates -> mChildStates
    int mLimitNumber -> mLimitNumber
    int mSavePolicy -> mSavePolicy
    java.lang.String getSaveStatesKey(int) -> getSaveStatesKey
    void saveOffscreenView(android.view.View,int) -> saveOffscreenView
    android.os.Bundle saveOnScreenView(android.os.Bundle,android.view.View,int) -> saveOnScreenView
    android.os.Bundle saveAsBundle() -> saveAsBundle
    void clear() -> clear
    void loadFromBundle(android.os.Bundle) -> loadFromBundle
    void remove(int) -> remove
    void loadView(android.view.View,int) -> loadView
    void saveViewUnchecked(android.view.View,int) -> saveViewUnchecked
    void <init>() -> <init>
com.android.systemui.qs.tiles.CastTile$Callback -> com.android.systemui.qs.tiles.CastTile$Callback:
    com.android.systemui.qs.tiles.CastTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.CastTile) -> <init>
    void onCastDevicesChanged() -> onCastDevicesChanged
    void onKeyguardShowingChanged() -> onKeyguardShowingChanged
    void <init>(com.android.systemui.qs.tiles.CastTile,com.android.systemui.qs.tiles.CastTile$Callback) -> <init>
com.android.systemui.qs.external.TileServiceManager$1 -> com.android.systemui.qs.external.TileServiceManager$1:
    com.android.systemui.qs.external.TileServiceManager this$0 -> this$0
    void <init>(com.android.systemui.qs.external.TileServiceManager) -> <init>
    void run() -> run
com.android.systemui.statusbar.StatusBarIconView$1 -> com.android.systemui.statusbar.StatusBarIconView$1:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.statusbar.StatusBarIconView) -> get
    void setValue(com.android.systemui.statusbar.StatusBarIconView,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
android.support.v7.app.AppCompatDelegateImplV14 -> android.support.v7.app.AppCompatDelegateImplV14:
    boolean mHandleNativeActionModes -> mHandleNativeActionModes
    android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager mAutoNightModeManager -> mAutoNightModeManager
    int mLocalNightMode -> mLocalNightMode
    boolean mApplyDayNightCalled -> mApplyDayNightCalled
    void onStop() -> onStop
    int mapNightMode(int) -> mapNightMode
    void onCreate(android.os.Bundle) -> onCreate
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
    android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager getAutoNightModeManager() -> getAutoNightModeManager
    boolean shouldRecreateOnNightModeChange() -> shouldRecreateOnNightModeChange
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    void ensureAutoNightModeManager() -> ensureAutoNightModeManager
    int getNightMode() -> getNightMode
    boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    boolean applyDayNight() -> applyDayNight
    boolean updateForNightMode(int) -> updateForNightMode
com.android.systemui.recents.RecentsActivity -> com.android.systemui.recents.RecentsActivity:
    com.android.systemui.colorextraction.SysuiColorExtractor mColorExtractor -> mColorExtractor
    boolean mFinishedOnStartup -> mFinishedOnStartup
    int mFocusTimerDuration -> mFocusTimerDuration
    android.os.Handler mHandler -> mHandler
    android.content.Intent mHomeIntent -> mHomeIntent
    boolean mIgnoreAltTabRelease -> mIgnoreAltTabRelease
    android.view.View mIncompatibleAppOverlay -> mIncompatibleAppOverlay
    boolean mIsVisible -> mIsVisible
    com.android.systemui.recents.misc.DozeTrigger mIterateTrigger -> mIterateTrigger
    android.content.res.Configuration mLastConfig -> mLastConfig
    long mLastTabKeyEventTime -> mLastTabKeyEventTime
    com.android.systemui.recents.model.RecentsPackageMonitor mPackageMonitor -> mPackageMonitor
    android.view.ViewTreeObserver$OnPreDrawListener mRecentsDrawnEventListener -> mRecentsDrawnEventListener
    boolean mRecentsStartRequested -> mRecentsStartRequested
    com.android.systemui.recents.views.RecentsView mRecentsView -> mRecentsView
    com.android.systemui.recents.views.SystemBarScrimViews mScrimViews -> mScrimViews
    android.content.BroadcastReceiver mSystemBroadcastReceiver -> mSystemBroadcastReceiver
    com.android.systemui.recents.events.ui.UserInteractionEvent mUserInteractionEvent -> mUserInteractionEvent
    boolean mUsingDarkText -> mUsingDarkText
    void <init>() -> <init>
    boolean dismissRecentsToFocusedTask(int) -> dismissRecentsToFocusedTask
    boolean dismissRecentsToFocusedTaskOrHome() -> dismissRecentsToFocusedTaskOrHome
    void dismissRecentsToHome(boolean) -> dismissRecentsToHome
    void dismissRecentsToHome(boolean,android.app.ActivityOptions) -> dismissRecentsToHome
    boolean dismissRecentsToHomeIfVisible(boolean) -> dismissRecentsToHomeIfVisible
    boolean dismissRecentsToLaunchTargetTaskOrHome() -> dismissRecentsToLaunchTargetTaskOrHome
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onAttachedToWindow() -> onAttachedToWindow
    void onBackPressed() -> onBackPressed
    void onBusEvent(com.android.systemui.recents.events.activity.ToggleRecentsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.IterateRecentsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.RecentsActivityStartingEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.UserInteractionEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.HideRecentsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowLastAnimationFrameEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.ExitRecentsWindowFirstAnimationFrameEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DockedFirstAnimationFrameEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.CancelEnterRecentsWindowAnimationEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.ShowApplicationInfoEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.ShowIncompatibleAppOverlayEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.HideIncompatibleAppOverlayEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.DeleteTaskDataEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.TaskViewDismissedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskSucceededEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskFailedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.component.ScreenPinningRequestEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DebugFlagsChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.StackViewScrolledEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DockedTopTaskEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.component.ActivityUnpinnedEvent) -> onBusEvent
    void onColorsChanged(com.android.internal.colorextraction.ColorExtractor,int) -> onColorsChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onEnterAnimationComplete() -> onEnterAnimationComplete
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    boolean onPreDraw() -> onPreDraw
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onStart() -> onStart
    void onStop() -> onStop
    void onTrimMemory(int) -> onTrimMemory
    void onUserInteraction() -> onUserInteraction
    void reloadStackView() -> reloadStackView
    void reloadTaskStack(boolean,boolean) -> reloadTaskStack
    android.os.Handler -get0(com.android.systemui.recents.RecentsActivity) -> -get0
    com.android.systemui.recents.views.RecentsView -get1(com.android.systemui.recents.RecentsActivity) -> -get1
com.android.keyguard.CarrierText -> com.android.keyguard.CarrierText:
    com.android.keyguard.KeyguardUpdateMonitorCallback mCallback -> mCallback
    boolean mIsEmergencyCallCapable -> mIsEmergencyCallCapable
    com.android.keyguard.KeyguardUpdateMonitor mKeyguardUpdateMonitor -> mKeyguardUpdateMonitor
    java.lang.CharSequence mSeparator -> mSeparator
    boolean[] mSimErrorState -> mSimErrorState
    android.net.wifi.WifiManager mWifiManager -> mWifiManager
    int[] -com-android-keyguard-CarrierText$StatusModeSwitchesValues -> -com-android-keyguard-CarrierText$StatusModeSwitchesValues
    int[] -com-android-internal-telephony-IccCardConstants$StateSwitchesValues -> -com-android-internal-telephony-IccCardConstants$StateSwitchesValues
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.CharSequence concatenate(java.lang.CharSequence,java.lang.CharSequence) -> concatenate
    java.lang.CharSequence getCarrierTextForSimState(com.android.internal.telephony.IccCardConstants$State,java.lang.CharSequence) -> getCarrierTextForSimState
    java.lang.String getLocalString(java.lang.String,int,int) -> getLocalString
    com.android.keyguard.CarrierText$StatusMode getStatusForIccState(com.android.internal.telephony.IccCardConstants$State) -> getStatusForIccState
    java.lang.CharSequence makeCarrierStringOnEmergencyCapable(java.lang.CharSequence,java.lang.CharSequence) -> makeCarrierStringOnEmergencyCapable
    java.lang.String networkClassToString(int) -> networkClassToString
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void updateCarrierText() -> updateCarrierText
    java.lang.CharSequence updateCarrierTextWithSimIoError(java.lang.CharSequence,boolean) -> updateCarrierTextWithSimIoError
    boolean[] -get0(com.android.keyguard.CarrierText) -> -get0
    com.android.keyguard.CarrierText$StatusMode -wrap0(com.android.keyguard.CarrierText,com.android.internal.telephony.IccCardConstants$State) -> -wrap0
    int[] -getcom-android-keyguard-CarrierText$StatusModeSwitchesValues() -> -getcom-android-keyguard-CarrierText$StatusModeSwitchesValues
    int[] -getcom-android-internal-telephony-IccCardConstants$StateSwitchesValues() -> -getcom-android-internal-telephony-IccCardConstants$StateSwitchesValues
android.support.v4.widget.CircularProgressDrawable$2 -> android.support.v4.widget.CircularProgressDrawable$2:
    android.support.v4.widget.CircularProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.CircularProgressDrawable this$0 -> this$0
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void <init>(android.support.v4.widget.CircularProgressDrawable,android.support.v4.widget.CircularProgressDrawable$Ring) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.LinearLayoutManager$LayoutState -> android.support.v7.widget.LinearLayoutManager$LayoutState:
    int mLastScrollDelta -> mLastScrollDelta
    boolean mRecycle -> mRecycle
    java.util.List mScrapList -> mScrapList
    boolean mIsPreLayout -> mIsPreLayout
    int mAvailable -> mAvailable
    int mCurrentPosition -> mCurrentPosition
    int mLayoutDirection -> mLayoutDirection
    int mOffset -> mOffset
    int mExtra -> mExtra
    int mScrollingOffset -> mScrollingOffset
    boolean mInfinite -> mInfinite
    int mItemDirection -> mItemDirection
    void assignPositionFromScrapList() -> assignPositionFromScrapList
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> next
    android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
    android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    void <init>() -> <init>
    void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> hasMore
com.android.systemui.recents.views.-$Lambda$bDnSBDseuQaoK45kM_ChDov9g9M -> com.android.systemui.recents.views.-$Lambda$bDnSBDseuQaoK45kM_ChDov9g9M:
    com.android.systemui.recents.views.-$Lambda$bDnSBDseuQaoK45kM_ChDov9g9M $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$1:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> this$1
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
com.android.systemui.pip.phone.PipMenuActivityController$Listener -> com.android.systemui.pip.phone.PipMenuActivityController$Listener:
    void onPipDismiss() -> onPipDismiss
    void onPipExpand() -> onPipExpand
    void onPipMenuStateChanged(int,boolean) -> onPipMenuStateChanged
    void onPipMinimize() -> onPipMinimize
    void onPipShowMenu() -> onPipShowMenu
android.support.v7.widget.RecyclerView$ItemDecoration -> android.support.v7.widget.RecyclerView$ItemDecoration:
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> onDraw
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
    void getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView) -> getItemOffsets
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> onDrawOver
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    void <init>() -> <init>
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
com.android.systemui.recents.events.activity.ShowStackActionButtonEvent -> com.android.systemui.recents.events.activity.ShowStackActionButtonEvent:
    boolean translate -> translate
    void <init>(boolean) -> <init>
com.android.systemui.volume.VolumeDialogControllerImpl$C -> com.android.systemui.volume.VolumeDialogControllerImpl$C:
    java.util.HashMap mCallbackMap -> mCallbackMap
    com.android.systemui.volume.VolumeDialogControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl) -> <init>
    void add(com.android.systemui.plugins.VolumeDialogController$Callbacks,android.os.Handler) -> add
    void onAccessibilityModeChanged(java.lang.Boolean) -> onAccessibilityModeChanged
    void onConfigurationChanged() -> onConfigurationChanged
    void onDismissRequested(int) -> onDismissRequested
    void onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    void onScreenOff() -> onScreenOff
    void onShowRequested(int) -> onShowRequested
    void onShowSafetyWarning(int) -> onShowSafetyWarning
    void onShowSilentHint() -> onShowSilentHint
    void onShowVibrateHint() -> onShowVibrateHint
    void onStateChanged(com.android.systemui.plugins.VolumeDialogController$State) -> onStateChanged
    void remove(com.android.systemui.plugins.VolumeDialogController$Callbacks) -> remove
com.android.systemui.statusbar.phone.StatusBar$24 -> com.android.systemui.statusbar.phone.StatusBar$24:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onListenerConnected() -> onListenerConnected
    void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> onNotificationPosted
    void onNotificationRankingUpdate(android.service.notification.NotificationListenerService$RankingMap) -> onNotificationRankingUpdate
    void onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> onNotificationRemoved
    void lambda$-com_android_systemui_statusbar_phone_StatusBar$24_259469(java.lang.String,android.service.notification.NotificationListenerService$RankingMap) -> lambda$-com_android_systemui_statusbar_phone_StatusBar$24_259469
    void lambda$-com_android_systemui_statusbar_phone_StatusBar$24_259823(android.service.notification.NotificationListenerService$RankingMap) -> lambda$-com_android_systemui_statusbar_phone_StatusBar$24_259823
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    boolean mAnimEndCalled -> mAnimEndCalled
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationStart(android.view.View) -> onAnimationStart
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.MediaRouteDialogFactory -> android.support.v7.app.MediaRouteDialogFactory:
    android.support.v7.app.MediaRouteDialogFactory sDefault -> sDefault
    void <clinit>() -> <clinit>
    android.support.v7.app.MediaRouteChooserDialogFragment onCreateChooserDialogFragment() -> onCreateChooserDialogFragment
    android.support.v7.app.MediaRouteDialogFactory getDefault() -> getDefault
    void <init>() -> <init>
    android.support.v7.app.MediaRouteControllerDialogFragment onCreateControllerDialogFragment() -> onCreateControllerDialogFragment
com.android.systemui.statusbar.phone.DoubleTapHelper$SlideBackListener -> com.android.systemui.statusbar.phone.DoubleTapHelper$SlideBackListener:
    boolean onSlideBack() -> onSlideBack
com.android.systemui.volume.ZenModePanel$6 -> com.android.systemui.volume.ZenModePanel$6:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    android.view.View val$row -> val$row
    com.android.systemui.volume.ZenModePanel$ConditionTag val$tag -> val$tag
    int val$rowId -> val$rowId
    void <init>(com.android.systemui.volume.ZenModePanel,android.view.View,com.android.systemui.volume.ZenModePanel$ConditionTag,int) -> <init>
    void onClick(android.view.View) -> onClick
com.android.settingslib.bluetooth.HeadsetProfile$HeadsetServiceListener -> com.android.settingslib.bluetooth.HeadsetProfile$HeadsetServiceListener:
    com.android.settingslib.bluetooth.HeadsetProfile this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.HeadsetProfile) -> <init>
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
    void <init>(com.android.settingslib.bluetooth.HeadsetProfile,com.android.settingslib.bluetooth.HeadsetProfile$HeadsetServiceListener) -> <init>
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.view.accessibility.AccessibilityRecord mRecord -> mRecord
    void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.settingslib.bluetooth.BluetoothCallback -> com.android.settingslib.bluetooth.BluetoothCallback:
    void onScanningStateChanged(boolean) -> onScanningStateChanged
    void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> onDeviceBondStateChanged
    void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> onConnectionStateChanged
    void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> onDeviceAdded
    void onBluetoothStateChanged(int) -> onBluetoothStateChanged
    void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> onDeviceDeleted
android.support.v7.internal.widget.PreferenceImageView -> android.support.v7.internal.widget.PreferenceImageView:
    int mMaxHeight -> mMaxHeight
    int mMaxWidth -> mMaxWidth
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setMaxHeight(int) -> setMaxHeight
    int getMaxHeight() -> getMaxHeight
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void onMeasure(int,int) -> onMeasure
    int getMaxWidth() -> getMaxWidth
    void setMaxWidth(int) -> setMaxWidth
com.android.systemui.recents.model.TaskStack$2 -> com.android.systemui.recents.model.TaskStack$2:
    com.android.systemui.recents.model.TaskStack this$0 -> this$0
    void <init>(com.android.systemui.recents.model.TaskStack) -> <init>
    boolean acceptTask(android.util.SparseArray,com.android.systemui.recents.model.Task,int) -> acceptTask
android.support.v7.media.MediaRouter$ProviderInfo -> android.support.v7.media.MediaRouter$ProviderInfo:
    android.support.v7.media.MediaRouteProviderDescriptor mDescriptor -> mDescriptor
    android.support.v7.media.MediaRouteProvider$ProviderMetadata mMetadata -> mMetadata
    java.util.List mRoutes -> mRoutes
    android.support.v7.media.MediaRouteProvider mProviderInstance -> mProviderInstance
    java.lang.String getPackageName() -> getPackageName
    int findRouteByDescriptorId(java.lang.String) -> findRouteByDescriptorId
    android.content.ComponentName getComponentName() -> getComponentName
    java.lang.String toString() -> toString
    android.support.v7.media.MediaRouteProvider -get0(android.support.v7.media.MediaRouter$ProviderInfo) -> -get0
    void <init>(android.support.v7.media.MediaRouteProvider) -> <init>
    boolean updateDescriptor(android.support.v7.media.MediaRouteProviderDescriptor) -> updateDescriptor
    java.util.List -get1(android.support.v7.media.MediaRouter$ProviderInfo) -> -get1
    android.support.v7.media.MediaRouteProvider getProviderInstance() -> getProviderInstance
com.android.systemui.qs.AlphaControlledSignalTileView$AlphaControlledSlashDrawable -> com.android.systemui.qs.AlphaControlledSignalTileView$AlphaControlledSlashDrawable:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void setDrawableTintList(android.content.res.ColorStateList) -> setDrawableTintList
    void setFinalTintList(android.content.res.ColorStateList) -> setFinalTintList
com.android.systemui.plugins.R$anim -> com.android.systemui.plugins.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_grow_fade_in_from_bottom -> abc_grow_fade_in_from_bottom
    int abc_popup_enter -> abc_popup_enter
    int abc_popup_exit -> abc_popup_exit
    int abc_shrink_fade_out_from_bottom -> abc_shrink_fade_out_from_bottom
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int dismiss_all_shape_animation_1 -> dismiss_all_shape_animation_1
    int dismiss_all_shape_animation_2 -> dismiss_all_shape_animation_2
    int dismiss_all_shape_animation_3 -> dismiss_all_shape_animation_3
    int dismiss_all_shape_animation_rectangle_path_1 -> dismiss_all_shape_animation_rectangle_path_1
    int dismiss_all_shape_animation_rectangle_path_1_1 -> dismiss_all_shape_animation_rectangle_path_1_1
    int dismiss_all_shape_animation_rectangle_path_1_2 -> dismiss_all_shape_animation_rectangle_path_1_2
    int error_to_trustedstate_bottompath_animation -> error_to_trustedstate_bottompath_animation
    int error_to_trustedstate_circlepath_animation -> error_to_trustedstate_circlepath_animation
    int error_to_trustedstate_ellipse_path_1_animation -> error_to_trustedstate_ellipse_path_1_animation
    int error_to_trustedstate_errorcircle_animation -> error_to_trustedstate_errorcircle_animation
    int error_to_trustedstate_errorexclamationdot_animation -> error_to_trustedstate_errorexclamationdot_animation
    int error_to_trustedstate_exclamationtop_animation -> error_to_trustedstate_exclamationtop_animation
    int error_to_trustedstate_lock_top_animation -> error_to_trustedstate_lock_top_animation
    int error_to_trustedstate_path_1_animation -> error_to_trustedstate_path_1_animation
    int error_to_trustedstate_path_2_animation -> error_to_trustedstate_path_2_animation
    int error_to_trustedstate_path_3_animation -> error_to_trustedstate_path_3_animation
    int error_to_trustedstate_toppath_animation -> error_to_trustedstate_toppath_animation
    int fab_elevation -> fab_elevation
    int forced_resizable_enter -> forced_resizable_enter
    int forced_resizable_exit -> forced_resizable_exit
    int ic_bluetooth_transient_dot_left_animation -> ic_bluetooth_transient_dot_left_animation
    int ic_bluetooth_transient_dot_right_animation -> ic_bluetooth_transient_dot_right_animation
    int ic_caret_down_left_animation -> ic_caret_down_left_animation
    int ic_caret_down_right_animation -> ic_caret_down_right_animation
    int ic_caret_up_left_animation -> ic_caret_up_left_animation
    int ic_caret_up_right_animation -> ic_caret_up_right_animation
    int ic_fingerprint_toerror_bottompath_animation -> ic_fingerprint_toerror_bottompath_animation
    int ic_fingerprint_toerror_circlepath_animation -> ic_fingerprint_toerror_circlepath_animation
    int ic_fingerprint_toerror_errorcircle_animation -> ic_fingerprint_toerror_errorcircle_animation
    int ic_fingerprint_toerror_errorexclamation_animation -> ic_fingerprint_toerror_errorexclamation_animation
    int ic_fingerprint_toerror_exclamationbottom_animation -> ic_fingerprint_toerror_exclamationbottom_animation
    int ic_fingerprint_toerror_exclamationtop_animation -> ic_fingerprint_toerror_exclamationtop_animation
    int ic_fingerprint_toerror_fingerprinterror_animation -> ic_fingerprint_toerror_fingerprinterror_animation
    int ic_fingerprint_toerror_fingerprintwhite_animation -> ic_fingerprint_toerror_fingerprintwhite_animation
    int ic_fingerprint_toerror_ridge_1_path_0_animation -> ic_fingerprint_toerror_ridge_1_path_0_animation
    int ic_fingerprint_toerror_ridge_1_path_animation -> ic_fingerprint_toerror_ridge_1_path_animation
    int ic_fingerprint_toerror_ridge_2_path_0_animation -> ic_fingerprint_toerror_ridge_2_path_0_animation
    int ic_fingerprint_toerror_ridge_2_path_animation -> ic_fingerprint_toerror_ridge_2_path_animation
    int ic_fingerprint_toerror_ridge_5_path_0_animation -> ic_fingerprint_toerror_ridge_5_path_0_animation
    int ic_fingerprint_toerror_ridge_5_path_animation -> ic_fingerprint_toerror_ridge_5_path_animation
    int ic_fingerprint_toerror_ridge_6_path_0_animation -> ic_fingerprint_toerror_ridge_6_path_0_animation
    int ic_fingerprint_toerror_ridge_6_path_animation -> ic_fingerprint_toerror_ridge_6_path_animation
    int ic_fingerprint_toerror_ridge_7_path_0_animation -> ic_fingerprint_toerror_ridge_7_path_0_animation
    int ic_fingerprint_toerror_ridge_7_path_animation -> ic_fingerprint_toerror_ridge_7_path_animation
    int ic_fingerprint_toerror_toppath_animation -> ic_fingerprint_toerror_toppath_animation
    int ic_fingerprint_tofp_bottompath_animation -> ic_fingerprint_tofp_bottompath_animation
    int ic_fingerprint_tofp_circlepath_animation -> ic_fingerprint_tofp_circlepath_animation
    int ic_fingerprint_tofp_errorcircle_animation -> ic_fingerprint_tofp_errorcircle_animation
    int ic_fingerprint_tofp_errorexclamation_animation -> ic_fingerprint_tofp_errorexclamation_animation
    int ic_fingerprint_tofp_exclamationbottom_animation -> ic_fingerprint_tofp_exclamationbottom_animation
    int ic_fingerprint_tofp_exclamationtop_animation -> ic_fingerprint_tofp_exclamationtop_animation
    int ic_fingerprint_tofp_fingerprintwhite_animation -> ic_fingerprint_tofp_fingerprintwhite_animation
    int ic_fingerprint_tofp_ridge_1_path_animation -> ic_fingerprint_tofp_ridge_1_path_animation
    int ic_fingerprint_tofp_ridge_2_path_animation -> ic_fingerprint_tofp_ridge_2_path_animation
    int ic_fingerprint_tofp_ridge_5_path_animation -> ic_fingerprint_tofp_ridge_5_path_animation
    int ic_fingerprint_tofp_ridge_6_path_animation -> ic_fingerprint_tofp_ridge_6_path_animation
    int ic_fingerprint_tofp_ridge_7_path_animation -> ic_fingerprint_tofp_ridge_7_path_animation
    int ic_fingerprint_tofp_toppath_animation -> ic_fingerprint_tofp_toppath_animation
    int ic_hotspot_transient_circle_1_animation -> ic_hotspot_transient_circle_1_animation
    int ic_hotspot_transient_circle_2_animation -> ic_hotspot_transient_circle_2_animation
    int ic_hotspot_transient_circle_3_animation -> ic_hotspot_transient_circle_3_animation
    int ic_landscape_to_rotate_arrows_animation -> ic_landscape_to_rotate_arrows_animation
    int ic_landscape_to_rotate_bottom_merged_animation -> ic_landscape_to_rotate_bottom_merged_animation
    int ic_landscape_to_rotate_landscape_animation -> ic_landscape_to_rotate_landscape_animation
    int ic_portrait_to_rotate_arrows_0_animation -> ic_portrait_to_rotate_arrows_0_animation
    int ic_portrait_to_rotate_arrows_animation -> ic_portrait_to_rotate_arrows_animation
    int ic_portrait_to_rotate_bottom_merged_animation -> ic_portrait_to_rotate_bottom_merged_animation
    int ic_portrait_to_rotate_device_0_animation -> ic_portrait_to_rotate_device_0_animation
    int ic_portrait_to_rotate_device_merged_animation -> ic_portrait_to_rotate_device_merged_animation
    int ic_qs_signal_blink_1 -> ic_qs_signal_blink_1
    int ic_qs_signal_blink_2 -> ic_qs_signal_blink_2
    int ic_qs_signal_blink_3 -> ic_qs_signal_blink_3
    int ic_rotate_to_landscape_arrows_0_animation -> ic_rotate_to_landscape_arrows_0_animation
    int ic_rotate_to_landscape_arrows_animation -> ic_rotate_to_landscape_arrows_animation
    int ic_rotate_to_landscape_bottom_merged_animation -> ic_rotate_to_landscape_bottom_merged_animation
    int ic_rotate_to_landscape_landscape_animation -> ic_rotate_to_landscape_landscape_animation
    int ic_rotate_to_portrait_arrows_0_animation -> ic_rotate_to_portrait_arrows_0_animation
    int ic_rotate_to_portrait_arrows_animation -> ic_rotate_to_portrait_arrows_animation
    int ic_rotate_to_portrait_bottom_merged_animation -> ic_rotate_to_portrait_bottom_merged_animation
    int ic_rotate_to_portrait_device_0_animation -> ic_rotate_to_portrait_device_0_animation
    int ic_rotate_to_portrait_device_merged_animation -> ic_rotate_to_portrait_device_merged_animation
    int ic_signal_blink_1 -> ic_signal_blink_1
    int ic_signal_blink_2 -> ic_signal_blink_2
    int ic_signal_blink_3 -> ic_signal_blink_3
    int ic_signal_wifi_transient_wifi_1_animation -> ic_signal_wifi_transient_wifi_1_animation
    int ic_signal_workmode_disable_left_animation -> ic_signal_workmode_disable_left_animation
    int ic_signal_workmode_disable_mask_1_animation -> ic_signal_workmode_disable_mask_1_animation
    int ic_signal_workmode_disable_rectangle_path_3_animation -> ic_signal_workmode_disable_rectangle_path_3_animation
    int ic_signal_workmode_disable_rectangle_path_3_position_animation -> ic_signal_workmode_disable_rectangle_path_3_position_animation
    int ic_signal_workmode_disable_rectangle_path_4_animation -> ic_signal_workmode_disable_rectangle_path_4_animation
    int ic_signal_workmode_disable_rectangle_path_4_position_animation -> ic_signal_workmode_disable_rectangle_path_4_position_animation
    int ic_signal_workmode_disable_right_animation -> ic_signal_workmode_disable_right_animation
    int ic_signal_workmode_disable_stick_animation -> ic_signal_workmode_disable_stick_animation
    int ic_signal_workmode_disable_stickito_animation -> ic_signal_workmode_disable_stickito_animation
    int ic_signal_workmode_disable_whole_animation -> ic_signal_workmode_disable_whole_animation
    int ic_signal_workmode_enable_animation_cross_1 -> ic_signal_workmode_enable_animation_cross_1
    int ic_signal_workmode_enable_animation_ic_signal_briefcase -> ic_signal_workmode_enable_animation_ic_signal_briefcase
    int ic_signal_workmode_enable_animation_mask -> ic_signal_workmode_enable_animation_mask
    int ic_signal_workmode_enable_left_animation -> ic_signal_workmode_enable_left_animation
    int ic_signal_workmode_enable_mask_1_animation -> ic_signal_workmode_enable_mask_1_animation
    int ic_signal_workmode_enable_rectangle_path_3_animation -> ic_signal_workmode_enable_rectangle_path_3_animation
    int ic_signal_workmode_enable_rectangle_path_3_position_animation -> ic_signal_workmode_enable_rectangle_path_3_position_animation
    int ic_signal_workmode_enable_rectangle_path_4_animation -> ic_signal_workmode_enable_rectangle_path_4_animation
    int ic_signal_workmode_enable_rectangle_path_4_position_animation -> ic_signal_workmode_enable_rectangle_path_4_position_animation
    int ic_signal_workmode_enable_right_animation -> ic_signal_workmode_enable_right_animation
    int ic_signal_workmode_enable_stick_animation -> ic_signal_workmode_enable_stick_animation
    int ic_signal_workmode_enable_stickito_animation -> ic_signal_workmode_enable_stickito_animation
    int ic_signal_workmode_enable_whole_animation -> ic_signal_workmode_enable_whole_animation
    int lb_decelerator_2 -> lb_decelerator_2
    int lb_decelerator_4 -> lb_decelerator_4
    int lockscreen_fingerprint_draw_off_ridge_1_path_animation -> lockscreen_fingerprint_draw_off_ridge_1_path_animation
    int lockscreen_fingerprint_draw_off_ridge_2_path_animation -> lockscreen_fingerprint_draw_off_ridge_2_path_animation
    int lockscreen_fingerprint_draw_off_ridge_5_path_animation -> lockscreen_fingerprint_draw_off_ridge_5_path_animation
    int lockscreen_fingerprint_draw_off_ridge_6_path_animation -> lockscreen_fingerprint_draw_off_ridge_6_path_animation
    int lockscreen_fingerprint_draw_off_ridge_7_path_animation -> lockscreen_fingerprint_draw_off_ridge_7_path_animation
    int lockscreen_fingerprint_draw_on_ridge_1_path_animation -> lockscreen_fingerprint_draw_on_ridge_1_path_animation
    int lockscreen_fingerprint_draw_on_ridge_2_path_animation -> lockscreen_fingerprint_draw_on_ridge_2_path_animation
    int lockscreen_fingerprint_draw_on_ridge_5_path_animation -> lockscreen_fingerprint_draw_on_ridge_5_path_animation
    int lockscreen_fingerprint_draw_on_ridge_6_path_animation -> lockscreen_fingerprint_draw_on_ridge_6_path_animation
    int lockscreen_fingerprint_draw_on_ridge_7_path_animation -> lockscreen_fingerprint_draw_on_ridge_7_path_animation
    int major_a_b_dot_01_animation -> major_a_b_dot_01_animation
    int major_a_b_dot_animation -> major_a_b_dot_animation
    int major_b_a_dot_01_animation -> major_b_a_dot_01_animation
    int major_b_a_dot_animation -> major_b_a_dot_animation
    int major_b_c_dot_01_animation -> major_b_c_dot_01_animation
    int major_b_c_dot_animation -> major_b_c_dot_animation
    int major_c_b_dot_01_animation -> major_c_b_dot_01_animation
    int major_c_b_dot_animation -> major_c_b_dot_animation
    int minor_a_b_dot_02_animation -> minor_a_b_dot_02_animation
    int minor_b_a_dot_02_animation -> minor_b_a_dot_02_animation
    int minor_b_c_dot_02_animation -> minor_b_c_dot_02_animation
    int minor_c_b_dot_02_animation -> minor_c_b_dot_02_animation
    int navbar_fade_in -> navbar_fade_in
    int progress_indeterminate_horizontal_rect1_scale -> progress_indeterminate_horizontal_rect1_scale
    int progress_indeterminate_horizontal_rect1_translate -> progress_indeterminate_horizontal_rect1_translate
    int progress_indeterminate_horizontal_rect2_scale -> progress_indeterminate_horizontal_rect2_scale
    int progress_indeterminate_horizontal_rect2_translate -> progress_indeterminate_horizontal_rect2_translate
    int recents_fast_toggle_app_home_exit -> recents_fast_toggle_app_home_exit
    int recents_from_launcher_enter -> recents_from_launcher_enter
    int recents_from_launcher_exit -> recents_from_launcher_exit
    int recents_from_unknown_enter -> recents_from_unknown_enter
    int recents_from_unknown_exit -> recents_from_unknown_exit
    int recents_launch_next_affiliated_task_bounce -> recents_launch_next_affiliated_task_bounce
    int recents_launch_next_affiliated_task_source -> recents_launch_next_affiliated_task_source
    int recents_launch_next_affiliated_task_target -> recents_launch_next_affiliated_task_target
    int recents_launch_prev_affiliated_task_bounce -> recents_launch_prev_affiliated_task_bounce
    int recents_launch_prev_affiliated_task_source -> recents_launch_prev_affiliated_task_source
    int recents_launch_prev_affiliated_task_target -> recents_launch_prev_affiliated_task_target
    int recents_to_launcher_enter -> recents_to_launcher_enter
    int recents_to_launcher_exit -> recents_to_launcher_exit
    int search_launch_enter -> search_launch_enter
    int search_launch_exit -> search_launch_exit
    int system_in -> system_in
    int system_out -> system_out
    int tooltip_enter -> tooltip_enter
    int tooltip_exit -> tooltip_exit
    int trusted_state_to_error_bottompath_animation -> trusted_state_to_error_bottompath_animation
    int trusted_state_to_error_circlepath_animation -> trusted_state_to_error_circlepath_animation
    int trusted_state_to_error_ellipse_path_1_animation -> trusted_state_to_error_ellipse_path_1_animation
    int trusted_state_to_error_errorcircle_animation -> trusted_state_to_error_errorcircle_animation
    int trusted_state_to_error_errorexclamationdot_animation -> trusted_state_to_error_errorexclamationdot_animation
    int trusted_state_to_error_exclamationtop_animation -> trusted_state_to_error_exclamationtop_animation
    int trusted_state_to_error_lock_top_animation -> trusted_state_to_error_lock_top_animation
    int trusted_state_to_error_path_1_animation -> trusted_state_to_error_path_1_animation
    int trusted_state_to_error_path_2_animation -> trusted_state_to_error_path_2_animation
    int trusted_state_to_error_path_3_animation -> trusted_state_to_error_path_3_animation
    int trusted_state_to_error_toppath_animation -> trusted_state_to_error_toppath_animation
    int tv_pip_controls_focus_gain_animation -> tv_pip_controls_focus_gain_animation
    int tv_pip_controls_focus_loss_animation -> tv_pip_controls_focus_loss_animation
    int tv_pip_menu_fade_in_animation -> tv_pip_menu_fade_in_animation
    int tv_pip_menu_fade_out_animation -> tv_pip_menu_fade_out_animation
    void <init>() -> <init>
com.android.systemui.statusbar.phone.StatusBarWindowView$2 -> com.android.systemui.statusbar.phone.StatusBarWindowView$2:
    com.android.systemui.statusbar.phone.StatusBarWindowView this$0 -> this$0
    com.android.internal.view.FloatingActionMode val$mode -> val$mode
    void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView,com.android.internal.view.FloatingActionMode) -> <init>
    boolean onPreDraw() -> onPreDraw
com.google.protobuf.nano.CodedOutputByteBufferNano -> com.google.protobuf.nano.CodedOutputByteBufferNano:
    java.nio.ByteBuffer buffer -> buffer
    int computeTagSize(int) -> computeTagSize
    int computeGroupSizeNoTag(com.google.protobuf.nano.MessageNano) -> computeGroupSizeNoTag
    int encodedLength(java.lang.CharSequence) -> encodedLength
    int computeRawVarint64Size(long) -> computeRawVarint64Size
    void writeRawVarint64(long) -> writeRawVarint64
    int computeMessageSizeNoTag(com.google.protobuf.nano.MessageNano) -> computeMessageSizeNoTag
    void writeRawByte(byte) -> writeRawByte
    void writeStringNoTag(java.lang.String) -> writeStringNoTag
    void writeRawBytes(byte[]) -> writeRawBytes
    void writeRawLittleEndian32(int) -> writeRawLittleEndian32
    int computeMessageSize(int,com.google.protobuf.nano.MessageNano) -> computeMessageSize
    int spaceLeft() -> spaceLeft
    void writeUInt64(int,long) -> writeUInt64
    int computeStringSizeNoTag(java.lang.String) -> computeStringSizeNoTag
    int computeInt32SizeNoTag(int) -> computeInt32SizeNoTag
    void <init>(byte[],int,int) -> <init>
    int encodedLengthGeneral(java.lang.CharSequence,int) -> encodedLengthGeneral
    void writeInt32(int,int) -> writeInt32
    void writeInt32NoTag(int) -> writeInt32NoTag
    int computeFloatSize(int,float) -> computeFloatSize
    int computeInt32Size(int,int) -> computeInt32Size
    void writeMessageNoTag(com.google.protobuf.nano.MessageNano) -> writeMessageNoTag
    void writeGroupNoTag(com.google.protobuf.nano.MessageNano) -> writeGroupNoTag
    void <init>(java.nio.ByteBuffer) -> <init>
    int computeUInt64Size(int,long) -> computeUInt64Size
    void writeBool(int,boolean) -> writeBool
    int computeBoolSizeNoTag(boolean) -> computeBoolSizeNoTag
    void checkNoSpaceLeft() -> checkNoSpaceLeft
    com.google.protobuf.nano.CodedOutputByteBufferNano newInstance(byte[]) -> newInstance
    void writeMessage(int,com.google.protobuf.nano.MessageNano) -> writeMessage
    int computeBoolSize(int,boolean) -> computeBoolSize
    int computeGroupSize(int,com.google.protobuf.nano.MessageNano) -> computeGroupSize
    int computeRawVarint32Size(int) -> computeRawVarint32Size
    void writeRawByte(int) -> writeRawByte
    void writeBoolNoTag(boolean) -> writeBoolNoTag
    void writeUInt64NoTag(long) -> writeUInt64NoTag
    int encode(java.lang.CharSequence,byte[],int,int) -> encode
    void writeFloat(int,float) -> writeFloat
    void writeString(int,java.lang.String) -> writeString
    void writeRawVarint32(int) -> writeRawVarint32
    int computeFloatSizeNoTag(float) -> computeFloatSizeNoTag
    int computeStringSize(int,java.lang.String) -> computeStringSize
    void writeFloatNoTag(float) -> writeFloatNoTag
    void writeTag(int,int) -> writeTag
    com.google.protobuf.nano.CodedOutputByteBufferNano newInstance(byte[],int,int) -> newInstance
    void encodeDirect(java.lang.CharSequence,java.nio.ByteBuffer) -> encodeDirect
    void writeRawBytes(byte[],int,int) -> writeRawBytes
    int computeUInt64SizeNoTag(long) -> computeUInt64SizeNoTag
    void encode(java.lang.CharSequence,java.nio.ByteBuffer) -> encode
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int mFrom -> mFrom
    int mMediumAnimationDuration -> mMediumAnimationDuration
    android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper -> mNestedScrollingChildHelper
    float mInitialDownY -> mInitialDownY
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    float mInitialMotionY -> mInitialMotionY
    boolean mScale -> mScale
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int mTouchSlop -> mTouchSlop
    float mTotalUnconsumed -> mTotalUnconsumed
    int mActivePointerId -> mActivePointerId
    boolean mNotify -> mNotify
    boolean mRefreshing -> mRefreshing
    int mSpinnerOffsetEnd -> mSpinnerOffsetEnd
    android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback -> mChildScrollUpCallback
    int mCircleViewIndex -> mCircleViewIndex
    int[] mParentScrollConsumed -> mParentScrollConsumed
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    float mStartingScale -> mStartingScale
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    boolean mNestedScrollInProgress -> mNestedScrollInProgress
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    boolean mIsBeingDragged -> mIsBeingDragged
    android.view.View mTarget -> mTarget
    int[] mParentOffsetInWindow -> mParentOffsetInWindow
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> mNestedScrollingParentHelper
    java.lang.String LOG_TAG -> LOG_TAG
    int mCircleDiameter -> mCircleDiameter
    boolean mUsingCustomStart -> mUsingCustomStart
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    android.support.v4.widget.CircularProgressDrawable mProgress -> mProgress
    float mTotalDragDistance -> mTotalDragDistance
    void setRefreshing(boolean,boolean) -> setRefreshing
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void setColorViewAlpha(int) -> setColorViewAlpha
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    void onMeasure(int,int) -> onMeasure
    void ensureTarget() -> ensureTarget
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    void startDragging(float) -> startDragging
    void onLayout(boolean,int,int,int,int) -> onLayout
    void moveSpinner(float) -> moveSpinner
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void setEnabled(boolean) -> setEnabled
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void reset() -> reset
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void setAnimationProgress(float) -> setAnimationProgress
    int getNestedScrollAxes() -> getNestedScrollAxes
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    void moveToStart(float) -> moveToStart
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean startNestedScroll(int) -> startNestedScroll
    void finishSpinner(float) -> finishSpinner
    boolean canChildScrollUp() -> canChildScrollUp
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    void <clinit>() -> <clinit>
    void stopNestedScroll() -> stopNestedScroll
    void createProgressView() -> createProgressView
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.systemui.settings.BrightnessController$1 -> com.android.systemui.settings.BrightnessController$1:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    void <init>(com.android.systemui.settings.BrightnessController) -> <init>
    void run() -> run
android.support.v17.leanback.widget.StreamingTextView$1 -> android.support.v17.leanback.widget.StreamingTextView$1:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Integer get(android.support.v17.leanback.widget.StreamingTextView) -> get
    void set(android.support.v17.leanback.widget.StreamingTextView,java.lang.Integer) -> set
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.pip.phone.PipMotionHelper$1 -> com.android.systemui.pip.phone.PipMotionHelper$1:
    com.android.systemui.pip.phone.PipMotionHelper this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMotionHelper) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.keyguard.WorkLockActivity -> com.android.systemui.keyguard.WorkLockActivity:
    android.app.KeyguardManager mKgm -> mKgm
    android.content.BroadcastReceiver mLockEventReceiver -> mLockEventReceiver
    void <init>() -> <init>
    android.app.ActivityOptions getChallengeOptions() -> getChallengeOptions
    android.app.KeyguardManager getKeyguardManager() -> getKeyguardManager
    int getPrimaryColor() -> getPrimaryColor
    int getTargetUserId() -> getTargetUserId
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setTaskDescription(android.app.ActivityManager$TaskDescription) -> setTaskDescription
    void showConfirmCredentialActivity() -> showConfirmCredentialActivity
    android.app.KeyguardManager -wrap0(com.android.systemui.keyguard.WorkLockActivity) -> -wrap0
com.android.systemui.qs.-$Lambda$r1XWAFu85EnFy0D38NZuBYFntYU -> com.android.systemui.qs.-$Lambda$r1XWAFu85EnFy0D38NZuBYFntYU:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.recents.events.component.ScreenPinningRequestEvent -> com.android.systemui.recents.events.component.ScreenPinningRequestEvent:
    android.content.Context applicationContext -> applicationContext
    int taskId -> taskId
    void <init>(android.content.Context,int) -> <init>
com.android.systemui.statusbar.phone.SystemUIDialog -> com.android.systemui.statusbar.phone.SystemUIDialog:
    android.content.Context mContext -> mContext
    void setShowForAllUsers(android.app.Dialog,boolean) -> setShowForAllUsers
    android.app.AlertDialog applyFlags(android.app.AlertDialog) -> applyFlags
    void registerDismissListener(android.app.Dialog) -> registerDismissListener
    void setWindowOnTop(android.app.Dialog) -> setWindowOnTop
    void <init>(android.content.Context) -> <init>
    void setShowForAllUsers(boolean) -> setShowForAllUsers
    void setMessage(int) -> setMessage
    void <init>(android.content.Context,int) -> <init>
    void setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    void setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    void lambda$-com_android_systemui_statusbar_phone_SystemUIDialog_3951(boolean[],android.content.Context,android.content.BroadcastReceiver,android.content.DialogInterface) -> lambda$-com_android_systemui_statusbar_phone_SystemUIDialog_3951
com.android.systemui.doze.DozeSensors$TriggerSensor -> com.android.systemui.doze.DozeSensors$TriggerSensor:
    boolean mConfigured -> mConfigured
    boolean mDisabled -> mDisabled
    int mPulseReason -> mPulseReason
    boolean mRegistered -> mRegistered
    boolean mReportsTouchCoordinates -> mReportsTouchCoordinates
    boolean mRequested -> mRequested
    boolean mRequiresTouchscreen -> mRequiresTouchscreen
    android.hardware.Sensor mSensor -> mSensor
    java.lang.String mSetting -> mSetting
    boolean mSettingDefault -> mSettingDefault
    com.android.systemui.doze.DozeSensors this$0 -> this$0
    void <init>(com.android.systemui.doze.DozeSensors,android.hardware.Sensor,java.lang.String,boolean,int,boolean,boolean) -> <init>
    void <init>(com.android.systemui.doze.DozeSensors,android.hardware.Sensor,java.lang.String,boolean,boolean,int,boolean,boolean) -> <init>
    boolean enabledBySetting() -> enabledBySetting
    void onTrigger(android.hardware.TriggerEvent) -> onTrigger
    void registerSettingsObserver(android.database.ContentObserver) -> registerSettingsObserver
    void setDisabled(boolean) -> setDisabled
    void setListening(boolean) -> setListening
    java.lang.String toString() -> toString
    java.lang.String triggerEventToString(android.hardware.TriggerEvent) -> triggerEventToString
    void updateListener() -> updateListener
    void lambda$-com_android_systemui_doze_DozeSensors$TriggerSensor_13513(android.hardware.TriggerEvent) -> lambda$-com_android_systemui_doze_DozeSensors$TriggerSensor_13513
android.support.v7.widget.AppCompatImageButton -> android.support.v7.widget.AppCompatImageButton:
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> mImageHelper
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    void setImageResource(int) -> setImageResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void setImageURI(android.net.Uri) -> setImageURI
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
android.support.v7.appcompat.R$color -> android.support.v7.appcompat.R$color:
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_tint_btn_checkable -> abc_tint_btn_checkable
    int abc_tint_default -> abc_tint_default
    int abc_tint_edittext -> abc_tint_edittext
    int abc_tint_seek_thumb -> abc_tint_seek_thumb
    int abc_tint_spinner -> abc_tint_spinner
    int abc_tint_switch_track -> abc_tint_switch_track
    void <init>() -> <init>
com.android.keyguard.KeyguardPatternView$3 -> com.android.keyguard.KeyguardPatternView$3:
    com.android.keyguard.KeyguardPatternView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPatternView) -> <init>
    void run() -> run
com.android.systemui.media.MediaProjectionPermissionActivity -> com.android.systemui.media.MediaProjectionPermissionActivity:
    android.app.AlertDialog mDialog -> mDialog
    java.lang.String mPackageName -> mPackageName
    boolean mPermanentGrant -> mPermanentGrant
    android.media.projection.IMediaProjectionManager mService -> mService
    int mUid -> mUid
    void <init>() -> <init>
    android.content.Intent getMediaProjectionIntent(int,java.lang.String,boolean) -> getMediaProjectionIntent
    void onCancel(android.content.DialogInterface) -> onCancel
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    int mHead -> mHead
    int mCapacityBitmask -> mCapacityBitmask
    java.lang.Object[] mElements -> mElements
    int mTail -> mTail
    void <init>(int) -> <init>
    void doubleCapacity() -> doubleCapacity
    void clear() -> clear
    void addFirst(java.lang.Object) -> addFirst
    java.lang.Object get(int) -> get
    void removeFromStart(int) -> removeFromStart
    int size() -> size
    void addLast(java.lang.Object) -> addLast
    void <init>() -> <init>
    void removeFromEnd(int) -> removeFromEnd
android.support.v7.widget.VectorEnabledTintResources -> android.support.v7.widget.VectorEnabledTintResources:
    java.lang.ref.WeakReference mContextRef -> mContextRef
    boolean shouldBeUsed() -> shouldBeUsed
    android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
    void <init>(android.content.Context,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session -> com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session:
    int touchAreaWidth_ -> touchAreaWidth_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent[] touchEvents -> touchEvents
    int type_ -> type_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent[] phoneEvents -> phoneEvents
    int touchAreaHeight_ -> touchAreaHeight_
    long durationMillis_ -> durationMillis_
    java.lang.String build_ -> build_
    int result_ -> result_
    int bitField0_ -> bitField0_
    long startTimestampMillis_ -> startTimestampMillis_
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent[] sensorEvents -> sensorEvents
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session setDurationMillis(long) -> setDurationMillis
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session setTouchAreaHeight(int) -> setTouchAreaHeight
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session clear() -> clear
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session setResult(int) -> setResult
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session setStartTimestampMillis(long) -> setStartTimestampMillis
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session setType(int) -> setType
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int computeSerializedSize() -> computeSerializedSize
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session setTouchAreaWidth(int) -> setTouchAreaWidth
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session setBuild(java.lang.String) -> setBuild
    void <init>() -> <init>
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
com.android.systemui.qs.QSFooterImpl -> com.android.systemui.qs.QSFooterImpl:
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    com.android.systemui.qs.TouchAnimator mAlarmAnimator -> mAlarmAnimator
    boolean mAlarmShowing -> mAlarmShowing
    android.widget.TextView mAlarmStatus -> mAlarmStatus
    android.view.View mAlarmStatusCollapsed -> mAlarmStatusCollapsed
    com.android.systemui.qs.TouchAnimator mAnimator -> mAnimator
    android.view.View mDate -> mDate
    android.view.View mDateTimeGroup -> mDateTimeGroup
    android.view.View mEdit -> mEdit
    com.android.systemui.statusbar.phone.ExpandableIndicator mExpandIndicator -> mExpandIndicator
    boolean mExpanded -> mExpanded
    float mExpansionAmount -> mExpansionAmount
    boolean mKeyguardShowing -> mKeyguardShowing
    boolean mListening -> mListening
    android.widget.ImageView mMultiUserAvatar -> mMultiUserAvatar
    com.android.systemui.statusbar.phone.MultiUserSwitch mMultiUserSwitch -> mMultiUserSwitch
    android.app.AlarmManager$AlarmClockInfo mNextAlarm -> mNextAlarm
    com.android.systemui.statusbar.policy.NextAlarmController mNextAlarmController -> mNextAlarmController
    com.android.systemui.qs.QSPanel mQsPanel -> mQsPanel
    com.android.systemui.qs.TouchAnimator mSettingsAlpha -> mSettingsAlpha
    com.android.systemui.statusbar.phone.SettingsButton mSettingsButton -> mSettingsButton
    android.view.View mSettingsContainer -> mSettingsContainer
    boolean mShowEmergencyCallsOnly -> mShowEmergencyCallsOnly
    com.android.systemui.statusbar.policy.UserInfoController mUserInfoController -> mUserInfoController
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    com.android.systemui.qs.TouchAnimator createSettingsAlphaAnimator() -> createSettingsAlphaAnimator
    android.view.View getExpandView() -> getExpandView
    void onClick(android.view.View) -> onClick
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onNextAlarmChanged(android.app.AlarmManager$AlarmClockInfo) -> onNextAlarmChanged
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> onUserInfoChanged
    void setEmergencyCallsOnly(boolean) -> setEmergencyCallsOnly
    void setExpanded(boolean) -> setExpanded
    void setExpansion(float) -> setExpansion
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void setListening(boolean) -> setListening
    void setQSPanel(com.android.systemui.qs.QSPanel) -> setQSPanel
    void startSettingsActivity() -> startSettingsActivity
    void updateAlarmVisibilities() -> updateAlarmVisibilities
    void updateAnimator(int) -> updateAnimator
    void updateEverything() -> updateEverything
    void updateListeners() -> updateListeners
    void updateResources() -> updateResources
    void updateSettingsAnimator() -> updateSettingsAnimator
    void updateVisibilities() -> updateVisibilities
    void lambda$-com_android_systemui_qs_QSFooterImpl_4532(android.view.View) -> lambda$-com_android_systemui_qs_QSFooterImpl_4532
    void lambda$-com_android_systemui_qs_QSFooterImpl_4627(android.view.View) -> lambda$-com_android_systemui_qs_QSFooterImpl_4627
    void lambda$-com_android_systemui_qs_QSFooterImpl_5960(android.view.View,int,int,int,int,int,int,int,int) -> lambda$-com_android_systemui_qs_QSFooterImpl_5960
    void lambda$-com_android_systemui_qs_QSFooterImpl_11619() -> lambda$-com_android_systemui_qs_QSFooterImpl_11619
    void lambda$-com_android_systemui_qs_QSFooterImpl_13508() -> lambda$-com_android_systemui_qs_QSFooterImpl_13508
    void lambda$-com_android_systemui_qs_QSFooterImpl_13925() -> lambda$-com_android_systemui_qs_QSFooterImpl_13925
    void lambda$-com_android_systemui_qs_QSFooterImpl_14062() -> lambda$-com_android_systemui_qs_QSFooterImpl_14062
    android.widget.TextView -get0(com.android.systemui.qs.QSFooterImpl) -> -get0
    android.view.View -get1(com.android.systemui.qs.QSFooterImpl) -> -get1
android.support.v4.view.ViewPager$4 -> android.support.v4.view.ViewPager$4:
    android.support.v4.view.ViewPager this$0 -> this$0
    android.graphics.Rect mTempRect -> mTempRect
    void <init>(android.support.v4.view.ViewPager) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v17.leanback.widget.StaggeredGridDefault -> android.support.v17.leanback.widget.StaggeredGridDefault:
    int getRowMax(int) -> getRowMax
    boolean appendVisibleItemsWithoutCache(int,boolean) -> appendVisibleItemsWithoutCache
    int findRowEdgeLimitSearchIndex(boolean) -> findRowEdgeLimitSearchIndex
    int getRowMin(int) -> getRowMin
    int findRowMin(boolean,int,int[]) -> findRowMin
    int findRowMax(boolean,int,int[]) -> findRowMax
    void <init>() -> <init>
    boolean prependVisibleItemsWithoutCache(int,boolean) -> prependVisibleItemsWithoutCache
com.android.systemui.plugins.OverlayPlugin -> com.android.systemui.plugins.OverlayPlugin:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    void setCollapseDesired(boolean) -> setCollapseDesired
    void setup(android.view.View,android.view.View) -> setup
    boolean holdStatusBarOpen() -> holdStatusBarOpen
com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption -> com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption:
    int VERSION -> VERSION
    android.service.notification.SnoozeCriterion getSnoozeCriterion() -> getSnoozeCriterion
    int getMinutesToSnoozeFor() -> getMinutesToSnoozeFor
    android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getAccessibilityAction() -> getAccessibilityAction
    java.lang.CharSequence getDescription() -> getDescription
    java.lang.CharSequence getConfirmation() -> getConfirmation
com.android.systemui.statusbar.policy.UserInfoControllerImpl -> com.android.systemui.statusbar.policy.UserInfoControllerImpl:
    java.util.ArrayList mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    android.content.BroadcastReceiver mProfileReceiver -> mProfileReceiver
    android.content.BroadcastReceiver mReceiver -> mReceiver
    java.lang.String mUserAccount -> mUserAccount
    android.graphics.drawable.Drawable mUserDrawable -> mUserDrawable
    android.os.AsyncTask mUserInfoTask -> mUserInfoTask
    java.lang.String mUserName -> mUserName
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.UserInfoController$OnUserInfoChangedListener) -> addCallback
    void notifyChanged() -> notifyChanged
    void queryForUserInformation() -> queryForUserInformation
    void reloadUserInfo() -> reloadUserInfo
    void removeCallback(com.android.systemui.statusbar.policy.UserInfoController$OnUserInfoChangedListener) -> removeCallback
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    android.content.Context -get0(com.android.systemui.statusbar.policy.UserInfoControllerImpl) -> -get0
    java.lang.String -set0(com.android.systemui.statusbar.policy.UserInfoControllerImpl,java.lang.String) -> -set0
    android.graphics.drawable.Drawable -set1(com.android.systemui.statusbar.policy.UserInfoControllerImpl,android.graphics.drawable.Drawable) -> -set1
    android.os.AsyncTask -set2(com.android.systemui.statusbar.policy.UserInfoControllerImpl,android.os.AsyncTask) -> -set2
    java.lang.String -set3(com.android.systemui.statusbar.policy.UserInfoControllerImpl,java.lang.String) -> -set3
    void -wrap0(com.android.systemui.statusbar.policy.UserInfoControllerImpl) -> -wrap0
com.android.systemui.qs.QSDetail$1$1 -> com.android.systemui.qs.QSDetail$1$1:
    com.android.systemui.qs.QSDetail$1 this$1 -> this$1
    boolean val$state -> val$state
    void <init>(com.android.systemui.qs.QSDetail$1,boolean) -> <init>
    void run() -> run
android.support.v17.leanback.widget.SearchBar$SearchBarListener -> android.support.v17.leanback.widget.SearchBar$SearchBarListener:
    void onKeyboardDismiss(java.lang.String) -> onKeyboardDismiss
    void onSearchQuerySubmit(java.lang.String) -> onSearchQuerySubmit
    void onSearchQueryChange(java.lang.String) -> onSearchQueryChange
android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback -> android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback:
    boolean canChildScrollUp(android.support.v4.widget.SwipeRefreshLayout,android.view.View) -> canChildScrollUp
android.support.v4.view.AbsSavedState -> android.support.v4.view.AbsSavedState:
    android.os.Parcelable mSuperState -> mSuperState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.view.AbsSavedState EMPTY_STATE -> EMPTY_STATE
    void <init>(android.support.v4.view.AbsSavedState) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    android.os.Parcelable getSuperState() -> getSuperState
    int describeContents() -> describeContents
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.tuner.TunerService$Tunable -> com.android.systemui.tuner.TunerService$Tunable:
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
android.support.v7.preference.PreferenceGroup -> android.support.v7.preference.PreferenceGroup:
    int mCurrentPreferenceOrder -> mCurrentPreferenceOrder
    android.os.Handler mHandler -> mHandler
    java.util.List mPreferenceList -> mPreferenceList
    android.support.v4.util.SimpleArrayMap mIdRecycleCache -> mIdRecycleCache
    boolean mAttachedToHierarchy -> mAttachedToHierarchy
    boolean mOrderingAsAdded -> mOrderingAsAdded
    java.lang.Runnable mClearRecycleCacheRunnable -> mClearRecycleCacheRunnable
    android.support.v7.preference.Preference getPreference(int) -> getPreference
    void onAttached() -> onAttached
    void sortPreferences() -> sortPreferences
    void notifyDependencyChange(boolean) -> notifyDependencyChange
    android.support.v7.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    void addItemFromInflater(android.support.v7.preference.Preference) -> addItemFromInflater
    boolean removePreferenceInt(android.support.v7.preference.Preference) -> removePreferenceInt
    boolean onPrepareAddPreference(android.support.v7.preference.Preference) -> onPrepareAddPreference
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDetached() -> onDetached
    boolean isOnSameScreenAsChildren() -> isOnSameScreenAsChildren
    boolean addPreference(android.support.v7.preference.Preference) -> addPreference
    boolean removePreference(android.support.v7.preference.Preference) -> removePreference
    android.support.v4.util.SimpleArrayMap -get0(android.support.v7.preference.PreferenceGroup) -> -get0
    int getPreferenceCount() -> getPreferenceCount
    void setOrderingAsAdded(boolean) -> setOrderingAsAdded
android.support.v17.leanback.widget.ParallaxEffect -> android.support.v17.leanback.widget.ParallaxEffect:
    java.util.List mMarkerValues -> mMarkerValues
    java.util.List mTotalWeights -> mTotalWeights
    java.util.List mWeights -> mWeights
    java.util.List mTargets -> mTargets
    void performMapping(android.support.v17.leanback.widget.Parallax) -> performMapping
    float calculateFraction(android.support.v17.leanback.widget.Parallax) -> calculateFraction
    float getFractionWithWeightAdjusted(float,int) -> getFractionWithWeightAdjusted
    void <init>() -> <init>
    java.lang.Number calculateDirectValue(android.support.v17.leanback.widget.Parallax) -> calculateDirectValue
com.android.systemui.statusbar.DragDownHelper$1 -> com.android.systemui.statusbar.DragDownHelper$1:
    com.android.systemui.statusbar.DragDownHelper this$0 -> this$0
    com.android.systemui.statusbar.ExpandableView val$child -> val$child
    void <init>(com.android.systemui.statusbar.DragDownHelper,com.android.systemui.statusbar.ExpandableView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.tuner.PreviewNavInflater -> com.android.systemui.tuner.PreviewNavInflater:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean isValidLayout(java.lang.String) -> isValidLayout
    void onAttachedToWindow() -> onAttachedToWindow
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
com.android.systemui.util.wakelock.-$Lambda$YTIvR8NSRT2nriAeW75H2RGbebc -> com.android.systemui.util.wakelock.-$Lambda$YTIvR8NSRT2nriAeW75H2RGbebc:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    int mPosition -> mPosition
    int mGapDir -> mGapDir
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean mHasUnwantedGapAfter -> mHasUnwantedGapAfter
    int[] mGapPerSpan -> mGapPerSpan
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
com.android.systemui.recents.model.RecentsTaskLoadPlan -> com.android.systemui.recents.model.RecentsTaskLoadPlan:
    int MIN_NUM_TASKS -> MIN_NUM_TASKS
    int SESSION_BEGIN_TIME -> SESSION_BEGIN_TIME
    android.content.Context mContext -> mContext
    android.util.ArraySet mCurrentQuietProfiles -> mCurrentQuietProfiles
    int mPreloadedUserId -> mPreloadedUserId
    java.util.List mRawTasks -> mRawTasks
    com.android.systemui.recents.model.TaskStack mStack -> mStack
    com.android.systemui.recents.model.TaskStack getTaskStack() -> getTaskStack
    boolean hasTasks() -> hasTasks
    void <init>(android.content.Context) -> <init>
    void executePlan(com.android.systemui.recents.model.RecentsTaskLoadPlan$Options,com.android.systemui.recents.model.RecentsTaskLoader) -> executePlan
    java.util.List getRawTasks() -> getRawTasks
    boolean isHistoricalTask(android.app.ActivityManager$RecentTaskInfo) -> isHistoricalTask
    long migrateLegacyLastStackActiveTime(int) -> migrateLegacyLastStackActiveTime
    void preloadPlan(com.android.systemui.recents.model.RecentsTaskLoader,int,boolean) -> preloadPlan
    void preloadRawTasks(boolean) -> preloadRawTasks
    void updateCurrentQuietProfilesCache(int) -> updateCurrentQuietProfilesCache
    void <clinit>() -> <clinit>
com.android.keyguard.KeyguardPatternView -> com.android.keyguard.KeyguardPatternView:
    com.android.settingslib.animation.AppearAnimationUtils mAppearAnimationUtils -> mAppearAnimationUtils
    com.android.keyguard.KeyguardSecurityCallback mCallback -> mCallback
    java.lang.Runnable mCancelPatternRunnable -> mCancelPatternRunnable
    android.view.ViewGroup mContainer -> mContainer
    android.os.CountDownTimer mCountdownTimer -> mCountdownTimer
    com.android.settingslib.animation.DisappearAnimationUtils mDisappearAnimationUtils -> mDisappearAnimationUtils
    com.android.settingslib.animation.DisappearAnimationUtils mDisappearAnimationUtilsLocked -> mDisappearAnimationUtilsLocked
    int mDisappearYTranslation -> mDisappearYTranslation
    android.view.View mEcaView -> mEcaView
    com.android.keyguard.KeyguardUpdateMonitor mKeyguardUpdateMonitor -> mKeyguardUpdateMonitor
    long mLastPokeTime -> mLastPokeTime
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    com.android.internal.widget.LockPatternView mLockPatternView -> mLockPatternView
    android.os.AsyncTask mPendingLockCheck -> mPendingLockCheck
    com.android.keyguard.KeyguardMessageArea mSecurityMessageDisplay -> mSecurityMessageDisplay
    android.graphics.Rect mTempRect -> mTempRect
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void createAnimation(com.android.internal.widget.LockPatternView$CellState,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable) -> createAnimation
    void displayDefaultSecurityMessage() -> displayDefaultSecurityMessage
    void enableClipping(boolean) -> enableClipping
    void handleAttemptLockout(long) -> handleAttemptLockout
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    boolean needsInput() -> needsInput
    void onEmergencyButtonClickedWhenInCall() -> onEmergencyButtonClickedWhenInCall
    void onFinishInflate() -> onFinishInflate
    void onPause() -> onPause
    void onResume(int) -> onResume
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void reset() -> reset
    void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback) -> setKeyguardCallback
    void setLockPatternUtils(com.android.internal.widget.LockPatternUtils) -> setLockPatternUtils
    void showMessage(java.lang.String,int) -> showMessage
    void showPromptReason(int) -> showPromptReason
    void startAppearAnimation() -> startAppearAnimation
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    void lambda$-com_android_keyguard_KeyguardPatternView_18017(java.lang.Runnable) -> lambda$-com_android_keyguard_KeyguardPatternView_18017
    void createAnimation(java.lang.Object,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable) -> createAnimation
    com.android.keyguard.KeyguardSecurityCallback -get0(com.android.keyguard.KeyguardPatternView) -> -get0
    java.lang.Runnable -get1(com.android.keyguard.KeyguardPatternView) -> -get1
    android.content.Context -get2(com.android.keyguard.KeyguardPatternView) -> -get2
    com.android.internal.widget.LockPatternUtils -get3(com.android.keyguard.KeyguardPatternView) -> -get3
    com.android.internal.widget.LockPatternView -get4(com.android.keyguard.KeyguardPatternView) -> -get4
    android.os.AsyncTask -get5(com.android.keyguard.KeyguardPatternView) -> -get5
    com.android.keyguard.KeyguardMessageArea -get6(com.android.keyguard.KeyguardPatternView) -> -get6
    android.os.AsyncTask -set0(com.android.keyguard.KeyguardPatternView,android.os.AsyncTask) -> -set0
    void -wrap0(com.android.keyguard.KeyguardPatternView) -> -wrap0
    void -wrap1(com.android.keyguard.KeyguardPatternView,boolean) -> -wrap1
    void -wrap2(com.android.keyguard.KeyguardPatternView,long) -> -wrap2
android.support.v7.util.DiffUtil$Callback -> android.support.v7.util.DiffUtil$Callback:
    boolean areContentsTheSame(int,int) -> areContentsTheSame
    int getOldListSize() -> getOldListSize
    java.lang.Object getChangePayload(int,int) -> getChangePayload
    int getNewListSize() -> getNewListSize
    void <init>() -> <init>
    boolean areItemsTheSame(int,int) -> areItemsTheSame
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.view.animation.LookupTableInterpolator:
    float[] mValues -> mValues
    float mStepSize -> mStepSize
    float getInterpolation(float) -> getInterpolation
    void <init>(float[]) -> <init>
com.android.systemui.qs.QSDetail$1$2 -> com.android.systemui.qs.QSDetail$1$2:
    com.android.systemui.qs.QSDetail$1 this$1 -> this$1
    com.android.systemui.plugins.qs.DetailAdapter val$detail -> val$detail
    int val$x -> val$x
    int val$y -> val$y
    void <init>(com.android.systemui.qs.QSDetail$1,com.android.systemui.plugins.qs.DetailAdapter,int,int) -> <init>
    void run() -> run
android.support.annotation.RequiresApi -> android.support.annotation.RequiresApi:
    int value() -> value
com.android.systemui.recents.events.ui.RecentsGrowingEvent -> com.android.systemui.recents.events.ui.RecentsGrowingEvent:
    void <init>() -> <init>
android.support.v7.view.menu.MenuWrapperFactory -> android.support.v7.view.menu.MenuWrapperFactory:
    android.view.Menu wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu) -> wrapSupportMenu
    void <init>() -> <init>
    android.view.SubMenu wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> wrapSupportSubMenu
    android.view.MenuItem wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> wrapSupportMenuItem
com.android.systemui.DessertCaseDream -> com.android.systemui.DessertCaseDream:
    com.android.systemui.DessertCaseView$RescalingContainer mContainer -> mContainer
    com.android.systemui.DessertCaseView mView -> mView
    void <init>() -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDreamingStarted() -> onDreamingStarted
    void onDreamingStopped() -> onDreamingStopped
    com.android.systemui.DessertCaseView -get0(com.android.systemui.DessertCaseDream) -> -get0
com.android.systemui.statusbar.phone.ReverseLinearLayout -> com.android.systemui.statusbar.phone.ReverseLinearLayout:
    boolean mIsAlternativeOrder -> mIsAlternativeOrder
    boolean mIsLayoutReverse -> mIsLayoutReverse
    void setAlternativeOrder(boolean) -> setAlternativeOrder
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addView(android.view.View) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void onFinishInflate() -> onFinishInflate
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void reverseParams(android.view.ViewGroup$LayoutParams,android.view.View) -> reverseParams
    void updateOrder() -> updateOrder
    void -wrap0(android.view.ViewGroup$LayoutParams,android.view.View) -> -wrap0
android.support.graphics.drawable.VectorDrawableCompat$VFullPath -> android.support.graphics.drawable.VectorDrawableCompat$VFullPath:
    int mStrokeColor -> mStrokeColor
    android.graphics.Paint$Cap mStrokeLineCap -> mStrokeLineCap
    float mStrokeMiterlimit -> mStrokeMiterlimit
    int[] mThemeAttrs -> mThemeAttrs
    float mTrimPathOffset -> mTrimPathOffset
    float mFillAlpha -> mFillAlpha
    int mFillColor -> mFillColor
    android.graphics.Paint$Join mStrokeLineJoin -> mStrokeLineJoin
    float mStrokeWidth -> mStrokeWidth
    float mStrokeAlpha -> mStrokeAlpha
    float mTrimPathEnd -> mTrimPathEnd
    float mTrimPathStart -> mTrimPathStart
    int mFillRule -> mFillRule
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    void <init>() -> <init>
    android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
com.android.systemui.statusbar.policy.ConfigurationController -> com.android.systemui.statusbar.policy.ConfigurationController:
com.android.systemui.recents.RecentsActivity$2 -> com.android.systemui.recents.RecentsActivity$2:
    com.android.systemui.recents.RecentsActivity this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsActivity) -> <init>
    boolean onPreDraw() -> onPreDraw
    void lambda$-com_android_systemui_recents_RecentsActivity$2_11859() -> lambda$-com_android_systemui_recents_RecentsActivity$2_11859
    void lambda$-com_android_systemui_recents_RecentsActivity$2_12108() -> lambda$-com_android_systemui_recents_RecentsActivity$2_12108
com.android.settingslib.R$color -> com.android.settingslib.R$color:
    int batterymeter_bolt_color -> batterymeter_bolt_color
    int meter_background_color -> meter_background_color
    int meter_consumed_color -> meter_consumed_color
    void <init>() -> <init>
com.android.systemui.globalactions.GlobalActionsDialog$PowerAction -> com.android.systemui.globalactions.GlobalActionsDialog$PowerAction:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    boolean onLongPress() -> onLongPress
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,com.android.systemui.globalactions.GlobalActionsDialog$PowerAction) -> <init>
com.android.systemui.statusbar.car.PageIndicator -> com.android.systemui.statusbar.car.PageIndicator:
    int mCurrentPosition -> mCurrentPosition
    int mPageCount -> mPageCount
    com.android.systemui.statusbar.car.PageIndicator$PageListener mPageListener -> mPageListener
    android.support.v4.view.ViewPager mPager -> mPager
    android.graphics.Paint mPaint -> mPaint
    int mRadius -> mRadius
    int mStep -> mStep
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    void setupWithViewPager(android.support.v4.view.ViewPager) -> setupWithViewPager
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.Object getRef(java.lang.ref.WeakReference) -> getRef
    void init() -> init
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateDots() -> updateDots
    int -get0(com.android.systemui.statusbar.car.PageIndicator) -> -get0
    int -get1(com.android.systemui.statusbar.car.PageIndicator) -> -get1
    int -set0(com.android.systemui.statusbar.car.PageIndicator,int) -> -set0
    void -wrap0(com.android.systemui.statusbar.car.PageIndicator) -> -wrap0
com.android.systemui.statusbar.NotificationGuts$1 -> com.android.systemui.statusbar.NotificationGuts$1:
    com.android.systemui.statusbar.NotificationGuts this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationGuts) -> <init>
    void run() -> run
com.android.systemui.recents.model.TaskStack$TaskStackCallbacks -> com.android.systemui.recents.model.TaskStack$TaskStackCallbacks:
    void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task) -> onStackTaskAdded
    void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.AnimationProps,boolean,boolean) -> onStackTaskRemoved
    void onStackTasksRemoved(com.android.systemui.recents.model.TaskStack) -> onStackTasksRemoved
    void onStackTasksUpdated(com.android.systemui.recents.model.TaskStack) -> onStackTasksUpdated
com.android.systemui.analytics.SensorLoggerSession -> com.android.systemui.analytics.SensorLoggerSession:
    long mEndTimestampMillis -> mEndTimestampMillis
    java.util.ArrayList mMotionEvents -> mMotionEvents
    java.util.ArrayList mPhoneEvents -> mPhoneEvents
    int mResult -> mResult
    java.util.ArrayList mSensorEvents -> mSensorEvents
    long mStartSystemTimeNanos -> mStartSystemTimeNanos
    long mStartTimestampMillis -> mStartTimestampMillis
    int mTouchAreaHeight -> mTouchAreaHeight
    int mTouchAreaWidth -> mTouchAreaWidth
    int mType -> mType
    void <init>(long,long) -> <init>
    void addMotionEvent(android.view.MotionEvent) -> addMotionEvent
    void addPhoneEvent(int,long) -> addPhoneEvent
    void addSensorEvent(android.hardware.SensorEvent,long) -> addSensorEvent
    void end(long,int) -> end
    int getResult() -> getResult
    long getStartTimestampMillis() -> getStartTimestampMillis
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent motionEventToProto(android.view.MotionEvent) -> motionEventToProto
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$PhoneEvent phoneEventToProto(int,long) -> phoneEventToProto
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent sensorEventToProto(android.hardware.SensorEvent,long) -> sensorEventToProto
    void setTouchArea(int,int) -> setTouchArea
    void setType(int) -> setType
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session toProto() -> toProto
    java.lang.String toString() -> toString
com.android.systemui.screenshot.GlobalScreenshot$12 -> com.android.systemui.screenshot.GlobalScreenshot$12:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23 -> android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23:
    android.support.v7.app.AppCompatDelegateImplV23 this$0 -> this$0
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    void <init>(android.support.v7.app.AppCompatDelegateImplV23,android.view.Window$Callback) -> <init>
android.support.v7.widget.ForwardingListener$DisallowIntercept -> android.support.v7.widget.ForwardingListener$DisallowIntercept:
    android.support.v7.widget.ForwardingListener this$0 -> this$0
    void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    void run() -> run
android.support.v17.leanback.widget.CheckableImageView -> android.support.v17.leanback.widget.CheckableImageView:
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    boolean mChecked -> mChecked
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void <clinit>() -> <clinit>
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
    boolean isChecked() -> isChecked
com.android.systemui.classifier.-$Lambda$cbp1GoQjSW3ocYuW3wmIobRpooQ$1 -> com.android.systemui.classifier.-$Lambda$cbp1GoQjSW3ocYuW3wmIobRpooQ$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.statusbar.phone.StatusBarIconController -> com.android.systemui.statusbar.phone.StatusBarIconController:
    void addIconGroup(com.android.systemui.statusbar.phone.StatusBarIconController$IconManager) -> addIconGroup
    void removeIconGroup(com.android.systemui.statusbar.phone.StatusBarIconController$IconManager) -> removeIconGroup
    android.util.ArraySet getIconBlacklist(java.lang.String) -> getIconBlacklist
    void setIconVisibility(java.lang.String,boolean) -> setIconVisibility
    void setIcon(java.lang.String,int,java.lang.CharSequence) -> setIcon
    void removeIcon(java.lang.String) -> removeIcon
    void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon) -> setIcon
    void setExternalIcon(java.lang.String) -> setExternalIcon
com.android.systemui.net.NetworkOverLimitActivity$1 -> com.android.systemui.net.NetworkOverLimitActivity$1:
    com.android.systemui.net.NetworkOverLimitActivity this$0 -> this$0
    android.net.NetworkTemplate val$template -> val$template
    void <init>(com.android.systemui.net.NetworkOverLimitActivity,android.net.NetworkTemplate) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.pip.phone.PipMediaController -> com.android.systemui.pip.phone.PipMediaController:
    android.app.IActivityManager mActivityManager -> mActivityManager
    android.content.Context mContext -> mContext
    java.util.ArrayList mListeners -> mListeners
    android.media.session.MediaController mMediaController -> mMediaController
    android.media.session.MediaSessionManager mMediaSessionManager -> mMediaSessionManager
    android.app.RemoteAction mNextAction -> mNextAction
    android.app.RemoteAction mPauseAction -> mPauseAction
    android.app.RemoteAction mPlayAction -> mPlayAction
    android.content.BroadcastReceiver mPlayPauseActionReceiver -> mPlayPauseActionReceiver
    android.media.session.MediaController$Callback mPlaybackChangedListener -> mPlaybackChangedListener
    android.app.RemoteAction mPrevAction -> mPrevAction
    android.media.session.MediaSessionManager$OnActiveSessionsChangedListener mSessionsChangedListener -> mSessionsChangedListener
    void <init>(android.content.Context,android.app.IActivityManager) -> <init>
    void addListener(com.android.systemui.pip.phone.PipMediaController$ActionListener) -> addListener
    void createMediaActions() -> createMediaActions
    java.util.List getMediaActions() -> getMediaActions
    void notifyActionsChanged() -> notifyActionsChanged
    void onActivityPinned() -> onActivityPinned
    void registerSessionListenerForCurrentUser() -> registerSessionListenerForCurrentUser
    void removeListener(com.android.systemui.pip.phone.PipMediaController$ActionListener) -> removeListener
    void resolveActiveMediaController(java.util.List) -> resolveActiveMediaController
    void setActiveMediaController(android.media.session.MediaController) -> setActiveMediaController
    void lambda$-com_android_systemui_pip_phone_PipMediaController_5123(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> lambda$-com_android_systemui_pip_phone_PipMediaController_5123
    void lambda$-com_android_systemui_pip_phone_PipMediaController_10962(java.util.List,com.android.systemui.pip.phone.PipMediaController$ActionListener) -> lambda$-com_android_systemui_pip_phone_PipMediaController_10962
    android.media.session.MediaController -get0(com.android.systemui.pip.phone.PipMediaController) -> -get0
    void -wrap0(com.android.systemui.pip.phone.PipMediaController) -> -wrap0
    void -wrap1(com.android.systemui.pip.phone.PipMediaController,java.util.List) -> -wrap1
com.android.systemui.power.PowerUI$1 -> com.android.systemui.power.PowerUI$1:
    com.android.systemui.power.PowerUI this$0 -> this$0
    void <init>(com.android.systemui.power.PowerUI,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
android.support.v7.app.MediaRouteDialogHelper -> android.support.v7.app.MediaRouteDialogHelper:
    java.util.HashMap getItemBoundMap(android.widget.ListView,android.widget.ArrayAdapter) -> getItemBoundMap
    java.util.Set getItemsRemoved(java.util.List,java.util.List) -> getItemsRemoved
    android.graphics.drawable.BitmapDrawable getViewBitmap(android.content.Context,android.view.View) -> getViewBitmap
    java.util.HashMap getItemBitmapMap(android.content.Context,android.widget.ListView,android.widget.ArrayAdapter) -> getItemBitmapMap
    int getDialogWidth(android.content.Context) -> getDialogWidth
    boolean listUnorderedEquals(java.util.List,java.util.List) -> listUnorderedEquals
    void <init>() -> <init>
    java.util.Set getItemsAdded(java.util.List,java.util.List) -> getItemsAdded
com.android.keyguard.KeyguardUpdateMonitor$2 -> com.android.keyguard.KeyguardUpdateMonitor$2:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void onSubscriptionsChanged() -> onSubscriptionsChanged
com.android.systemui.statusbar.phone.LightBarTransitionsController$DarkIntensityApplier -> com.android.systemui.statusbar.phone.LightBarTransitionsController$DarkIntensityApplier:
    void applyDarkIntensity(float) -> applyDarkIntensity
com.android.systemui.keyguard.ScreenLifecycle -> com.android.systemui.keyguard.ScreenLifecycle:
    int mScreenState -> mScreenState
    int getScreenState() -> getScreenState
    void <init>() -> <init>
    void dispatchScreenTurnedOff() -> dispatchScreenTurnedOff
    void dispatchScreenTurnedOn() -> dispatchScreenTurnedOn
    void dispatchScreenTurningOff() -> dispatchScreenTurningOff
    void dispatchScreenTurningOn() -> dispatchScreenTurningOn
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void setScreenState(int) -> setScreenState
    void -com_android_systemui_keyguard_ScreenLifecycle-mthref-0(com.android.systemui.keyguard.ScreenLifecycle$Observer) -> -com_android_systemui_keyguard_ScreenLifecycle-mthref-0
    void -com_android_systemui_keyguard_ScreenLifecycle-mthref-1(com.android.systemui.keyguard.ScreenLifecycle$Observer) -> -com_android_systemui_keyguard_ScreenLifecycle-mthref-1
    void -com_android_systemui_keyguard_ScreenLifecycle-mthref-2(com.android.systemui.keyguard.ScreenLifecycle$Observer) -> -com_android_systemui_keyguard_ScreenLifecycle-mthref-2
    void -com_android_systemui_keyguard_ScreenLifecycle-mthref-3(com.android.systemui.keyguard.ScreenLifecycle$Observer) -> -com_android_systemui_keyguard_ScreenLifecycle-mthref-3
com.android.keyguard.PasswordTextView$CharState$7 -> com.android.keyguard.PasswordTextView$CharState$7:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
    void <init>() -> <init>
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
com.android.systemui.ImageWallpaper$DrawableEngine$2 -> com.android.systemui.ImageWallpaper$DrawableEngine$2:
    com.android.systemui.ImageWallpaper$DrawableEngine this$1 -> this$1
    void <init>(com.android.systemui.ImageWallpaper$DrawableEngine) -> <init>
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.android.systemui.recents.views.TaskStackView$1 -> com.android.systemui.recents.views.TaskStackView$1:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskStackView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.volume.VolumeDialogControllerImpl$UserActivityListener -> com.android.systemui.volume.VolumeDialogControllerImpl$UserActivityListener:
    void onUserActivity() -> onUserActivity
android.support.v7.view.menu.BaseWrapper -> android.support.v7.view.menu.BaseWrapper:
    java.lang.Object mWrappedObject -> mWrappedObject
    void <init>(java.lang.Object) -> <init>
android.support.v17.leanback.R$string -> android.support.v17.leanback.R$string:
    int lb_search_bar_hint -> lb_search_bar_hint
    int lb_search_bar_hint_speech -> lb_search_bar_hint_speech
    int lb_search_bar_hint_with_title -> lb_search_bar_hint_with_title
    int lb_search_bar_hint_with_title_speech -> lb_search_bar_hint_with_title_speech
    void <init>() -> <init>
com.android.systemui.pip.tv.-$Lambda$Oiq86WOA62rnj-bUR420RGgXbzQ -> com.android.systemui.pip.tv.-$Lambda$Oiq86WOA62rnj-bUR420RGgXbzQ:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.graphics.drawable.Drawable) -> $m$0
    void onDrawableLoaded(android.graphics.drawable.Drawable) -> onDrawableLoaded
com.android.systemui.egg.MLand$Obstacle -> com.android.systemui.egg.MLand$Obstacle:
    float h -> h
    android.graphics.Rect hitRect -> hitRect
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context,float) -> <init>
    boolean cleared(com.android.systemui.egg.MLand$Player) -> cleared
    boolean intersects(com.android.systemui.egg.MLand$Player) -> intersects
    void step(long,long,float,float) -> step
com.android.systemui.statusbar.phone.UnlockMethodCache$1 -> com.android.systemui.statusbar.phone.UnlockMethodCache$1:
    com.android.systemui.statusbar.phone.UnlockMethodCache this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.UnlockMethodCache) -> <init>
    void onFaceUnlockStateChanged(boolean,int) -> onFaceUnlockStateChanged
    void onFingerprintAuthenticated(int) -> onFingerprintAuthenticated
    void onKeyguardVisibilityChanged(boolean) -> onKeyguardVisibilityChanged
    void onScreenTurnedOff() -> onScreenTurnedOff
    void onStartedWakingUp() -> onStartedWakingUp
    void onStrongAuthStateChanged(int) -> onStrongAuthStateChanged
    void onTrustChanged(int) -> onTrustChanged
    void onTrustManagedChanged(int) -> onTrustManagedChanged
    void onUserSwitchComplete(int) -> onUserSwitchComplete
com.android.systemui.classifier.Stroke -> com.android.systemui.classifier.Stroke:
    float NANOS_TO_SECONDS -> NANOS_TO_SECONDS
    float mDpi -> mDpi
    long mEndTimeNano -> mEndTimeNano
    float mLength -> mLength
    java.util.ArrayList mPoints -> mPoints
    long mStartTimeNano -> mStartTimeNano
    float getDurationSeconds() -> getDurationSeconds
    int getCount() -> getCount
    float getTotalLength() -> getTotalLength
    float getEndPointLength() -> getEndPointLength
    void <init>(long,float) -> <init>
    void addPoint(float,float,long) -> addPoint
    long getDurationNanos() -> getDurationNanos
    java.util.ArrayList getPoints() -> getPoints
com.android.systemui.statusbar.phone.LockIcon$IntrinsicSizeDrawable -> com.android.systemui.statusbar.phone.LockIcon$IntrinsicSizeDrawable:
    int mIntrinsicHeight -> mIntrinsicHeight
    int mIntrinsicWidth -> mIntrinsicWidth
    void <init>(android.graphics.drawable.Drawable,int,int) -> <init>
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$7 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$7:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> <init>
    void run() -> run
android.support.v4.provider.SelfDestructiveThread$ReplyCallback -> android.support.v4.provider.SelfDestructiveThread$ReplyCallback:
    void onReply(java.lang.Object) -> onReply
com.android.systemui.screenshot.GlobalScreenshot$4 -> com.android.systemui.screenshot.GlobalScreenshot$4:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    java.lang.Runnable val$finisher -> val$finisher
    void <init>(com.android.systemui.screenshot.GlobalScreenshot,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.settings.BrightnessController$BrightnessObserver -> com.android.systemui.settings.BrightnessController$BrightnessObserver:
    android.net.Uri BRIGHTNESS_ADJ_URI -> BRIGHTNESS_ADJ_URI
    android.net.Uri BRIGHTNESS_FOR_VR_URI -> BRIGHTNESS_FOR_VR_URI
    android.net.Uri BRIGHTNESS_MODE_URI -> BRIGHTNESS_MODE_URI
    android.net.Uri BRIGHTNESS_URI -> BRIGHTNESS_URI
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    void <init>(com.android.systemui.settings.BrightnessController,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
    void onChange(boolean,android.net.Uri) -> onChange
    void startObserving() -> startObserving
    void stopObserving() -> stopObserving
android.support.v4.view.AsyncLayoutInflater$1 -> android.support.v4.view.AsyncLayoutInflater$1:
    android.support.v4.view.AsyncLayoutInflater this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
    void <init>(android.support.v4.view.AsyncLayoutInflater) -> <init>
com.android.keyguard.EmergencyCarrierArea -> com.android.keyguard.EmergencyCarrierArea:
    com.android.keyguard.CarrierText mCarrierText -> mCarrierText
    com.android.keyguard.EmergencyButton mEmergencyButton -> mEmergencyButton
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
    void setCarrierTextVisible(boolean) -> setCarrierTextVisible
    com.android.keyguard.CarrierText -get0(com.android.keyguard.EmergencyCarrierArea) -> -get0
com.android.systemui.recents.misc.DozeTrigger$1 -> com.android.systemui.recents.misc.DozeTrigger$1:
    com.android.systemui.recents.misc.DozeTrigger this$0 -> this$0
    void <init>(com.android.systemui.recents.misc.DozeTrigger) -> <init>
    void run() -> run
com.android.systemui.plugins.R$integer -> com.android.systemui.plugins.R$integer:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int car_user_switcher_anim_update_ms -> car_user_switcher_anim_update_ms
    int car_user_switcher_timeout_ms -> car_user_switcher_timeout_ms
    int carrier_network_change_anim_time -> carrier_network_change_anim_time
    int config_activityDefaultDur -> config_activityDefaultDur
    int config_chargingFastThreshold -> config_chargingFastThreshold
    int config_chargingSlowlyThreshold -> config_chargingSlowlyThreshold
    int config_maxNotificationIcons -> config_maxNotificationIcons
    int config_notification_snooze_time_default -> config_notification_snooze_time_default
    int config_recents_max_icon_count -> config_recents_max_icon_count
    int config_recents_max_thumbnail_count -> config_recents_max_thumbnail_count
    int config_search_panel_view_vibration_duration -> config_search_panel_view_vibration_duration
    int config_showTemperatureWarning -> config_showTemperatureWarning
    int config_tooltipAnimTime -> config_tooltipAnimTime
    int config_vibration_duration -> config_vibration_duration
    int config_warningTemperature -> config_warningTemperature
    int config_warningTemperatureTolerance -> config_warningTemperatureTolerance
    int days_to_show_color_inversion_tile -> days_to_show_color_inversion_tile
    int days_to_show_hotspot_tile -> days_to_show_hotspot_tile
    int doze_pickup_vibration_threshold -> doze_pickup_vibration_threshold
    int doze_pulse_duration_in -> doze_pulse_duration_in
    int doze_pulse_duration_in_pickup -> doze_pulse_duration_in_pickup
    int doze_pulse_duration_out -> doze_pulse_duration_out
    int doze_pulse_duration_visible -> doze_pulse_duration_visible
    int doze_small_icon_alpha -> doze_small_icon_alpha
    int heads_up_default_snooze_length_ms -> heads_up_default_snooze_length_ms
    int heads_up_notification_decay -> heads_up_notification_decay
    int heads_up_notification_minimum_time -> heads_up_notification_minimum_time
    int keyguard_max_notification_count -> keyguard_max_notification_count
    int kg_selector_gravity -> kg_selector_gravity
    int lb_browse_headers_transition_delay -> lb_browse_headers_transition_delay
    int lb_browse_headers_transition_duration -> lb_browse_headers_transition_duration
    int lb_browse_rows_anim_duration -> lb_browse_rows_anim_duration
    int lb_card_activated_animation_duration -> lb_card_activated_animation_duration
    int lb_card_selected_animation_delay -> lb_card_selected_animation_delay
    int lb_card_selected_animation_duration -> lb_card_selected_animation_duration
    int lb_details_description_body_max_lines -> lb_details_description_body_max_lines
    int lb_details_description_body_min_lines -> lb_details_description_body_min_lines
    int lb_details_description_subtitle_max_lines -> lb_details_description_subtitle_max_lines
    int lb_details_description_title_max_lines -> lb_details_description_title_max_lines
    int lb_error_message_max_lines -> lb_error_message_max_lines
    int lb_guidedactions_item_animation_duration -> lb_guidedactions_item_animation_duration
    int lb_guidedactions_item_description_min_lines -> lb_guidedactions_item_description_min_lines
    int lb_guidedactions_item_title_max_lines -> lb_guidedactions_item_title_max_lines
    int lb_guidedactions_item_title_min_lines -> lb_guidedactions_item_title_min_lines
    int lb_guidedstep_activity_background_fade_duration_ms -> lb_guidedstep_activity_background_fade_duration_ms
    int lb_onboarding_header_description_delay -> lb_onboarding_header_description_delay
    int lb_onboarding_header_title_delay -> lb_onboarding_header_title_delay
    int lb_playback_bg_fade_in_ms -> lb_playback_bg_fade_in_ms
    int lb_playback_bg_fade_out_ms -> lb_playback_bg_fade_out_ms
    int lb_playback_controls_fade_in_ms -> lb_playback_controls_fade_in_ms
    int lb_playback_controls_fade_out_ms -> lb_playback_controls_fade_out_ms
    int lb_playback_controls_show_time_ms -> lb_playback_controls_show_time_ms
    int lb_playback_description_fade_in_ms -> lb_playback_description_fade_in_ms
    int lb_playback_description_fade_out_ms -> lb_playback_description_fade_out_ms
    int lb_playback_rows_fade_delay_ms -> lb_playback_rows_fade_delay_ms
    int lb_playback_rows_fade_in_ms -> lb_playback_rows_fade_in_ms
    int lb_playback_rows_fade_out_ms -> lb_playback_rows_fade_out_ms
    int lb_search_bar_speech_mode_background_alpha -> lb_search_bar_speech_mode_background_alpha
    int lb_search_bar_text_mode_background_alpha -> lb_search_bar_text_mode_background_alpha
    int lb_search_orb_pulse_duration_ms -> lb_search_orb_pulse_duration_ms
    int lb_search_orb_scale_duration_ms -> lb_search_orb_scale_duration_ms
    int long_press_dock_anim_duration -> long_press_dock_anim_duration
    int mr_controller_volume_group_list_animation_duration_ms -> mr_controller_volume_group_list_animation_duration_ms
    int mr_controller_volume_group_list_fade_in_duration_ms -> mr_controller_volume_group_list_fade_in_duration_ms
    int mr_controller_volume_group_list_fade_out_duration_ms -> mr_controller_volume_group_list_fade_out_duration_ms
    int navigation_bar_deadzone_decay -> navigation_bar_deadzone_decay
    int navigation_bar_deadzone_hold -> navigation_bar_deadzone_hold
    int notification_panel_layout_gravity -> notification_panel_layout_gravity
    int one_finger_pop_duration_ms -> one_finger_pop_duration_ms
    int quick_settings_brightness_dialog_long_timeout -> quick_settings_brightness_dialog_long_timeout
    int quick_settings_brightness_dialog_short_timeout -> quick_settings_brightness_dialog_short_timeout
    int quick_settings_max_rows -> quick_settings_max_rows
    int quick_settings_num_columns -> quick_settings_num_columns
    int quick_settings_num_rows -> quick_settings_num_rows
    int quick_settings_num_rows_portrait -> quick_settings_num_rows_portrait
    int quick_settings_user_time_settings_tile_span -> quick_settings_user_time_settings_tile_span
    int recents_alt_tab_key_delay -> recents_alt_tab_key_delay
    int recents_animate_task_stack_scroll_duration -> recents_animate_task_stack_scroll_duration
    int recents_auto_advance_duration -> recents_auto_advance_duration
    int recents_layout_focused_range_max -> recents_layout_focused_range_max
    int recents_layout_focused_range_min -> recents_layout_focused_range_min
    int recents_layout_unfocused_range_max -> recents_layout_unfocused_range_max
    int recents_layout_unfocused_range_min -> recents_layout_unfocused_range_min
    int recents_nav_bar_scrim_enter_duration -> recents_nav_bar_scrim_enter_duration
    int recents_subsequent_auto_advance_duration -> recents_subsequent_auto_advance_duration
    int recents_svelte_level -> recents_svelte_level
    int recents_task_bar_dismiss_delay_seconds -> recents_task_bar_dismiss_delay_seconds
    int recents_task_enter_from_affiliated_app_duration -> recents_task_enter_from_affiliated_app_duration
    int recents_task_enter_from_app_duration -> recents_task_enter_from_app_duration
    int recents_task_exit_to_app_duration -> recents_task_exit_to_app_duration
    int scaled_password_text_size -> scaled_password_text_size
    int slideEdgeEnd -> slideEdgeEnd
    int slideEdgeStart -> slideEdgeStart
    int status_bar_config_maxNotificationIcons -> status_bar_config_maxNotificationIcons
    int status_bar_style -> status_bar_style
    int touch_acceptance_delay -> touch_acceptance_delay
    int volume_expand_animation_duration -> volume_expand_animation_duration
    int zen_mode_alarm_warning_threshold -> zen_mode_alarm_warning_threshold
    int zen_mode_max_conditions -> zen_mode_max_conditions
    void <init>() -> <init>
com.android.systemui.pip.phone.PipMotionHelper -> com.android.systemui.pip.phone.PipMotionHelper:
    android.animation.RectEvaluator RECT_EVALUATOR -> RECT_EVALUATOR
    android.app.IActivityManager mActivityManager -> mActivityManager
    android.animation.AnimationHandler mAnimationHandler -> mAnimationHandler
    android.graphics.Rect mBounds -> mBounds
    android.animation.ValueAnimator mBoundsAnimator -> mBoundsAnimator
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    android.os.Handler mHandler -> mHandler
    com.android.systemui.pip.phone.PipMenuActivityController mMenuController -> mMenuController
    com.android.internal.policy.PipSnapAlgorithm mSnapAlgorithm -> mSnapAlgorithm
    android.graphics.Rect mStableInsets -> mStableInsets
    void dismissPip() -> dismissPip
    android.graphics.Rect getBounds() -> getBounds
    void movePip(android.graphics.Rect) -> movePip
    void expandPip() -> expandPip
    void <init>(android.content.Context,android.app.IActivityManager,com.android.systemui.pip.phone.PipMenuActivityController,com.android.internal.policy.PipSnapAlgorithm,com.android.systemui.statusbar.FlingAnimationUtils) -> <init>
    android.graphics.Rect animateDismiss(android.graphics.Rect,float,float,android.animation.ValueAnimator$AnimatorUpdateListener) -> animateDismiss
    android.graphics.Rect animateToClosestMinimizedState(android.graphics.Rect,android.animation.ValueAnimator$AnimatorUpdateListener) -> animateToClosestMinimizedState
    android.graphics.Rect animateToClosestSnapTarget(android.graphics.Rect,android.animation.ValueAnimator$AnimatorUpdateListener,android.animation.Animator$AnimatorListener) -> animateToClosestSnapTarget
    float animateToExpandedState(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> animateToExpandedState
    void animateToIMEOffset(android.graphics.Rect) -> animateToIMEOffset
    void animateToUnexpandedState(android.graphics.Rect,float,android.graphics.Rect,android.graphics.Rect,boolean,boolean) -> animateToUnexpandedState
    void cancelAnimations() -> cancelAnimations
    android.animation.ValueAnimator createAnimationToBounds(android.graphics.Rect,android.graphics.Rect,int,android.view.animation.Interpolator) -> createAnimationToBounds
    float distanceBetweenRectOffsets(android.graphics.Rect,android.graphics.Rect) -> distanceBetweenRectOffsets
    void dump(java.io.PrintWriter,java.lang.String) -> dump
    void expandPip(boolean) -> expandPip
    android.graphics.Rect flingToSnapTarget(float,float,float,android.graphics.Rect,android.animation.ValueAnimator$AnimatorUpdateListener,android.animation.Animator$AnimatorListener,android.graphics.Point) -> flingToSnapTarget
    android.graphics.Rect getClosestMinimizedBounds(android.graphics.Rect,android.graphics.Rect) -> getClosestMinimizedBounds
    android.graphics.Point getDismissEndPoint(android.graphics.Rect,float,float,boolean) -> getDismissEndPoint
    boolean handleMessage(android.os.Message) -> handleMessage
    boolean isGestureToDismissArea(android.graphics.Rect,float,float,boolean) -> isGestureToDismissArea
    void onConfigurationChanged() -> onConfigurationChanged
    void resizeAndAnimatePipUnchecked(android.graphics.Rect,int) -> resizeAndAnimatePipUnchecked
    void resizePipUnchecked(android.graphics.Rect) -> resizePipUnchecked
    boolean shouldDismissPip() -> shouldDismissPip
    boolean shouldMinimizePip() -> shouldMinimizePip
    void synchronizePinnedStackBounds() -> synchronizePinnedStackBounds
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_pip_phone_PipMotionHelper_5923(boolean) -> lambda$-com_android_systemui_pip_phone_PipMotionHelper_5923
    void lambda$-com_android_systemui_pip_phone_PipMotionHelper_6815() -> lambda$-com_android_systemui_pip_phone_PipMotionHelper_6815
    void lambda$-com_android_systemui_pip_phone_PipMotionHelper_16114(android.animation.ValueAnimator) -> lambda$-com_android_systemui_pip_phone_PipMotionHelper_16114
    android.animation.AnimationHandler -get0(com.android.systemui.pip.phone.PipMotionHelper) -> -get0
android.support.v4.view.ViewPropertyAnimatorCompat$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$2:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    android.support.v4.view.ViewPropertyAnimatorCompat this$0 -> this$0
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.stackdivider.DividerWindowManager -> com.android.systemui.stackdivider.DividerWindowManager:
    android.view.WindowManager$LayoutParams mLp -> mLp
    android.view.View mView -> mView
    android.view.WindowManager mWindowManager -> mWindowManager
    void <init>(android.content.Context) -> <init>
    void add(android.view.View,int,int) -> add
    void remove() -> remove
    void setSlippery(boolean) -> setSlippery
    void setTouchable(boolean) -> setTouchable
com.android.settingslib.animation.DisappearAnimationUtils$1 -> com.android.settingslib.animation.DisappearAnimationUtils$1:
    void <init>() -> <init>
    float getRowTranslationScale(int,int) -> getRowTranslationScale
android.support.v4.graphics.TypefaceCompatApi26Impl -> android.support.v4.graphics.TypefaceCompatApi26Impl:
    java.lang.reflect.Method sAbortCreation -> sAbortCreation
    java.lang.Class sFontFamily -> sFontFamily
    java.lang.reflect.Constructor sFontFamilyCtor -> sFontFamilyCtor
    java.lang.reflect.Method sAddFontFromAssetManager -> sAddFontFromAssetManager
    java.lang.reflect.Method sAddFontFromBuffer -> sAddFontFromBuffer
    java.lang.reflect.Method sFreeze -> sFreeze
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> sCreateFromFamiliesWithDefault
    boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    boolean abortCreation(java.lang.Object) -> abortCreation
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    java.lang.Object newFamily() -> newFamily
    void <clinit>() -> <clinit>
    boolean freeze(java.lang.Object) -> freeze
    boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int) -> addFontFromAssetManager
    void <init>() -> <init>
    boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
com.android.systemui.statusbar.NotificationSnooze$NotificationSnoozeOption -> com.android.systemui.statusbar.NotificationSnooze$NotificationSnoozeOption:
    android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mAction -> mAction
    java.lang.CharSequence mConfirmation -> mConfirmation
    android.service.notification.SnoozeCriterion mCriterion -> mCriterion
    java.lang.CharSequence mDescription -> mDescription
    int mMinutesToSnoozeFor -> mMinutesToSnoozeFor
    com.android.systemui.statusbar.NotificationSnooze this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationSnooze,android.service.notification.SnoozeCriterion,int,java.lang.CharSequence,java.lang.CharSequence,android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) -> <init>
    android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getAccessibilityAction() -> getAccessibilityAction
    java.lang.CharSequence getConfirmation() -> getConfirmation
    java.lang.CharSequence getDescription() -> getDescription
    int getMinutesToSnoozeFor() -> getMinutesToSnoozeFor
    android.service.notification.SnoozeCriterion getSnoozeCriterion() -> getSnoozeCriterion
android.arch.lifecycle.LifecycleRegistry$ObserverWithState -> android.arch.lifecycle.LifecycleRegistry$ObserverWithState:
    android.arch.lifecycle.GenericLifecycleObserver mLifecycleObserver -> mLifecycleObserver
    android.arch.lifecycle.Lifecycle$State mState -> mState
    void dispatchEvent(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> dispatchEvent
android.support.v7.widget.TooltipCompat$ViewCompatImpl -> android.support.v7.widget.TooltipCompat$ViewCompatImpl:
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
com.android.systemui.volume.VolumeDialogImpl$VolumeSeekBarChangeListener -> com.android.systemui.volume.VolumeDialogImpl$VolumeSeekBarChangeListener:
    com.android.systemui.volume.VolumeDialogImpl$VolumeRow mRow -> mRow
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> <init>
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void <init>(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.volume.VolumeDialogImpl$VolumeRow,com.android.systemui.volume.VolumeDialogImpl$VolumeSeekBarChangeListener) -> <init>
com.android.keyguard.KeyguardPatternView$UnlockPatternListener$1 -> com.android.keyguard.KeyguardPatternView$UnlockPatternListener$1:
    com.android.keyguard.KeyguardPatternView$UnlockPatternListener this$1 -> this$1
    int val$userId -> val$userId
    void <init>(com.android.keyguard.KeyguardPatternView$UnlockPatternListener,int) -> <init>
    void onCancelled() -> onCancelled
    void onChecked(boolean,int) -> onChecked
    void onEarlyMatched() -> onEarlyMatched
android.support.v17.leanback.widget.GridLayoutManager$LayoutParams -> android.support.v17.leanback.widget.GridLayoutManager$LayoutParams:
    int mAlignX -> mAlignX
    int mBottomInset -> mBottomInset
    int mAlignY -> mAlignY
    int[] mAlignMultiple -> mAlignMultiple
    android.support.v17.leanback.widget.ItemAlignmentFacet mAlignmentFacet -> mAlignmentFacet
    int mTopInset -> mTopInset
    int mRightInset -> mRightInset
    int mLeftInset -> mLeftInset
    int getOpticalTopInset() -> getOpticalTopInset
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void setAlignY(int) -> setAlignY
    int getOpticalLeftInset() -> getOpticalLeftInset
    android.support.v17.leanback.widget.ItemAlignmentFacet getItemAlignmentFacet() -> getItemAlignmentFacet
    int getOpticalWidth(android.view.View) -> getOpticalWidth
    void <init>(android.support.v17.leanback.widget.GridLayoutManager$LayoutParams) -> <init>
    int getOpticalTop(android.view.View) -> getOpticalTop
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getOpticalHeight(android.view.View) -> getOpticalHeight
    void <init>(int,int) -> <init>
    void calculateItemAlignments(int,android.view.View) -> calculateItemAlignments
    int getOpticalLeft(android.view.View) -> getOpticalLeft
    void setOpticalInsets(int,int,int,int) -> setOpticalInsets
    int[] getAlignMultiple() -> getAlignMultiple
    void setAlignX(int) -> setAlignX
    int getOpticalRightInset() -> getOpticalRightInset
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$LayoutParams) -> <init>
    int getOpticalRight(android.view.View) -> getOpticalRight
    void setItemAlignmentFacet(android.support.v17.leanback.widget.ItemAlignmentFacet) -> setItemAlignmentFacet
    int getAlignX() -> getAlignX
    int getAlignY() -> getAlignY
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$11 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$11:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBar$20 -> com.android.systemui.statusbar.phone.StatusBar$20:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.keyguard.KeyguardPinBasedInputView$3 -> com.android.keyguard.KeyguardPinBasedInputView$3:
    com.android.keyguard.KeyguardPinBasedInputView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPinBasedInputView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.qs.QSDetail$1$3 -> com.android.systemui.qs.QSDetail$1$3:
    com.android.systemui.qs.QSDetail$1 this$1 -> this$1
    boolean val$state -> val$state
    void <init>(com.android.systemui.qs.QSDetail$1,boolean) -> <init>
    void run() -> run
com.android.systemui.recents.model.TaskStack$1 -> com.android.systemui.recents.model.TaskStack$1:
    com.android.systemui.recents.model.TaskStack this$0 -> this$0
    void <init>(com.android.systemui.recents.model.TaskStack) -> <init>
    int compare(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v7.widget.RecyclerView$AdapterDataObserver -> android.support.v7.widget.RecyclerView$AdapterDataObserver:
    void onChanged() -> onChanged
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void onItemRangeChanged(int,int) -> onItemRangeChanged
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void <init>() -> <init>
    void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
com.android.systemui.recents.model.Task$TaskKey -> com.android.systemui.recents.model.Task$TaskKey:
    android.content.Intent baseIntent -> baseIntent
    long firstActiveTime -> firstActiveTime
    int id -> id
    long lastActiveTime -> lastActiveTime
    int mHashCode -> mHashCode
    int stackId -> stackId
    int userId -> userId
    void <init>(int,int,android.content.Intent,int,long,long) -> <init>
    boolean equals(java.lang.Object) -> equals
    android.content.ComponentName getComponent() -> getComponent
    int hashCode() -> hashCode
    void setStackId(int) -> setStackId
    java.lang.String toString() -> toString
    void updateHashCode() -> updateHashCode
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$5 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$5:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    android.content.Intent val$intent -> val$intent
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView,android.content.Intent) -> <init>
    void run() -> run
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    android.widget.ImageView mCloseButton -> mCloseButton
    int[] mTemp -> mTemp
    java.lang.Runnable mReleaseCursorRunnable -> mReleaseCursorRunnable
    android.text.TextWatcher mTextWatcher -> mTextWatcher
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.support.v7.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> mTouchDelegate
    java.lang.Runnable mUpdateDrawableStateRunnable -> mUpdateDrawableStateRunnable
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.widget.ImageView mVoiceButton -> mVoiceButton
    boolean mExpandedInActionView -> mExpandedInActionView
    android.content.Intent mVoiceWebSearchIntent -> mVoiceWebSearchIntent
    android.graphics.Rect mSearchSrcTextViewBounds -> mSearchSrcTextViewBounds
    int mCollapsedImeOptions -> mCollapsedImeOptions
    android.view.View mSubmitArea -> mSubmitArea
    int mSuggestionRowLayout -> mSuggestionRowLayout
    android.view.View$OnClickListener mOnSearchClickListener -> mOnSearchClickListener
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> mOnSuggestionListener
    android.graphics.drawable.Drawable mSearchHintIcon -> mSearchHintIcon
    android.widget.ImageView mGoButton -> mGoButton
    android.support.v7.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> mSearchSrcTextView
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> HIDDEN_METHOD_INVOKER
    android.app.SearchableInfo mSearchable -> mSearchable
    java.lang.CharSequence mDefaultQueryHint -> mDefaultQueryHint
    boolean mClearingFocus -> mClearingFocus
    android.view.View mDropDownAnchor -> mDropDownAnchor
    java.lang.CharSequence mUserQuery -> mUserQuery
    java.lang.CharSequence mOldQueryText -> mOldQueryText
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    int mMaxWidth -> mMaxWidth
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> mOnCloseListener
    android.view.View mSearchPlate -> mSearchPlate
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> mOnEditorActionListener
    android.widget.ImageView mCollapsedIcon -> mCollapsedIcon
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    int mSuggestionCommitIconResId -> mSuggestionCommitIconResId
    android.widget.ImageView mSearchButton -> mSearchButton
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> mSuggestionsAdapter
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> mOnQueryChangeListener
    android.view.View mSearchEditFrame -> mSearchEditFrame
    boolean mIconified -> mIconified
    java.lang.CharSequence mQueryHint -> mQueryHint
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> mSearchSrtTextViewBoundsExpanded
    android.view.View$OnKeyListener mTextKeyListener -> mTextKeyListener
    boolean mVoiceButtonEnabled -> mVoiceButtonEnabled
    int[] mTemp2 -> mTemp2
    android.content.Intent mVoiceAppSearchIntent -> mVoiceAppSearchIntent
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> mOnQueryTextFocusChangeListener
    boolean mSubmitButtonEnabled -> mSubmitButtonEnabled
    android.os.Bundle mAppSearchData -> mAppSearchData
    boolean mIconifiedByDefault -> mIconifiedByDefault
    void onSubmitQuery() -> onSubmitQuery
    void onTextChanged(java.lang.CharSequence) -> onTextChanged
    void updateViewsVisibility(boolean) -> updateViewsVisibility
    void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    void postUpdateFocusedState() -> postUpdateFocusedState
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void updateQueryHint() -> updateQueryHint
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void updateSubmitButton(boolean) -> updateSubmitButton
    void updateFocusedState() -> updateFocusedState
    void updateCloseButton() -> updateCloseButton
    int getPreferredWidth() -> getPreferredWidth
    boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    void setImeOptions(int) -> setImeOptions
    void onMeasure(int,int) -> onMeasure
    void clearFocus() -> clearFocus
    void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    int getPreferredHeight() -> getPreferredHeight
    void onLayout(boolean,int,int,int,int) -> onLayout
    java.lang.CharSequence getQueryHint() -> getQueryHint
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void launchIntent(android.content.Intent) -> launchIntent
    void updateSubmitArea() -> updateSubmitArea
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    void setMaxWidth(int) -> setMaxWidth
    void updateVoiceButton(boolean) -> updateVoiceButton
    void onVoiceClicked() -> onVoiceClicked
    boolean onItemSelected(int) -> onItemSelected
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void onSearchClicked() -> onSearchClicked
    void forceSuggestionQuery() -> forceSuggestionQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    void setQuery(java.lang.CharSequence) -> setQuery
    void onActionViewExpanded() -> onActionViewExpanded
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onCloseClicked() -> onCloseClicked
    void onActionViewCollapsed() -> onActionViewCollapsed
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    void setIconified(boolean) -> setIconified
    boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    void setInputType(int) -> setInputType
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    void <clinit>() -> <clinit>
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    boolean isIconified() -> isIconified
    void dismissSuggestions() -> dismissSuggestions
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    void onTextFocusChanged() -> onTextFocusChanged
android.support.v7.preference.EditTextPreference$SavedState -> android.support.v7.preference.EditTextPreference$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String text -> text
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.volume.VolumeDialogMotion$6 -> com.android.systemui.volume.VolumeDialogMotion$6:
    com.android.systemui.volume.VolumeDialogMotion this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogMotion) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.NotificationContentView -> com.android.systemui.statusbar.NotificationContentView:
    android.view.View mAmbientChild -> mAmbientChild
    com.android.systemui.statusbar.notification.HybridNotificationView mAmbientSingleLineChild -> mAmbientSingleLineChild
    com.android.systemui.statusbar.notification.NotificationViewWrapper mAmbientWrapper -> mAmbientWrapper
    boolean mAnimate -> mAnimate
    int mAnimationStartVisibleType -> mAnimationStartVisibleType
    boolean mBeforeN -> mBeforeN
    com.android.systemui.statusbar.policy.RemoteInputView mCachedExpandedRemoteInput -> mCachedExpandedRemoteInput
    com.android.systemui.statusbar.policy.RemoteInputView mCachedHeadsUpRemoteInput -> mCachedHeadsUpRemoteInput
    int mClipBottomAmount -> mClipBottomAmount
    android.graphics.Rect mClipBounds -> mClipBounds
    boolean mClipToActualHeight -> mClipToActualHeight
    int mClipTopAmount -> mClipTopAmount
    com.android.systemui.statusbar.ExpandableNotificationRow mContainingNotification -> mContainingNotification
    int mContentHeight -> mContentHeight
    int mContentHeightAtAnimationStart -> mContentHeightAtAnimationStart
    android.view.View mContractedChild -> mContractedChild
    com.android.systemui.statusbar.notification.NotificationViewWrapper mContractedWrapper -> mContractedWrapper
    boolean mDark -> mDark
    android.view.ViewTreeObserver$OnPreDrawListener mEnableAnimationPredrawListener -> mEnableAnimationPredrawListener
    android.view.View$OnClickListener mExpandClickListener -> mExpandClickListener
    boolean mExpandable -> mExpandable
    android.view.View mExpandedChild -> mExpandedChild
    com.android.systemui.statusbar.policy.RemoteInputView mExpandedRemoteInput -> mExpandedRemoteInput
    java.lang.Runnable mExpandedVisibleListener -> mExpandedVisibleListener
    com.android.systemui.statusbar.notification.NotificationViewWrapper mExpandedWrapper -> mExpandedWrapper
    boolean mFocusOnVisibilityChange -> mFocusOnVisibilityChange
    boolean mForceSelectNextLayout -> mForceSelectNextLayout
    com.android.systemui.statusbar.phone.NotificationGroupManager mGroupManager -> mGroupManager
    boolean mHeadsUpAnimatingAway -> mHeadsUpAnimatingAway
    android.view.View mHeadsUpChild -> mHeadsUpChild
    int mHeadsUpHeight -> mHeadsUpHeight
    com.android.systemui.statusbar.policy.RemoteInputView mHeadsUpRemoteInput -> mHeadsUpRemoteInput
    com.android.systemui.statusbar.notification.NotificationViewWrapper mHeadsUpWrapper -> mHeadsUpWrapper
    com.android.systemui.statusbar.notification.HybridGroupManager mHybridGroupManager -> mHybridGroupManager
    boolean mIconsVisible -> mIconsVisible
    boolean mIsChildInGroup -> mIsChildInGroup
    boolean mIsContentExpandable -> mIsContentExpandable
    boolean mIsHeadsUp -> mIsHeadsUp
    boolean mIsLowPriority -> mIsLowPriority
    boolean mLegacy -> mLegacy
    int mMinContractedHeight -> mMinContractedHeight
    int mNotificationAmbientHeight -> mNotificationAmbientHeight
    int mNotificationContentMarginEnd -> mNotificationContentMarginEnd
    int mNotificationMaxHeight -> mNotificationMaxHeight
    android.app.PendingIntent mPreviousExpandedRemoteInputIntent -> mPreviousExpandedRemoteInputIntent
    android.app.PendingIntent mPreviousHeadsUpRemoteInputIntent -> mPreviousHeadsUpRemoteInputIntent
    com.android.systemui.statusbar.RemoteInputController mRemoteInputController -> mRemoteInputController
    com.android.systemui.statusbar.notification.HybridNotificationView mSingleLineView -> mSingleLineView
    int mSingleLineWidthIndention -> mSingleLineWidthIndention
    int mSmallHeight -> mSmallHeight
    android.service.notification.StatusBarNotification mStatusBarNotification -> mStatusBarNotification
    int mTransformationStartVisibleType -> mTransformationStartVisibleType
    boolean mUserExpanding -> mUserExpanding
    int mVisibleType -> mVisibleType
    int getMinHeight(boolean) -> getMinHeight
    android.view.View getExpandedChild() -> getExpandedChild
    android.view.View getContractedChild() -> getContractedChild
    void setOnExpandedVisibleListener(java.lang.Runnable) -> setOnExpandedVisibleListener
    android.view.View getHeadsUpChild() -> getHeadsUpChild
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateToVisibleType(int) -> animateToVisibleType
    void applyRemoteInput(com.android.systemui.statusbar.NotificationData$Entry) -> applyRemoteInput
    com.android.systemui.statusbar.policy.RemoteInputView applyRemoteInput(android.view.View,com.android.systemui.statusbar.NotificationData$Entry,boolean,android.app.PendingIntent,com.android.systemui.statusbar.policy.RemoteInputView,com.android.systemui.statusbar.notification.NotificationViewWrapper) -> applyRemoteInput
    float calculateTransformationAmount() -> calculateTransformationAmount
    int calculateVisibleType() -> calculateVisibleType
    void closeRemoteInput() -> closeRemoteInput
    boolean disallowSingleClick(float,float) -> disallowSingleClick
    void fireExpandedVisibleListenerIfVisible() -> fireExpandedVisibleListenerIfVisible
    void focusExpandButtonIfNecessary() -> focusExpandButtonIfNecessary
    void forceUpdateVisibilities() -> forceUpdateVisibilities
    void forceUpdateVisibility(int,android.view.View,com.android.systemui.statusbar.TransformableView) -> forceUpdateVisibility
    android.view.View getAmbientChild() -> getAmbientChild
    com.android.systemui.statusbar.notification.HybridNotificationView getAmbientSingleLineChild() -> getAmbientSingleLineChild
    int getBackgroundColor(int) -> getBackgroundColor
    int getBackgroundColorForExpansionState() -> getBackgroundColorForExpansionState
    android.view.NotificationHeaderView getContractedNotificationHeader() -> getContractedNotificationHeader
    int getMaxHeight() -> getMaxHeight
    int getMinContentHeightHint() -> getMinContentHeightHint
    int getMinHeight() -> getMinHeight
    android.view.NotificationHeaderView getNotificationHeader() -> getNotificationHeader
    android.view.View getShowingAmbientView() -> getShowingAmbientView
    com.android.systemui.statusbar.notification.HybridNotificationView getSingleLineView() -> getSingleLineView
    com.android.systemui.statusbar.TransformableView getTransformableViewForVisibleType(int) -> getTransformableViewForVisibleType
    android.view.View getViewForVisibleType(int) -> getViewForVisibleType
    android.view.NotificationHeaderView getVisibleNotificationHeader() -> getVisibleNotificationHeader
    int getVisibleType() -> getVisibleType
    com.android.systemui.statusbar.notification.NotificationViewWrapper getVisibleWrapper(int) -> getVisibleWrapper
    int getVisualTypeForHeight(float) -> getVisualTypeForHeight
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    boolean isAnimatingVisibleType() -> isAnimatingVisibleType
    boolean isContentExpandable() -> isContentExpandable
    boolean isDimmable() -> isDimmable
    boolean isGroupExpanded() -> isGroupExpanded
    boolean isTransitioningFromTo(int,int) -> isTransitioningFromTo
    boolean isVisibleOrTransitioning(int) -> isVisibleOrTransitioning
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onNotificationUpdated(com.android.systemui.statusbar.NotificationData$Entry) -> onNotificationUpdated
    void onVisibilityAggregated(boolean) -> onVisibilityAggregated
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void reInflateViews() -> reInflateViews
    void requestSelectLayout(boolean) -> requestSelectLayout
    void selectLayout(boolean,boolean) -> selectLayout
    void setAmbientChild(android.view.View) -> setAmbientChild
    void setClipBottomAmount(int) -> setClipBottomAmount
    void setClipToActualHeight(boolean) -> setClipToActualHeight
    void setClipTopAmount(int) -> setClipTopAmount
    void setContainingNotification(com.android.systemui.statusbar.ExpandableNotificationRow) -> setContainingNotification
    void setContentHeight(int) -> setContentHeight
    void setContentHeightAnimating(boolean) -> setContentHeightAnimating
    void setContractedChild(android.view.View) -> setContractedChild
    void setDark(boolean,boolean,long) -> setDark
    void setExpandClickListener(android.view.View$OnClickListener) -> setExpandClickListener
    void setExpandedChild(android.view.View) -> setExpandedChild
    void setFocusOnVisibilityChange() -> setFocusOnVisibilityChange
    void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager) -> setGroupManager
    void setHeadsUp(boolean) -> setHeadsUp
    void setHeadsUpAnimatingAway(boolean) -> setHeadsUpAnimatingAway
    void setHeadsUpChild(android.view.View) -> setHeadsUpChild
    void setHeights(int,int,int,int) -> setHeights
    void setIconsVisible(boolean) -> setIconsVisible
    void setIsChildInGroup(boolean) -> setIsChildInGroup
    void setIsLowPriority(boolean) -> setIsLowPriority
    void setLegacy(boolean) -> setLegacy
    void setRemoteInputController(com.android.systemui.statusbar.RemoteInputController) -> setRemoteInputController
    void setRemoved() -> setRemoved
    void setSingleLineWidthIndention(int) -> setSingleLineWidthIndention
    void setTranslationY(float) -> setTranslationY
    void setUserExpanding(boolean) -> setUserExpanding
    void setVisible(boolean) -> setVisible
    boolean shouldContractedBeFixedSize() -> shouldContractedBeFixedSize
    void transferRemoteInputFocus(int) -> transferRemoteInputFocus
    void updateAllSingleLineViews() -> updateAllSingleLineViews
    void updateAmbientSingleLineView() -> updateAmbientSingleLineView
    void updateBackgroundColor(boolean) -> updateBackgroundColor
    void updateBackgroundTransformation(float) -> updateBackgroundTransformation
    void updateClipping() -> updateClipping
    void updateContentTransformation() -> updateContentTransformation
    boolean updateContractedHeaderWidth() -> updateContractedHeaderWidth
    void updateExpandButtons(boolean) -> updateExpandButtons
    void updateIconVisibilities() -> updateIconVisibilities
    void updateLegacy() -> updateLegacy
    void updateSingleLineView() -> updateSingleLineView
    void updateViewVisibilities(int) -> updateViewVisibilities
    void updateViewVisibility(int,int,android.view.View,com.android.systemui.statusbar.TransformableView) -> updateViewVisibility
    void updateVisibility() -> updateVisibility
    int -get0(com.android.systemui.statusbar.NotificationContentView) -> -get0
    boolean -set0(com.android.systemui.statusbar.NotificationContentView,boolean) -> -set0
    int -set1(com.android.systemui.statusbar.NotificationContentView,int) -> -set1
    com.android.systemui.statusbar.TransformableView -wrap0(com.android.systemui.statusbar.NotificationContentView,int) -> -wrap0
com.android.systemui.statusbar.KeyguardIndicationController$2 -> com.android.systemui.statusbar.KeyguardIndicationController$2:
    com.android.systemui.statusbar.KeyguardIndicationController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardIndicationController) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.statusbar.SignalClusterView$1 -> com.android.systemui.statusbar.SignalClusterView$1:
    com.android.systemui.statusbar.SignalClusterView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.SignalClusterView) -> <init>
    void run() -> run
com.android.systemui.doze.DozeMachine$Part -> com.android.systemui.doze.DozeMachine$Part:
    void dump(java.io.PrintWriter) -> dump
    void transitionTo(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State) -> transitionTo
com.android.systemui.statusbar.policy.HotspotControllerImpl$Receiver -> com.android.systemui.statusbar.policy.HotspotControllerImpl$Receiver:
    boolean mRegistered -> mRegistered
    com.android.systemui.statusbar.policy.HotspotControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.HotspotControllerImpl) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void setListening(boolean) -> setListening
    void <init>(com.android.systemui.statusbar.policy.HotspotControllerImpl,com.android.systemui.statusbar.policy.HotspotControllerImpl$Receiver) -> <init>
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    android.support.v4.view.ViewPropertyAnimatorCompat this$0 -> this$0
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    java.lang.String mWho -> mWho
    boolean mAdded -> mAdded
    boolean mDeferStart -> mDeferStart
    boolean mIsCreated -> mIsCreated
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    boolean mLoadersStarted -> mLoadersStarted
    boolean mRetaining -> mRetaining
    int mIndex -> mIndex
    int mContainerId -> mContainerId
    boolean mRestored -> mRestored
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mHasMenu -> mHasMenu
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    int mFragmentId -> mFragmentId
    boolean mInLayout -> mInLayout
    boolean mUserVisibleHint -> mUserVisibleHint
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerNonConfig mChildNonConfig -> mChildNonConfig
    boolean mFromLayout -> mFromLayout
    boolean mHiddenChanged -> mHiddenChanged
    boolean mPerformedCreateView -> mPerformedCreateView
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.os.Bundle mArguments -> mArguments
    int mState -> mState
    android.view.View mInnerView -> mInnerView
    int mTargetIndex -> mTargetIndex
    android.arch.lifecycle.LifecycleRegistry mLifecycleRegistry -> mLifecycleRegistry
    java.lang.String mTag -> mTag
    boolean mIsNewlyAdded -> mIsNewlyAdded
    boolean mRemoving -> mRemoving
    boolean mCalled -> mCalled
    boolean mRetainInstance -> mRetainInstance
    int mTargetRequestCode -> mTargetRequestCode
    boolean mDetached -> mDetached
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    android.support.v4.app.Fragment$AnimationInfo mAnimationInfo -> mAnimationInfo
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    android.support.v4.app.Fragment mTarget -> mTarget
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    float mPostponedAlpha -> mPostponedAlpha
    boolean mMenuVisible -> mMenuVisible
    boolean mHidden -> mHidden
    void onStop() -> onStop
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    android.animation.Animator getAnimator() -> getAnimator
    android.support.v4.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    android.view.View getAnimatingAway() -> getAnimatingAway
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void onAttach(android.content.Context) -> onAttach
    void performLowMemory() -> performLowMemory
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.content.res.Resources getResources() -> getResources
    int hashCode() -> hashCode
    boolean isHideReplaced() -> isHideReplaced
    android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    void performPause() -> performPause
    android.support.v4.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    java.lang.Object getReturnTransition() -> getReturnTransition
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    java.lang.String toString() -> toString
    void callStartTransitionListener() -> callStartTransitionListener
    void <init>() -> <init>
    boolean isPostponed() -> isPostponed
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    void onStart() -> onStart
    int getNextTransition() -> getNextTransition
    void performResume() -> performResume
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    int getNextTransitionStyle() -> getNextTransitionStyle
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    boolean equals(java.lang.Object) -> equals
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    int getNextAnim() -> getNextAnim
    void performDetach() -> performDetach
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    boolean isInBackStack() -> isInBackStack
    void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void performDestroy() -> performDestroy
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    void -wrap0(android.support.v4.app.Fragment) -> -wrap0
    void setAnimator(android.animation.Animator) -> setAnimator
    void setStateAfterAnimating(int) -> setStateAfterAnimating
    void onCreate(android.os.Bundle) -> onCreate
    void setArguments(android.os.Bundle) -> setArguments
    void onLowMemory() -> onLowMemory
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    android.view.View getView() -> getView
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setAnimatingAway(android.view.View) -> setAnimatingAway
    android.content.Context getContext() -> getContext
    void performStop() -> performStop
    void performStart() -> performStart
    void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onResume() -> onResume
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void performCreate(android.os.Bundle) -> performCreate
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    java.lang.Object getExitTransition() -> getExitTransition
    void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    android.support.v4.app.FragmentManager peekChildFragmentManager() -> peekChildFragmentManager
    void setNextAnim(int) -> setNextAnim
    void setHideReplaced(boolean) -> setHideReplaced
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    java.lang.Object getReenterTransition() -> getReenterTransition
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    void performReallyStop() -> performReallyStop
    void restoreViewState(android.os.Bundle) -> restoreViewState
    java.lang.Object getEnterTransition() -> getEnterTransition
    int getStateAfterAnimating() -> getStateAfterAnimating
    android.os.Bundle getArguments() -> getArguments
    boolean isStateSaved() -> isStateSaved
    void initState() -> initState
    void onDetach() -> onDetach
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void noteStateNotSaved() -> noteStateNotSaved
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    boolean isDetached() -> isDetached
    void onAttach(android.app.Activity) -> onAttach
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setNextTransition(int,int) -> setNextTransition
    void startPostponedEnterTransition() -> startPostponedEnterTransition
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void onHiddenChanged(boolean) -> onHiddenChanged
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void performDestroyView() -> performDestroyView
    void <clinit>() -> <clinit>
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
com.android.systemui.qs.QSSecurityFooter$H -> com.android.systemui.qs.QSSecurityFooter$H:
    com.android.systemui.qs.QSSecurityFooter this$0 -> this$0
    void <init>(com.android.systemui.qs.QSSecurityFooter,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.android.systemui.qs.QSSecurityFooter,android.os.Looper,com.android.systemui.qs.QSSecurityFooter$H) -> <init>
com.android.systemui.recents.views.TaskStackViewScroller -> com.android.systemui.recents.views.TaskStackViewScroller:
    android.util.Property STACK_SCROLL -> STACK_SCROLL
    com.android.systemui.recents.views.TaskStackViewScroller$TaskStackViewScrollerCallbacks mCb -> mCb
    android.content.Context mContext -> mContext
    float mFinalAnimatedScroll -> mFinalAnimatedScroll
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    float mFlingDownScrollP -> mFlingDownScrollP
    int mFlingDownY -> mFlingDownY
    float mLastDeltaP -> mLastDeltaP
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm mLayoutAlgorithm -> mLayoutAlgorithm
    android.animation.ObjectAnimator mScrollAnimator -> mScrollAnimator
    android.widget.OverScroller mScroller -> mScroller
    float mStackScrollP -> mStackScrollP
    float getStackScroll() -> getStackScroll
    void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackViewScroller$TaskStackViewScrollerCallbacks,com.android.systemui.recents.views.TaskStackLayoutAlgorithm) -> <init>
    android.animation.ObjectAnimator animateBoundScroll() -> animateBoundScroll
    void animateScroll(float,java.lang.Runnable) -> animateScroll
    void animateScroll(float,int,java.lang.Runnable) -> animateScroll
    void animateScroll(float,android.animation.ObjectAnimator,java.lang.Runnable) -> animateScroll
    void animateScroll(float,int,android.animation.TimeInterpolator,java.lang.Runnable) -> animateScroll
    boolean boundScroll() -> boundScroll
    boolean computeScroll() -> computeScroll
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    void fling(float,int,int,int,int,int,int) -> fling
    float getBoundedStackScroll(float) -> getBoundedStackScroll
    float getScrollAmountOutOfBounds(float) -> getScrollAmountOutOfBounds
    float getScrollVelocity() -> getScrollVelocity
    boolean isScrollOutOfBounds() -> isScrollOutOfBounds
    void reset() -> reset
    void resetDeltaScroll() -> resetDeltaScroll
    void scrollToClosestTask(int) -> scrollToClosestTask
    float setDeltaStackScroll(float,float) -> setDeltaStackScroll
    void setStackScroll(float) -> setStackScroll
    void setStackScroll(float,com.android.systemui.recents.views.AnimationProps) -> setStackScroll
    boolean setStackScrollToInitialState() -> setStackScrollToInitialState
    void stopBoundScrollAnimation() -> stopBoundScrollAnimation
    void stopScroller() -> stopScroller
    void <clinit>() -> <clinit>
com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm -> com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm:
    int mFlingThreshold -> mFlingThreshold
    int mPadding -> mPadding
    int mPaddingEndTopBottom -> mPaddingEndTopBottom
    int mPaddingLeftRight -> mPaddingLeftRight
    android.graphics.Rect mSystemInsets -> mSystemInsets
    android.graphics.Rect mTaskRect -> mTaskRect
    int mTopOffset -> mTopOffset
    android.graphics.Rect mWindowRect -> mWindowRect
    void <init>(android.content.Context) -> <init>
    void reloadOnConfigurationChange(android.content.Context) -> reloadOnConfigurationChange
    void setSystemInsets(android.graphics.Rect) -> setSystemInsets
    void initialize(android.graphics.Rect) -> initialize
    float getMinScrollP() -> getMinScrollP
    float getMaxScrollP(int) -> getMaxScrollP
    float getInitialScrollP(int,boolean) -> getInitialScrollP
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$VisibilityReport computeStackVisibilityReport(java.util.ArrayList) -> computeStackVisibilityReport
    com.android.systemui.recents.views.TaskViewTransform getTransform(int,float,com.android.systemui.recents.views.TaskViewTransform,int,com.android.systemui.recents.views.TaskStackLayoutAlgorithm) -> getTransform
    float scrollToPercentage(int) -> scrollToPercentage
    int percentageToScroll(float) -> percentageToScroll
    void getBackOfStackTransform(com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm) -> getBackOfStackTransform
    void getFrontOfStackTransform(com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm) -> getFrontOfStackTransform
    android.graphics.Rect getTaskRect() -> getTaskRect
    float getClosestTaskP(float,int,int) -> getClosestTaskP
    void fillStackTransform(com.android.systemui.recents.views.TaskViewTransform,int,int,boolean) -> fillStackTransform
    float getMaxOverscroll() -> getMaxOverscroll
    float getScrollPForTask(int) -> getScrollPForTask
    int getTaskTopFromIndex(int) -> getTaskTopFromIndex
    int getTotalHeightOfTasks(int) -> getTotalHeightOfTasks
android.support.v7.view.CollapsibleActionView -> android.support.v7.view.CollapsibleActionView:
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
com.android.keyguard.KeyguardSimPukView$2 -> com.android.keyguard.KeyguardSimPukView$2:
    com.android.keyguard.KeyguardSimPukView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSimPukView,com.android.keyguard.KeyguardSimPukView,java.lang.String,java.lang.String,int) -> <init>
    void onSimLockChangedResponse(int,int) -> onSimLockChangedResponse
com.android.systemui.statusbar.phone.AutoTileManager$3 -> com.android.systemui.statusbar.phone.AutoTileManager$3:
    com.android.systemui.statusbar.phone.AutoTileManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.AutoTileManager) -> <init>
    void onHotspotChanged(boolean) -> onHotspotChanged
    void lambda$-com_android_systemui_statusbar_phone_AutoTileManager$3_5662() -> lambda$-com_android_systemui_statusbar_phone_AutoTileManager$3_5662
com.android.systemui.tuner.LockscreenFragment$Item -> com.android.systemui.tuner.LockscreenFragment$Item:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    java.lang.Boolean getExpando() -> getExpando
    java.lang.String getLabel() -> getLabel
    void toggleExpando(com.android.systemui.tuner.LockscreenFragment$Adapter) -> toggleExpando
com.android.systemui.screenshot.GlobalScreenshot$2 -> com.android.systemui.screenshot.GlobalScreenshot$2:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    java.lang.Runnable val$finisher -> val$finisher
    boolean val$statusBarVisible -> val$statusBarVisible
    boolean val$navBarVisible -> val$navBarVisible
    void <init>(com.android.systemui.screenshot.GlobalScreenshot,java.lang.Runnable,boolean,boolean) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.pip.phone.PipNotificationController -> com.android.systemui.pip.phone.PipNotificationController:
    java.lang.String NOTIFICATION_TAG -> NOTIFICATION_TAG
    java.lang.String TAG -> TAG
    android.app.IActivityManager mActivityManager -> mActivityManager
    android.app.AppOpsManager$OnOpChangedListener mAppOpsChangedListener -> mAppOpsChangedListener
    android.app.AppOpsManager mAppOpsManager -> mAppOpsManager
    android.content.Context mContext -> mContext
    java.lang.String mDeferredNotificationPackageName -> mDeferredNotificationPackageName
    int mDeferredNotificationUserId -> mDeferredNotificationUserId
    android.util.IconDrawableFactory mIconDrawableFactory -> mIconDrawableFactory
    com.android.systemui.pip.phone.PipMotionHelper mMotionHelper -> mMotionHelper
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    void <init>(android.content.Context,android.app.IActivityManager,com.android.systemui.pip.phone.PipMotionHelper) -> <init>
    android.graphics.Bitmap createBitmap(android.graphics.drawable.Drawable) -> createBitmap
    void onActivityPinned(java.lang.String,int,boolean) -> onActivityPinned
    void onActivityUnpinned(android.content.ComponentName,int) -> onActivityUnpinned
    void onPinnedStackAnimationEnded() -> onPinnedStackAnimationEnded
    void registerAppOpsListener(java.lang.String) -> registerAppOpsListener
    void showNotificationForApp(java.lang.String,int) -> showNotificationForApp
    void unregisterAppOpsListener() -> unregisterAppOpsListener
    boolean updateNotificationForApp(android.app.Notification$Builder,java.lang.String,android.os.UserHandle) -> updateNotificationForApp
    void <clinit>() -> <clinit>
    android.app.IActivityManager -get0(com.android.systemui.pip.phone.PipNotificationController) -> -get0
    android.app.AppOpsManager -get1(com.android.systemui.pip.phone.PipNotificationController) -> -get1
    android.content.Context -get2(com.android.systemui.pip.phone.PipNotificationController) -> -get2
    com.android.systemui.pip.phone.PipMotionHelper -get3(com.android.systemui.pip.phone.PipNotificationController) -> -get3
    void -wrap0(com.android.systemui.pip.phone.PipNotificationController) -> -wrap0
com.android.keyguard.KeyguardPINView -> com.android.keyguard.KeyguardPINView:
    com.android.settingslib.animation.AppearAnimationUtils mAppearAnimationUtils -> mAppearAnimationUtils
    android.view.ViewGroup mContainer -> mContainer
    com.android.settingslib.animation.DisappearAnimationUtils mDisappearAnimationUtils -> mDisappearAnimationUtils
    com.android.settingslib.animation.DisappearAnimationUtils mDisappearAnimationUtilsLocked -> mDisappearAnimationUtilsLocked
    int mDisappearYTranslation -> mDisappearYTranslation
    android.view.View mDivider -> mDivider
    com.android.keyguard.KeyguardUpdateMonitor mKeyguardUpdateMonitor -> mKeyguardUpdateMonitor
    android.view.ViewGroup mRow0 -> mRow0
    android.view.ViewGroup mRow1 -> mRow1
    android.view.ViewGroup mRow2 -> mRow2
    android.view.ViewGroup mRow3 -> mRow3
    android.view.View[][] mViews -> mViews
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void enableClipping(boolean) -> enableClipping
    int getPasswordTextViewId() -> getPasswordTextViewId
    int getWrongPasswordStringId() -> getWrongPasswordStringId
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onFinishInflate() -> onFinishInflate
    void resetState() -> resetState
    void startAppearAnimation() -> startAppearAnimation
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    void -wrap0(com.android.keyguard.KeyguardPINView,boolean) -> -wrap0
com.android.systemui.statusbar.phone.DozeScrimController -> com.android.systemui.statusbar.phone.DozeScrimController:
    boolean DEBUG -> DEBUG
    float mAodFrontScrimOpacity -> mAodFrontScrimOpacity
    android.animation.Animator mBehindAnimator -> mBehindAnimator
    float mBehindTarget -> mBehindTarget
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.phone.DozeParameters mDozeParameters -> mDozeParameters
    boolean mDozing -> mDozing
    boolean mDozingAborted -> mDozingAborted
    boolean mFullyPulsing -> mFullyPulsing
    android.os.Handler mHandler -> mHandler
    android.animation.Animator mInFrontAnimator -> mInFrontAnimator
    float mInFrontTarget -> mInFrontTarget
    com.android.systemui.doze.DozeHost$PulseCallback mPulseCallback -> mPulseCallback
    java.lang.Runnable mPulseIn -> mPulseIn
    java.lang.Runnable mPulseInFinished -> mPulseInFinished
    java.lang.Runnable mPulseOut -> mPulseOut
    java.lang.Runnable mPulseOutExtended -> mPulseOutExtended
    java.lang.Runnable mPulseOutFinished -> mPulseOutFinished
    java.lang.Runnable mPulseOutFinishing -> mPulseOutFinishing
    int mPulseReason -> mPulseReason
    com.android.systemui.statusbar.phone.ScrimController mScrimController -> mScrimController
    java.lang.Runnable mSetDozeInFrontAlphaDelayed -> mSetDozeInFrontAlphaDelayed
    boolean mWakeAndUnlocking -> mWakeAndUnlocking
    void pulse(com.android.systemui.doze.DozeHost$PulseCallback,int) -> pulse
    void abortPulsing() -> abortPulsing
    void extendPulse() -> extendPulse
    void setAodDimmingScrim(float) -> setAodDimmingScrim
    void onScreenTurnedOn() -> onScreenTurnedOn
    void <init>(com.android.systemui.statusbar.phone.ScrimController,android.content.Context) -> <init>
    void pulseOutNow() -> pulseOutNow
    boolean isPulsing() -> isPulsing
    void setDozing(boolean,boolean) -> setDozing
    void abortDoze() -> abortDoze
    void setWakeAndUnlocking() -> setWakeAndUnlocking
    void abortAnimations() -> abortAnimations
    void cancelPulsing() -> cancelPulsing
    android.animation.Animator getCurrentAnimator(boolean) -> getCurrentAnimator
    float getCurrentTarget(boolean) -> getCurrentTarget
    float getDozeAlpha(boolean) -> getDozeAlpha
    void pulseFinished() -> pulseFinished
    void pulseStarted() -> pulseStarted
    void setCurrentAnimator(boolean,android.animation.Animator) -> setCurrentAnimator
    void setCurrentTarget(boolean,float) -> setCurrentTarget
    void setDozeAlpha(boolean,float) -> setDozeAlpha
    void setDozeInFrontAlpha(float) -> setDozeInFrontAlpha
    void setDozeInFrontAlphaDelayed(float,long) -> setDozeInFrontAlphaDelayed
    void startScrimAnimation(boolean,float,long,android.view.animation.Interpolator) -> startScrimAnimation
    void startScrimAnimation(boolean,float,long,android.view.animation.Interpolator,java.lang.Runnable) -> startScrimAnimation
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_phone_DozeScrimController_10358(float) -> lambda$-com_android_systemui_statusbar_phone_DozeScrimController_10358
    boolean -get0() -> -get0
    float -get1(com.android.systemui.statusbar.phone.DozeScrimController) -> -get1
    com.android.systemui.statusbar.phone.DozeParameters -get2(com.android.systemui.statusbar.phone.DozeScrimController) -> -get2
    boolean -get3(com.android.systemui.statusbar.phone.DozeScrimController) -> -get3
    android.os.Handler -get4(com.android.systemui.statusbar.phone.DozeScrimController) -> -get4
    java.lang.Runnable -get5(com.android.systemui.statusbar.phone.DozeScrimController) -> -get5
    java.lang.Runnable -get6(com.android.systemui.statusbar.phone.DozeScrimController) -> -get6
    java.lang.Runnable -get7(com.android.systemui.statusbar.phone.DozeScrimController) -> -get7
    java.lang.Runnable -get8(com.android.systemui.statusbar.phone.DozeScrimController) -> -get8
    int -get9(com.android.systemui.statusbar.phone.DozeScrimController) -> -get9
    boolean -set0(com.android.systemui.statusbar.phone.DozeScrimController,boolean) -> -set0
    void -wrap0(com.android.systemui.statusbar.phone.DozeScrimController) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.DozeScrimController) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.phone.DozeScrimController,boolean,android.animation.Animator) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.phone.DozeScrimController,boolean,float) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.phone.DozeScrimController,float,long) -> -wrap4
    void -wrap5(com.android.systemui.statusbar.phone.DozeScrimController,boolean,float,long,android.view.animation.Interpolator,java.lang.Runnable) -> -wrap5
com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper$1 -> com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper$1:
    com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper this$0 -> this$0
    void <init>(com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper) -> <init>
    boolean customTransformTarget(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState) -> customTransformTarget
    float getTransformationY(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState) -> getTransformationY
    boolean initTransformation(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState) -> initTransformation
    boolean transformFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    boolean transformTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float) -> transformTo
com.android.settingslib.RestrictedLockUtils -> com.android.settingslib.RestrictedLockUtils:
    com.android.settingslib.RestrictedLockUtils$Proxy sProxy -> sProxy
    com.android.settingslib.RestrictedLockUtils$EnforcedAdmin getDeviceOwner(android.content.Context) -> getDeviceOwner
    boolean isCurrentUserOrProfile(android.content.Context,int) -> isCurrentUserOrProfile
    void sendShowAdminSupportDetailsIntent(android.content.Context,com.android.settingslib.RestrictedLockUtils$EnforcedAdmin) -> sendShowAdminSupportDetailsIntent
    android.content.Intent getShowAdminSupportDetailsIntent(android.content.Context,com.android.settingslib.RestrictedLockUtils$EnforcedAdmin) -> getShowAdminSupportDetailsIntent
    com.android.settingslib.RestrictedLockUtils$EnforcedAdmin getProfileOwner(android.content.Context,int) -> getProfileOwner
    com.android.settingslib.RestrictedLockUtils$EnforcedAdmin checkIfRestrictionEnforced(android.content.Context,java.lang.String,int) -> checkIfRestrictionEnforced
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    boolean hasBaseUserRestriction(android.content.Context,java.lang.String,int) -> hasBaseUserRestriction
com.android.systemui.statusbar.phone.StatusBar$15$1 -> com.android.systemui.statusbar.phone.StatusBar$15$1:
    com.android.systemui.statusbar.phone.StatusBar$15 this$1 -> this$1
    void <init>(com.android.systemui.statusbar.phone.StatusBar$15) -> <init>
    void run() -> run
android.support.v4.view.ViewCompat$ViewCompatApi21Impl -> android.support.v4.view.ViewCompat$ViewCompatApi21Impl:
    java.lang.ThreadLocal sThreadLocalRect -> sThreadLocalRect
    float getElevation(android.view.View) -> getElevation
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setElevation(android.view.View,float) -> setElevation
    android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void <init>() -> <init>
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
com.android.systemui.statusbar.phone.StatusBar$42 -> com.android.systemui.statusbar.phone.StatusBar$42:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    android.content.Intent val$intent -> val$intent
    int val$appUid -> val$appUid
    void <init>(com.android.systemui.statusbar.phone.StatusBar,android.content.Intent,int) -> <init>
    boolean onDismiss() -> onDismiss
com.android.systemui.ExpandHelper$ViewScaler -> com.android.systemui.ExpandHelper$ViewScaler:
    com.android.systemui.statusbar.ExpandableView mView -> mView
    com.android.systemui.ExpandHelper this$0 -> this$0
    void <init>(com.android.systemui.ExpandHelper) -> <init>
    float getHeight() -> getHeight
    int getNaturalHeight() -> getNaturalHeight
    void setHeight(float) -> setHeight
    void setView(com.android.systemui.statusbar.ExpandableView) -> setView
com.android.systemui.assist.AssistDisclosure$1 -> com.android.systemui.assist.AssistDisclosure$1:
    com.android.systemui.assist.AssistDisclosure this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistDisclosure) -> <init>
    void run() -> run
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.TextViewCompat:
    android.support.v4.widget.TextViewCompat$TextViewCompatBaseImpl IMPL -> IMPL
    void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    void <clinit>() -> <clinit>
    void <init>() -> <init>
com.android.settingslib.wifi.AccessPointPreference$UserBadgeCache -> com.android.settingslib.wifi.AccessPointPreference$UserBadgeCache:
android.support.v4.graphics.TypefaceCompatApi21Impl -> android.support.v4.graphics.TypefaceCompatApi21Impl:
    void <init>() -> <init>
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
android.support.v7.widget.RecyclerView$ViewCacheExtension -> android.support.v7.widget.RecyclerView$ViewCacheExtension:
    void <init>() -> <init>
    android.view.View getViewForPositionAndType(android.support.v7.widget.RecyclerView$Recycler,int,int) -> getViewForPositionAndType
com.google.protobuf.nano.InvalidProtocolBufferNanoException -> com.google.protobuf.nano.InvalidProtocolBufferNanoException:
    long serialVersionUID -> serialVersionUID
    com.google.protobuf.nano.InvalidProtocolBufferNanoException invalidWireType() -> invalidWireType
    com.google.protobuf.nano.InvalidProtocolBufferNanoException negativeSize() -> negativeSize
    com.google.protobuf.nano.InvalidProtocolBufferNanoException truncatedMessage() -> truncatedMessage
    com.google.protobuf.nano.InvalidProtocolBufferNanoException recursionLimitExceeded() -> recursionLimitExceeded
    void <init>(java.lang.String) -> <init>
    com.google.protobuf.nano.InvalidProtocolBufferNanoException malformedVarint() -> malformedVarint
    com.google.protobuf.nano.InvalidProtocolBufferNanoException invalidTag() -> invalidTag
    com.google.protobuf.nano.InvalidProtocolBufferNanoException invalidEndTag() -> invalidEndTag
com.android.systemui.usb.StorageNotification$4 -> com.android.systemui.usb.StorageNotification$4:
    com.android.systemui.usb.StorageNotification this$0 -> this$0
    void <init>(com.android.systemui.usb.StorageNotification) -> <init>
    void onCreated(int,android.os.Bundle) -> onCreated
    void onStatusChanged(int,int,long) -> onStatusChanged
com.android.systemui.recents.Recents$8 -> com.android.systemui.recents.Recents$8:
    com.android.systemui.recents.Recents this$0 -> this$0
    com.android.systemui.recents.events.component.SetWaitingForTransitionStartEvent val$event -> val$event
    void <init>(com.android.systemui.recents.Recents,com.android.systemui.recents.events.component.SetWaitingForTransitionStartEvent) -> <init>
    void run() -> run
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    java.lang.String mMediaId -> mMediaId
    android.net.Uri mMediaUri -> mMediaUri
    android.net.Uri mIconUri -> mIconUri
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.os.Bundle mExtras -> mExtras
    java.lang.CharSequence mTitle -> mTitle
    android.graphics.Bitmap mIcon -> mIcon
    java.lang.CharSequence mDescription -> mDescription
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    void <init>() -> <init>
    android.support.v4.media.MediaDescriptionCompat build() -> build
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
com.android.systemui.statusbar.NotificationGuts$OnGutsClosedListener -> com.android.systemui.statusbar.NotificationGuts$OnGutsClosedListener:
    void onGutsClosed(com.android.systemui.statusbar.NotificationGuts) -> onGutsClosed
com.android.settingslib.wifi.AccessPoint$Speed -> com.android.settingslib.wifi.AccessPoint$Speed:
android.support.v4.app.Fragment$2 -> android.support.v4.app.Fragment$2:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
    void <init>(android.support.v4.app.Fragment) -> <init>
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
com.android.settingslib.widget.LinkTextView -> com.android.settingslib.widget.LinkTextView:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    void <init>(android.content.Context) -> <init>
android.support.v7.media.SystemMediaRouteProvider$JellybeanMr1Impl -> android.support.v7.media.SystemMediaRouteProvider$JellybeanMr1Impl:
    android.support.v7.media.MediaRouterJellybeanMr1$ActiveScanWorkaround mActiveScanWorkaround -> mActiveScanWorkaround
    android.support.v7.media.MediaRouterJellybeanMr1$IsConnectingWorkaround mIsConnectingWorkaround -> mIsConnectingWorkaround
    void onBuildSystemRouteDescriptor(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord,android.support.v7.media.MediaRouteDescriptor$Builder) -> onBuildSystemRouteDescriptor
    void <init>(android.content.Context,android.support.v7.media.SystemMediaRouteProvider$SyncCallback) -> <init>
    boolean isConnecting(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord) -> isConnecting
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
    java.lang.Object createCallbackObj() -> createCallbackObj
    void updateCallback() -> updateCallback
android.support.v17.leanback.widget.SingleRow -> android.support.v17.leanback.widget.SingleRow:
    android.support.v17.leanback.widget.Grid$Location mTmpLocation -> mTmpLocation
    int getStartIndexForAppend() -> getStartIndexForAppend
    int getStartIndexForPrepend() -> getStartIndexForPrepend
    int findRowMin(boolean,int,int[]) -> findRowMin
    android.support.v17.leanback.widget.Grid$Location getLocation(int) -> getLocation
    boolean appendVisibleItems(int,boolean) -> appendVisibleItems
    int findRowMax(boolean,int,int[]) -> findRowMax
    boolean prependVisibleItems(int,boolean) -> prependVisibleItems
    void <init>() -> <init>
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    android.support.v4.util.CircularIntArray[] getItemPositionsInRows(int,int) -> getItemPositionsInRows
android.support.v7.media.MediaRouterJellybean$UserRouteInfo -> android.support.v7.media.MediaRouterJellybean$UserRouteInfo:
    void setName(java.lang.Object,java.lang.CharSequence) -> setName
    void setVolume(java.lang.Object,int) -> setVolume
    void setVolumeCallback(java.lang.Object,java.lang.Object) -> setVolumeCallback
    void setVolumeMax(java.lang.Object,int) -> setVolumeMax
    void setPlaybackStream(java.lang.Object,int) -> setPlaybackStream
    void setPlaybackType(java.lang.Object,int) -> setPlaybackType
    void setVolumeHandling(java.lang.Object,int) -> setVolumeHandling
    void <init>() -> <init>
android.support.v7.app.TwilightManager -> android.support.v7.app.TwilightManager:
    android.support.v7.app.TwilightManager sInstance -> sInstance
    android.content.Context mContext -> mContext
    android.location.LocationManager mLocationManager -> mLocationManager
    android.support.v7.app.TwilightManager$TwilightState mTwilightState -> mTwilightState
    boolean isNight() -> isNight
    android.location.Location getLastKnownLocation() -> getLastKnownLocation
    void <init>(android.content.Context,android.location.LocationManager) -> <init>
    android.support.v7.app.TwilightManager getInstance(android.content.Context) -> getInstance
    void updateState(android.location.Location) -> updateState
    void setInstance(android.support.v7.app.TwilightManager) -> setInstance
    android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    boolean isStateValid() -> isStateValid
com.android.systemui.recents.RecentsImpl$1 -> com.android.systemui.recents.RecentsImpl$1:
    com.android.systemui.recents.RecentsImpl this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsImpl) -> <init>
    void onAnimationStarted() -> onAnimationStarted
android.support.v4.app.SupportActivity -> android.support.v4.app.SupportActivity:
    android.support.v4.util.SimpleArrayMap mExtraDataMap -> mExtraDataMap
    android.arch.lifecycle.LifecycleRegistry mLifecycleRegistry -> mLifecycleRegistry
    void onCreate(android.os.Bundle) -> onCreate
    void <init>() -> <init>
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.SearchView$1:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void run() -> run
com.android.systemui.pip.phone.PipTouchHandler$3 -> com.android.systemui.pip.phone.PipTouchHandler$3:
    android.graphics.PointF mDelta -> mDelta
    android.graphics.Point mStartPosition -> mStartPosition
    boolean mStartedOnLeft -> mStartedOnLeft
    com.android.systemui.pip.phone.PipTouchHandler this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipTouchHandler) -> <init>
    void onDown(com.android.systemui.pip.phone.PipTouchState) -> onDown
    boolean onMove(com.android.systemui.pip.phone.PipTouchState) -> onMove
    boolean onUp(com.android.systemui.pip.phone.PipTouchState) -> onUp
android.support.v7.view.menu.ListMenuItemView -> android.support.v7.view.menu.ListMenuItemView:
    android.widget.CheckBox mCheckBox -> mCheckBox
    int mTextAppearance -> mTextAppearance
    int mMenuType -> mMenuType
    boolean mForceShowIcon -> mForceShowIcon
    android.view.LayoutInflater mInflater -> mInflater
    android.widget.TextView mTitleView -> mTitleView
    android.support.v7.view.menu.MenuItemImpl mItemData -> mItemData
    boolean mPreserveIconSpacing -> mPreserveIconSpacing
    android.widget.ImageView mSubMenuArrowView -> mSubMenuArrowView
    android.graphics.drawable.Drawable mSubMenuArrow -> mSubMenuArrow
    android.content.Context mTextAppearanceContext -> mTextAppearanceContext
    android.widget.ImageView mIconView -> mIconView
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.widget.TextView mShortcutView -> mShortcutView
    android.widget.RadioButton mRadioButton -> mRadioButton
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void insertRadioButton() -> insertRadioButton
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    void insertIconView() -> insertIconView
    void onMeasure(int,int) -> onMeasure
    void onFinishInflate() -> onFinishInflate
    void setForceShowIcon(boolean) -> setForceShowIcon
    void insertCheckBox() -> insertCheckBox
    void setShortcut(boolean,char) -> setShortcut
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setCheckable(boolean) -> setCheckable
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    android.view.LayoutInflater getInflater() -> getInflater
com.android.systemui.statusbar.notification.NotificationCustomViewWrapper$1 -> com.android.systemui.statusbar.notification.NotificationCustomViewWrapper$1:
    com.android.systemui.statusbar.notification.NotificationCustomViewWrapper this$0 -> this$0
    boolean val$dark -> val$dark
    void <init>(com.android.systemui.statusbar.notification.NotificationCustomViewWrapper,boolean) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.StatusBar$17 -> com.android.systemui.statusbar.phone.StatusBar$17:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onVrStateChanged(boolean) -> onVrStateChanged
android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper -> android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper:
    void <init>() -> <init>
    void apply(android.content.SharedPreferences$Editor) -> apply
com.android.systemui.statusbar.phone.-$Lambda$XqY7sa9kEG02uT1QAmuBm8yeXIU$3 -> com.android.systemui.statusbar.phone.-$Lambda$XqY7sa9kEG02uT1QAmuBm8yeXIU$3:
    boolean -$f0 -> -$f0
    int -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(boolean,int,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.SearchView$4:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.android.systemui.statusbar.phone.ObservableScrollView -> com.android.systemui.statusbar.phone.ObservableScrollView:
    boolean mBlockFlinging -> mBlockFlinging
    boolean mHandlingTouchEvent -> mHandlingTouchEvent
    int mLastOverscrollAmount -> mLastOverscrollAmount
    float mLastX -> mLastX
    float mLastY -> mLastY
    com.android.systemui.statusbar.phone.ObservableScrollView$Listener mListener -> mListener
    boolean mTouchCancelled -> mTouchCancelled
    boolean mTouchEnabled -> mTouchEnabled
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void fling(int) -> fling
    int getMaxScrollY() -> getMaxScrollY
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.android.settingslib.drawer.SettingsDrawerActivity$PackageReceiver -> com.android.settingslib.drawer.SettingsDrawerActivity$PackageReceiver:
    com.android.settingslib.drawer.SettingsDrawerActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(com.android.settingslib.drawer.SettingsDrawerActivity) -> <init>
    void <init>(com.android.settingslib.drawer.SettingsDrawerActivity,com.android.settingslib.drawer.SettingsDrawerActivity$PackageReceiver) -> <init>
android.support.v7.preference.PreferenceGroup$1 -> android.support.v7.preference.PreferenceGroup$1:
    android.support.v7.preference.PreferenceGroup this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.preference.PreferenceGroup) -> <init>
android.support.v7.widget.DropDownListView -> android.support.v7.widget.DropDownListView:
    boolean mDrawsInPressedState -> mDrawsInPressedState
    boolean mHijackFocus -> mHijackFocus
    android.support.v4.view.ViewPropertyAnimatorCompat mClickAnimation -> mClickAnimation
    android.support.v4.widget.ListViewAutoScrollHelper mScrollHelper -> mScrollHelper
    boolean mListSelectionHidden -> mListSelectionHidden
    boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isInTouchMode() -> isInTouchMode
    void setListSelectionHidden(boolean) -> setListSelectionHidden
    void clearPressedItem() -> clearPressedItem
    boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    void <init>(android.content.Context,boolean) -> <init>
    void clickPressedItem(android.view.View,int) -> clickPressedItem
    boolean hasFocus() -> hasFocus
    boolean isFocused() -> isFocused
    void setPressedItem(android.view.View,int,float,float) -> setPressedItem
com.android.systemui.doze.DozeMachine$State -> com.android.systemui.doze.DozeMachine$State:
    com.android.systemui.doze.DozeMachine$State[] $VALUES -> $VALUES
    int[] -com-android-systemui-doze-DozeMachine$StateSwitchesValues -> -com-android-systemui-doze-DozeMachine$StateSwitchesValues
    com.android.systemui.doze.DozeMachine$State DOZE -> DOZE
    com.android.systemui.doze.DozeMachine$State DOZE_AOD -> DOZE_AOD
    com.android.systemui.doze.DozeMachine$State DOZE_AOD_PAUSED -> DOZE_AOD_PAUSED
    com.android.systemui.doze.DozeMachine$State DOZE_AOD_PAUSING -> DOZE_AOD_PAUSING
    com.android.systemui.doze.DozeMachine$State DOZE_PULSE_DONE -> DOZE_PULSE_DONE
    com.android.systemui.doze.DozeMachine$State DOZE_PULSING -> DOZE_PULSING
    com.android.systemui.doze.DozeMachine$State DOZE_REQUEST_PULSE -> DOZE_REQUEST_PULSE
    com.android.systemui.doze.DozeMachine$State FINISH -> FINISH
    com.android.systemui.doze.DozeMachine$State INITIALIZED -> INITIALIZED
    com.android.systemui.doze.DozeMachine$State UNINITIALIZED -> UNINITIALIZED
    void <init>(java.lang.String,int) -> <init>
    boolean canPulse() -> canPulse
    int screenState() -> screenState
    boolean staysAwake() -> staysAwake
    com.android.systemui.doze.DozeMachine$State valueOf(java.lang.String) -> valueOf
    com.android.systemui.doze.DozeMachine$State[] values() -> values
    void <clinit>() -> <clinit>
    int[] -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues() -> -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues
com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA$1 -> com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA$1:
    byte $id -> $id
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA$1 $INST$0 -> $INST$0
    com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA$1 $INST$1 -> $INST$1
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    boolean $m$0(java.lang.Object) -> $m$0
    boolean $m$1(java.lang.Object) -> $m$1
    boolean test(java.lang.Object) -> test
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$4 -> com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$4:
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper this$0 -> this$0
    java.lang.Runnable val$onFinishedListener -> val$onFinishedListener
    void <init>(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup -> android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup:
    int getSpanSize(int) -> getSpanSize
    void <init>() -> <init>
    int getSpanIndex(int,int) -> getSpanIndex
android.support.v17.leanback.widget.GridLayoutManager$1 -> android.support.v17.leanback.widget.GridLayoutManager$1:
    android.support.v17.leanback.widget.GridLayoutManager this$0 -> this$0
    void run() -> run
    void <init>(android.support.v17.leanback.widget.GridLayoutManager) -> <init>
android.support.v7.widget.ViewInfoStore$InfoRecord -> android.support.v7.widget.ViewInfoStore$InfoRecord:
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> preInfo
    android.support.v4.util.Pools$Pool sPool -> sPool
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> postInfo
    int flags -> flags
    void <clinit>() -> <clinit>
    void recycle(android.support.v7.widget.ViewInfoStore$InfoRecord) -> recycle
    android.support.v7.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    void <init>() -> <init>
    void drainCache() -> drainCache
com.android.settingslib.R$drawable -> com.android.settingslib.R$drawable:
    int ic_info_outline_24dp -> ic_info_outline_24dp
    void <init>() -> <init>
com.android.systemui.plugins.NotificationListenerController$NotificationProvider -> com.android.systemui.plugins.NotificationListenerController$NotificationProvider:
    int VERSION -> VERSION
    android.service.notification.NotificationListenerService$RankingMap getRankingMap() -> getRankingMap
    void addNotification(android.service.notification.StatusBarNotification) -> addNotification
    android.service.notification.StatusBarNotification[] getActiveNotifications() -> getActiveNotifications
    void updateRanking() -> updateRanking
    void removeNotification(android.service.notification.StatusBarNotification) -> removeNotification
com.android.systemui.tuner.ClockPreference -> com.android.systemui.tuner.ClockPreference:
    android.util.ArraySet mBlacklist -> mBlacklist
    java.lang.String mClock -> mClock
    boolean mClockEnabled -> mClockEnabled
    boolean mHasSeconds -> mHasSeconds
    boolean mHasSetValue -> mHasSetValue
    boolean mReceivedClock -> mReceivedClock
    boolean mReceivedSeconds -> mReceivedSeconds
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    boolean persistString(java.lang.String) -> persistString
android.support.v7.widget.DefaultItemAnimator$6 -> android.support.v7.widget.DefaultItemAnimator$6:
    int val$deltaY -> val$deltaY
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    int val$deltaX -> val$deltaX
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.view.View val$view -> val$view
    android.view.ViewPropertyAnimator val$animation -> val$animation
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.tiles.ColorInversionTile$1 -> com.android.systemui.qs.tiles.ColorInversionTile$1:
    com.android.systemui.qs.tiles.ColorInversionTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.ColorInversionTile,android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void handleValueChanged(int,boolean) -> handleValueChanged
com.android.systemui.statusbar.phone.NavigationBarTransitions$1 -> com.android.systemui.statusbar.phone.NavigationBarTransitions$1:
    com.android.systemui.statusbar.phone.NavigationBarTransitions this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NavigationBarTransitions) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.protobuf.nano.UnknownFieldData -> com.google.protobuf.nano.UnknownFieldData:
    byte[] bytes -> bytes
    int tag -> tag
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int hashCode() -> hashCode
    int computeSerializedSize() -> computeSerializedSize
    boolean equals(java.lang.Object) -> equals
com.android.systemui.tuner.TunerFragment$TunerWarningFragment$1 -> com.android.systemui.tuner.TunerFragment$TunerWarningFragment$1:
    com.android.systemui.tuner.TunerFragment$TunerWarningFragment this$1 -> this$1
    void <init>(com.android.systemui.tuner.TunerFragment$TunerWarningFragment) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.recents.views.RecentsTransitionHelper$4$1 -> com.android.systemui.recents.views.RecentsTransitionHelper$4$1:
    com.android.systemui.recents.views.RecentsTransitionHelper$4 this$1 -> this$1
    android.app.ActivityOptions$OnAnimationStartedListener val$listener -> val$listener
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper$4,android.app.ActivityOptions$OnAnimationStartedListener) -> <init>
    void run() -> run
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.ResultReceiver mResultReceiver -> mResultReceiver
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
android.support.v7.widget.RecyclerView$LayoutParams -> android.support.v7.widget.RecyclerView$LayoutParams:
    boolean mInsetsDirty -> mInsetsDirty
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> mViewHolder
    android.graphics.Rect mDecorInsets -> mDecorInsets
    boolean mPendingInvalidate -> mPendingInvalidate
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    int getViewAdapterPosition() -> getViewAdapterPosition
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    int getViewLayoutPosition() -> getViewLayoutPosition
    void <init>(android.support.v7.widget.RecyclerView$LayoutParams) -> <init>
    boolean isViewInvalid() -> isViewInvalid
    boolean isItemChanged() -> isItemChanged
    boolean isItemRemoved() -> isItemRemoved
    boolean viewNeedsUpdate() -> viewNeedsUpdate
com.android.systemui.statusbar.policy.UserInfoControllerImpl$UserInfoQueryResult -> com.android.systemui.statusbar.policy.UserInfoControllerImpl$UserInfoQueryResult:
    android.graphics.drawable.Drawable mAvatar -> mAvatar
    java.lang.String mName -> mName
    java.lang.String mUserAccount -> mUserAccount
    void <init>(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> <init>
    android.graphics.drawable.Drawable getAvatar() -> getAvatar
    java.lang.String getName() -> getName
    java.lang.String getUserAccount() -> getUserAccount
com.android.systemui.statusbar.policy.NetworkController$EmergencyListener -> com.android.systemui.statusbar.policy.NetworkController$EmergencyListener:
    void setEmergencyCallsOnly(boolean) -> setEmergencyCallsOnly
com.android.systemui.statusbar.policy.ExtensionControllerImpl$Item -> com.android.systemui.statusbar.policy.ExtensionControllerImpl$Item:
    int sortOrder() -> sortOrder
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.widget.ListPopupWindow$PopupDataSetObserver:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
com.android.systemui.keyguard.-$Lambda$-f994CCMz_70U6Oz06JHEMP788Q -> com.android.systemui.keyguard.-$Lambda$-f994CCMz_70U6Oz06JHEMP788Q:
    byte $id -> $id
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,int,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
android.support.v7.widget.AppCompatSeekBarHelper -> android.support.v7.widget.AppCompatSeekBarHelper:
    boolean mHasTickMarkTint -> mHasTickMarkTint
    android.content.res.ColorStateList mTickMarkTintList -> mTickMarkTintList
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> mTickMarkTintMode
    boolean mHasTickMarkTintMode -> mHasTickMarkTintMode
    android.graphics.drawable.Drawable mTickMark -> mTickMark
    android.widget.SeekBar mView -> mView
    void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    void <init>(android.widget.SeekBar) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void applyTickMarkTint() -> applyTickMarkTint
com.android.systemui.statusbar.phone.TrustDrawable$StateUpdateAnimatorListener -> com.android.systemui.statusbar.phone.TrustDrawable$StateUpdateAnimatorListener:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.phone.TrustDrawable this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.TrustDrawable) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void <init>(com.android.systemui.statusbar.phone.TrustDrawable,com.android.systemui.statusbar.phone.TrustDrawable$StateUpdateAnimatorListener) -> <init>
com.android.systemui.qs.customize.-$Lambda$Vlv_9xM4sEaSy2FPnq2tqGygQjY -> com.android.systemui.qs.customize.-$Lambda$Vlv_9xM4sEaSy2FPnq2tqGygQjY:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void run() -> run
com.android.systemui.statusbar.-$Lambda$Riuh3zYDe2TsfH5PQkGwv6ei6pQ -> com.android.systemui.statusbar.-$Lambda$Riuh3zYDe2TsfH5PQkGwv6ei6pQ:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(boolean) -> $m$0
    void onActiveChanged(boolean) -> onActiveChanged
com.android.keyguard.KeyguardSimPinView$CheckSimPin$1 -> com.android.keyguard.KeyguardSimPinView$CheckSimPin$1:
    com.android.keyguard.KeyguardSimPinView$CheckSimPin this$1 -> this$1
    int[] val$result -> val$result
    void <init>(com.android.keyguard.KeyguardSimPinView$CheckSimPin,int[]) -> <init>
    void run() -> run
com.android.systemui.recents.views.RecentsTransitionHelper$2 -> com.android.systemui.recents.views.RecentsTransitionHelper$2:
    boolean mHandled -> mHandled
    com.android.systemui.recents.views.RecentsTransitionHelper this$0 -> this$0
    com.android.systemui.recents.model.Task val$task -> val$task
    com.android.systemui.recents.views.TaskStackView val$stackView -> val$stackView
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskStackView) -> <init>
    void onAnimationStarted() -> onAnimationStarted
android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1$1 -> android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1$1:
    android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1 this$3 -> this$3
    int val$volume -> val$volume
    void <init>(android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord$1,int) -> <init>
    void run() -> run
android.support.v7.widget.RecyclerView$LayoutManager -> android.support.v7.widget.RecyclerView$LayoutManager:
    boolean mItemPrefetchEnabled -> mItemPrefetchEnabled
    boolean mAutoMeasure -> mAutoMeasure
    int mHeight -> mHeight
    android.support.v7.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback -> mHorizontalBoundCheckCallback
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    boolean mPrefetchMaxObservedInInitialPrefetch -> mPrefetchMaxObservedInInitialPrefetch
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    android.support.v7.widget.ViewBoundsCheck mVerticalBoundCheck -> mVerticalBoundCheck
    int mWidthMode -> mWidthMode
    boolean mMeasurementCacheEnabled -> mMeasurementCacheEnabled
    int mHeightMode -> mHeightMode
    int mWidth -> mWidth
    android.support.v7.widget.ChildHelper mChildHelper -> mChildHelper
    android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller -> mSmoothScroller
    android.support.v7.widget.ViewBoundsCheck mHorizontalBoundCheck -> mHorizontalBoundCheck
    int mPrefetchMaxCountObserved -> mPrefetchMaxCountObserved
    boolean mRequestedSimpleAnimations -> mRequestedSimpleAnimations
    android.support.v7.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback -> mVerticalBoundCheckCallback
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    int getPaddingLeft() -> getPaddingLeft
    void addViewInt(android.view.View,int,boolean) -> addViewInt
    void removeView(android.view.View) -> removeView
    void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    boolean shouldMeasureTwice() -> shouldMeasureTwice
    void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    void stopSmoothScroller() -> stopSmoothScroller
    int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    int getChildCount() -> getChildCount
    boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> isLayoutHierarchical
    int getHeight() -> getHeight
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    int getDecoratedRight(android.view.View) -> getDecoratedRight
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> getChildRectangleOnScreenScrollAmount
    int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    boolean hasFocus() -> hasFocus
    int getHeightMode() -> getHeightMode
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView) -> onDetachedFromWindow
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    void addView(android.view.View) -> addView
    void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams) -> attachView
    void <init>() -> <init>
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    int chooseSize(int,int,int) -> chooseSize
    int getMinimumHeight() -> getMinimumHeight
    void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    android.view.View getChildAt(int) -> getChildAt
    void addDisappearingView(android.view.View) -> addDisappearingView
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    void removeViewAt(int) -> removeViewAt
    android.view.View findViewByPosition(int) -> findViewByPosition
    void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    int getPosition(android.view.View) -> getPosition
    int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    int getLayoutDirection() -> getLayoutDirection
    void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean isSmoothScrolling() -> isSmoothScrolling
    void setRecyclerView(android.support.v7.widget.RecyclerView) -> setRecyclerView
    int getWidthMode() -> getWidthMode
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int getWidth() -> getWidth
    boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter) -> onAdapterChanged
    void setMeasuredDimension(int,int) -> setMeasuredDimension
    void attachView(android.view.View,int) -> attachView
    void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    void addDisappearingView(android.view.View,int) -> addDisappearingView
    int getPaddingTop() -> getPaddingTop
    void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> onMeasure
    void startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    int getItemCount() -> getItemCount
    int getBaseline() -> getBaseline
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    void onAttachedToWindow(android.support.v7.widget.RecyclerView) -> onAttachedToWindow
    void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView) -> setExactMeasureSpecsFrom
    void detachViewAt(int) -> detachViewAt
    void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    void -wrap0(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.RecyclerView$SmoothScroller) -> -wrap0
    boolean canScrollVertically() -> canScrollVertically
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView) -> dispatchAttachedToWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scrollToPosition(int) -> scrollToPosition
    void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleView
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    boolean canScrollHorizontally() -> canScrollHorizontally
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> onItemsUpdated
    int getDecoratedTop(android.view.View) -> getDecoratedTop
    void detachViewInternal(int,android.view.View) -> detachViewInternal
    boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    void requestLayout() -> requestLayout
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    void detachAndScrapView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapView
    void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void addView(android.view.View,int) -> addView
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    void setMeasureSpecs(int,int) -> setMeasureSpecs
    int getPaddingBottom() -> getPaddingBottom
    int getPaddingRight() -> getPaddingRight
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    android.view.View getFocusedChild() -> getFocusedChild
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    boolean shouldReMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    int getMinimumWidth() -> getMinimumWidth
    int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    void moveView(int,int) -> moveView
    void onScrollStateChanged(int) -> onScrollStateChanged
    boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
android.support.v7.text.AllCapsTransformationMethod -> android.support.v7.text.AllCapsTransformationMethod:
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void <init>(android.content.Context) -> <init>
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
com.android.systemui.recents.views.grid.GridTaskView -> com.android.systemui.recents.views.grid.GridTaskView:
    int mHeaderHeight -> mHeaderHeight
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    com.android.systemui.recents.views.AnimateableViewBounds createOutlineProvider() -> createOutlineProvider
    void onConfigurationChanged() -> onConfigurationChanged
    void onFinishInflate() -> onFinishInflate
com.android.systemui.recents.views.TaskStackViewScroller$1 -> com.android.systemui.recents.views.TaskStackViewScroller$1:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.recents.views.TaskStackViewScroller) -> get
    void setValue(com.android.systemui.recents.views.TaskStackViewScroller,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    void <init>() -> <init>
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$NotificationSwipeHelper -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$NotificationSwipeHelper:
    java.lang.Runnable mFalsingCheck -> mFalsingCheck
    android.os.Handler mHandler -> mHandler
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,int,com.android.systemui.SwipeHelper$Callback,android.content.Context) -> <init>
    void closeControlsIfOutsideTouch(android.view.MotionEvent) -> closeControlsIfOutsideTouch
    void dismiss(android.view.View,float) -> dismiss
    void dismissChild(android.view.View,float,boolean) -> dismissChild
    float getMinDismissVelocity() -> getMinDismissVelocity
    float getTranslation(android.view.View) -> getTranslation
    android.animation.Animator getViewTranslationAnimator(android.view.View,float,android.animation.ValueAnimator$AnimatorUpdateListener) -> getViewTranslationAnimator
    void handleMenuCoveredOrDismissed() -> handleMenuCoveredOrDismissed
    boolean handleUpEvent(android.view.MotionEvent,android.view.View,float,float) -> handleUpEvent
    boolean isFalseGesture(android.view.MotionEvent) -> isFalseGesture
    void onDownUpdate(android.view.View,android.view.MotionEvent) -> onDownUpdate
    void onMenuShown(android.view.View) -> onMenuShown
    void onMoveUpdate(android.view.View,android.view.MotionEvent,float,float) -> onMoveUpdate
    void resetExposedMenuView(boolean,boolean) -> resetExposedMenuView
    void setTranslation(android.view.View,float) -> setTranslation
    void snap(android.view.View,float,float) -> snap
    void snapChild(android.view.View,float,float) -> snapChild
    void snooze(android.service.notification.StatusBarNotification,com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption) -> snooze
    boolean swipedFarEnough(float,float) -> swipedFarEnough
    boolean swipedFastEnough(float,float) -> swipedFastEnough
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.MediaDescriptionCompatApi23:
    void <init>() -> <init>
    android.net.Uri getMediaUri(java.lang.Object) -> getMediaUri
android.support.v7.util.DiffUtil$Range -> android.support.v7.util.DiffUtil$Range:
    int newListStart -> newListStart
    int oldListStart -> oldListStart
    int newListEnd -> newListEnd
    int oldListEnd -> oldListEnd
    void <init>() -> <init>
    void <init>(int,int,int,int) -> <init>
com.android.settingslib.net.DataUsageController$Callback -> com.android.settingslib.net.DataUsageController$Callback:
    void onMobileDataEnabled(boolean) -> onMobileDataEnabled
com.android.keyguard.KeyguardSecurityModel -> com.android.keyguard.KeyguardSecurityModel:
    android.content.Context mContext -> mContext
    boolean mIsPukScreenAvailable -> mIsPukScreenAvailable
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    void <init>(android.content.Context) -> <init>
    com.android.keyguard.KeyguardSecurityModel$SecurityMode getSecurityMode(int) -> getSecurityMode
    void setLockPatternUtils(com.android.internal.widget.LockPatternUtils) -> setLockPatternUtils
com.android.systemui.keyboard.BluetoothDialog -> com.android.systemui.keyboard.BluetoothDialog:
    void <init>(android.content.Context) -> <init>
com.android.systemui.recents.model.RecentsTaskLoadPlan$Options -> com.android.systemui.recents.model.RecentsTaskLoadPlan$Options:
    int runningTaskId -> runningTaskId
    int numVisibleTasks -> numVisibleTasks
    int numVisibleTaskThumbnails -> numVisibleTaskThumbnails
    boolean onlyLoadForCache -> onlyLoadForCache
    boolean onlyLoadPausedActivities -> onlyLoadPausedActivities
    boolean loadThumbnails -> loadThumbnails
    boolean loadIcons -> loadIcons
    void <init>() -> <init>
com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$DismissWithActionRequest -> com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$DismissWithActionRequest:
    boolean afterKeyguardGone -> afterKeyguardGone
    java.lang.Runnable cancelAction -> cancelAction
    com.android.keyguard.KeyguardHostView$OnDismissAction dismissAction -> dismissAction
    void <init>(com.android.keyguard.KeyguardHostView$OnDismissAction,java.lang.Runnable,boolean) -> <init>
com.android.systemui.statusbar.NotificationBackgroundView -> com.android.systemui.statusbar.NotificationBackgroundView:
    int mActualHeight -> mActualHeight
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mClipBottomAmount -> mClipBottomAmount
    int mClipTopAmount -> mClipTopAmount
    int mTintColor -> mTintColor
    void setCustomBackground(int) -> setCustomBackground
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    void setState(int[]) -> setState
    int getActualHeight() -> getActualHeight
    void setDrawableAlpha(int) -> setDrawableAlpha
    void setRippleColor(int) -> setRippleColor
    void setTint(int) -> setTint
    void setActualHeight(int) -> setActualHeight
    void setClipTopAmount(int) -> setClipTopAmount
    void setClipBottomAmount(int) -> setClipBottomAmount
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void draw(android.graphics.Canvas,android.graphics.drawable.Drawable) -> draw
    void drawableStateChanged() -> drawableStateChanged
    void drawableStateChanged(android.graphics.drawable.Drawable) -> drawableStateChanged
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onDraw(android.graphics.Canvas) -> onDraw
    void setCustomBackground(android.graphics.drawable.Drawable) -> setCustomBackground
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
android.support.v4.widget.TintableCompoundButton -> android.support.v4.widget.TintableCompoundButton:
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
android.support.v7.widget.FastScroller$DragState -> android.support.v7.widget.FastScroller$DragState:
com.android.systemui.recents.events.ui.ShowApplicationInfoEvent -> com.android.systemui.recents.events.ui.ShowApplicationInfoEvent:
    com.android.systemui.recents.model.Task task -> task
    void <init>(com.android.systemui.recents.model.Task) -> <init>
com.android.systemui.statusbar.phone.-$Lambda$fPGyyPd8wf6pcilQl9aoidXhyLM -> com.android.systemui.statusbar.phone.-$Lambda$fPGyyPd8wf6pcilQl9aoidXhyLM:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(float) -> $m$0
    void $m$1(float) -> $m$1
    void applyDarkIntensity(float) -> applyDarkIntensity
com.android.systemui.statusbar.notification.PropertyAnimator$1 -> com.android.systemui.statusbar.notification.PropertyAnimator$1:
    android.view.View val$view -> val$view
    int val$animatorTag -> val$animatorTag
    int val$animationStartTag -> val$animationStartTag
    int val$animationEndTag -> val$animationEndTag
    void <init>(android.view.View,int,int,int) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    java.lang.String mTag -> mTag
    void flushBuilder() -> flushBuilder
    void <init>(java.lang.String) -> <init>
    void flush() -> flush
    void write(char[],int,int) -> write
    void close() -> close
com.android.systemui.tuner.PluginFragment$1 -> com.android.systemui.tuner.PluginFragment$1:
    com.android.systemui.tuner.PluginFragment this$0 -> this$0
    void <init>(com.android.systemui.tuner.PluginFragment) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.settingslib.bluetooth.A2dpProfile -> com.android.settingslib.bluetooth.A2dpProfile:
    android.os.ParcelUuid[] SINK_UUIDS -> SINK_UUIDS
    android.content.Context mContext -> mContext
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    com.android.settingslib.bluetooth.BluetoothA2dpWrapper$Factory mWrapperFactory -> mWrapperFactory
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    android.bluetooth.BluetoothA2dp mService -> mService
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    com.android.settingslib.bluetooth.BluetoothA2dpWrapper mServiceWrapper -> mServiceWrapper
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get3(com.android.settingslib.bluetooth.A2dpProfile) -> -get3
    android.bluetooth.BluetoothA2dp -set1(com.android.settingslib.bluetooth.A2dpProfile,android.bluetooth.BluetoothA2dp) -> -set1
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> <init>
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.A2dpProfile) -> -get1
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.settingslib.bluetooth.A2dpProfile) -> -get2
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    com.android.settingslib.bluetooth.BluetoothA2dpWrapper -set2(com.android.settingslib.bluetooth.A2dpProfile,com.android.settingslib.bluetooth.BluetoothA2dpWrapper) -> -set2
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    java.util.List getConnectedDevices() -> getConnectedDevices
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    android.bluetooth.BluetoothA2dp -get4(com.android.settingslib.bluetooth.A2dpProfile) -> -get4
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void setWrapperFactory(com.android.settingslib.bluetooth.BluetoothA2dpWrapper$Factory) -> setWrapperFactory
    void finalize() -> finalize
    boolean -set0(com.android.settingslib.bluetooth.A2dpProfile,boolean) -> -set0
com.android.systemui.-$Lambda$k4cWn4_Fe5vy8D3vFgtnjozpHDs$1 -> com.android.systemui.-$Lambda$k4cWn4_Fe5vy8D3vFgtnjozpHDs$1:
    boolean -$f0 -> -$f0
    void <init>(boolean) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
android.support.v7.widget.RecyclerView$SavedState -> android.support.v7.widget.RecyclerView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Parcelable mLayoutState -> mLayoutState
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void copyFrom(android.support.v7.widget.RecyclerView$SavedState) -> copyFrom
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.statusbar.notification.NotificationInflater -> com.android.systemui.statusbar.notification.NotificationInflater:
    com.android.systemui.statusbar.notification.NotificationInflater$InflationExecutor EXECUTOR -> EXECUTOR
    int FLAG_REINFLATE_ALL -> FLAG_REINFLATE_ALL
    int FLAG_REINFLATE_EXPANDED_VIEW -> FLAG_REINFLATE_EXPANDED_VIEW
    com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback mCallback -> mCallback
    boolean mIsChildInGroup -> mIsChildInGroup
    boolean mIsLowPriority -> mIsLowPriority
    boolean mRedactAmbient -> mRedactAmbient
    android.widget.RemoteViews$OnClickHandler mRemoteViewClickHandler -> mRemoteViewClickHandler
    com.android.systemui.statusbar.ExpandableNotificationRow mRow -> mRow
    boolean mUsesIncreasedHeadsUpHeight -> mUsesIncreasedHeadsUpHeight
    boolean mUsesIncreasedHeight -> mUsesIncreasedHeight
    void inflateNotificationViews() -> inflateNotificationViews
    void setIsChildInGroup(boolean) -> setIsChildInGroup
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void setIsLowPriority(boolean) -> setIsLowPriority
    void setUsesIncreasedHeight(boolean) -> setUsesIncreasedHeight
    void setUsesIncreasedHeadsUpHeight(boolean) -> setUsesIncreasedHeadsUpHeight
    void setRemoteViewClickHandler(android.widget.RemoteViews$OnClickHandler) -> setRemoteViewClickHandler
    void setInflationCallback(com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback) -> setInflationCallback
    void setRedactAmbient(boolean) -> setRedactAmbient
    void <init>(com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    android.os.CancellationSignal apply(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,int,com.android.systemui.statusbar.ExpandableNotificationRow,boolean,android.widget.RemoteViews$OnClickHandler,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback) -> apply
    void applyRemoteView(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,int,int,com.android.systemui.statusbar.ExpandableNotificationRow,boolean,boolean,android.widget.RemoteViews$OnClickHandler,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback,com.android.systemui.statusbar.NotificationData$Entry,com.android.systemui.statusbar.NotificationContentView,android.view.View,com.android.systemui.statusbar.notification.NotificationViewWrapper,java.util.HashMap,com.android.systemui.statusbar.notification.NotificationInflater$ApplyCallback) -> applyRemoteView
    boolean canReapplyAmbient(com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> canReapplyAmbient
    boolean canReapplyRemoteView(android.widget.RemoteViews,android.widget.RemoteViews) -> canReapplyRemoteView
    android.widget.RemoteViews createContentView(android.app.Notification$Builder,boolean,boolean) -> createContentView
    android.widget.RemoteViews createExpandedView(android.app.Notification$Builder,boolean) -> createExpandedView
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress createRemoteViews(int,android.app.Notification$Builder,boolean,boolean,boolean,boolean,boolean,android.content.Context) -> createRemoteViews
    boolean finishIfDone(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,int,java.util.HashMap,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback,com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> finishIfDone
    void handleInflationError(java.util.HashMap,java.lang.Exception,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback) -> handleInflationError
    void inflateNotificationViews(int) -> inflateNotificationViews
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress inflateNotificationViews(int,android.app.Notification$Builder,android.content.Context) -> inflateNotificationViews
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_notification_NotificationInflater_13600(java.util.HashMap) -> lambda$-com_android_systemui_statusbar_notification_NotificationInflater_13600
    void -com_android_systemui_statusbar_notification_NotificationInflater-mthref-0(android.os.CancellationSignal) -> -com_android_systemui_statusbar_notification_NotificationInflater-mthref-0
    void -com_android_systemui_statusbar_notification_NotificationInflater-mthref-1(android.os.CancellationSignal) -> -com_android_systemui_statusbar_notification_NotificationInflater-mthref-1
    boolean -wrap0(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress,int,java.util.HashMap,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback,com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> -wrap0
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress -wrap1(int,android.app.Notification$Builder,boolean,boolean,boolean,boolean,boolean,android.content.Context) -> -wrap1
    void -wrap2(java.util.HashMap,java.lang.Exception,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback) -> -wrap2
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatBaseImpl IMPL -> IMPL
    void <clinit>() -> <clinit>
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    void <init>() -> <init>
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
com.android.systemui.qs.tiles.-$Lambda$9iiLojYyOuKkv6TqXtTybKrlMa4 -> com.android.systemui.qs.tiles.-$Lambda$9iiLojYyOuKkv6TqXtTybKrlMa4:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.android.systemui.statusbar.stack.NotificationChildrenContainer$2 -> com.android.systemui.statusbar.stack.NotificationChildrenContainer$2:
    com.android.systemui.statusbar.stack.NotificationChildrenContainer this$0 -> this$0
    android.view.View val$divider -> val$divider
    void <init>(com.android.systemui.statusbar.stack.NotificationChildrenContainer,android.view.View) -> <init>
    void run() -> run
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void <init>(android.support.v4.widget.DrawerLayout) -> <init>
com.android.systemui.Dependency$DependencyKey -> com.android.systemui.Dependency$DependencyKey:
    java.lang.String mDisplayName -> mDisplayName
    void <init>(java.lang.String) -> <init>
    java.lang.String toString() -> toString
android.support.v7.app.WindowDecorActionBar$1 -> android.support.v7.app.WindowDecorActionBar$1:
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.android.systemui.volume.ZenFooter -> com.android.systemui.volume.ZenFooter:
    java.lang.String TAG -> TAG
    android.service.notification.ZenModeConfig mConfig -> mConfig
    com.android.systemui.volume.ConfigurableTexts mConfigurableTexts -> mConfigurableTexts
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.ZenModeController mController -> mController
    android.widget.TextView mEndNowButton -> mEndNowButton
    android.widget.ImageView mIcon -> mIcon
    android.widget.TextView mSummaryLine1 -> mSummaryLine1
    android.widget.TextView mSummaryLine2 -> mSummaryLine2
    int mZen -> mZen
    com.android.systemui.statusbar.policy.ZenModeController$Callback mZenCallback -> mZenCallback
    android.view.View mZenIntroduction -> mZenIntroduction
    android.view.View mZenIntroductionConfirm -> mZenIntroductionConfirm
    android.widget.TextView mZenIntroductionMessage -> mZenIntroductionMessage
    void cleanup() -> cleanup
    void onConfigurationChanged() -> onConfigurationChanged
    void init(com.android.systemui.statusbar.policy.ZenModeController) -> init
    boolean shouldShowIntroduction() -> shouldShowIntroduction
    void update() -> update
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void confirmZenIntroduction() -> confirmZenIntroduction
    boolean isZenAlarms() -> isZenAlarms
    boolean isZenNone() -> isZenNone
    boolean isZenPriority() -> isZenPriority
    void onFinishInflate() -> onFinishInflate
    void setConfig(android.service.notification.ZenModeConfig) -> setConfig
    void setZen(int) -> setZen
    void updateIntroduction() -> updateIntroduction
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_volume_ZenFooter_4210() -> lambda$-com_android_systemui_volume_ZenFooter_4210
    java.lang.String -get0() -> -get0
    void -wrap0(com.android.systemui.volume.ZenFooter) -> -wrap0
    void -wrap1(com.android.systemui.volume.ZenFooter,android.service.notification.ZenModeConfig) -> -wrap1
    void -wrap2(com.android.systemui.volume.ZenFooter,int) -> -wrap2
android.support.v7.preference.PreferenceGroupAdapter$1 -> android.support.v7.preference.PreferenceGroupAdapter$1:
    android.support.v7.preference.PreferenceGroupAdapter this$0 -> this$0
    void run() -> run
    void <init>(android.support.v7.preference.PreferenceGroupAdapter) -> <init>
android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener:
    void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
com.android.systemui.statusbar.AlphaOptimizedImageView -> com.android.systemui.statusbar.AlphaOptimizedImageView:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
com.android.systemui.statusbar.notification.MediaNotificationProcessor -> com.android.systemui.statusbar.notification.MediaNotificationProcessor:
    android.support.v7.graphics.Palette$Filter mBlackWhiteFilter -> mBlackWhiteFilter
    com.android.systemui.statusbar.notification.ImageGradientColorizer mColorizer -> mColorizer
    android.content.Context mContext -> mContext
    float[] mFilteredBackgroundHsl -> mFilteredBackgroundHsl
    boolean mIsLowPriority -> mIsLowPriority
    android.content.Context mPackageContext -> mPackageContext
    void <init>(android.content.Context,android.content.Context) -> <init>
    void <init>(android.content.Context,android.content.Context,com.android.systemui.statusbar.notification.ImageGradientColorizer) -> <init>
    int findBackgroundColorAndFilter(android.support.v7.graphics.Palette) -> findBackgroundColorAndFilter
    boolean hasEnoughPopulation(android.support.v7.graphics.Palette$Swatch) -> hasEnoughPopulation
    boolean isBlack(float[]) -> isBlack
    boolean isWhite(float[]) -> isWhite
    boolean isWhiteOrBlack(float[]) -> isWhiteOrBlack
    void processNotification(android.app.Notification,android.app.Notification$Builder) -> processNotification
    int selectForegroundColor(int,android.support.v7.graphics.Palette) -> selectForegroundColor
    int selectForegroundColorForSwatches(android.support.v7.graphics.Palette$Swatch,android.support.v7.graphics.Palette$Swatch,android.support.v7.graphics.Palette$Swatch,android.support.v7.graphics.Palette$Swatch,android.support.v7.graphics.Palette$Swatch,int) -> selectForegroundColorForSwatches
    android.support.v7.graphics.Palette$Swatch selectMutedCandidate(android.support.v7.graphics.Palette$Swatch,android.support.v7.graphics.Palette$Swatch) -> selectMutedCandidate
    android.support.v7.graphics.Palette$Swatch selectVibrantCandidate(android.support.v7.graphics.Palette$Swatch,android.support.v7.graphics.Palette$Swatch) -> selectVibrantCandidate
    void setIsLowPriority(boolean) -> setIsLowPriority
    boolean lambda$-com_android_systemui_statusbar_notification_MediaNotificationProcessor_2612(int,float[]) -> lambda$-com_android_systemui_statusbar_notification_MediaNotificationProcessor_2612
    boolean lambda$-com_android_systemui_statusbar_notification_MediaNotificationProcessor_5787(int,float[]) -> lambda$-com_android_systemui_statusbar_notification_MediaNotificationProcessor_5787
com.android.systemui.assist.AssistOrbView$4 -> com.android.systemui.assist.AssistOrbView$4:
    com.android.systemui.assist.AssistOrbView this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistOrbView) -> <init>
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.systemui.statusbar.policy.ExtensionController$Extension -> com.android.systemui.statusbar.policy.ExtensionController$Extension:
    void addCallback(java.util.function.Consumer) -> addCallback
    void clearItem(boolean) -> clearItem
    void destroy() -> destroy
    java.lang.Object get() -> get
    android.content.Context getContext() -> getContext
    java.lang.Object reload() -> reload
android.support.v14.preference.SwitchPreference -> android.support.v14.preference.SwitchPreference:
    android.support.v14.preference.SwitchPreference$Listener mListener -> mListener
    java.lang.CharSequence mSwitchOn -> mSwitchOn
    java.lang.CharSequence mSwitchOff -> mSwitchOff
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void performClick(android.view.View) -> performClick
    void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    void syncSwitchView(android.view.View) -> syncSwitchView
com.android.systemui.assist.AssistDisclosure -> com.android.systemui.assist.AssistDisclosure:
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mShowRunnable -> mShowRunnable
    com.android.systemui.assist.AssistDisclosure$AssistDisclosureView mView -> mView
    boolean mViewAdded -> mViewAdded
    android.view.WindowManager mWm -> mWm
    void <init>(android.content.Context,android.os.Handler) -> <init>
    void postShow() -> postShow
    void hide() -> hide
    void show() -> show
    void -wrap0(com.android.systemui.assist.AssistDisclosure) -> -wrap0
    void -wrap1(com.android.systemui.assist.AssistDisclosure) -> -wrap1
com.android.systemui.statusbar.phone.StatusBar$21 -> com.android.systemui.statusbar.phone.StatusBar$21:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    com.android.systemui.statusbar.policy.RemoteInputView findRemoteInputView(android.view.View) -> findRemoteInputView
    java.lang.String getNotificationKeyForParent(android.view.ViewParent) -> getNotificationKeyForParent
    boolean handleRemoteInput(android.view.View,android.app.PendingIntent,android.content.Intent) -> handleRemoteInput
    void logActionClick(android.view.View) -> logActionClick
    boolean onClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent) -> onClickHandler
    boolean superOnClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent) -> superOnClickHandler
    boolean -wrap0(com.android.systemui.statusbar.phone.StatusBar$21,android.view.View,android.app.PendingIntent,android.content.Intent) -> -wrap0
com.android.keyguard.KeyguardPatternView$UnlockPatternListener -> com.android.keyguard.KeyguardPatternView$UnlockPatternListener:
    com.android.keyguard.KeyguardPatternView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPatternView) -> <init>
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternChecked(int,boolean,int,boolean) -> onPatternChecked
    void onPatternCleared() -> onPatternCleared
    void onPatternDetected(java.util.List) -> onPatternDetected
    void onPatternStart() -> onPatternStart
    void -wrap0(com.android.keyguard.KeyguardPatternView$UnlockPatternListener,int,boolean,int,boolean) -> -wrap0
    void <init>(com.android.keyguard.KeyguardPatternView,com.android.keyguard.KeyguardPatternView$UnlockPatternListener) -> <init>
com.android.systemui.statusbar.AlphaOptimizedFrameLayout -> com.android.systemui.statusbar.AlphaOptimizedFrameLayout:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
com.android.keyguard.PasswordTextView$UserActivityListener -> com.android.keyguard.PasswordTextView$UserActivityListener:
    void onUserActivity() -> onUserActivity
com.android.systemui.statusbar.notification.AboveShelfChangedListener -> com.android.systemui.statusbar.notification.AboveShelfChangedListener:
    void onAboveShelfStateChanged(boolean) -> onAboveShelfStateChanged
android.support.v7.mediarouter.R$integer -> android.support.v7.mediarouter.R$integer:
    int mr_controller_volume_group_list_animation_duration_ms -> mr_controller_volume_group_list_animation_duration_ms
    int mr_controller_volume_group_list_fade_in_duration_ms -> mr_controller_volume_group_list_fade_in_duration_ms
    int mr_controller_volume_group_list_fade_out_duration_ms -> mr_controller_volume_group_list_fade_out_duration_ms
    void <init>() -> <init>
com.android.systemui.statusbar.StatusBarIconView$5 -> com.android.systemui.statusbar.StatusBarIconView$5:
    com.android.systemui.statusbar.StatusBarIconView this$0 -> this$0
    boolean val$runRunnable -> val$runRunnable
    java.lang.Runnable val$endRunnable -> val$endRunnable
    void <init>(com.android.systemui.statusbar.StatusBarIconView,boolean,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v17.leanback.widget.PagingIndicator$Dot -> android.support.v17.leanback.widget.PagingIndicator$Dot:
    float mTranslationX -> mTranslationX
    float mAlpha -> mAlpha
    float mDirection -> mDirection
    float mArrowImageRadius -> mArrowImageRadius
    float mCenterX -> mCenterX
    int mFgColor -> mFgColor
    float mLayoutDirection -> mLayoutDirection
    float mDiameter -> mDiameter
    float mRadius -> mRadius
    android.support.v17.leanback.widget.PagingIndicator this$0 -> this$0
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    void onRtlPropertiesChanged() -> onRtlPropertiesChanged
    float getDiameter() -> getDiameter
    void adjustAlpha() -> adjustAlpha
    void draw(android.graphics.Canvas) -> draw
    void setDiameter(float) -> setDiameter
    void setAlpha(float) -> setAlpha
    void deselect() -> deselect
    void select() -> select
    float getAlpha() -> getAlpha
android.support.v7.app.AlertController$AlertParams -> android.support.v7.app.AlertController$AlertParams:
    java.lang.CharSequence mMessage -> mMessage
    int mIconId -> mIconId
    boolean mIsMultiChoice -> mIsMultiChoice
    android.view.View mView -> mView
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> mNegativeButtonListener
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    int mViewSpacingLeft -> mViewSpacingLeft
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> mOnCancelListener
    int mViewLayoutResId -> mViewLayoutResId
    int mViewSpacingRight -> mViewSpacingRight
    boolean[] mCheckedItems -> mCheckedItems
    java.lang.String mLabelColumn -> mLabelColumn
    boolean mViewSpacingSpecified -> mViewSpacingSpecified
    int mViewSpacingBottom -> mViewSpacingBottom
    android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> mOnPrepareListViewListener
    java.lang.CharSequence mNeutralButtonText -> mNeutralButtonText
    boolean mIsSingleChoice -> mIsSingleChoice
    android.content.Context mContext -> mContext
    int mCheckedItem -> mCheckedItem
    boolean mCancelable -> mCancelable
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mNegativeButtonText -> mNegativeButtonText
    android.view.LayoutInflater mInflater -> mInflater
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> mOnCheckboxClickListener
    int mViewSpacingTop -> mViewSpacingTop
    java.lang.CharSequence mPositiveButtonText -> mPositiveButtonText
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> mOnDismissListener
    android.view.View mCustomTitleView -> mCustomTitleView
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> mOnKeyListener
    int mIconAttrId -> mIconAttrId
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> mPositiveButtonListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.content.DialogInterface$OnClickListener mOnClickListener -> mOnClickListener
    java.lang.String mIsCheckedColumn -> mIsCheckedColumn
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> mNeutralButtonListener
    java.lang.CharSequence[] mItems -> mItems
    android.database.Cursor mCursor -> mCursor
    boolean mRecycleOnMeasure -> mRecycleOnMeasure
    void apply(android.support.v7.app.AlertController) -> apply
    void createListView(android.support.v7.app.AlertController) -> createListView
    void <init>(android.content.Context) -> <init>
com.android.systemui.doze.-$Lambda$krmSGe4g6CSLLG4RW6_aYJyrfaw$1 -> com.android.systemui.doze.-$Lambda$krmSGe4g6CSLLG4RW6_aYJyrfaw$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
android.support.v4.provider.FontsContractCompat$3 -> android.support.v4.provider.FontsContractCompat$3:
    java.lang.ref.WeakReference val$textViewWeak -> val$textViewWeak
    android.widget.TextView val$targetView -> val$targetView
    int val$style -> val$style
    void onReply(java.lang.Object) -> onReply
    void <init>(java.lang.ref.WeakReference,android.widget.TextView,int) -> <init>
    void onReply(android.graphics.Typeface) -> onReply
android.support.v7.media.RegisteredMediaRouteProviderWatcher$Callback -> android.support.v7.media.RegisteredMediaRouteProviderWatcher$Callback:
    void removeProvider(android.support.v7.media.MediaRouteProvider) -> removeProvider
    void addProvider(android.support.v7.media.MediaRouteProvider) -> addProvider
com.android.systemui.globalactions.GlobalActionsDialog$SinglePressAction -> com.android.systemui.globalactions.GlobalActionsDialog$SinglePressAction:
    android.graphics.drawable.Drawable mIcon -> mIcon
    int mIconResId -> mIconResId
    java.lang.CharSequence mMessage -> mMessage
    int mMessageResId -> mMessageResId
    void <init>(int,int) -> <init>
    void <init>(int,android.graphics.drawable.Drawable,java.lang.CharSequence) -> <init>
    android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater) -> create
    java.lang.CharSequence getLabelForAccessibility(android.content.Context) -> getLabelForAccessibility
    java.lang.String getStatus() -> getStatus
    boolean isEnabled() -> isEnabled
    void onPress() -> onPress
com.android.systemui.DessertCase -> com.android.systemui.DessertCase:
    com.android.systemui.DessertCaseView mView -> mView
    void <init>() -> <init>
    void onPause() -> onPause
    void onResume() -> onResume
    void onStart() -> onStart
com.android.systemui.qs.external.CustomTile -> com.android.systemui.qs.external.CustomTile:
    android.content.ComponentName mComponent -> mComponent
    android.graphics.drawable.Icon mDefaultIcon -> mDefaultIcon
    boolean mIsShowingDialog -> mIsShowingDialog
    boolean mIsTokenGranted -> mIsTokenGranted
    boolean mListening -> mListening
    android.service.quicksettings.IQSTileService mService -> mService
    com.android.systemui.qs.external.TileServiceManager mServiceManager -> mServiceManager
    android.service.quicksettings.Tile mTile -> mTile
    android.os.IBinder mToken -> mToken
    int mUser -> mUser
    android.view.IWindowManager mWindowManager -> mWindowManager
    int getUser() -> getUser
    java.lang.String toSpec(android.content.ComponentName) -> toSpec
    android.content.ComponentName getComponentFromSpec(java.lang.String) -> getComponentFromSpec
    com.android.systemui.plugins.qs.QSTile create(com.android.systemui.qs.QSTileHost,java.lang.String) -> create
    android.content.ComponentName getComponent() -> getComponent
    android.service.quicksettings.Tile getQsTile() -> getQsTile
    void updateState(android.service.quicksettings.Tile) -> updateState
    void onDialogShown() -> onDialogShown
    void onDialogHidden() -> onDialogHidden
    void startUnlockAndRun() -> startUnlockAndRun
    void <init>(com.android.systemui.qs.QSTileHost,java.lang.String) -> <init>
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    long getStaleTimeout() -> getStaleTimeout
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleDestroy() -> handleDestroy
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    boolean iconEquals(android.graphics.drawable.Icon,android.graphics.drawable.Icon) -> iconEquals
    boolean isAvailable() -> isAvailable
    boolean isSystemApp(android.content.pm.PackageManager) -> isSystemApp
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void onTileChanged(android.content.ComponentName) -> onTileChanged
    android.metrics.LogMaker populate(android.metrics.LogMaker) -> populate
    android.content.Intent resolveIntent(android.content.Intent) -> resolveIntent
    void setTileIcon() -> setTileIcon
    com.android.systemui.plugins.qs.QSTile$Icon lambda$-com_android_systemui_qs_external_CustomTile_10869(android.graphics.drawable.Drawable) -> lambda$-com_android_systemui_qs_external_CustomTile_10869
    void lambda$-com_android_systemui_qs_external_CustomTile_11550() -> lambda$-com_android_systemui_qs_external_CustomTile_11550
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM:
    com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    boolean $m$0(android.support.v7.preference.Preference,java.lang.Object) -> $m$0
    boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object) -> onPreferenceChange
com.android.systemui.volume.D -> com.android.systemui.volume.D:
    boolean BUG -> BUG
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v17.leanback.widget.StreamingTextView$DottySpan -> android.support.v17.leanback.widget.StreamingTextView$DottySpan:
    int mPosition -> mPosition
    int mSeed -> mSeed
    android.support.v17.leanback.widget.StreamingTextView this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.StreamingTextView,int,int) -> <init>
    void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
android.support.v7.app.MediaRouteControllerDialog$MediaRouterCallback -> android.support.v7.app.MediaRouteControllerDialog$MediaRouterCallback:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void onRouteUnselected(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onRouteChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteVolumeChanged(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
com.android.systemui.statusbar.policy.ZenModeControllerImpl$3 -> com.android.systemui.statusbar.policy.ZenModeControllerImpl$3:
    com.android.systemui.statusbar.policy.ZenModeControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.ZenModeControllerImpl,android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void handleValueChanged(int) -> handleValueChanged
com.android.settingslib.users.AppRestrictionsHelper$Injector -> com.android.settingslib.users.AppRestrictionsHelper$Injector:
com.android.keyguard.KeyguardUpdateMonitor -> com.android.keyguard.KeyguardUpdateMonitor:
    java.util.HashMap mServiceStates -> mServiceStates
    boolean CORE_APPS_ONLY -> CORE_APPS_ONLY
    android.content.ComponentName FALLBACK_HOME_COMPONENT -> FALLBACK_HOME_COMPONENT
    boolean mAssistantVisible -> mAssistantVisible
    android.hardware.fingerprint.FingerprintManager$AuthenticationCallback mAuthenticationCallback -> mAuthenticationCallback
    com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus mBatteryStatus -> mBatteryStatus
    boolean mBootCompleted -> mBootCompleted
    boolean mBouncer -> mBouncer
    android.content.BroadcastReceiver mBroadcastAllReceiver -> mBroadcastAllReceiver
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    java.util.ArrayList mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    boolean mDeviceInteractive -> mDeviceInteractive
    boolean mDeviceProvisioned -> mDeviceProvisioned
    android.database.ContentObserver mDeviceProvisionedObserver -> mDeviceProvisionedObserver
    com.android.keyguard.KeyguardUpdateMonitor$DisplayClientState mDisplayClientState -> mDisplayClientState
    android.service.dreams.IDreamManager mDreamManager -> mDreamManager
    android.util.SparseIntArray mFailedAttempts -> mFailedAttempts
    android.os.CancellationSignal mFingerprintCancelSignal -> mFingerprintCancelSignal
    int mFingerprintRunningState -> mFingerprintRunningState
    android.hardware.fingerprint.FingerprintManager mFpm -> mFpm
    boolean mGoingToSleep -> mGoingToSleep
    android.os.Handler mHandler -> mHandler
    int mHardwareUnavailableRetryCount -> mHardwareUnavailableRetryCount
    boolean mHasLockscreenWallpaper -> mHasLockscreenWallpaper
    boolean mIsDreaming -> mIsDreaming
    boolean mKeyguardGoingAway -> mKeyguardGoingAway
    boolean mKeyguardIsVisible -> mKeyguardIsVisible
    boolean mKeyguardOccluded -> mKeyguardOccluded
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    android.hardware.fingerprint.FingerprintManager$LockoutResetCallback mLockoutResetCallback -> mLockoutResetCallback
    boolean mNeedsSlowUnlockTransition -> mNeedsSlowUnlockTransition
    int mPhoneState -> mPhoneState
    java.lang.Runnable mRetryFingerprintAuthentication -> mRetryFingerprintAuthentication
    int mRingMode -> mRingMode
    boolean mScreenOn -> mScreenOn
    java.util.HashMap mSimDatas -> mSimDatas
    com.android.keyguard.KeyguardUpdateMonitor$StrongAuthTracker mStrongAuthTracker -> mStrongAuthTracker
    java.util.List mSubscriptionInfo -> mSubscriptionInfo
    android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubscriptionListener -> mSubscriptionListener
    android.telephony.SubscriptionManager mSubscriptionManager -> mSubscriptionManager
    boolean mSwitchingUser -> mSwitchingUser
    com.android.systemui.recents.misc.SystemServicesProxy$TaskStackListener mTaskStackListener -> mTaskStackListener
    android.app.trust.TrustManager mTrustManager -> mTrustManager
    android.util.SparseBooleanArray mUserFaceUnlockRunning -> mUserFaceUnlockRunning
    android.util.SparseBooleanArray mUserFingerprintAuthenticated -> mUserFingerprintAuthenticated
    android.util.SparseBooleanArray mUserHasTrust -> mUserHasTrust
    android.os.UserManager mUserManager -> mUserManager
    android.util.SparseBooleanArray mUserTrustIsManaged -> mUserTrustIsManaged
    int sCurrentUser -> sCurrentUser
    com.android.keyguard.KeyguardUpdateMonitor sInstance -> sInstance
    com.android.keyguard.KeyguardUpdateMonitor getInstance(android.content.Context) -> getInstance
    int getNextSubIdForState(com.android.internal.telephony.IccCardConstants$State) -> getNextSubIdForState
    void setHasLockscreenWallpaper(boolean) -> setHasLockscreenWallpaper
    java.util.List getSubscriptionInfo(boolean) -> getSubscriptionInfo
    com.android.internal.telephony.IccCardConstants$State getSimState(int) -> getSimState
    boolean isDeviceInteractive() -> isDeviceInteractive
    void registerCallback(com.android.keyguard.KeyguardUpdateMonitorCallback) -> registerCallback
    void removeCallback(com.android.keyguard.KeyguardUpdateMonitorCallback) -> removeCallback
    boolean isDeviceProvisioned() -> isDeviceProvisioned
    int getCurrentUser() -> getCurrentUser
    boolean isUnlockingWithFingerprintAllowed() -> isUnlockingWithFingerprintAllowed
    boolean getUserCanSkipBouncer(int) -> getUserCanSkipBouncer
    boolean getUserTrustIsManaged(int) -> getUserTrustIsManaged
    boolean getUserHasTrust(int) -> getUserHasTrust
    boolean isFaceUnlockRunning(int) -> isFaceUnlockRunning
    boolean isSwitchingUser() -> isSwitchingUser
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void reportSimUnlocked(int) -> reportSimUnlocked
    android.telephony.SubscriptionInfo getSubscriptionInfoForSubId(int) -> getSubscriptionInfoForSubId
    boolean needsSlowUnlockTransition() -> needsSlowUnlockTransition
    boolean isGoingToSleep() -> isGoingToSleep
    void awakenFromDream() -> awakenFromDream
    boolean isDreaming() -> isDreaming
    boolean isSimPinSecure() -> isSimPinSecure
    boolean isUnlockWithFingerprintPossible(int) -> isUnlockWithFingerprintPossible
    com.android.keyguard.KeyguardUpdateMonitor$StrongAuthTracker getStrongAuthTracker() -> getStrongAuthTracker
    void setSwitchingUser(boolean) -> setSwitchingUser
    void setKeyguardGoingAway(boolean) -> setKeyguardGoingAway
    void setCurrentUser(int) -> setCurrentUser
    void dispatchStartedGoingToSleep(int) -> dispatchStartedGoingToSleep
    void dispatchFinishedGoingToSleep(int) -> dispatchFinishedGoingToSleep
    void dispatchStartedWakingUp() -> dispatchStartedWakingUp
    void dispatchScreenTurnedOn() -> dispatchScreenTurnedOn
    void dispatchScreenTurnedOff() -> dispatchScreenTurnedOff
    void dispatchDreamingStarted() -> dispatchDreamingStarted
    void dispatchDreamingStopped() -> dispatchDreamingStopped
    void setKeyguardOccluded(boolean) -> setKeyguardOccluded
    void clearFailedUnlockAttempts() -> clearFailedUnlockAttempts
    void clearFingerprintRecognized() -> clearFingerprintRecognized
    void dispatchBootCompleted() -> dispatchBootCompleted
    boolean hasLockscreenWallpaper() -> hasLockscreenWallpaper
    boolean isScreenOn() -> isScreenOn
    int getFailedUnlockAttempts(int) -> getFailedUnlockAttempts
    void reportFailedStrongAuthUnlockAttempt(int) -> reportFailedStrongAuthUnlockAttempt
    void reportEmergencyCallAction(boolean) -> reportEmergencyCallAction
    boolean isSimPinVoiceSecure() -> isSimPinVoiceSecure
    boolean isOOS() -> isOOS
    void sendKeyguardReset() -> sendKeyguardReset
    void onKeyguardVisibilityChanged(boolean) -> onKeyguardVisibilityChanged
    void sendKeyguardBouncerChanged(boolean) -> sendKeyguardBouncerChanged
    void <init>(android.content.Context) -> <init>
    void handleAirplaneModeChanged() -> handleAirplaneModeChanged
    void handleBatteryUpdate(com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus) -> handleBatteryUpdate
    void handleBootCompleted() -> handleBootCompleted
    void handleDevicePolicyManagerStateChanged() -> handleDevicePolicyManagerStateChanged
    void handleDeviceProvisioned() -> handleDeviceProvisioned
    void handleDreamingStateChanged(int) -> handleDreamingStateChanged
    void handleFaceUnlockStateChanged(boolean,int) -> handleFaceUnlockStateChanged
    void handleFingerprintAcquired(int) -> handleFingerprintAcquired
    void handleFingerprintAuthFailed() -> handleFingerprintAuthFailed
    void handleFingerprintAuthenticated(int) -> handleFingerprintAuthenticated
    void handleFingerprintError(int,java.lang.String) -> handleFingerprintError
    void handleFingerprintHelp(int,java.lang.String) -> handleFingerprintHelp
    void handleFingerprintLockoutReset() -> handleFingerprintLockoutReset
    void handleFinishedGoingToSleep(int) -> handleFinishedGoingToSleep
    void handleKeyguardBouncerChanged(int) -> handleKeyguardBouncerChanged
    void handleKeyguardReset() -> handleKeyguardReset
    void handleLocaleChanged() -> handleLocaleChanged
    void handlePhoneStateChanged(java.lang.String) -> handlePhoneStateChanged
    void handleReportEmergencyCallAction() -> handleReportEmergencyCallAction
    void handleRingerModeChange(int) -> handleRingerModeChange
    void handleScreenTurnedOff() -> handleScreenTurnedOff
    void handleScreenTurnedOn() -> handleScreenTurnedOn
    void handleServiceStateChange(int,int,android.telephony.ServiceState) -> handleServiceStateChange
    void handleSimStateChange(int,int,com.android.internal.telephony.IccCardConstants$State) -> handleSimStateChange
    void handleSimSubscriptionInfoChanged() -> handleSimSubscriptionInfoChanged
    void handleStartedGoingToSleep(int) -> handleStartedGoingToSleep
    void handleStartedWakingUp() -> handleStartedWakingUp
    void handleTimeUpdate() -> handleTimeUpdate
    void handleUserInfoChanged(int) -> handleUserInfoChanged
    void handleUserSwitchComplete(int) -> handleUserSwitchComplete
    void handleUserSwitching(int,android.os.IRemoteCallback) -> handleUserSwitching
    void handleUserUnlocked() -> handleUserUnlocked
    boolean isBatteryUpdateInteresting(com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus,com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus) -> isBatteryUpdateInteresting
    boolean isDeviceProvisionedInSettingsDb() -> isDeviceProvisionedInSettingsDb
    boolean isFingerprintDetectionRunning() -> isFingerprintDetectionRunning
    boolean isFingerprintDisabled(int) -> isFingerprintDisabled
    boolean isSimPinSecure(com.android.internal.telephony.IccCardConstants$State) -> isSimPinSecure
    boolean isTrustDisabled(int) -> isTrustDisabled
    void notifyFingerprintRunningStateChanged() -> notifyFingerprintRunningStateChanged
    void notifyStrongAuthStateChanged(int) -> notifyStrongAuthStateChanged
    void onFingerprintAuthenticated(int) -> onFingerprintAuthenticated
    void onTrustChanged(boolean,int,int) -> onTrustChanged
    void onTrustManagedChanged(boolean,int) -> onTrustManagedChanged
    boolean refreshSimState(int,int) -> refreshSimState
    boolean resolveNeedsSlowUnlockTransition() -> resolveNeedsSlowUnlockTransition
    void sendUpdates(com.android.keyguard.KeyguardUpdateMonitorCallback) -> sendUpdates
    void setFingerprintRunningState(int) -> setFingerprintRunningState
    boolean shouldListenForFingerprint() -> shouldListenForFingerprint
    boolean shouldListenForFingerprintAssistant() -> shouldListenForFingerprintAssistant
    void startListeningForFingerprint() -> startListeningForFingerprint
    void stopListeningForFingerprint() -> stopListeningForFingerprint
    void updateFingerprintListeningState() -> updateFingerprintListeningState
    void watchForDeviceProvisioning() -> watchForDeviceProvisioning
    void <clinit>() -> <clinit>
    boolean -get0(com.android.keyguard.KeyguardUpdateMonitor) -> -get0
    android.os.Handler -get1(com.android.keyguard.KeyguardUpdateMonitor) -> -get1
    int -get2(com.android.keyguard.KeyguardUpdateMonitor) -> -get2
    boolean -set0(com.android.keyguard.KeyguardUpdateMonitor,boolean) -> -set0
    boolean -set1(com.android.keyguard.KeyguardUpdateMonitor,boolean) -> -set1
    boolean -wrap0(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap0
    void -wrap1(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap1
    void -wrap2(com.android.keyguard.KeyguardUpdateMonitor,com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus) -> -wrap2
    void -wrap3(com.android.keyguard.KeyguardUpdateMonitor,int) -> -wrap3
    void -wrap4(com.android.keyguard.KeyguardUpdateMonitor,boolean,int) -> -wrap4
    void -wrap5(com.android.keyguard.KeyguardUpdateMonitor,int) -> -wrap5
    void -wrap6(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap6
    void -wrap7(com.android.keyguard.KeyguardUpdateMonitor,int) -> -wrap7
    void -wrap8(com.android.keyguard.KeyguardUpdateMonitor,int,java.lang.String) -> -wrap8
    void -wrap9(com.android.keyguard.KeyguardUpdateMonitor,int,java.lang.String) -> -wrap9
    void -wrap10(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap10
    void -wrap11(com.android.keyguard.KeyguardUpdateMonitor,int) -> -wrap11
    void -wrap12(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap12
    void -wrap13(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap13
    void -wrap14(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap14
    void -wrap15(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap15
    void -wrap16(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap16
    void -wrap17(com.android.keyguard.KeyguardUpdateMonitor,int,int,android.telephony.ServiceState) -> -wrap17
    void -wrap18(com.android.keyguard.KeyguardUpdateMonitor,int,int,com.android.internal.telephony.IccCardConstants$State) -> -wrap18
    void -wrap19(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap19
    void -wrap20(com.android.keyguard.KeyguardUpdateMonitor,int) -> -wrap20
    void -wrap21(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap21
    void -wrap22(com.android.keyguard.KeyguardUpdateMonitor,int) -> -wrap22
    void -wrap23(com.android.keyguard.KeyguardUpdateMonitor) -> -wrap23
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> mDelegateState
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    boolean canApplyTheme() -> canApplyTheme
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
com.android.systemui.assist.AssistManager$1 -> com.android.systemui.assist.AssistManager$1:
    com.android.systemui.assist.AssistManager this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistManager) -> <init>
    void onFailed() -> onFailed
    void onShown() -> onShown
com.android.systemui.statusbar.ExpandableNotificationRow$LayoutListener -> com.android.systemui.statusbar.ExpandableNotificationRow$LayoutListener:
    void onLayout() -> onLayout
com.android.systemui.statusbar.notification.-$Lambda$taUDKRZB-LDsIHlbK58foapdOOc -> com.android.systemui.statusbar.notification.-$Lambda$taUDKRZB-LDsIHlbK58foapdOOc:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.qs.QSPanel$1 -> com.android.systemui.qs.QSPanel$1:
    com.android.systemui.qs.QSPanel this$0 -> this$0
    com.android.systemui.qs.QSPanel$TileRecord val$r -> val$r
    void <init>(com.android.systemui.qs.QSPanel,com.android.systemui.qs.QSPanel$TileRecord) -> <init>
    void onAnnouncementRequested(java.lang.CharSequence) -> onAnnouncementRequested
    void onScanStateChanged(boolean) -> onScanStateChanged
    void onShowDetail(boolean) -> onShowDetail
    void onStateChanged(com.android.systemui.plugins.qs.QSTile$State) -> onStateChanged
    void onToggleStateChanged(boolean) -> onToggleStateChanged
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int hashCode() -> hashCode
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object[] toArray() -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.Iterator iterator() -> iterator
    boolean add(java.lang.Object) -> add
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    boolean remove(java.lang.Object) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean addAll(java.util.Collection) -> addAll
    void <init>(android.support.v4.util.MapCollections) -> <init>
android.arch.lifecycle.LifecycleRegistryOwner -> android.arch.lifecycle.LifecycleRegistryOwner:
    android.arch.lifecycle.LifecycleRegistry getLifecycle() -> getLifecycle
com.android.systemui.qs.customize.QSCustomizer$2 -> com.android.systemui.qs.customize.QSCustomizer$2:
    com.android.systemui.qs.customize.QSCustomizer this$0 -> this$0
    void <init>(com.android.systemui.qs.customize.QSCustomizer) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.settingslib.R$fraction -> com.android.settingslib.R$fraction:
    int battery_button_height_fraction -> battery_button_height_fraction
    int battery_subpixel_smoothing_left -> battery_subpixel_smoothing_left
    int battery_subpixel_smoothing_right -> battery_subpixel_smoothing_right
    int bt_battery_button_height_fraction -> bt_battery_button_height_fraction
    int bt_battery_ratio_fraction -> bt_battery_ratio_fraction
    void <init>() -> <init>
com.android.systemui.statusbar.stack.ExpandableViewState$5 -> com.android.systemui.statusbar.stack.ExpandableViewState$5:
    com.android.systemui.statusbar.stack.ExpandableViewState this$0 -> this$0
    com.android.systemui.statusbar.ExpandableView val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.ExpandableView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$9 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$9:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View,android.app.NotificationChannel,int) -> $m$0
    void onClick(android.view.View,android.app.NotificationChannel,int) -> onClick
com.android.systemui.statusbar.phone.StatusBarIconControllerImpl -> com.android.systemui.statusbar.phone.StatusBarIconControllerImpl:
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.DarkIconDispatcher mDarkIconDispatcher -> mDarkIconDispatcher
    com.android.systemui.statusbar.phone.DemoStatusIcons mDemoStatusIcons -> mDemoStatusIcons
    android.util.ArraySet mIconBlacklist -> mIconBlacklist
    java.util.ArrayList mIconGroups -> mIconGroups
    com.android.systemui.statusbar.policy.IconLogger mIconLogger -> mIconLogger
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
    void <init>(android.content.Context) -> <init>
    void addIconGroup(com.android.systemui.statusbar.phone.StatusBarIconController$IconManager) -> addIconGroup
    void addSystemIcon(int,com.android.internal.statusbar.StatusBarIcon) -> addSystemIcon
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void handleSet(int,com.android.internal.statusbar.StatusBarIcon) -> handleSet
    void loadDimens() -> loadDimens
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void removeIcon(java.lang.String) -> removeIcon
    void removeIcon(int) -> removeIcon
    void removeIconGroup(com.android.systemui.statusbar.phone.StatusBarIconController$IconManager) -> removeIconGroup
    void setExternalIcon(java.lang.String) -> setExternalIcon
    void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon) -> setIcon
    void setIcon(int,com.android.internal.statusbar.StatusBarIcon) -> setIcon
    void setIcon(java.lang.String,int,java.lang.CharSequence) -> setIcon
    void setIconVisibility(java.lang.String,boolean) -> setIconVisibility
    void lambda$-com_android_systemui_statusbar_phone_StatusBarIconControllerImpl_4622(int,java.lang.String,boolean,com.android.internal.statusbar.StatusBarIcon,com.android.systemui.statusbar.phone.StatusBarIconController$IconManager) -> lambda$-com_android_systemui_statusbar_phone_StatusBarIconControllerImpl_4622
    void lambda$-com_android_systemui_statusbar_phone_StatusBarIconControllerImpl_5576(int,int,com.android.systemui.statusbar.phone.StatusBarIconController$IconManager) -> lambda$-com_android_systemui_statusbar_phone_StatusBarIconControllerImpl_5576
    void lambda$-com_android_systemui_statusbar_phone_StatusBarIconControllerImpl_6473(int,com.android.systemui.statusbar.phone.StatusBarIconController$IconManager) -> lambda$-com_android_systemui_statusbar_phone_StatusBarIconControllerImpl_6473
    void lambda$-com_android_systemui_statusbar_phone_StatusBarIconControllerImpl_7089(int,com.android.internal.statusbar.StatusBarIcon,com.android.systemui.statusbar.phone.StatusBarIconController$IconManager) -> lambda$-com_android_systemui_statusbar_phone_StatusBarIconControllerImpl_7089
com.android.keyguard.KeyguardAbsKeyInputView$1 -> com.android.keyguard.KeyguardAbsKeyInputView$1:
    com.android.keyguard.KeyguardAbsKeyInputView this$0 -> this$0
    int val$userId -> val$userId
    void <init>(com.android.keyguard.KeyguardAbsKeyInputView,int) -> <init>
    void onCancelled() -> onCancelled
    void onChecked(boolean,int) -> onChecked
    void onEarlyMatched() -> onEarlyMatched
com.android.systemui.tuner.TunerZenModePanel -> com.android.systemui.tuner.TunerZenModePanel:
    android.view.View mButtons -> mButtons
    com.android.systemui.volume.ZenModePanel$Callback mCallback -> mCallback
    com.android.systemui.statusbar.policy.ZenModeController mController -> mController
    android.view.View mDone -> mDone
    android.view.View$OnClickListener mDoneListener -> mDoneListener
    boolean mEditing -> mEditing
    android.view.View mHeaderSwitch -> mHeaderSwitch
    android.view.View mMoreSettings -> mMoreSettings
    java.lang.Runnable mUpdate -> mUpdate
    int mZenMode -> mZenMode
    com.android.systemui.volume.ZenModePanel mZenModePanel -> mZenModePanel
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void init(com.android.systemui.statusbar.policy.ZenModeController) -> init
    boolean isEditing() -> isEditing
    void onClick(android.view.View) -> onClick
    void onDetachedFromWindow() -> onDetachedFromWindow
    void postUpdatePanel() -> postUpdatePanel
    void setCallback(com.android.systemui.volume.ZenModePanel$Callback) -> setCallback
    void setDoneListener(android.view.View$OnClickListener) -> setDoneListener
    void setZenState(int) -> setZenState
    void updatePanel() -> updatePanel
    void -wrap0(com.android.systemui.tuner.TunerZenModePanel) -> -wrap0
com.android.systemui.statusbar.policy.DataSaverControllerImpl$1 -> com.android.systemui.statusbar.policy.DataSaverControllerImpl$1:
    com.android.systemui.statusbar.policy.DataSaverControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.DataSaverControllerImpl) -> <init>
    void onMeteredIfacesChanged(java.lang.String[]) -> onMeteredIfacesChanged
    void onRestrictBackgroundChanged(boolean) -> onRestrictBackgroundChanged
    void onUidPoliciesChanged(int,int) -> onUidPoliciesChanged
    void onUidRulesChanged(int,int) -> onUidRulesChanged
android.support.v7.app.WindowDecorActionBar -> android.support.v7.app.WindowDecorActionBar:
    android.content.Context mThemedContext -> mThemedContext
    int mSavedTabPosition -> mSavedTabPosition
    android.app.Activity mActivity -> mActivity
    android.support.v4.view.ViewPropertyAnimatorListener mShowListener -> mShowListener
    android.support.v7.widget.ActionBarContextView mContextView -> mContextView
    android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> mUpdateListener
    android.support.v4.view.ViewPropertyAnimatorListener mHideListener -> mHideListener
    android.support.v7.widget.ActionBarOverlayLayout mOverlayLayout -> mOverlayLayout
    android.support.v7.widget.ActionBarContainer mContainerView -> mContainerView
    android.support.v7.app.WindowDecorActionBar$ActionModeImpl mActionMode -> mActionMode
    android.view.View mContentView -> mContentView
    android.support.v7.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback -> mDeferredModeDestroyCallback
    boolean mHasEmbeddedTabs -> mHasEmbeddedTabs
    boolean mShowHideAnimationEnabled -> mShowHideAnimationEnabled
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    boolean mHideOnContentScroll -> mHideOnContentScroll
    android.content.Context mContext -> mContext
    boolean mDisplayHomeAsUpSet -> mDisplayHomeAsUpSet
    boolean mHiddenBySystem -> mHiddenBySystem
    android.view.animation.Interpolator sShowInterpolator -> sShowInterpolator
    int mCurWindowVisibility -> mCurWindowVisibility
    boolean mNowShowing -> mNowShowing
    boolean mHiddenByApp -> mHiddenByApp
    boolean mShowingForMode -> mShowingForMode
    android.support.v7.view.ActionMode mDeferredDestroyActionMode -> mDeferredDestroyActionMode
    boolean mLastMenuVisibility -> mLastMenuVisibility
    android.app.Dialog mDialog -> mDialog
    android.view.animation.Interpolator sHideInterpolator -> sHideInterpolator
    android.support.v7.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    java.util.ArrayList mTabs -> mTabs
    boolean mContentAnimations -> mContentAnimations
    android.support.v7.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> mCurrentShowAnim
    void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    void doHide(boolean) -> doHide
    void setDisplayOptions(int,int) -> setDisplayOptions
    void animateToMode(boolean) -> animateToMode
    void <init>(android.app.Activity,boolean) -> <init>
    void updateVisibility(boolean) -> updateVisibility
    void enableContentAnimations(boolean) -> enableContentAnimations
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    boolean collapseActionView() -> collapseActionView
    void hideForActionMode() -> hideForActionMode
    android.content.Context getThemedContext() -> getThemedContext
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void <init>(android.app.Dialog) -> <init>
    void onContentScrollStarted() -> onContentScrollStarted
    void hideForSystem() -> hideForSystem
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> startActionMode
    boolean shouldAnimateContextView() -> shouldAnimateContextView
    void init(android.view.View) -> init
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void showForSystem() -> showForSystem
    void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    void doShow(boolean) -> doShow
    void setElevation(float) -> setElevation
    void showForActionMode() -> showForActionMode
    int getNavigationMode() -> getNavigationMode
    void onContentScrollStopped() -> onContentScrollStopped
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void <clinit>() -> <clinit>
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor getCursor() -> getCursor
android.support.v7.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.widget.ActionBarOverlayLayout$LayoutParams:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
com.android.systemui.qs.tiles.IntentTile$1 -> com.android.systemui.qs.tiles.IntentTile$1:
    com.android.systemui.qs.tiles.IntentTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.IntentTile) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v17.leanback.widget.SearchBar$3 -> android.support.v17.leanback.widget.SearchBar$3:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
    void run() -> run
com.android.systemui.-$Lambda$k4cWn4_Fe5vy8D3vFgtnjozpHDs -> com.android.systemui.-$Lambda$k4cWn4_Fe5vy8D3vFgtnjozpHDs:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(boolean) -> $m$0
    void setWouldOtherwiseCollapse(boolean) -> setWouldOtherwiseCollapse
android.support.v7.widget.FastScroller$State -> android.support.v7.widget.FastScroller$State:
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    boolean mAlreadyDelayed -> mAlreadyDelayed
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    boolean mNeedsCancel -> mNeedsCancel
    float[] mMinimumVelocity -> mMinimumVelocity
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    boolean mNeedsReset -> mNeedsReset
    int mActivationDelay -> mActivationDelay
    float[] mMaximumEdges -> mMaximumEdges
    float[] mRelativeVelocity -> mRelativeVelocity
    java.lang.Runnable mRunnable -> mRunnable
    boolean mAnimating -> mAnimating
    boolean mExclusive -> mExclusive
    int mEdgeType -> mEdgeType
    android.view.View mTarget -> mTarget
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    boolean mEnabled -> mEnabled
    float[] mMaximumVelocity -> mMaximumVelocity
    float[] mRelativeEdges -> mRelativeEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    void startAnimating() -> startAnimating
    void <init>(android.view.View) -> <init>
    void cancelTargetTouch() -> cancelTargetTouch
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    int constrain(int,int,int) -> constrain
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    boolean shouldAnimate() -> shouldAnimate
    void requestStop() -> requestStop
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    void <clinit>() -> <clinit>
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    float constrain(float,float,float) -> constrain
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    void scrollTargetBy(int,int) -> scrollTargetBy
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.SearchView$8:
    android.support.v7.widget.SearchView this$0 -> this$0
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.android.systemui.egg.MLand$Stem$1 -> com.android.systemui.egg.MLand$Stem$1:
    com.android.systemui.egg.MLand$Stem this$1 -> this$1
    void <init>(com.android.systemui.egg.MLand$Stem) -> <init>
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
android.support.v7.widget.AppCompatRadioButton -> android.support.v7.widget.AppCompatRadioButton:
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> mCompoundButtonHelper
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setButtonDrawable(int) -> setButtonDrawable
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo -> android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
    void <init>(android.content.pm.ResolveInfo) -> <init>
    int compareTo(android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
com.android.systemui.statusbar.stack.HeadsUpAppearInterpolator -> com.android.systemui.statusbar.stack.HeadsUpAppearInterpolator:
    void <init>() -> <init>
    android.graphics.Path getAppearPath() -> getAppearPath
com.android.systemui.statusbar.phone.NotificationPanelView$21 -> com.android.systemui.statusbar.phone.NotificationPanelView$21:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
com.android.systemui.volume.VolumeUI -> com.android.systemui.volume.VolumeUI:
    boolean LOGD -> LOGD
    boolean mEnabled -> mEnabled
    android.os.Handler mHandler -> mHandler
    com.android.systemui.volume.VolumeDialogComponent mVolumeComponent -> mVolumeComponent
    void <init>() -> <init>
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    com.android.systemui.volume.VolumeComponent getVolumeComponent() -> getVolumeComponent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setDefaultVolumeController() -> setDefaultVolumeController
    void start() -> start
    void <clinit>() -> <clinit>
com.android.systemui.qs.SecureSetting -> com.android.systemui.qs.SecureSetting:
    android.content.Context mContext -> mContext
    boolean mListening -> mListening
    int mObservedValue -> mObservedValue
    java.lang.String mSettingName -> mSettingName
    int mUserId -> mUserId
    void <init>(android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void setListening(boolean) -> setListening
    void onChange(boolean) -> onChange
    void setUserId(int) -> setUserId
    int getValue() -> getValue
    void setValue(int) -> setValue
    void handleValueChanged(int,boolean) -> handleValueChanged
android.support.v7.view.menu.MenuDialogHelper -> android.support.v7.view.menu.MenuDialogHelper:
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.app.AlertDialog mDialog -> mDialog
    android.support.v7.view.menu.ListMenuPresenter mPresenter -> mPresenter
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void <init>(android.support.v7.view.menu.MenuBuilder) -> <init>
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onClick(android.content.DialogInterface,int) -> onClick
    void dismiss() -> dismiss
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    void show(android.os.IBinder) -> show
com.android.systemui.statusbar.policy.HotspotControllerImpl$OnStartTetheringCallback -> com.android.systemui.statusbar.policy.HotspotControllerImpl$OnStartTetheringCallback:
    com.android.systemui.statusbar.policy.HotspotControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.HotspotControllerImpl) -> <init>
    void onTetheringFailed() -> onTetheringFailed
    void onTetheringStarted() -> onTetheringStarted
    void <init>(com.android.systemui.statusbar.policy.HotspotControllerImpl,com.android.systemui.statusbar.policy.HotspotControllerImpl$OnStartTetheringCallback) -> <init>
com.android.systemui.statusbar.policy.ZenModeControllerImpl$SetupObserver -> com.android.systemui.statusbar.policy.ZenModeControllerImpl$SetupObserver:
    boolean mRegistered -> mRegistered
    android.content.ContentResolver mResolver -> mResolver
    com.android.systemui.statusbar.policy.ZenModeControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.ZenModeControllerImpl,android.os.Handler) -> <init>
    boolean isDeviceProvisioned() -> isDeviceProvisioned
    boolean isUserSetup() -> isUserSetup
    void onChange(boolean,android.net.Uri) -> onChange
    void register() -> register
com.android.systemui.statusbar.ActivatableNotificationView$7 -> com.android.systemui.statusbar.ActivatableNotificationView$7:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.qs.tiles.IntentTile -> com.android.systemui.qs.tiles.IntentTile:
    int mCurrentUserId -> mCurrentUserId
    java.lang.String mIntentPackage -> mIntentPackage
    android.content.Intent mLastIntent -> mLastIntent
    android.app.PendingIntent mOnClick -> mOnClick
    java.lang.String mOnClickUri -> mOnClickUri
    android.app.PendingIntent mOnLongClick -> mOnLongClick
    java.lang.String mOnLongClickUri -> mOnLongClickUri
    android.content.BroadcastReceiver mReceiver -> mReceiver
    com.android.systemui.plugins.qs.QSTile create(com.android.systemui.qs.QSHost,java.lang.String) -> create
    void <init>(com.android.systemui.qs.QSHost,java.lang.String) -> <init>
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleDestroy() -> handleDestroy
    void handleLongClick() -> handleLongClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    void handleUserSwitch(int) -> handleUserSwitch
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void sendIntent(java.lang.String,android.app.PendingIntent,java.lang.String) -> sendIntent
    java.lang.String -get0(com.android.systemui.qs.tiles.IntentTile) -> -get0
    void -wrap0(com.android.systemui.qs.tiles.IntentTile,java.lang.Object) -> -wrap0
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatBaseImpl IMPL -> IMPL
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    void <clinit>() -> <clinit>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    void <init>() -> <init>
android.arch.lifecycle.Lifecycle$Event -> android.arch.lifecycle.Lifecycle$Event:
    android.arch.lifecycle.Lifecycle$Event ON_DESTROY -> ON_DESTROY
    android.arch.lifecycle.Lifecycle$Event ON_CREATE -> ON_CREATE
    android.arch.lifecycle.Lifecycle$Event ON_PAUSE -> ON_PAUSE
    android.arch.lifecycle.Lifecycle$Event[] $VALUES -> $VALUES
    android.arch.lifecycle.Lifecycle$Event ON_RESUME -> ON_RESUME
    android.arch.lifecycle.Lifecycle$Event ON_START -> ON_START
    android.arch.lifecycle.Lifecycle$Event ON_STOP -> ON_STOP
    android.arch.lifecycle.Lifecycle$Event ON_ANY -> ON_ANY
    void <clinit>() -> <clinit>
    android.arch.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    android.arch.lifecycle.Lifecycle$Event[] values() -> values
    void <init>(java.lang.String,int) -> <init>
com.android.systemui.fragments.FragmentHostManager -> com.android.systemui.fragments.FragmentHostManager:
    com.android.settingslib.applications.InterestingConfigChanges mConfigChanges -> mConfigChanges
    android.content.Context mContext -> mContext
    android.app.FragmentController mFragments -> mFragments
    android.os.Handler mHandler -> mHandler
    android.app.FragmentManager$FragmentLifecycleCallbacks mLifecycleCallbacks -> mLifecycleCallbacks
    java.util.HashMap mListeners -> mListeners
    com.android.systemui.fragments.FragmentService mManager -> mManager
    com.android.systemui.fragments.FragmentHostManager$ExtensionFragmentManager mPlugins -> mPlugins
    android.view.View mRootView -> mRootView
    com.android.systemui.fragments.FragmentHostManager get(android.view.View) -> get
    com.android.systemui.fragments.FragmentHostManager addTagListener(java.lang.String,com.android.systemui.fragments.FragmentHostManager$FragmentListener) -> addTagListener
    void removeTagListener(java.lang.String,com.android.systemui.fragments.FragmentHostManager$FragmentListener) -> removeTagListener
    void <init>(android.content.Context,com.android.systemui.fragments.FragmentService,android.view.View) -> <init>
    void createFragmentHost(android.os.Parcelable) -> createFragmentHost
    void destroy() -> destroy
    android.os.Parcelable destroyFragmentHost() -> destroyFragmentHost
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.View findViewById(int) -> findViewById
    com.android.systemui.fragments.FragmentHostManager$ExtensionFragmentManager getExtensionManager() -> getExtensionManager
    android.app.FragmentManager getFragmentManager() -> getFragmentManager
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onFragmentViewCreated(android.app.Fragment) -> onFragmentViewCreated
    void onFragmentViewDestroyed(android.app.Fragment) -> onFragmentViewDestroyed
    void lambda$-com_android_systemui_fragments_FragmentHostManager_5414(java.lang.String,android.app.Fragment,com.android.systemui.fragments.FragmentHostManager$FragmentListener) -> lambda$-com_android_systemui_fragments_FragmentHostManager_5414
    void lambda$-com_android_systemui_fragments_FragmentHostManager_5728(java.lang.String,android.app.Fragment,com.android.systemui.fragments.FragmentHostManager$FragmentListener) -> lambda$-com_android_systemui_fragments_FragmentHostManager_5728
    android.content.Context -get0(com.android.systemui.fragments.FragmentHostManager) -> -get0
    android.os.Handler -get1(com.android.systemui.fragments.FragmentHostManager) -> -get1
    com.android.systemui.fragments.FragmentHostManager$ExtensionFragmentManager -get2(com.android.systemui.fragments.FragmentHostManager) -> -get2
    android.os.Parcelable -wrap0(com.android.systemui.fragments.FragmentHostManager) -> -wrap0
    android.view.View -wrap1(com.android.systemui.fragments.FragmentHostManager,int) -> -wrap1
    void -wrap2(com.android.systemui.fragments.FragmentHostManager,android.os.Parcelable) -> -wrap2
    void -wrap3(com.android.systemui.fragments.FragmentHostManager,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> -wrap3
    void -wrap4(com.android.systemui.fragments.FragmentHostManager,android.app.Fragment) -> -wrap4
    void -wrap5(com.android.systemui.fragments.FragmentHostManager,android.app.Fragment) -> -wrap5
com.android.systemui.volume.Util -> com.android.systemui.volume.Util:
    int[] AUDIO_MANAGER_FLAGS -> AUDIO_MANAGER_FLAGS
    java.lang.String[] AUDIO_MANAGER_FLAG_NAMES -> AUDIO_MANAGER_FLAG_NAMES
    java.text.SimpleDateFormat HMMAA -> HMMAA
    java.lang.String logTag(java.lang.Class) -> logTag
    java.lang.String playbackInfoToString(android.media.session.MediaController$PlaybackInfo) -> playbackInfoToString
    java.lang.String mediaMetadataToString(android.media.MediaMetadata) -> mediaMetadataToString
    java.lang.String playbackStateToString(android.media.session.PlaybackState) -> playbackStateToString
    java.lang.String audioManagerFlagsToString(int) -> audioManagerFlagsToString
    java.lang.String ringerModeToString(int) -> ringerModeToString
    boolean isVoiceCapable(android.content.Context) -> isVoiceCapable
    boolean setText(android.widget.TextView,java.lang.CharSequence) -> setText
    void setVisOrGone(android.view.View,boolean) -> setVisOrGone
    void <init>() -> <init>
    java.lang.String bitFieldToString(int,int[],java.lang.String[]) -> bitFieldToString
    java.lang.CharSequence emptyToNull(java.lang.CharSequence) -> emptyToNull
    java.lang.String playbackInfoTypeToString(int) -> playbackInfoTypeToString
    java.lang.String playbackStateStateToString(int) -> playbackStateStateToString
    java.lang.String volumeProviderControlToString(int) -> volumeProviderControlToString
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.policy.RemoteInputView -> com.android.systemui.statusbar.policy.RemoteInputView:
    java.lang.Object VIEW_TAG -> VIEW_TAG
    com.android.systemui.statusbar.RemoteInputController mController -> mController
    com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText mEditText -> mEditText
    com.android.systemui.statusbar.NotificationData$Entry mEntry -> mEntry
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.widget.ProgressBar mProgressBar -> mProgressBar
    android.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    boolean mRemoved -> mRemoved
    boolean mResetting -> mResetting
    int mRevealCx -> mRevealCx
    int mRevealCy -> mRevealCy
    int mRevealR -> mRevealR
    com.android.systemui.statusbar.stack.ScrollContainer mScrollContainer -> mScrollContainer
    android.view.View mScrollContainerChild -> mScrollContainerChild
    android.widget.ImageButton mSendButton -> mSendButton
    java.lang.Object mToken -> mToken
    com.android.systemui.statusbar.notification.NotificationViewWrapper mWrapper -> mWrapper
    void setRevealParameters(int,int,int) -> setRevealParameters
    void setPendingIntent(android.app.PendingIntent) -> setPendingIntent
    void setRemoteInput(android.app.RemoteInput[],android.app.RemoteInput) -> setRemoteInput
    void focusAnimated() -> focusAnimated
    void onNotificationUpdateOrReset() -> onNotificationUpdateOrReset
    boolean isActive() -> isActive
    android.app.PendingIntent getPendingIntent() -> getPendingIntent
    void dispatchStartTemporaryDetach() -> dispatchStartTemporaryDetach
    void stealFocusFrom(com.android.systemui.statusbar.policy.RemoteInputView) -> stealFocusFrom
    void dispatchFinishTemporaryDetach() -> dispatchFinishTemporaryDetach
    com.android.systemui.statusbar.policy.RemoteInputView inflate(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.NotificationData$Entry,com.android.systemui.statusbar.RemoteInputController) -> inflate
    void setWrapper(com.android.systemui.statusbar.notification.NotificationViewWrapper) -> setWrapper
    boolean updatePendingIntentFromActions(android.app.Notification$Action[]) -> updatePendingIntentFromActions
    void focus() -> focus
    void close() -> close
    void setRemoved() -> setRemoved
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void findScrollContainer() -> findScrollContainer
    void onAttachedToWindow() -> onAttachedToWindow
    void onClick(android.view.View) -> onClick
    void onDefocus(boolean) -> onDefocus
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean requestScrollTo() -> requestScrollTo
    void reset() -> reset
    void sendRemoteInput() -> sendRemoteInput
    void updateSendButton() -> updateSendButton
    void <clinit>() -> <clinit>
    com.android.systemui.statusbar.policy.RemoteInputView$RemoteEditText -get0(com.android.systemui.statusbar.policy.RemoteInputView) -> -get0
    com.android.systemui.statusbar.NotificationData$Entry -get1(com.android.systemui.statusbar.policy.RemoteInputView) -> -get1
    boolean -get2(com.android.systemui.statusbar.policy.RemoteInputView) -> -get2
    com.android.systemui.statusbar.notification.NotificationViewWrapper -get3(com.android.systemui.statusbar.policy.RemoteInputView) -> -get3
    void -wrap0(com.android.systemui.statusbar.policy.RemoteInputView,boolean) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.RemoteInputView) -> -wrap1
android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor -> android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor:
    boolean isItalic(java.lang.Object) -> isItalic
    int getWeight(java.lang.Object) -> getWeight
android.support.v7.widget.ResourcesWrapper -> android.support.v7.widget.ResourcesWrapper:
    android.content.res.Resources mResources -> mResources
    void <init>(android.content.res.Resources) -> <init>
    float getDimension(int) -> getDimension
    android.content.res.Configuration getConfiguration() -> getConfiguration
    android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    java.lang.CharSequence getText(int) -> getText
    java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    boolean getBoolean(int) -> getBoolean
    java.lang.String getString(int) -> getString
    void getValue(int,android.util.TypedValue,boolean) -> getValue
    java.lang.String getResourcePackageName(int) -> getResourcePackageName
    int getInteger(int) -> getInteger
    java.lang.String getString(int,java.lang.Object[]) -> getString
    java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    java.lang.String getQuantityString(int,int) -> getQuantityString
    void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
    int[] getIntArray(int) -> getIntArray
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    float getFraction(int,int,int) -> getFraction
    android.content.res.XmlResourceParser getLayout(int) -> getLayout
    void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    java.lang.String getResourceTypeName(int) -> getResourceTypeName
    android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    android.graphics.Movie getMovie(int) -> getMovie
    java.io.InputStream openRawResource(int) -> openRawResource
    int getColor(int) -> getColor
    int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    android.content.res.XmlResourceParser getXml(int) -> getXml
    android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    java.lang.String getResourceEntryName(int) -> getResourceEntryName
    android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    java.lang.CharSequence[] getTextArray(int) -> getTextArray
    java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    java.lang.String[] getStringArray(int) -> getStringArray
    java.lang.String getResourceName(int) -> getResourceName
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
com.android.systemui.DockedStackExistsListener -> com.android.systemui.DockedStackExistsListener:
    boolean mLastExists -> mLastExists
    java.util.ArrayList sCallbacks -> sCallbacks
    void <init>() -> <init>
    void onDockedStackExistsChanged(boolean) -> onDockedStackExistsChanged
    void register(java.util.function.Consumer) -> register
    void <clinit>() -> <clinit>
    boolean lambda$-com_android_systemui_DockedStackExistsListener_2817(boolean,java.lang.ref.WeakReference) -> lambda$-com_android_systemui_DockedStackExistsListener_2817
    void -wrap0(boolean) -> -wrap0
com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -> com.android.settingslib.bluetooth.CachedBluetoothDeviceManager:
    java.util.List mCachedDevices -> mCachedDevices
    android.content.Context mContext -> mContext
    com.android.settingslib.bluetooth.LocalBluetoothManager mBtManager -> mBtManager
    void onDeviceNameUpdated(android.bluetooth.BluetoothDevice) -> onDeviceNameUpdated
    com.android.settingslib.bluetooth.CachedBluetoothDevice addDevice(com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.LocalBluetoothProfileManager,android.bluetooth.BluetoothDevice) -> addDevice
    boolean onDeviceDisappeared(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> onDeviceDisappeared
    void clearNonBondedDevices() -> clearNonBondedDevices
    void onScanningStateChanged(boolean) -> onScanningStateChanged
    com.android.settingslib.bluetooth.CachedBluetoothDevice findDevice(android.bluetooth.BluetoothDevice) -> findDevice
    void onUuidChanged(android.bluetooth.BluetoothDevice) -> onUuidChanged
    void onBtClassChanged(android.bluetooth.BluetoothDevice) -> onBtClassChanged
    java.util.Collection getCachedDevicesCopy() -> getCachedDevicesCopy
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager) -> <init>
    void onBluetoothStateChanged(int) -> onBluetoothStateChanged
android.support.v4.app.FragmentTransition$3 -> android.support.v4.app.FragmentTransition$3:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.graphics.Rect val$epicenter -> val$epicenter
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.support.v4.app.FragmentTransitionImpl val$impl -> val$impl
    boolean val$inIsPop -> val$inIsPop
    android.view.View val$epicenterView -> val$epicenterView
    android.support.v4.util.ArrayMap val$inSharedElements -> val$inSharedElements
    void run() -> run
    void <init>(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,android.view.View,android.support.v4.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
android.support.v17.leanback.widget.ItemAlignment$Axis -> android.support.v17.leanback.widget.ItemAlignment$Axis:
    int mOrientation -> mOrientation
    int getAlignmentPosition(android.view.View) -> getAlignmentPosition
    void <init>(int) -> <init>
android.support.v4.view.ViewCompat$ViewCompatApi15Impl -> android.support.v4.view.ViewCompat$ViewCompatApi15Impl:
    void <init>() -> <init>
    boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
com.android.systemui.pip.phone.-$Lambda$cKgf7Q4SVSxRDB6DeNId7iYTams -> com.android.systemui.pip.phone.-$Lambda$cKgf7Q4SVSxRDB6DeNId7iYTams:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void run() -> run
com.android.systemui.keyguard.ScreenLifecycle$Observer -> com.android.systemui.keyguard.ScreenLifecycle$Observer:
    void onScreenTurnedOff() -> onScreenTurnedOff
    void onScreenTurnedOn() -> onScreenTurnedOn
    void onScreenTurningOff() -> onScreenTurningOff
    void onScreenTurningOn() -> onScreenTurningOn
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.stackdivider.WindowManagerProxy$5 -> com.android.systemui.stackdivider.WindowManagerProxy$5:
    com.android.systemui.stackdivider.WindowManagerProxy this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.WindowManagerProxy) -> <init>
    void run() -> run
com.android.systemui.recents.model.-$Lambda$XT6XVrVkUxqNS951SJggsQ_XZYs -> com.android.systemui.recents.model.-$Lambda$XT6XVrVkUxqNS951SJggsQ_XZYs:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(boolean) -> $m$0
    void onIdleChanged(boolean) -> onIdleChanged
com.android.systemui.recents.RecentsConfiguration -> com.android.systemui.recents.RecentsConfiguration:
    boolean isLowRamDevice -> isLowRamDevice
    boolean isGridEnabled -> isGridEnabled
    boolean isXLargeScreen -> isXLargeScreen
    boolean isLargeScreen -> isLargeScreen
    int svelteLevel -> svelteLevel
    boolean dragToSplitEnabled -> dragToSplitEnabled
    boolean fakeShadows -> fakeShadows
    android.content.Context mAppContext -> mAppContext
    com.android.systemui.recents.RecentsActivityLaunchState mLaunchState -> mLaunchState
    int smallestWidth -> smallestWidth
    com.android.systemui.recents.model.TaskStack$DockState[] getDockStatesForCurrentOrientation() -> getDockStatesForCurrentOrientation
    com.android.systemui.recents.RecentsActivityLaunchState getLaunchState() -> getLaunchState
    void <init>(android.content.Context) -> <init>
com.android.systemui.statusbar.car.UserGridView$1 -> com.android.systemui.statusbar.car.UserGridView$1:
    com.android.systemui.statusbar.car.UserGridView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.UserGridView) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.systemui.globalactions.GlobalActionsDialog$11 -> com.android.systemui.globalactions.GlobalActionsDialog$11:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,int,int) -> <init>
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$AnimationEvent -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$AnimationEvent:
    com.android.systemui.statusbar.stack.AnimationFilter filter -> filter
    int animationType -> animationType
    android.view.View changingView -> changingView
    android.view.View viewAfterChangingView -> viewAfterChangingView
    boolean headsUpFromBottom -> headsUpFromBottom
    com.android.systemui.statusbar.stack.AnimationFilter[] FILTERS -> FILTERS
    int[] LENGTHS -> LENGTHS
    int darkAnimationOriginIndex -> darkAnimationOriginIndex
    long eventStartTime -> eventStartTime
    long length -> length
    long combineLength(java.util.ArrayList) -> combineLength
    void <init>(android.view.View,int) -> <init>
    void <init>(android.view.View,int,com.android.systemui.statusbar.stack.AnimationFilter) -> <init>
    void <init>(android.view.View,int,long) -> <init>
    void <init>(android.view.View,int,long,com.android.systemui.statusbar.stack.AnimationFilter) -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.policy.KeyguardUserSwitcher -> com.android.systemui.statusbar.policy.KeyguardUserSwitcher:
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher$Adapter mAdapter -> mAdapter
    boolean mAnimating -> mAnimating
    com.android.settingslib.animation.AppearAnimationUtils mAppearAnimationUtils -> mAppearAnimationUtils
    com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim mBackground -> mBackground
    android.animation.ObjectAnimator mBgAnimator -> mBgAnimator
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    com.android.systemui.statusbar.phone.KeyguardStatusBarView mStatusBarView -> mStatusBarView
    android.view.ViewGroup mUserSwitcher -> mUserSwitcher
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher$Container mUserSwitcherContainer -> mUserSwitcherContainer
    com.android.systemui.statusbar.policy.UserSwitcherController mUserSwitcherController -> mUserSwitcherController
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void <init>(android.content.Context,android.view.ViewStub,com.android.systemui.statusbar.phone.KeyguardStatusBarView,com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void setKeyguard(boolean,boolean) -> setKeyguard
    boolean hideIfNotSimple(boolean) -> hideIfNotSimple
    void cancelAnimations() -> cancelAnimations
    boolean hide(boolean) -> hide
    boolean isAnimating() -> isAnimating
    void refresh() -> refresh
    void reinflateViews() -> reinflateViews
    boolean shouldExpandByDefault() -> shouldExpandByDefault
    void show(boolean) -> show
    void startAppearAnimation() -> startAppearAnimation
    void startDisappearAnimation() -> startDisappearAnimation
    android.view.ViewGroup -get0(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> -get0
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher$Container -get1(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> -get1
    boolean -set0(com.android.systemui.statusbar.policy.KeyguardUserSwitcher,boolean) -> -set0
    android.animation.ObjectAnimator -set1(com.android.systemui.statusbar.policy.KeyguardUserSwitcher,android.animation.ObjectAnimator) -> -set1
    void -wrap0(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> -wrap0
android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    android.support.v7.view.menu.ActionMenuItemView this$0 -> this$0
    void <init>(android.support.v7.view.menu.ActionMenuItemView) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
com.android.systemui.classifier.SpeedAnglesClassifier$Data -> com.android.systemui.classifier.SpeedAnglesClassifier$Data:
    float ANGLE_DEVIATION -> ANGLE_DEVIATION
    float DURATION_SCALE -> DURATION_SCALE
    float LENGTH_SCALE -> LENGTH_SCALE
    float mAcceleratingAngles -> mAcceleratingAngles
    float mAnglesCount -> mAnglesCount
    float mCount -> mCount
    float mDist -> mDist
    java.util.List mLastThreePoints -> mLastThreePoints
    float mPreviousAngle -> mPreviousAngle
    com.android.systemui.classifier.Point mPreviousPoint -> mPreviousPoint
    float mSum -> mSum
    float mSumSquares -> mSumSquares
    void <init>() -> <init>
    void addPoint(com.android.systemui.classifier.Point) -> addPoint
    float getAnglesPercentage() -> getAnglesPercentage
    float getAnglesVariance() -> getAnglesVariance
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    int[] ATTRS -> ATTRS
    int mGravity -> mGravity
    android.support.v4.view.ViewPager mPager -> mPager
    boolean mUpdatingText -> mUpdatingText
    android.widget.TextView mNextText -> mNextText
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    android.widget.TextView mPrevText -> mPrevText
    boolean mUpdatingPositions -> mUpdatingPositions
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    android.widget.TextView mCurrText -> mCurrText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    int mScaledTextSpacing -> mScaledTextSpacing
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] TEXT_ATTRS -> TEXT_ATTRS
    void onAttachedToWindow() -> onAttachedToWindow
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void onMeasure(int,int) -> onMeasure
    int getMinHeight() -> getMinHeight
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void requestLayout() -> requestLayout
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void onLayout(boolean,int,int,int,int) -> onLayout
    void <clinit>() -> <clinit>
    void setTextSpacing(int) -> setTextSpacing
    void setTextSize(int,float) -> setTextSize
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.systemui.SystemUIApplication$2 -> com.android.systemui.SystemUIApplication$2:
    android.util.ArraySet mOverlays -> mOverlays
    com.android.systemui.SystemUIApplication this$0 -> this$0
    void <init>(com.android.systemui.SystemUIApplication) -> <init>
    void onPluginConnected(com.android.systemui.plugins.OverlayPlugin,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.OverlayPlugin) -> onPluginDisconnected
    void lambda$-com_android_systemui_SystemUIApplication$2_9818(boolean) -> lambda$-com_android_systemui_SystemUIApplication$2_9818
    void lambda$-com_android_systemui_SystemUIApplication$2_9877(boolean,com.android.systemui.plugins.OverlayPlugin) -> lambda$-com_android_systemui_SystemUIApplication$2_9877
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
android.support.v7.media.MediaRouter$RouteInfo$PlaybackType -> android.support.v7.media.MediaRouter$RouteInfo$PlaybackType:
com.android.systemui.statusbar.policy.SecurityControllerImpl -> com.android.systemui.statusbar.policy.SecurityControllerImpl:
    boolean DEBUG -> DEBUG
    android.net.NetworkRequest REQUEST -> REQUEST
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    java.util.ArrayList mCallbacks -> mCallbacks
    android.net.ConnectivityManager mConnectivityManager -> mConnectivityManager
    android.net.IConnectivityManager mConnectivityManagerService -> mConnectivityManagerService
    android.content.Context mContext -> mContext
    int mCurrentUserId -> mCurrentUserId
    android.util.SparseArray mCurrentVpns -> mCurrentVpns
    android.app.admin.DevicePolicyManager mDevicePolicyManager -> mDevicePolicyManager
    android.util.ArrayMap mHasCACerts -> mHasCACerts
    android.net.ConnectivityManager$NetworkCallback mNetworkCallback -> mNetworkCallback
    android.content.pm.PackageManager mPackageManager -> mPackageManager
    android.os.UserManager mUserManager -> mUserManager
    int mVpnUserId -> mVpnUserId
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,com.android.systemui.statusbar.policy.SecurityController$SecurityControllerCallback) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.SecurityController$SecurityControllerCallback) -> addCallback
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void fireCallbacks() -> fireCallbacks
    java.lang.CharSequence getDeviceOwnerOrganizationName() -> getDeviceOwnerOrganizationName
    java.lang.String getNameForVpnConfig(com.android.internal.net.VpnConfig,android.os.UserHandle) -> getNameForVpnConfig
    java.lang.String getPackageNameForVpnConfig(com.android.internal.net.VpnConfig) -> getPackageNameForVpnConfig
    java.lang.String getPrimaryVpnName() -> getPrimaryVpnName
    java.lang.CharSequence getWorkProfileOrganizationName() -> getWorkProfileOrganizationName
    int getWorkProfileUserId(int) -> getWorkProfileUserId
    java.lang.String getWorkProfileVpnName() -> getWorkProfileVpnName
    boolean hasCACertInCurrentUser() -> hasCACertInCurrentUser
    boolean hasCACertInWorkProfile() -> hasCACertInWorkProfile
    boolean hasWorkProfile() -> hasWorkProfile
    boolean isDeviceManaged() -> isDeviceManaged
    boolean isNetworkLoggingEnabled() -> isNetworkLoggingEnabled
    boolean isVpnBranded() -> isVpnBranded
    boolean isVpnEnabled() -> isVpnEnabled
    boolean isVpnPackageBranded(java.lang.String) -> isVpnPackageBranded
    void onUserSwitched(int) -> onUserSwitched
    void refreshCACerts() -> refreshCACerts
    void removeCallback(com.android.systemui.statusbar.policy.SecurityController$SecurityControllerCallback) -> removeCallback
    void updateState() -> updateState
    void <clinit>() -> <clinit>
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    boolean -get0() -> -get0
    android.content.Context -get1(com.android.systemui.statusbar.policy.SecurityControllerImpl) -> -get1
    android.util.ArrayMap -get2(com.android.systemui.statusbar.policy.SecurityControllerImpl) -> -get2
    void -wrap0(com.android.systemui.statusbar.policy.SecurityControllerImpl) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.SecurityControllerImpl) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.policy.SecurityControllerImpl) -> -wrap2
android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9$1 -> android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9$1:
    android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 this$1 -> this$1
    void <init>(android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.android.systemui.recents.views.TaskStackView$2 -> com.android.systemui.recents.views.TaskStackView$2:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskStackView) -> <init>
    boolean acceptsDrop(int,int,int,int,android.graphics.Rect,boolean) -> acceptsDrop
android.support.v7.widget.RecyclerView$State -> android.support.v7.widget.RecyclerView$State:
    android.util.SparseArray mData -> mData
    int mDeletedInvisibleItemCountSincePreviousLayout -> mDeletedInvisibleItemCountSincePreviousLayout
    long mFocusedItemId -> mFocusedItemId
    int mFocusedItemPosition -> mFocusedItemPosition
    boolean mTrackOldChangeHolders -> mTrackOldChangeHolders
    int mFocusedSubChildId -> mFocusedSubChildId
    int mTargetPosition -> mTargetPosition
    int mRemainingScrollHorizontal -> mRemainingScrollHorizontal
    int mPreviousLayoutItemCount -> mPreviousLayoutItemCount
    boolean mInPreLayout -> mInPreLayout
    int mRemainingScrollVertical -> mRemainingScrollVertical
    boolean mRunSimpleAnimations -> mRunSimpleAnimations
    boolean mStructureChanged -> mStructureChanged
    int mItemCount -> mItemCount
    int mLayoutStep -> mLayoutStep
    boolean mRunPredictiveAnimations -> mRunPredictiveAnimations
    boolean mIsMeasuring -> mIsMeasuring
    int getRemainingScrollHorizontal() -> getRemainingScrollHorizontal
    void assertLayoutStep(int) -> assertLayoutStep
    boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    boolean didStructureChange() -> didStructureChange
    void prepareForNestedPrefetch(android.support.v7.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    int getItemCount() -> getItemCount
    java.lang.String toString() -> toString
    boolean isPreLayout() -> isPreLayout
    int getRemainingScrollVertical() -> getRemainingScrollVertical
    int -set0(android.support.v7.widget.RecyclerView$State,int) -> -set0
    void <init>() -> <init>
android.support.v17.leanback.widget.FacetProviderAdapter -> android.support.v17.leanback.widget.FacetProviderAdapter:
    android.support.v17.leanback.widget.FacetProvider getFacetProvider(int) -> getFacetProvider
com.android.systemui.R$styleable -> com.android.systemui.R$styleable:
    int[] ToggleSliderView -> ToggleSliderView
    int[] BatteryMeterView -> BatteryMeterView
    int[] KeyButtonView -> KeyButtonView
    int[] DeadZone -> DeadZone
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] UserDetailItemView -> UserDetailItemView
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int[] ActionMenuItemView -> ActionMenuItemView
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int[] ActivityChooserView -> ActivityChooserView
    int[] AlertDialog -> AlertDialog
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int[] AppCompatTextView -> AppCompatTextView
    int[] AppCompatTheme -> AppCompatTheme
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] BackgroundStyle -> BackgroundStyle
    int[] ButtonBarLayout -> ButtonBarLayout
    int[] CarrierText -> CarrierText
    int[] CheckBoxPreference -> CheckBoxPreference
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int[] CompoundButton -> CompoundButton
    int[] DateView -> DateView
    int[] DialogPreference -> DialogPreference
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int[] ListPopupWindow -> ListPopupWindow
    int[] ListPreference -> ListPreference
    int[] MediaRouteButton -> MediaRouteButton
    int[] MenuGroup -> MenuGroup
    int[] MenuItem -> MenuItem
    int[] MenuView -> MenuView
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] NumPadKey -> NumPadKey
    int[] PagingIndicator -> PagingIndicator
    int[] PasswordTextView -> PasswordTextView
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int[] PreferenceGroup -> PreferenceGroup
    int[] PreferenceImageView -> PreferenceImageView
    int[] PreferenceTheme -> PreferenceTheme
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int[] RecyclerView -> RecyclerView
    int[] RestrictedPreference -> RestrictedPreference
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int[] SearchView -> SearchView
    int[] SeekBarPreference -> SeekBarPreference
    int[] Spinner -> Spinner
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int[] TextAppearance -> TextAppearance
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int[] ViewStubCompat -> ViewStubCompat
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int[] lbBaseGridView -> lbBaseGridView
    int[] lbDatePicker -> lbDatePicker
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int[] lbImageCardView -> lbImageCardView
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int[] lbSearchOrbView -> lbSearchOrbView
    int[] lbSlide -> lbSlide
    int[] lbTimePicker -> lbTimePicker
    int[] lbVerticalGridView -> lbVerticalGridView
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.qs.QSHost -> com.android.systemui.qs.QSHost:
    void collapsePanels() -> collapsePanels
    android.content.Context getContext() -> getContext
    void openPanels() -> openPanels
    void removeTile(java.lang.String) -> removeTile
    void warn(java.lang.String,java.lang.Throwable) -> warn
    int indexOf(java.lang.String) -> indexOf
    com.android.systemui.qs.external.TileServices getTileServices() -> getTileServices
com.android.systemui.volume.VolumeDialogMotion$7$1 -> com.android.systemui.volume.VolumeDialogMotion$7$1:
    com.android.systemui.volume.VolumeDialogMotion$7 this$1 -> this$1
    java.lang.Runnable val$onComplete -> val$onComplete
    void <init>(com.android.systemui.volume.VolumeDialogMotion$7,java.lang.Runnable) -> <init>
    void run() -> run
com.android.systemui.SysUiServiceProvider -> com.android.systemui.SysUiServiceProvider:
    java.lang.Object getComponent(android.content.Context,java.lang.Class) -> getComponent
    java.lang.Object getComponent(java.lang.Class) -> getComponent
com.android.systemui.util.leak.-$Lambda$RsX3wyQZkYTyPR7kzc5MrLkubWU -> com.android.systemui.util.leak.-$Lambda$RsX3wyQZkYTyPR7kzc5MrLkubWU:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void run() -> run
com.android.systemui.media.NotificationPlayer$CmdThread -> com.android.systemui.media.NotificationPlayer$CmdThread:
    com.android.systemui.media.NotificationPlayer this$0 -> this$0
    void <init>(com.android.systemui.media.NotificationPlayer) -> <init>
    void run() -> run
com.android.keyguard.CarrierText$CarrierTextTransformationMethod -> com.android.keyguard.CarrierText$CarrierTextTransformationMethod:
    boolean mAllCaps -> mAllCaps
    java.util.Locale mLocale -> mLocale
    com.android.keyguard.CarrierText this$0 -> this$0
    void <init>(com.android.keyguard.CarrierText,android.content.Context,boolean) -> <init>
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    java.lang.String toString() -> toString
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
com.android.systemui.statusbar.policy.KeyguardUserSwitcher$1 -> com.android.systemui.statusbar.policy.KeyguardUserSwitcher$1:
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> <init>
    void onChanged() -> onChanged
com.android.systemui.statusbar.phone.StatusBar$9 -> com.android.systemui.statusbar.phone.StatusBar$9:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    int mWeight -> mWeight
    int mResourceId -> mResourceId
    java.lang.String mFileName -> mFileName
    boolean mItalic -> mItalic
    boolean isItalic() -> isItalic
    void <init>(java.lang.String,int,boolean,int) -> <init>
    int getResourceId() -> getResourceId
    int getWeight() -> getWeight
    java.lang.String getFileName() -> getFileName
com.android.systemui.statusbar.ActivatableNotificationView$10 -> com.android.systemui.statusbar.ActivatableNotificationView$10:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.external.TileServices -> com.android.systemui.qs.external.TileServices:
    java.util.Comparator SERVICE_SORT -> SERVICE_SORT
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.android.systemui.qs.QSTileHost mHost -> mHost
    android.os.Handler mMainHandler -> mMainHandler
    int mMaxBound -> mMaxBound
    android.content.BroadcastReceiver mRequestListeningReceiver -> mRequestListeningReceiver
    android.util.ArrayMap mServices -> mServices
    android.util.ArrayMap mTiles -> mTiles
    android.util.ArrayMap mTokenMap -> mTokenMap
    void <init>(com.android.systemui.qs.QSTileHost,android.os.Looper) -> <init>
    void freeService(com.android.systemui.qs.external.CustomTile,com.android.systemui.qs.external.TileServiceManager) -> freeService
    android.content.Context getContext() -> getContext
    com.android.systemui.qs.QSTileHost getHost() -> getHost
    android.service.quicksettings.Tile getTile(android.os.IBinder) -> getTile
    com.android.systemui.qs.external.CustomTile getTileForComponent(android.content.ComponentName) -> getTileForComponent
    com.android.systemui.qs.external.CustomTile getTileForToken(android.os.IBinder) -> getTileForToken
    com.android.systemui.qs.external.TileServiceManager getTileWrapper(com.android.systemui.qs.external.CustomTile) -> getTileWrapper
    boolean isLocked() -> isLocked
    boolean isSecure() -> isSecure
    com.android.systemui.qs.external.TileServiceManager onCreateTileService(android.content.ComponentName,android.service.quicksettings.Tile) -> onCreateTileService
    void onDialogHidden(android.os.IBinder) -> onDialogHidden
    void onShowDialog(android.os.IBinder) -> onShowDialog
    void onStartActivity(android.os.IBinder) -> onStartActivity
    void onStartSuccessful(android.os.IBinder) -> onStartSuccessful
    void recalculateBindAllowance() -> recalculateBindAllowance
    void requestListening(android.content.ComponentName) -> requestListening
    void startUnlockAndRun(android.os.IBinder) -> startUnlockAndRun
    void updateQsTile(android.service.quicksettings.Tile,android.os.IBinder) -> updateQsTile
    void updateStatusIcon(android.os.IBinder,android.graphics.drawable.Icon,java.lang.String) -> updateStatusIcon
    void verifyCaller(com.android.systemui.qs.external.CustomTile) -> verifyCaller
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_qs_external_TileServices_3855(java.lang.String) -> lambda$-com_android_systemui_qs_external_TileServices_3855
    com.android.systemui.qs.QSTileHost -get0(com.android.systemui.qs.external.TileServices) -> -get0
    void -wrap0(com.android.systemui.qs.external.TileServices,android.content.ComponentName) -> -wrap0
com.android.systemui.usb.StorageNotification$2 -> com.android.systemui.usb.StorageNotification$2:
    com.android.systemui.usb.StorageNotification this$0 -> this$0
    void <init>(com.android.systemui.usb.StorageNotification) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.tuner.TunerService -> com.android.systemui.tuner.TunerService:
    void addTunable(com.android.systemui.tuner.TunerService$Tunable,java.lang.String[]) -> addTunable
    void removeTunable(com.android.systemui.tuner.TunerService$Tunable) -> removeTunable
    java.lang.String getValue(java.lang.String) -> getValue
    void <init>() -> <init>
    java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    boolean isTunerEnabled(android.content.Context) -> isTunerEnabled
    void showResetRequest(android.content.Context,java.lang.Runnable) -> showResetRequest
    void setTunerEnabled(android.content.Context,boolean) -> setTunerEnabled
    int getValue(java.lang.String,int) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
    void clearAll() -> clearAll
    void setValue(java.lang.String,int) -> setValue
    android.content.Context userContext(android.content.Context) -> userContext
com.android.systemui.volume.VolumeDialogImpl$1 -> com.android.systemui.volume.VolumeDialogImpl$1:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void onAccessibilityModeChanged(java.lang.Boolean) -> onAccessibilityModeChanged
    void onConfigurationChanged() -> onConfigurationChanged
    void onDismissRequested(int) -> onDismissRequested
    void onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    void onScreenOff() -> onScreenOff
    void onShowRequested(int) -> onShowRequested
    void onShowSafetyWarning(int) -> onShowSafetyWarning
    void onShowSilentHint() -> onShowSilentHint
    void onShowVibrateHint() -> onShowVibrateHint
    void onStateChanged(com.android.systemui.plugins.VolumeDialogController$State) -> onStateChanged
android.support.v4.view.TintableBackgroundView -> android.support.v4.view.TintableBackgroundView:
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
android.support.v4.hardware.display.DisplayManagerCompat$DisplayManagerCompatApi17Impl -> android.support.v4.hardware.display.DisplayManagerCompat$DisplayManagerCompatApi17Impl:
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    void <init>(android.content.Context) -> <init>
com.android.keyguard.KeyguardHostView$1 -> com.android.keyguard.KeyguardHostView$1:
    com.android.keyguard.KeyguardHostView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardHostView) -> <init>
    void onTrustGrantedWithFlags(int,int) -> onTrustGrantedWithFlags
    void onUserSwitchComplete(int) -> onUserSwitchComplete
com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl$Default -> com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl$Default:
    java.util.function.Supplier mSupplier -> mSupplier
    com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl this$1 -> this$1
    void <init>(com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl,java.util.function.Supplier) -> <init>
    void destroy() -> destroy
    java.lang.Object get() -> get
    int sortOrder() -> sortOrder
android.support.v7.widget.FastScroller$AnimationState -> android.support.v7.widget.FastScroller$AnimationState:
com.android.settingslib.animation.AppearAnimationCreator -> com.android.settingslib.animation.AppearAnimationCreator:
    void createAnimation(java.lang.Object,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable) -> createAnimation
com.android.systemui.plugins.DozeServicePlugin -> com.android.systemui.plugins.DozeServicePlugin:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    void onDreamingStopped() -> onDreamingStopped
    void setDozeRequester(com.android.systemui.plugins.DozeServicePlugin$RequestDoze) -> setDozeRequester
    void onDreamingStarted() -> onDreamingStarted
android.support.v7.widget.LinearLayoutManager$AnchorInfo -> android.support.v7.widget.LinearLayoutManager$AnchorInfo:
    int mCoordinate -> mCoordinate
    int mPosition -> mPosition
    boolean mLayoutFromEnd -> mLayoutFromEnd
    boolean mValid -> mValid
    android.support.v7.widget.LinearLayoutManager this$0 -> this$0
    void <init>(android.support.v7.widget.LinearLayoutManager) -> <init>
    void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    java.lang.String toString() -> toString
    void assignFromView(android.view.View) -> assignFromView
    boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State) -> isViewValidAsAnchor
    void reset() -> reset
    void assignFromViewAndKeepVisibleRect(android.view.View) -> assignFromViewAndKeepVisibleRect
com.android.settingslib.RestrictedPreferenceHelper -> com.android.settingslib.RestrictedPreferenceHelper:
    android.content.Context mContext -> mContext
    boolean mDisabledByAdmin -> mDisabledByAdmin
    boolean mUseAdminDisabledSummary -> mUseAdminDisabledSummary
    java.lang.String mAttrUserRestriction -> mAttrUserRestriction
    com.android.settingslib.RestrictedLockUtils$EnforcedAdmin mEnforcedAdmin -> mEnforcedAdmin
    android.support.v7.preference.Preference mPreference -> mPreference
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    void checkRestrictionAndSetDisabled(java.lang.String,int) -> checkRestrictionAndSetDisabled
    boolean performClick() -> performClick
    void useAdminDisabledSummary(boolean) -> useAdminDisabledSummary
    void onAttachedToHierarchy() -> onAttachedToHierarchy
    void <init>(android.content.Context,android.support.v7.preference.Preference,android.util.AttributeSet) -> <init>
    boolean setDisabledByAdmin(com.android.settingslib.RestrictedLockUtils$EnforcedAdmin) -> setDisabledByAdmin
    boolean isDisabledByAdmin() -> isDisabledByAdmin
com.android.systemui.RoundedCorners -> com.android.systemui.RoundedCorners:
    android.view.View mBottomOverlay -> mBottomOverlay
    float mDensity -> mDensity
    android.view.View mOverlay -> mOverlay
    int mRoundedDefault -> mRoundedDefault
    void <init>() -> <init>
    android.view.WindowManager$LayoutParams getWindowLayoutParams() -> getWindowLayoutParams
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void setSize(android.view.View,int) -> setSize
    void setupPadding(int) -> setupPadding
    void setupRounding() -> setupRounding
    void start() -> start
    android.view.View -get0(com.android.systemui.RoundedCorners) -> -get0
    android.view.View -get1(com.android.systemui.RoundedCorners) -> -get1
com.android.systemui.recents.events.EventHandlerMethod -> com.android.systemui.recents.events.EventHandlerMethod:
    java.lang.Class eventType -> eventType
    java.lang.reflect.Method mMethod -> mMethod
    void <init>(java.lang.reflect.Method,java.lang.Class) -> <init>
    void invoke(java.lang.Object,com.android.systemui.recents.events.EventBus$Event) -> invoke
    java.lang.String toString() -> toString
com.android.systemui.statusbar.phone.PanelView$7 -> com.android.systemui.statusbar.phone.PanelView$7:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    java.lang.Runnable val$onAnimationFinished -> val$onAnimationFinished
    void <init>(com.android.systemui.statusbar.phone.PanelView,java.lang.Runnable) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.NotificationData$1 -> com.android.systemui.statusbar.NotificationData$1:
    android.service.notification.NotificationListenerService$Ranking mRankingA -> mRankingA
    android.service.notification.NotificationListenerService$Ranking mRankingB -> mRankingB
    com.android.systemui.statusbar.NotificationData this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationData) -> <init>
    int compare(com.android.systemui.statusbar.NotificationData$Entry,com.android.systemui.statusbar.NotificationData$Entry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.egg.MLand$GameView -> com.android.systemui.egg.MLand$GameView:
    void step(long,long,float,float) -> step
com.android.systemui.statusbar.notification.VisualStabilityManager -> com.android.systemui.statusbar.notification.VisualStabilityManager:
    android.support.v4.util.ArraySet mAddedChildren -> mAddedChildren
    android.support.v4.util.ArraySet mAllowedReorderViews -> mAllowedReorderViews
    java.util.ArrayList mCallbacks -> mCallbacks
    android.support.v4.util.ArraySet mLowPriorityReorderingViews -> mLowPriorityReorderingViews
    boolean mPanelExpanded -> mPanelExpanded
    boolean mPulsing -> mPulsing
    boolean mReorderingAllowed -> mReorderingAllowed
    boolean mScreenOn -> mScreenOn
    com.android.systemui.statusbar.notification.VisibilityLocationProvider mVisibilityLocationProvider -> mVisibilityLocationProvider
    boolean canReorderNotification(com.android.systemui.statusbar.ExpandableNotificationRow) -> canReorderNotification
    void addReorderingAllowedCallback(com.android.systemui.statusbar.notification.VisualStabilityManager$Callback) -> addReorderingAllowedCallback
    boolean isReorderingAllowed() -> isReorderingAllowed
    void setPulsing(boolean) -> setPulsing
    void setScreenOn(boolean) -> setScreenOn
    void <init>() -> <init>
    void setVisibilityLocationProvider(com.android.systemui.statusbar.notification.VisibilityLocationProvider) -> setVisibilityLocationProvider
    void onLowPriorityUpdated(com.android.systemui.statusbar.NotificationData$Entry) -> onLowPriorityUpdated
    void notifyViewAddition(android.view.View) -> notifyViewAddition
    void onReorderingFinished() -> onReorderingFinished
    void setPanelExpanded(boolean) -> setPanelExpanded
    void notifyCallbacks() -> notifyCallbacks
    void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> onHeadsUpStateChanged
    void updateReorderingAllowed() -> updateReorderingAllowed
android.support.v7.recyclerview.R$dimen -> android.support.v7.recyclerview.R$dimen:
    int fastscroll_default_thickness -> fastscroll_default_thickness
    int fastscroll_margin -> fastscroll_margin
    int fastscroll_minimum_range -> fastscroll_minimum_range
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    void <init>() -> <init>
com.android.systemui.statusbar.phone.FingerprintUnlockController -> com.android.systemui.statusbar.phone.FingerprintUnlockController:
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.phone.DozeScrimController mDozeScrimController -> mDozeScrimController
    android.os.Handler mHandler -> mHandler
    boolean mHasScreenTurnedOnSinceAuthenticating -> mHasScreenTurnedOnSinceAuthenticating
    com.android.systemui.keyguard.KeyguardViewMediator mKeyguardViewMediator -> mKeyguardViewMediator
    int mMode -> mMode
    int mPendingAuthenticatedUserId -> mPendingAuthenticatedUserId
    boolean mPendingShowBouncer -> mPendingShowBouncer
    android.os.PowerManager mPowerManager -> mPowerManager
    java.lang.Runnable mReleaseFingerprintWakeLockRunnable -> mReleaseFingerprintWakeLockRunnable
    com.android.systemui.keyguard.ScreenLifecycle$Observer mScreenObserver -> mScreenObserver
    com.android.systemui.statusbar.phone.ScrimController mScrimController -> mScrimController
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager mStatusBarKeyguardViewManager -> mStatusBarKeyguardViewManager
    com.android.systemui.statusbar.phone.StatusBarWindowManager mStatusBarWindowManager -> mStatusBarWindowManager
    com.android.systemui.statusbar.phone.UnlockMethodCache mUnlockMethodCache -> mUnlockMethodCache
    com.android.keyguard.KeyguardUpdateMonitor mUpdateMonitor -> mUpdateMonitor
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    com.android.systemui.keyguard.WakefulnessLifecycle$Observer mWakefulnessObserver -> mWakefulnessObserver
    void onFingerprintAcquired() -> onFingerprintAcquired
    void onFingerprintAuthenticated(int) -> onFingerprintAuthenticated
    int getMode() -> getMode
    boolean hasPendingAuthentication() -> hasPendingAuthentication
    void <init>(android.content.Context,com.android.systemui.statusbar.phone.DozeScrimController,com.android.systemui.keyguard.KeyguardViewMediator,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.phone.UnlockMethodCache) -> <init>
    void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> setStatusBarKeyguardViewManager
    void dump(java.io.PrintWriter) -> dump
    void startWakeAndUnlock(int) -> startWakeAndUnlock
    int calculateMode() -> calculateMode
    void cleanup() -> cleanup
    void finishKeyguardFadingAway() -> finishKeyguardFadingAway
    boolean hasScreenTurnedOnSinceAuthenticating() -> hasScreenTurnedOnSinceAuthenticating
    void onFingerprintAuthFailed() -> onFingerprintAuthFailed
    void onFingerprintError(int,java.lang.String) -> onFingerprintError
    void onFinishedGoingToSleep(int) -> onFinishedGoingToSleep
    void onStartedGoingToSleep(int) -> onStartedGoingToSleep
    boolean pulsingOrAod() -> pulsingOrAod
    void releaseFingerprintWakeLock() -> releaseFingerprintWakeLock
    void resetMode() -> resetMode
    void showBouncer() -> showBouncer
    void startKeyguardFadingAway() -> startKeyguardFadingAway
    int -get0(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> -get0
    boolean -get1(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> -get1
    com.android.systemui.statusbar.phone.StatusBarWindowManager -get2(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> -get2
    boolean -set0(com.android.systemui.statusbar.phone.FingerprintUnlockController,boolean) -> -set0
    void -wrap0(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> -wrap1
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0:
    byte $id -> $id
    com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0 $INST$0 -> $INST$0
    com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0 $INST$1 -> $INST$1
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    java.lang.Object $m$0() -> $m$0
    java.lang.Object $m$1() -> $m$1
    java.lang.Object get() -> get
com.android.systemui.statusbar.policy.EmergencyCryptkeeperText -> com.android.systemui.statusbar.policy.EmergencyCryptkeeperText:
    com.android.keyguard.KeyguardUpdateMonitorCallback mCallback -> mCallback
    com.android.keyguard.KeyguardUpdateMonitor mKeyguardUpdateMonitor -> mKeyguardUpdateMonitor
    android.content.BroadcastReceiver mReceiver -> mReceiver
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void update() -> update
com.android.systemui.doze.DozeFalsingManagerAdapter -> com.android.systemui.doze.DozeFalsingManagerAdapter:
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    int[] -com-android-systemui-doze-DozeMachine$StateSwitchesValues -> -com-android-systemui-doze-DozeMachine$StateSwitchesValues
    void <init>(com.android.systemui.classifier.FalsingManager) -> <init>
    boolean isAodMode(com.android.systemui.doze.DozeMachine$State) -> isAodMode
    void transitionTo(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State) -> transitionTo
    int[] -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues() -> -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues
com.android.systemui.qs.tiles.DndTile$3 -> com.android.systemui.qs.tiles.DndTile$3:
    com.android.systemui.qs.tiles.DndTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.DndTile) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.recents.views.RecentsTransitionHelper$StartScreenPinningRunnableRunnable -> com.android.systemui.recents.views.RecentsTransitionHelper$StartScreenPinningRunnableRunnable:
    int taskId -> taskId
    com.android.systemui.recents.views.RecentsTransitionHelper this$0 -> this$0
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper) -> <init>
    void run() -> run
    int -set0(com.android.systemui.recents.views.RecentsTransitionHelper$StartScreenPinningRunnableRunnable,int) -> -set0
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper,com.android.systemui.recents.views.RecentsTransitionHelper$StartScreenPinningRunnableRunnable) -> <init>
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$1 -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.String,java.lang.String) -> $m$0
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatApi19Impl -> android.support.v4.view.ViewParentCompat$ViewParentCompatApi19Impl:
    void <init>() -> <init>
android.support.v7.widget.ThemeUtils -> android.support.v7.widget.ThemeUtils:
    java.lang.ThreadLocal TL_TYPED_VALUE -> TL_TYPED_VALUE
    int[] PRESSED_STATE_SET -> PRESSED_STATE_SET
    int[] DISABLED_STATE_SET -> DISABLED_STATE_SET
    int[] SELECTED_STATE_SET -> SELECTED_STATE_SET
    int[] EMPTY_STATE_SET -> EMPTY_STATE_SET
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    int[] NOT_PRESSED_OR_FOCUSED_STATE_SET -> NOT_PRESSED_OR_FOCUSED_STATE_SET
    int[] ACTIVATED_STATE_SET -> ACTIVATED_STATE_SET
    int[] FOCUSED_STATE_SET -> FOCUSED_STATE_SET
    int[] TEMP_ARRAY -> TEMP_ARRAY
    int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    android.util.TypedValue getTypedValue() -> getTypedValue
    void <clinit>() -> <clinit>
    void <init>() -> <init>
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$9 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$9:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.views.TaskStackAnimationHelper$7 -> com.android.systemui.recents.views.TaskStackAnimationHelper$7:
    com.android.systemui.recents.views.TaskStackAnimationHelper this$0 -> this$0
    com.android.systemui.recents.misc.ReferenceCountedTrigger val$postAnimationTrigger -> val$postAnimationTrigger
    com.android.systemui.recents.views.TaskView val$tv -> val$tv
    void <init>(com.android.systemui.recents.views.TaskStackAnimationHelper,com.android.systemui.recents.misc.ReferenceCountedTrigger,com.android.systemui.recents.views.TaskView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.recents.model.TaskKeyLruCache$EvictionCallback -> com.android.systemui.recents.model.TaskKeyLruCache$EvictionCallback:
    void onEntryEvicted(com.android.systemui.recents.model.Task$TaskKey) -> onEntryEvicted
com.android.systemui.volume.ZenModePanel$1 -> com.android.systemui.volume.ZenModePanel$1:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    void <init>(com.android.systemui.volume.ZenModePanel) -> <init>
    void onManualRuleChanged(android.service.notification.ZenModeConfig$ZenRule) -> onManualRuleChanged
android.support.v4.app.FragmentTransition$4 -> android.support.v4.app.FragmentTransition$4:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.graphics.Rect val$inEpicenter -> val$inEpicenter
    java.lang.Object val$enterTransition -> val$enterTransition
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    android.support.v4.util.ArrayMap val$nameOverrides -> val$nameOverrides
    android.support.v4.app.FragmentTransitionImpl val$impl -> val$impl
    boolean val$inIsPop -> val$inIsPop
    java.lang.Object val$finalSharedElementTransition -> val$finalSharedElementTransition
    android.support.v4.app.FragmentTransition$FragmentContainerTransition val$fragments -> val$fragments
    java.util.ArrayList val$sharedElementsOut -> val$sharedElementsOut
    android.view.View val$nonExistentView -> val$nonExistentView
    void <init>(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    void run() -> run
android.support.v7.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.view.menu.ListMenuPresenter$MenuAdapter:
    int mExpandedIndex -> mExpandedIndex
    android.support.v7.view.menu.ListMenuPresenter this$0 -> this$0
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    void <init>(android.support.v7.view.menu.ListMenuPresenter) -> <init>
    int getCount() -> getCount
    void notifyDataSetChanged() -> notifyDataSetChanged
    void findExpandedIndex() -> findExpandedIndex
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
com.android.systemui.statusbar.phone.-$Lambda$M2GC-aczdMiLkSdwOGpMTs1Dam8$2 -> com.android.systemui.statusbar.phone.-$Lambda$M2GC-aczdMiLkSdwOGpMTs1Dam8$2:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(boolean) -> $m$0
    void onVerticalChanged(boolean) -> onVerticalChanged
com.android.systemui.screenshot.TakeScreenshotService -> com.android.systemui.screenshot.TakeScreenshotService:
    android.os.Handler mHandler -> mHandler
    com.android.systemui.screenshot.GlobalScreenshot mScreenshot -> mScreenshot
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    com.android.systemui.screenshot.GlobalScreenshot -get0() -> -get0
    com.android.systemui.screenshot.GlobalScreenshot -set0(com.android.systemui.screenshot.GlobalScreenshot) -> -set0
com.android.systemui.net.NetworkOverLimitActivity$2 -> com.android.systemui.net.NetworkOverLimitActivity$2:
    com.android.systemui.net.NetworkOverLimitActivity this$0 -> this$0
    void <init>(com.android.systemui.net.NetworkOverLimitActivity) -> <init>
    void onDismiss(android.content.DialogInterface) -> onDismiss
android.support.v7.app.AlertController$AlertParams$2 -> android.support.v7.app.AlertController$AlertParams$2:
    int mIsCheckedIndex -> mIsCheckedIndex
    int mLabelIndex -> mLabelIndex
    android.support.v7.app.AlertController val$dialog -> val$dialog
    android.support.v7.app.AlertController$AlertParams this$1 -> this$1
    android.support.v7.app.AlertController$RecycleListView val$listView -> val$listView
    void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,android.support.v7.app.AlertController$RecycleListView,android.support.v7.app.AlertController) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v7.widget.ScrollbarHelper -> android.support.v7.widget.ScrollbarHelper:
    int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    void <init>() -> <init>
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
com.android.systemui.statusbar.phone.StatusBar$35 -> com.android.systemui.statusbar.phone.StatusBar$35:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.pip.tv.PipManager$2 -> com.android.systemui.pip.tv.PipManager$2:
    com.android.systemui.pip.tv.PipManager this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipManager) -> <init>
    void run() -> run
com.android.systemui.recents.misc.FreePathInterpolator -> com.android.systemui.recents.misc.FreePathInterpolator:
    float mArcLength -> mArcLength
    float[] mX -> mX
    float[] mY -> mY
    void <init>(android.graphics.Path) -> <init>
    float getInterpolation(float) -> getInterpolation
    float getX(float) -> getX
    float getArcLength() -> getArcLength
    void initPath(android.graphics.Path) -> initPath
com.android.systemui.plugins.VolumeDialogController$State -> com.android.systemui.plugins.VolumeDialogController$State:
    int zenMode -> zenMode
    int ringerModeExternal -> ringerModeExternal
    int ringerModeInternal -> ringerModeInternal
    int NO_ACTIVE_STREAM -> NO_ACTIVE_STREAM
    int activeStream -> activeStream
    android.util.SparseArray states -> states
    int VERSION -> VERSION
    java.lang.String effectsSuppressorName -> effectsSuppressorName
    android.content.ComponentName effectsSuppressor -> effectsSuppressor
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    com.android.systemui.plugins.VolumeDialogController$State copy() -> copy
    java.lang.String toString(int) -> toString
    void <init>() -> <init>
    void sep(java.lang.StringBuilder,int) -> sep
com.android.systemui.pip.phone.PipTouchHandler$PipMenuListener -> com.android.systemui.pip.phone.PipTouchHandler$PipMenuListener:
    com.android.systemui.pip.phone.PipTouchHandler this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipTouchHandler) -> <init>
    void onPipDismiss() -> onPipDismiss
    void onPipExpand() -> onPipExpand
    void onPipMenuStateChanged(int,boolean) -> onPipMenuStateChanged
    void onPipMinimize() -> onPipMinimize
    void onPipShowMenu() -> onPipShowMenu
    void <init>(com.android.systemui.pip.phone.PipTouchHandler,com.android.systemui.pip.phone.PipTouchHandler$PipMenuListener) -> <init>
com.android.systemui.tuner.LockscreenFragment$App -> com.android.systemui.tuner.LockscreenFragment$App:
    java.util.ArrayList mChildren -> mChildren
    android.content.Context mContext -> mContext
    boolean mExpanded -> mExpanded
    android.content.pm.LauncherActivityInfo mInfo -> mInfo
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    java.lang.Boolean getExpando() -> getExpando
    java.lang.String getLabel() -> getLabel
    void toggleExpando(com.android.systemui.tuner.LockscreenFragment$Adapter) -> toggleExpando
    void lambda$-com_android_systemui_tuner_LockscreenFragment$App_8491(com.android.systemui.tuner.LockscreenFragment$Adapter,com.android.systemui.tuner.LockscreenFragment$Item) -> lambda$-com_android_systemui_tuner_LockscreenFragment$App_8491
    void lambda$-com_android_systemui_tuner_LockscreenFragment$App_8586(com.android.systemui.tuner.LockscreenFragment$Adapter,com.android.systemui.tuner.LockscreenFragment$Item) -> lambda$-com_android_systemui_tuner_LockscreenFragment$App_8586
com.android.systemui.classifier.SpeedAnglesPercentageEvaluator -> com.android.systemui.classifier.SpeedAnglesPercentageEvaluator:
    void <init>() -> <init>
    float evaluate(float) -> evaluate
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.Toolbar$LayoutParams:
    int mViewType -> mViewType
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.support.v7.widget.Toolbar$LayoutParams) -> <init>
com.android.systemui.statusbar.ActivatableNotificationView$3 -> com.android.systemui.statusbar.ActivatableNotificationView$3:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v17.leanback.widget.BaseCardView$2 -> android.support.v17.leanback.widget.BaseCardView$2:
    android.support.v17.leanback.widget.BaseCardView this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.support.v17.leanback.widget.BaseCardView) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation -> com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation:
    android.view.View mClock -> mClock
    int mMarginLeft -> mMarginLeft
    int mMarginTop -> mMarginTop
    java.lang.Runnable mMoveTextRunnable -> mMoveTextRunnable
    int mUsableHeight -> mUsableHeight
    int mUsableWidth -> mUsableWidth
    void <init>(android.content.Context,android.view.Display,int) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.View -get0(com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation) -> -get0
    int -get1(com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation) -> -get1
    int -get2(com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation) -> -get2
    int -get3(com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation) -> -get3
    int -get4(com.android.keyguard.KeyguardDisplayManager$KeyguardPresentation) -> -get4
android.support.v4.view.ViewCompat$ViewCompatApi17Impl -> android.support.v4.view.ViewCompat$ViewCompatApi17Impl:
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    void <init>() -> <init>
    android.view.Display getDisplay(android.view.View) -> getDisplay
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    boolean needsMeasure -> needsMeasure
    float widthFactor -> widthFactor
    int position -> position
    int childIndex -> childIndex
    int gravity -> gravity
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.v4.view.ViewPager$DecorView -> android.support.v4.view.ViewPager$DecorView:
android.support.v17.leanback.transition.FadeAndShortSlide$2 -> android.support.v17.leanback.transition.FadeAndShortSlide$2:
    void <init>() -> <init>
    float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[]) -> getGoneX
android.support.v7.widget.TooltipCompat$Api26ViewCompatImpl -> android.support.v7.widget.TooltipCompat$Api26ViewCompatImpl:
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    void <init>(android.support.v7.widget.TooltipCompat$Api26ViewCompatImpl) -> <init>
    void <init>() -> <init>
com.android.systemui.classifier.HumanInteractionClassifier$1 -> com.android.systemui.classifier.HumanInteractionClassifier$1:
    com.android.systemui.classifier.HumanInteractionClassifier this$0 -> this$0
    void <init>(com.android.systemui.classifier.HumanInteractionClassifier,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.systemui.statusbar.-$Lambda$Riuh3zYDe2TsfH5PQkGwv6ei6pQ$1 -> com.android.systemui.statusbar.-$Lambda$Riuh3zYDe2TsfH5PQkGwv6ei6pQ$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0() -> $m$0
    boolean onDoubleTap() -> onDoubleTap
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onSessionDestroyed() -> onSessionDestroyed
com.android.systemui.statusbar.phone.StatusBar$18 -> com.android.systemui.statusbar.phone.StatusBar$18:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onDeviceProvisionedChanged() -> onDeviceProvisionedChanged
android.support.v7.widget.RtlSpacingHelper -> android.support.v7.widget.RtlSpacingHelper:
    boolean mIsRelative -> mIsRelative
    int mExplicitLeft -> mExplicitLeft
    int mStart -> mStart
    int mRight -> mRight
    int mLeft -> mLeft
    int mExplicitRight -> mExplicitRight
    int mEnd -> mEnd
    boolean mIsRtl -> mIsRtl
    void setAbsolute(int,int) -> setAbsolute
    void setDirection(boolean) -> setDirection
    void setRelative(int,int) -> setRelative
    int getStart() -> getStart
    void <init>() -> <init>
    int getEnd() -> getEnd
com.android.systemui.plugins.PluginDependency -> com.android.systemui.plugins.PluginDependency:
    int VERSION -> VERSION
    com.android.systemui.plugins.PluginDependency$DependencyProvider sProvider -> sProvider
    void <init>() -> <init>
    java.lang.Object get(com.android.systemui.plugins.Plugin,java.lang.Class) -> get
android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray -> mNodeArray
    void <init>(android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator) -> <init>
    void <init>() -> <init>
    android.support.v4.graphics.PathParser$PathDataNode[] evaluate(float,android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.android.systemui.doze.DozeSensors$ProxSensor -> com.android.systemui.doze.DozeSensors$ProxSensor:
    com.android.systemui.util.AlarmTimeout mCooldownTimer -> mCooldownTimer
    java.lang.Boolean mCurrentlyFar -> mCurrentlyFar
    long mLastNear -> mLastNear
    com.android.systemui.doze.AlwaysOnDisplayPolicy mPolicy -> mPolicy
    boolean mRegistered -> mRegistered
    boolean mRequested -> mRequested
    com.android.systemui.doze.DozeSensors this$0 -> this$0
    void <init>(com.android.systemui.doze.DozeSensors,com.android.systemui.doze.AlwaysOnDisplayPolicy) -> <init>
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void setRegistered(boolean) -> setRegistered
    void setRequested(boolean) -> setRequested
    java.lang.String toString() -> toString
    void updateRegistered() -> updateRegistered
    void -com_android_systemui_doze_DozeSensors$ProxSensor-mthref-0() -> -com_android_systemui_doze_DozeSensors$ProxSensor-mthref-0
    void lambda$-com_android_systemui_doze_DozeSensors$ProxSensor_8113() -> lambda$-com_android_systemui_doze_DozeSensors$ProxSensor_8113
android.support.v4.widget.ImageViewCompat -> android.support.v4.widget.ImageViewCompat:
    android.support.v4.widget.ImageViewCompat$ImageViewCompatImpl IMPL -> IMPL
    void <clinit>() -> <clinit>
    android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    void <init>() -> <init>
    void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
    android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
com.android.systemui.settings.ToggleSliderView -> com.android.systemui.settings.ToggleSliderView:
    android.widget.CompoundButton$OnCheckedChangeListener mCheckListener -> mCheckListener
    android.widget.TextView mLabel -> mLabel
    com.android.systemui.settings.ToggleSlider$Listener mListener -> mListener
    com.android.systemui.settings.ToggleSliderView mMirror -> mMirror
    com.android.systemui.statusbar.policy.BrightnessMirrorController mMirrorController -> mMirrorController
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> mSeekListener
    com.android.systemui.settings.ToggleSeekBar mSlider -> mSlider
    android.widget.CompoundButton mToggle -> mToggle
    boolean mTracking -> mTracking
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onAttachedToWindow() -> onAttachedToWindow
    void setChecked(boolean) -> setChecked
    void setMax(int) -> setMax
    void setMirror(com.android.systemui.settings.ToggleSliderView) -> setMirror
    void setMirrorController(com.android.systemui.statusbar.policy.BrightnessMirrorController) -> setMirrorController
    void setOnChangedListener(com.android.systemui.settings.ToggleSlider$Listener) -> setOnChangedListener
    void setValue(int) -> setValue
    com.android.systemui.settings.ToggleSlider$Listener -get0(com.android.systemui.settings.ToggleSliderView) -> -get0
    com.android.systemui.settings.ToggleSliderView -get1(com.android.systemui.settings.ToggleSliderView) -> -get1
    com.android.systemui.statusbar.policy.BrightnessMirrorController -get2(com.android.systemui.settings.ToggleSliderView) -> -get2
    com.android.systemui.settings.ToggleSeekBar -get3(com.android.systemui.settings.ToggleSliderView) -> -get3
    android.widget.CompoundButton -get4(com.android.systemui.settings.ToggleSliderView) -> -get4
    boolean -get5(com.android.systemui.settings.ToggleSliderView) -> -get5
    boolean -set0(com.android.systemui.settings.ToggleSliderView,boolean) -> -set0
com.android.systemui.pip.phone.PipTouchHandler$2 -> com.android.systemui.pip.phone.PipTouchHandler$2:
    com.android.systemui.pip.phone.PipTouchHandler this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipTouchHandler) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.NotificationHeaderUtil$IconComparator -> com.android.systemui.statusbar.NotificationHeaderUtil$IconComparator:
    void <init>() -> <init>
    boolean compare(android.view.View,android.view.View,java.lang.Object,java.lang.Object) -> compare
    boolean hasSameColor(java.lang.Object,java.lang.Object) -> hasSameColor
    boolean hasSameIcon(java.lang.Object,java.lang.Object) -> hasSameIcon
    boolean isEmpty(android.view.View) -> isEmpty
    void <init>(com.android.systemui.statusbar.NotificationHeaderUtil$IconComparator) -> <init>
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnEmptySpaceClickListener -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnEmptySpaceClickListener:
    void onEmptySpaceClicked(float,float) -> onEmptySpaceClicked
com.android.systemui.qs.customize.TileAdapter$2 -> com.android.systemui.qs.customize.TileAdapter$2:
    com.android.systemui.qs.customize.TileAdapter this$0 -> this$0
    void <init>(com.android.systemui.qs.customize.TileAdapter) -> <init>
    boolean canDropOver(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> canDropOver
    int getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getMovementFlags
    boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    boolean onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> onMove
    void onSelectedChanged(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
    void onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSwiped
android.support.v7.widget.ButtonBarLayout -> android.support.v7.widget.ButtonBarLayout:
    int mLastWidthSize -> mLastWidthSize
    boolean mAllowStacking -> mAllowStacking
    int mMinimumHeight -> mMinimumHeight
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean isStacked() -> isStacked
    void onMeasure(int,int) -> onMeasure
    int getMinimumHeight() -> getMinimumHeight
    int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    void setStacked(boolean) -> setStacked
android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    android.support.v4.view.ActionProvider$VisibilityListener mListener -> mListener
    android.support.v7.view.menu.MenuItemWrapperJB this$0 -> this$0
    boolean isVisible() -> isVisible
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    void <init>(android.support.v7.view.menu.MenuItemWrapperJB,android.content.Context,android.view.ActionProvider) -> <init>
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
android.support.v4.app.BundleCompat$BundleCompatBaseImpl -> android.support.v4.app.BundleCompat$BundleCompatBaseImpl:
    java.lang.reflect.Method sGetIBinderMethod -> sGetIBinderMethod
    boolean sGetIBinderMethodFetched -> sGetIBinderMethodFetched
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void <init>() -> <init>
com.android.systemui.plugins.R$raw -> com.android.systemui.plugins.R$raw:
    int lb_voice_failure -> lb_voice_failure
    int lb_voice_no_input -> lb_voice_no_input
    int lb_voice_open -> lb_voice_open
    int lb_voice_success -> lb_voice_success
    void <init>() -> <init>
android.support.v4.app.FragmentManagerNonConfig -> android.support.v4.app.FragmentManagerNonConfig:
    java.util.List mFragments -> mFragments
    java.util.List mChildNonConfigs -> mChildNonConfigs
    void <init>(java.util.List,java.util.List) -> <init>
    java.util.List getFragments() -> getFragments
    java.util.List getChildNonConfigs() -> getChildNonConfigs
android.support.v7.widget.AppCompatDrawableManager$InflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$InflateDelegate:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
com.android.systemui.statusbar.policy.ZenModeControllerImpl -> com.android.systemui.statusbar.policy.ZenModeControllerImpl:
    boolean DEBUG -> DEBUG
    android.app.AlarmManager mAlarmManager -> mAlarmManager
    java.util.ArrayList mCallbacks -> mCallbacks
    java.util.LinkedHashMap mConditions -> mConditions
    android.service.notification.ZenModeConfig mConfig -> mConfig
    com.android.systemui.qs.GlobalSetting mConfigSetting -> mConfigSetting
    android.content.Context mContext -> mContext
    android.service.notification.IConditionListener mListener -> mListener
    com.android.systemui.qs.GlobalSetting mModeSetting -> mModeSetting
    android.app.NotificationManager mNoMan -> mNoMan
    android.content.BroadcastReceiver mReceiver -> mReceiver
    boolean mRegistered -> mRegistered
    boolean mRequesting -> mRequesting
    com.android.systemui.statusbar.policy.ZenModeControllerImpl$SetupObserver mSetupObserver -> mSetupObserver
    int mUserId -> mUserId
    android.os.UserManager mUserManager -> mUserManager
    void <init>(android.content.Context,android.os.Handler) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.ZenModeController$Callback) -> addCallback
    void fireConditionsChanged(android.service.notification.Condition[]) -> fireConditionsChanged
    void fireConfigChanged(android.service.notification.ZenModeConfig) -> fireConfigChanged
    void fireEffectsSuppressorChanged() -> fireEffectsSuppressorChanged
    void fireManualRuleChanged(android.service.notification.ZenModeConfig$ZenRule) -> fireManualRuleChanged
    void fireNextAlarmChanged() -> fireNextAlarmChanged
    void fireZenAvailableChanged(boolean) -> fireZenAvailableChanged
    void fireZenChanged(int) -> fireZenChanged
    android.service.notification.ZenModeConfig getConfig() -> getConfig
    int getCurrentUser() -> getCurrentUser
    android.service.notification.ZenModeConfig$ZenRule getManualRule() -> getManualRule
    long getNextAlarm() -> getNextAlarm
    int getZen() -> getZen
    boolean isVolumeRestricted() -> isVolumeRestricted
    boolean isZenAvailable() -> isZenAvailable
    void onUserSwitched(int) -> onUserSwitched
    void removeCallback(com.android.systemui.statusbar.policy.ZenModeController$Callback) -> removeCallback
    void setZen(int,android.net.Uri,java.lang.String) -> setZen
    void updateConditions(android.service.notification.Condition[]) -> updateConditions
    void updateZenModeConfig() -> updateZenModeConfig
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6003(com.android.systemui.statusbar.policy.ZenModeController$Callback) -> lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6003
    void lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6128(com.android.systemui.statusbar.policy.ZenModeController$Callback) -> lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6128
    void lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6253(int,com.android.systemui.statusbar.policy.ZenModeController$Callback) -> lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6253
    void lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6387(boolean,com.android.systemui.statusbar.policy.ZenModeController$Callback) -> lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6387
    void lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6539(android.service.notification.Condition[],com.android.systemui.statusbar.policy.ZenModeController$Callback) -> lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6539
    void lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6680(android.service.notification.ZenModeConfig$ZenRule,com.android.systemui.statusbar.policy.ZenModeController$Callback) -> lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6680
    void lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6844(android.service.notification.ZenModeConfig,com.android.systemui.statusbar.policy.ZenModeController$Callback) -> lambda$-com_android_systemui_statusbar_policy_ZenModeControllerImpl_6844
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    boolean -get0() -> -get0
    android.content.Context -get1(com.android.systemui.statusbar.policy.ZenModeControllerImpl) -> -get1
    boolean -get2(com.android.systemui.statusbar.policy.ZenModeControllerImpl) -> -get2
    int -get3(com.android.systemui.statusbar.policy.ZenModeControllerImpl) -> -get3
    void -wrap0(com.android.systemui.statusbar.policy.ZenModeControllerImpl) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.ZenModeControllerImpl) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.policy.ZenModeControllerImpl,boolean) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.policy.ZenModeControllerImpl,int) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.policy.ZenModeControllerImpl,android.service.notification.Condition[]) -> -wrap4
    void -wrap5(com.android.systemui.statusbar.policy.ZenModeControllerImpl) -> -wrap5
com.android.systemui.statusbar.ViewTransformationHelper$3 -> com.android.systemui.statusbar.ViewTransformationHelper$3:
    com.android.systemui.statusbar.ViewTransformationHelper this$0 -> this$0
    com.android.systemui.statusbar.TransformableView val$notification -> val$notification
    void <init>(com.android.systemui.statusbar.ViewTransformationHelper,com.android.systemui.statusbar.TransformableView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.recents.views.RecentsViewTouchHandler -> com.android.systemui.recents.views.RecentsViewTouchHandler:
    int mDeviceId -> mDeviceId
    com.android.internal.policy.DividerSnapAlgorithm mDividerSnapAlgorithm -> mDividerSnapAlgorithm
    android.graphics.Point mDownPos -> mDownPos
    boolean mDragRequested -> mDragRequested
    float mDragSlop -> mDragSlop
    com.android.systemui.recents.model.Task mDragTask -> mDragTask
    java.util.ArrayList mDropTargets -> mDropTargets
    boolean mIsDragging -> mIsDragging
    com.android.systemui.recents.views.DropTarget mLastDropTarget -> mLastDropTarget
    com.android.systemui.recents.views.RecentsView mRv -> mRv
    com.android.systemui.recents.views.TaskView mTaskView -> mTaskView
    android.graphics.Point mTaskViewOffset -> mTaskViewOffset
    java.util.ArrayList mVisibleDockStates -> mVisibleDockStates
    void <init>(com.android.systemui.recents.views.RecentsView) -> <init>
    void cancelStackActionButtonClick() -> cancelStackActionButtonClick
    void changeStackActionButtonDrawableHotspot(float,float) -> changeStackActionButtonDrawableHotspot
    java.util.ArrayList getVisibleDockStates() -> getVisibleDockStates
    boolean handleTouchEvent(android.view.MotionEvent) -> handleTouchEvent
    boolean isWithinStackActionButton(float,float) -> isWithinStackActionButton
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent) -> onBusEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void registerDropTargetForCurrentDrag(com.android.systemui.recents.views.DropTarget) -> registerDropTargetForCurrentDrag
    void updateSnapAlgorithm() -> updateSnapAlgorithm
com.android.systemui.statusbar.DragDownHelper -> com.android.systemui.statusbar.DragDownHelper:
    com.android.systemui.ExpandHelper$Callback mCallback -> mCallback
    com.android.systemui.statusbar.DragDownHelper$DragDownCallback mDragDownCallback -> mDragDownCallback
    boolean mDraggedFarEnough -> mDraggedFarEnough
    boolean mDraggingDown -> mDraggingDown
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    android.view.View mHost -> mHost
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    float mLastHeight -> mLastHeight
    int mMinDragDistance -> mMinDragDistance
    com.android.systemui.statusbar.ExpandableView mStartingChild -> mStartingChild
    int[] mTemp2 -> mTemp2
    float mTouchSlop -> mTouchSlop
    void <init>(android.content.Context,android.view.View,com.android.systemui.ExpandHelper$Callback,com.android.systemui.statusbar.DragDownHelper$DragDownCallback) -> <init>
    void cancelExpansion() -> cancelExpansion
    void cancelExpansion(com.android.systemui.statusbar.ExpandableView) -> cancelExpansion
    void captureStartingChild(float,float) -> captureStartingChild
    com.android.systemui.statusbar.ExpandableView findView(float,float) -> findView
    void handleExpansion(float,com.android.systemui.statusbar.ExpandableView) -> handleExpansion
    boolean isDraggingDown() -> isDraggingDown
    boolean isFalseTouch() -> isFalseTouch
    void log(java.lang.String) -> log
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void stopDragging() -> stopDragging
    com.android.systemui.ExpandHelper$Callback -get0(com.android.systemui.statusbar.DragDownHelper) -> -get0
    com.android.systemui.statusbar.DragDownHelper$DragDownCallback -get1(com.android.systemui.statusbar.DragDownHelper) -> -get1
com.android.systemui.statusbar.StatusBarIconView$2 -> com.android.systemui.statusbar.StatusBarIconView$2:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.statusbar.StatusBarIconView) -> get
    void setValue(com.android.systemui.statusbar.StatusBarIconView,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.pip.phone.PipTouchHandler -> com.android.systemui.pip.phone.PipTouchHandler:
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    android.app.IActivityManager mActivityManager -> mActivityManager
    android.content.Context mContext -> mContext
    com.android.systemui.pip.phone.PipTouchGesture mDefaultMovementGesture -> mDefaultMovementGesture
    int mDeferResizeToNormalBoundsUntilRotation -> mDeferResizeToNormalBoundsUntilRotation
    com.android.systemui.pip.phone.PipDismissViewController mDismissViewController -> mDismissViewController
    int mDisplayRotation -> mDisplayRotation
    android.graphics.Rect mExpandedBounds -> mExpandedBounds
    android.graphics.Rect mExpandedMovementBounds -> mExpandedMovementBounds
    int mExpandedShortestEdgeSize -> mExpandedShortestEdgeSize
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    com.android.systemui.pip.phone.PipTouchGesture[] mGestures -> mGestures
    android.os.Handler mHandler -> mHandler
    int mImeHeight -> mImeHeight
    int mImeOffset -> mImeOffset
    android.graphics.Rect mInsetBounds -> mInsetBounds
    boolean mIsImeShowing -> mIsImeShowing
    boolean mIsMinimized -> mIsMinimized
    com.android.systemui.pip.phone.PipMenuActivityController mMenuController -> mMenuController
    com.android.systemui.pip.phone.PipTouchHandler$PipMenuListener mMenuListener -> mMenuListener
    int mMenuState -> mMenuState
    com.android.systemui.pip.phone.PipMotionHelper mMotionHelper -> mMotionHelper
    android.graphics.Rect mMovementBounds -> mMovementBounds
    boolean mMovementWithinDismiss -> mMovementWithinDismiss
    boolean mMovementWithinMinimize -> mMovementWithinMinimize
    android.graphics.Rect mNormalBounds -> mNormalBounds
    android.graphics.Rect mNormalMovementBounds -> mNormalMovementBounds
    android.view.IPinnedStackController mPinnedStackController -> mPinnedStackController
    float mSavedSnapFraction -> mSavedSnapFraction
    boolean mSendingHoverAccessibilityEvents -> mSendingHoverAccessibilityEvents
    java.lang.Runnable mShowDismissAffordance -> mShowDismissAffordance
    boolean mShowPipMenuOnAnimationEnd -> mShowPipMenuOnAnimationEnd
    com.android.internal.policy.PipSnapAlgorithm mSnapAlgorithm -> mSnapAlgorithm
    android.graphics.Rect mTmpBounds -> mTmpBounds
    com.android.systemui.pip.phone.PipTouchState mTouchState -> mTouchState
    android.animation.ValueAnimator$AnimatorUpdateListener mUpdateScrimListener -> mUpdateScrimListener
    android.view.ViewConfiguration mViewConfig -> mViewConfig
    void <init>(android.content.Context,android.app.IActivityManager,com.android.systemui.pip.phone.PipMenuActivityController,com.android.systemui.pip.phone.InputConsumerController) -> <init>
    void cleanUp() -> cleanUp
    void cleanUpDismissTarget() -> cleanUpDismissTarget
    void dump(java.io.PrintWriter,java.lang.String) -> dump
    com.android.systemui.pip.phone.PipMotionHelper getMotionHelper() -> getMotionHelper
    boolean handleTouchEvent(android.view.MotionEvent) -> handleTouchEvent
    void onAccessibilityShowMenu() -> onAccessibilityShowMenu
    void onActivityPinned() -> onActivityPinned
    void onActivityUnpinned(android.content.ComponentName) -> onActivityUnpinned
    void onConfigurationChanged() -> onConfigurationChanged
    void onImeVisibilityChanged(boolean,int) -> onImeVisibilityChanged
    void onMovementBoundsChanged(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,int) -> onMovementBoundsChanged
    void onPinnedStackAnimationEnded() -> onPinnedStackAnimationEnded
    void onRegistrationChanged(boolean) -> onRegistrationChanged
    void setMenuState(int,boolean) -> setMenuState
    void setMinimizedState(boolean,boolean) -> setMinimizedState
    void setMinimizedStateInternal(boolean) -> setMinimizedStateInternal
    void setPinnedStackController(android.view.IPinnedStackController) -> setPinnedStackController
    void setTouchEnabled(boolean) -> setTouchEnabled
    void showPictureInPictureMenu() -> showPictureInPictureMenu
    void updateDismissFraction() -> updateDismissFraction
    void updateMovementBounds(int) -> updateMovementBounds
    boolean willResizeMenu() -> willResizeMenu
    void lambda$-com_android_systemui_pip_phone_PipTouchHandler_7782() -> lambda$-com_android_systemui_pip_phone_PipTouchHandler_7782
    boolean -com_android_systemui_pip_phone_PipTouchHandler-mthref-0(android.view.MotionEvent) -> -com_android_systemui_pip_phone_PipTouchHandler-mthref-0
    void -com_android_systemui_pip_phone_PipTouchHandler-mthref-1(boolean) -> -com_android_systemui_pip_phone_PipTouchHandler-mthref-1
    void -com_android_systemui_pip_phone_PipTouchHandler-mthref-2() -> -com_android_systemui_pip_phone_PipTouchHandler-mthref-2
    android.content.Context -get0(com.android.systemui.pip.phone.PipTouchHandler) -> -get0
    com.android.systemui.pip.phone.PipDismissViewController -get1(com.android.systemui.pip.phone.PipTouchHandler) -> -get1
    com.android.systemui.statusbar.FlingAnimationUtils -get2(com.android.systemui.pip.phone.PipTouchHandler) -> -get2
    android.os.Handler -get3(com.android.systemui.pip.phone.PipTouchHandler) -> -get3
    boolean -get4(com.android.systemui.pip.phone.PipTouchHandler) -> -get4
    com.android.systemui.pip.phone.PipMenuActivityController -get5(com.android.systemui.pip.phone.PipTouchHandler) -> -get5
    int -get6(com.android.systemui.pip.phone.PipTouchHandler) -> -get6
    com.android.systemui.pip.phone.PipMotionHelper -get7(com.android.systemui.pip.phone.PipTouchHandler) -> -get7
    android.graphics.Rect -get8(com.android.systemui.pip.phone.PipTouchHandler) -> -get8
    boolean -get9(com.android.systemui.pip.phone.PipTouchHandler) -> -get9
    boolean -get10(com.android.systemui.pip.phone.PipTouchHandler) -> -get10
    java.lang.Runnable -get11(com.android.systemui.pip.phone.PipTouchHandler) -> -get11
    android.graphics.Rect -get12(com.android.systemui.pip.phone.PipTouchHandler) -> -get12
    com.android.systemui.pip.phone.PipTouchState -get13(com.android.systemui.pip.phone.PipTouchHandler) -> -get13
    android.animation.ValueAnimator$AnimatorUpdateListener -get14(com.android.systemui.pip.phone.PipTouchHandler) -> -get14
    boolean -set0(com.android.systemui.pip.phone.PipTouchHandler,boolean) -> -set0
    boolean -set1(com.android.systemui.pip.phone.PipTouchHandler,boolean) -> -set1
    float -set2(com.android.systemui.pip.phone.PipTouchHandler,float) -> -set2
    boolean -wrap0(com.android.systemui.pip.phone.PipTouchHandler) -> -wrap0
    void -wrap1(com.android.systemui.pip.phone.PipTouchHandler) -> -wrap1
    void -wrap2(com.android.systemui.pip.phone.PipTouchHandler,int,boolean) -> -wrap2
    void -wrap3(com.android.systemui.pip.phone.PipTouchHandler,boolean) -> -wrap3
    void -wrap4(com.android.systemui.pip.phone.PipTouchHandler) -> -wrap4
android.support.v7.view.menu.MenuWrapperICS -> android.support.v7.view.menu.MenuWrapperICS:
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    void setQwertyMode(boolean) -> setQwertyMode
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    void setGroupVisible(int,boolean) -> setGroupVisible
    void removeGroup(int) -> removeGroup
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void clear() -> clear
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeItem(int) -> removeItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    int size() -> size
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenu) -> <init>
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    void close() -> close
    android.view.MenuItem findItem(int) -> findItem
    android.view.MenuItem getItem(int) -> getItem
com.android.systemui.plugins.qs.QSFactory -> com.android.systemui.plugins.qs.QSFactory:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    com.android.systemui.plugins.qs.QSTile createTile(java.lang.String) -> createTile
    com.android.systemui.plugins.qs.QSTileView createTileView(com.android.systemui.plugins.qs.QSTile,boolean) -> createTileView
com.android.settingslib.wifi.WifiTracker -> com.android.settingslib.wifi.WifiTracker:
    boolean mIncludeScans -> mIncludeScans
    boolean sVerboseLogging -> sVerboseLogging
    java.util.concurrent.atomic.AtomicBoolean mConnected -> mConnected
    android.net.wifi.WifiInfo mLastInfo -> mLastInfo
    java.lang.Object mLock -> mLock
    java.util.Set mRequestedScores -> mRequestedScores
    android.content.IntentFilter mFilter -> mFilter
    boolean mNetworkScoringUiEnabled -> mNetworkScoringUiEnabled
    com.android.settingslib.wifi.WifiTracker$WorkHandler mWorkHandler -> mWorkHandler
    boolean mRegistered -> mRegistered
    java.lang.Integer mScanId -> mScanId
    android.net.NetworkRequest mNetworkRequest -> mNetworkRequest
    android.net.wifi.WifiManager mWifiManager -> mWifiManager
    android.content.BroadcastReceiver mReceiver -> mReceiver
    android.content.Context mContext -> mContext
    com.android.settingslib.wifi.WifiTracker$WifiListener mListener -> mListener
    java.util.HashMap mSeenBssids -> mSeenBssids
    java.util.List mInternalAccessPoints -> mInternalAccessPoints
    com.android.settingslib.wifi.WifiTracker$WifiTrackerNetworkCallback mNetworkCallback -> mNetworkCallback
    com.android.settingslib.wifi.WifiTracker$AccessPointListenerAdapter mAccessPointListenerAdapter -> mAccessPointListenerAdapter
    java.util.List mAccessPoints -> mAccessPoints
    com.android.settingslib.wifi.WifiTracker$Scanner mScanner -> mScanner
    boolean mIncludePasspoints -> mIncludePasspoints
    com.android.settingslib.wifi.WifiTracker$MainHandler mMainHandler -> mMainHandler
    boolean mStaleScanResults -> mStaleScanResults
    android.net.ConnectivityManager mConnectivityManager -> mConnectivityManager
    java.util.HashMap mScanResultCache -> mScanResultCache
    boolean mIncludeSaved -> mIncludeSaved
    android.net.NetworkScoreManager mNetworkScoreManager -> mNetworkScoreManager
    long mMaxSpeedLabelScoreCacheAge -> mMaxSpeedLabelScoreCacheAge
    android.net.NetworkInfo mLastNetworkInfo -> mLastNetworkInfo
    android.net.wifi.WifiNetworkScoreCache mScoreCache -> mScoreCache
    void updateNetworkScores() -> updateNetworkScores
    void stopTracking() -> stopTracking
    void -wrap2(com.android.settingslib.wifi.WifiTracker) -> -wrap2
    com.android.settingslib.wifi.AccessPoint getCachedOrCreate(android.net.wifi.ScanResult,java.util.List) -> getCachedOrCreate
    void updateAccessPointsLocked(java.util.List,java.util.List) -> updateAccessPointsLocked
    android.net.wifi.WifiManager getManager() -> getManager
    android.net.ConnectivityManager -get1(com.android.settingslib.wifi.WifiTracker) -> -get1
    boolean -get6(com.android.settingslib.wifi.WifiTracker) -> -get6
    void updateWifiState(int) -> updateWifiState
    boolean -set2(com.android.settingslib.wifi.WifiTracker,boolean) -> -set2
    void unregisterScoreCache() -> unregisterScoreCache
    com.android.settingslib.wifi.WifiTracker$WifiListener -get3(com.android.settingslib.wifi.WifiTracker) -> -get3
    void requestScoresForNetworkKeys(java.util.Collection) -> requestScoresForNetworkKeys
    void -wrap3(com.android.settingslib.wifi.WifiTracker,android.net.NetworkInfo) -> -wrap3
    void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker$WifiListener,android.os.Looper,boolean,boolean,boolean) -> <init>
    void -wrap0(com.android.settingslib.wifi.WifiTracker,boolean) -> -wrap0
    void dump(java.io.PrintWriter) -> dump
    void forceUpdate() -> forceUpdate
    android.net.wifi.WifiInfo -set0(com.android.settingslib.wifi.WifiTracker,android.net.wifi.WifiInfo) -> -set0
    java.util.Collection updateScanResultCache(java.util.List) -> updateScanResultCache
    void pauseScanning() -> pauseScanning
    boolean DBG() -> DBG
    android.net.wifi.WifiConfiguration getWifiConfigurationForNetworkId(int,java.util.List) -> getWifiConfigurationForNetworkId
    void updateNetworkInfo(android.net.NetworkInfo) -> updateNetworkInfo
    android.net.wifi.WifiManager -get7(com.android.settingslib.wifi.WifiTracker) -> -get7
    boolean -get5(com.android.settingslib.wifi.WifiTracker) -> -get5
    void updateAccessPoints() -> updateAccessPoints
    void resumeScanning() -> resumeScanning
    java.util.concurrent.atomic.AtomicBoolean -get0(com.android.settingslib.wifi.WifiTracker) -> -get0
    void registerScoreCache() -> registerScoreCache
    void startTracking() -> startTracking
    java.util.List getAccessPoints() -> getAccessPoints
    android.net.NetworkInfo -set1(com.android.settingslib.wifi.WifiTracker,android.net.NetworkInfo) -> -set1
    void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker$WifiListener,android.os.Looper,boolean,boolean) -> <init>
    com.android.settingslib.wifi.AccessPoint getCachedOrCreate(android.net.wifi.WifiConfiguration,java.util.List) -> getCachedOrCreate
    void clearAccessPointsAndConditionallyUpdate() -> clearAccessPointsAndConditionallyUpdate
    void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker$WifiListener,android.os.Looper,boolean,boolean,boolean,android.net.wifi.WifiManager,android.net.ConnectivityManager,android.net.NetworkScoreManager,android.os.Looper) -> <init>
    android.content.Context -get2(com.android.settingslib.wifi.WifiTracker) -> -get2
    void copyAndNotifyListeners(boolean) -> copyAndNotifyListeners
    void -wrap4(com.android.settingslib.wifi.WifiTracker) -> -wrap4
    void -wrap1(com.android.settingslib.wifi.WifiTracker) -> -wrap1
    void handleResume() -> handleResume
    java.lang.Object -get4(com.android.settingslib.wifi.WifiTracker) -> -get4
    void -wrap5(com.android.settingslib.wifi.WifiTracker,int) -> -wrap5
com.android.systemui.statusbar.NotificationMenuRow -> com.android.systemui.statusbar.NotificationMenuRow:
    float mAlpha -> mAlpha
    boolean mAnimating -> mAnimating
    com.android.systemui.statusbar.NotificationMenuRow$CheckForDrag mCheckForDrag -> mCheckForDrag
    android.content.Context mContext -> mContext
    boolean mDismissing -> mDismissing
    android.animation.ValueAnimator mFadeAnimator -> mFadeAnimator
    android.os.Handler mHandler -> mHandler
    float mHorizSpaceForIcon -> mHorizSpaceForIcon
    int[] mIconLocation -> mIconLocation
    int mIconPadding -> mIconPadding
    boolean mIconsPlaced -> mIconsPlaced
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem mInfoItem -> mInfoItem
    boolean mIsUserTouching -> mIsUserTouching
    android.widget.FrameLayout mMenuContainer -> mMenuContainer
    boolean mMenuFadedIn -> mMenuFadedIn
    java.util.ArrayList mMenuItems -> mMenuItems
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener mMenuListener -> mMenuListener
    boolean mMenuSnappedOnLeft -> mMenuSnappedOnLeft
    boolean mMenuSnappedTo -> mMenuSnappedTo
    boolean mOnLeft -> mOnLeft
    com.android.systemui.statusbar.ExpandableNotificationRow mParent -> mParent
    int[] mParentLocation -> mParentLocation
    float mPrevX -> mPrevX
    boolean mShouldShowMenu -> mShouldShowMenu
    boolean mSnapping -> mSnapping
    com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper mSwipeHelper -> mSwipeHelper
    float mTranslation -> mTranslation
    int mVertSpaceForIcons -> mVertSpaceForIcons
    void <init>(android.content.Context) -> <init>
    void addMenuView(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem,android.view.ViewGroup) -> addMenuView
    void cancelDrag() -> cancelDrag
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem createInfoItem(android.content.Context) -> createInfoItem
    void createMenu(android.view.ViewGroup,android.service.notification.StatusBarNotification) -> createMenu
    void createMenuViews(boolean) -> createMenuViews
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem createSnoozeItem(android.content.Context) -> createSnoozeItem
    void dismiss(android.view.View,float) -> dismiss
    void fadeInMenu(float) -> fadeInMenu
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem getLongpressMenuItem(android.content.Context) -> getLongpressMenuItem
    java.util.ArrayList getMenuItems(android.content.Context) -> getMenuItems
    android.view.View getMenuView() -> getMenuView
    float getSpaceForMenu() -> getSpaceForMenu
    boolean handleUpEvent(android.view.MotionEvent,android.view.View,float) -> handleUpEvent
    boolean isMenuLocationChange() -> isMenuLocationChange
    boolean isMenuVisible() -> isMenuVisible
    boolean isTowardsMenu(float) -> isTowardsMenu
    void onClick(android.view.View) -> onClick
    void onConfigurationChanged() -> onConfigurationChanged
    void onHeightUpdate() -> onHeightUpdate
    void onLayout() -> onLayout
    void onNotificationUpdated(android.service.notification.StatusBarNotification) -> onNotificationUpdated
    boolean onTouchEvent(android.view.View,android.view.MotionEvent,float) -> onTouchEvent
    void onTranslationUpdate(float) -> onTranslationUpdate
    void resetMenu() -> resetMenu
    void resetState(boolean) -> resetState
    void setAppName(java.lang.String) -> setAppName
    void setMenuAlpha(float) -> setMenuAlpha
    void setMenuClickListener(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener) -> setMenuClickListener
    void setMenuItems(java.util.ArrayList) -> setMenuItems
    void setMenuLocation() -> setMenuLocation
    void setSwipeActionHelper(com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper) -> setSwipeActionHelper
    void showMenu(android.view.View,float,float) -> showMenu
    void snapBack(android.view.View,float) -> snapBack
    boolean swipedEnoughToShowMenu() -> swipedEnoughToShowMenu
    float -get0(com.android.systemui.statusbar.NotificationMenuRow) -> -get0
    boolean -get1(com.android.systemui.statusbar.NotificationMenuRow) -> -get1
    com.android.systemui.statusbar.ExpandableNotificationRow -get2(com.android.systemui.statusbar.NotificationMenuRow) -> -get2
    float -get3(com.android.systemui.statusbar.NotificationMenuRow) -> -get3
    boolean -set0(com.android.systemui.statusbar.NotificationMenuRow,boolean) -> -set0
    boolean -set1(com.android.systemui.statusbar.NotificationMenuRow,boolean) -> -set1
    boolean -wrap0(com.android.systemui.statusbar.NotificationMenuRow) -> -wrap0
    float -wrap1(com.android.systemui.statusbar.NotificationMenuRow) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.NotificationMenuRow,float) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.NotificationMenuRow,float) -> -wrap3
com.android.systemui.classifier.Point -> com.android.systemui.classifier.Point:
    long timeOffsetNano -> timeOffsetNano
    float x -> x
    float y -> y
    void <init>(float,float,long) -> <init>
    float dist(com.android.systemui.classifier.Point) -> dist
    void <init>(float,float) -> <init>
    boolean equals(com.android.systemui.classifier.Point) -> equals
    float getAngle(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point) -> getAngle
    float crossProduct(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point) -> crossProduct
    float dotProduct(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point) -> dotProduct
android.support.v7.app.MediaRouterThemeHelper$ControllerColorType -> android.support.v7.app.MediaRouterThemeHelper$ControllerColorType:
com.android.systemui.qs.customize.TileAdapter$2$1 -> com.android.systemui.qs.customize.TileAdapter$2$1:
    com.android.systemui.qs.customize.TileAdapter$2 this$1 -> this$1
    void <init>(com.android.systemui.qs.customize.TileAdapter$2) -> <init>
    void run() -> run
android.support.v17.leanback.widget.ImageCardView -> android.support.v17.leanback.widget.ImageCardView:
    android.animation.ObjectAnimator mFadeInAnimator -> mFadeInAnimator
    android.widget.ImageView mImageView -> mImageView
    boolean mAttachedToWindow -> mAttachedToWindow
    android.widget.ImageView mBadgeImage -> mBadgeImage
    android.widget.TextView mTitleView -> mTitleView
    android.view.ViewGroup mInfoArea -> mInfoArea
    android.widget.TextView mContentView -> mContentView
    void onAttachedToWindow() -> onAttachedToWindow
    void fadeIn() -> fadeIn
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setInfoAreaBackground(android.graphics.drawable.Drawable) -> setInfoAreaBackground
    void buildImageCardView(android.util.AttributeSet,int,int) -> buildImageCardView
    void onDetachedFromWindow() -> onDetachedFromWindow
android.support.v7.widget.ActionBarOverlayLayout$3 -> android.support.v7.widget.ActionBarOverlayLayout$3:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> this$0
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.SignalController -> com.android.systemui.statusbar.policy.SignalController:
    java.lang.String mTag -> mTag
    int mTransportType -> mTransportType
    boolean DEBUG -> DEBUG
    com.android.systemui.statusbar.policy.SignalController$State mCurrentState -> mCurrentState
    com.android.systemui.statusbar.policy.SignalController$State mLastState -> mLastState
    android.content.Context mContext -> mContext
    boolean CHATTY -> CHATTY
    com.android.systemui.statusbar.policy.NetworkControllerImpl mNetworkController -> mNetworkController
    com.android.systemui.statusbar.policy.CallbackHandler mCallbackHandler -> mCallbackHandler
    com.android.systemui.statusbar.policy.SignalController$State[] mHistory -> mHistory
    int mHistoryIndex -> mHistoryIndex
    com.android.systemui.statusbar.policy.SignalController$State getState() -> getState
    void notifyListeners() -> notifyListeners
    void updateConnectivity(java.util.BitSet,java.util.BitSet) -> updateConnectivity
    void dump(java.io.PrintWriter) -> dump
    void resetLastState() -> resetLastState
    void <init>(java.lang.String,android.content.Context,int,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl) -> <init>
    java.lang.String getStringIfExists(int) -> getStringIfExists
    com.android.systemui.statusbar.policy.SignalController$IconGroup getIcons() -> getIcons
    void notifyListenersIfNecessary() -> notifyListenersIfNecessary
    int getContentDescription() -> getContentDescription
    int getCurrentIconId() -> getCurrentIconId
    com.android.systemui.statusbar.policy.SignalController$State cleanState() -> cleanState
    int getQsCurrentIconId() -> getQsCurrentIconId
    boolean isDirty() -> isDirty
    void notifyListeners(com.android.systemui.statusbar.policy.NetworkController$SignalCallback) -> notifyListeners
    void recordLastState() -> recordLastState
    void saveLastState() -> saveLastState
    void <clinit>() -> <clinit>
android.support.v4.media.MediaBrowserCompat$ItemCallback -> android.support.v4.media.MediaBrowserCompat$ItemCallback:
    java.lang.Object mItemCallbackObj -> mItemCallbackObj
    void onItemLoaded(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onItemLoaded
    void <init>() -> <init>
    void onError(java.lang.String) -> onError
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$10 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$10:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$13 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$13:
    boolean -$f0 -> -$f0
    boolean -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(boolean,boolean,java.lang.Object,java.lang.Object) -> <init>
    boolean $m$0() -> $m$0
    boolean onDismiss() -> onDismiss
com.android.settingslib.bluetooth.PanProfile$PanServiceListener -> com.android.settingslib.bluetooth.PanProfile$PanServiceListener:
    com.android.settingslib.bluetooth.PanProfile this$0 -> this$0
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void <init>(com.android.settingslib.bluetooth.PanProfile,com.android.settingslib.bluetooth.PanProfile$PanServiceListener) -> <init>
    void onServiceDisconnected(int) -> onServiceDisconnected
    void <init>(com.android.settingslib.bluetooth.PanProfile) -> <init>
com.android.keyguard.KeyguardSimPukView -> com.android.keyguard.KeyguardSimPukView:
    com.android.keyguard.KeyguardSimPukView$CheckSimPuk mCheckSimPukThread -> mCheckSimPukThread
    java.lang.String mPinText -> mPinText
    java.lang.String mPukText -> mPukText
    int mRemainingAttempts -> mRemainingAttempts
    android.app.AlertDialog mRemainingAttemptsDialog -> mRemainingAttemptsDialog
    boolean mShowDefaultMessage -> mShowDefaultMessage
    android.widget.ImageView mSimImageView -> mSimImageView
    android.app.ProgressDialog mSimUnlockProgressDialog -> mSimUnlockProgressDialog
    com.android.keyguard.KeyguardSimPukView$StateMachine mStateMachine -> mStateMachine
    int mSubId -> mSubId
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateMonitorCallback -> mUpdateMonitorCallback
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean checkPin() -> checkPin
    boolean checkPuk() -> checkPuk
    boolean confirmPin() -> confirmPin
    int getPasswordTextViewId() -> getPasswordTextViewId
    int getPromtReasonStringRes(int) -> getPromtReasonStringRes
    java.lang.String getPukPasswordErrorMessage(int,boolean) -> getPukPasswordErrorMessage
    android.app.Dialog getPukRemainingAttemptsDialog(int) -> getPukRemainingAttemptsDialog
    android.app.Dialog getSimUnlockProgressDialog() -> getSimUnlockProgressDialog
    void handleSubInfoChangeIfNeeded() -> handleSubInfoChangeIfNeeded
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onPause() -> onPause
    void resetState() -> resetState
    boolean shouldLockout(long) -> shouldLockout
    void showDefaultMessage() -> showDefaultMessage
    void startAppearAnimation() -> startAppearAnimation
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    void updateSim() -> updateSim
    void verifyPasswordAndUnlock() -> verifyPasswordAndUnlock
    boolean -get0(com.android.keyguard.KeyguardSimPukView) -> -get0
    android.app.ProgressDialog -get1(com.android.keyguard.KeyguardSimPukView) -> -get1
    com.android.keyguard.KeyguardSimPukView$StateMachine -get2(com.android.keyguard.KeyguardSimPukView) -> -get2
    int -get3(com.android.keyguard.KeyguardSimPukView) -> -get3
    com.android.keyguard.KeyguardSimPukView$CheckSimPuk -set0(com.android.keyguard.KeyguardSimPukView,com.android.keyguard.KeyguardSimPukView$CheckSimPuk) -> -set0
    java.lang.String -set1(com.android.keyguard.KeyguardSimPukView,java.lang.String) -> -set1
    java.lang.String -set2(com.android.keyguard.KeyguardSimPukView,java.lang.String) -> -set2
    int -set3(com.android.keyguard.KeyguardSimPukView,int) -> -set3
    boolean -set4(com.android.keyguard.KeyguardSimPukView,boolean) -> -set4
    android.app.Dialog -wrap0(com.android.keyguard.KeyguardSimPukView,int) -> -wrap0
    boolean -wrap1(com.android.keyguard.KeyguardSimPukView) -> -wrap1
    boolean -wrap2(com.android.keyguard.KeyguardSimPukView) -> -wrap2
    java.lang.String -wrap3(com.android.keyguard.KeyguardSimPukView,int,boolean) -> -wrap3
    void -wrap4(com.android.keyguard.KeyguardSimPukView) -> -wrap4
    void -wrap5(com.android.keyguard.KeyguardSimPukView) -> -wrap5
    void -wrap6(com.android.keyguard.KeyguardSimPukView) -> -wrap6
com.android.systemui.recents.ScreenPinningRequest$RequestWindowView$3 -> com.android.systemui.recents.ScreenPinningRequest$RequestWindowView$3:
    com.android.systemui.recents.ScreenPinningRequest$RequestWindowView this$1 -> this$1
    void <init>(com.android.systemui.recents.ScreenPinningRequest$RequestWindowView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.phone.ReverseLinearLayout$ReverseFrameLayout -> com.android.systemui.statusbar.phone.ReverseLinearLayout$ReverseFrameLayout:
    void <init>(android.content.Context) -> <init>
    void reverse() -> reverse
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    boolean mFirstLayout -> mFirstLayout
    boolean mFakeDragging -> mFakeDragging
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    float mInitialMotionY -> mInitialMotionY
    boolean mInLayout -> mInLayout
    int mMinimumVelocity -> mMinimumVelocity
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    float mLastMotionX -> mLastMotionX
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mActivePointerId -> mActivePointerId
    int mExpectedAdapterCount -> mExpectedAdapterCount
    boolean mIsScrollStarted -> mIsScrollStarted
    boolean mPopulatePending -> mPopulatePending
    int mCloseEnough -> mCloseEnough
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    android.widget.Scroller mScroller -> mScroller
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mMaximumVelocity -> mMaximumVelocity
    java.util.List mOnPageChangeListeners -> mOnPageChangeListeners
    int mCurItem -> mCurItem
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    boolean mCalledSuper -> mCalledSuper
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    android.widget.EdgeEffect mLeftEdge -> mLeftEdge
    java.util.ArrayList mItems -> mItems
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    int mFlingDistance -> mFlingDistance
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionY -> mLastMotionY
    int mGutterSize -> mGutterSize
    int mDefaultGutterSize -> mDefaultGutterSize
    int mScrollState -> mScrollState
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.widget.EdgeEffect mRightEdge -> mRightEdge
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    int mDrawingOrder -> mDrawingOrder
    java.util.List mAdapterChangeListeners -> mAdapterChangeListeners
    boolean mIsBeingDragged -> mIsBeingDragged
    int mOffscreenPageLimit -> mOffscreenPageLimit
    int mPageTransformerLayerType -> mPageTransformerLayerType
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    int mRestoredCurItem -> mRestoredCurItem
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mPageMargin -> mPageMargin
    android.graphics.Rect mTempRect -> mTempRect
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void populate(int) -> populate
    void removeNonDecorViews() -> removeNonDecorViews
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void enableLayers(boolean) -> enableLayers
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    void removeView(android.view.View) -> removeView
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void initViewPager() -> initViewPager
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    boolean performDrag(float) -> performDrag
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    boolean pageRight() -> pageRight
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void removeOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    boolean arrowScroll(int) -> arrowScroll
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void populate() -> populate
    void addOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    void dataSetChanged() -> dataSetChanged
    void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    int getClientWidth() -> getClientWidth
    void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    void drawableStateChanged() -> drawableStateChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onPageScrolled(int,float,int) -> onPageScrolled
    void setCurrentItem(int) -> setCurrentItem
    void completeScroll(boolean) -> completeScroll
    void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    void setCurrentItem(int,boolean) -> setCurrentItem
    void onAttachedToWindow() -> onAttachedToWindow
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int getCurrentItem() -> getCurrentItem
    boolean pageLeft() -> pageLeft
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    boolean pageScrolled(int) -> pageScrolled
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    boolean isDecorView(android.view.View) -> isDecorView
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isGutterDrag(float,float) -> isGutterDrag
    void setScrollState(int) -> setScrollState
    void computeScroll() -> computeScroll
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void draw(android.graphics.Canvas) -> draw
    void addTouchables(java.util.ArrayList) -> addTouchables
    void endDrag() -> endDrag
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    boolean resetTouch() -> resetTouch
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void <clinit>() -> <clinit>
    void onDraw(android.graphics.Canvas) -> onDraw
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
android.support.v17.leanback.transition.SlideKitkat$1 -> android.support.v17.leanback.transition.SlideKitkat$1:
    void <init>() -> <init>
    float getGone(android.view.View) -> getGone
com.android.systemui.doze.DozeTriggers$1 -> com.android.systemui.doze.DozeTriggers$1:
    com.android.systemui.doze.DozeTriggers this$0 -> this$0
    void <init>(com.android.systemui.doze.DozeTriggers) -> <init>
    void onNotificationHeadsUp() -> onNotificationHeadsUp
    void onPowerSaveChanged(boolean) -> onPowerSaveChanged
com.android.settingslib.bluetooth.Utils -> com.android.settingslib.bluetooth.Utils:
    com.android.settingslib.bluetooth.Utils$ErrorListener sErrorListener -> sErrorListener
    void setErrorListener(com.android.settingslib.bluetooth.Utils$ErrorListener) -> setErrorListener
    void showError(android.content.Context,java.lang.String,int) -> showError
    void <init>() -> <init>
com.android.settingslib.drawable.UserIconDrawable -> com.android.settingslib.drawable.UserIconDrawable:
    int mSize -> mSize
    android.graphics.Paint mClearPaint -> mClearPaint
    android.graphics.drawable.Drawable mBadge -> mBadge
    float mBadgeRadius -> mBadgeRadius
    android.content.res.ColorStateList mFrameColor -> mFrameColor
    boolean mInvalidated -> mInvalidated
    android.content.res.ColorStateList mTintColor -> mTintColor
    android.graphics.Bitmap mBitmap -> mBitmap
    float mIntrinsicRadius -> mIntrinsicRadius
    android.graphics.Paint mPaint -> mPaint
    float mPadding -> mPadding
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    float mDisplayRadius -> mDisplayRadius
    android.graphics.Paint mIconPaint -> mIconPaint
    android.graphics.drawable.Drawable mUserDrawable -> mUserDrawable
    float mBadgeMargin -> mBadgeMargin
    android.graphics.Matrix mIconMatrix -> mIconMatrix
    float mFrameWidth -> mFrameWidth
    float mFramePadding -> mFramePadding
    android.graphics.Bitmap mUserIcon -> mUserIcon
    android.graphics.Paint mFramePaint -> mFramePaint
    void setAlpha(int) -> setAlpha
    com.android.settingslib.drawable.UserIconDrawable bake() -> bake
    android.graphics.drawable.Drawable getManagedUserBadgeDrawable(android.content.Context) -> getManagedUserBadgeDrawable
    void setBadgeMargin(float) -> setBadgeMargin
    void <init>(int) -> <init>
    void initFramePaint() -> initFramePaint
    void setPadding(float) -> setPadding
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    com.android.settingslib.drawable.UserIconDrawable setBadge(android.graphics.drawable.Drawable) -> setBadge
    com.android.settingslib.drawable.UserIconDrawable setIcon(android.graphics.Bitmap) -> setIcon
    boolean isStateful() -> isStateful
    int getOpacity() -> getOpacity
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    int getIntrinsicWidth() -> getIntrinsicWidth
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setFramePadding(float) -> setFramePadding
    void rebake() -> rebake
    void invalidateSelf() -> invalidateSelf
    void setIntrinsicSize(int) -> setIntrinsicSize
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setFrameColor(android.content.res.ColorStateList) -> setFrameColor
    com.android.settingslib.drawable.UserIconDrawable setIconDrawable(android.graphics.drawable.Drawable) -> setIconDrawable
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setBadgeRadius(float) -> setBadgeRadius
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void <init>() -> <init>
    com.android.settingslib.drawable.UserIconDrawable setBadgeIfManagedUser(android.content.Context,int) -> setBadgeIfManagedUser
    void setFrameWidth(float) -> setFrameWidth
com.android.systemui.statusbar.NotificationHeaderUtil$4 -> com.android.systemui.statusbar.NotificationHeaderUtil$4:
    void <init>() -> <init>
    void apply(android.view.View,boolean) -> apply
    void applyToChild(android.view.View,boolean,int) -> applyToChild
com.android.settingslib.wifi.WifiTracker$2 -> com.android.settingslib.wifi.WifiTracker$2:
    com.android.settingslib.wifi.WifiTracker this$0 -> this$0
    void networkCacheUpdated(java.util.List) -> networkCacheUpdated
    void <init>(com.android.settingslib.wifi.WifiTracker,android.os.Handler) -> <init>
com.android.systemui.statusbar.phone.ScrimController -> com.android.systemui.statusbar.phone.ScrimController:
    android.view.animation.Interpolator KEYGUARD_FADE_OUT_INTERPOLATOR -> KEYGUARD_FADE_OUT_INTERPOLATOR
    android.view.animation.Interpolator KEYGUARD_FADE_OUT_INTERPOLATOR_LOCKED -> KEYGUARD_FADE_OUT_INTERPOLATOR_LOCKED
    boolean mAnimateChange -> mAnimateChange
    boolean mAnimateKeyguardFadingOut -> mAnimateKeyguardFadingOut
    boolean mAnimatingDozeUnlock -> mAnimatingDozeUnlock
    long mAnimationDelay -> mAnimationDelay
    boolean mBouncerIsKeyguard -> mBouncerIsKeyguard
    boolean mBouncerShowing -> mBouncerShowing
    com.android.systemui.colorextraction.SysuiColorExtractor mColorExtractor -> mColorExtractor
    float mCurrentBehindAlpha -> mCurrentBehindAlpha
    float mCurrentHeadsUpAlpha -> mCurrentHeadsUpAlpha
    float mCurrentInFrontAlpha -> mCurrentInFrontAlpha
    boolean mDarkenWhileDragging -> mDarkenWhileDragging
    boolean mDeferFinishedListener -> mDeferFinishedListener
    boolean mDontAnimateBouncerChanges -> mDontAnimateBouncerChanges
    float mDozeBehindAlpha -> mDozeBehindAlpha
    float mDozeInFrontAlpha -> mDozeInFrontAlpha
    boolean mDozing -> mDozing
    android.view.View mDraggedHeadsUpView -> mDraggedHeadsUpView
    long mDurationOverride -> mDurationOverride
    boolean mForceHideScrims -> mForceHideScrims
    float mFraction -> mFraction
    android.view.View mHeadsUpScrim -> mHeadsUpScrim
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    android.animation.ValueAnimator mKeyguardFadeoutAnimation -> mKeyguardFadeoutAnimation
    boolean mKeyguardFadingOutInProgress -> mKeyguardFadingOutInProgress
    boolean mKeyguardShowing -> mKeyguardShowing
    com.android.keyguard.KeyguardUpdateMonitor mKeyguardUpdateMonitor -> mKeyguardUpdateMonitor
    com.android.systemui.statusbar.phone.LightBarController mLightBarController -> mLightBarController
    com.android.internal.colorextraction.ColorExtractor$GradientColors mLockColors -> mLockColors
    boolean mNeedsDrawableColorUpdate -> mNeedsDrawableColorUpdate
    java.lang.Runnable mOnAnimationFinished -> mOnAnimationFinished
    int mPinnedHeadsUpCount -> mPinnedHeadsUpCount
    com.android.systemui.statusbar.ScrimView mScrimBehind -> mScrimBehind
    float mScrimBehindAlpha -> mScrimBehindAlpha
    float mScrimBehindAlphaKeyguard -> mScrimBehindAlphaKeyguard
    float mScrimBehindAlphaResValue -> mScrimBehindAlphaResValue
    float mScrimBehindAlphaUnlocking -> mScrimBehindAlphaUnlocking
    com.android.systemui.statusbar.ScrimView mScrimInFront -> mScrimInFront
    java.util.function.Consumer mScrimVisibleListener -> mScrimVisibleListener
    boolean mScrimsVisble -> mScrimsVisble
    boolean mSkipFirstFrame -> mSkipFirstFrame
    com.android.internal.colorextraction.ColorExtractor$GradientColors mSystemColors -> mSystemColors
    float mTopHeadsUpDragAmount -> mTopHeadsUpDragAmount
    boolean mTracking -> mTracking
    com.android.systemui.statusbar.phone.UnlockMethodCache mUnlockMethodCache -> mUnlockMethodCache
    boolean mUpdatePending -> mUpdatePending
    boolean mWakeAndUnlocking -> mWakeAndUnlocking
    boolean mWakingUpFromAodAnimationRunning -> mWakingUpFromAodAnimationRunning
    boolean mWakingUpFromAodInProgress -> mWakingUpFromAodInProgress
    boolean mWakingUpFromAodStarting -> mWakingUpFromAodStarting
    void onTrackingStarted() -> onTrackingStarted
    void onExpandingFinished() -> onExpandingFinished
    void setPanelExpansion(float) -> setPanelExpansion
    void wakeUpFromAod() -> wakeUpFromAod
    void setDrawBehindAsSrc(boolean) -> setDrawBehindAsSrc
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void dump(java.io.PrintWriter) -> dump
    void setCurrentUser(int) -> setCurrentUser
    void forceHideScrims(boolean,boolean) -> forceHideScrims
    void animateKeyguardUnoccluding(long) -> animateKeyguardUnoccluding
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void setDozing(boolean) -> setDozing
    void prepareWakeUpFromAod() -> prepareWakeUpFromAod
    void dontAnimateBouncerChangesUntilNextFrame() -> dontAnimateBouncerChangesUntilNextFrame
    void setNotificationCount(int) -> setNotificationCount
    void setWakeAndUnlocking() -> setWakeAndUnlocking
    void <init>(com.android.systemui.statusbar.phone.LightBarController,com.android.systemui.statusbar.ScrimView,com.android.systemui.statusbar.ScrimView,android.view.View,java.util.function.Consumer) -> <init>
    void abortKeyguardFadingOut() -> abortKeyguardFadingOut
    void animateGoingToFullShade(long,long) -> animateGoingToFullShade
    void animateKeyguardFadingOut(long,long,java.lang.Runnable,boolean) -> animateKeyguardFadingOut
    float calculateHeadsUpAlpha() -> calculateHeadsUpAlpha
    void dispatchScrimsVisible() -> dispatchScrimsVisible
    void endAnimateKeyguardFadingOut(boolean) -> endAnimateKeyguardFadingOut
    int getBackgroundColor() -> getBackgroundColor
    float getCurrentScrimAlpha(android.view.View) -> getCurrentScrimAlpha
    float getDozeAlpha(android.view.View) -> getDozeAlpha
    float getDozeBehindAlpha() -> getDozeBehindAlpha
    float getDozeInFrontAlpha() -> getDozeInFrontAlpha
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    float getScrimInFrontAlpha() -> getScrimInFrontAlpha
    boolean isAnimating(android.view.View) -> isAnimating
    void onColorsChanged(com.android.internal.colorextraction.ColorExtractor,int) -> onColorsChanged
    void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpPinned
    void onHeadsUpPinnedModeChanged(boolean) -> onHeadsUpPinnedModeChanged
    void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> onHeadsUpStateChanged
    void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpUnPinned
    boolean onPreDraw() -> onPreDraw
    void scheduleUpdate() -> scheduleUpdate
    void setBouncerShowing(boolean) -> setBouncerShowing
    void setCurrentScrimAlpha(android.view.View,float) -> setCurrentScrimAlpha
    void setDozeBehindAlpha(float) -> setDozeBehindAlpha
    void setDozeInFrontAlpha(float) -> setDozeInFrontAlpha
    void setExcludedBackgroundArea(android.graphics.Rect) -> setExcludedBackgroundArea
    void setScrimAlpha(android.view.View,float) -> setScrimAlpha
    void setScrimBehindAlpha(float) -> setScrimBehindAlpha
    void setScrimBehindChangeRunnable(java.lang.Runnable) -> setScrimBehindChangeRunnable
    void setScrimBehindDrawable(android.graphics.drawable.Drawable) -> setScrimBehindDrawable
    void setScrimInFrontAlpha(float) -> setScrimInFrontAlpha
    void setTopHeadsUpDragAmount(android.view.View,float) -> setTopHeadsUpDragAmount
    void startScrimAnimation(android.view.View,float) -> startScrimAnimation
    void updateHeadsUpScrim(boolean) -> updateHeadsUpScrim
    void updateScrim(boolean,android.view.View,float,float) -> updateScrim
    void updateScrimColor(android.view.View) -> updateScrimColor
    void updateScrimKeyguard() -> updateScrimKeyguard
    void updateScrimNormal() -> updateScrimNormal
    void updateScrims() -> updateScrims
    void <clinit>() -> <clinit>
    void -com_android_systemui_statusbar_phone_ScrimController-mthref-0() -> -com_android_systemui_statusbar_phone_ScrimController-mthref-0
    void lambda$-com_android_systemui_statusbar_phone_ScrimController_20913(android.view.View,android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_phone_ScrimController_20913
    boolean -get0(com.android.systemui.statusbar.phone.ScrimController) -> -get0
    boolean -get1(com.android.systemui.statusbar.phone.ScrimController) -> -get1
    java.lang.Runnable -get2(com.android.systemui.statusbar.phone.ScrimController) -> -get2
    boolean -get3(com.android.systemui.statusbar.phone.ScrimController) -> -get3
    boolean -set0(com.android.systemui.statusbar.phone.ScrimController,boolean) -> -set0
    android.animation.ValueAnimator -set1(com.android.systemui.statusbar.phone.ScrimController,android.animation.ValueAnimator) -> -set1
    boolean -set2(com.android.systemui.statusbar.phone.ScrimController,boolean) -> -set2
    java.lang.Runnable -set3(com.android.systemui.statusbar.phone.ScrimController,java.lang.Runnable) -> -set3
    boolean -set4(com.android.systemui.statusbar.phone.ScrimController,boolean) -> -set4
    boolean -set5(com.android.systemui.statusbar.phone.ScrimController,boolean) -> -set5
    void -wrap0(com.android.systemui.statusbar.phone.ScrimController) -> -wrap0
com.android.systemui.statusbar.KeyboardShortcutKeysLayout$LayoutParams -> com.android.systemui.statusbar.KeyboardShortcutKeysLayout$LayoutParams:
    int mHorizontalSpacing -> mHorizontalSpacing
    int mVerticalSpacing -> mVerticalSpacing
    void <init>(int,int) -> <init>
    void <init>(int,int,android.view.ViewGroup$LayoutParams) -> <init>
com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent -> com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent:
    void <init>() -> <init>
com.android.keyguard.KeyguardPatternView$1 -> com.android.keyguard.KeyguardPatternView$1:
    com.android.keyguard.KeyguardPatternView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPatternView) -> <init>
    void run() -> run
com.android.systemui.statusbar.KeyguardAffordanceView$4 -> com.android.systemui.statusbar.KeyguardAffordanceView$4:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.StatusBar$24$2 -> com.android.systemui.statusbar.phone.StatusBar$24$2:
    com.android.systemui.statusbar.phone.StatusBar$24 this$1 -> this$1
    android.service.notification.StatusBarNotification val$sbn -> val$sbn
    android.service.notification.NotificationListenerService$RankingMap val$rankingMap -> val$rankingMap
    void <init>(com.android.systemui.statusbar.phone.StatusBar$24,android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> <init>
    void run() -> run
com.android.systemui.stackdivider.WindowManagerProxy$4 -> com.android.systemui.stackdivider.WindowManagerProxy$4:
    com.android.systemui.stackdivider.WindowManagerProxy this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.WindowManagerProxy) -> <init>
    void run() -> run
com.android.systemui.recents.RecentsImplProxy$1 -> com.android.systemui.recents.RecentsImplProxy$1:
    com.android.systemui.recents.RecentsImplProxy this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsImplProxy) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.qs.DataUsageGraph -> com.android.systemui.qs.DataUsageGraph:
    long mLimitLevel -> mLimitLevel
    int mMarkerWidth -> mMarkerWidth
    long mMaxLevel -> mMaxLevel
    int mOverlimitColor -> mOverlimitColor
    android.graphics.Paint mTmpPaint -> mTmpPaint
    android.graphics.RectF mTmpRect -> mTmpRect
    int mTrackColor -> mTrackColor
    int mUsageColor -> mUsageColor
    long mUsageLevel -> mUsageLevel
    int mWarningColor -> mWarningColor
    long mWarningLevel -> mWarningLevel
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
    void setLevels(long,long,long) -> setLevels
com.android.systemui.recents.views.TaskStackLayoutAlgorithm -> com.android.systemui.recents.views.TaskStackLayoutAlgorithm:
    int mMaxTranslationZ -> mMaxTranslationZ
    com.android.systemui.recents.views.TaskViewTransform mBackOfStackTransform -> mBackOfStackTransform
    int mBaseBottomMargin -> mBaseBottomMargin
    int mBaseInitialBottomOffset -> mBaseInitialBottomOffset
    int mBaseInitialTopOffset -> mBaseInitialTopOffset
    int mBaseSideMargin -> mBaseSideMargin
    int mBaseTopMargin -> mBaseTopMargin
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$TaskStackLayoutAlgorithmCallbacks mCb -> mCb
    android.content.Context mContext -> mContext
    int mFocusState -> mFocusState
    int mFocusedBottomPeekHeight -> mFocusedBottomPeekHeight
    android.graphics.Path mFocusedCurve -> mFocusedCurve
    com.android.systemui.recents.misc.FreePathInterpolator mFocusedCurveInterpolator -> mFocusedCurveInterpolator
    android.graphics.Path mFocusedDimCurve -> mFocusedDimCurve
    com.android.systemui.recents.misc.FreePathInterpolator mFocusedDimCurveInterpolator -> mFocusedDimCurveInterpolator
    com.android.systemui.recents.views.Range mFocusedRange -> mFocusedRange
    int mFocusedTopPeekHeight -> mFocusedTopPeekHeight
    com.android.systemui.recents.views.FreeformWorkspaceLayoutAlgorithm mFreeformLayoutAlgorithm -> mFreeformLayoutAlgorithm
    android.graphics.Rect mFreeformRect -> mFreeformRect
    int mFreeformStackGap -> mFreeformStackGap
    float mFrontMostTaskP -> mFrontMostTaskP
    com.android.systemui.recents.views.TaskViewTransform mFrontOfStackTransform -> mFrontOfStackTransform
    int mInitialBottomOffset -> mInitialBottomOffset
    float mInitialScrollP -> mInitialScrollP
    int mInitialTopOffset -> mInitialTopOffset
    float mMaxScrollP -> mMaxScrollP
    int mMinMargin -> mMinMargin
    float mMinScrollP -> mMinScrollP
    int mMinTranslationZ -> mMinTranslationZ
    int mNumFreeformTasks -> mNumFreeformTasks
    int mNumStackTasks -> mNumStackTasks
    android.graphics.Rect mStackActionButtonRect -> mStackActionButtonRect
    int mStackBottomOffset -> mStackBottomOffset
    android.graphics.Rect mStackRect -> mStackRect
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState mState -> mState
    android.graphics.Rect mSystemInsets -> mSystemInsets
    com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm mTaskGridLayoutAlgorithm -> mTaskGridLayoutAlgorithm
    android.util.SparseIntArray mTaskIndexMap -> mTaskIndexMap
    android.util.SparseArray mTaskIndexOverrideMap -> mTaskIndexOverrideMap
    android.graphics.Rect mTaskRect -> mTaskRect
    com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm mTaskStackLowRamLayoutAlgorithm -> mTaskStackLowRamLayoutAlgorithm
    int mTitleBarHeight -> mTitleBarHeight
    android.graphics.Path mUnfocusedCurve -> mUnfocusedCurve
    com.android.systemui.recents.misc.FreePathInterpolator mUnfocusedCurveInterpolator -> mUnfocusedCurveInterpolator
    android.graphics.Path mUnfocusedDimCurve -> mUnfocusedDimCurve
    com.android.systemui.recents.misc.FreePathInterpolator mUnfocusedDimCurveInterpolator -> mUnfocusedDimCurveInterpolator
    com.android.systemui.recents.views.Range mUnfocusedRange -> mUnfocusedRange
    com.android.systemui.recents.views.TaskViewTransform getFrontOfStackTransform() -> getFrontOfStackTransform
    com.android.systemui.recents.views.TaskViewTransform transformToScreenCoordinates(com.android.systemui.recents.views.TaskViewTransform,android.graphics.Rect) -> transformToScreenCoordinates
    void getTaskStackBounds(android.graphics.Rect,android.graphics.Rect,int,int,int,android.graphics.Rect) -> getTaskStackBounds
    int getDimensionForDevice(android.content.Context,int,int,int,int,int,int,int) -> getDimensionForDevice
    void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackLayoutAlgorithm$TaskStackLayoutAlgorithmCallbacks) -> <init>
    void addUnfocusedTaskOverride(com.android.systemui.recents.model.Task,float) -> addUnfocusedTaskOverride
    void addUnfocusedTaskOverride(com.android.systemui.recents.views.TaskView,float) -> addUnfocusedTaskOverride
    void clearUnfocusedTaskOverrides() -> clearUnfocusedTaskOverrides
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$VisibilityReport computeStackVisibilityReport(java.util.ArrayList) -> computeStackVisibilityReport
    android.graphics.Path constructFocusedCurve() -> constructFocusedCurve
    android.graphics.Path constructFocusedDimCurve() -> constructFocusedDimCurve
    android.graphics.Path constructUnfocusedCurve() -> constructUnfocusedCurve
    android.graphics.Path constructUnfocusedDimCurve() -> constructUnfocusedDimCurve
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    com.android.systemui.recents.views.TaskViewTransform getBackOfStackTransform() -> getBackOfStackTransform
    float getDeltaPForY(int,int) -> getDeltaPForY
    int getDimensionForDevice(android.content.Context,int,int,int,int) -> getDimensionForDevice
    int getFocusState() -> getFocusState
    int getInitialFocusState() -> getInitialFocusState
    float getNormalizedXFromFocusedY(float,int) -> getNormalizedXFromFocusedY
    float getNormalizedXFromUnfocusedY(float,int) -> getNormalizedXFromUnfocusedY
    int getScaleForExtent(android.graphics.Rect,android.graphics.Rect,int,int,int) -> getScaleForExtent
    android.graphics.Rect getStackActionButtonRect() -> getStackActionButtonRect
    float getStackScrollForTask(com.android.systemui.recents.model.Task) -> getStackScrollForTask
    float getStackScrollForTaskAtInitialOffset(com.android.systemui.recents.model.Task) -> getStackScrollForTaskAtInitialOffset
    float getStackScrollForTaskIgnoreOverrides(com.android.systemui.recents.model.Task) -> getStackScrollForTaskIgnoreOverrides
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState getStackState() -> getStackState
    com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform) -> getStackTransform
    com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean) -> getStackTransform
    com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.recents.model.Task,float,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean,boolean) -> getStackTransform
    void getStackTransform(float,float,float,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean,boolean) -> getStackTransform
    com.android.systemui.recents.views.TaskViewTransform getStackTransformScreenCoordinates(com.android.systemui.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,android.graphics.Rect) -> getStackTransformScreenCoordinates
    android.graphics.Rect getTaskRect() -> getTaskRect
    android.graphics.Rect getUntransformedTaskViewBounds() -> getUntransformedTaskViewBounds
    int getYForDeltaP(float,float) -> getYForDeltaP
    void initialize(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState) -> initialize
    boolean isInitialized() -> isInitialized
    boolean isInvalidOverrideX(float,float,float) -> isInvalidOverrideX
    void reloadOnConfigurationChange(android.content.Context) -> reloadOnConfigurationChange
    void reset() -> reset
    void setFocusState(int) -> setFocusState
    boolean setSystemInsets(android.graphics.Rect) -> setSystemInsets
    void setTaskOverridesForInitialState(com.android.systemui.recents.model.TaskStack,boolean) -> setTaskOverridesForInitialState
    void update(com.android.systemui.recents.model.TaskStack,android.util.ArraySet,com.android.systemui.recents.RecentsActivityLaunchState) -> update
    float updateFocusStateOnScroll(float,float,float) -> updateFocusStateOnScroll
    void updateFrontBackTransforms() -> updateFrontBackTransforms
    boolean useGridLayout() -> useGridLayout
android.support.v7.preference.PreferenceDataStore -> android.support.v7.preference.PreferenceDataStore:
    void putInt(java.lang.String,int) -> putInt
    void putStringSet(java.lang.String,java.util.Set) -> putStringSet
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    void putString(java.lang.String,java.lang.String) -> putString
    void putBoolean(java.lang.String,boolean) -> putBoolean
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
    void <init>() -> <init>
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInt(java.lang.String,int) -> getInt
android.support.v7.appcompat.R$string -> android.support.v7.appcompat.R$string:
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_search -> abc_searchview_description_search
    void <init>() -> <init>
com.android.systemui.usb.UsbConfirmActivity -> com.android.systemui.usb.UsbConfirmActivity:
    android.hardware.usb.UsbAccessory mAccessory -> mAccessory
    android.widget.CheckBox mAlwaysUse -> mAlwaysUse
    android.widget.TextView mClearDefaultHint -> mClearDefaultHint
    android.hardware.usb.UsbDevice mDevice -> mDevice
    com.android.systemui.usb.UsbDisconnectedReceiver mDisconnectedReceiver -> mDisconnectedReceiver
    android.content.pm.ResolveInfo mResolveInfo -> mResolveInfo
    void <init>() -> <init>
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
android.support.v7.widget.ViewStubCompat$OnInflateListener -> android.support.v7.widget.ViewStubCompat$OnInflateListener:
    void onInflate(android.support.v7.widget.ViewStubCompat,android.view.View) -> onInflate
android.support.v7.app.MediaRouteControllerDialog$MediaControllerCallback -> android.support.v7.app.MediaRouteControllerDialog$MediaControllerCallback:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
com.android.systemui.tuner.RadioListPreference -> com.android.systemui.tuner.RadioListPreference:
    android.content.DialogInterface$OnClickListener mOnClickListener -> mOnClickListener
    java.lang.CharSequence mSummary -> mSummary
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.CharSequence getSummary() -> getSummary
    void onDialogClosed(boolean) -> onDialogClosed
    android.app.Dialog onDialogCreated(android.app.DialogFragment,android.app.Dialog) -> onDialogCreated
    void onDialogStateRestored(android.app.DialogFragment,android.app.Dialog,android.os.Bundle) -> onDialogStateRestored
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder,android.content.DialogInterface$OnClickListener) -> onPrepareDialogBuilder
    void setSummary(java.lang.CharSequence) -> setSummary
    void lambda$-com_android_systemui_tuner_RadioListPreference_2612(android.app.Dialog,android.view.View) -> lambda$-com_android_systemui_tuner_RadioListPreference_2612
    android.content.DialogInterface$OnClickListener -get0(com.android.systemui.tuner.RadioListPreference) -> -get0
com.android.systemui.statusbar.notification.AboveShelfObserver -> com.android.systemui.statusbar.notification.AboveShelfObserver:
    boolean mHasViewsAboveShelf -> mHasViewsAboveShelf
    android.view.ViewGroup mHostLayout -> mHostLayout
    com.android.systemui.statusbar.notification.AboveShelfObserver$HasViewAboveShelfChangedListener mListener -> mListener
    void <init>(android.view.ViewGroup) -> <init>
    void setListener(com.android.systemui.statusbar.notification.AboveShelfObserver$HasViewAboveShelfChangedListener) -> setListener
    boolean hasViewsAboveShelf() -> hasViewsAboveShelf
    void onAboveShelfStateChanged(boolean) -> onAboveShelfStateChanged
com.android.systemui.qs.PagedTileLayout$3 -> com.android.systemui.qs.PagedTileLayout$3:
    com.android.systemui.qs.PagedTileLayout this$0 -> this$0
    void <init>(com.android.systemui.qs.PagedTileLayout) -> <init>
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.os.Bundle mBundle -> mBundle
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> PREFERRED_DESCRIPTION_ORDER
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String[] PREFERRED_BITMAP_ORDER -> PREFERRED_BITMAP_ORDER
    java.lang.String[] PREFERRED_URI_ORDER -> PREFERRED_URI_ORDER
    java.lang.Object mMetadataObj -> mMetadataObj
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    long getLong(java.lang.String) -> getLong
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    int describeContents() -> describeContents
    java.lang.String getString(java.lang.String) -> getString
    java.lang.CharSequence getText(java.lang.String) -> getText
    void <clinit>() -> <clinit>
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    int mTitleMarginEnd -> mTitleMarginEnd
    android.widget.ImageButton mCollapseButtonView -> mCollapseButtonView
    int mGravity -> mGravity
    android.support.v7.widget.ActionMenuView mMenuView -> mMenuView
    android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> mExpandedMenuPresenter
    int mContentInsetStartWithNavigation -> mContentInsetStartWithNavigation
    android.content.Context mPopupContext -> mPopupContext
    android.widget.TextView mTitleTextView -> mTitleTextView
    android.support.v7.widget.ToolbarWidgetWrapper mWrapper -> mWrapper
    android.support.v7.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    android.graphics.drawable.Drawable mCollapseIcon -> mCollapseIcon
    boolean mEatingTouch -> mEatingTouch
    java.lang.CharSequence mTitleText -> mTitleText
    java.lang.Runnable mShowOverflowMenuRunnable -> mShowOverflowMenuRunnable
    int mTitleTextAppearance -> mTitleTextAppearance
    boolean mEatingHover -> mEatingHover
    android.widget.TextView mSubtitleTextView -> mSubtitleTextView
    android.support.v7.widget.ActionMenuPresenter mOuterActionMenuPresenter -> mOuterActionMenuPresenter
    android.support.v7.widget.RtlSpacingHelper mContentInsets -> mContentInsets
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    int[] mTempMargins -> mTempMargins
    int mTitleMarginBottom -> mTitleMarginBottom
    android.support.v7.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> mMenuBuilderCallback
    java.util.ArrayList mHiddenViews -> mHiddenViews
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> mMenuViewItemClickListener
    android.widget.ImageView mLogoView -> mLogoView
    int mTitleMarginTop -> mTitleMarginTop
    java.lang.CharSequence mCollapseDescription -> mCollapseDescription
    int mPopupTheme -> mPopupTheme
    boolean mCollapsible -> mCollapsible
    java.util.ArrayList mTempViews -> mTempViews
    android.view.View mExpandedActionView -> mExpandedActionView
    android.widget.ImageButton mNavButtonView -> mNavButtonView
    int mSubtitleTextColor -> mSubtitleTextColor
    int mContentInsetEndWithActions -> mContentInsetEndWithActions
    java.lang.CharSequence mSubtitleText -> mSubtitleText
    int mTitleMarginStart -> mTitleMarginStart
    int mSubtitleTextAppearance -> mSubtitleTextAppearance
    int mMaxButtonHeight -> mMaxButtonHeight
    int mTitleTextColor -> mTitleTextColor
    int mButtonGravity -> mButtonGravity
    void setPopupTheme(int) -> setPopupTheme
    void collapseActionView() -> collapseActionView
    java.lang.CharSequence getTitle() -> getTitle
    void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    void dismissPopupMenus() -> dismissPopupMenus
    void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getChildVerticalGravity(int) -> getChildVerticalGravity
    int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    void ensureMenu() -> ensureMenu
    void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    void setTitleTextColor(int) -> setTitleTextColor
    boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getContentInsetEnd() -> getContentInsetEnd
    void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter) -> setMenu
    void ensureLogoView() -> ensureLogoView
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    void setCollapsible(boolean) -> setCollapsible
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean hideOverflowMenu() -> hideOverflowMenu
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getVerticalMargins(android.view.View) -> getVerticalMargins
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    android.support.v7.widget.DecorToolbar getWrapper() -> getWrapper
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean showOverflowMenu() -> showOverflowMenu
    void addSystemView(android.view.View,boolean) -> addSystemView
    void ensureCollapseButtonView() -> ensureCollapseButtonView
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    boolean shouldCollapse() -> shouldCollapse
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean shouldLayout(android.view.View) -> shouldLayout
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    void ensureMenuView() -> ensureMenuView
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    boolean hasExpandedActionView() -> hasExpandedActionView
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void ensureNavButtonView() -> ensureNavButtonView
    void postShowOverflowMenu() -> postShowOverflowMenu
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    void ensureContentInsets() -> ensureContentInsets
    int getChildTop(android.view.View,int) -> getChildTop
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    void <init>(android.content.Context) -> <init>
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    int getContentInsetStart() -> getContentInsetStart
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSubtitleTextColor(int) -> setSubtitleTextColor
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.android.systemui.statusbar.RemoteInputController$Callback -> com.android.systemui.statusbar.RemoteInputController$Callback:
    void onRemoteInputActive(boolean) -> onRemoteInputActive
    void onRemoteInputSent(com.android.systemui.statusbar.NotificationData$Entry) -> onRemoteInputSent
com.android.systemui.statusbar.policy.RotationLockController -> com.android.systemui.statusbar.policy.RotationLockController:
    void setRotationLocked(boolean) -> setRotationLocked
    boolean isRotationLocked() -> isRotationLocked
    int getRotationLockOrientation() -> getRotationLockOrientation
com.android.systemui.statusbar.policy.HeadsUpManager$3 -> com.android.systemui.statusbar.policy.HeadsUpManager$3:
    com.android.systemui.statusbar.policy.HeadsUpManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.HeadsUpManager) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.SearchView$7:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.android.systemui.statusbar.notification.NotificationInflater$3 -> com.android.systemui.statusbar.notification.NotificationInflater$3:
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress val$result -> val$result
    void <init>(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> <init>
    android.widget.RemoteViews getRemoteView() -> getRemoteView
    void setResultView(android.view.View) -> setResultView
com.android.systemui.media.RingtonePlayer$Client -> com.android.systemui.media.RingtonePlayer$Client:
    android.media.Ringtone mRingtone -> mRingtone
    android.os.IBinder mToken -> mToken
    com.android.systemui.media.RingtonePlayer this$0 -> this$0
    void <init>(com.android.systemui.media.RingtonePlayer,android.os.IBinder,android.net.Uri,android.os.UserHandle,android.media.AudioAttributes) -> <init>
    void binderDied() -> binderDied
    android.media.Ringtone -get0(com.android.systemui.media.RingtonePlayer$Client) -> -get0
    android.os.IBinder -get1(com.android.systemui.media.RingtonePlayer$Client) -> -get1
com.android.systemui.statusbar.stack.ExpandableViewState$4 -> com.android.systemui.statusbar.stack.ExpandableViewState$4:
    com.android.systemui.statusbar.stack.ExpandableViewState this$0 -> this$0
    com.android.systemui.statusbar.ExpandableView val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.ExpandableView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener:
    void onAnimationsFinished() -> onAnimationsFinished
com.android.systemui.statusbar.policy.ExtensionController$TunerFactory -> com.android.systemui.statusbar.policy.ExtensionController$TunerFactory:
    java.lang.Object create(java.util.Map) -> create
    java.lang.String[] keys() -> keys
com.android.systemui.recents.RecentsActivityLaunchState -> com.android.systemui.recents.RecentsActivityLaunchState:
    boolean launchedFromApp -> launchedFromApp
    boolean launchedFromBlacklistedApp -> launchedFromBlacklistedApp
    boolean launchedFromHome -> launchedFromHome
    boolean launchedFromPipApp -> launchedFromPipApp
    int launchedNumVisibleTasks -> launchedNumVisibleTasks
    int launchedNumVisibleThumbnails -> launchedNumVisibleThumbnails
    int launchedToTaskId -> launchedToTaskId
    boolean launchedViaDockGesture -> launchedViaDockGesture
    boolean launchedViaDragGesture -> launchedViaDragGesture
    boolean launchedWithAltTab -> launchedWithAltTab
    boolean launchedWithNextPipApp -> launchedWithNextPipApp
    void <init>() -> <init>
    int getInitialFocusTaskIndex(int,boolean) -> getInitialFocusTaskIndex
    void reset() -> reset
android.support.v4.content.Loader$OnLoadCanceledListener -> android.support.v4.content.Loader$OnLoadCanceledListener:
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.graphics.drawable.DrawableWrapper:
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
com.android.systemui.tuner.TunerActivity -> com.android.systemui.tuner.TunerActivity:
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onPreferenceStartFragment(android.support.v14.preference.PreferenceFragment,android.support.v7.preference.Preference) -> onPreferenceStartFragment
    boolean onPreferenceStartScreen(android.support.v14.preference.PreferenceFragment,android.support.v7.preference.PreferenceScreen) -> onPreferenceStartScreen
    void lambda$-com_android_systemui_tuner_TunerActivity_2214(com.android.systemui.fragments.FragmentService) -> lambda$-com_android_systemui_tuner_TunerActivity_2214
com.android.systemui.statusbar.phone.StatusBar$7 -> com.android.systemui.statusbar.phone.StatusBar$7:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onDreamingStateChanged(boolean) -> onDreamingStateChanged
android.support.v17.leanback.transition.FadeAndShortSlide$3 -> android.support.v17.leanback.transition.FadeAndShortSlide$3:
    void <init>() -> <init>
    float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[]) -> getGoneX
com.android.systemui.classifier.HistoryEvaluator -> com.android.systemui.classifier.HistoryEvaluator:
    java.util.ArrayList mGestureWeights -> mGestureWeights
    long mLastUpdate -> mLastUpdate
    java.util.ArrayList mStrokes -> mStrokes
    void <init>() -> <init>
    void addGesture(float) -> addGesture
    void addStroke(float) -> addStroke
    void decayValue() -> decayValue
    void decayValue(java.util.ArrayList,float) -> decayValue
    float getEvaluation() -> getEvaluation
    boolean isZero(float) -> isZero
    float weightedAverage(java.util.ArrayList) -> weightedAverage
android.support.v7.widget.DefaultItemAnimator$1 -> android.support.v7.widget.DefaultItemAnimator$1:
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    java.util.ArrayList val$moves -> val$moves
    void run() -> run
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mSize -> mSize
    int mOffset -> mOffset
    int mIndex -> mIndex
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean mCanRemove -> mCanRemove
    void <init>(android.support.v4.util.MapCollections,int) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.provider.SelfDestructiveThread$3 -> android.support.v4.provider.SelfDestructiveThread$3:
    java.util.concurrent.locks.ReentrantLock val$lock -> val$lock
    java.util.concurrent.atomic.AtomicBoolean val$running -> val$running
    java.util.concurrent.atomic.AtomicReference val$holder -> val$holder
    android.support.v4.provider.SelfDestructiveThread this$0 -> this$0
    java.util.concurrent.Callable val$callable -> val$callable
    java.util.concurrent.locks.Condition val$cond -> val$cond
    void run() -> run
    void <init>(android.support.v4.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$1 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$1:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v17.leanback.widget.StreamingTextView -> android.support.v17.leanback.widget.StreamingTextView:
    int mStreamPosition -> mStreamPosition
    android.util.Property STREAM_POSITION_PROPERTY -> STREAM_POSITION_PROPERTY
    java.util.regex.Pattern SPLIT_PATTERN -> SPLIT_PATTERN
    android.graphics.Bitmap mTwoDot -> mTwoDot
    android.graphics.Bitmap mOneDot -> mOneDot
    android.animation.ObjectAnimator mStreamingAnimation -> mStreamingAnimation
    java.util.Random mRandom -> mRandom
    void updateRecognizedText(java.lang.String,java.lang.String) -> updateRecognizedText
    void updateText(java.lang.CharSequence) -> updateText
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    android.graphics.Bitmap getScaledBitmap(int,float) -> getScaledBitmap
    void onFinishInflate() -> onFinishInflate
    void startStreamAnimation() -> startStreamAnimation
    boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addDottySpans(android.text.SpannableStringBuilder,java.lang.String,int) -> addDottySpans
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void cancelStreamAnimation() -> cancelStreamAnimation
    void <clinit>() -> <clinit>
    void setStreamPosition(int) -> setStreamPosition
    int getStreamPosition() -> getStreamPosition
    void reset() -> reset
com.android.systemui.pip.phone.-$Lambda$_6klcN0VuBwRgNNfNC-wfWLtF9M$1 -> com.android.systemui.pip.phone.-$Lambda$_6klcN0VuBwRgNNfNC-wfWLtF9M$1:
    boolean -$f0 -> -$f0
    int -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    java.lang.Object -$f5 -> -$f5
    void <init>(boolean,int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v4.app.FragmentTransition$2 -> android.support.v4.app.FragmentTransition$2:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    java.lang.Object val$exitTransition -> val$exitTransition
    java.lang.Object val$enterTransition -> val$enterTransition
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.support.v4.app.FragmentTransitionImpl val$impl -> val$impl
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.view.View val$nonExistentView -> val$nonExistentView
    void <init>(java.lang.Object,android.support.v4.app.FragmentTransitionImpl,android.view.View,android.support.v4.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    void run() -> run
com.android.settingslib.bluetooth.A2dpSinkProfile -> com.android.settingslib.bluetooth.A2dpSinkProfile:
    android.bluetooth.BluetoothA2dpSink mService -> mService
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    android.os.ParcelUuid[] SRC_UUIDS -> SRC_UUIDS
    java.util.List getConnectedDevices() -> getConnectedDevices
    android.bluetooth.BluetoothA2dpSink -set1(com.android.settingslib.bluetooth.A2dpSinkProfile,android.bluetooth.BluetoothA2dpSink) -> -set1
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    boolean -set0(com.android.settingslib.bluetooth.A2dpSinkProfile,boolean) -> -set0
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.A2dpSinkProfile) -> -get1
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.settingslib.bluetooth.A2dpSinkProfile) -> -get2
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> <init>
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    android.bluetooth.BluetoothA2dpSink -get4(com.android.settingslib.bluetooth.A2dpSinkProfile) -> -get4
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get3(com.android.settingslib.bluetooth.A2dpSinkProfile) -> -get3
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    void finalize() -> finalize
com.android.systemui.volume.VolumeDialogMotion$4 -> com.android.systemui.volume.VolumeDialogMotion$4:
    boolean mCancelled -> mCancelled
    com.android.systemui.volume.VolumeDialogMotion this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogMotion) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.SignalDrawable$1 -> com.android.systemui.statusbar.phone.SignalDrawable$1:
    com.android.systemui.statusbar.phone.SignalDrawable this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.SignalDrawable) -> <init>
    void run() -> run
com.android.systemui.doze.DozeSensors$Callback -> com.android.systemui.doze.DozeSensors$Callback:
    void onSensorPulse(int,boolean,float,float) -> onSensorPulse
com.android.systemui.assist.AssistOrbView$6 -> com.android.systemui.assist.AssistOrbView$6:
    com.android.systemui.assist.AssistOrbView this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistOrbView) -> <init>
    void run() -> run
android.support.v7.widget.LinearLayoutManager -> android.support.v7.widget.LinearLayoutManager:
    android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState -> mPendingSavedState
    boolean mSmoothScrollbarEnabled -> mSmoothScrollbarEnabled
    android.support.v7.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult -> mLayoutChunkResult
    int mOrientation -> mOrientation
    boolean mRecycleChildrenOnDetach -> mRecycleChildrenOnDetach
    boolean mLastStackFromEnd -> mLastStackFromEnd
    boolean mShouldReverseLayout -> mShouldReverseLayout
    android.support.v7.widget.OrientationHelper mOrientationHelper -> mOrientationHelper
    int mPendingScrollPosition -> mPendingScrollPosition
    android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> mAnchorInfo
    boolean mStackFromEnd -> mStackFromEnd
    android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState -> mLayoutState
    int mInitialPrefetchItemCount -> mInitialPrefetchItemCount
    int mPendingScrollPositionOffset -> mPendingScrollPositionOffset
    boolean mReverseLayout -> mReverseLayout
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollBy
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> computeScrollRange
    int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    void <init>(android.content.Context,int,boolean) -> <init>
    int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State) -> updateLayoutState
    boolean shouldMeasureTwice() -> shouldMeasureTwice
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findLastPartiallyOrCompletelyInvisibleChild
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findFirstReferenceChild
    void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    boolean canScrollVertically() -> canScrollVertically
    void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    android.view.View getChildClosestToStart() -> getChildClosestToStart
    boolean resolveIsInfinite() -> resolveIsInfinite
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    void ensureLayoutState() -> ensureLayoutState
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean) -> fill
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeScrollExtent
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findLastReferenceChild
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scrollToPosition(int) -> scrollToPosition
    void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    boolean canScrollHorizontally() -> canScrollHorizontally
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State) -> getExtraLayoutSpace
    void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    android.view.View findViewByPosition(int) -> findViewByPosition
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    void setOrientation(int) -> setOrientation
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeScrollOffset
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    boolean isLayoutRTL() -> isLayoutRTL
    int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findFirstPartiallyOrCompletelyInvisibleChild
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    int getOrientation() -> getOrientation
    android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    void setReverseLayout(boolean) -> setReverseLayout
    void <init>(android.content.Context) -> <init>
    int findLastVisibleItemPosition() -> findLastVisibleItemPosition
android.support.v7.content.res.AppCompatColorStateListInflater -> android.support.v7.content.res.AppCompatColorStateListInflater:
    android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    void <init>() -> <init>
    int modulateColorAlpha(int,float) -> modulateColorAlpha
com.android.systemui.ViewInvertHelper$2 -> com.android.systemui.ViewInvertHelper$2:
    com.android.systemui.ViewInvertHelper this$0 -> this$0
    boolean val$invert -> val$invert
    void <init>(com.android.systemui.ViewInvertHelper,boolean) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.util.HashMap mRoots -> mRoots
    java.lang.String mAuthority -> mAuthority
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    void <init>(java.lang.String) -> <init>
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    void addRoot(java.lang.String,java.io.File) -> addRoot
android.support.v4.view.AsyncLayoutInflater -> android.support.v4.view.AsyncLayoutInflater:
    android.os.Handler mHandler -> mHandler
    android.support.v4.view.AsyncLayoutInflater$InflateThread mInflateThread -> mInflateThread
    android.view.LayoutInflater mInflater -> mInflater
    android.os.Handler$Callback mHandlerCallback -> mHandlerCallback
    void inflate(int,android.view.ViewGroup,android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener) -> inflate
    void <init>(android.content.Context) -> <init>
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$8 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$8:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    android.telecom.TelecomManager val$tm -> val$tm
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView,android.telecom.TelecomManager) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.CallbackHandler$2 -> com.android.systemui.statusbar.policy.CallbackHandler$2:
    com.android.systemui.statusbar.policy.CallbackHandler this$0 -> this$0
    com.android.systemui.statusbar.policy.NetworkController$IconState val$statusIcon -> val$statusIcon
    com.android.systemui.statusbar.policy.NetworkController$IconState val$qsIcon -> val$qsIcon
    int val$statusType -> val$statusType
    int val$qsType -> val$qsType
    boolean val$activityIn -> val$activityIn
    boolean val$activityOut -> val$activityOut
    int val$dataActivityId -> val$dataActivityId
    int val$stackedDataIcon -> val$stackedDataIcon
    int val$stackedVoiceIcon -> val$stackedVoiceIcon
    java.lang.String val$typeContentDescription -> val$typeContentDescription
    java.lang.String val$description -> val$description
    boolean val$isWide -> val$isWide
    int val$subId -> val$subId
    boolean val$roaming -> val$roaming
    void <init>(com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkController$IconState,com.android.systemui.statusbar.policy.NetworkController$IconState,int,int,boolean,boolean,int,int,int,java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    void run() -> run
android.support.v7.widget.AppCompatTextView -> android.support.v7.widget.AppCompatTextView:
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    void setBackgroundResource(int) -> setBackgroundResource
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    void <init>(android.content.Context) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void setTextSize(int,float) -> setTextSize
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    int getAutoSizeTextType() -> getAutoSizeTextType
com.android.systemui.volume.-$Lambda$0R1dyrsSgP-OmxYsS1O8ZgQhrN4 -> com.android.systemui.volume.-$Lambda$0R1dyrsSgP-OmxYsS1O8ZgQhrN4:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(boolean) -> $m$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v7.widget.TooltipCompat$BaseViewCompatImpl -> android.support.v7.widget.TooltipCompat$BaseViewCompatImpl:
    void <init>(android.support.v7.widget.TooltipCompat$BaseViewCompatImpl) -> <init>
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    void <init>() -> <init>
android.support.v7.view.menu.SubMenuBuilder -> android.support.v7.view.menu.SubMenuBuilder:
    android.support.v7.view.menu.MenuBuilder mParentMenu -> mParentMenu
    android.support.v7.view.menu.MenuItemImpl mItem -> mItem
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.support.v7.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setQwertyMode(boolean) -> setQwertyMode
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    android.view.MenuItem getItem() -> getItem
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> <init>
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> setCallback
    boolean isQwertyMode() -> isQwertyMode
    android.view.Menu getParentMenu() -> getParentMenu
    boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
com.android.systemui.statusbar.phone.NotificationListenerWithPlugins -> com.android.systemui.statusbar.phone.NotificationListenerWithPlugins:
    boolean mConnected -> mConnected
    java.util.ArrayList mPlugins -> mPlugins
    void <init>() -> <init>
    void onPluginConnected() -> onPluginConnected
    android.service.notification.StatusBarNotification[] getActiveNotifications() -> getActiveNotifications
    android.service.notification.NotificationListenerService$RankingMap getCurrentRanking() -> getCurrentRanking
    boolean onPluginNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> onPluginNotificationPosted
    boolean onPluginNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> onPluginNotificationRemoved
    android.service.notification.NotificationListenerService$RankingMap onPluginRankingUpdate(android.service.notification.NotificationListenerService$RankingMap) -> onPluginRankingUpdate
    void registerAsSystemService(android.content.Context,android.content.ComponentName,int) -> registerAsSystemService
    void unregisterAsSystemService() -> unregisterAsSystemService
    com.android.systemui.plugins.NotificationListenerController$NotificationProvider getProvider() -> getProvider
    void onPluginConnected(com.android.systemui.plugins.NotificationListenerController,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.NotificationListenerController) -> onPluginDisconnected
    void lambda$-com_android_systemui_statusbar_phone_NotificationListenerWithPlugins_3014(com.android.systemui.plugins.NotificationListenerController) -> lambda$-com_android_systemui_statusbar_phone_NotificationListenerWithPlugins_3014
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
    android.service.notification.NotificationListenerService$RankingMap -wrap0(com.android.systemui.statusbar.phone.NotificationListenerWithPlugins) -> -wrap0
    android.service.notification.StatusBarNotification[] -wrap1(com.android.systemui.statusbar.phone.NotificationListenerWithPlugins) -> -wrap1
android.support.v17.leanback.widget.Grid -> android.support.v17.leanback.widget.Grid:
    int mSpacing -> mSpacing
    android.support.v17.leanback.widget.Grid$Provider mProvider -> mProvider
    android.support.v4.util.CircularIntArray[] mTmpItemPositionsInRows -> mTmpItemPositionsInRows
    int mFirstVisibleIndex -> mFirstVisibleIndex
    java.lang.Object[] mTmpItem -> mTmpItem
    int mLastVisibleIndex -> mLastVisibleIndex
    boolean mReversedFlow -> mReversedFlow
    int mStartIndex -> mStartIndex
    int mNumRows -> mNumRows
    void setReversedFlow(boolean) -> setReversedFlow
    int getLastVisibleIndex() -> getLastVisibleIndex
    void resetVisibleIndex() -> resetVisibleIndex
    void setNumRows(int) -> setNumRows
    int findRowMax(boolean,int,int[]) -> findRowMax
    boolean isReversedFlow() -> isReversedFlow
    void setStart(int) -> setStart
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    int getFirstVisibleIndex() -> getFirstVisibleIndex
    void prependVisibleItems(int) -> prependVisibleItems
    void fillDisappearingItems(int[],int,android.util.SparseIntArray) -> fillDisappearingItems
    void setSpacing(int) -> setSpacing
    void appendVisibleItems(int) -> appendVisibleItems
    boolean checkAppendOverLimit(int) -> checkAppendOverLimit
    boolean checkPrependOverLimit(int) -> checkPrependOverLimit
    android.support.v17.leanback.widget.Grid$Location getLocation(int) -> getLocation
    int getNumRows() -> getNumRows
    android.support.v4.util.CircularIntArray[] getItemPositionsInRows(int,int) -> getItemPositionsInRows
    void setProvider(android.support.v17.leanback.widget.Grid$Provider) -> setProvider
    void invalidateItemsAfter(int) -> invalidateItemsAfter
    android.support.v17.leanback.widget.Grid createGrid(int) -> createGrid
    android.support.v4.util.CircularIntArray[] getItemPositionsInRows() -> getItemPositionsInRows
    void removeInvisibleItemsAtFront(int,int) -> removeInvisibleItemsAtFront
    boolean appendVisibleItems(int,boolean) -> appendVisibleItems
    boolean prependVisibleItems(int,boolean) -> prependVisibleItems
    boolean appendOneColumnVisibleItems() -> appendOneColumnVisibleItems
    void removeInvisibleItemsAtEnd(int,int) -> removeInvisibleItemsAtEnd
    int findRowMin(boolean,int,int[]) -> findRowMin
    boolean prependOneColumnVisibleItems() -> prependOneColumnVisibleItems
    int getRowIndex(int) -> getRowIndex
    int findRowMin(boolean,int[]) -> findRowMin
    int findRowMax(boolean,int[]) -> findRowMax
    void <init>() -> <init>
    void resetVisibleIndexIfEmpty() -> resetVisibleIndexIfEmpty
android.support.v17.leanback.widget.OnChildLaidOutListener -> android.support.v17.leanback.widget.OnChildLaidOutListener:
    void onChildLaidOut(android.view.ViewGroup,android.view.View,int,long) -> onChildLaidOut
com.android.systemui.qs.car.CarQSFooter -> com.android.systemui.qs.car.CarQSFooter:
    android.widget.ImageView mMultiUserAvatar -> mMultiUserAvatar
    com.android.systemui.statusbar.phone.MultiUserSwitch mMultiUserSwitch -> mMultiUserSwitch
    com.android.systemui.statusbar.car.UserGridView mUserGridView -> mUserGridView
    com.android.systemui.statusbar.policy.UserInfoController mUserInfoController -> mUserInfoController
    android.widget.TextView mUserName -> mUserName
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.View getExpandView() -> getExpandView
    void onFinishInflate() -> onFinishInflate
    void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> onUserInfoChanged
    void setExpanded(boolean) -> setExpanded
    void setExpansion(float) -> setExpansion
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void setListening(boolean) -> setListening
    void setQSPanel(com.android.systemui.qs.QSPanel) -> setQSPanel
    void setUserGridView(com.android.systemui.statusbar.car.UserGridView) -> setUserGridView
    void lambda$-com_android_systemui_qs_car_CarQSFooter_2489(android.view.View) -> lambda$-com_android_systemui_qs_car_CarQSFooter_2489
    void lambda$-com_android_systemui_qs_car_CarQSFooter_2902(android.view.View) -> lambda$-com_android_systemui_qs_car_CarQSFooter_2902
    void lambda$-com_android_systemui_qs_car_CarQSFooter_3240() -> lambda$-com_android_systemui_qs_car_CarQSFooter_3240
android.support.v7.mediarouter.R$drawable -> android.support.v7.mediarouter.R$drawable:
    int mr_group_collapse -> mr_group_collapse
    int mr_group_expand -> mr_group_expand
    void <init>() -> <init>
com.android.systemui.qs.AlphaControlledSignalTileView$AlphaControlledSlashImageView -> com.android.systemui.qs.AlphaControlledSignalTileView$AlphaControlledSlashImageView:
    void setFinalImageTintList(android.content.res.ColorStateList) -> setFinalImageTintList
    void <init>(android.content.Context) -> <init>
    void ensureSlashDrawable() -> ensureSlashDrawable
com.android.settingslib.drawer.SettingsDrawerActivity -> com.android.settingslib.drawer.SettingsDrawerActivity:
    com.android.settingslib.drawer.SettingsDrawerActivity$PackageReceiver mPackageReceiver -> mPackageReceiver
    android.widget.FrameLayout mContentHeaderContainer -> mContentHeaderContainer
    java.util.List mCategoryListeners -> mCategoryListeners
    boolean DEBUG -> DEBUG
    android.util.ArraySet sTileBlacklist -> sTileBlacklist
    void onCreate(android.os.Bundle) -> onCreate
    void showMenuIcon() -> showMenuIcon
    void -wrap0(com.android.settingslib.drawer.SettingsDrawerActivity) -> -wrap0
    void setContentView(int) -> setContentView
    boolean onNavigateUp() -> onNavigateUp
    void onResume() -> onResume
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onCategoriesChanged() -> onCategoriesChanged
    void <clinit>() -> <clinit>
    java.lang.String getSettingPkg() -> getSettingPkg
    void onPause() -> onPause
    void <init>() -> <init>
    void setContentView(android.view.View) -> setContentView
    android.util.ArraySet -get0() -> -get0
com.android.systemui.statusbar.phone.StatusBar$4 -> com.android.systemui.statusbar.phone.StatusBar$4:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onChildLocationsChanged(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> onChildLocationsChanged
com.android.systemui.recents.views.TaskStackViewScroller$TaskStackViewScrollerCallbacks -> com.android.systemui.recents.views.TaskStackViewScroller$TaskStackViewScrollerCallbacks:
    void onStackScrollChanged(float,float,com.android.systemui.recents.views.AnimationProps) -> onStackScrollChanged
android.support.annotation.VisibleForTesting -> android.support.annotation.VisibleForTesting:
com.android.systemui.statusbar.ExpandableOutlineView$1 -> com.android.systemui.statusbar.ExpandableOutlineView$1:
    com.android.systemui.statusbar.ExpandableOutlineView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ExpandableOutlineView) -> <init>
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.systemui.classifier.SpeedRatioEvaluator -> com.android.systemui.classifier.SpeedRatioEvaluator:
    void <init>() -> <init>
    float evaluate(float) -> evaluate
com.android.systemui.statusbar.policy.UserSwitcherController -> com.android.systemui.statusbar.policy.UserSwitcherController:
    com.android.systemui.plugins.qs.DetailAdapter userDetailAdapter -> userDetailAdapter
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    java.util.ArrayList mAdapters -> mAdapters
    android.app.Dialog mAddUserDialog -> mAddUserDialog
    boolean mAddUsersWhenLocked -> mAddUsersWhenLocked
    com.android.systemui.statusbar.policy.KeyguardMonitor$Callback mCallback -> mCallback
    android.content.Context mContext -> mContext
    android.app.Dialog mExitGuestDialog -> mExitGuestDialog
    android.util.SparseBooleanArray mForcePictureLoadForUserId -> mForcePictureLoadForUserId
    com.android.systemui.GuestResumeSessionReceiver mGuestResumeSessionReceiver -> mGuestResumeSessionReceiver
    android.os.Handler mHandler -> mHandler
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguardMonitor -> mKeyguardMonitor
    int mLastNonGuestUser -> mLastNonGuestUser
    boolean mPauseRefreshUsers -> mPauseRefreshUsers
    android.telephony.PhoneStateListener mPhoneStateListener -> mPhoneStateListener
    android.content.BroadcastReceiver mReceiver -> mReceiver
    boolean mResumeUserOnGuestLogout -> mResumeUserOnGuestLogout
    int mSecondaryUser -> mSecondaryUser
    android.content.Intent mSecondaryUserServiceIntent -> mSecondaryUserServiceIntent
    android.database.ContentObserver mSettingsObserver -> mSettingsObserver
    boolean mSimpleUserSwitcher -> mSimpleUserSwitcher
    java.lang.Runnable mUnpauseRefreshUsers -> mUnpauseRefreshUsers
    android.os.UserManager mUserManager -> mUserManager
    java.util.ArrayList mUsers -> mUsers
    int getSwitchableUserCount() -> getSwitchableUserCount
    void startActivity(android.content.Intent) -> startActivity
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    boolean isSimpleUserSwitcher() -> isSimpleUserSwitcher
    boolean useFullscreenUserSwitcher() -> useFullscreenUserSwitcher
    void switchTo(com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> switchTo
    void <init>(android.content.Context,com.android.systemui.statusbar.policy.KeyguardMonitor,android.os.Handler,com.android.systemui.plugins.ActivityStarter) -> <init>
    void addAdapter(java.lang.ref.WeakReference) -> addAdapter
    void checkIfAddUserDisallowedByAdminOnly(com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> checkIfAddUserDisallowedByAdminOnly
    void exitGuest(int,int) -> exitGuest
    java.lang.String getCurrentUserName(android.content.Context) -> getCurrentUserName
    java.util.ArrayList getUsers() -> getUsers
    void listenForCallState() -> listenForCallState
    void logoutCurrentUser() -> logoutCurrentUser
    void notifyAdapters() -> notifyAdapters
    void pauseRefreshUsers() -> pauseRefreshUsers
    void refreshUsers(int) -> refreshUsers
    void showAddUserDialog() -> showAddUserDialog
    void showExitGuestDialog(int) -> showExitGuestDialog
    void showExitGuestDialog(int,int) -> showExitGuestDialog
    void showGuestNotification(int) -> showGuestNotification
    void switchToUserId(int) -> switchToUserId
    android.app.Dialog -get0(com.android.systemui.statusbar.policy.UserSwitcherController) -> -get0
    com.android.systemui.statusbar.policy.KeyguardMonitor -get1(com.android.systemui.statusbar.policy.UserSwitcherController) -> -get1
    int -get2(com.android.systemui.statusbar.policy.UserSwitcherController) -> -get2
    android.content.Intent -get3(com.android.systemui.statusbar.policy.UserSwitcherController) -> -get3
    boolean -get4(com.android.systemui.statusbar.policy.UserSwitcherController) -> -get4
    java.lang.Runnable -get5(com.android.systemui.statusbar.policy.UserSwitcherController) -> -get5
    java.util.ArrayList -get6(com.android.systemui.statusbar.policy.UserSwitcherController) -> -get6
    boolean -set0(com.android.systemui.statusbar.policy.UserSwitcherController,boolean) -> -set0
    android.app.Dialog -set1(com.android.systemui.statusbar.policy.UserSwitcherController,android.app.Dialog) -> -set1
    int -set2(com.android.systemui.statusbar.policy.UserSwitcherController,int) -> -set2
    boolean -set3(com.android.systemui.statusbar.policy.UserSwitcherController,boolean) -> -set3
    int -set4(com.android.systemui.statusbar.policy.UserSwitcherController,int) -> -set4
    boolean -set5(com.android.systemui.statusbar.policy.UserSwitcherController,boolean) -> -set5
    java.util.ArrayList -set6(com.android.systemui.statusbar.policy.UserSwitcherController,java.util.ArrayList) -> -set6
    void -wrap0(com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.UserSwitcherController) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.policy.UserSwitcherController,int) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.policy.UserSwitcherController,int) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.policy.UserSwitcherController,int) -> -wrap4
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTabStrip) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.graphics.Palette$1 -> android.support.v7.graphics.Palette$1:
    boolean isNearRedILine(float[]) -> isNearRedILine
    boolean isBlack(float[]) -> isBlack
    boolean isAllowed(int,float[]) -> isAllowed
    void <init>() -> <init>
    boolean isWhite(float[]) -> isWhite
android.support.v7.app.AppCompatDialog -> android.support.v7.app.AppCompatDialog:
    android.support.v7.app.AppCompatDelegate mDelegate -> mDelegate
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    android.support.v7.app.AppCompatDelegate getDelegate() -> getDelegate
    void setContentView(int) -> setContentView
    void <init>(android.content.Context,int) -> <init>
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    android.view.View findViewById(int) -> findViewById
    boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    int getThemeResId(android.content.Context,int) -> getThemeResId
    void setTitle(int) -> setTitle
    void setContentView(android.view.View) -> setContentView
    void invalidateOptionsMenu() -> invalidateOptionsMenu
com.android.systemui.pip.phone.PipMenuActivity$2 -> com.android.systemui.pip.phone.PipMenuActivity$2:
    com.android.systemui.pip.phone.PipMenuActivity this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMenuActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.settings.BrightnessController$5 -> com.android.systemui.settings.BrightnessController$5:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    void <init>(com.android.systemui.settings.BrightnessController) -> <init>
    void onVrStateChanged(boolean) -> onVrStateChanged
android.support.v7.widget.ActivityChooserView$4 -> android.support.v7.widget.ActivityChooserView$4:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onForwardingStopped() -> onForwardingStopped
    void <init>(android.support.v7.widget.ActivityChooserView,android.view.View) -> <init>
    boolean onForwardingStarted() -> onForwardingStarted
com.android.systemui.tuner.ShortcutPicker$AppPreference -> com.android.systemui.tuner.ShortcutPicker$AppPreference:
    boolean mBinding -> mBinding
    android.content.pm.LauncherActivityInfo mInfo -> mInfo
    void <init>(android.content.Context,android.content.pm.LauncherActivityInfo) -> <init>
    void notifyChanged() -> notifyChanged
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    java.lang.String toString() -> toString
android.arch.core.internal.SafeIterableMap$Entry -> android.arch.core.internal.SafeIterableMap$Entry:
    java.lang.Object mKey -> mKey
    android.arch.core.internal.SafeIterableMap$Entry mNext -> mNext
    java.lang.Object mValue -> mValue
    android.arch.core.internal.SafeIterableMap$Entry mPrevious -> mPrevious
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
android.support.v7.media.MediaRouteProvider$RouteController -> android.support.v7.media.MediaRouteProvider$RouteController:
    void onUpdateVolume(int) -> onUpdateVolume
    void onRelease() -> onRelease
    void onUnselect() -> onUnselect
    void onSelect() -> onSelect
    void <init>() -> <init>
    void onUnselect(int) -> onUnselect
    void onSetVolume(int) -> onSetVolume
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.ActionMenuView$MenuBuilderCallback:
    android.support.v7.widget.ActionMenuView this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuView) -> <init>
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
android.support.v7.widget.RecyclerViewAccessibilityDelegate -> android.support.v7.widget.RecyclerViewAccessibilityDelegate:
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> mItemDelegate
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    boolean shouldIgnore() -> shouldIgnore
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
com.android.systemui.doze.DozeMachine -> com.android.systemui.doze.DozeMachine:
    boolean DEBUG -> DEBUG
    com.android.internal.hardware.AmbientDisplayConfiguration mConfig -> mConfig
    com.android.systemui.doze.DozeMachine$Service mDozeService -> mDozeService
    com.android.systemui.doze.DozeMachine$Part[] mParts -> mParts
    int mPulseReason -> mPulseReason
    java.util.ArrayList mQueuedRequests -> mQueuedRequests
    com.android.systemui.doze.DozeMachine$State mState -> mState
    com.android.systemui.util.wakelock.WakeLock mWakeLock -> mWakeLock
    boolean mWakeLockHeldForCurrentState -> mWakeLockHeldForCurrentState
    int[] -com-android-systemui-doze-DozeMachine$StateSwitchesValues -> -com-android-systemui-doze-DozeMachine$StateSwitchesValues
    void <init>(com.android.systemui.doze.DozeMachine$Service,com.android.internal.hardware.AmbientDisplayConfiguration,com.android.systemui.util.wakelock.WakeLock) -> <init>
    void dump(java.io.PrintWriter) -> dump
    int getPulseReason() -> getPulseReason
    com.android.systemui.doze.DozeMachine$State getState() -> getState
    boolean isExecutingTransition() -> isExecutingTransition
    void performTransitionOnComponents(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State) -> performTransitionOnComponents
    void requestPulse(int) -> requestPulse
    void requestState(com.android.systemui.doze.DozeMachine$State) -> requestState
    void requestState(com.android.systemui.doze.DozeMachine$State,int) -> requestState
    void resolveIntermediateState(com.android.systemui.doze.DozeMachine$State) -> resolveIntermediateState
    void setParts(com.android.systemui.doze.DozeMachine$Part[]) -> setParts
    com.android.systemui.doze.DozeMachine$State transitionPolicy(com.android.systemui.doze.DozeMachine$State) -> transitionPolicy
    void transitionTo(com.android.systemui.doze.DozeMachine$State,int) -> transitionTo
    void updatePulseReason(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State,int) -> updatePulseReason
    void updateWakeLockState(com.android.systemui.doze.DozeMachine$State) -> updateWakeLockState
    void validateTransition(com.android.systemui.doze.DozeMachine$State) -> validateTransition
    void wakeUp() -> wakeUp
    void <clinit>() -> <clinit>
    int[] -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues() -> -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues
com.android.systemui.statusbar.phone.StatusBar$43 -> com.android.systemui.statusbar.phone.StatusBar$43:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    boolean onLongPress(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> onLongPress
android.support.v7.preference.PreferenceInflater -> android.support.v7.preference.PreferenceInflater:
    java.lang.Class[] CONSTRUCTOR_SIGNATURE -> CONSTRUCTOR_SIGNATURE
    android.content.Context mContext -> mContext
    java.util.HashMap CONSTRUCTOR_MAP -> CONSTRUCTOR_MAP
    java.lang.String[] mDefaultPackages -> mDefaultPackages
    android.support.v7.preference.PreferenceManager mPreferenceManager -> mPreferenceManager
    java.lang.Object[] mConstructorArgs -> mConstructorArgs
    android.support.v7.preference.Preference createItem(java.lang.String,java.lang.String[],android.util.AttributeSet) -> createItem
    android.support.v7.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet) -> createItemFromTag
    void skipCurrentTag(org.xmlpull.v1.XmlPullParser) -> skipCurrentTag
    android.support.v7.preference.Preference inflate(int,android.support.v7.preference.PreferenceGroup) -> inflate
    void setDefaultPackages(java.lang.String[]) -> setDefaultPackages
    void <clinit>() -> <clinit>
    android.support.v7.preference.PreferenceGroup onMergeRoots(android.support.v7.preference.PreferenceGroup,android.support.v7.preference.PreferenceGroup) -> onMergeRoots
    void init(android.support.v7.preference.PreferenceManager) -> init
    android.content.Context getContext() -> getContext
    android.support.v7.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup) -> inflate
    android.support.v7.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet) -> onCreateItem
    void <init>(android.content.Context,android.support.v7.preference.PreferenceManager) -> <init>
    void rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet) -> rInflate
com.android.systemui.statusbar.stack.StackStateAnimator$4 -> com.android.systemui.statusbar.stack.StackStateAnimator$4:
    com.android.systemui.statusbar.stack.StackStateAnimator this$0 -> this$0
    boolean val$onTop -> val$onTop
    boolean val$isRubberbanded -> val$isRubberbanded
    void <init>(com.android.systemui.statusbar.stack.StackStateAnimator,boolean,boolean) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.notification.NotificationInflater$5 -> com.android.systemui.statusbar.notification.NotificationInflater$5:
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress val$result -> val$result
    void <init>(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> <init>
    android.widget.RemoteViews getRemoteView() -> getRemoteView
    void setResultView(android.view.View) -> setResultView
com.android.settingslib.bluetooth.BluetoothEventManager$BondStateChangedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$BondStateChangedHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$BondStateChangedHandler) -> <init>
    void showUnbondMessage(android.content.Context,java.lang.String,int) -> showUnbondMessage
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.systemui.statusbar.policy.NetworkControllerImpl$SubListener -> com.android.systemui.statusbar.policy.NetworkControllerImpl$SubListener:
    com.android.systemui.statusbar.policy.NetworkControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> <init>
    void onSubscriptionsChanged() -> onSubscriptionsChanged
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl,com.android.systemui.statusbar.policy.NetworkControllerImpl$SubListener) -> <init>
com.android.systemui.statusbar.InflationTask -> com.android.systemui.statusbar.InflationTask:
    void abort() -> abort
    void supersedeTask(com.android.systemui.statusbar.InflationTask) -> supersedeTask
com.android.systemui.plugins.PluginManagerImpl -> com.android.systemui.plugins.PluginManagerImpl:
    boolean isDebuggable -> isDebuggable
    java.util.Map mClassLoaders -> mClassLoaders
    android.content.Context mContext -> mContext
    com.android.systemui.plugins.PluginManagerImpl$PluginInstanceManagerFactory mFactory -> mFactory
    boolean mHasOneShot -> mHasOneShot
    boolean mListening -> mListening
    android.os.Looper mLooper -> mLooper
    android.util.ArraySet mOneShotPackages -> mOneShotPackages
    com.android.systemui.plugins.PluginManagerImpl$ClassLoaderFilter mParentClassLoader -> mParentClassLoader
    android.util.ArrayMap mPluginMap -> mPluginMap
    com.android.systemui.plugins.PluginPrefs mPluginPrefs -> mPluginPrefs
    boolean mWtfsSet -> mWtfsSet
    void <init>(android.content.Context) -> <init>
    void handleWtfs() -> handleWtfs
    java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String) -> getClassLoader
    void <init>(android.content.Context,com.android.systemui.plugins.PluginManagerImpl$PluginInstanceManagerFactory,boolean,java.lang.Thread$UncaughtExceptionHandler) -> <init>
    void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class) -> addPluginListener
    void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class,boolean) -> addPluginListener
    void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class) -> addPluginListener
    void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class,boolean) -> addPluginListener
    boolean clearClassLoader(java.lang.String) -> clearClassLoader
    boolean dependsOn(com.android.systemui.plugins.Plugin,java.lang.Class) -> dependsOn
    android.content.Context getContext(android.content.pm.ApplicationInfo,java.lang.String) -> getContext
    com.android.systemui.plugins.Plugin getOneShotPlugin(java.lang.Class) -> getOneShotPlugin
    com.android.systemui.plugins.Plugin getOneShotPlugin(java.lang.String,java.lang.Class) -> getOneShotPlugin
    java.lang.ClassLoader getParentClassLoader() -> getParentClassLoader
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void removePluginListener(com.android.systemui.plugins.PluginListener) -> removePluginListener
    void startListening() -> startListening
    void stopListening() -> stopListening
    void lambda$-com_android_systemui_plugins_PluginManagerImpl_3752() -> lambda$-com_android_systemui_plugins_PluginManagerImpl_3752
    void lambda$-com_android_systemui_plugins_PluginManagerImpl_12589(java.lang.String,android.util.Log$TerribleFailure,boolean) -> lambda$-com_android_systemui_plugins_PluginManagerImpl_12589
    android.util.ArrayMap -get0(com.android.systemui.plugins.PluginManagerImpl) -> -get0
android.support.v4.widget.DrawerLayout$1 -> android.support.v4.widget.DrawerLayout$1:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
    void <init>(android.support.v4.widget.DrawerLayout) -> <init>
com.android.keyguard.PasswordTextView$CharState$3 -> com.android.keyguard.PasswordTextView$CharState$3:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$2 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$2:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(java.lang.String,android.app.Fragment) -> $m$0
    void $m$1(java.lang.String,android.app.Fragment) -> $m$1
    void onFragmentViewCreated(java.lang.String,android.app.Fragment) -> onFragmentViewCreated
com.android.systemui.statusbar.policy.SecurityController$SecurityControllerCallback -> com.android.systemui.statusbar.policy.SecurityController$SecurityControllerCallback:
    void onStateChanged() -> onStateChanged
com.android.systemui.statusbar.phone.-$Lambda$XqY7sa9kEG02uT1QAmuBm8yeXIU -> com.android.systemui.statusbar.phone.-$Lambda$XqY7sa9kEG02uT1QAmuBm8yeXIU:
    int -$f0 -> -$f0
    void <init>(int) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.SearchView$AutoCompleteTextViewReflector:
    java.lang.reflect.Method ensureImeVisible -> ensureImeVisible
    java.lang.reflect.Method doAfterTextChanged -> doAfterTextChanged
    java.lang.reflect.Method doBeforeTextChanged -> doBeforeTextChanged
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    void <init>() -> <init>
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
android.support.v7.preference.EditTextPreference -> android.support.v7.preference.EditTextPreference:
    java.lang.String mText -> mText
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean shouldDisableDependents() -> shouldDisableDependents
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
com.android.systemui.globalactions.GlobalActionsDialog$SilentModeToggleAction -> com.android.systemui.globalactions.GlobalActionsDialog$SilentModeToggleAction:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    void onToggle(boolean) -> onToggle
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.keyguard.EmergencyButton -> com.android.keyguard.EmergencyButton:
    android.content.Intent INTENT_EMERGENCY_DIAL -> INTENT_EMERGENCY_DIAL
    int mDownX -> mDownX
    int mDownY -> mDownY
    com.android.internal.util.EmergencyAffordanceManager mEmergencyAffordanceManager -> mEmergencyAffordanceManager
    com.android.keyguard.EmergencyButton$EmergencyButtonCallback mEmergencyButtonCallback -> mEmergencyButtonCallback
    boolean mEnableEmergencyCallWhileSimLocked -> mEnableEmergencyCallWhileSimLocked
    com.android.keyguard.KeyguardUpdateMonitorCallback mInfoCallback -> mInfoCallback
    boolean mIsVoiceCapable -> mIsVoiceCapable
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    boolean mLongPressWasDragged -> mLongPressWasDragged
    android.os.PowerManager mPowerManager -> mPowerManager
    void setCallback(com.android.keyguard.EmergencyButton$EmergencyButtonCallback) -> setCallback
    void updateEmergencyCallButton() -> updateEmergencyCallButton
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.telecom.TelecomManager getTelecommManager() -> getTelecommManager
    boolean isInCall() -> isInCall
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performLongClick() -> performLongClick
    void resumeCall() -> resumeCall
    void takeEmergencyCallAction() -> takeEmergencyCallAction
    void <clinit>() -> <clinit>
    com.android.internal.util.EmergencyAffordanceManager -get0(com.android.keyguard.EmergencyButton) -> -get0
    boolean -get1(com.android.keyguard.EmergencyButton) -> -get1
com.android.systemui.keyboard.KeyboardUI$KeyboardUIHandler -> com.android.systemui.keyboard.KeyboardUI$KeyboardUIHandler:
    com.android.systemui.keyboard.KeyboardUI this$0 -> this$0
    void <init>(com.android.systemui.keyboard.KeyboardUI) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v14.preference.PreferenceFragment$OnPreferenceStartScreenCallback -> android.support.v14.preference.PreferenceFragment$OnPreferenceStartScreenCallback:
    boolean onPreferenceStartScreen(android.support.v14.preference.PreferenceFragment,android.support.v7.preference.PreferenceScreen) -> onPreferenceStartScreen
com.android.systemui.egg.MLand$Player -> com.android.systemui.egg.MLand$Player:
    int color -> color
    float[] corners -> corners
    float dv -> dv
    boolean mAlive -> mAlive
    boolean mBoosting -> mBoosting
    com.android.systemui.egg.MLand mLand -> mLand
    int mScore -> mScore
    android.widget.TextView mScoreField -> mScoreField
    float mTouchX -> mTouchX
    float mTouchY -> mTouchY
    int[] sColors -> sColors
    float[] sHull -> sHull
    int sNextColor -> sNextColor
    void <init>(android.content.Context) -> <init>
    void addScore(int) -> addScore
    boolean below(int) -> below
    void boost() -> boost
    void boost(float,float) -> boost
    com.android.systemui.egg.MLand$Player create(com.android.systemui.egg.MLand) -> create
    void die() -> die
    int getScore() -> getScore
    void prepareCheckIntersections() -> prepareCheckIntersections
    void reset() -> reset
    void setScore(int) -> setScore
    void setScoreField(android.widget.TextView) -> setScoreField
    void start() -> start
    void step(long,long,float,float) -> step
    void unboost() -> unboost
    void <clinit>() -> <clinit>
    boolean -get0(com.android.systemui.egg.MLand$Player) -> -get0
    int -get1(com.android.systemui.egg.MLand$Player) -> -get1
    android.widget.TextView -get2(com.android.systemui.egg.MLand$Player) -> -get2
    float -get3(com.android.systemui.egg.MLand$Player) -> -get3
    float -get4(com.android.systemui.egg.MLand$Player) -> -get4
    void -wrap0(com.android.systemui.egg.MLand$Player,int) -> -wrap0
com.android.systemui.statusbar.policy.PreviewInflater -> com.android.systemui.statusbar.policy.PreviewInflater:
    android.content.Context mContext -> mContext
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    boolean wouldLaunchResolverActivity(android.content.Context,android.content.Intent,int) -> wouldLaunchResolverActivity
    void <init>(android.content.Context,com.android.internal.widget.LockPatternUtils) -> <init>
    android.content.pm.ActivityInfo getTargetActivityInfo(android.content.Context,android.content.Intent,int,boolean) -> getTargetActivityInfo
    android.view.View inflatePreview(android.content.Intent) -> inflatePreview
    android.view.View inflatePreviewFromService(android.content.ComponentName) -> inflatePreviewFromService
    com.android.systemui.statusbar.policy.PreviewInflater$WidgetInfo getWidgetInfo(android.content.Intent) -> getWidgetInfo
    com.android.systemui.statusbar.policy.PreviewInflater$WidgetInfo getWidgetInfoFromMetaData(java.lang.String,android.os.Bundle) -> getWidgetInfoFromMetaData
    com.android.systemui.statusbar.policy.PreviewInflater$WidgetInfo getWidgetInfoFromService(android.content.ComponentName) -> getWidgetInfoFromService
    com.android.systemui.statusbar.phone.KeyguardPreviewContainer inflatePreview(com.android.systemui.statusbar.policy.PreviewInflater$WidgetInfo) -> inflatePreview
    android.view.View inflateWidgetView(com.android.systemui.statusbar.policy.PreviewInflater$WidgetInfo) -> inflateWidgetView
    boolean wouldLaunchResolverActivity(android.content.pm.ResolveInfo,java.util.List) -> wouldLaunchResolverActivity
com.android.systemui.pip.phone.PipManager$1 -> com.android.systemui.pip.phone.PipManager$1:
    com.android.systemui.pip.phone.PipManager this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipManager) -> <init>
    void onActivityPinned(java.lang.String,int,int) -> onActivityPinned
    void onActivityUnpinned() -> onActivityUnpinned
    void onPinnedActivityRestartAttempt(boolean) -> onPinnedActivityRestartAttempt
    void onPinnedStackAnimationEnded() -> onPinnedStackAnimationEnded
    void onPinnedStackAnimationStarted() -> onPinnedStackAnimationStarted
com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$3 -> com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$3:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.statusbar.car.-$Lambda$FZ4mtee2vnK98nAu2Wi9_aZl9Po$1 -> com.android.systemui.statusbar.car.-$Lambda$FZ4mtee2vnK98nAu2Wi9_aZl9Po$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0(android.view.View,android.view.MotionEvent) -> $m$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.media.SystemMediaRouteProvider$LegacyImpl$DefaultRouteController -> android.support.v7.media.SystemMediaRouteProvider$LegacyImpl$DefaultRouteController:
    android.support.v7.media.SystemMediaRouteProvider$LegacyImpl this$1 -> this$1
    void onUpdateVolume(int) -> onUpdateVolume
    void <init>(android.support.v7.media.SystemMediaRouteProvider$LegacyImpl) -> <init>
    void onSetVolume(int) -> onSetVolume
com.android.systemui.recents.RecentsSystemUser$1 -> com.android.systemui.recents.RecentsSystemUser$1:
    com.android.systemui.recents.RecentsSystemUser this$0 -> this$0
    com.android.systemui.recents.IRecentsNonSystemUserCallbacks val$callback -> val$callback
    int val$userId -> val$userId
    void <init>(com.android.systemui.recents.RecentsSystemUser,com.android.systemui.recents.IRecentsNonSystemUserCallbacks,int) -> <init>
    void binderDied() -> binderDied
android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$2:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> this$1
    void onGlobalLayout() -> onGlobalLayout
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
com.android.systemui.statusbar.phone.-$Lambda$zS-ds8ZeotIRtpIBySj1ottLxAY$1 -> com.android.systemui.statusbar.phone.-$Lambda$zS-ds8ZeotIRtpIBySj1ottLxAY$1:
    boolean -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(boolean,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v4.content.res.FontResourcesParserCompat -> android.support.v4.content.res.FontResourcesParserCompat:
    android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    void skip(org.xmlpull.v1.XmlPullParser) -> skip
    void <init>() -> <init>
    android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
android.support.v17.leanback.widget.SearchOrbView$2 -> android.support.v17.leanback.widget.SearchOrbView$2:
    android.support.v17.leanback.widget.SearchOrbView this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.SearchOrbView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.recents.model.TaskStack -> com.android.systemui.recents.model.TaskStack:
    java.util.Comparator FREEFORM_COMPARATOR -> FREEFORM_COMPARATOR
    android.util.ArrayMap mAffinitiesGroups -> mAffinitiesGroups
    com.android.systemui.recents.model.TaskStack$TaskStackCallbacks mCb -> mCb
    java.util.ArrayList mGroups -> mGroups
    java.util.ArrayList mRawTaskList -> mRawTaskList
    com.android.systemui.recents.model.FilteredTaskList mStackTaskList -> mStackTaskList
    int getStackTaskCount() -> getStackTaskCount
    int indexOfStackTask(com.android.systemui.recents.model.Task) -> indexOfStackTask
    int getTaskCount() -> getTaskCount
    java.util.ArrayList getStackTasks() -> getStackTasks
    com.android.systemui.recents.model.Task getStackFrontMostTask(boolean) -> getStackFrontMostTask
    void <init>() -> <init>
    void addGroup(com.android.systemui.recents.model.TaskGrouping) -> addGroup
    java.util.ArrayList computeAllTasksList() -> computeAllTasksList
    android.util.ArraySet computeComponentsRemoved(java.lang.String,int) -> computeComponentsRemoved
    void createAffiliatedGroupings(android.content.Context) -> createAffiliatedGroupings
    android.util.ArrayMap createTaskKeyMapFromList(java.util.List) -> createTaskKeyMapFromList
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    com.android.systemui.recents.model.Task findTaskWithId(int) -> findTaskWithId
    int getFreeformTaskCount() -> getFreeformTaskCount
    java.util.ArrayList getFreeformTasks() -> getFreeformTasks
    com.android.systemui.recents.model.Task getLaunchTarget() -> getLaunchTarget
    com.android.systemui.recents.model.Task getNextLaunchTarget() -> getNextLaunchTarget
    com.android.systemui.recents.model.Task getNextLaunchTargetRaw() -> getNextLaunchTargetRaw
    java.util.ArrayList getTaskKeys() -> getTaskKeys
    boolean isNextLaunchTargetPip(long) -> isNextLaunchTargetPip
    void moveTaskToStack(com.android.systemui.recents.model.Task,int) -> moveTaskToStack
    void removeAllTasks(boolean) -> removeAllTasks
    void removeGroup(com.android.systemui.recents.model.TaskGrouping) -> removeGroup
    void removeTask(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.AnimationProps,boolean) -> removeTask
    void removeTask(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.AnimationProps,boolean,boolean) -> removeTask
    void removeTaskImpl(com.android.systemui.recents.model.FilteredTaskList,com.android.systemui.recents.model.Task) -> removeTaskImpl
    void setCallbacks(com.android.systemui.recents.model.TaskStack$TaskStackCallbacks) -> setCallbacks
    void setTasks(android.content.Context,com.android.systemui.recents.model.TaskStack,boolean) -> setTasks
    void setTasks(android.content.Context,java.util.List,boolean) -> setTasks
    java.lang.String toString() -> toString
com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk$3 -> com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk$3:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0(android.view.View,android.view.MotionEvent) -> $m$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent -> com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent:
    com.android.systemui.recents.model.TaskStack stack -> stack
    com.android.systemui.recents.model.Task task -> task
    com.android.systemui.recents.views.TaskView taskView -> taskView
    void <init>(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView) -> <init>
com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm$TaskGridRectInfo -> com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm$TaskGridRectInfo:
    int lines -> lines
    android.graphics.Rect size -> size
    int tasksPerLine -> tasksPerLine
    int[] xOffsets -> xOffsets
    int[] yOffsets -> yOffsets
    com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm this$0 -> this$0
    void <init>(com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm,int) -> <init>
    int getTasksPerLine(int) -> getTasksPerLine
com.android.systemui.classifier.GestureClassifier -> com.android.systemui.classifier.GestureClassifier:
    void <init>() -> <init>
    float getFalseTouchEvaluation(int) -> getFalseTouchEvaluation
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View) -> <init>
    void onDismiss() -> onDismiss
com.android.systemui.statusbar.KeyboardShortcuts -> com.android.systemui.statusbar.KeyboardShortcuts:
    java.lang.String TAG -> TAG
    java.util.Comparator mApplicationItemsComparator -> mApplicationItemsComparator
    android.view.KeyCharacterMap mBackupKeyCharacterMap -> mBackupKeyCharacterMap
    android.content.Context mContext -> mContext
    android.content.DialogInterface$OnClickListener mDialogCloseListener -> mDialogCloseListener
    android.os.Handler mHandler -> mHandler
    android.view.KeyCharacterMap mKeyCharacterMap -> mKeyCharacterMap
    android.app.Dialog mKeyboardShortcutsDialog -> mKeyboardShortcutsDialog
    android.util.SparseArray mModifierDrawables -> mModifierDrawables
    int[] mModifierList -> mModifierList
    android.util.SparseArray mModifierNames -> mModifierNames
    android.content.pm.IPackageManager mPackageManager -> mPackageManager
    android.util.SparseArray mSpecialCharacterDrawables -> mSpecialCharacterDrawables
    android.util.SparseArray mSpecialCharacterNames -> mSpecialCharacterNames
    com.android.systemui.statusbar.KeyboardShortcuts sInstance -> sInstance
    java.lang.Object sLock -> sLock
    void <init>(android.content.Context) -> <init>
    void dismiss() -> dismiss
    void dismissKeyboardShortcuts() -> dismissKeyboardShortcuts
    android.view.KeyboardShortcutGroup getDefaultApplicationShortcuts() -> getDefaultApplicationShortcuts
    java.util.List getHumanReadableModifiers(android.view.KeyboardShortcutInfo) -> getHumanReadableModifiers
    java.util.List getHumanReadableShortcutKeys(android.view.KeyboardShortcutInfo) -> getHumanReadableShortcutKeys
    android.graphics.drawable.Icon getIconForIntentCategory(java.lang.String,int) -> getIconForIntentCategory
    com.android.systemui.statusbar.KeyboardShortcuts getInstance(android.content.Context) -> getInstance
    android.content.pm.PackageInfo getPackageInfoForIntent(android.content.Intent,int) -> getPackageInfoForIntent
    android.view.KeyboardShortcutGroup getSystemShortcuts() -> getSystemShortcuts
    void handleShowKeyboardShortcuts(java.util.List) -> handleShowKeyboardShortcuts
    boolean isShowing() -> isShowing
    void loadResources(android.content.Context) -> loadResources
    void populateKeyboardShortcuts(android.widget.LinearLayout,java.util.List) -> populateKeyboardShortcuts
    void retrieveKeyCharacterMap(int) -> retrieveKeyCharacterMap
    void show(android.content.Context,int) -> show
    void showKeyboardShortcuts(int) -> showKeyboardShortcuts
    void showKeyboardShortcutsDialog(java.util.List) -> showKeyboardShortcutsDialog
    void toggle(android.content.Context,int) -> toggle
    void <clinit>() -> <clinit>
    android.view.KeyboardShortcutGroup -wrap0(com.android.systemui.statusbar.KeyboardShortcuts) -> -wrap0
    android.view.KeyboardShortcutGroup -wrap1(com.android.systemui.statusbar.KeyboardShortcuts) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.KeyboardShortcuts) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.KeyboardShortcuts,java.util.List) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.KeyboardShortcuts,java.util.List) -> -wrap4
android.support.v7.preference.DialogPreference$TargetFragment -> android.support.v7.preference.DialogPreference$TargetFragment:
    android.support.v7.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
com.android.systemui.statusbar.phone.StatusBar$6 -> com.android.systemui.statusbar.phone.StatusBar$6:
    android.util.ArraySet mTmpCurrentlyVisibleNotifications -> mTmpCurrentlyVisibleNotifications
    android.util.ArraySet mTmpNewlyVisibleNotifications -> mTmpNewlyVisibleNotifications
    android.util.ArraySet mTmpNoLongerVisibleNotifications -> mTmpNoLongerVisibleNotifications
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
android.support.v7.widget.RecyclerView$ItemAnimator$AdapterChanges -> android.support.v7.widget.RecyclerView$ItemAnimator$AdapterChanges:
com.android.systemui.recents.views.TaskStackView$8 -> com.android.systemui.recents.views.TaskStackView$8:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent val$event -> val$event
    void <init>(com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent) -> <init>
    void run() -> run
android.support.v7.preference.internal.AbstractMultiSelectListPreference -> android.support.v7.preference.internal.AbstractMultiSelectListPreference:
    java.lang.CharSequence[] getEntryValues() -> getEntryValues
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setValues(java.util.Set) -> setValues
    java.util.Set getValues() -> getValues
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    java.lang.CharSequence[] getEntries() -> getEntries
android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener -> android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onDown(android.view.MotionEvent) -> onDown
    void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
android.support.v7.widget.ToolbarWidgetWrapper$1 -> android.support.v7.widget.ToolbarWidgetWrapper$1:
    android.support.v7.view.menu.ActionMenuItem mNavItem -> mNavItem
    android.support.v7.widget.ToolbarWidgetWrapper this$0 -> this$0
    void <init>(android.support.v7.widget.ToolbarWidgetWrapper) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.policy.ConfigurationController$ConfigurationListener -> com.android.systemui.statusbar.policy.ConfigurationController$ConfigurationListener:
    void onConfigChanged(android.content.res.Configuration) -> onConfigChanged
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onLocaleListChanged() -> onLocaleListChanged
    void onOverlayChanged() -> onOverlayChanged
android.support.v7.preference.SeekBarPreference$SavedState -> android.support.v7.preference.SeekBarPreference$SavedState:
    int seekBarValue -> seekBarValue
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int max -> max
    int min -> min
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.google.protobuf.nano.ExtendableMessageNano -> com.google.protobuf.nano.ExtendableMessageNano:
    com.google.protobuf.nano.FieldArray unknownFieldData -> unknownFieldData
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int computeSerializedSize() -> computeSerializedSize
    com.google.protobuf.nano.MessageNano clone() -> clone
    java.lang.Object clone() -> clone
    com.google.protobuf.nano.ExtendableMessageNano clone() -> clone
    void <init>() -> <init>
com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState -> com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState:
    android.graphics.drawable.Drawable drawable -> drawable
    java.lang.CharSequence contentDescription -> contentDescription
    boolean isVisible -> isVisible
    boolean tint -> tint
    void <init>() -> <init>
com.android.keyguard.EmergencyButton$EmergencyButtonCallback -> com.android.keyguard.EmergencyButton$EmergencyButtonCallback:
    void onEmergencyButtonClickedWhenInCall() -> onEmergencyButtonClickedWhenInCall
com.google.protobuf.nano.FieldArray -> com.google.protobuf.nano.FieldArray:
    int mSize -> mSize
    com.google.protobuf.nano.FieldData DELETED -> DELETED
    int[] mFieldNumbers -> mFieldNumbers
    com.google.protobuf.nano.FieldData[] mData -> mData
    boolean mGarbage -> mGarbage
    void gc() -> gc
    int hashCode() -> hashCode
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
    void <init>(int) -> <init>
    java.lang.Object clone() -> clone
    com.google.protobuf.nano.FieldArray clone() -> clone
    boolean equals(java.lang.Object) -> equals
    com.google.protobuf.nano.FieldData dataAt(int) -> dataAt
    int size() -> size
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    boolean arrayEquals(com.google.protobuf.nano.FieldData[],com.google.protobuf.nano.FieldData[],int) -> arrayEquals
    boolean arrayEquals(int[],int[],int) -> arrayEquals
android.support.v4.widget.CircularProgressDrawable$Ring -> android.support.v4.widget.CircularProgressDrawable$Ring:
    float mArrowScale -> mArrowScale
    float mRotation -> mRotation
    float mStartingRotation -> mStartingRotation
    android.graphics.RectF mTempBounds -> mTempBounds
    boolean mShowArrow -> mShowArrow
    float mStartingEndTrim -> mStartingEndTrim
    int[] mColors -> mColors
    int mArrowWidth -> mArrowWidth
    float mStartingStartTrim -> mStartingStartTrim
    float mRingCenterRadius -> mRingCenterRadius
    android.graphics.Path mArrow -> mArrow
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.graphics.Paint mCirclePaint -> mCirclePaint
    android.graphics.Paint mPaint -> mPaint
    int mColorIndex -> mColorIndex
    int mAlpha -> mAlpha
    float mStartTrim -> mStartTrim
    float mStrokeWidth -> mStrokeWidth
    int mCurrentColor -> mCurrentColor
    int mArrowHeight -> mArrowHeight
    float mEndTrim -> mEndTrim
    float getStartingStartTrim() -> getStartingStartTrim
    void setAlpha(int) -> setAlpha
    void setShowArrow(boolean) -> setShowArrow
    void resetOriginals() -> resetOriginals
    int getAlpha() -> getAlpha
    void setArrowDimensions(float,float) -> setArrowDimensions
    int getStartingColor() -> getStartingColor
    void setStrokeWidth(float) -> setStrokeWidth
    void setStartTrim(float) -> setStartTrim
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    float getStartingEndTrim() -> getStartingEndTrim
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void setRotation(float) -> setRotation
    float getStartingRotation() -> getStartingRotation
    int getNextColor() -> getNextColor
    void setArrowScale(float) -> setArrowScale
    void setEndTrim(float) -> setEndTrim
    void setColor(int) -> setColor
    void setColorIndex(int) -> setColorIndex
    float getStartTrim() -> getStartTrim
    void storeOriginals() -> storeOriginals
    int getNextColorIndex() -> getNextColorIndex
    void goToNextColor() -> goToNextColor
    void setColors(int[]) -> setColors
    float getEndTrim() -> getEndTrim
    void setCenterRadius(float) -> setCenterRadius
    void <init>() -> <init>
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    java.lang.Object build(java.lang.Object) -> build
    void <init>() -> <init>
    java.lang.Object newInstance() -> newInstance
    void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
android.support.v7.app.MediaRouteButton$RemoteIndicatorLoader -> android.support.v7.app.MediaRouteButton$RemoteIndicatorLoader:
    int mResId -> mResId
    android.support.v7.app.MediaRouteButton this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(android.support.v7.app.MediaRouteButton,int) -> <init>
    android.graphics.drawable.Drawable doInBackground(java.lang.Void[]) -> doInBackground
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled(android.graphics.drawable.Drawable) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    void cacheAndReset(android.graphics.drawable.Drawable) -> cacheAndReset
    void onPostExecute(android.graphics.drawable.Drawable) -> onPostExecute
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
com.android.systemui.statusbar.NotificationData$Environment -> com.android.systemui.statusbar.NotificationData$Environment:
    java.lang.String getCurrentMediaNotificationKey() -> getCurrentMediaNotificationKey
    com.android.systemui.statusbar.phone.NotificationGroupManager getGroupManager() -> getGroupManager
    boolean isDeviceProvisioned() -> isDeviceProvisioned
    boolean isNotificationForCurrentProfiles(android.service.notification.StatusBarNotification) -> isNotificationForCurrentProfiles
    boolean isSecurelyLocked(int) -> isSecurelyLocked
    boolean shouldHideNotifications(int) -> shouldHideNotifications
    boolean shouldHideNotifications(java.lang.String) -> shouldHideNotifications
android.support.v7.preference.Preference$OnPreferenceChangeListener -> android.support.v7.preference.Preference$OnPreferenceChangeListener:
    boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object) -> onPreferenceChange
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    boolean mDetached -> mDetached
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.os.Bundle mArguments -> mArguments
    int mFragmentId -> mFragmentId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String mTag -> mTag
    java.lang.String mClassName -> mClassName
    boolean mFromLayout -> mFromLayout
    int mIndex -> mIndex
    boolean mRetainInstance -> mRetainInstance
    int mContainerId -> mContainerId
    android.support.v4.app.Fragment mInstance -> mInstance
    boolean mHidden -> mHidden
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.support.v4.app.Fragment) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig) -> instantiate
com.android.systemui.egg.MLand$1 -> com.android.systemui.egg.MLand$1:
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand) -> <init>
    void onTimeUpdate(android.animation.TimeAnimator,long,long) -> onTimeUpdate
com.android.systemui.statusbar.phone.StatusBar$24$1 -> com.android.systemui.statusbar.phone.StatusBar$24$1:
    com.android.systemui.statusbar.phone.StatusBar$24 this$1 -> this$1
    android.service.notification.StatusBarNotification[] val$notifications -> val$notifications
    android.service.notification.NotificationListenerService$RankingMap val$currentRanking -> val$currentRanking
    void <init>(com.android.systemui.statusbar.phone.StatusBar$24,android.service.notification.StatusBarNotification[],android.service.notification.NotificationListenerService$RankingMap) -> <init>
    void run() -> run
com.android.systemui.FontSizeUtils -> com.android.systemui.FontSizeUtils:
    void updateFontSize(android.widget.TextView,int) -> updateFontSize
    void <init>() -> <init>
    void updateFontSize(android.view.View,int,int) -> updateFontSize
com.android.systemui.statusbar.policy.AccessibilityManagerWrapper -> com.android.systemui.statusbar.policy.AccessibilityManagerWrapper:
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    void <init>(android.content.Context) -> <init>
    void addCallback(android.view.accessibility.AccessibilityManager$AccessibilityServicesStateChangeListener) -> addCallback
    void removeCallback(android.view.accessibility.AccessibilityManager$AccessibilityServicesStateChangeListener) -> removeCallback
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$1 -> this$1
    void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.recents.IRecentsNonSystemUserCallbacks$Stub -> com.android.systemui.recents.IRecentsNonSystemUserCallbacks$Stub:
    com.android.systemui.recents.IRecentsNonSystemUserCallbacks asInterface(android.os.IBinder) -> asInterface
    void <init>() -> <init>
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.systemui.statusbar.phone.DozeScrimController$1 -> com.android.systemui.statusbar.phone.DozeScrimController$1:
    com.android.systemui.statusbar.phone.DozeScrimController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.DozeScrimController) -> <init>
    void run() -> run
com.android.systemui.plugins.annotations.ProvidesInterface -> com.android.systemui.plugins.annotations.ProvidesInterface:
    int version() -> version
    java.lang.String action() -> action
com.android.systemui.qs.QSDetail -> com.android.systemui.qs.QSDetail:
    boolean mAnimatingOpen -> mAnimatingOpen
    com.android.systemui.qs.QSDetailClipper mClipper -> mClipper
    boolean mClosingDetail -> mClosingDetail
    com.android.systemui.plugins.qs.DetailAdapter mDetailAdapter -> mDetailAdapter
    android.view.ViewGroup mDetailContent -> mDetailContent
    android.widget.TextView mDetailDoneButton -> mDetailDoneButton
    android.widget.TextView mDetailSettingsButton -> mDetailSettingsButton
    android.util.SparseArray mDetailViews -> mDetailViews
    android.view.View mFooter -> mFooter
    boolean mFullyExpanded -> mFullyExpanded
    com.android.systemui.qs.QuickStatusBarHeader mHeader -> mHeader
    android.animation.AnimatorListenerAdapter mHideGridContentWhenDone -> mHideGridContentWhenDone
    com.android.systemui.qs.QSTileHost mHost -> mHost
    int mOpenX -> mOpenX
    int mOpenY -> mOpenY
    android.view.View mQsDetailHeader -> mQsDetailHeader
    android.widget.ImageView mQsDetailHeaderProgress -> mQsDetailHeaderProgress
    android.widget.Switch mQsDetailHeaderSwitch -> mQsDetailHeaderSwitch
    android.widget.TextView mQsDetailHeaderTitle -> mQsDetailHeaderTitle
    com.android.systemui.qs.QSPanel mQsPanel -> mQsPanel
    com.android.systemui.qs.QSDetail$Callback mQsPanelCallback -> mQsPanelCallback
    boolean mScanState -> mScanState
    boolean mSwitchState -> mSwitchState
    android.animation.AnimatorListenerAdapter mTeardownDetailWhenDone -> mTeardownDetailWhenDone
    boolean mTriggeredExpand -> mTriggeredExpand
    void setQsPanel(com.android.systemui.qs.QSPanel,com.android.systemui.qs.QuickStatusBarHeader,android.view.View) -> setQsPanel
    void setHost(com.android.systemui.qs.QSTileHost) -> setHost
    void setExpanded(boolean) -> setExpanded
    boolean isShowingDetail() -> isShowingDetail
    void setFullyExpanded(boolean) -> setFullyExpanded
    boolean isClosingDetail() -> isClosingDetail
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateDetailVisibleDiff(int,int,boolean,android.animation.Animator$AnimatorListener) -> animateDetailVisibleDiff
    void checkPendingAnimations() -> checkPendingAnimations
    void handleScanStateChanged(boolean) -> handleScanStateChanged
    void handleShowingDetail(com.android.systemui.plugins.qs.DetailAdapter,int,int,boolean) -> handleShowingDetail
    void handleToggleStateChanged(boolean,boolean) -> handleToggleStateChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onFinishInflate() -> onFinishInflate
    void setupDetailFooter(com.android.systemui.plugins.qs.DetailAdapter) -> setupDetailFooter
    void setupDetailHeader(com.android.systemui.plugins.qs.DetailAdapter) -> setupDetailHeader
    void updateDetailText() -> updateDetailText
    void lambda$-com_android_systemui_qs_QSDetail_9223(com.android.systemui.plugins.qs.DetailAdapter,android.content.Intent,android.view.View) -> lambda$-com_android_systemui_qs_QSDetail_9223
    void -com_android_systemui_qs_QSDetail-mthref-0(android.graphics.drawable.Animatable) -> -com_android_systemui_qs_QSDetail-mthref-0
    void -com_android_systemui_qs_QSDetail-mthref-1(android.graphics.drawable.Animatable) -> -com_android_systemui_qs_QSDetail-mthref-1
    android.content.Context -get0(com.android.systemui.qs.QSDetail) -> -get0
    com.android.systemui.plugins.qs.DetailAdapter -get1(com.android.systemui.qs.QSDetail) -> -get1
    android.view.ViewGroup -get2(com.android.systemui.qs.QSDetail) -> -get2
    android.view.View -get3(com.android.systemui.qs.QSDetail) -> -get3
    com.android.systemui.qs.QuickStatusBarHeader -get4(com.android.systemui.qs.QSDetail) -> -get4
    com.android.systemui.qs.QSPanel -get5(com.android.systemui.qs.QSDetail) -> -get5
    boolean -set0(com.android.systemui.qs.QSDetail,boolean) -> -set0
    boolean -set1(com.android.systemui.qs.QSDetail,boolean) -> -set1
    void -wrap0(com.android.systemui.qs.QSDetail) -> -wrap0
    void -wrap1(com.android.systemui.qs.QSDetail,boolean) -> -wrap1
    void -wrap2(com.android.systemui.qs.QSDetail,boolean,boolean) -> -wrap2
com.android.systemui.statusbar.phone.NotificationPanelView$19 -> com.android.systemui.statusbar.phone.NotificationPanelView$19:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
android.support.v7.widget.helper.ItemTouchHelper$3 -> android.support.v7.widget.helper.ItemTouchHelper$3:
    android.support.v7.widget.RecyclerView$ViewHolder val$prevSelected -> val$prevSelected
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    int val$swipeDir -> val$swipeDir
    void <init>(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,android.support.v7.widget.RecyclerView$ViewHolder) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$3 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$3:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0() -> $m$0
    boolean getAsBoolean() -> getAsBoolean
com.android.systemui.volume.VolumeDialogControllerImpl$C$6 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$6:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.SettingsButton -> com.android.systemui.statusbar.phone.SettingsButton:
    android.animation.ObjectAnimator mAnimator -> mAnimator
    java.lang.Runnable mLongPressCallback -> mLongPressCallback
    float mSlop -> mSlop
    boolean mUpToSpeed -> mUpToSpeed
    boolean isTunerClick() -> isTunerClick
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void cancelAnimation() -> cancelAnimation
    void cancelLongClick() -> cancelLongClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startAccelSpin() -> startAccelSpin
    void startContinuousSpin() -> startContinuousSpin
    void startExitAnimation() -> startExitAnimation
    void -wrap0(com.android.systemui.statusbar.phone.SettingsButton) -> -wrap0
com.android.systemui.statusbar.phone.StatusBar$41 -> com.android.systemui.statusbar.phone.StatusBar$41:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    java.lang.Runnable val$clickPendingViewRunnable -> val$clickPendingViewRunnable
    void <init>(com.android.systemui.statusbar.phone.StatusBar,java.lang.Runnable) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.android.settingslib.graph.-$Lambda$W5EX9kuhFh0lIe1Aych46kK6DTA -> com.android.settingslib.graph.-$Lambda$W5EX9kuhFh0lIe1Aych46kK6DTA:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
android.support.v4.app.Fragment$AnimationInfo -> android.support.v4.app.Fragment$AnimationInfo:
    int mNextTransitionStyle -> mNextTransitionStyle
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    android.view.View mAnimatingAway -> mAnimatingAway
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    int mNextAnim -> mNextAnim
    android.support.v4.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener -> mStartEnterTransitionListener
    int mStateAfterAnimating -> mStateAfterAnimating
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mEnterTransition -> mEnterTransition
    boolean mEnterTransitionPostponed -> mEnterTransitionPostponed
    java.lang.Object mReturnTransition -> mReturnTransition
    android.animation.Animator mAnimator -> mAnimator
    boolean mIsHideReplaced -> mIsHideReplaced
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    int mNextTransition -> mNextTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Boolean -get0(android.support.v4.app.Fragment$AnimationInfo) -> -get0
    java.lang.Object -get4(android.support.v4.app.Fragment$AnimationInfo) -> -get4
    java.lang.Object -get3(android.support.v4.app.Fragment$AnimationInfo) -> -get3
    java.lang.Object -get6(android.support.v4.app.Fragment$AnimationInfo) -> -get6
    java.lang.Boolean -get1(android.support.v4.app.Fragment$AnimationInfo) -> -get1
    java.lang.Object -get2(android.support.v4.app.Fragment$AnimationInfo) -> -get2
    java.lang.Object -get5(android.support.v4.app.Fragment$AnimationInfo) -> -get5
    void <init>() -> <init>
    java.lang.Object -get7(android.support.v4.app.Fragment$AnimationInfo) -> -get7
android.support.v7.util.DiffUtil$Snake -> android.support.v7.util.DiffUtil$Snake:
    int size -> size
    boolean reverse -> reverse
    boolean removal -> removal
    int y -> y
    int x -> x
    void <init>() -> <init>
com.android.systemui.statusbar.policy.EthernetSignalController -> com.android.systemui.statusbar.policy.EthernetSignalController:
    void <init>(android.content.Context,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl) -> <init>
    void notifyListeners(com.android.systemui.statusbar.policy.NetworkController$SignalCallback) -> notifyListeners
    void updateConnectivity(java.util.BitSet,java.util.BitSet) -> updateConnectivity
    com.android.systemui.statusbar.policy.SignalController$State cleanState() -> cleanState
android.support.v7.media.MediaRouterJellybean$GetDefaultRouteWorkaround -> android.support.v7.media.MediaRouterJellybean$GetDefaultRouteWorkaround:
    java.lang.reflect.Method mGetSystemAudioRouteMethod -> mGetSystemAudioRouteMethod
    void <init>() -> <init>
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
com.android.systemui.util.leak.AbstractCollection -> com.android.systemui.util.leak.AbstractCollection:
    void <init>() -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.android.systemui.ForegroundServicesDialog$1 -> com.android.systemui.ForegroundServicesDialog$1:
    com.android.systemui.ForegroundServicesDialog this$0 -> this$0
    void <init>(com.android.systemui.ForegroundServicesDialog) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.qs.-$Lambda$IBJehqneaOm5k50HAYVYZP0648A$1 -> com.android.systemui.qs.-$Lambda$IBJehqneaOm5k50HAYVYZP0648A$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0(java.lang.Object) -> $m$0
    boolean test(java.lang.Object) -> test
com.android.systemui.util.leak.TrackedCollections -> com.android.systemui.util.leak.TrackedCollections:
    com.android.systemui.util.leak.WeakIdentityHashMap mCollections -> mCollections
    void track(java.util.Collection,java.lang.String) -> track
    void dump(java.io.PrintWriter,java.util.function.Predicate) -> dump
    void <init>() -> <init>
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$8 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$8:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void run() -> run
com.android.settingslib.R$styleable -> com.android.settingslib.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int[] ActionMenuItemView -> ActionMenuItemView
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int[] ActivityChooserView -> ActivityChooserView
    int[] AlertDialog -> AlertDialog
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int[] AppCompatTextView -> AppCompatTextView
    int[] AppCompatTheme -> AppCompatTheme
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] BackgroundStyle -> BackgroundStyle
    int[] BatteryMeterView -> BatteryMeterView
    int[] ButtonBarLayout -> ButtonBarLayout
    int[] CarrierText -> CarrierText
    int[] CheckBoxPreference -> CheckBoxPreference
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int[] CompoundButton -> CompoundButton
    int[] DateView -> DateView
    int[] DeadZone -> DeadZone
    int[] DialogPreference -> DialogPreference
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyButtonView -> KeyButtonView
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int[] ListPopupWindow -> ListPopupWindow
    int[] ListPreference -> ListPreference
    int[] MediaRouteButton -> MediaRouteButton
    int[] MenuGroup -> MenuGroup
    int[] MenuItem -> MenuItem
    int[] MenuView -> MenuView
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] NumPadKey -> NumPadKey
    int[] PagingIndicator -> PagingIndicator
    int[] PasswordTextView -> PasswordTextView
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int[] PreferenceGroup -> PreferenceGroup
    int[] PreferenceImageView -> PreferenceImageView
    int[] PreferenceTheme -> PreferenceTheme
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int[] RecyclerView -> RecyclerView
    int[] RestrictedPreference -> RestrictedPreference
    int RestrictedPreference_useAdminDisabledSummary -> RestrictedPreference_useAdminDisabledSummary
    int RestrictedPreference_userRestriction -> RestrictedPreference_userRestriction
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int RestrictedSwitchPreference_restrictedSwitchSummary -> RestrictedSwitchPreference_restrictedSwitchSummary
    int RestrictedSwitchPreference_useAdditionalSummary -> RestrictedSwitchPreference_useAdditionalSummary
    int[] SearchView -> SearchView
    int[] SeekBarPreference -> SeekBarPreference
    int[] Spinner -> Spinner
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int[] TextAppearance -> TextAppearance
    int[] ToggleSliderView -> ToggleSliderView
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] UserDetailItemView -> UserDetailItemView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int[] ViewStubCompat -> ViewStubCompat
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int[] lbBaseGridView -> lbBaseGridView
    int[] lbDatePicker -> lbDatePicker
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int[] lbImageCardView -> lbImageCardView
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int[] lbSearchOrbView -> lbSearchOrbView
    int[] lbSlide -> lbSlide
    int[] lbTimePicker -> lbTimePicker
    int[] lbVerticalGridView -> lbVerticalGridView
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.policy.BluetoothController -> com.android.systemui.statusbar.policy.BluetoothController:
    boolean canConfigBluetooth() -> canConfigBluetooth
    void connect(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> connect
    void disconnect(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> disconnect
    int getBluetoothState() -> getBluetoothState
    int getBondState(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> getBondState
    java.util.Collection getDevices() -> getDevices
    com.android.settingslib.bluetooth.CachedBluetoothDevice getLastDevice() -> getLastDevice
    java.lang.String getLastDeviceName() -> getLastDeviceName
    boolean isBluetoothConnected() -> isBluetoothConnected
    boolean isBluetoothConnecting() -> isBluetoothConnecting
    boolean isBluetoothEnabled() -> isBluetoothEnabled
    boolean isBluetoothSupported() -> isBluetoothSupported
    void setBluetoothEnabled(boolean) -> setBluetoothEnabled
com.android.settingslib.AppItem$1 -> com.android.settingslib.AppItem$1:
    java.lang.Object[] newArray(int) -> newArray
    com.android.settingslib.AppItem[] newArray(int) -> newArray
    void <init>() -> <init>
    com.android.settingslib.AppItem createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v17.leanback.widget.MediaNowPlayingView -> android.support.v17.leanback.widget.MediaNowPlayingView:
    android.view.animation.LinearInterpolator mLinearInterpolator -> mLinearInterpolator
    android.animation.ObjectAnimator mObjectAnimator3 -> mObjectAnimator3
    android.widget.ImageView mImage1 -> mImage1
    android.widget.ImageView mImage2 -> mImage2
    android.widget.ImageView mImage3 -> mImage3
    android.animation.ObjectAnimator mObjectAnimator2 -> mObjectAnimator2
    android.animation.ObjectAnimator mObjectAnimator1 -> mObjectAnimator1
    void startAnimation(android.animation.Animator) -> startAnimation
    void stopAnimation() -> stopAnimation
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void startAnimation() -> startAnimation
    void stopAnimation(android.animation.Animator,android.view.View) -> stopAnimation
    void setDropScale(android.view.View) -> setDropScale
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setVisibility(int) -> setVisibility
com.android.systemui.recents.Recents$4 -> com.android.systemui.recents.Recents$4:
    com.android.systemui.recents.Recents this$0 -> this$0
    com.android.systemui.recents.events.component.ScreenPinningRequestEvent val$event -> val$event
    void <init>(com.android.systemui.recents.Recents,com.android.systemui.recents.events.component.ScreenPinningRequestEvent) -> <init>
    void run() -> run
com.android.systemui.plugins.R$layout -> com.android.systemui.plugins.R$layout:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_button_bar_material -> abc_alert_dialog_button_bar_material
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_alert_dialog_title_material -> abc_alert_dialog_title_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_header_item_layout -> abc_popup_menu_header_item_layout
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int access_point_friction_widget -> access_point_friction_widget
    int ambient_indication -> ambient_indication
    int assist_orb -> assist_orb
    int back -> back
    int battery_percentage_view -> battery_percentage_view
    int brightness_mirror -> brightness_mirror
    int car_fullscreen_user_pod -> car_fullscreen_user_pod
    int car_fullscreen_user_pod_container -> car_fullscreen_user_pod_container
    int car_fullscreen_user_switcher -> car_fullscreen_user_switcher
    int car_navigation_bar -> car_navigation_bar
    int car_navigation_button -> car_navigation_button
    int car_qs_footer -> car_qs_footer
    int car_qs_panel -> car_qs_panel
    int car_status_bar_header -> car_status_bar_header
    int clipboard -> clipboard
    int connected_device_signal -> connected_device_signal
    int custom_key -> custom_key
    int data_usage -> data_usage
    int divider -> divider
    int docked_stack_divider -> docked_stack_divider
    int emergency_cryptkeeper_text -> emergency_cryptkeeper_text
    int forced_resizable_activity -> forced_resizable_activity
    int foreground_service_item -> foreground_service_item
    int foreground_service_title -> foreground_service_title
    int global_actions_item -> global_actions_item
    int global_actions_wrapped -> global_actions_wrapped
    int global_screenshot -> global_screenshot
    int home -> home
    int horizontal_divider -> horizontal_divider
    int hybrid_notification -> hybrid_notification
    int hybrid_overflow_number -> hybrid_overflow_number
    int keyboard_shortcut_app_item -> keyboard_shortcut_app_item
    int keyboard_shortcuts_category_separator -> keyboard_shortcuts_category_separator
    int keyboard_shortcuts_category_title -> keyboard_shortcuts_category_title
    int keyboard_shortcuts_container -> keyboard_shortcuts_container
    int keyboard_shortcuts_key_icon_view -> keyboard_shortcuts_key_icon_view
    int keyboard_shortcuts_key_view -> keyboard_shortcuts_key_view
    int keyboard_shortcuts_view -> keyboard_shortcuts_view
    int keyguard_bottom_area -> keyguard_bottom_area
    int keyguard_bottom_area_overlay -> keyguard_bottom_area_overlay
    int keyguard_bouncer -> keyguard_bouncer
    int keyguard_eca -> keyguard_eca
    int keyguard_emergency_carrier_area -> keyguard_emergency_carrier_area
    int keyguard_esim_area -> keyguard_esim_area
    int keyguard_host_view -> keyguard_host_view
    int keyguard_message_area -> keyguard_message_area
    int keyguard_message_area_large -> keyguard_message_area_large
    int keyguard_num_pad_key -> keyguard_num_pad_key
    int keyguard_password_view -> keyguard_password_view
    int keyguard_pattern_view -> keyguard_pattern_view
    int keyguard_pin_view -> keyguard_pin_view
    int keyguard_presentation -> keyguard_presentation
    int keyguard_sim_pin_view -> keyguard_sim_pin_view
    int keyguard_sim_puk_view -> keyguard_sim_puk_view
    int keyguard_status_area -> keyguard_status_area
    int keyguard_status_bar -> keyguard_status_bar
    int keyguard_status_view -> keyguard_status_view
    int keyguard_user_switcher -> keyguard_user_switcher
    int keyguard_user_switcher_inner -> keyguard_user_switcher_inner
    int keyguard_user_switcher_item -> keyguard_user_switcher_item
    int lb_action_1_line -> lb_action_1_line
    int lb_action_2_lines -> lb_action_2_lines
    int lb_background_window -> lb_background_window
    int lb_browse_fragment -> lb_browse_fragment
    int lb_browse_title -> lb_browse_title
    int lb_control_bar -> lb_control_bar
    int lb_control_button_primary -> lb_control_button_primary
    int lb_control_button_secondary -> lb_control_button_secondary
    int lb_details_description -> lb_details_description
    int lb_details_fragment -> lb_details_fragment
    int lb_details_overview -> lb_details_overview
    int lb_divider -> lb_divider
    int lb_error_fragment -> lb_error_fragment
    int lb_fullwidth_details_overview -> lb_fullwidth_details_overview
    int lb_fullwidth_details_overview_logo -> lb_fullwidth_details_overview_logo
    int lb_guidance -> lb_guidance
    int lb_guidedactions -> lb_guidedactions
    int lb_guidedactions_datepicker_item -> lb_guidedactions_datepicker_item
    int lb_guidedactions_item -> lb_guidedactions_item
    int lb_guidedbuttonactions -> lb_guidedbuttonactions
    int lb_guidedstep_background -> lb_guidedstep_background
    int lb_guidedstep_fragment -> lb_guidedstep_fragment
    int lb_header -> lb_header
    int lb_headers_fragment -> lb_headers_fragment
    int lb_image_card_view -> lb_image_card_view
    int lb_image_card_view_themed_badge_left -> lb_image_card_view_themed_badge_left
    int lb_image_card_view_themed_badge_right -> lb_image_card_view_themed_badge_right
    int lb_image_card_view_themed_content -> lb_image_card_view_themed_content
    int lb_image_card_view_themed_title -> lb_image_card_view_themed_title
    int lb_list_row -> lb_list_row
    int lb_list_row_hovercard -> lb_list_row_hovercard
    int lb_media_item_number_view_flipper -> lb_media_item_number_view_flipper
    int lb_media_list_header -> lb_media_list_header
    int lb_onboarding_fragment -> lb_onboarding_fragment
    int lb_picker -> lb_picker
    int lb_picker_column -> lb_picker_column
    int lb_picker_item -> lb_picker_item
    int lb_picker_separator -> lb_picker_separator
    int lb_playback_controls -> lb_playback_controls
    int lb_playback_controls_row -> lb_playback_controls_row
    int lb_playback_fragment -> lb_playback_fragment
    int lb_playback_now_playing_bars -> lb_playback_now_playing_bars
    int lb_playback_transport_controls -> lb_playback_transport_controls
    int lb_playback_transport_controls_row -> lb_playback_transport_controls_row
    int lb_row_container -> lb_row_container
    int lb_row_header -> lb_row_header
    int lb_row_media_item -> lb_row_media_item
    int lb_row_media_item_action -> lb_row_media_item_action
    int lb_rows_fragment -> lb_rows_fragment
    int lb_search_bar -> lb_search_bar
    int lb_search_fragment -> lb_search_fragment
    int lb_search_orb -> lb_search_orb
    int lb_section_header -> lb_section_header
    int lb_shadow -> lb_shadow
    int lb_speech_orb -> lb_speech_orb
    int lb_title_view -> lb_title_view
    int lb_vertical_grid -> lb_vertical_grid
    int lb_vertical_grid_fragment -> lb_vertical_grid_fragment
    int lb_video_surface -> lb_video_surface
    int menu_ime -> menu_ime
    int mland -> mland
    int mland_scorefield -> mland_scorefield
    int mobile_signal_group -> mobile_signal_group
    int mr_chooser_dialog -> mr_chooser_dialog
    int mr_chooser_list_item -> mr_chooser_list_item
    int mr_controller_material_dialog_b -> mr_controller_material_dialog_b
    int mr_controller_volume_item -> mr_controller_volume_item
    int mr_playback_control -> mr_playback_control
    int mr_volume_control -> mr_volume_control
    int nav_bar_tuner_inflater -> nav_bar_tuner_inflater
    int nav_control_widget -> nav_control_widget
    int nav_key_space -> nav_key_space
    int nav_width_view -> nav_width_view
    int navigation_bar -> navigation_bar
    int navigation_bar_app_item -> navigation_bar_app_item
    int navigation_bar_window -> navigation_bar_window
    int navigation_layout -> navigation_layout
    int navigation_layout_rot90 -> navigation_layout_rot90
    int notification_children_container -> notification_children_container
    int notification_children_divider -> notification_children_divider
    int notification_guts -> notification_guts
    int notification_icon_area -> notification_icon_area
    int notification_info -> notification_info
    int notification_snooze -> notification_snooze
    int notification_snooze_option -> notification_snooze_option
    int pip_dismiss_view -> pip_dismiss_view
    int pip_menu_action -> pip_menu_action
    int pip_menu_activity -> pip_menu_activity
    int power_notification_controls_settings -> power_notification_controls_settings
    int preference -> preference
    int preference_category -> preference_category
    int preference_category_divider -> preference_category_divider
    int preference_category_material -> preference_category_material
    int preference_category_material_settings -> preference_category_material_settings
    int preference_category_material_settings_with_divider -> preference_category_material_settings_with_divider
    int preference_dialog_edittext -> preference_dialog_edittext
    int preference_dropdown -> preference_dropdown
    int preference_dropdown_material -> preference_dropdown_material
    int preference_dropdown_material_settings -> preference_dropdown_material_settings
    int preference_footer -> preference_footer
    int preference_information -> preference_information
    int preference_information_material -> preference_information_material
    int preference_list_fragment -> preference_list_fragment
    int preference_material -> preference_material
    int preference_recyclerview -> preference_recyclerview
    int preference_two_target -> preference_two_target
    int preference_two_target_divider -> preference_two_target_divider
    int preference_widget_checkbox -> preference_widget_checkbox
    int preference_widget_radiobutton -> preference_widget_radiobutton
    int preference_widget_seekbar -> preference_widget_seekbar
    int preference_widget_seekbar_material -> preference_widget_seekbar_material
    int preference_widget_settings -> preference_widget_settings
    int preference_widget_switch -> preference_widget_switch
    int preference_widget_switch_compat -> preference_widget_switch_compat
    int qs_add_tiles_list -> qs_add_tiles_list
    int qs_customize_divider -> qs_customize_divider
    int qs_customize_panel -> qs_customize_panel
    int qs_customize_panel_content -> qs_customize_panel_content
    int qs_customize_tile_divider -> qs_customize_tile_divider
    int qs_customize_tile_frame -> qs_customize_tile_frame
    int qs_detail -> qs_detail
    int qs_detail_buttons -> qs_detail_buttons
    int qs_detail_header -> qs_detail_header
    int qs_detail_item -> qs_detail_item
    int qs_detail_items -> qs_detail_items
    int qs_divider -> qs_divider
    int qs_footer_impl -> qs_footer_impl
    int qs_page_indicator -> qs_page_indicator
    int qs_paged_page -> qs_paged_page
    int qs_paged_tile_layout -> qs_paged_tile_layout
    int qs_panel -> qs_panel
    int qs_tile_label -> qs_tile_label
    int qs_tile_layout -> qs_tile_layout
    int qs_user_detail -> qs_user_detail
    int qs_user_detail_item -> qs_user_detail_item
    int quick_settings_brightness_dialog -> quick_settings_brightness_dialog
    int quick_settings_footer -> quick_settings_footer
    int quick_settings_footer_dialog -> quick_settings_footer_dialog
    int quick_status_bar_expanded_header -> quick_status_bar_expanded_header
    int quick_status_bar_header_system_icons -> quick_status_bar_header_system_icons
    int recent_apps -> recent_apps
    int recents -> recents
    int recents_empty -> recents_empty
    int recents_grid_task_view -> recents_grid_task_view
    int recents_incompatible_app_overlay -> recents_incompatible_app_overlay
    int recents_low_ram_stack_action_button -> recents_low_ram_stack_action_button
    int recents_search_bar -> recents_search_bar
    int recents_stack_action_button -> recents_stack_action_button
    int recents_task_view -> recents_task_view
    int recents_task_view_header -> recents_task_view_header
    int recents_task_view_header_overlay -> recents_task_view_header_overlay
    int recents_task_view_header_progress_bar -> recents_task_view_header_progress_bar
    int recents_task_view_incompatible_app_toast -> recents_task_view_incompatible_app_toast
    int recents_task_view_lock_to_app -> recents_task_view_lock_to_app
    int remember_permission_checkbox -> remember_permission_checkbox
    int remote_input -> remote_input
    int restricted_icon -> restricted_icon
    int restricted_switch_preference -> restricted_switch_preference
    int restricted_switch_widget -> restricted_switch_widget
    int rounded_corners -> rounded_corners
    int screen_pinning_request -> screen_pinning_request
    int screen_pinning_request_buttons -> screen_pinning_request_buttons
    int screen_pinning_request_buttons_land -> screen_pinning_request_buttons_land
    int screen_pinning_request_buttons_sea -> screen_pinning_request_buttons_sea
    int screen_pinning_request_land_phone -> screen_pinning_request_land_phone
    int screen_pinning_request_sea_phone -> screen_pinning_request_sea_phone
    int screen_pinning_request_text_area -> screen_pinning_request_text_area
    int segmented_button -> segmented_button
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int settings_with_drawer -> settings_with_drawer
    int shelf_menu_anchor -> shelf_menu_anchor
    int signal_cluster_view -> signal_cluster_view
    int split_clock_view -> split_clock_view
    int status_bar -> status_bar
    int status_bar_alarm_group -> status_bar_alarm_group
    int status_bar_expanded -> status_bar_expanded
    int status_bar_no_notifications -> status_bar_no_notifications
    int status_bar_no_recent_apps -> status_bar_no_recent_apps
    int status_bar_notification_dismiss_all -> status_bar_notification_dismiss_all
    int status_bar_notification_row -> status_bar_notification_row
    int status_bar_notification_shelf -> status_bar_notification_shelf
    int status_bar_toggle_slider -> status_bar_toggle_slider
    int super_status_bar -> super_status_bar
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int switch_bar -> switch_bar
    int system_icons -> system_icons
    int tooltip -> tooltip
    int tuner_shortcut_item -> tuner_shortcut_item
    int tuner_shortcut_list -> tuner_shortcut_list
    int tuner_widget_settings_switch -> tuner_widget_settings_switch
    int tuner_zen_mode_panel -> tuner_zen_mode_panel
    int tv_pip_control_button -> tv_pip_control_button
    int tv_pip_controls -> tv_pip_controls
    int tv_pip_custom_control -> tv_pip_custom_control
    int tv_pip_menu -> tv_pip_menu
    int user_preference -> user_preference
    int video_surface_fragment -> video_surface_fragment
    int volume_dialog -> volume_dialog
    int volume_dialog_row -> volume_dialog_row
    int volume_zen_footer -> volume_zen_footer
    int zen_mode_button -> zen_mode_button
    int zen_mode_condition -> zen_mode_condition
    int zen_mode_panel -> zen_mode_panel
    void <init>() -> <init>
com.android.systemui.recents.views.RecentsView$5 -> com.android.systemui.recents.views.RecentsView$5:
    com.android.systemui.recents.views.RecentsView this$0 -> this$0
    boolean val$translate -> val$translate
    int val$duration -> val$duration
    void <init>(com.android.systemui.recents.views.RecentsView,boolean,int) -> <init>
    void run() -> run
android.support.graphics.drawable.VectorDrawableCompat$VPath -> android.support.graphics.drawable.VectorDrawableCompat$VPath:
    int mChangingConfigurations -> mChangingConfigurations
    java.lang.String mPathName -> mPathName
    android.support.v4.graphics.PathParser$PathDataNode[] mNodes -> mNodes
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    void toPath(android.graphics.Path) -> toPath
    java.lang.String getPathName() -> getPathName
    boolean isClipPath() -> isClipPath
    void <init>() -> <init>
com.android.systemui.globalactions.GlobalActionsDialog$RestartAction -> com.android.systemui.globalactions.GlobalActionsDialog$RestartAction:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    boolean onLongPress() -> onLongPress
    void onPress() -> onPress
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,com.android.systemui.globalactions.GlobalActionsDialog$RestartAction) -> <init>
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
com.android.systemui.statusbar.phone.-$Lambda$mZI4GVd3kBIAS3zT_YEUG9_4rzk$1 -> com.android.systemui.statusbar.phone.-$Lambda$mZI4GVd3kBIAS3zT_YEUG9_4rzk$1:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    java.lang.Object $m$0() -> $m$0
    java.lang.Object $m$1() -> $m$1
    java.lang.Object get() -> get
com.android.systemui.qs.tiles.BluetoothTile -> com.android.systemui.qs.tiles.BluetoothTile:
    android.content.Intent BLUETOOTH_SETTINGS -> BLUETOOTH_SETTINGS
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    com.android.systemui.statusbar.policy.BluetoothController$Callback mCallback -> mCallback
    com.android.systemui.statusbar.policy.BluetoothController mController -> mController
    com.android.systemui.qs.tiles.BluetoothTile$BluetoothDetailAdapter mDetailAdapter -> mDetailAdapter
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    com.android.systemui.plugins.qs.DetailAdapter createDetailAdapter() -> createDetailAdapter
    com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter() -> getDetailAdapter
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSecondaryClick() -> handleSecondaryClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void <clinit>() -> <clinit>
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    android.content.Intent -get0() -> -get0
    android.content.Context -get1(com.android.systemui.qs.tiles.BluetoothTile) -> -get1
    com.android.systemui.statusbar.policy.BluetoothController -get2(com.android.systemui.qs.tiles.BluetoothTile) -> -get2
    com.android.systemui.qs.tiles.BluetoothTile$BluetoothDetailAdapter -get3(com.android.systemui.qs.tiles.BluetoothTile) -> -get3
    com.android.systemui.plugins.qs.QSTile$State -get4(com.android.systemui.qs.tiles.BluetoothTile) -> -get4
    boolean -wrap0(com.android.systemui.qs.tiles.BluetoothTile) -> -wrap0
com.android.systemui.qs.tileimpl.QSTileImpl$AnimationIcon -> com.android.systemui.qs.tileimpl.QSTileImpl$AnimationIcon:
    int mAnimatedResId -> mAnimatedResId
    void <init>(int,int) -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
com.android.systemui.statusbar.policy.UserInfoControllerImpl$3 -> com.android.systemui.statusbar.policy.UserInfoControllerImpl$3:
    com.android.systemui.statusbar.policy.UserInfoControllerImpl this$0 -> this$0
    java.lang.String val$userName -> val$userName
    int val$userId -> val$userId
    int val$avatarSize -> val$avatarSize
    boolean val$isGuest -> val$isGuest
    boolean val$lightIcon -> val$lightIcon
    android.content.Context val$context -> val$context
    void <init>(com.android.systemui.statusbar.policy.UserInfoControllerImpl,java.lang.String,int,int,boolean,boolean,android.content.Context) -> <init>
    com.android.systemui.statusbar.policy.UserInfoControllerImpl$UserInfoQueryResult doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.android.systemui.statusbar.policy.UserInfoControllerImpl$UserInfoQueryResult) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.android.systemui.statusbar.policy.Clock$2 -> com.android.systemui.statusbar.policy.Clock$2:
    com.android.systemui.statusbar.policy.Clock this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.Clock) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider:
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
com.android.systemui.statusbar.car.PageIndicator$PageListener -> com.android.systemui.statusbar.car.PageIndicator$PageListener:
    com.android.systemui.statusbar.car.PageIndicator this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.PageIndicator) -> <init>
    void onAdapterChanged(android.support.v4.view.ViewPager,android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void <init>(com.android.systemui.statusbar.car.PageIndicator,com.android.systemui.statusbar.car.PageIndicator$PageListener) -> <init>
com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent -> com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent:
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction direction -> direction
    void <init>(com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction) -> <init>
    com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent$Direction getDirectionFromKeyCode(int) -> getDirectionFromKeyCode
com.android.systemui.media.NotificationPlayer$CreationAndCompletionThread -> com.android.systemui.media.NotificationPlayer$CreationAndCompletionThread:
    com.android.systemui.media.NotificationPlayer$Command mCmd -> mCmd
    com.android.systemui.media.NotificationPlayer this$0 -> this$0
    void <init>(com.android.systemui.media.NotificationPlayer,com.android.systemui.media.NotificationPlayer$Command) -> <init>
    void run() -> run
com.android.systemui.volume.VolumeDialogImpl$10 -> com.android.systemui.volume.VolumeDialogImpl$10:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.NotificationHeaderUtil$VisibilityApplicator -> com.android.systemui.statusbar.NotificationHeaderUtil$VisibilityApplicator:
    void <init>() -> <init>
    void apply(android.view.View,boolean) -> apply
    void <init>(com.android.systemui.statusbar.NotificationHeaderUtil$VisibilityApplicator) -> <init>
com.android.systemui.statusbar.phone.DozeScrimController$5 -> com.android.systemui.statusbar.phone.DozeScrimController$5:
    com.android.systemui.statusbar.phone.DozeScrimController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.DozeScrimController) -> <init>
    void run() -> run
com.android.systemui.volume.SegmentedButtons$1 -> com.android.systemui.volume.SegmentedButtons$1:
    com.android.systemui.volume.SegmentedButtons this$0 -> this$0
    void <init>(com.android.systemui.volume.SegmentedButtons) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.policy.NetworkControllerImpl$1 -> com.android.systemui.statusbar.policy.NetworkControllerImpl$1:
    com.android.systemui.statusbar.policy.NetworkControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> <init>
    void run() -> run
com.android.systemui.statusbar.car.FullscreenUserSwitcher$1 -> com.android.systemui.statusbar.car.FullscreenUserSwitcher$1:
    com.android.systemui.statusbar.car.FullscreenUserSwitcher this$0 -> this$0
    android.view.View val$incoming -> val$incoming
    void <init>(com.android.systemui.statusbar.car.FullscreenUserSwitcher,android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.systemui.qs.GlobalSetting -> com.android.systemui.qs.GlobalSetting:
    android.content.Context mContext -> mContext
    java.lang.String mSettingName -> mSettingName
    void <init>(android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void setListening(boolean) -> setListening
    int getValue() -> getValue
    void handleValueChanged(int) -> handleValueChanged
    void onChange(boolean) -> onChange
android.support.v17.leanback.R$fraction -> android.support.v17.leanback.R$fraction:
    int lb_search_bar_speech_orb_max_level_zoom -> lb_search_bar_speech_orb_max_level_zoom
    int lb_search_orb_focused_zoom -> lb_search_orb_focused_zoom
    void <init>() -> <init>
com.android.systemui.qs.tiles.IntentTile$BytesIcon -> com.android.systemui.qs.tiles.IntentTile$BytesIcon:
    byte[] mBytes -> mBytes
    void <init>(byte[]) -> <init>
    boolean equals(java.lang.Object) -> equals
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
    java.lang.String toString() -> toString
com.android.systemui.plugins.R$styleable -> com.android.systemui.plugins.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetEndWithActions -> ActionBar_contentInsetEndWithActions
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_contentInsetStartWithNavigation -> ActionBar_contentInsetStartWithNavigation
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_showTitle -> AlertDialog_showTitle
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AnimatedImageView -> AnimatedImageView
    int AnimatedImageView_hasOverlappingRendering -> AnimatedImageView_hasOverlappingRendering
    int[] AppCompatImageView -> AppCompatImageView
    int AppCompatImageView_android_src -> AppCompatImageView_android_src
    int AppCompatImageView_srcCompat -> AppCompatImageView_srcCompat
    int AppCompatImageView_tint -> AppCompatImageView_tint
    int AppCompatImageView_tintMode -> AppCompatImageView_tintMode
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int AppCompatSeekBar_android_thumb -> AppCompatSeekBar_android_thumb
    int AppCompatSeekBar_tickMark -> AppCompatSeekBar_tickMark
    int AppCompatSeekBar_tickMarkTint -> AppCompatSeekBar_tickMarkTint
    int AppCompatSeekBar_tickMarkTintMode -> AppCompatSeekBar_tickMarkTintMode
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int AppCompatTextHelper_android_drawableBottom -> AppCompatTextHelper_android_drawableBottom
    int AppCompatTextHelper_android_drawableEnd -> AppCompatTextHelper_android_drawableEnd
    int AppCompatTextHelper_android_drawableLeft -> AppCompatTextHelper_android_drawableLeft
    int AppCompatTextHelper_android_drawableRight -> AppCompatTextHelper_android_drawableRight
    int AppCompatTextHelper_android_drawableStart -> AppCompatTextHelper_android_drawableStart
    int AppCompatTextHelper_android_drawableTop -> AppCompatTextHelper_android_drawableTop
    int AppCompatTextHelper_android_textAppearance -> AppCompatTextHelper_android_textAppearance
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_autoSizeMaxTextSize -> AppCompatTextView_autoSizeMaxTextSize
    int AppCompatTextView_autoSizeMinTextSize -> AppCompatTextView_autoSizeMinTextSize
    int AppCompatTextView_autoSizePresetSizes -> AppCompatTextView_autoSizePresetSizes
    int AppCompatTextView_autoSizeStepGranularity -> AppCompatTextView_autoSizeStepGranularity
    int AppCompatTextView_autoSizeTextType -> AppCompatTextView_autoSizeTextType
    int AppCompatTextView_fontFamily -> AppCompatTextView_fontFamily
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] AppCompatTheme -> AppCompatTheme
    int AppCompatTheme_actionBarDivider -> AppCompatTheme_actionBarDivider
    int AppCompatTheme_actionBarItemBackground -> AppCompatTheme_actionBarItemBackground
    int AppCompatTheme_actionBarPopupTheme -> AppCompatTheme_actionBarPopupTheme
    int AppCompatTheme_actionBarSize -> AppCompatTheme_actionBarSize
    int AppCompatTheme_actionBarSplitStyle -> AppCompatTheme_actionBarSplitStyle
    int AppCompatTheme_actionBarStyle -> AppCompatTheme_actionBarStyle
    int AppCompatTheme_actionBarTabBarStyle -> AppCompatTheme_actionBarTabBarStyle
    int AppCompatTheme_actionBarTabStyle -> AppCompatTheme_actionBarTabStyle
    int AppCompatTheme_actionBarTabTextStyle -> AppCompatTheme_actionBarTabTextStyle
    int AppCompatTheme_actionBarTheme -> AppCompatTheme_actionBarTheme
    int AppCompatTheme_actionBarWidgetTheme -> AppCompatTheme_actionBarWidgetTheme
    int AppCompatTheme_actionButtonStyle -> AppCompatTheme_actionButtonStyle
    int AppCompatTheme_actionDropDownStyle -> AppCompatTheme_actionDropDownStyle
    int AppCompatTheme_actionMenuTextAppearance -> AppCompatTheme_actionMenuTextAppearance
    int AppCompatTheme_actionMenuTextColor -> AppCompatTheme_actionMenuTextColor
    int AppCompatTheme_actionModeBackground -> AppCompatTheme_actionModeBackground
    int AppCompatTheme_actionModeCloseButtonStyle -> AppCompatTheme_actionModeCloseButtonStyle
    int AppCompatTheme_actionModeCloseDrawable -> AppCompatTheme_actionModeCloseDrawable
    int AppCompatTheme_actionModeCopyDrawable -> AppCompatTheme_actionModeCopyDrawable
    int AppCompatTheme_actionModeCutDrawable -> AppCompatTheme_actionModeCutDrawable
    int AppCompatTheme_actionModeFindDrawable -> AppCompatTheme_actionModeFindDrawable
    int AppCompatTheme_actionModePasteDrawable -> AppCompatTheme_actionModePasteDrawable
    int AppCompatTheme_actionModePopupWindowStyle -> AppCompatTheme_actionModePopupWindowStyle
    int AppCompatTheme_actionModeSelectAllDrawable -> AppCompatTheme_actionModeSelectAllDrawable
    int AppCompatTheme_actionModeShareDrawable -> AppCompatTheme_actionModeShareDrawable
    int AppCompatTheme_actionModeSplitBackground -> AppCompatTheme_actionModeSplitBackground
    int AppCompatTheme_actionModeStyle -> AppCompatTheme_actionModeStyle
    int AppCompatTheme_actionModeWebSearchDrawable -> AppCompatTheme_actionModeWebSearchDrawable
    int AppCompatTheme_actionOverflowButtonStyle -> AppCompatTheme_actionOverflowButtonStyle
    int AppCompatTheme_actionOverflowMenuStyle -> AppCompatTheme_actionOverflowMenuStyle
    int AppCompatTheme_activityChooserViewStyle -> AppCompatTheme_activityChooserViewStyle
    int AppCompatTheme_alertDialogButtonGroupStyle -> AppCompatTheme_alertDialogButtonGroupStyle
    int AppCompatTheme_alertDialogCenterButtons -> AppCompatTheme_alertDialogCenterButtons
    int AppCompatTheme_alertDialogStyle -> AppCompatTheme_alertDialogStyle
    int AppCompatTheme_alertDialogTheme -> AppCompatTheme_alertDialogTheme
    int AppCompatTheme_android_windowAnimationStyle -> AppCompatTheme_android_windowAnimationStyle
    int AppCompatTheme_android_windowIsFloating -> AppCompatTheme_android_windowIsFloating
    int AppCompatTheme_autoCompleteTextViewStyle -> AppCompatTheme_autoCompleteTextViewStyle
    int AppCompatTheme_borderlessButtonStyle -> AppCompatTheme_borderlessButtonStyle
    int AppCompatTheme_buttonBarButtonStyle -> AppCompatTheme_buttonBarButtonStyle
    int AppCompatTheme_buttonBarNegativeButtonStyle -> AppCompatTheme_buttonBarNegativeButtonStyle
    int AppCompatTheme_buttonBarNeutralButtonStyle -> AppCompatTheme_buttonBarNeutralButtonStyle
    int AppCompatTheme_buttonBarPositiveButtonStyle -> AppCompatTheme_buttonBarPositiveButtonStyle
    int AppCompatTheme_buttonBarStyle -> AppCompatTheme_buttonBarStyle
    int AppCompatTheme_buttonStyle -> AppCompatTheme_buttonStyle
    int AppCompatTheme_buttonStyleSmall -> AppCompatTheme_buttonStyleSmall
    int AppCompatTheme_checkboxStyle -> AppCompatTheme_checkboxStyle
    int AppCompatTheme_checkedTextViewStyle -> AppCompatTheme_checkedTextViewStyle
    int AppCompatTheme_colorAccent -> AppCompatTheme_colorAccent
    int AppCompatTheme_colorBackgroundFloating -> AppCompatTheme_colorBackgroundFloating
    int AppCompatTheme_colorButtonNormal -> AppCompatTheme_colorButtonNormal
    int AppCompatTheme_colorControlActivated -> AppCompatTheme_colorControlActivated
    int AppCompatTheme_colorControlHighlight -> AppCompatTheme_colorControlHighlight
    int AppCompatTheme_colorControlNormal -> AppCompatTheme_colorControlNormal
    int AppCompatTheme_colorError -> AppCompatTheme_colorError
    int AppCompatTheme_colorPrimary -> AppCompatTheme_colorPrimary
    int AppCompatTheme_colorPrimaryDark -> AppCompatTheme_colorPrimaryDark
    int AppCompatTheme_colorSwitchThumbNormal -> AppCompatTheme_colorSwitchThumbNormal
    int AppCompatTheme_controlBackground -> AppCompatTheme_controlBackground
    int AppCompatTheme_dialogPreferredPadding -> AppCompatTheme_dialogPreferredPadding
    int AppCompatTheme_dialogTheme -> AppCompatTheme_dialogTheme
    int AppCompatTheme_dividerHorizontal -> AppCompatTheme_dividerHorizontal
    int AppCompatTheme_dividerVertical -> AppCompatTheme_dividerVertical
    int AppCompatTheme_dropDownListViewStyle -> AppCompatTheme_dropDownListViewStyle
    int AppCompatTheme_dropdownListPreferredItemHeight -> AppCompatTheme_dropdownListPreferredItemHeight
    int AppCompatTheme_editTextBackground -> AppCompatTheme_editTextBackground
    int AppCompatTheme_editTextColor -> AppCompatTheme_editTextColor
    int AppCompatTheme_editTextStyle -> AppCompatTheme_editTextStyle
    int AppCompatTheme_homeAsUpIndicator -> AppCompatTheme_homeAsUpIndicator
    int AppCompatTheme_imageButtonStyle -> AppCompatTheme_imageButtonStyle
    int AppCompatTheme_listChoiceBackgroundIndicator -> AppCompatTheme_listChoiceBackgroundIndicator
    int AppCompatTheme_listDividerAlertDialog -> AppCompatTheme_listDividerAlertDialog
    int AppCompatTheme_listMenuViewStyle -> AppCompatTheme_listMenuViewStyle
    int AppCompatTheme_listPopupWindowStyle -> AppCompatTheme_listPopupWindowStyle
    int AppCompatTheme_listPreferredItemHeight -> AppCompatTheme_listPreferredItemHeight
    int AppCompatTheme_listPreferredItemHeightLarge -> AppCompatTheme_listPreferredItemHeightLarge
    int AppCompatTheme_listPreferredItemHeightSmall -> AppCompatTheme_listPreferredItemHeightSmall
    int AppCompatTheme_listPreferredItemPaddingLeft -> AppCompatTheme_listPreferredItemPaddingLeft
    int AppCompatTheme_listPreferredItemPaddingRight -> AppCompatTheme_listPreferredItemPaddingRight
    int AppCompatTheme_panelBackground -> AppCompatTheme_panelBackground
    int AppCompatTheme_panelMenuListTheme -> AppCompatTheme_panelMenuListTheme
    int AppCompatTheme_panelMenuListWidth -> AppCompatTheme_panelMenuListWidth
    int AppCompatTheme_popupMenuStyle -> AppCompatTheme_popupMenuStyle
    int AppCompatTheme_popupWindowStyle -> AppCompatTheme_popupWindowStyle
    int AppCompatTheme_radioButtonStyle -> AppCompatTheme_radioButtonStyle
    int AppCompatTheme_ratingBarStyle -> AppCompatTheme_ratingBarStyle
    int AppCompatTheme_ratingBarStyleIndicator -> AppCompatTheme_ratingBarStyleIndicator
    int AppCompatTheme_ratingBarStyleSmall -> AppCompatTheme_ratingBarStyleSmall
    int AppCompatTheme_searchViewStyle -> AppCompatTheme_searchViewStyle
    int AppCompatTheme_seekBarStyle -> AppCompatTheme_seekBarStyle
    int AppCompatTheme_selectableItemBackground -> AppCompatTheme_selectableItemBackground
    int AppCompatTheme_selectableItemBackgroundBorderless -> AppCompatTheme_selectableItemBackgroundBorderless
    int AppCompatTheme_spinnerDropDownItemStyle -> AppCompatTheme_spinnerDropDownItemStyle
    int AppCompatTheme_spinnerStyle -> AppCompatTheme_spinnerStyle
    int AppCompatTheme_switchStyle -> AppCompatTheme_switchStyle
    int AppCompatTheme_textAppearanceLargePopupMenu -> AppCompatTheme_textAppearanceLargePopupMenu
    int AppCompatTheme_textAppearanceListItem -> AppCompatTheme_textAppearanceListItem
    int AppCompatTheme_textAppearanceListItemSecondary -> AppCompatTheme_textAppearanceListItemSecondary
    int AppCompatTheme_textAppearanceListItemSmall -> AppCompatTheme_textAppearanceListItemSmall
    int AppCompatTheme_textAppearancePopupMenuHeader -> AppCompatTheme_textAppearancePopupMenuHeader
    int AppCompatTheme_textAppearanceSearchResultSubtitle -> AppCompatTheme_textAppearanceSearchResultSubtitle
    int AppCompatTheme_textAppearanceSearchResultTitle -> AppCompatTheme_textAppearanceSearchResultTitle
    int AppCompatTheme_textAppearanceSmallPopupMenu -> AppCompatTheme_textAppearanceSmallPopupMenu
    int AppCompatTheme_textColorAlertDialogListItem -> AppCompatTheme_textColorAlertDialogListItem
    int AppCompatTheme_textColorSearchUrl -> AppCompatTheme_textColorSearchUrl
    int AppCompatTheme_toolbarNavigationButtonStyle -> AppCompatTheme_toolbarNavigationButtonStyle
    int AppCompatTheme_toolbarStyle -> AppCompatTheme_toolbarStyle
    int AppCompatTheme_tooltipForegroundColor -> AppCompatTheme_tooltipForegroundColor
    int AppCompatTheme_tooltipFrameBackground -> AppCompatTheme_tooltipFrameBackground
    int AppCompatTheme_windowActionBar -> AppCompatTheme_windowActionBar
    int AppCompatTheme_windowActionBarOverlay -> AppCompatTheme_windowActionBarOverlay
    int AppCompatTheme_windowActionModeOverlay -> AppCompatTheme_windowActionModeOverlay
    int AppCompatTheme_windowFixedHeightMajor -> AppCompatTheme_windowFixedHeightMajor
    int AppCompatTheme_windowFixedHeightMinor -> AppCompatTheme_windowFixedHeightMinor
    int AppCompatTheme_windowFixedWidthMajor -> AppCompatTheme_windowFixedWidthMajor
    int AppCompatTheme_windowFixedWidthMinor -> AppCompatTheme_windowFixedWidthMinor
    int AppCompatTheme_windowMinWidthMajor -> AppCompatTheme_windowMinWidthMajor
    int AppCompatTheme_windowMinWidthMinor -> AppCompatTheme_windowMinWidthMinor
    int AppCompatTheme_windowNoTitle -> AppCompatTheme_windowNoTitle
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int AutoReinflateContainer_android_layout -> AutoReinflateContainer_android_layout
    int[] AutoSizingList -> AutoSizingList
    int AutoSizingList_enableAutoSizing -> AutoSizingList_enableAutoSizing
    int AutoSizingList_itemHeight -> AutoSizingList_itemHeight
    int[] BackgroundStyle -> BackgroundStyle
    int BackgroundStyle_android_selectableItemBackground -> BackgroundStyle_android_selectableItemBackground
    int BackgroundStyle_selectableItemBackground -> BackgroundStyle_selectableItemBackground
    int[] BatteryMeterView -> BatteryMeterView
    int BatteryMeterView_frameColor -> BatteryMeterView_frameColor
    int[] ButtonBarLayout -> ButtonBarLayout
    int ButtonBarLayout_allowStacking -> ButtonBarLayout_allowStacking
    int[] CarrierText -> CarrierText
    int CarrierText_allCaps -> CarrierText_allCaps
    int[] CheckBoxPreference -> CheckBoxPreference
    int CheckBoxPreference_android_disableDependentsState -> CheckBoxPreference_android_disableDependentsState
    int CheckBoxPreference_android_summaryOff -> CheckBoxPreference_android_summaryOff
    int CheckBoxPreference_android_summaryOn -> CheckBoxPreference_android_summaryOn
    int CheckBoxPreference_disableDependentsState -> CheckBoxPreference_disableDependentsState
    int CheckBoxPreference_summaryOff -> CheckBoxPreference_summaryOff
    int CheckBoxPreference_summaryOn -> CheckBoxPreference_summaryOn
    int[] Clock -> Clock
    int Clock_amPmStyle -> Clock_amPmStyle
    int Clock_showDark -> Clock_showDark
    int[] ColorStateListItem -> ColorStateListItem
    int ColorStateListItem_alpha -> ColorStateListItem_alpha
    int ColorStateListItem_android_alpha -> ColorStateListItem_android_alpha
    int ColorStateListItem_android_color -> ColorStateListItem_android_color
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] DateView -> DateView
    int DateView_datePattern -> DateView_datePattern
    int[] DeadZone -> DeadZone
    int DeadZone_decayTime -> DeadZone_decayTime
    int DeadZone_holdTime -> DeadZone_holdTime
    int DeadZone_maxSize -> DeadZone_maxSize
    int DeadZone_minSize -> DeadZone_minSize
    int DeadZone_orientation -> DeadZone_orientation
    int[] DialogPreference -> DialogPreference
    int DialogPreference_android_dialogIcon -> DialogPreference_android_dialogIcon
    int DialogPreference_android_dialogLayout -> DialogPreference_android_dialogLayout
    int DialogPreference_android_dialogMessage -> DialogPreference_android_dialogMessage
    int DialogPreference_android_dialogTitle -> DialogPreference_android_dialogTitle
    int DialogPreference_android_negativeButtonText -> DialogPreference_android_negativeButtonText
    int DialogPreference_android_positiveButtonText -> DialogPreference_android_positiveButtonText
    int DialogPreference_dialogIcon -> DialogPreference_dialogIcon
    int DialogPreference_dialogLayout -> DialogPreference_dialogLayout
    int DialogPreference_dialogMessage -> DialogPreference_dialogMessage
    int DialogPreference_dialogTitle -> DialogPreference_dialogTitle
    int DialogPreference_negativeButtonText -> DialogPreference_negativeButtonText
    int DialogPreference_positiveButtonText -> DialogPreference_positiveButtonText
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int HybridNotificationTheme_hybridNotificationStyle -> HybridNotificationTheme_hybridNotificationStyle
    int HybridNotificationTheme_hybridNotificationTextStyle -> HybridNotificationTheme_hybridNotificationTextStyle
    int HybridNotificationTheme_hybridNotificationTitleStyle -> HybridNotificationTheme_hybridNotificationTitleStyle
    int[] KeyButtonView -> KeyButtonView
    int KeyButtonView_android_contentDescription -> KeyButtonView_android_contentDescription
    int KeyButtonView_keyCode -> KeyButtonView_keyCode
    int KeyButtonView_keyRepeat -> KeyButtonView_keyRepeat
    int KeyButtonView_playSound -> KeyButtonView_playSound
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int KeyguardSecurityViewFlipper_Layout_layout_maxHeight -> KeyguardSecurityViewFlipper_Layout_layout_maxHeight
    int KeyguardSecurityViewFlipper_Layout_layout_maxWidth -> KeyguardSecurityViewFlipper_Layout_layout_maxWidth
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int LeanbackGuidedStepTheme_guidanceBreadcrumbStyle -> LeanbackGuidedStepTheme_guidanceBreadcrumbStyle
    int LeanbackGuidedStepTheme_guidanceContainerStyle -> LeanbackGuidedStepTheme_guidanceContainerStyle
    int LeanbackGuidedStepTheme_guidanceDescriptionStyle -> LeanbackGuidedStepTheme_guidanceDescriptionStyle
    int LeanbackGuidedStepTheme_guidanceEntryAnimation -> LeanbackGuidedStepTheme_guidanceEntryAnimation
    int LeanbackGuidedStepTheme_guidanceIconStyle -> LeanbackGuidedStepTheme_guidanceIconStyle
    int LeanbackGuidedStepTheme_guidanceTitleStyle -> LeanbackGuidedStepTheme_guidanceTitleStyle
    int LeanbackGuidedStepTheme_guidedActionCheckedAnimation -> LeanbackGuidedStepTheme_guidedActionCheckedAnimation
    int LeanbackGuidedStepTheme_guidedActionContentWidth -> LeanbackGuidedStepTheme_guidedActionContentWidth
    int LeanbackGuidedStepTheme_guidedActionContentWidthNoIcon -> LeanbackGuidedStepTheme_guidedActionContentWidthNoIcon
    int LeanbackGuidedStepTheme_guidedActionContentWidthWeight -> LeanbackGuidedStepTheme_guidedActionContentWidthWeight
    int LeanbackGuidedStepTheme_guidedActionContentWidthWeightTwoPanels -> LeanbackGuidedStepTheme_guidedActionContentWidthWeightTwoPanels
    int LeanbackGuidedStepTheme_guidedActionDescriptionMinLines -> LeanbackGuidedStepTheme_guidedActionDescriptionMinLines
    int LeanbackGuidedStepTheme_guidedActionDisabledChevronAlpha -> LeanbackGuidedStepTheme_guidedActionDisabledChevronAlpha
    int LeanbackGuidedStepTheme_guidedActionEnabledChevronAlpha -> LeanbackGuidedStepTheme_guidedActionEnabledChevronAlpha
    int LeanbackGuidedStepTheme_guidedActionItemCheckmarkStyle -> LeanbackGuidedStepTheme_guidedActionItemCheckmarkStyle
    int LeanbackGuidedStepTheme_guidedActionItemChevronStyle -> LeanbackGuidedStepTheme_guidedActionItemChevronStyle
    int LeanbackGuidedStepTheme_guidedActionItemContainerStyle -> LeanbackGuidedStepTheme_guidedActionItemContainerStyle
    int LeanbackGuidedStepTheme_guidedActionItemContentStyle -> LeanbackGuidedStepTheme_guidedActionItemContentStyle
    int LeanbackGuidedStepTheme_guidedActionItemDescriptionStyle -> LeanbackGuidedStepTheme_guidedActionItemDescriptionStyle
    int LeanbackGuidedStepTheme_guidedActionItemIconStyle -> LeanbackGuidedStepTheme_guidedActionItemIconStyle
    int LeanbackGuidedStepTheme_guidedActionItemTitleStyle -> LeanbackGuidedStepTheme_guidedActionItemTitleStyle
    int LeanbackGuidedStepTheme_guidedActionPressedAnimation -> LeanbackGuidedStepTheme_guidedActionPressedAnimation
    int LeanbackGuidedStepTheme_guidedActionTitleMaxLines -> LeanbackGuidedStepTheme_guidedActionTitleMaxLines
    int LeanbackGuidedStepTheme_guidedActionTitleMinLines -> LeanbackGuidedStepTheme_guidedActionTitleMinLines
    int LeanbackGuidedStepTheme_guidedActionUncheckedAnimation -> LeanbackGuidedStepTheme_guidedActionUncheckedAnimation
    int LeanbackGuidedStepTheme_guidedActionUnpressedAnimation -> LeanbackGuidedStepTheme_guidedActionUnpressedAnimation
    int LeanbackGuidedStepTheme_guidedActionVerticalPadding -> LeanbackGuidedStepTheme_guidedActionVerticalPadding
    int LeanbackGuidedStepTheme_guidedActionsBackground -> LeanbackGuidedStepTheme_guidedActionsBackground
    int LeanbackGuidedStepTheme_guidedActionsBackgroundDark -> LeanbackGuidedStepTheme_guidedActionsBackgroundDark
    int LeanbackGuidedStepTheme_guidedActionsContainerStyle -> LeanbackGuidedStepTheme_guidedActionsContainerStyle
    int LeanbackGuidedStepTheme_guidedActionsElevation -> LeanbackGuidedStepTheme_guidedActionsElevation
    int LeanbackGuidedStepTheme_guidedActionsEntryAnimation -> LeanbackGuidedStepTheme_guidedActionsEntryAnimation
    int LeanbackGuidedStepTheme_guidedActionsListStyle -> LeanbackGuidedStepTheme_guidedActionsListStyle
    int LeanbackGuidedStepTheme_guidedActionsSelectorDrawable -> LeanbackGuidedStepTheme_guidedActionsSelectorDrawable
    int LeanbackGuidedStepTheme_guidedActionsSelectorHideAnimation -> LeanbackGuidedStepTheme_guidedActionsSelectorHideAnimation
    int LeanbackGuidedStepTheme_guidedActionsSelectorShowAnimation -> LeanbackGuidedStepTheme_guidedActionsSelectorShowAnimation
    int LeanbackGuidedStepTheme_guidedActionsSelectorStyle -> LeanbackGuidedStepTheme_guidedActionsSelectorStyle
    int LeanbackGuidedStepTheme_guidedButtonActionsListStyle -> LeanbackGuidedStepTheme_guidedButtonActionsListStyle
    int LeanbackGuidedStepTheme_guidedButtonActionsWidthWeight -> LeanbackGuidedStepTheme_guidedButtonActionsWidthWeight
    int LeanbackGuidedStepTheme_guidedStepBackground -> LeanbackGuidedStepTheme_guidedStepBackground
    int LeanbackGuidedStepTheme_guidedStepEntryAnimation -> LeanbackGuidedStepTheme_guidedStepEntryAnimation
    int LeanbackGuidedStepTheme_guidedStepExitAnimation -> LeanbackGuidedStepTheme_guidedStepExitAnimation
    int LeanbackGuidedStepTheme_guidedStepHeightWeight -> LeanbackGuidedStepTheme_guidedStepHeightWeight
    int LeanbackGuidedStepTheme_guidedStepImeAppearingAnimation -> LeanbackGuidedStepTheme_guidedStepImeAppearingAnimation
    int LeanbackGuidedStepTheme_guidedStepImeDisappearingAnimation -> LeanbackGuidedStepTheme_guidedStepImeDisappearingAnimation
    int LeanbackGuidedStepTheme_guidedStepKeyline -> LeanbackGuidedStepTheme_guidedStepKeyline
    int LeanbackGuidedStepTheme_guidedStepReentryAnimation -> LeanbackGuidedStepTheme_guidedStepReentryAnimation
    int LeanbackGuidedStepTheme_guidedStepReturnAnimation -> LeanbackGuidedStepTheme_guidedStepReturnAnimation
    int LeanbackGuidedStepTheme_guidedStepTheme -> LeanbackGuidedStepTheme_guidedStepTheme
    int LeanbackGuidedStepTheme_guidedStepThemeFlag -> LeanbackGuidedStepTheme_guidedStepThemeFlag
    int LeanbackGuidedStepTheme_guidedSubActionsListStyle -> LeanbackGuidedStepTheme_guidedSubActionsListStyle
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int LeanbackOnboardingTheme_onboardingDescriptionStyle -> LeanbackOnboardingTheme_onboardingDescriptionStyle
    int LeanbackOnboardingTheme_onboardingHeaderStyle -> LeanbackOnboardingTheme_onboardingHeaderStyle
    int LeanbackOnboardingTheme_onboardingLogoStyle -> LeanbackOnboardingTheme_onboardingLogoStyle
    int LeanbackOnboardingTheme_onboardingMainIconStyle -> LeanbackOnboardingTheme_onboardingMainIconStyle
    int LeanbackOnboardingTheme_onboardingNavigatorContainerStyle -> LeanbackOnboardingTheme_onboardingNavigatorContainerStyle
    int LeanbackOnboardingTheme_onboardingPageIndicatorStyle -> LeanbackOnboardingTheme_onboardingPageIndicatorStyle
    int LeanbackOnboardingTheme_onboardingStartButtonStyle -> LeanbackOnboardingTheme_onboardingStartButtonStyle
    int LeanbackOnboardingTheme_onboardingTheme -> LeanbackOnboardingTheme_onboardingTheme
    int LeanbackOnboardingTheme_onboardingTitleStyle -> LeanbackOnboardingTheme_onboardingTitleStyle
    int[] LeanbackTheme -> LeanbackTheme
    int LeanbackTheme_baseCardViewStyle -> LeanbackTheme_baseCardViewStyle
    int LeanbackTheme_browsePaddingBottom -> LeanbackTheme_browsePaddingBottom
    int LeanbackTheme_browsePaddingEnd -> LeanbackTheme_browsePaddingEnd
    int LeanbackTheme_browsePaddingStart -> LeanbackTheme_browsePaddingStart
    int LeanbackTheme_browsePaddingTop -> LeanbackTheme_browsePaddingTop
    int LeanbackTheme_browseRowsFadingEdgeLength -> LeanbackTheme_browseRowsFadingEdgeLength
    int LeanbackTheme_browseRowsMarginStart -> LeanbackTheme_browseRowsMarginStart
    int LeanbackTheme_browseRowsMarginTop -> LeanbackTheme_browseRowsMarginTop
    int LeanbackTheme_browseTitleIconStyle -> LeanbackTheme_browseTitleIconStyle
    int LeanbackTheme_browseTitleTextStyle -> LeanbackTheme_browseTitleTextStyle
    int LeanbackTheme_browseTitleViewLayout -> LeanbackTheme_browseTitleViewLayout
    int LeanbackTheme_browseTitleViewStyle -> LeanbackTheme_browseTitleViewStyle
    int LeanbackTheme_defaultBrandColor -> LeanbackTheme_defaultBrandColor
    int LeanbackTheme_defaultBrandColorDark -> LeanbackTheme_defaultBrandColorDark
    int LeanbackTheme_defaultSearchBrightColor -> LeanbackTheme_defaultSearchBrightColor
    int LeanbackTheme_defaultSearchColor -> LeanbackTheme_defaultSearchColor
    int LeanbackTheme_defaultSearchIcon -> LeanbackTheme_defaultSearchIcon
    int LeanbackTheme_defaultSearchIconColor -> LeanbackTheme_defaultSearchIconColor
    int LeanbackTheme_defaultSectionHeaderColor -> LeanbackTheme_defaultSectionHeaderColor
    int LeanbackTheme_detailsActionButtonStyle -> LeanbackTheme_detailsActionButtonStyle
    int LeanbackTheme_detailsDescriptionBodyStyle -> LeanbackTheme_detailsDescriptionBodyStyle
    int LeanbackTheme_detailsDescriptionSubtitleStyle -> LeanbackTheme_detailsDescriptionSubtitleStyle
    int LeanbackTheme_detailsDescriptionTitleStyle -> LeanbackTheme_detailsDescriptionTitleStyle
    int LeanbackTheme_errorMessageStyle -> LeanbackTheme_errorMessageStyle
    int LeanbackTheme_headerStyle -> LeanbackTheme_headerStyle
    int LeanbackTheme_headersVerticalGridStyle -> LeanbackTheme_headersVerticalGridStyle
    int LeanbackTheme_imageCardViewBadgeStyle -> LeanbackTheme_imageCardViewBadgeStyle
    int LeanbackTheme_imageCardViewContentStyle -> LeanbackTheme_imageCardViewContentStyle
    int LeanbackTheme_imageCardViewImageStyle -> LeanbackTheme_imageCardViewImageStyle
    int LeanbackTheme_imageCardViewInfoAreaStyle -> LeanbackTheme_imageCardViewInfoAreaStyle
    int LeanbackTheme_imageCardViewStyle -> LeanbackTheme_imageCardViewStyle
    int LeanbackTheme_imageCardViewTitleStyle -> LeanbackTheme_imageCardViewTitleStyle
    int LeanbackTheme_itemsVerticalGridStyle -> LeanbackTheme_itemsVerticalGridStyle
    int LeanbackTheme_overlayDimActiveLevel -> LeanbackTheme_overlayDimActiveLevel
    int LeanbackTheme_overlayDimDimmedLevel -> LeanbackTheme_overlayDimDimmedLevel
    int LeanbackTheme_overlayDimMaskColor -> LeanbackTheme_overlayDimMaskColor
    int LeanbackTheme_playbackControlButtonLabelStyle -> LeanbackTheme_playbackControlButtonLabelStyle
    int LeanbackTheme_playbackControlsActionIcons -> LeanbackTheme_playbackControlsActionIcons
    int LeanbackTheme_playbackControlsButtonStyle -> LeanbackTheme_playbackControlsButtonStyle
    int LeanbackTheme_playbackControlsIconHighlightColor -> LeanbackTheme_playbackControlsIconHighlightColor
    int LeanbackTheme_playbackControlsTimeStyle -> LeanbackTheme_playbackControlsTimeStyle
    int LeanbackTheme_playbackMediaItemDetailsStyle -> LeanbackTheme_playbackMediaItemDetailsStyle
    int LeanbackTheme_playbackMediaItemDurationStyle -> LeanbackTheme_playbackMediaItemDurationStyle
    int LeanbackTheme_playbackMediaItemNameStyle -> LeanbackTheme_playbackMediaItemNameStyle
    int LeanbackTheme_playbackMediaItemNumberStyle -> LeanbackTheme_playbackMediaItemNumberStyle
    int LeanbackTheme_playbackMediaItemNumberViewFlipperLayout -> LeanbackTheme_playbackMediaItemNumberViewFlipperLayout
    int LeanbackTheme_playbackMediaItemNumberViewFlipperStyle -> LeanbackTheme_playbackMediaItemNumberViewFlipperStyle
    int LeanbackTheme_playbackMediaItemPaddingStart -> LeanbackTheme_playbackMediaItemPaddingStart
    int LeanbackTheme_playbackMediaItemRowStyle -> LeanbackTheme_playbackMediaItemRowStyle
    int LeanbackTheme_playbackMediaItemSeparatorStyle -> LeanbackTheme_playbackMediaItemSeparatorStyle
    int LeanbackTheme_playbackMediaListHeaderStyle -> LeanbackTheme_playbackMediaListHeaderStyle
    int LeanbackTheme_playbackMediaListHeaderTitleStyle -> LeanbackTheme_playbackMediaListHeaderTitleStyle
    int LeanbackTheme_playbackPaddingEnd -> LeanbackTheme_playbackPaddingEnd
    int LeanbackTheme_playbackPaddingStart -> LeanbackTheme_playbackPaddingStart
    int LeanbackTheme_playbackProgressPrimaryColor -> LeanbackTheme_playbackProgressPrimaryColor
    int LeanbackTheme_rowHeaderDescriptionStyle -> LeanbackTheme_rowHeaderDescriptionStyle
    int LeanbackTheme_rowHeaderDockStyle -> LeanbackTheme_rowHeaderDockStyle
    int LeanbackTheme_rowHeaderStyle -> LeanbackTheme_rowHeaderStyle
    int LeanbackTheme_rowHorizontalGridStyle -> LeanbackTheme_rowHorizontalGridStyle
    int LeanbackTheme_rowHoverCardDescriptionStyle -> LeanbackTheme_rowHoverCardDescriptionStyle
    int LeanbackTheme_rowHoverCardTitleStyle -> LeanbackTheme_rowHoverCardTitleStyle
    int LeanbackTheme_rowsVerticalGridStyle -> LeanbackTheme_rowsVerticalGridStyle
    int LeanbackTheme_searchOrbViewStyle -> LeanbackTheme_searchOrbViewStyle
    int LeanbackTheme_sectionHeaderStyle -> LeanbackTheme_sectionHeaderStyle
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] ListPreference -> ListPreference
    int ListPreference_android_entries -> ListPreference_android_entries
    int ListPreference_android_entryValues -> ListPreference_android_entryValues
    int ListPreference_entries -> ListPreference_entries
    int ListPreference_entryValues -> ListPreference_entryValues
    int[] MediaRouteButton -> MediaRouteButton
    int MediaRouteButton_android_minHeight -> MediaRouteButton_android_minHeight
    int MediaRouteButton_android_minWidth -> MediaRouteButton_android_minWidth
    int MediaRouteButton_externalRouteEnabledDrawable -> MediaRouteButton_externalRouteEnabledDrawable
    int MediaRouteButton_mediaRouteButtonTint -> MediaRouteButton_mediaRouteButtonTint
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_alphabeticModifiers -> MenuItem_alphabeticModifiers
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_contentDescription -> MenuItem_contentDescription
    int MenuItem_iconTint -> MenuItem_iconTint
    int MenuItem_iconTintMode -> MenuItem_iconTintMode
    int MenuItem_numericModifiers -> MenuItem_numericModifiers
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int MenuItem_tooltipText -> MenuItem_tooltipText
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int MenuView_subMenuArrow -> MenuView_subMenuArrow
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int MultiSelectListPreference_android_entries -> MultiSelectListPreference_android_entries
    int MultiSelectListPreference_android_entryValues -> MultiSelectListPreference_android_entryValues
    int MultiSelectListPreference_entries -> MultiSelectListPreference_entries
    int MultiSelectListPreference_entryValues -> MultiSelectListPreference_entryValues
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int NotificationLinearLayout_insetLeft -> NotificationLinearLayout_insetLeft
    int[] NumPadKey -> NumPadKey
    int NumPadKey_digit -> NumPadKey_digit
    int NumPadKey_textView -> NumPadKey_textView
    int[] PagingIndicator -> PagingIndicator
    int PagingIndicator_arrowBgColor -> PagingIndicator_arrowBgColor
    int PagingIndicator_arrowColor -> PagingIndicator_arrowColor
    int PagingIndicator_arrowRadius -> PagingIndicator_arrowRadius
    int PagingIndicator_dotBgColor -> PagingIndicator_dotBgColor
    int PagingIndicator_dotToArrowGap -> PagingIndicator_dotToArrowGap
    int PagingIndicator_dotToDotGap -> PagingIndicator_dotToDotGap
    int PagingIndicator_lbDotRadius -> PagingIndicator_lbDotRadius
    int[] PasswordTextView -> PasswordTextView
    int PasswordTextView_android_gravity -> PasswordTextView_android_gravity
    int PasswordTextView_android_textColor -> PasswordTextView_android_textColor
    int PasswordTextView_charPadding -> PasswordTextView_charPadding
    int PasswordTextView_dotSize -> PasswordTextView_dotSize
    int PasswordTextView_scaledTextSize -> PasswordTextView_scaledTextSize
    int[] PluginInflateContainer -> PluginInflateContainer
    int PluginInflateContainer_viewType -> PluginInflateContainer_viewType
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int PreferenceFragmentCompat_allowDividerAfterLastItem -> PreferenceFragmentCompat_allowDividerAfterLastItem
    int PreferenceFragmentCompat_android_divider -> PreferenceFragmentCompat_android_divider
    int PreferenceFragmentCompat_android_dividerHeight -> PreferenceFragmentCompat_android_dividerHeight
    int PreferenceFragmentCompat_android_layout -> PreferenceFragmentCompat_android_layout
    int PreferenceFragment_allowDividerAfterLastItem -> PreferenceFragment_allowDividerAfterLastItem
    int PreferenceFragment_android_divider -> PreferenceFragment_android_divider
    int PreferenceFragment_android_dividerHeight -> PreferenceFragment_android_dividerHeight
    int PreferenceFragment_android_layout -> PreferenceFragment_android_layout
    int[] PreferenceGroup -> PreferenceGroup
    int PreferenceGroup_android_orderingFromXml -> PreferenceGroup_android_orderingFromXml
    int PreferenceGroup_orderingFromXml -> PreferenceGroup_orderingFromXml
    int[] PreferenceImageView -> PreferenceImageView
    int PreferenceImageView_android_maxHeight -> PreferenceImageView_android_maxHeight
    int PreferenceImageView_android_maxWidth -> PreferenceImageView_android_maxWidth
    int PreferenceImageView_maxHeight -> PreferenceImageView_maxHeight
    int PreferenceImageView_maxWidth -> PreferenceImageView_maxWidth
    int[] PreferenceTheme -> PreferenceTheme
    int PreferenceTheme_checkBoxPreferenceStyle -> PreferenceTheme_checkBoxPreferenceStyle
    int PreferenceTheme_dialogPreferenceStyle -> PreferenceTheme_dialogPreferenceStyle
    int PreferenceTheme_dropdownPreferenceStyle -> PreferenceTheme_dropdownPreferenceStyle
    int PreferenceTheme_editTextPreferenceStyle -> PreferenceTheme_editTextPreferenceStyle
    int PreferenceTheme_preferenceActivityStyle -> PreferenceTheme_preferenceActivityStyle
    int PreferenceTheme_preferenceCategoryStyle -> PreferenceTheme_preferenceCategoryStyle
    int PreferenceTheme_preferenceFragmentCompatStyle -> PreferenceTheme_preferenceFragmentCompatStyle
    int PreferenceTheme_preferenceFragmentListStyle -> PreferenceTheme_preferenceFragmentListStyle
    int PreferenceTheme_preferenceFragmentPaddingSide -> PreferenceTheme_preferenceFragmentPaddingSide
    int PreferenceTheme_preferenceFragmentStyle -> PreferenceTheme_preferenceFragmentStyle
    int PreferenceTheme_preferenceHeaderPanelStyle -> PreferenceTheme_preferenceHeaderPanelStyle
    int PreferenceTheme_preferenceInformationStyle -> PreferenceTheme_preferenceInformationStyle
    int PreferenceTheme_preferenceLayoutChild -> PreferenceTheme_preferenceLayoutChild
    int PreferenceTheme_preferenceListStyle -> PreferenceTheme_preferenceListStyle
    int PreferenceTheme_preferencePanelStyle -> PreferenceTheme_preferencePanelStyle
    int PreferenceTheme_preferenceScreenStyle -> PreferenceTheme_preferenceScreenStyle
    int PreferenceTheme_preferenceStyle -> PreferenceTheme_preferenceStyle
    int PreferenceTheme_preferenceTheme -> PreferenceTheme_preferenceTheme
    int PreferenceTheme_ringtonePreferenceStyle -> PreferenceTheme_ringtonePreferenceStyle
    int PreferenceTheme_seekBarPreferenceStyle -> PreferenceTheme_seekBarPreferenceStyle
    int PreferenceTheme_switchPreferenceCompatStyle -> PreferenceTheme_switchPreferenceCompatStyle
    int PreferenceTheme_switchPreferenceStyle -> PreferenceTheme_switchPreferenceStyle
    int PreferenceTheme_yesNoPreferenceStyle -> PreferenceTheme_yesNoPreferenceStyle
    int Preference_allowDividerAbove -> Preference_allowDividerAbove
    int Preference_allowDividerBelow -> Preference_allowDividerBelow
    int Preference_android_defaultValue -> Preference_android_defaultValue
    int Preference_android_dependency -> Preference_android_dependency
    int Preference_android_enabled -> Preference_android_enabled
    int Preference_android_fragment -> Preference_android_fragment
    int Preference_android_icon -> Preference_android_icon
    int Preference_android_iconSpaceReserved -> Preference_android_iconSpaceReserved
    int Preference_android_key -> Preference_android_key
    int Preference_android_layout -> Preference_android_layout
    int Preference_android_order -> Preference_android_order
    int Preference_android_persistent -> Preference_android_persistent
    int Preference_android_selectable -> Preference_android_selectable
    int Preference_android_shouldDisableView -> Preference_android_shouldDisableView
    int Preference_android_singleLineTitle -> Preference_android_singleLineTitle
    int Preference_android_summary -> Preference_android_summary
    int Preference_android_title -> Preference_android_title
    int Preference_android_widgetLayout -> Preference_android_widgetLayout
    int Preference_defaultValue -> Preference_defaultValue
    int Preference_dependency -> Preference_dependency
    int Preference_enabled -> Preference_enabled
    int Preference_fragment -> Preference_fragment
    int Preference_icon -> Preference_icon
    int Preference_iconSpaceReserved -> Preference_iconSpaceReserved
    int Preference_key -> Preference_key
    int Preference_layout -> Preference_layout
    int Preference_order -> Preference_order
    int Preference_persistent -> Preference_persistent
    int Preference_selectable -> Preference_selectable
    int Preference_shouldDisableView -> Preference_shouldDisableView
    int Preference_singleLineTitle -> Preference_singleLineTitle
    int Preference_summary -> Preference_summary
    int Preference_title -> Preference_title
    int Preference_widgetLayout -> Preference_widgetLayout
    int[] PseudoGridView -> PseudoGridView
    int PseudoGridView_horizontalSpacing -> PseudoGridView_horizontalSpacing
    int PseudoGridView_numColumns -> PseudoGridView_numColumns
    int PseudoGridView_verticalSpacing -> PseudoGridView_verticalSpacing
    int[] RecentsPanelView -> RecentsPanelView
    int RecentsPanelView_clearAllBackgroundColor -> RecentsPanelView_clearAllBackgroundColor
    int RecentsPanelView_clearAllStyle -> RecentsPanelView_clearAllStyle
    int RecentsPanelView_recentItemLayout -> RecentsPanelView_recentItemLayout
    int[] RecycleListView -> RecycleListView
    int RecycleListView_paddingBottomNoButtons -> RecycleListView_paddingBottomNoButtons
    int RecycleListView_paddingTopNoTitle -> RecycleListView_paddingTopNoTitle
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    int[] RestrictedPreference -> RestrictedPreference
    int RestrictedPreference_useAdminDisabledSummary -> RestrictedPreference_useAdminDisabledSummary
    int RestrictedPreference_userRestriction -> RestrictedPreference_userRestriction
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int RestrictedSwitchPreference_restrictedSwitchSummary -> RestrictedSwitchPreference_restrictedSwitchSummary
    int RestrictedSwitchPreference_useAdditionalSummary -> RestrictedSwitchPreference_useAdditionalSummary
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] SeekBarPreference -> SeekBarPreference
    int SeekBarPreference_adjustable -> SeekBarPreference_adjustable
    int SeekBarPreference_android_layout -> SeekBarPreference_android_layout
    int SeekBarPreference_android_max -> SeekBarPreference_android_max
    int SeekBarPreference_min -> SeekBarPreference_min
    int SeekBarPreference_seekBarIncrement -> SeekBarPreference_seekBarIncrement
    int SeekBarPreference_showSeekBarValue -> SeekBarPreference_showSeekBarValue
    int[] Spinner -> Spinner
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_entries -> Spinner_android_entries
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int StatusBarWindowView_Layout_ignoreRightInset -> StatusBarWindowView_Layout_ignoreRightInset
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_thumbTint -> SwitchCompat_thumbTint
    int SwitchCompat_thumbTintMode -> SwitchCompat_thumbTintMode
    int SwitchCompat_track -> SwitchCompat_track
    int SwitchCompat_trackTint -> SwitchCompat_trackTint
    int SwitchCompat_trackTintMode -> SwitchCompat_trackTintMode
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int SwitchPreferenceCompat_android_disableDependentsState -> SwitchPreferenceCompat_android_disableDependentsState
    int SwitchPreferenceCompat_android_summaryOff -> SwitchPreferenceCompat_android_summaryOff
    int SwitchPreferenceCompat_android_summaryOn -> SwitchPreferenceCompat_android_summaryOn
    int SwitchPreferenceCompat_android_switchTextOff -> SwitchPreferenceCompat_android_switchTextOff
    int SwitchPreferenceCompat_android_switchTextOn -> SwitchPreferenceCompat_android_switchTextOn
    int SwitchPreferenceCompat_disableDependentsState -> SwitchPreferenceCompat_disableDependentsState
    int SwitchPreferenceCompat_summaryOff -> SwitchPreferenceCompat_summaryOff
    int SwitchPreferenceCompat_summaryOn -> SwitchPreferenceCompat_summaryOn
    int SwitchPreferenceCompat_switchTextOff -> SwitchPreferenceCompat_switchTextOff
    int SwitchPreferenceCompat_switchTextOn -> SwitchPreferenceCompat_switchTextOn
    int SwitchPreference_android_disableDependentsState -> SwitchPreference_android_disableDependentsState
    int SwitchPreference_android_summaryOff -> SwitchPreference_android_summaryOff
    int SwitchPreference_android_summaryOn -> SwitchPreference_android_summaryOn
    int SwitchPreference_android_switchTextOff -> SwitchPreference_android_switchTextOff
    int SwitchPreference_android_switchTextOn -> SwitchPreference_android_switchTextOn
    int SwitchPreference_disableDependentsState -> SwitchPreference_disableDependentsState
    int SwitchPreference_summaryOff -> SwitchPreference_summaryOff
    int SwitchPreference_summaryOn -> SwitchPreference_summaryOn
    int SwitchPreference_switchTextOff -> SwitchPreference_switchTextOff
    int SwitchPreference_switchTextOn -> SwitchPreference_switchTextOn
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_android_shadowColor -> TextAppearance_android_shadowColor
    int TextAppearance_android_shadowDx -> TextAppearance_android_shadowDx
    int TextAppearance_android_shadowDy -> TextAppearance_android_shadowDy
    int TextAppearance_android_shadowRadius -> TextAppearance_android_shadowRadius
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_fontFamily -> TextAppearance_fontFamily
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] ToggleSliderView -> ToggleSliderView
    int ToggleSliderView_text -> ToggleSliderView_text
    int[] TonedIcon -> TonedIcon
    int TonedIcon_backgroundColor -> TonedIcon_backgroundColor
    int TonedIcon_fillColor -> TonedIcon_fillColor
    int TonedIcon_singleToneColor -> TonedIcon_singleToneColor
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_buttonGravity -> Toolbar_buttonGravity
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetEndWithActions -> Toolbar_contentInsetEndWithActions
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_contentInsetStartWithNavigation -> Toolbar_contentInsetStartWithNavigation
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMargin -> Toolbar_titleMargin
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] TunerSwitch -> TunerSwitch
    int TunerSwitch_defValue -> TunerSwitch_defValue
    int TunerSwitch_metricsAction -> TunerSwitch_metricsAction
    int[] UserAvatarView -> UserAvatarView
    int UserAvatarView_activeFrameColor -> UserAvatarView_activeFrameColor
    int UserAvatarView_avatarPadding -> UserAvatarView_avatarPadding
    int UserAvatarView_badgeDiameter -> UserAvatarView_badgeDiameter
    int UserAvatarView_badgeMargin -> UserAvatarView_badgeMargin
    int UserAvatarView_frameColor -> UserAvatarView_frameColor
    int UserAvatarView_framePadding -> UserAvatarView_framePadding
    int UserAvatarView_frameWidth -> UserAvatarView_frameWidth
    int[] UserDetailItemView -> UserDetailItemView
    int UserDetailItemView_activatedFontFamily -> UserDetailItemView_activatedFontFamily
    int UserDetailItemView_regularFontFamily -> UserDetailItemView_regularFontFamily
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    int[] WifiEncryptionState -> WifiEncryptionState
    int WifiEncryptionState_state_encrypted -> WifiEncryptionState_state_encrypted
    int[] WifiMeteredState -> WifiMeteredState
    int WifiMeteredState_state_metered -> WifiMeteredState_state_metered
    int[] WifiSavedState -> WifiSavedState
    int WifiSavedState_state_saved -> WifiSavedState_state_saved
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int lbBaseCardView_Layout_layout_viewType -> lbBaseCardView_Layout_layout_viewType
    int lbBaseCardView_activatedAnimationDuration -> lbBaseCardView_activatedAnimationDuration
    int lbBaseCardView_cardBackground -> lbBaseCardView_cardBackground
    int lbBaseCardView_cardForeground -> lbBaseCardView_cardForeground
    int lbBaseCardView_cardType -> lbBaseCardView_cardType
    int lbBaseCardView_extraVisibility -> lbBaseCardView_extraVisibility
    int lbBaseCardView_infoVisibility -> lbBaseCardView_infoVisibility
    int lbBaseCardView_selectedAnimationDelay -> lbBaseCardView_selectedAnimationDelay
    int lbBaseCardView_selectedAnimationDuration -> lbBaseCardView_selectedAnimationDuration
    int[] lbBaseGridView -> lbBaseGridView
    int lbBaseGridView_android_gravity -> lbBaseGridView_android_gravity
    int lbBaseGridView_android_horizontalSpacing -> lbBaseGridView_android_horizontalSpacing
    int lbBaseGridView_android_verticalSpacing -> lbBaseGridView_android_verticalSpacing
    int lbBaseGridView_focusOutEnd -> lbBaseGridView_focusOutEnd
    int lbBaseGridView_focusOutFront -> lbBaseGridView_focusOutFront
    int lbBaseGridView_focusOutSideEnd -> lbBaseGridView_focusOutSideEnd
    int lbBaseGridView_focusOutSideStart -> lbBaseGridView_focusOutSideStart
    int lbBaseGridView_horizontalMargin -> lbBaseGridView_horizontalMargin
    int lbBaseGridView_verticalMargin -> lbBaseGridView_verticalMargin
    int[] lbDatePicker -> lbDatePicker
    int lbDatePicker_android_maxDate -> lbDatePicker_android_maxDate
    int lbDatePicker_android_minDate -> lbDatePicker_android_minDate
    int lbDatePicker_datePickerFormat -> lbDatePicker_datePickerFormat
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int lbHorizontalGridView_numberOfRows -> lbHorizontalGridView_numberOfRows
    int lbHorizontalGridView_rowHeight -> lbHorizontalGridView_rowHeight
    int[] lbImageCardView -> lbImageCardView
    int lbImageCardView_infoAreaBackground -> lbImageCardView_infoAreaBackground
    int lbImageCardView_lbImageCardViewType -> lbImageCardView_lbImageCardViewType
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int lbPlaybackControlsActionIcons_closed_captioning -> lbPlaybackControlsActionIcons_closed_captioning
    int lbPlaybackControlsActionIcons_fast_forward -> lbPlaybackControlsActionIcons_fast_forward
    int lbPlaybackControlsActionIcons_high_quality -> lbPlaybackControlsActionIcons_high_quality
    int lbPlaybackControlsActionIcons_pause -> lbPlaybackControlsActionIcons_pause
    int lbPlaybackControlsActionIcons_picture_in_picture -> lbPlaybackControlsActionIcons_picture_in_picture
    int lbPlaybackControlsActionIcons_play -> lbPlaybackControlsActionIcons_play
    int lbPlaybackControlsActionIcons_repeat -> lbPlaybackControlsActionIcons_repeat
    int lbPlaybackControlsActionIcons_repeat_one -> lbPlaybackControlsActionIcons_repeat_one
    int lbPlaybackControlsActionIcons_rewind -> lbPlaybackControlsActionIcons_rewind
    int lbPlaybackControlsActionIcons_shuffle -> lbPlaybackControlsActionIcons_shuffle
    int lbPlaybackControlsActionIcons_skip_next -> lbPlaybackControlsActionIcons_skip_next
    int lbPlaybackControlsActionIcons_skip_previous -> lbPlaybackControlsActionIcons_skip_previous
    int lbPlaybackControlsActionIcons_thumb_down -> lbPlaybackControlsActionIcons_thumb_down
    int lbPlaybackControlsActionIcons_thumb_down_outline -> lbPlaybackControlsActionIcons_thumb_down_outline
    int lbPlaybackControlsActionIcons_thumb_up -> lbPlaybackControlsActionIcons_thumb_up
    int lbPlaybackControlsActionIcons_thumb_up_outline -> lbPlaybackControlsActionIcons_thumb_up_outline
    int[] lbResizingTextView -> lbResizingTextView
    int lbResizingTextView_maintainLineSpacing -> lbResizingTextView_maintainLineSpacing
    int lbResizingTextView_resizeTrigger -> lbResizingTextView_resizeTrigger
    int lbResizingTextView_resizedPaddingAdjustmentBottom -> lbResizingTextView_resizedPaddingAdjustmentBottom
    int lbResizingTextView_resizedPaddingAdjustmentTop -> lbResizingTextView_resizedPaddingAdjustmentTop
    int lbResizingTextView_resizedTextSize -> lbResizingTextView_resizedTextSize
    int[] lbSearchOrbView -> lbSearchOrbView
    int lbSearchOrbView_searchOrbBrightColor -> lbSearchOrbView_searchOrbBrightColor
    int lbSearchOrbView_searchOrbColor -> lbSearchOrbView_searchOrbColor
    int lbSearchOrbView_searchOrbIcon -> lbSearchOrbView_searchOrbIcon
    int lbSearchOrbView_searchOrbIconColor -> lbSearchOrbView_searchOrbIconColor
    int[] lbSlide -> lbSlide
    int lbSlide_android_duration -> lbSlide_android_duration
    int lbSlide_android_interpolator -> lbSlide_android_interpolator
    int lbSlide_android_startDelay -> lbSlide_android_startDelay
    int lbSlide_lb_slideEdge -> lbSlide_lb_slideEdge
    int[] lbTimePicker -> lbTimePicker
    int lbTimePicker_is24HourFormat -> lbTimePicker_is24HourFormat
    int lbTimePicker_useCurrentTime -> lbTimePicker_useCurrentTime
    int[] lbVerticalGridView -> lbVerticalGridView
    int lbVerticalGridView_columnWidth -> lbVerticalGridView_columnWidth
    int lbVerticalGridView_numberOfColumns -> lbVerticalGridView_numberOfColumns
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.notification.RowInflaterTask -> com.android.systemui.statusbar.notification.RowInflaterTask:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.NotificationData$Entry mEntry -> mEntry
    com.android.systemui.statusbar.notification.RowInflaterTask$RowInflationFinishedListener mListener -> mListener
    void <init>() -> <init>
    void inflate(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.NotificationData$Entry,com.android.systemui.statusbar.notification.RowInflaterTask$RowInflationFinishedListener) -> inflate
    void abort() -> abort
    void onInflateFinished(android.view.View,int,android.view.ViewGroup) -> onInflateFinished
android.support.v17.leanback.widget.SearchOrbView -> android.support.v17.leanback.widget.SearchOrbView:
    float mFocusedZ -> mFocusedZ
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    float mUnfocusedZ -> mUnfocusedZ
    android.view.View mSearchOrbView -> mSearchOrbView
    boolean mColorAnimationEnabled -> mColorAnimationEnabled
    float mFocusedZoom -> mFocusedZoom
    android.animation.ValueAnimator$AnimatorUpdateListener mFocusUpdateListener -> mFocusUpdateListener
    android.animation.ArgbEvaluator mColorEvaluator -> mColorEvaluator
    android.animation.ValueAnimator mShadowFocusAnimator -> mShadowFocusAnimator
    int mPulseDurationMs -> mPulseDurationMs
    android.support.v17.leanback.widget.SearchOrbView$Colors mColors -> mColors
    android.view.View$OnClickListener mListener -> mListener
    boolean mAttachedToWindow -> mAttachedToWindow
    android.widget.ImageView mIcon -> mIcon
    int mScaleDurationMs -> mScaleDurationMs
    android.view.View mRootView -> mRootView
    android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener -> mUpdateListener
    android.animation.ValueAnimator mColorAnimator -> mColorAnimator
    void onAttachedToWindow() -> onAttachedToWindow
    void animateOnFocus(boolean) -> animateOnFocus
    void setOrbIcon(android.graphics.drawable.Drawable) -> setOrbIcon
    void onClick(android.view.View) -> onClick
    float getFocusedZoom() -> getFocusedZoom
    void setOrbColors(android.support.v17.leanback.widget.SearchOrbView$Colors) -> setOrbColors
    void enableOrbColorAnimation(boolean) -> enableOrbColorAnimation
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void setOrbViewColor(int) -> setOrbViewColor
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setSearchOrbZ(float) -> setSearchOrbZ
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getLayoutResourceId() -> getLayoutResourceId
    void <init>(android.content.Context) -> <init>
    void startShadowFocusAnimation(boolean,int) -> startShadowFocusAnimation
    void updateColorAnimator() -> updateColorAnimator
    void setOnOrbClickedListener(android.view.View$OnClickListener) -> setOnOrbClickedListener
    void scaleOrbViewOnly(float) -> scaleOrbViewOnly
    void onDetachedFromWindow() -> onDetachedFromWindow
android.support.v7.view.menu.BaseMenuWrapper -> android.support.v7.view.menu.BaseMenuWrapper:
    java.util.Map mMenuItems -> mMenuItems
    android.content.Context mContext -> mContext
    java.util.Map mSubMenus -> mSubMenus
    android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    void internalClear() -> internalClear
    void internalRemoveItem(int) -> internalRemoveItem
    void <init>(android.content.Context,java.lang.Object) -> <init>
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    void internalRemoveGroup(int) -> internalRemoveGroup
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$5 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$5:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(com.android.systemui.statusbar.NotificationGuts) -> $m$0
    void onHeightChanged(com.android.systemui.statusbar.NotificationGuts) -> onHeightChanged
android.support.v17.leanback.widget.ListRowHoverCardView -> android.support.v17.leanback.widget.ListRowHoverCardView:
    android.widget.TextView mDescriptionView -> mDescriptionView
    android.widget.TextView mTitleView -> mTitleView
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
com.android.settingslib.bluetooth.PanProfile -> com.android.settingslib.bluetooth.PanProfile:
    java.util.HashMap mDeviceRoleMap -> mDeviceRoleMap
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    android.bluetooth.BluetoothPan mService -> mService
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    android.bluetooth.BluetoothPan -set1(com.android.settingslib.bluetooth.PanProfile,android.bluetooth.BluetoothPan) -> -set1
    boolean -set0(com.android.settingslib.bluetooth.PanProfile,boolean) -> -set0
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    boolean isLocalRoleNap(android.bluetooth.BluetoothDevice) -> isLocalRoleNap
    void setLocalRole(android.bluetooth.BluetoothDevice,int) -> setLocalRole
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    void <init>(android.content.Context) -> <init>
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    void finalize() -> finalize
com.android.systemui.stackdivider.WindowManagerProxy$2 -> com.android.systemui.stackdivider.WindowManagerProxy$2:
    com.android.systemui.stackdivider.WindowManagerProxy this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.WindowManagerProxy) -> <init>
    void run() -> run
com.android.systemui.plugins.PluginDependency$DependencyProvider -> com.android.systemui.plugins.PluginDependency$DependencyProvider:
    void <init>() -> <init>
    java.lang.Object get(com.android.systemui.plugins.Plugin,java.lang.Class) -> get
com.android.settingslib.bluetooth.LocalBluetoothProfileManager$StateChangedHandler -> com.android.settingslib.bluetooth.LocalBluetoothProfileManager$StateChangedHandler:
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager this$0 -> this$0
    com.android.settingslib.bluetooth.LocalBluetoothProfile mProfile -> mProfile
    void <init>(com.android.settingslib.bluetooth.LocalBluetoothProfileManager,com.android.settingslib.bluetooth.LocalBluetoothProfile) -> <init>
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
com.android.settingslib.drawer.Tile$1 -> com.android.settingslib.drawer.Tile$1:
    java.lang.Object[] newArray(int) -> newArray
    com.android.settingslib.drawer.Tile[] newArray(int) -> newArray
    void <init>() -> <init>
    com.android.settingslib.drawer.Tile createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.keyboard.KeyboardUI$BluetoothErrorListener -> com.android.systemui.keyboard.KeyboardUI$BluetoothErrorListener:
    com.android.systemui.keyboard.KeyboardUI this$0 -> this$0
    void <init>(com.android.systemui.keyboard.KeyboardUI) -> <init>
    void onShowError(android.content.Context,java.lang.String,int) -> onShowError
    void <init>(com.android.systemui.keyboard.KeyboardUI,com.android.systemui.keyboard.KeyboardUI$BluetoothErrorListener) -> <init>
com.android.systemui.statusbar.policy.CallbackController -> com.android.systemui.statusbar.policy.CallbackController:
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
com.android.systemui.tuner.TunerSwitch -> com.android.systemui.tuner.TunerSwitch:
    int mAction -> mAction
    boolean mDefault -> mDefault
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttached() -> onAttached
    void onClick() -> onClick
    void onDetached() -> onDetached
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    boolean persistBoolean(boolean) -> persistBoolean
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    android.support.v4.app.Fragment fragment -> fragment
    android.os.Bundle args -> args
    java.lang.Class clss -> clss
    java.lang.String tag -> tag
com.android.systemui.qs.tiles.UserTile$1 -> com.android.systemui.qs.tiles.UserTile$1:
    com.android.systemui.qs.tiles.UserTile this$0 -> this$0
    android.util.Pair val$p -> val$p
    void <init>(com.android.systemui.qs.tiles.UserTile,android.util.Pair) -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
com.android.systemui.statusbar.KeyboardShortcuts$3 -> com.android.systemui.statusbar.KeyboardShortcuts$3:
    com.android.systemui.statusbar.KeyboardShortcuts this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyboardShortcuts) -> <init>
    void onKeyboardShortcutsReceived(java.util.List) -> onKeyboardShortcutsReceived
com.android.systemui.statusbar.policy.HeadsUpManager$Clock -> com.android.systemui.statusbar.policy.HeadsUpManager$Clock:
    void <init>() -> <init>
    long currentTimeMillis() -> currentTimeMillis
com.android.systemui.statusbar.policy.NetworkControllerImpl$6 -> com.android.systemui.statusbar.policy.NetworkControllerImpl$6:
    com.android.systemui.statusbar.policy.NetworkControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> <init>
    void run() -> run
android.support.v7.mediarouter.R$id -> android.support.v7.mediarouter.R$id:
    int mr_art -> mr_art
    int mr_chooser_list -> mr_chooser_list
    int mr_chooser_route_desc -> mr_chooser_route_desc
    int mr_chooser_route_icon -> mr_chooser_route_icon
    int mr_chooser_route_name -> mr_chooser_route_name
    int mr_chooser_title -> mr_chooser_title
    int mr_close -> mr_close
    int mr_control_divider -> mr_control_divider
    int mr_control_playback_ctrl -> mr_control_playback_ctrl
    int mr_control_subtitle -> mr_control_subtitle
    int mr_control_title -> mr_control_title
    int mr_control_title_container -> mr_control_title_container
    int mr_custom_control -> mr_custom_control
    int mr_default_control -> mr_default_control
    int mr_dialog_area -> mr_dialog_area
    int mr_expandable_area -> mr_expandable_area
    int mr_group_expand_collapse -> mr_group_expand_collapse
    int mr_media_main_control -> mr_media_main_control
    int mr_name -> mr_name
    int mr_playback_control -> mr_playback_control
    int mr_volume_control -> mr_volume_control
    int mr_volume_group_list -> mr_volume_group_list
    int mr_volume_item_icon -> mr_volume_item_icon
    int mr_volume_slider -> mr_volume_slider
    int volume_item_container -> volume_item_container
    void <init>() -> <init>
com.android.systemui.screenshot.GlobalScreenshot$5 -> com.android.systemui.screenshot.GlobalScreenshot$5:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    void run() -> run
com.android.systemui.tuner.TunerService$ClearReceiver -> com.android.systemui.tuner.TunerService$ClearReceiver:
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    int getDefaultSize2(int,int) -> getDefaultSize2
    void onMeasure(int,int) -> onMeasure
com.android.systemui.statusbar.car.CarStatusBar -> com.android.systemui.statusbar.car.CarStatusBar:
    com.android.systemui.BatteryMeterView mBatteryMeterView -> mBatteryMeterView
    com.android.systemui.statusbar.car.CarBatteryController mCarBatteryController -> mCarBatteryController
    com.android.systemui.statusbar.car.ConnectedDeviceSignalController mConnectedDeviceSignalController -> mConnectedDeviceSignalController
    com.android.systemui.statusbar.car.CarNavigationBarController mController -> mController
    com.android.systemui.statusbar.car.FullscreenUserSwitcher mFullscreenUserSwitcher -> mFullscreenUserSwitcher
    com.android.systemui.statusbar.car.CarNavigationBarView mNavigationBarView -> mNavigationBarView
    android.view.ViewGroup mNavigationBarWindow -> mNavigationBarWindow
    android.graphics.drawable.Drawable mNotificationPanelBackground -> mNotificationPanelBackground
    android.content.BroadcastReceiver mPackageChangeReceiver -> mPackageChangeReceiver
    java.lang.Object mQueueLock -> mQueueLock
    com.android.systemui.statusbar.car.CarStatusBar$TaskStackListenerImpl mTaskStackListener -> mTaskStackListener
    boolean hasDockedTask() -> hasDockedTask
    int startActivityOnStack(android.content.Intent,int) -> startActivityOnStack
    void <init>() -> <init>
    void animateExpandNotificationsPanel() -> animateExpandNotificationsPanel
    com.android.systemui.statusbar.policy.BatteryController createBatteryController() -> createBatteryController
    void createNavigationBar() -> createNavigationBar
    void createUserSwitcher() -> createUserSwitcher
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.graphics.drawable.Drawable getDefaultWallpaper() -> getDefaultWallpaper
    com.android.systemui.statusbar.phone.NavigationBarView getNavigationBarView() -> getNavigationBarView
    com.android.systemui.SwipeHelper$LongPressListener getNotificationLongClicker() -> getNotificationLongClicker
    android.view.View$OnTouchListener getStatusBarWindowTouchListener() -> getStatusBarWindowTouchListener
    void hideBatteryView() -> hideBatteryView
    void makeStatusBarView() -> makeStatusBarView
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void registerPackageChangeReceivers() -> registerPackageChangeReceivers
    boolean shouldPeek(com.android.systemui.statusbar.NotificationData$Entry,android.service.notification.StatusBarNotification) -> shouldPeek
    void showBatteryView() -> showBatteryView
    void start() -> start
    int startActivityWithOptions(android.content.Intent,android.os.Bundle) -> startActivityWithOptions
    void updateKeyguardState(boolean,boolean) -> updateKeyguardState
    void updateMediaMetaData(boolean,boolean) -> updateMediaMetaData
    void userSwitched(int) -> userSwitched
    void lambda$-com_android_systemui_statusbar_car_CarStatusBar_4367(java.lang.String,android.app.Fragment) -> lambda$-com_android_systemui_statusbar_car_CarStatusBar_4367
    com.android.systemui.statusbar.car.CarNavigationBarController -get0(com.android.systemui.statusbar.car.CarStatusBar) -> -get0
com.android.systemui.statusbar.phone.-$Lambda$mZI4GVd3kBIAS3zT_YEUG9_4rzk -> com.android.systemui.statusbar.phone.-$Lambda$mZI4GVd3kBIAS3zT_YEUG9_4rzk:
    byte $id -> $id
    com.android.systemui.statusbar.phone.-$Lambda$mZI4GVd3kBIAS3zT_YEUG9_4rzk $INST$0 -> $INST$0
    com.android.systemui.statusbar.phone.-$Lambda$mZI4GVd3kBIAS3zT_YEUG9_4rzk $INST$1 -> $INST$1
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    java.lang.Object $m$0(java.lang.Object) -> $m$0
    java.lang.Object $m$1(java.lang.Object) -> $m$1
    java.lang.Object getInterfaceFromPlugin(java.lang.Object) -> getInterfaceFromPlugin
android.support.v7.media.RegisteredMediaRouteProvider$Connection -> android.support.v7.media.RegisteredMediaRouteProvider$Connection:
    int mNextControllerId -> mNextControllerId
    android.os.Messenger mReceiveMessenger -> mReceiveMessenger
    android.support.v7.media.RegisteredMediaRouteProvider this$0 -> this$0
    android.support.v7.media.RegisteredMediaRouteProvider$ReceiveHandler mReceiveHandler -> mReceiveHandler
    int mNextRequestId -> mNextRequestId
    android.os.Messenger mServiceMessenger -> mServiceMessenger
    android.util.SparseArray mPendingCallbacks -> mPendingCallbacks
    int mPendingRegisterRequestId -> mPendingRegisterRequestId
    int mServiceVersion -> mServiceVersion
    void updateVolume(int,int) -> updateVolume
    boolean onControlRequestSucceeded(int,android.os.Bundle) -> onControlRequestSucceeded
    boolean register() -> register
    boolean onGenericFailure(int) -> onGenericFailure
    void setVolume(int,int) -> setVolume
    void <init>(android.support.v7.media.RegisteredMediaRouteProvider,android.os.Messenger) -> <init>
    void setDiscoveryRequest(android.support.v7.media.MediaRouteDiscoveryRequest) -> setDiscoveryRequest
    int createRouteController(java.lang.String,java.lang.String) -> createRouteController
    void failPendingCallbacks() -> failPendingCallbacks
    boolean onControlRequestFailed(int,java.lang.String,android.os.Bundle) -> onControlRequestFailed
    void binderDied() -> binderDied
    boolean onRegistered(int,int,android.os.Bundle) -> onRegistered
    boolean onGenericSuccess(int) -> onGenericSuccess
    boolean onDescriptorChanged(android.os.Bundle) -> onDescriptorChanged
    void unselectRoute(int,int) -> unselectRoute
    void dispose() -> dispose
    void selectRoute(int) -> selectRoute
    boolean sendRequest(int,int,int,java.lang.Object,android.os.Bundle) -> sendRequest
    void releaseRouteController(int) -> releaseRouteController
com.android.systemui.volume.VolumeDialogControllerImpl$C$10 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$10:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    boolean val$show -> val$show
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry,boolean) -> <init>
    void run() -> run
com.android.systemui.statusbar.NotificationMenuRow$1 -> com.android.systemui.statusbar.NotificationMenuRow$1:
    com.android.systemui.statusbar.NotificationMenuRow this$0 -> this$0
    float val$transX -> val$transX
    boolean val$fromLeft -> val$fromLeft
    float val$notiThreshold -> val$notiThreshold
    void <init>(com.android.systemui.statusbar.NotificationMenuRow,float,boolean,float) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.util.Assert -> com.android.systemui.util.Assert:
    void isMainThread() -> isMainThread
    void <init>() -> <init>
android.support.v7.widget.SearchView$SavedState$1 -> android.support.v7.widget.SearchView$SavedState$1:
    android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    void <init>() -> <init>
    android.support.v7.widget.SearchView$SavedState[] newArray(int) -> newArray
    android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.provider.FontRequest -> android.support.v4.provider.FontRequest:
    java.util.List mCertificates -> mCertificates
    java.lang.String mProviderAuthority -> mProviderAuthority
    java.lang.String mProviderPackage -> mProviderPackage
    java.lang.String mQuery -> mQuery
    int mCertificatesArray -> mCertificatesArray
    java.lang.String mIdentifier -> mIdentifier
    int getCertificatesArrayResId() -> getCertificatesArrayResId
    java.lang.String getIdentifier() -> getIdentifier
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    java.lang.String getProviderPackage() -> getProviderPackage
    java.lang.String toString() -> toString
    java.lang.String getQuery() -> getQuery
    java.util.List getCertificates() -> getCertificates
    java.lang.String getProviderAuthority() -> getProviderAuthority
com.android.settingslib.CustomEditTextPreference -> com.android.settingslib.CustomEditTextPreference:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.android.systemui.keyguard.KeyguardLifecyclesDispatcher -> com.android.systemui.keyguard.KeyguardLifecyclesDispatcher:
    android.os.Handler mHandler -> mHandler
    com.android.systemui.keyguard.ScreenLifecycle mScreenLifecycle -> mScreenLifecycle
    com.android.systemui.keyguard.WakefulnessLifecycle mWakefulnessLifecycle -> mWakefulnessLifecycle
    void <init>(com.android.systemui.keyguard.ScreenLifecycle,com.android.systemui.keyguard.WakefulnessLifecycle) -> <init>
    void dispatch(int) -> dispatch
    com.android.systemui.keyguard.ScreenLifecycle -get0(com.android.systemui.keyguard.KeyguardLifecyclesDispatcher) -> -get0
    com.android.systemui.keyguard.WakefulnessLifecycle -get1(com.android.systemui.keyguard.KeyguardLifecyclesDispatcher) -> -get1
com.android.systemui.assist.AssistOrbContainer$1 -> com.android.systemui.assist.AssistOrbContainer$1:
    com.android.systemui.assist.AssistOrbContainer this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistOrbContainer) -> <init>
    void run() -> run
android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer -> android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    float mBaseWidth -> mBaseWidth
    android.graphics.Matrix IDENTITY_MATRIX -> IDENTITY_MATRIX
    android.graphics.PathMeasure mPathMeasure -> mPathMeasure
    int mRootAlpha -> mRootAlpha
    android.graphics.Paint mStrokePaint -> mStrokePaint
    android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> mRootGroup
    float mBaseHeight -> mBaseHeight
    android.graphics.Path mPath -> mPath
    float mViewportHeight -> mViewportHeight
    float mViewportWidth -> mViewportWidth
    java.lang.String mRootName -> mRootName
    int mChangingConfigurations -> mChangingConfigurations
    android.graphics.Matrix mFinalPathMatrix -> mFinalPathMatrix
    android.graphics.Path mRenderPath -> mRenderPath
    android.graphics.Paint mFillPaint -> mFillPaint
    android.support.v4.util.ArrayMap mVGTargetsMap -> mVGTargetsMap
    android.graphics.Paint -set0(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint) -> -set0
    void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    int getRootAlpha() -> getRootAlpha
    android.graphics.Paint -get0(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> -get0
    void setRootAlpha(int) -> setRootAlpha
    float cross(float,float,float,float) -> cross
    void setAlpha(float) -> setAlpha
    float getAlpha() -> getAlpha
    android.graphics.Paint -get1(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> -get1
    float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    void <clinit>() -> <clinit>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    android.graphics.Paint -set1(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint) -> -set1
    void <init>() -> <init>
com.android.systemui.statusbar.phone.StatusBarWindowView$LayoutParams -> com.android.systemui.statusbar.phone.StatusBarWindowView$LayoutParams:
    boolean ignoreRightInset -> ignoreRightInset
    com.android.systemui.statusbar.phone.StatusBarWindowView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView,int,int) -> <init>
    void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView,android.content.Context,android.util.AttributeSet) -> <init>
com.android.systemui.statusbar.notification.NotificationInflater$InflationExecutor -> com.android.systemui.statusbar.notification.NotificationInflater$InflationExecutor:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int CPU_COUNT -> CPU_COUNT
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    java.util.concurrent.ThreadPoolExecutor mExecutor -> mExecutor
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    void <init>() -> <init>
    void execute(java.lang.Runnable) -> execute
    void <clinit>() -> <clinit>
    void <init>(com.android.systemui.statusbar.notification.NotificationInflater$InflationExecutor) -> <init>
com.android.systemui.statusbar.policy.DeviceProvisionedController -> com.android.systemui.statusbar.policy.DeviceProvisionedController:
    boolean isCurrentUserSetup() -> isCurrentUserSetup
    int getCurrentUser() -> getCurrentUser
    boolean isDeviceProvisioned() -> isDeviceProvisioned
    boolean isUserSetup(int) -> isUserSetup
com.android.systemui.recents.views.RecentsTransitionHelper$4 -> com.android.systemui.recents.views.RecentsTransitionHelper$4:
    com.android.systemui.recents.views.RecentsTransitionHelper this$0 -> this$0
    android.app.ActivityOptions$OnAnimationStartedListener val$listener -> val$listener
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper,android.app.ActivityOptions$OnAnimationStartedListener) -> <init>
    void sendResult(android.os.Bundle) -> sendResult
com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA$4 -> com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA$4:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(int,java.lang.Object,java.lang.Object) -> <init>
    boolean $m$0(android.view.View) -> $m$0
    boolean onLongClick(android.view.View) -> onLongClick
com.android.keyguard.KeyguardUpdateMonitorCallback -> com.android.keyguard.KeyguardUpdateMonitorCallback:
    boolean mShowing -> mShowing
    long mVisibilityChangedCalled -> mVisibilityChangedCalled
    void <init>() -> <init>
    void onFingerprintAuthenticated(int) -> onFingerprintAuthenticated
    void onFingerprintAuthFailed() -> onFingerprintAuthFailed
    void onBootCompleted() -> onBootCompleted
    void onClockVisibilityChanged() -> onClockVisibilityChanged
    void onDevicePolicyManagerStateChanged() -> onDevicePolicyManagerStateChanged
    void onDeviceProvisioned() -> onDeviceProvisioned
    void onDreamingStateChanged(boolean) -> onDreamingStateChanged
    void onEmergencyCallAction() -> onEmergencyCallAction
    void onFaceUnlockStateChanged(boolean,int) -> onFaceUnlockStateChanged
    void onFingerprintAcquired() -> onFingerprintAcquired
    void onFingerprintError(int,java.lang.String) -> onFingerprintError
    void onFingerprintHelp(int,java.lang.String) -> onFingerprintHelp
    void onFingerprintRunningStateChanged(boolean) -> onFingerprintRunningStateChanged
    void onFinishedGoingToSleep(int) -> onFinishedGoingToSleep
    void onHasLockscreenWallpaperChanged(boolean) -> onHasLockscreenWallpaperChanged
    void onKeyguardBouncerChanged(boolean) -> onKeyguardBouncerChanged
    void onKeyguardVisibilityChanged(boolean) -> onKeyguardVisibilityChanged
    void onKeyguardVisibilityChangedRaw(boolean) -> onKeyguardVisibilityChangedRaw
    void onPhoneStateChanged(int) -> onPhoneStateChanged
    void onRefreshBatteryInfo(com.android.keyguard.KeyguardUpdateMonitor$BatteryStatus) -> onRefreshBatteryInfo
    void onRefreshCarrierInfo() -> onRefreshCarrierInfo
    void onRingerModeChanged(int) -> onRingerModeChanged
    void onScreenTurnedOff() -> onScreenTurnedOff
    void onScreenTurnedOn() -> onScreenTurnedOn
    void onServiceStateChanged(int,android.telephony.ServiceState) -> onServiceStateChanged
    void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants$State) -> onSimStateChanged
    void onStartedGoingToSleep(int) -> onStartedGoingToSleep
    void onStartedWakingUp() -> onStartedWakingUp
    void onStrongAuthStateChanged(int) -> onStrongAuthStateChanged
    void onTimeChanged() -> onTimeChanged
    void onTrustChanged(int) -> onTrustChanged
    void onTrustGrantedWithFlags(int,int) -> onTrustGrantedWithFlags
    void onTrustManagedChanged(int) -> onTrustManagedChanged
    void onUserInfoChanged(int) -> onUserInfoChanged
    void onUserSwitchComplete(int) -> onUserSwitchComplete
    void onUserSwitching(int) -> onUserSwitching
    void onUserUnlocked() -> onUserUnlocked
com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer -> com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer:
    java.util.List composeSpecs() -> composeSpecs
android.support.v7.media.MediaRouter$RouteInfo$ConnectionState -> android.support.v7.media.MediaRouter$RouteInfo$ConnectionState:
android.support.v17.leanback.widget.PersistentFocusWrapper -> android.support.v17.leanback.widget.PersistentFocusWrapper:
    boolean mPersistFocusVertical -> mPersistFocusVertical
    int mSelectedPosition -> mSelectedPosition
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getGrandChildCount() -> getGrandChildCount
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean shouldPersistFocusFromDirection(int) -> shouldPersistFocusFromDirection
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.android.systemui.PluginInflateContainer -> com.android.systemui.PluginInflateContainer:
    java.lang.Class mClass -> mClass
    android.view.View mPluginView -> mPluginView
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void inflateLayoutImpl() -> inflateLayoutImpl
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPluginConnected(com.android.systemui.plugins.ViewProvider,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.ViewProvider) -> onPluginDisconnected
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    boolean onHasView() -> onHasView
    android.view.View onFindViewById(int) -> onFindViewById
    void <init>() -> <init>
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
android.support.v7.preference.SeekBarPreference$1 -> android.support.v7.preference.SeekBarPreference$1:
    android.support.v7.preference.SeekBarPreference this$0 -> this$0
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void <init>(android.support.v7.preference.SeekBarPreference) -> <init>
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
com.android.systemui.qs.QSDetailItems$Adapter -> com.android.systemui.qs.QSDetailItems$Adapter:
    com.android.systemui.qs.QSDetailItems this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetailItems) -> <init>
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void <init>(com.android.systemui.qs.QSDetailItems,com.android.systemui.qs.QSDetailItems$Adapter) -> <init>
com.android.settingslib.bluetooth.MapProfile$MapServiceListener -> com.android.settingslib.bluetooth.MapProfile$MapServiceListener:
    com.android.settingslib.bluetooth.MapProfile this$0 -> this$0
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void <init>(com.android.settingslib.bluetooth.MapProfile,com.android.settingslib.bluetooth.MapProfile$MapServiceListener) -> <init>
    void onServiceDisconnected(int) -> onServiceDisconnected
    void <init>(com.android.settingslib.bluetooth.MapProfile) -> <init>
android.support.v7.media.MediaRouterJellybeanMr1 -> android.support.v7.media.MediaRouterJellybeanMr1:
    void <init>() -> <init>
    java.lang.Object createCallback(android.support.v7.media.MediaRouterJellybeanMr1$Callback) -> createCallback
android.support.v7.view.menu.MenuAdapter -> android.support.v7.view.menu.MenuAdapter:
    boolean mForceShowIcon -> mForceShowIcon
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.view.menu.MenuBuilder mAdapterMenu -> mAdapterMenu
    boolean mOverflowOnly -> mOverflowOnly
    int ITEM_LAYOUT -> ITEM_LAYOUT
    int mExpandedIndex -> mExpandedIndex
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    void <init>(android.support.v7.view.menu.MenuBuilder,android.view.LayoutInflater,boolean) -> <init>
    android.support.v7.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    int getCount() -> getCount
    void notifyDataSetChanged() -> notifyDataSetChanged
    void findExpandedIndex() -> findExpandedIndex
    void <clinit>() -> <clinit>
    void setForceShowIcon(boolean) -> setForceShowIcon
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$5 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$5:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    boolean onPreDraw() -> onPreDraw
com.android.systemui.statusbar.KeyguardAffordanceView$8 -> com.android.systemui.statusbar.KeyguardAffordanceView$8:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.keyguard.KeyguardUpdateMonitor$5 -> com.android.keyguard.KeyguardUpdateMonitor$5:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.view.ContextThemeWrapper -> android.support.v7.view.ContextThemeWrapper:
    android.view.LayoutInflater mInflater -> mInflater
    android.content.res.Configuration mOverrideConfiguration -> mOverrideConfiguration
    android.content.res.Resources$Theme mTheme -> mTheme
    android.content.res.Resources mResources -> mResources
    int mThemeResource -> mThemeResource
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void setTheme(int) -> setTheme
    android.content.res.AssetManager getAssets() -> getAssets
    void attachBaseContext(android.content.Context) -> attachBaseContext
    void <init>(android.content.Context,int) -> <init>
    int getThemeResId() -> getThemeResId
    android.content.res.Resources$Theme getTheme() -> getTheme
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    android.content.res.Resources getResources() -> getResources
    void <init>() -> <init>
    android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    void initializeTheme() -> initializeTheme
com.android.systemui.usb.UsbResolverActivity -> com.android.systemui.usb.UsbResolverActivity:
    android.hardware.usb.UsbAccessory mAccessory -> mAccessory
    android.hardware.usb.UsbDevice mDevice -> mDevice
    com.android.systemui.usb.UsbDisconnectedReceiver mDisconnectedReceiver -> mDisconnectedReceiver
    android.content.pm.ResolveInfo mForwardResolveInfo -> mForwardResolveInfo
    android.content.Intent mOtherProfileIntent -> mOtherProfileIntent
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onTargetSelected(com.android.internal.app.ResolverActivity$TargetInfo,boolean) -> onTargetSelected
com.android.systemui.qs.QSFragment$1 -> com.android.systemui.qs.QSFragment$1:
    com.android.systemui.qs.QSFragment this$0 -> this$0
    void <init>(com.android.systemui.qs.QSFragment) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v14.preference.PreferenceFragment -> android.support.v14.preference.PreferenceFragment:
    java.lang.Runnable mRequestFocus -> mRequestFocus
    java.lang.Runnable mSelectPreferenceRunnable -> mSelectPreferenceRunnable
    android.support.v14.preference.PreferenceFragment$DividerDecoration mDividerDecoration -> mDividerDecoration
    android.os.Handler mHandler -> mHandler
    int mLayoutResId -> mLayoutResId
    android.content.Context mStyledContext -> mStyledContext
    android.support.v7.preference.PreferenceManager mPreferenceManager -> mPreferenceManager
    boolean mInitDone -> mInitDone
    boolean mHavePrefs -> mHavePrefs
    android.support.v7.widget.RecyclerView mList -> mList
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    android.support.v7.widget.RecyclerView$LayoutManager onCreateLayoutManager() -> onCreateLayoutManager
    void onStart() -> onStart
    void onBindPreferences() -> onBindPreferences
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onNavigateToScreen(android.support.v7.preference.PreferenceScreen) -> onNavigateToScreen
    void setDividerHeight(int) -> setDividerHeight
    void addPreferencesFromResource(int) -> addPreferencesFromResource
    android.support.v7.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateRecyclerView
    android.app.Fragment getCallbackFragment() -> getCallbackFragment
    android.support.v7.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    void setPreferenceScreen(android.support.v7.preference.PreferenceScreen) -> setPreferenceScreen
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onDisplayPreferenceDialog(android.support.v7.preference.Preference) -> onDisplayPreferenceDialog
    boolean onPreferenceTreeClick(android.support.v7.preference.Preference) -> onPreferenceTreeClick
    void -wrap0(android.support.v14.preference.PreferenceFragment) -> -wrap0
    android.support.v7.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    void onUnbindPreferences() -> onUnbindPreferences
    android.support.v7.widget.RecyclerView$Adapter onCreateAdapter(android.support.v7.preference.PreferenceScreen) -> onCreateAdapter
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.support.v7.widget.RecyclerView getListView() -> getListView
    android.support.v7.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    void unbindPreferences() -> unbindPreferences
    android.support.v7.widget.RecyclerView -get0(android.support.v14.preference.PreferenceFragment) -> -get0
    void bindPreferences() -> bindPreferences
    void postBindPreferences() -> postBindPreferences
    void requirePreferenceManager() -> requirePreferenceManager
    void <init>() -> <init>
    void onDestroyView() -> onDestroyView
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
com.android.systemui.statusbar.policy.-$Lambda$JpQ9MKA7q61I6v8lllDNANTFsT4 -> com.android.systemui.statusbar.policy.-$Lambda$JpQ9MKA7q61I6v8lllDNANTFsT4:
    boolean -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(boolean,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.statusbar.car.-$Lambda$FZ4mtee2vnK98nAu2Wi9_aZl9Po$2 -> com.android.systemui.statusbar.car.-$Lambda$FZ4mtee2vnK98nAu2Wi9_aZl9Po$2:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> $m$0
    void onUserSelected(com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> onUserSelected
com.android.keyguard.EmergencyCarrierArea$1 -> com.android.keyguard.EmergencyCarrierArea$1:
    com.android.keyguard.EmergencyCarrierArea this$0 -> this$0
    void <init>(com.android.keyguard.EmergencyCarrierArea) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.qs.QSContainerImpl -> com.android.systemui.qs.QSContainerImpl:
    float mFullElevation -> mFullElevation
    android.view.View mHeader -> mHeader
    int mHeightOverride -> mHeightOverride
    com.android.systemui.qs.customize.QSCustomizer mQSCustomizer -> mQSCustomizer
    android.view.View mQSDetail -> mQSDetail
    android.view.View mQSFooter -> mQSFooter
    android.view.View mQSPanel -> mQSPanel
    float mQsExpansion -> mQsExpansion
    android.graphics.Point mSizePoint -> mSizePoint
    void setExpansion(float) -> setExpansion
    void updateExpansion() -> updateExpansion
    void setHeightOverride(int) -> setHeightOverride
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int calculateContainerHeight() -> calculateContainerHeight
    void onFinishInflate() -> onFinishInflate
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean performClick() -> performClick
com.android.systemui.util.-$Lambda$ciFdFM7iEa_W52MJO7CjiSPHfOo$2 -> com.android.systemui.util.-$Lambda$ciFdFM7iEa_W52MJO7CjiSPHfOo$2:
    int -$f0 -> -$f0
    int -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    java.lang.Object -$f5 -> -$f5
    void <init>(int,int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.assist.AssistDisclosure$AssistDisclosureView$1 -> com.android.systemui.assist.AssistDisclosure$AssistDisclosureView$1:
    boolean mCancelled -> mCancelled
    com.android.systemui.assist.AssistDisclosure$AssistDisclosureView this$1 -> this$1
    void <init>(com.android.systemui.assist.AssistDisclosure$AssistDisclosureView) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    int mContainerId -> mContainerId
    java.util.ArrayList mTabs -> mTabs
    void onAttachedToWindow() -> onAttachedToWindow
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void setup() -> setup
    void onTabChanged(java.lang.String) -> onTabChanged
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.support.v4.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> getTabInfoForTag
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper$1 -> com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper$1:
    com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper this$0 -> this$0
    void <init>(com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper,int) -> <init>
    android.view.animation.Interpolator getCustomInterpolator(int,boolean) -> getCustomInterpolator
    boolean hasCustomTransformation() -> hasCustomTransformation
android.support.v7.media.MediaRouteDescriptor -> android.support.v7.media.MediaRouteDescriptor:
    android.os.Bundle mBundle -> mBundle
    java.util.List mControlFilters -> mControlFilters
    android.net.Uri getIconUri() -> getIconUri
    boolean isConnecting() -> isConnecting
    android.os.Bundle asBundle() -> asBundle
    boolean canDisconnectAndKeepPlaying() -> canDisconnectAndKeepPlaying
    int getPresentationDisplayId() -> getPresentationDisplayId
    int getVolume() -> getVolume
    java.lang.String getId() -> getId
    java.util.List getGroupMemberIds() -> getGroupMemberIds
    boolean isEnabled() -> isEnabled
    int getConnectionState() -> getConnectionState
    java.lang.String getDescription() -> getDescription
    int getVolumeHandling() -> getVolumeHandling
    java.util.List getControlFilters() -> getControlFilters
    int getMaxClientVersion() -> getMaxClientVersion
    android.os.Bundle getExtras() -> getExtras
    android.content.IntentSender getSettingsActivity() -> getSettingsActivity
    int getMinClientVersion() -> getMinClientVersion
    void <init>(android.os.Bundle,java.util.List) -> <init>
    int getPlaybackStream() -> getPlaybackStream
    java.lang.String getName() -> getName
    int getDeviceType() -> getDeviceType
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    int getPlaybackType() -> getPlaybackType
    android.support.v7.media.MediaRouteDescriptor fromBundle(android.os.Bundle) -> fromBundle
    int getVolumeMax() -> getVolumeMax
    void ensureControlFilters() -> ensureControlFilters
com.android.systemui.ImageWallpaper$DrawableEngine$1 -> com.android.systemui.ImageWallpaper$DrawableEngine$1:
    com.android.systemui.ImageWallpaper$DrawableEngine this$1 -> this$1
    boolean val$needsReset -> val$needsReset
    void <init>(com.android.systemui.ImageWallpaper$DrawableEngine,boolean) -> <init>
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.android.systemui.statusbar.NotificationHeaderUtil$DataExtractor -> com.android.systemui.statusbar.NotificationHeaderUtil$DataExtractor:
    java.lang.Object extractData(com.android.systemui.statusbar.ExpandableNotificationRow) -> extractData
android.support.v7.view.SupportActionModeWrapper -> android.support.v7.view.SupportActionModeWrapper:
    android.support.v7.view.ActionMode mWrappedObject -> mWrappedObject
    android.content.Context mContext -> mContext
    void setCustomView(android.view.View) -> setCustomView
    void setTag(java.lang.Object) -> setTag
    void setSubtitle(int) -> setSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    android.view.Menu getMenu() -> getMenu
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void invalidate() -> invalidate
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setTitle(int) -> setTitle
    void finish() -> finish
    java.lang.Object getTag() -> getTag
    void <init>(android.content.Context,android.support.v7.view.ActionMode) -> <init>
com.android.systemui.recents.views.RecentsView$4 -> com.android.systemui.recents.views.RecentsView$4:
    com.android.systemui.recents.views.RecentsView this$0 -> this$0
    void <init>(com.android.systemui.recents.views.RecentsView) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.ZenModeControllerImpl$1 -> com.android.systemui.statusbar.policy.ZenModeControllerImpl$1:
    com.android.systemui.statusbar.policy.ZenModeControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.ZenModeControllerImpl) -> <init>
    void onConditionsReceived(android.service.notification.Condition[]) -> onConditionsReceived
com.android.systemui.globalactions.GlobalActionsDialog$2 -> com.android.systemui.globalactions.GlobalActionsDialog$2:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
com.android.keyguard.PasswordTextView$CharState -> com.android.keyguard.PasswordTextView$CharState:
    float currentDotSizeFactor -> currentDotSizeFactor
    float currentTextSizeFactor -> currentTextSizeFactor
    float currentTextTranslationY -> currentTextTranslationY
    float currentWidthFactor -> currentWidthFactor
    boolean dotAnimationIsGrowing -> dotAnimationIsGrowing
    android.animation.Animator dotAnimator -> dotAnimator
    android.animation.Animator$AnimatorListener dotFinishListener -> dotFinishListener
    android.animation.ValueAnimator$AnimatorUpdateListener dotSizeUpdater -> dotSizeUpdater
    java.lang.Runnable dotSwapperRunnable -> dotSwapperRunnable
    boolean isDotSwapPending -> isDotSwapPending
    android.animation.Animator$AnimatorListener removeEndListener -> removeEndListener
    boolean textAnimationIsGrowing -> textAnimationIsGrowing
    android.animation.ValueAnimator textAnimator -> textAnimator
    android.animation.Animator$AnimatorListener textFinishListener -> textFinishListener
    android.animation.ValueAnimator$AnimatorUpdateListener textSizeUpdater -> textSizeUpdater
    android.animation.ValueAnimator textTranslateAnimator -> textTranslateAnimator
    android.animation.Animator$AnimatorListener textTranslateFinishListener -> textTranslateFinishListener
    android.animation.ValueAnimator$AnimatorUpdateListener textTranslationUpdater -> textTranslationUpdater
    char whichChar -> whichChar
    boolean widthAnimationIsGrowing -> widthAnimationIsGrowing
    android.animation.ValueAnimator widthAnimator -> widthAnimator
    android.animation.Animator$AnimatorListener widthFinishListener -> widthFinishListener
    android.animation.ValueAnimator$AnimatorUpdateListener widthUpdater -> widthUpdater
    com.android.keyguard.PasswordTextView this$0 -> this$0
    void <init>(com.android.keyguard.PasswordTextView) -> <init>
    void cancelAnimator(android.animation.Animator) -> cancelAnimator
    float draw(android.graphics.Canvas,float,int,float,float) -> draw
    void performSwap() -> performSwap
    void postDotSwap(long) -> postDotSwap
    void removeDotSwapCallbacks() -> removeDotSwapCallbacks
    void reset() -> reset
    void startAppearAnimation() -> startAppearAnimation
    void startDotAppearAnimation(long) -> startDotAppearAnimation
    void startDotDisappearAnimation(long) -> startDotDisappearAnimation
    void startRemoveAnimation(long,long) -> startRemoveAnimation
    void startTextAppearAnimation() -> startTextAppearAnimation
    void startTextDisappearAnimation(long) -> startTextDisappearAnimation
    void startWidthAppearAnimation() -> startWidthAppearAnimation
    void startWidthDisappearAnimation(long) -> startWidthDisappearAnimation
    void swapToDotWhenAppearFinished() -> swapToDotWhenAppearFinished
    void -wrap0(com.android.keyguard.PasswordTextView$CharState,android.animation.Animator) -> -wrap0
    void -wrap1(com.android.keyguard.PasswordTextView$CharState) -> -wrap1
    void -wrap2(com.android.keyguard.PasswordTextView$CharState) -> -wrap2
    void <init>(com.android.keyguard.PasswordTextView,com.android.keyguard.PasswordTextView$CharState) -> <init>
com.android.systemui.net.NetworkOverLimitActivity -> com.android.systemui.net.NetworkOverLimitActivity:
    void <init>() -> <init>
    int getLimitedDialogTitleForTemplate(android.net.NetworkTemplate) -> getLimitedDialogTitleForTemplate
    void onCreate(android.os.Bundle) -> onCreate
    void snoozePolicy(android.net.NetworkTemplate) -> snoozePolicy
    void -wrap0(com.android.systemui.net.NetworkOverLimitActivity,android.net.NetworkTemplate) -> -wrap0
com.android.systemui.volume.VolumeDialogImpl -> com.android.systemui.volume.VolumeDialogImpl:
    java.lang.String TAG -> TAG
    com.android.systemui.volume.VolumeDialogImpl$Accessibility mAccessibility -> mAccessibility
    android.view.accessibility.AccessibilityManager mAccessibilityMgr -> mAccessibilityMgr
    android.content.res.ColorStateList mActiveSliderTint -> mActiveSliderTint
    int mActiveStream -> mActiveStream
    android.media.AudioManager mAudioManager -> mAudioManager
    boolean mAutomute -> mAutomute
    com.android.systemui.plugins.VolumeDialog$Callback mCallback -> mCallback
    android.view.View$OnClickListener mClickExpand -> mClickExpand
    long mCollapseTime -> mCollapseTime
    com.android.systemui.volume.ConfigurableTexts mConfigurableTexts -> mConfigurableTexts
    android.content.Context mContext -> mContext
    com.android.systemui.plugins.VolumeDialogController mController -> mController
    com.android.systemui.plugins.VolumeDialogController$Callbacks mControllerCallbackH -> mControllerCallbackH
    int mDensity -> mDensity
    com.android.systemui.volume.VolumeDialogImpl$CustomDialog mDialog -> mDialog
    android.view.ViewGroup mDialogContentView -> mDialogContentView
    android.view.ViewGroup mDialogRowsView -> mDialogRowsView
    android.view.ViewGroup mDialogView -> mDialogView
    android.util.SparseBooleanArray mDynamic -> mDynamic
    android.widget.ImageButton mExpandButton -> mExpandButton
    int mExpandButtonAnimationDuration -> mExpandButtonAnimationDuration
    boolean mExpandButtonAnimationRunning -> mExpandButtonAnimationRunning
    boolean mExpanded -> mExpanded
    com.android.systemui.volume.VolumeDialogImpl$H mHandler -> mHandler
    boolean mHovering -> mHovering
    android.content.res.ColorStateList mInactiveSliderTint -> mInactiveSliderTint
    android.app.KeyguardManager mKeyguard -> mKeyguard
    com.android.systemui.volume.VolumeDialogMotion mMotion -> mMotion
    boolean mPendingRecheckAll -> mPendingRecheckAll
    boolean mPendingStateChanged -> mPendingStateChanged
    int mPrevActiveStream -> mPrevActiveStream
    java.util.List mRows -> mRows
    com.android.systemui.volume.SafetyWarningDialog mSafetyWarning -> mSafetyWarning
    java.lang.Object mSafetyWarningLock -> mSafetyWarningLock
    boolean mShowA11yStream -> mShowA11yStream
    boolean mShowFullZen -> mShowFullZen
    boolean mShowing -> mShowing
    boolean mSilentMode -> mSilentMode
    com.android.systemui.plugins.VolumeDialogController$State mState -> mState
    android.view.Window mWindow -> mWindow
    int mWindowType -> mWindowType
    com.android.systemui.volume.ZenFooter mZenFooter -> mZenFooter
    com.android.systemui.statusbar.policy.ZenModeController mZenModeController -> mZenModeController
    com.android.systemui.tuner.TunerZenModePanel mZenPanel -> mZenPanel
    com.android.systemui.volume.ZenModePanel$Callback mZenPanelCallback -> mZenPanelCallback
    void <init>(android.content.Context) -> <init>
    void setStreamImportant(int,boolean) -> setStreamImportant
    void setAutomute(boolean) -> setAutomute
    void setSilentMode(boolean) -> setSilentMode
    void addExistingRows() -> addExistingRows
    void addRow(int,int,int,boolean) -> addRow
    void addRow(int,int,int,boolean,boolean) -> addRow
    int computeTimeoutH() -> computeTimeoutH
    void destroy() -> destroy
    void dismissH(int) -> dismissH
    com.android.systemui.volume.VolumeDialogImpl$VolumeRow findRow(int) -> findRow
    com.android.systemui.volume.VolumeDialogImpl$VolumeRow getActiveRow() -> getActiveRow
    long getConservativeCollapseDuration() -> getConservativeCollapseDuration
    int getImpliedLevel(android.widget.SeekBar,int) -> getImpliedLevel
    java.lang.String getStreamLabelH(com.android.systemui.plugins.VolumeDialogController$StreamState) -> getStreamLabelH
    android.transition.AutoTransition getTransition() -> getTransition
    boolean hasTouchFeature() -> hasTouchFeature
    void init(int,com.android.systemui.plugins.VolumeDialog$Callback) -> init
    void initDialog() -> initDialog
    void initRow(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int,int,int,boolean) -> initRow
    boolean isAttached() -> isAttached
    android.content.res.ColorStateList loadColorStateList(int) -> loadColorStateList
    void onStateChangedH(com.android.systemui.plugins.VolumeDialogController$State) -> onStateChangedH
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void prepareForCollapse() -> prepareForCollapse
    void recheckH(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> recheckH
    void rescheduleTimeoutH() -> rescheduleTimeoutH
    void setStreamImportantH(int,boolean) -> setStreamImportantH
    boolean shouldBeVisibleH(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> shouldBeVisibleH
    void showH(int) -> showH
    void showSafetyWarningH(int) -> showSafetyWarningH
    void trimObsoleteH() -> trimObsoleteH
    void updateDialogBottomMarginH() -> updateDialogBottomMarginH
    void updateExpandButtonH() -> updateExpandButtonH
    void updateExpandedH(boolean,boolean) -> updateExpandedH
    void updateFooterH() -> updateFooterH
    void updateRowsH(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> updateRowsH
    void updateVolumeRowH(com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> updateVolumeRowH
    void updateVolumeRowSliderH(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,boolean,int) -> updateVolumeRowSliderH
    void updateVolumeRowSliderTintH(com.android.systemui.volume.VolumeDialogImpl$VolumeRow,boolean) -> updateVolumeRowSliderTintH
    void updateWindowWidthH() -> updateWindowWidthH
    void <clinit>() -> <clinit>
    java.lang.String -get0() -> -get0
    android.view.accessibility.AccessibilityManager -get1(com.android.systemui.volume.VolumeDialogImpl) -> -get1
    com.android.systemui.plugins.VolumeDialog$Callback -get2(com.android.systemui.volume.VolumeDialogImpl) -> -get2
    com.android.systemui.volume.ConfigurableTexts -get3(com.android.systemui.volume.VolumeDialogImpl) -> -get3
    android.content.Context -get4(com.android.systemui.volume.VolumeDialogImpl) -> -get4
    com.android.systemui.plugins.VolumeDialogController -get5(com.android.systemui.volume.VolumeDialogImpl) -> -get5
    int -get6(com.android.systemui.volume.VolumeDialogImpl) -> -get6
    com.android.systemui.volume.VolumeDialogImpl$CustomDialog -get7(com.android.systemui.volume.VolumeDialogImpl) -> -get7
    android.view.ViewGroup -get8(com.android.systemui.volume.VolumeDialogImpl) -> -get8
    boolean -get9(com.android.systemui.volume.VolumeDialogImpl) -> -get9
    boolean -get10(com.android.systemui.volume.VolumeDialogImpl) -> -get10
    com.android.systemui.volume.VolumeDialogImpl$H -get11(com.android.systemui.volume.VolumeDialogImpl) -> -get11
    com.android.systemui.volume.VolumeDialogMotion -get12(com.android.systemui.volume.VolumeDialogImpl) -> -get12
    boolean -get13(com.android.systemui.volume.VolumeDialogImpl) -> -get13
    boolean -get14(com.android.systemui.volume.VolumeDialogImpl) -> -get14
    java.lang.Object -get15(com.android.systemui.volume.VolumeDialogImpl) -> -get15
    boolean -get16(com.android.systemui.volume.VolumeDialogImpl) -> -get16
    boolean -get17(com.android.systemui.volume.VolumeDialogImpl) -> -get17
    boolean -get18(com.android.systemui.volume.VolumeDialogImpl) -> -get18
    com.android.systemui.plugins.VolumeDialogController$State -get19(com.android.systemui.volume.VolumeDialogImpl) -> -get19
    android.view.Window -get20(com.android.systemui.volume.VolumeDialogImpl) -> -get20
    com.android.systemui.volume.ZenFooter -get21(com.android.systemui.volume.VolumeDialogImpl) -> -get21
    int -set0(com.android.systemui.volume.VolumeDialogImpl,int) -> -set0
    boolean -set1(com.android.systemui.volume.VolumeDialogImpl,boolean) -> -set1
    boolean -set2(com.android.systemui.volume.VolumeDialogImpl,boolean) -> -set2
    boolean -set3(com.android.systemui.volume.VolumeDialogImpl,boolean) -> -set3
    boolean -set4(com.android.systemui.volume.VolumeDialogImpl,boolean) -> -set4
    com.android.systemui.volume.SafetyWarningDialog -set5(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.volume.SafetyWarningDialog) -> -set5
    boolean -set6(com.android.systemui.volume.VolumeDialogImpl,boolean) -> -set6
    com.android.systemui.volume.VolumeDialogImpl$VolumeRow -wrap0(com.android.systemui.volume.VolumeDialogImpl) -> -wrap0
    int -wrap1(android.widget.SeekBar,int) -> -wrap1
    java.lang.String -wrap2(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.plugins.VolumeDialogController$StreamState) -> -wrap2
    void -wrap3(com.android.systemui.volume.VolumeDialogImpl) -> -wrap3
    void -wrap4(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.plugins.VolumeDialogController$State) -> -wrap4
    void -wrap5(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -wrap5
    void -wrap6(com.android.systemui.volume.VolumeDialogImpl,int,boolean) -> -wrap6
    void -wrap7(com.android.systemui.volume.VolumeDialogImpl,int) -> -wrap7
    void -wrap8(com.android.systemui.volume.VolumeDialogImpl,int) -> -wrap8
    void -wrap9(com.android.systemui.volume.VolumeDialogImpl) -> -wrap9
    void -wrap10(com.android.systemui.volume.VolumeDialogImpl) -> -wrap10
    void -wrap11(com.android.systemui.volume.VolumeDialogImpl,boolean,boolean) -> -wrap11
    void -wrap12(com.android.systemui.volume.VolumeDialogImpl) -> -wrap12
    void -wrap13(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> -wrap13
    void -wrap14(com.android.systemui.volume.VolumeDialogImpl) -> -wrap14
android.support.v7.widget.FitWindowsLinearLayout -> android.support.v7.widget.FitWindowsLinearLayout:
    android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> mListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void <init>(android.content.Context) -> <init>
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
com.android.systemui.recents.views.ViewPool$ViewPoolConsumer -> com.android.systemui.recents.views.ViewPool$ViewPoolConsumer:
    java.lang.Object createView(android.content.Context) -> createView
    boolean hasPreferredData(java.lang.Object,java.lang.Object) -> hasPreferredData
    void onPickUpViewFromPool(java.lang.Object,java.lang.Object,boolean) -> onPickUpViewFromPool
    void onReturnViewToPool(java.lang.Object) -> onReturnViewToPool
com.android.systemui.pip.tv.PipControlsView$3 -> com.android.systemui.pip.tv.PipControlsView$3:
    com.android.systemui.pip.tv.PipControlsView this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipControlsView) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v4.view.AsyncLayoutInflater$BasicInflater -> android.support.v4.view.AsyncLayoutInflater$BasicInflater:
    java.lang.String[] sClassPrefixList -> sClassPrefixList
    void <clinit>() -> <clinit>
    void <init>(android.content.Context) -> <init>
    android.view.View onCreateView(java.lang.String,android.util.AttributeSet) -> onCreateView
    android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture -> com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture:
    com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer composer -> composer
    android.view.IAppTransitionAnimationSpecsFuture future -> future
    com.android.systemui.recents.views.RecentsTransitionHelper this$0 -> this$0
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper,com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer,android.view.IAppTransitionAnimationSpecsFuture) -> <init>
    android.view.IAppTransitionAnimationSpecsFuture getFuture() -> getFuture
    void precacheSpecs() -> precacheSpecs
    android.view.IAppTransitionAnimationSpecsFuture -get0(com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture) -> -get0
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper,com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer,android.view.IAppTransitionAnimationSpecsFuture,com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture) -> <init>
android.support.v4.provider.SelfDestructiveThread$2$1 -> android.support.v4.provider.SelfDestructiveThread$2$1:
    android.support.v4.provider.SelfDestructiveThread$ReplyCallback val$reply -> val$reply
    java.lang.Object val$result -> val$result
    android.support.v4.provider.SelfDestructiveThread$2 this$1 -> this$1
    void <init>(android.support.v4.provider.SelfDestructiveThread$2,android.support.v4.provider.SelfDestructiveThread$ReplyCallback,java.lang.Object) -> <init>
    void run() -> run
android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant -> android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant:
    java.util.Locale locale -> locale
    java.lang.String[] hours12 -> hours12
    java.lang.String[] hours24 -> hours24
    java.lang.String[] minutes -> minutes
    java.lang.String[] ampm -> ampm
    void <init>(java.util.Locale,android.content.res.Resources,android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant) -> <init>
    void <init>(java.util.Locale,android.content.res.Resources) -> <init>
com.android.settingslib.drawer.SettingsDrawerActivity$CategoryListener -> com.android.settingslib.drawer.SettingsDrawerActivity$CategoryListener:
    void onCategoriesChanged() -> onCategoriesChanged
android.support.v7.media.MediaRouter$GlobalMediaRouter$CallbackHandler -> android.support.v7.media.MediaRouter$GlobalMediaRouter$CallbackHandler:
    android.support.v7.media.MediaRouter$GlobalMediaRouter this$1 -> this$1
    java.util.ArrayList mTempCallbackRecords -> mTempCallbackRecords
    void <init>(android.support.v7.media.MediaRouter$GlobalMediaRouter) -> <init>
    void post(int,java.lang.Object,int) -> post
    void syncWithSystemProvider(int,java.lang.Object) -> syncWithSystemProvider
    void post(int,java.lang.Object) -> post
    void handleMessage(android.os.Message) -> handleMessage
    void invokeCallback(android.support.v7.media.MediaRouter$CallbackRecord,int,java.lang.Object,int) -> invokeCallback
com.android.systemui.recents.views.TaskStackView -> com.android.systemui.recents.views.TaskStackView:
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm mLayoutAlgorithm -> mLayoutAlgorithm
    com.android.systemui.recents.views.TaskStackAnimationHelper mAnimationHelper -> mAnimationHelper
    java.util.ArrayList mCurrentTaskTransforms -> mCurrentTaskTransforms
    com.android.systemui.recents.views.AnimationProps mDeferredTaskViewLayoutAnimation -> mDeferredTaskViewLayoutAnimation
    int mDisplayOrientation -> mDisplayOrientation
    android.graphics.Rect mDisplayRect -> mDisplayRect
    int mDividerSize -> mDividerSize
    boolean mEnterAnimationComplete -> mEnterAnimationComplete
    float mFastFlingVelocity -> mFastFlingVelocity
    boolean mFinishedLayoutAfterStackReload -> mFinishedLayoutAfterStackReload
    com.android.systemui.recents.model.Task mFocusedTask -> mFocusedTask
    android.graphics.drawable.GradientDrawable mFreeformWorkspaceBackground -> mFreeformWorkspaceBackground
    android.animation.ObjectAnimator mFreeformWorkspaceBackgroundAnimator -> mFreeformWorkspaceBackgroundAnimator
    com.android.systemui.recents.views.DropTarget mFreeformWorkspaceDropTarget -> mFreeformWorkspaceDropTarget
    android.util.ArraySet mIgnoreTasks -> mIgnoreTasks
    boolean mInMeasureLayout -> mInMeasureLayout
    android.view.LayoutInflater mInflater -> mInflater
    int mInitialState -> mInitialState
    int mLastHeight -> mLastHeight
    int mLastWidth -> mLastWidth
    boolean mLaunchNextAfterFirstMeasure -> mLaunchNextAfterFirstMeasure
    com.android.systemui.recents.model.Task mPrefetchingTask -> mPrefetchingTask
    android.animation.ValueAnimator$AnimatorUpdateListener mRequestUpdateClippingListener -> mRequestUpdateClippingListener
    boolean mResetToInitialStateWhenResized -> mResetToInitialStateWhenResized
    boolean mScreenPinningEnabled -> mScreenPinningEnabled
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm mStableLayoutAlgorithm -> mStableLayoutAlgorithm
    android.graphics.Rect mStableStackBounds -> mStableStackBounds
    android.graphics.Rect mStableWindowRect -> mStableWindowRect
    com.android.systemui.recents.model.TaskStack mStack -> mStack
    boolean mStackActionButtonVisible -> mStackActionButtonVisible
    android.graphics.Rect mStackBounds -> mStackBounds
    com.android.systemui.recents.views.DropTarget mStackDropTarget -> mStackDropTarget
    boolean mStackReloaded -> mStackReloaded
    com.android.systemui.recents.views.TaskStackViewScroller mStackScroller -> mStackScroller
    int mStartTimerIndicatorDuration -> mStartTimerIndicatorDuration
    int mTaskCornerRadiusPx -> mTaskCornerRadiusPx
    com.android.systemui.recents.views.grid.TaskViewFocusFrame mTaskViewFocusFrame -> mTaskViewFocusFrame
    java.util.ArrayList mTaskViews -> mTaskViews
    boolean mTaskViewsClipDirty -> mTaskViewsClipDirty
    int[] mTmpIntPair -> mTmpIntPair
    android.graphics.Rect mTmpRect -> mTmpRect
    android.util.ArrayMap mTmpTaskViewMap -> mTmpTaskViewMap
    java.util.List mTmpTaskViews -> mTmpTaskViews
    com.android.systemui.recents.views.TaskViewTransform mTmpTransform -> mTmpTransform
    boolean mTouchExplorationEnabled -> mTouchExplorationEnabled
    com.android.systemui.recents.views.TaskStackViewTouchHandler mTouchHandler -> mTouchHandler
    com.android.systemui.recents.misc.DozeTrigger mUIDozeTrigger -> mUIDozeTrigger
    com.android.systemui.recents.views.ViewPool mViewPool -> mViewPool
    android.graphics.Rect mWindowRect -> mWindowRect
    int[] -com-android-systemui-recents-events-ui-focus-NavigateTaskViewEvent$DirectionSwitchesValues -> -com-android-systemui-recents-events-ui-focus-NavigateTaskViewEvent$DirectionSwitchesValues
    void cancelAllTaskViewAnimations() -> cancelAllTaskViewAnimations
    com.android.systemui.recents.views.TaskView getChildViewForTask(com.android.systemui.recents.model.Task) -> getChildViewForTask
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm getStackAlgorithm() -> getStackAlgorithm
    com.android.systemui.recents.model.TaskStack getStack() -> getStack
    void <init>(android.content.Context) -> <init>
    void reloadOnConfigurationChange() -> reloadOnConfigurationChange
    boolean useGridLayout() -> useGridLayout
    void setTasks(com.android.systemui.recents.model.TaskStack,boolean) -> setTasks
    com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm getGridAlgorithm() -> getGridAlgorithm
    com.android.systemui.recents.views.TaskStackViewScroller getScroller() -> getScroller
    void updateLayoutAlgorithm(boolean) -> updateLayoutAlgorithm
    void updateToInitialState() -> updateToInitialState
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$VisibilityReport computeStackVisibilityReport() -> computeStackVisibilityReport
    void setSystemInsets(android.graphics.Rect) -> setSystemInsets
    void onReload(boolean) -> onReload
    com.android.systemui.recents.model.Task getFocusedTask() -> getFocusedTask
    java.util.List getTaskViews() -> getTaskViews
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    void addIgnoreTask(com.android.systemui.recents.model.Task) -> addIgnoreTask
    void animateFreeformWorkspaceBackgroundAlpha(int,com.android.systemui.recents.views.AnimationProps) -> animateFreeformWorkspaceBackgroundAlpha
    void bindTaskView(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task) -> bindTaskView
    void bindVisibleTaskViews(float) -> bindVisibleTaskViews
    void bindVisibleTaskViews(float,boolean) -> bindVisibleTaskViews
    void cancelDeferredTaskViewLayoutAnimation() -> cancelDeferredTaskViewLayoutAnimation
    void clearPrefetchingTask() -> clearPrefetchingTask
    void clipTaskViews() -> clipTaskViews
    void computeScroll() -> computeScroll
    int[] computeVisibleTaskTransforms(java.util.ArrayList,java.util.ArrayList,float,float,android.util.ArraySet,boolean) -> computeVisibleTaskTransforms
    com.android.systemui.recents.views.TaskView createView(android.content.Context) -> createView
    com.android.systemui.recents.model.Task findAnchorTask(java.util.List,android.util.MutableBoolean) -> findAnchorTask
    int findTaskViewInsertIndex(com.android.systemui.recents.model.Task,int) -> findTaskViewInsertIndex
    java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    com.android.systemui.recents.model.Task getAccessibilityFocusedTask() -> getAccessibilityFocusedTask
    void getCurrentTaskTransforms(java.util.ArrayList,java.util.ArrayList) -> getCurrentTaskTransforms
    com.android.systemui.recents.views.TaskView getFrontMostTaskView(boolean) -> getFrontMostTaskView
    void getLayoutTaskTransforms(float,int,java.util.ArrayList,boolean,java.util.ArrayList) -> getLayoutTaskTransforms
    com.android.systemui.recents.views.TaskStackViewTouchHandler getTouchHandler() -> getTouchHandler
    boolean hasPreferredData(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task) -> hasPreferredData
    boolean isIgnoredTask(com.android.systemui.recents.model.Task) -> isIgnoredTask
    boolean isTouchPointInView(float,float,com.android.systemui.recents.views.TaskView) -> isTouchPointInView
    boolean launchFreeformTasks() -> launchFreeformTasks
    void launchTask(com.android.systemui.recents.model.Task) -> launchTask
    void layoutTaskView(boolean,com.android.systemui.recents.views.TaskView) -> layoutTaskView
    void measureTaskView(com.android.systemui.recents.views.TaskView) -> measureTaskView
    void onAttachedToWindow() -> onAttachedToWindow
    void onBusEvent(com.android.systemui.recents.events.activity.PackagesChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.LaunchMostRecentTaskRequestEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.ShowStackActionButtonEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.HideStackActionButtonEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.LaunchNextTaskRequestEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskStartedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.focus.DismissFocusedTaskViewEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.DismissTaskViewEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.TaskViewDismissedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.focus.FocusNextTaskViewEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.focus.FocusPreviousTaskViewEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.UserInteractionEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartInitializeDropTargetsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.IterateRecentsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.UpdateFreeformTaskViewVisibilityEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.RecentsGrowingEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.component.ActivityPinnedEvent) -> onBusEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onFirstLayout() -> onFirstLayout
    void onFocusStateChanged(int,int) -> onFocusStateChanged
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onPickUpViewFromPool(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task,boolean) -> onPickUpViewFromPool
    void onReturnViewToPool(com.android.systemui.recents.views.TaskView) -> onReturnViewToPool
    void onStackScrollChanged(float,float,com.android.systemui.recents.views.AnimationProps) -> onStackScrollChanged
    void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task) -> onStackTaskAdded
    void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.AnimationProps,boolean,boolean) -> onStackTaskRemoved
    void onStackTasksRemoved(com.android.systemui.recents.model.TaskStack) -> onStackTasksRemoved
    void onStackTasksUpdated(com.android.systemui.recents.model.TaskStack) -> onStackTasksUpdated
    void onTaskViewClipStateChanged(com.android.systemui.recents.views.TaskView) -> onTaskViewClipStateChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    void readSystemFlags() -> readSystemFlags
    void relayoutTaskViews(com.android.systemui.recents.views.AnimationProps) -> relayoutTaskViews
    void relayoutTaskViews(com.android.systemui.recents.views.AnimationProps,android.util.ArrayMap,boolean) -> relayoutTaskViews
    void relayoutTaskViewsOnNextFrame(com.android.systemui.recents.views.AnimationProps) -> relayoutTaskViewsOnNextFrame
    void removeIgnoreTask(com.android.systemui.recents.model.Task) -> removeIgnoreTask
    void resetFocusedTask(com.android.systemui.recents.model.Task) -> resetFocusedTask
    boolean setFocusedTask(int,boolean,boolean) -> setFocusedTask
    boolean setFocusedTask(int,boolean,boolean,int) -> setFocusedTask
    void setRelativeFocusedTask(boolean,boolean,boolean) -> setRelativeFocusedTask
    void setRelativeFocusedTask(boolean,boolean,boolean,boolean,int) -> setRelativeFocusedTask
    void tryStartEnterAnimation() -> tryStartEnterAnimation
    void unbindTaskView(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task) -> unbindTaskView
    void updateLayoutAlgorithm(boolean,com.android.systemui.recents.RecentsActivityLaunchState) -> updateLayoutAlgorithm
    void updateLayoutToStableBounds() -> updateLayoutToStableBounds
    void updatePrefetchingTask(java.util.ArrayList,int,int) -> updatePrefetchingTask
    void updateStackActionButtonVisibility() -> updateStackActionButtonVisibility
    void updateTaskViewToTransform(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.AnimationProps) -> updateTaskViewToTransform
    void updateTaskViewsList() -> updateTaskViewsList
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void lambda$-com_android_systemui_recents_views_TaskStackView_79022(com.android.systemui.recents.model.Task) -> lambda$-com_android_systemui_recents_views_TaskStackView_79022
    void lambda$-com_android_systemui_recents_views_TaskStackView_93118() -> lambda$-com_android_systemui_recents_views_TaskStackView_93118
    java.lang.Object createView(android.content.Context) -> createView
    void onPickUpViewFromPool(java.lang.Object,java.lang.Object,boolean) -> onPickUpViewFromPool
    void onReturnViewToPool(java.lang.Object) -> onReturnViewToPool
    boolean hasPreferredData(java.lang.Object,java.lang.Object) -> hasPreferredData
    com.android.systemui.recents.views.TaskStackAnimationHelper -get0(com.android.systemui.recents.views.TaskStackView) -> -get0
    com.android.systemui.recents.model.TaskStack -get1(com.android.systemui.recents.views.TaskStackView) -> -get1
    com.android.systemui.recents.views.grid.TaskViewFocusFrame -get2(com.android.systemui.recents.views.TaskStackView) -> -get2
    boolean -get3(com.android.systemui.recents.views.TaskStackView) -> -get3
    boolean -set0(com.android.systemui.recents.views.TaskStackView,boolean) -> -set0
    int[] -getcom-android-systemui-recents-events-ui-focus-NavigateTaskViewEvent$DirectionSwitchesValues() -> -getcom-android-systemui-recents-events-ui-focus-NavigateTaskViewEvent$DirectionSwitchesValues
com.android.systemui.statusbar.policy.RotationLockControllerImpl$1 -> com.android.systemui.statusbar.policy.RotationLockControllerImpl$1:
    com.android.systemui.statusbar.policy.RotationLockControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.RotationLockControllerImpl) -> <init>
    void onChange() -> onChange
android.support.v4.util.ObjectsCompat -> android.support.v4.util.ObjectsCompat:
    void <init>() -> <init>
    boolean equals(java.lang.Object,java.lang.Object) -> equals
android.support.v7.app.AlertDialog$Builder -> android.support.v7.app.AlertDialog$Builder:
    int mTheme -> mTheme
    android.support.v7.app.AlertController$AlertParams P -> P
    android.support.v7.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    void <init>(android.content.Context,int) -> <init>
    android.support.v7.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    android.support.v7.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.content.Context getContext() -> getContext
    android.support.v7.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    android.support.v7.app.AlertDialog create() -> create
    android.support.v7.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    void <init>(android.content.Context) -> <init>
com.android.systemui.statusbar.policy.FlashlightController -> com.android.systemui.statusbar.policy.FlashlightController:
    boolean hasFlashlight() -> hasFlashlight
    boolean isAvailable() -> isAvailable
    boolean isEnabled() -> isEnabled
    void setFlashlight(boolean) -> setFlashlight
com.android.systemui.statusbar.policy.ExtensionControllerImpl$Producer -> com.android.systemui.statusbar.policy.ExtensionControllerImpl$Producer:
    void destroy() -> destroy
    java.lang.Object get() -> get
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int lockModeEnd -> lockModeEnd
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int lockModeStart -> lockModeStart
    int openDrawerGravity -> openDrawerGravity
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
android.support.v17.leanback.transition.TranslationAnimationCreator -> android.support.v17.leanback.transition.TranslationAnimationCreator:
    void <init>() -> <init>
    android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition) -> createAnimation
com.android.systemui.qs.tiles.UserTile -> com.android.systemui.qs.tiles.UserTile:
    android.util.Pair mLastUpdate -> mLastUpdate
    com.android.systemui.statusbar.policy.UserInfoController mUserInfoController -> mUserInfoController
    com.android.systemui.statusbar.policy.UserSwitcherController mUserSwitcherController -> mUserSwitcherController
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter() -> getDetailAdapter
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> onUserInfoChanged
com.android.systemui.plugins.R$color -> com.android.systemui.plugins.R$color:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_btn_colored_borderless_text_material -> abc_btn_colored_borderless_text_material
    int abc_btn_colored_text_material -> abc_btn_colored_text_material
    int abc_color_highlight_material -> abc_color_highlight_material
    int abc_hint_foreground_material_dark -> abc_hint_foreground_material_dark
    int abc_hint_foreground_material_light -> abc_hint_foreground_material_light
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int abc_tint_btn_checkable -> abc_tint_btn_checkable
    int abc_tint_default -> abc_tint_default
    int abc_tint_edittext -> abc_tint_edittext
    int abc_tint_seek_thumb -> abc_tint_seek_thumb
    int abc_tint_spinner -> abc_tint_spinner
    int abc_tint_switch_track -> abc_tint_switch_track
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int assist_orb_color -> assist_orb_color
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int background_protect_secondary -> background_protect_secondary
    int background_protected -> background_protected
    int batterymeter_bolt_color -> batterymeter_bolt_color
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int car_grey_50 -> car_grey_50
    int car_grey_900 -> car_grey_900
    int car_qs_background_primary -> car_qs_background_primary
    int car_qs_footer_user_name_color -> car_qs_footer_user_name_color
    int car_start_driving_background -> car_start_driving_background
    int car_start_driving_text -> car_start_driving_text
    int car_user_switcher_no_user_image_bgcolor -> car_user_switcher_no_user_image_bgcolor
    int car_user_switcher_no_user_image_fgcolor -> car_user_switcher_no_user_image_fgcolor
    int car_user_switcher_progress_bgcolor -> car_user_switcher_progress_bgcolor
    int car_user_switcher_progress_fgcolor -> car_user_switcher_progress_fgcolor
    int dark_mode_icon_color_dual_tone_background -> dark_mode_icon_color_dual_tone_background
    int dark_mode_icon_color_dual_tone_fill -> dark_mode_icon_color_dual_tone_fill
    int dark_mode_icon_color_single_tone -> dark_mode_icon_color_single_tone
    int data_usage_graph_track -> data_usage_graph_track
    int data_usage_graph_warning -> data_usage_graph_warning
    int default_remote_input_background -> default_remote_input_background
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int disabled_text_color -> disabled_text_color
    int docked_divider_background -> docked_divider_background
    int docked_divider_handle -> docked_divider_handle
    int error_color_material -> error_color_material
    int fake_shadow_end_color -> fake_shadow_end_color
    int fake_shadow_start_color -> fake_shadow_start_color
    int foreground_material_dark -> foreground_material_dark
    int foreground_material_light -> foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int instant_apps_color -> instant_apps_color
    int keyguard_affordance -> keyguard_affordance
    int keyguard_overflow_content_color -> keyguard_overflow_content_color
    int keyguard_user_switcher_background_gradient_color -> keyguard_user_switcher_background_gradient_color
    int ksh_application_group_color -> ksh_application_group_color
    int ksh_key_item_background -> ksh_key_item_background
    int ksh_key_item_color -> ksh_key_item_color
    int ksh_keyword_color -> ksh_keyword_color
    int lb_action_text_color -> lb_action_text_color
    int lb_background_protection -> lb_background_protection
    int lb_basic_card_bg_color -> lb_basic_card_bg_color
    int lb_basic_card_content_text_color -> lb_basic_card_content_text_color
    int lb_basic_card_info_bg_color -> lb_basic_card_info_bg_color
    int lb_basic_card_title_text_color -> lb_basic_card_title_text_color
    int lb_browse_header_color -> lb_browse_header_color
    int lb_browse_header_description_color -> lb_browse_header_description_color
    int lb_browse_title_color -> lb_browse_title_color
    int lb_control_button_color -> lb_control_button_color
    int lb_control_button_text -> lb_control_button_text
    int lb_default_brand_color -> lb_default_brand_color
    int lb_default_brand_color_dark -> lb_default_brand_color_dark
    int lb_default_search_color -> lb_default_search_color
    int lb_default_search_icon_color -> lb_default_search_icon_color
    int lb_details_description_body_color -> lb_details_description_body_color
    int lb_details_description_color -> lb_details_description_color
    int lb_details_overview_bg_color -> lb_details_overview_bg_color
    int lb_error_background_color_opaque -> lb_error_background_color_opaque
    int lb_error_background_color_translucent -> lb_error_background_color_translucent
    int lb_error_message -> lb_error_message
    int lb_grey -> lb_grey
    int lb_guidedactions_background -> lb_guidedactions_background
    int lb_guidedactions_background_dark -> lb_guidedactions_background_dark
    int lb_guidedactions_item_unselected_text_color -> lb_guidedactions_item_unselected_text_color
    int lb_list_item_unselected_text_color -> lb_list_item_unselected_text_color
    int lb_media_background_color -> lb_media_background_color
    int lb_page_indicator_arrow_background -> lb_page_indicator_arrow_background
    int lb_page_indicator_arrow_shadow -> lb_page_indicator_arrow_shadow
    int lb_page_indicator_dot -> lb_page_indicator_dot
    int lb_playback_background_progress_color -> lb_playback_background_progress_color
    int lb_playback_controls_background_dark -> lb_playback_controls_background_dark
    int lb_playback_controls_background_light -> lb_playback_controls_background_light
    int lb_playback_controls_time_text_color -> lb_playback_controls_time_text_color
    int lb_playback_icon_highlight_no_theme -> lb_playback_icon_highlight_no_theme
    int lb_playback_media_row_highlight_color -> lb_playback_media_row_highlight_color
    int lb_playback_media_row_separator_highlight_color -> lb_playback_media_row_separator_highlight_color
    int lb_playback_now_playing_bar_color -> lb_playback_now_playing_bar_color
    int lb_playback_progress_color_no_theme -> lb_playback_progress_color_no_theme
    int lb_playback_secondary_progress_color -> lb_playback_secondary_progress_color
    int lb_search_bar_hint -> lb_search_bar_hint
    int lb_search_bar_hint_speech_mode -> lb_search_bar_hint_speech_mode
    int lb_search_bar_text -> lb_search_bar_text
    int lb_search_bar_text_speech_mode -> lb_search_bar_text_speech_mode
    int lb_search_plate_hint_text_color -> lb_search_plate_hint_text_color
    int lb_speech_orb_not_recording -> lb_speech_orb_not_recording
    int lb_speech_orb_not_recording_icon -> lb_speech_orb_not_recording_icon
    int lb_speech_orb_not_recording_pulsed -> lb_speech_orb_not_recording_pulsed
    int lb_speech_orb_recording -> lb_speech_orb_recording
    int lb_tv_white -> lb_tv_white
    int lb_view_dim_mask_color -> lb_view_dim_mask_color
    int light_mode_icon_color_dual_tone_background -> light_mode_icon_color_dual_tone_background
    int light_mode_icon_color_dual_tone_fill -> light_mode_icon_color_dual_tone_fill
    int light_mode_icon_color_single_tone -> light_mode_icon_color_single_tone
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int material_grey_100 -> material_grey_100
    int material_grey_300 -> material_grey_300
    int material_grey_50 -> material_grey_50
    int material_grey_600 -> material_grey_600
    int material_grey_800 -> material_grey_800
    int material_grey_850 -> material_grey_850
    int material_grey_900 -> material_grey_900
    int meter_background_color -> meter_background_color
    int meter_consumed_color -> meter_consumed_color
    int minimize_dock_shadow_end -> minimize_dock_shadow_end
    int minimize_dock_shadow_start -> minimize_dock_shadow_start
    int navigation_bar_icon_color -> navigation_bar_icon_color
    int notification_divider_color -> notification_divider_color
    int notification_gear_color -> notification_gear_color
    int notification_guts_bg_color -> notification_guts_bg_color
    int notification_guts_buttons -> notification_guts_buttons
    int notification_legacy_background_color -> notification_legacy_background_color
    int notification_list_shadow_top -> notification_list_shadow_top
    int notification_material_background_color -> notification_material_background_color
    int notification_material_background_dark_color -> notification_material_background_dark_color
    int notification_material_background_dimmed_color -> notification_material_background_dimmed_color
    int notification_material_background_low_priority_color -> notification_material_background_low_priority_color
    int notification_panel_solid_background -> notification_panel_solid_background
    int notification_ripple_color_low_priority -> notification_ripple_color_low_priority
    int notification_ripple_tinted_color -> notification_ripple_tinted_color
    int notification_ripple_untinted_color -> notification_ripple_untinted_color
    int notification_shade_background_color -> notification_shade_background_color
    int pin_delete_color -> pin_delete_color
    int pin_divider_color -> pin_divider_color
    int preference_fallback_accent_color -> preference_fallback_accent_color
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int qs_background_dark -> qs_background_dark
    int qs_batterymeter_frame_color -> qs_batterymeter_frame_color
    int qs_detail_button -> qs_detail_button
    int qs_detail_button_white -> qs_detail_button_white
    int qs_detail_progress_track -> qs_detail_progress_track
    int qs_detail_transition -> qs_detail_transition
    int qs_subhead -> qs_subhead
    int qs_tile_disabled_color -> qs_tile_disabled_color
    int qs_tile_divider -> qs_tile_divider
    int qs_user_detail_avatar_frame -> qs_user_detail_avatar_frame
    int qs_user_detail_avatar_tint -> qs_user_detail_avatar_tint
    int qs_user_detail_icon_muted -> qs_user_detail_icon_muted
    int qs_user_detail_name -> qs_user_detail_name
    int recents_clear_all_button_bg_dark_color -> recents_clear_all_button_bg_dark_color
    int recents_clear_all_button_bg_light_color -> recents_clear_all_button_bg_light_color
    int recents_freeform_workspace_bg_color -> recents_freeform_workspace_bg_color
    int recents_task_bar_dark_icon_color -> recents_task_bar_dark_icon_color
    int recents_task_bar_dark_text_color -> recents_task_bar_dark_text_color
    int recents_task_bar_default_background_color -> recents_task_bar_default_background_color
    int recents_task_bar_disabled_background_color -> recents_task_bar_disabled_background_color
    int recents_task_bar_light_icon_color -> recents_task_bar_light_icon_color
    int recents_task_bar_light_text_color -> recents_task_bar_light_text_color
    int recents_task_view_default_background_color -> recents_task_view_default_background_color
    int recents_task_view_lock_to_app_button_background_color -> recents_task_view_lock_to_app_button_background_color
    int recents_task_view_lock_to_app_button_color -> recents_task_view_lock_to_app_button_color
    int recents_tv_card_background_color -> recents_tv_card_background_color
    int recents_tv_card_title_text_color -> recents_tv_card_title_text_color
    int recents_tv_dismiss_text_color -> recents_tv_dismiss_text_color
    int recents_tv_text_shadow_color -> recents_tv_text_shadow_color
    int remote_input_accent -> remote_input_accent
    int remote_input_hint -> remote_input_hint
    int remote_input_send -> remote_input_send
    int remote_input_text -> remote_input_text
    int remote_input_text_enabled -> remote_input_text_enabled
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int screen_pinning_nav_icon_highlight_outer -> screen_pinning_nav_icon_highlight_outer
    int screen_pinning_primary_text -> screen_pinning_primary_text
    int screen_pinning_request_window_bg -> screen_pinning_request_window_bg
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int segmented_button_text_selector -> segmented_button_text_selector
    int segmented_buttons_background -> segmented_buttons_background
    int status_bar_clock_color -> status_bar_clock_color
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
    int system_bar_background_opaque -> system_bar_background_opaque
    int system_bar_background_transparent -> system_bar_background_transparent
    int tint_color_selector -> tint_color_selector
    int tooltip_background_dark -> tooltip_background_dark
    int tooltip_background_light -> tooltip_background_light
    int transparent -> transparent
    int usage_graph_dots -> usage_graph_dots
    int volume_settings_icon_color -> volume_settings_icon_color
    int volume_slider_inactive -> volume_slider_inactive
    int zen_introduction -> zen_introduction
    void <init>() -> <init>
android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi19Impl -> android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi19Impl:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ListViewCompat -> android.support.v4.widget.ListViewCompat:
    boolean canScrollList(android.widget.ListView,int) -> canScrollList
    void <init>() -> <init>
    void scrollListBy(android.widget.ListView,int) -> scrollListBy
com.android.systemui.qs.tiles.WifiTile -> com.android.systemui.qs.tiles.WifiTile:
    android.content.Intent WIFI_SETTINGS -> WIFI_SETTINGS
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    com.android.systemui.statusbar.policy.NetworkController mController -> mController
    com.android.systemui.qs.tiles.WifiTile$WifiDetailAdapter mDetailAdapter -> mDetailAdapter
    com.android.systemui.qs.tiles.WifiTile$WifiSignalCallback mSignalCallback -> mSignalCallback
    com.android.systemui.plugins.qs.QSTile$SignalState mStateBeforeClick -> mStateBeforeClick
    com.android.systemui.statusbar.policy.NetworkController$AccessPointController mWifiController -> mWifiController
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    com.android.systemui.plugins.qs.DetailAdapter createDetailAdapter() -> createDetailAdapter
    com.android.systemui.plugins.qs.QSIconView createTileView(android.content.Context) -> createTileView
    com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter() -> getDetailAdapter
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSecondaryClick() -> handleSecondaryClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$SignalState,java.lang.Object) -> handleUpdateState
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$SignalState newTileState() -> newTileState
    java.lang.String removeDoubleQuotes(java.lang.String) -> removeDoubleQuotes
    void setDetailListening(boolean) -> setDetailListening
    boolean shouldAnnouncementBeDelayed() -> shouldAnnouncementBeDelayed
    void <clinit>() -> <clinit>
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    boolean -get0() -> -get0
    java.lang.String -get1(com.android.systemui.qs.tiles.WifiTile) -> -get1
    android.content.Intent -get2() -> -get2
    com.android.systemui.plugins.ActivityStarter -get3(com.android.systemui.qs.tiles.WifiTile) -> -get3
    android.content.Context -get4(com.android.systemui.qs.tiles.WifiTile) -> -get4
    com.android.systemui.qs.tiles.WifiTile$WifiDetailAdapter -get5(com.android.systemui.qs.tiles.WifiTile) -> -get5
    com.android.systemui.qs.QSHost -get6(com.android.systemui.qs.tiles.WifiTile) -> -get6
    com.android.systemui.plugins.qs.QSTile$State -get7(com.android.systemui.qs.tiles.WifiTile) -> -get7
    com.android.systemui.statusbar.policy.NetworkController$AccessPointController -get8(com.android.systemui.qs.tiles.WifiTile) -> -get8
    boolean -wrap0(com.android.systemui.qs.tiles.WifiTile) -> -wrap0
    void -wrap1(com.android.systemui.qs.tiles.WifiTile,java.lang.Object) -> -wrap1
android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23 -> android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23:
    android.support.v4.media.MediaBrowserCompat$ItemCallback this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserCompat$ItemCallback) -> <init>
    void onItemLoaded(android.os.Parcel) -> onItemLoaded
    void onError(java.lang.String) -> onError
com.android.systemui.statusbar.stack.StackStateAnimator$1 -> com.android.systemui.statusbar.stack.StackStateAnimator$1:
    com.android.systemui.statusbar.stack.StackStateAnimator this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.StackStateAnimator) -> <init>
    com.android.systemui.statusbar.stack.AnimationFilter getAnimationFilter() -> getAnimationFilter
    android.animation.AnimatorListenerAdapter getAnimationFinishListener() -> getAnimationFinishListener
    android.view.animation.Interpolator getCustomInterpolator(android.view.View,android.util.Property) -> getCustomInterpolator
    boolean wasAdded(android.view.View) -> wasAdded
android.support.v7.view.ViewPropertyAnimatorCompatSet -> android.support.v7.view.ViewPropertyAnimatorCompatSet:
    boolean mIsStarted -> mIsStarted
    android.support.v4.view.ViewPropertyAnimatorListener mListener -> mListener
    android.support.v4.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> mProxyListener
    java.util.ArrayList mAnimators -> mAnimators
    long mDuration -> mDuration
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    android.support.v7.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.support.v7.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat) -> play
    android.support.v7.view.ViewPropertyAnimatorCompatSet playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat) -> playSequentially
    void start() -> start
    android.support.v7.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    android.support.v7.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void cancel() -> cancel
    void <init>() -> <init>
    void onAnimationsEnded() -> onAnimationsEnded
com.android.systemui.statusbar.notification.NotificationViewWrapper -> com.android.systemui.statusbar.notification.NotificationViewWrapper:
    android.view.View mView -> mView
    boolean mDark -> mDark
    boolean mDarkInitialized -> mDarkInitialized
    boolean mShouldInvertDark -> mShouldInvertDark
    com.android.systemui.statusbar.ExpandableNotificationRow mRow -> mRow
    int mBackgroundColor -> mBackgroundColor
    com.android.systemui.statusbar.notification.NotificationDozeHelper mDozer -> mDozer
    com.android.systemui.statusbar.notification.NotificationViewWrapper wrap(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> wrap
    void onContentUpdated(com.android.systemui.statusbar.ExpandableNotificationRow) -> onContentUpdated
    void transformFrom(com.android.systemui.statusbar.TransformableView) -> transformFrom
    void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable) -> transformTo
    void setVisible(boolean) -> setVisible
    void transformFrom(com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    void transformTo(com.android.systemui.statusbar.TransformableView,float) -> transformTo
    void setDark(boolean,boolean,long) -> setDark
    android.view.NotificationHeaderView getNotificationHeader() -> getNotificationHeader
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    com.android.systemui.statusbar.notification.NotificationDozeHelper getDozer() -> getDozer
    int getCustomBackgroundColor() -> getCustomBackgroundColor
    void setLegacy(boolean) -> setLegacy
    boolean disallowSingleClick(float,float) -> disallowSingleClick
    void setContentHeight(int,int) -> setContentHeight
    void setIsChildInGroup(boolean) -> setIsChildInGroup
    com.android.systemui.statusbar.notification.NotificationDozeHelper createDozer(android.content.Context) -> createDozer
    com.android.systemui.statusbar.notification.TransformState getCurrentState(int) -> getCurrentState
    boolean isColorLight(int) -> isColorLight
    boolean isDimmable() -> isDimmable
    void onReinflated() -> onReinflated
    void setRemoteInputVisible(boolean) -> setRemoteInputVisible
    boolean shouldClearBackgroundOnReapply() -> shouldClearBackgroundOnReapply
    void updateExpandability(boolean,android.view.View$OnClickListener) -> updateExpandability
com.android.systemui.keyguard.-$Lambda$-f994CCMz_70U6Oz06JHEMP788Q$1 -> com.android.systemui.keyguard.-$Lambda$-f994CCMz_70U6Oz06JHEMP788Q$1:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(int,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.plugins.qs.QSTile$AirplaneBooleanState -> com.android.systemui.plugins.qs.QSTile$AirplaneBooleanState:
    int VERSION -> VERSION
    boolean isAirplaneMode -> isAirplaneMode
    com.android.systemui.plugins.qs.QSTile$State copy() -> copy
    void <init>() -> <init>
    boolean copyTo(com.android.systemui.plugins.qs.QSTile$State) -> copyTo
com.android.systemui.pip.phone.-$Lambda$DtUkKn4xIMuq8TSa5smVIdc6GkM$1 -> com.android.systemui.pip.phone.-$Lambda$DtUkKn4xIMuq8TSa5smVIdc6GkM$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0(android.view.MotionEvent) -> $m$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.qs.tiles.BatterySaverTile$BatterySaverDrawable -> com.android.systemui.qs.tiles.BatterySaverTile$BatterySaverDrawable:
    int mState -> mState
    void <init>(android.content.Context,int) -> <init>
    int batteryColorForLevel(int) -> batteryColorForLevel
    void setBatteryLevel(int) -> setBatteryLevel
    int -set0(com.android.systemui.qs.tiles.BatterySaverTile$BatterySaverDrawable,int) -> -set0
com.android.systemui.pip.phone.PipMenuActivityController$1 -> com.android.systemui.pip.phone.PipMenuActivityController$1:
    com.android.systemui.pip.phone.PipMenuActivityController this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMenuActivityController) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void lambda$-com_android_systemui_pip_phone_PipMenuActivityController$1_5494(com.android.systemui.pip.phone.PipMenuActivityController$Listener) -> lambda$-com_android_systemui_pip_phone_PipMenuActivityController$1_5494
    void lambda$-com_android_systemui_pip_phone_PipMenuActivityController$1_5646(com.android.systemui.pip.phone.PipMenuActivityController$Listener) -> lambda$-com_android_systemui_pip_phone_PipMenuActivityController$1_5646
    void lambda$-com_android_systemui_pip_phone_PipMenuActivityController$1_5799(com.android.systemui.pip.phone.PipMenuActivityController$Listener) -> lambda$-com_android_systemui_pip_phone_PipMenuActivityController$1_5799
    void lambda$-com_android_systemui_pip_phone_PipMenuActivityController$1_5949(com.android.systemui.pip.phone.PipMenuActivityController$Listener) -> lambda$-com_android_systemui_pip_phone_PipMenuActivityController$1_5949
android.support.v7.widget.AppCompatCompoundButtonHelper -> android.support.v7.widget.AppCompatCompoundButtonHelper:
    android.graphics.PorterDuff$Mode mButtonTintMode -> mButtonTintMode
    boolean mSkipNextApply -> mSkipNextApply
    android.content.res.ColorStateList mButtonTintList -> mButtonTintList
    boolean mHasButtonTint -> mHasButtonTint
    android.widget.CompoundButton mView -> mView
    boolean mHasButtonTintMode -> mHasButtonTintMode
    void <init>(android.widget.CompoundButton) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    void applyButtonTint() -> applyButtonTint
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    void onSetButtonDrawable() -> onSetButtonDrawable
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
com.android.systemui.statusbar.policy.KeyguardMonitorImpl$1 -> com.android.systemui.statusbar.policy.KeyguardMonitorImpl$1:
    com.android.systemui.statusbar.policy.KeyguardMonitorImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.KeyguardMonitorImpl,android.content.Context) -> <init>
    void onUserSwitched(int) -> onUserSwitched
com.android.systemui.statusbar.policy.KeyguardUserSwitcher$4 -> com.android.systemui.statusbar.policy.KeyguardUserSwitcher$4:
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> <init>
    void run() -> run
com.android.systemui.plugins.qs.QSIconView -> com.android.systemui.plugins.qs.QSIconView:
    int VERSION -> VERSION
    void setIcon(com.android.systemui.plugins.qs.QSTile$State) -> setIcon
    android.view.View getIconView() -> getIconView
    void disableAnimation() -> disableAnimation
    void <init>(android.content.Context) -> <init>
android.support.v7.media.MediaRouterApi24$RouteInfo -> android.support.v7.media.MediaRouterApi24$RouteInfo:
    void <init>() -> <init>
    int getDeviceType(java.lang.Object) -> getDeviceType
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
com.android.systemui.recents.views.TaskStackViewTouchHandler$1 -> com.android.systemui.recents.views.TaskStackViewTouchHandler$1:
    com.android.systemui.recents.views.TaskStackViewTouchHandler this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskStackViewTouchHandler,int,com.android.systemui.SwipeHelper$Callback,android.content.Context) -> <init>
    long getMaxEscapeAnimDuration() -> getMaxEscapeAnimDuration
    float getSize(android.view.View) -> getSize
    float getUnscaledEscapeVelocity() -> getUnscaledEscapeVelocity
    void prepareDismissAnimation(android.view.View,android.animation.Animator) -> prepareDismissAnimation
    void prepareSnapBackAnimation(android.view.View,android.animation.Animator) -> prepareSnapBackAnimation
com.android.systemui.tuner.TunablePadding$TunablePaddingService -> com.android.systemui.tuner.TunablePadding$TunablePaddingService:
    void <init>() -> <init>
    com.android.systemui.tuner.TunablePadding add(android.view.View,java.lang.String,int,int) -> add
com.android.settingslib.wifi.WifiTracker$1 -> com.android.settingslib.wifi.WifiTracker$1:
    com.android.settingslib.wifi.WifiTracker this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(com.android.settingslib.wifi.WifiTracker) -> <init>
com.android.systemui.pip.tv.-$Lambda$JQDRGc8obeL_Mc3RL89dKRiDWno -> com.android.systemui.pip.tv.-$Lambda$JQDRGc8obeL_Mc3RL89dKRiDWno:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.media.MediaRouter -> android.support.v7.media.MediaRouter:
    android.content.Context mContext -> mContext
    android.support.v7.media.MediaRouter$GlobalMediaRouter sGlobal -> sGlobal
    java.util.ArrayList mCallbackRecords -> mCallbackRecords
    boolean DEBUG -> DEBUG
    android.support.v7.media.MediaRouter getInstance(android.content.Context) -> getInstance
    void removeCallback(android.support.v7.media.MediaRouter$Callback) -> removeCallback
    void <init>(android.content.Context,android.support.v7.media.MediaRouter) -> <init>
    java.util.List getRoutes() -> getRoutes
    void unselect(int) -> unselect
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void <init>(android.content.Context) -> <init>
    void <clinit>() -> <clinit>
    void addCallback(android.support.v7.media.MediaRouteSelector,android.support.v7.media.MediaRouter$Callback,int) -> addCallback
    boolean isRouteAvailable(android.support.v7.media.MediaRouteSelector,int) -> isRouteAvailable
    android.support.v4.media.session.MediaSessionCompat$Token getMediaSessionToken() -> getMediaSessionToken
    void checkCallingThread() -> checkCallingThread
    int findCallbackRecord(android.support.v7.media.MediaRouter$Callback) -> findCallbackRecord
    android.support.v7.media.MediaRouter$RouteInfo getSelectedRoute() -> getSelectedRoute
    void addCallback(android.support.v7.media.MediaRouteSelector,android.support.v7.media.MediaRouter$Callback) -> addCallback
android.support.v7.widget.AppCompatEditText -> android.support.v7.widget.AppCompatEditText:
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setBackgroundResource(int) -> setBackgroundResource
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
com.android.systemui.statusbar.stack.StackStateAnimator$2 -> com.android.systemui.statusbar.stack.StackStateAnimator$2:
    boolean mWasCancelled -> mWasCancelled
    com.android.systemui.statusbar.stack.StackStateAnimator this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.StackStateAnimator) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.systemui.tuner.TunerFragment$TunerWarningFragment -> com.android.systemui.tuner.TunerFragment$TunerWarningFragment:
    void <init>() -> <init>
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw -> com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> $m$0
    void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String) -> onUserInfoChanged
com.android.systemui.keyguard.KeyguardService -> com.android.systemui.keyguard.KeyguardService:
    com.android.internal.policy.IKeyguardService$Stub mBinder -> mBinder
    com.android.systemui.keyguard.KeyguardLifecyclesDispatcher mKeyguardLifecyclesDispatcher -> mKeyguardLifecyclesDispatcher
    com.android.systemui.keyguard.KeyguardViewMediator mKeyguardViewMediator -> mKeyguardViewMediator
    void <init>() -> <init>
    void checkPermission() -> checkPermission
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    com.android.systemui.keyguard.KeyguardLifecyclesDispatcher -get0(com.android.systemui.keyguard.KeyguardService) -> -get0
    com.android.systemui.keyguard.KeyguardViewMediator -get1(com.android.systemui.keyguard.KeyguardService) -> -get1
com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1$1$1 -> com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1$1$1:
    com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1$1 this$4 -> this$4
    android.service.notification.StatusBarNotification val$parentToCancelFinal -> val$parentToCancelFinal
    void <init>(com.android.systemui.statusbar.phone.StatusBar$NotificationClicker$2$1$1,android.service.notification.StatusBarNotification) -> <init>
    void run() -> run
com.android.systemui.recents.views.TaskViewAccessibilityDelegate -> com.android.systemui.recents.views.TaskViewAccessibilityDelegate:
    android.util.SparseArray mActions -> mActions
    com.android.systemui.recents.views.TaskView mTaskView -> mTaskView
    void <init>(com.android.systemui.recents.views.TaskView) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void simulateDragIntoMultiwindow(com.android.systemui.recents.model.TaskStack$DockState) -> simulateDragIntoMultiwindow
com.android.systemui.assist.AssistOrbView$3 -> com.android.systemui.assist.AssistOrbView$3:
    com.android.systemui.assist.AssistOrbView this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistOrbView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.keyguard.NumPadKey$1 -> com.android.keyguard.NumPadKey$1:
    com.android.keyguard.NumPadKey this$0 -> this$0
    void <init>(com.android.keyguard.NumPadKey) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.ExpandableView -> com.android.systemui.statusbar.ExpandableView:
    int mClipTopAmount -> mClipTopAmount
    int mClipBottomAmount -> mClipBottomAmount
    int mActualHeight -> mActualHeight
    boolean mChangingPosition -> mChangingPosition
    android.graphics.Rect mClipRect -> mClipRect
    boolean mClipToActualHeight -> mClipToActualHeight
    boolean mDark -> mDark
    boolean mInShelf -> mInShelf
    java.util.ArrayList mMatchParentViews -> mMatchParentViews
    int mMinClipTopAmount -> mMinClipTopAmount
    com.android.systemui.statusbar.ExpandableView$OnHeightChangedListener mOnHeightChangedListener -> mOnHeightChangedListener
    boolean mTransformingInShelf -> mTransformingInShelf
    android.view.ViewGroup mTransientContainer -> mTransientContainer
    boolean mWillBeGone -> mWillBeGone
    int getClipTopAmount() -> getClipTopAmount
    int getActualHeight() -> getActualHeight
    boolean isContentExpandable() -> isContentExpandable
    int getCollapsedHeight() -> getCollapsedHeight
    int getMaxContentHeight() -> getMaxContentHeight
    void setActualHeight(int) -> setActualHeight
    float getTranslation() -> getTranslation
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setActualHeight(int,boolean) -> setActualHeight
    void setClipTopAmount(int) -> setClipTopAmount
    void setClipBottomAmount(int) -> setClipBottomAmount
    boolean isChildInGroup() -> isChildInGroup
    boolean isGroupExpanded() -> isGroupExpanded
    boolean isGroupExpansionChanging() -> isGroupExpansionChanging
    boolean isSummaryWithChildren() -> isSummaryWithChildren
    void onLayout(boolean,int,int,int,int) -> onLayout
    float getShadowAlpha() -> getShadowAlpha
    void setShadowAlpha(float) -> setShadowAlpha
    void setDimmed(boolean,boolean) -> setDimmed
    void setHideSensitive(boolean,boolean,long,long) -> setHideSensitive
    void setBelowSpeedBump(boolean) -> setBelowSpeedBump
    void setDark(boolean,boolean,long) -> setDark
    void setTransformingInShelf(boolean) -> setTransformingInShelf
    void setInShelf(boolean) -> setInShelf
    void performAddAnimation(long,long) -> performAddAnimation
    boolean isInShelf() -> isInShelf
    void setActualHeightAnimating(boolean) -> setActualHeightAnimating
    boolean isDark() -> isDark
    int getIntrinsicHeight() -> getIntrinsicHeight
    boolean areChildrenExpanded() -> areChildrenExpanded
    void performRemoveAnimation(long,float,java.lang.Runnable) -> performRemoveAnimation
    android.view.ViewGroup getTransientContainer() -> getTransientContainer
    int getMinHeight(boolean) -> getMinHeight
    void setTranslation(float) -> setTranslation
    float getIncreasedPaddingAmount() -> getIncreasedPaddingAmount
    int getPinnedHeadsUpHeight() -> getPinnedHeadsUpHeight
    int getMinHeight() -> getMinHeight
    int getClipBottomAmount() -> getClipBottomAmount
    boolean willBeGone() -> willBeGone
    boolean hasNoContentHeight() -> hasNoContentHeight
    void setOnHeightChangedListener(com.android.systemui.statusbar.ExpandableView$OnHeightChangedListener) -> setOnHeightChangedListener
    void setTransientContainer(android.view.ViewGroup) -> setTransientContainer
    void setHideSensitiveForIntrinsicHeight(boolean) -> setHideSensitiveForIntrinsicHeight
    void setChangingPosition(boolean) -> setChangingPosition
    void setFakeShadowIntensity(float,float,int,int) -> setFakeShadowIntensity
    int getExtraBottomPadding() -> getExtraBottomPadding
    float getOutlineAlpha() -> getOutlineAlpha
    int getOutlineTranslation() -> getOutlineTranslation
    void setWillBeGone(boolean) -> setWillBeGone
    void setMinClipTopAmount(int) -> setMinClipTopAmount
    boolean isAboveShelf() -> isAboveShelf
    void setClipToActualHeight(boolean) -> setClipToActualHeight
    boolean isTransformingIntoShelf() -> isTransformingIntoShelf
    com.android.systemui.statusbar.stack.ExpandableViewState createNewViewState(com.android.systemui.statusbar.stack.StackScrollState) -> createNewViewState
    boolean isChangingPosition() -> isChangingPosition
    void getBoundsOnScreen(android.graphics.Rect,boolean) -> getBoundsOnScreen
    void getDrawingRect(android.graphics.Rect) -> getDrawingRect
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    boolean isTransparent() -> isTransparent
    boolean mustStayOnScreen() -> mustStayOnScreen
    void notifyHeightChanged(boolean) -> notifyHeightChanged
    void onHeightReset() -> onHeightReset
    void onMeasure(int,int) -> onMeasure
    boolean pointInView(float,float,float) -> pointInView
    void setLayerType(int,android.graphics.Paint) -> setLayerType
    void updateClipping() -> updateClipping
    void <clinit>() -> <clinit>
android.support.v4.provider.FontsContractCompat -> android.support.v4.provider.FontsContractCompat:
    android.support.v4.util.SimpleArrayMap sPendingReplies -> sPendingReplies
    android.support.v4.provider.SelfDestructiveThread sBackgroundThread -> sBackgroundThread
    java.lang.Object sLock -> sLock
    android.support.v4.util.LruCache sTypefaceCache -> sTypefaceCache
    java.util.Comparator sByteArrayComparator -> sByteArrayComparator
    boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    java.lang.Object -get0() -> -get0
    android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources) -> getProvider
    android.graphics.Typeface -wrap0(android.content.Context,android.support.v4.provider.FontRequest,int) -> -wrap0
    android.graphics.Typeface getFontInternal(android.content.Context,android.support.v4.provider.FontRequest,int) -> getFontInternal
    java.util.Map prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
    android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest) -> fetchFonts
    android.support.v4.util.SimpleArrayMap -get1() -> -get1
    android.support.v4.util.LruCache -get2() -> -get2
    void <clinit>() -> <clinit>
    android.graphics.Typeface getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.widget.TextView,int,int,int) -> getFontSync
    void <init>() -> <init>
    android.support.v4.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    java.util.List getCertificates(android.support.v4.provider.FontRequest,android.content.res.Resources) -> getCertificates
com.android.systemui.statusbar.policy.CastController$Callback -> com.android.systemui.statusbar.policy.CastController$Callback:
    void onCastDevicesChanged() -> onCastDevicesChanged
com.android.systemui.egg.MLand$Mountain -> com.android.systemui.egg.MLand$Mountain:
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context) -> <init>
com.android.systemui.plugins.FragmentBase -> com.android.systemui.plugins.FragmentBase:
    android.content.Context getContext() -> getContext
    android.view.View getView() -> getView
com.android.systemui.statusbar.NotificationHeaderUtil$HeaderProcessor -> com.android.systemui.statusbar.NotificationHeaderUtil$HeaderProcessor:
    com.android.systemui.statusbar.NotificationHeaderUtil$ResultApplicator mApplicator -> mApplicator
    boolean mApply -> mApply
    com.android.systemui.statusbar.NotificationHeaderUtil$ViewComparator mComparator -> mComparator
    com.android.systemui.statusbar.NotificationHeaderUtil$DataExtractor mExtractor -> mExtractor
    int mId -> mId
    java.lang.Object mParentData -> mParentData
    com.android.systemui.statusbar.ExpandableNotificationRow mParentRow -> mParentRow
    android.view.View mParentView -> mParentView
    void <init>(com.android.systemui.statusbar.ExpandableNotificationRow,int,com.android.systemui.statusbar.NotificationHeaderUtil$DataExtractor,com.android.systemui.statusbar.NotificationHeaderUtil$ViewComparator,com.android.systemui.statusbar.NotificationHeaderUtil$ResultApplicator) -> <init>
    void apply(com.android.systemui.statusbar.ExpandableNotificationRow) -> apply
    void apply(com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> apply
    void applyToView(boolean,android.view.View) -> applyToView
    void compareToHeader(com.android.systemui.statusbar.ExpandableNotificationRow) -> compareToHeader
    com.android.systemui.statusbar.NotificationHeaderUtil$HeaderProcessor forTextView(com.android.systemui.statusbar.ExpandableNotificationRow,int) -> forTextView
    void init() -> init
android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate:
    void <init>() -> <init>
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
com.android.systemui.SwipeHelper$2 -> com.android.systemui.SwipeHelper$2:
    com.android.systemui.SwipeHelper this$0 -> this$0
    android.view.View val$animView -> val$animView
    boolean val$canBeDismissed -> val$canBeDismissed
    void <init>(com.android.systemui.SwipeHelper,android.view.View,boolean) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.NotificationMenuRow$CheckForDrag -> com.android.systemui.statusbar.NotificationMenuRow$CheckForDrag:
    com.android.systemui.statusbar.NotificationMenuRow this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationMenuRow) -> <init>
    void run() -> run
    void <init>(com.android.systemui.statusbar.NotificationMenuRow,com.android.systemui.statusbar.NotificationMenuRow$CheckForDrag) -> <init>
com.android.systemui.assist.AssistOrbView$5 -> com.android.systemui.assist.AssistOrbView$5:
    com.android.systemui.assist.AssistOrbView this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistOrbView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.policy.CastControllerImpl$2 -> com.android.systemui.statusbar.policy.CastControllerImpl$2:
    com.android.systemui.statusbar.policy.CastControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.CastControllerImpl) -> <init>
    void onStart(android.media.projection.MediaProjectionInfo) -> onStart
    void onStop(android.media.projection.MediaProjectionInfo) -> onStop
android.support.v7.widget.RecyclerView -> android.support.v7.widget.RecyclerView:
    boolean mLayoutFrozen -> mLayoutFrozen
    float mScaledHorizontalScrollFactor -> mScaledHorizontalScrollFactor
    android.support.v7.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> mViewInfoProcessCallback
    boolean mFirstLayoutComplete -> mFirstLayoutComplete
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> mItemAnimatorListener
    boolean mEnableFastScroller -> mEnableFastScroller
    boolean mHasFixedSize -> mHasFixedSize
    java.util.ArrayList mOnItemTouchListeners -> mOnItemTouchListeners
    boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC -> ALLOW_SIZE_IN_UNSPECIFIED_SPEC
    int mScrollPointerId -> mScrollPointerId
    int mLastTouchX -> mLastTouchX
    float mScaledVerticalScrollFactor -> mScaledVerticalScrollFactor
    int[] mNestedOffsets -> mNestedOffsets
    java.util.List mOnChildAttachStateListeners -> mOnChildAttachStateListeners
    int mTouchSlop -> mTouchSlop
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> mChildDrawingOrderCallback
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mInitialTouchX -> mInitialTouchX
    boolean mPostedAnimatorRunner -> mPostedAnimatorRunner
    android.support.v7.widget.RecyclerView$LayoutManager mLayout -> mLayout
    android.widget.EdgeEffect mBottomGlow -> mBottomGlow
    int[] NESTED_SCROLLING_ATTRS -> NESTED_SCROLLING_ATTRS
    android.widget.EdgeEffect mRightGlow -> mRightGlow
    int[] mScrollOffset -> mScrollOffset
    int mMaxFlingVelocity -> mMaxFlingVelocity
    android.widget.EdgeEffect mTopGlow -> mTopGlow
    java.lang.Runnable mUpdateChildViewsRunnable -> mUpdateChildViewsRunnable
    java.lang.Runnable mItemAnimatorRunner -> mItemAnimatorRunner
    boolean mLayoutRequestEaten -> mLayoutRequestEaten
    android.widget.EdgeEffect mLeftGlow -> mLeftGlow
    int mMinFlingVelocity -> mMinFlingVelocity
    java.util.List mScrollListeners -> mScrollListeners
    int mEatRequestLayout -> mEatRequestLayout
    java.util.ArrayList mItemDecorations -> mItemDecorations
    android.support.v7.widget.RecyclerView$OnFlingListener mOnFlingListener -> mOnFlingListener
    int[] mScrollConsumed -> mScrollConsumed
    int mEatenAccessibilityChangeFlags -> mEatenAccessibilityChangeFlags
    android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry -> mPrefetchRegistry
    android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener -> mScrollListener
    boolean mIsAttached -> mIsAttached
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> FORCE_INVALIDATE_DISPLAY_LIST
    boolean POST_UPDATES_ON_ANIMATION -> POST_UPDATES_ON_ANIMATION
    boolean mItemsChanged -> mItemsChanged
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> mAdapter
    boolean mIgnoreMotionEventTillDown -> mIgnoreMotionEventTillDown
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> mAccessibilityDelegate
    android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener -> mRecyclerListener
    boolean ALLOW_THREAD_GAP_WORK -> ALLOW_THREAD_GAP_WORK
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION -> FORCE_ABS_FOCUS_SEARCH_DIRECTION
    android.support.v7.widget.RecyclerView$SavedState mPendingSavedState -> mPendingSavedState
    boolean mPreserveFocusAfterLayout -> mPreserveFocusAfterLayout
    boolean mDataSetHasChangedAfterLayout -> mDataSetHasChangedAfterLayout
    int mLastTouchY -> mLastTouchY
    java.util.List mPendingAccessibilityImportanceChange -> mPendingAccessibilityImportanceChange
    android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger -> mViewFlinger
    android.support.v7.widget.ChildHelper mChildHelper -> mChildHelper
    int mInitialTouchY -> mInitialTouchY
    int[] mMinMaxLayoutPositions -> mMinMaxLayoutPositions
    int mScrollState -> mScrollState
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
    android.support.v7.widget.RecyclerView$Recycler mRecycler -> mRecycler
    android.support.v7.widget.ViewInfoStore mViewInfoStore -> mViewInfoStore
    android.support.v7.widget.AdapterHelper mAdapterHelper -> mAdapterHelper
    android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> mActiveOnItemTouchListener
    boolean mAdapterUpdateDuringMeasure -> mAdapterUpdateDuringMeasure
    android.support.v7.widget.RecyclerView$State mState -> mState
    android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver -> mObserver
    android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper -> mScrollingChildHelper
    int[] CLIP_TO_PADDING_ATTR -> CLIP_TO_PADDING_ATTR
    boolean mClipToPadding -> mClipToPadding
    boolean mItemsAddedOrRemoved -> mItemsAddedOrRemoved
    android.support.v7.widget.GapWorker mGapWorker -> mGapWorker
    boolean IGNORE_DETACHED_FOCUSED_CHILD -> IGNORE_DETACHED_FOCUSED_CHILD
    int mLayoutOrScrollCounter -> mLayoutOrScrollCounter
    android.graphics.RectF mTempRectF -> mTempRectF
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator -> mItemAnimator
    android.graphics.Rect mTempRect2 -> mTempRect2
    android.view.animation.Interpolator sQuinticInterpolator -> sQuinticInterpolator
    int mDispatchScrollCounter -> mDispatchScrollCounter
    boolean didChildRangeChange(int,int) -> didChildRangeChange
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    void absorbGlows(int,int) -> absorbGlows
    void dispatchLayout() -> dispatchLayout
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    void scrollTo(int,int) -> scrollTo
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    void dispatchLayoutStep2() -> dispatchLayoutStep2
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void ensureLeftGlow() -> ensureLeftGlow
    void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    void markKnownViewsInvalid() -> markKnownViewsInvalid
    void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    void animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    java.lang.String exceptionLabel() -> exceptionLabel
    void fillRemainingScrollValues(android.support.v7.widget.RecyclerView$State) -> fillRemainingScrollValues
    void invalidateGlows() -> invalidateGlows
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void -wrap2(android.support.v7.widget.RecyclerView,int) -> -wrap2
    void removeItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager) -> setLayoutManager
    void addOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    void clearOldPositions() -> clearOldPositions
    void addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    long getNanoTime() -> getNanoTime
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    void initChildrenHelper() -> initChildrenHelper
    android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    android.support.v7.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    void ensureRightGlow() -> ensureRightGlow
    boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    boolean fling(int,int) -> fling
    void setItemViewCacheSize(int) -> setItemViewCacheSize
    void onAttachedToWindow() -> onAttachedToWindow
    void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder) -> addAnimatingView
    boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    void initAdapterManager() -> initAdapterManager
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    boolean getClipToPadding() -> getClipToPadding
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    void scrollBy(int,int) -> scrollBy
    boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    void stopScroll() -> stopScroll
    boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    boolean -wrap0(android.support.v7.widget.RecyclerView) -> -wrap0
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setScrollState(int) -> setScrollState
    void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    void resetTouch() -> resetTouch
    void defaultOnMeasure(int,int) -> defaultOnMeasure
    boolean setChildImportantForAccessibilityInternal(android.support.v7.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    int getScrollState() -> getScrollState
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    void resumeRequestLayout(boolean) -> resumeRequestLayout
    void stopNestedScroll(int) -> stopNestedScroll
    int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    void -wrap3(android.support.v7.widget.RecyclerView,int,int) -> -wrap3
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    void pullGlows(float,float,float,float) -> pullGlows
    void <init>(android.content.Context) -> <init>
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    void saveFocusInfo() -> saveFocusInfo
    void cancelTouch() -> cancelTouch
    long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    void onDraw(android.graphics.Canvas) -> onDraw
    void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    void setClipToPadding(boolean) -> setClipToPadding
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    void onPointerUp(android.view.MotionEvent) -> onPointerUp
    void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.view.View findNextViewToFocus() -> findNextViewToFocus
    void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    int getBaseline() -> getBaseline
    void eatRequestLayout() -> eatRequestLayout
    void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    void resetFocusInfo() -> resetFocusInfo
    void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    void removeAndRecycleViews() -> removeAndRecycleViews
    void onMeasure(int,int) -> onMeasure
    void removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    void recoverFocusFromState() -> recoverFocusFromState
    int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    void saveOldPositions() -> saveOldPositions
    void setHasFixedSize(boolean) -> setHasFixedSize
    void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    void ensureBottomGlow() -> ensureBottomGlow
    void releaseGlows() -> releaseGlows
    void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    void setLayoutFrozen(boolean) -> setLayoutFrozen
    void dispatchLayoutStep3() -> dispatchLayoutStep3
    void onScrolled(int,int) -> onScrolled
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    void -wrap1(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> -wrap1
    void stopScrollersInternal() -> stopScrollersInternal
    void repositionShadowingViews() -> repositionShadowingViews
    void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    void setAdapter(android.support.v7.widget.RecyclerView$Adapter) -> setAdapter
    void removeOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    void scrollToPosition(int) -> scrollToPosition
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean startNestedScroll(int,int) -> startNestedScroll
    int[] -get1(android.support.v7.widget.RecyclerView) -> -get1
    boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    void setDataSetChangedAfterLayout() -> setDataSetChangedAfterLayout
    void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    boolean isComputingLayout() -> isComputingLayout
    android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    void clearNestedRecyclerViewIfNotNested(android.support.v7.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    void requestLayout() -> requestLayout
    boolean hasUpdatedView() -> hasUpdatedView
    int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    android.support.v7.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    boolean -get0() -> -get0
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    void postAnimationRunner() -> postAnimationRunner
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void draw(android.graphics.Canvas) -> draw
    void addOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    void removeOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    boolean startNestedScroll(int) -> startNestedScroll
    void invalidateItemDecorations() -> invalidateItemDecorations
    android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    void dispatchLayoutStep1() -> dispatchLayoutStep1
    void onScrollStateChanged(int) -> onScrollStateChanged
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    void <clinit>() -> <clinit>
    boolean isAttachedToWindow() -> isAttachedToWindow
    void smoothScrollBy(int,int) -> smoothScrollBy
    void stopNestedScroll() -> stopNestedScroll
    void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    boolean hasFixedSize() -> hasFixedSize
    void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    void ensureTopGlow() -> ensureTopGlow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.systemui.screenshot.GlobalScreenshot$9 -> com.android.systemui.screenshot.GlobalScreenshot$9:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    android.view.animation.Interpolator val$scaleInterpolator -> val$scaleInterpolator
    android.view.animation.Interpolator val$flashAlphaInterpolator -> val$flashAlphaInterpolator
    void <init>(com.android.systemui.screenshot.GlobalScreenshot,android.view.animation.Interpolator,android.view.animation.Interpolator) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    boolean mHaveData -> mHaveData
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    android.os.Bundle mArgs -> mArgs
    boolean mListenerRegistered -> mListenerRegistered
    boolean mStarted -> mStarted
    int mId -> mId
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mRetainingStarted -> mRetainingStarted
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    boolean mRetaining -> mRetaining
    java.lang.Object mData -> mData
    boolean mDeliveredData -> mDeliveredData
    void reportStart() -> reportStart
    void retain() -> retain
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    void finishRetain() -> finishRetain
    void start() -> start
    java.lang.String toString() -> toString
    void destroy() -> destroy
    void stop() -> stop
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    float[] mLastMotionY -> mLastMotionY
    int mDragState -> mDragState
    float[] mInitialMotionX -> mInitialMotionX
    int mTrackingEdges -> mTrackingEdges
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mReleaseInProgress -> mReleaseInProgress
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    int mActivePointerId -> mActivePointerId
    int mEdgeSize -> mEdgeSize
    int mPointersDown -> mPointersDown
    android.widget.OverScroller mScroller -> mScroller
    float mMaxVelocity -> mMaxVelocity
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    float[] mLastMotionX -> mLastMotionX
    android.view.ViewGroup mParentView -> mParentView
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    float[] mInitialMotionY -> mInitialMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    float mMinVelocity -> mMinVelocity
    void dragTo(int,int,int,int) -> dragTo
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int getEdgeSize() -> getEdgeSize
    boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    int getViewDragState() -> getViewDragState
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    boolean isPointerDown(int) -> isPointerDown
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> <init>
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    float clampMag(float,float,float) -> clampMag
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void clearMotionHistory(int) -> clearMotionHistory
    void setMinVelocity(float) -> setMinVelocity
    boolean continueSettling(boolean) -> continueSettling
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    int clampMag(int,int,int) -> clampMag
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    void setDragState(int) -> setDragState
    void cancel() -> cancel
    void clearMotionHistory() -> clearMotionHistory
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    void abort() -> abort
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    boolean checkTouchSlop(int) -> checkTouchSlop
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    boolean isEdgeTouched(int) -> isEdgeTouched
    android.view.View getCapturedView() -> getCapturedView
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    void captureChildView(android.view.View,int) -> captureChildView
    int getEdgesTouched(int,int) -> getEdgesTouched
    int getTouchSlop() -> getTouchSlop
    void <clinit>() -> <clinit>
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    boolean isEdgeTouched(int,int) -> isEdgeTouched
com.android.systemui.statusbar.policy.NetworkControllerImpl$4 -> com.android.systemui.statusbar.policy.NetworkControllerImpl$4:
    com.android.systemui.statusbar.policy.NetworkControllerImpl this$0 -> this$0
    com.android.systemui.statusbar.policy.DeviceProvisionedController val$deviceProvisionedController -> val$deviceProvisionedController
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl,com.android.systemui.statusbar.policy.DeviceProvisionedController) -> <init>
    void onUserSetupChanged() -> onUserSetupChanged
android.support.v17.leanback.widget.StaticShadowHelper$ShadowHelperJbmr2Impl -> android.support.v17.leanback.widget.StaticShadowHelper$ShadowHelperJbmr2Impl:
    void <init>() -> <init>
android.support.v7.app.WindowDecorActionBar$2 -> android.support.v7.app.WindowDecorActionBar$2:
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.android.systemui.plugins.R$xml -> com.android.systemui.plugins.R$xml:
    int fileprovider -> fileprovider
    int lockscreen_settings -> lockscreen_settings
    int nav_bar_tuner -> nav_bar_tuner
    int other_settings -> other_settings
    int timezones -> timezones
    int tuner_prefs -> tuner_prefs
    void <init>() -> <init>
com.android.systemui.recents.events.component.ActivityUnpinnedEvent -> com.android.systemui.recents.events.component.ActivityUnpinnedEvent:
    void <init>() -> <init>
com.android.systemui.DessertCaseView$3 -> com.android.systemui.DessertCaseView$3:
    com.android.systemui.DessertCaseView this$0 -> this$0
    android.view.View val$v -> val$v
    void <init>(com.android.systemui.DessertCaseView,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
com.android.systemui.statusbar.RemoteInputController -> com.android.systemui.statusbar.RemoteInputController:
    java.util.ArrayList mCallbacks -> mCallbacks
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    java.util.ArrayList mOpen -> mOpen
    android.util.ArrayMap mSpinning -> mSpinning
    void <init>(com.android.systemui.statusbar.policy.HeadsUpManager) -> <init>
    void addCallback(com.android.systemui.statusbar.RemoteInputController$Callback) -> addCallback
    void addRemoteInput(com.android.systemui.statusbar.NotificationData$Entry,java.lang.Object) -> addRemoteInput
    void addSpinning(java.lang.String,java.lang.Object) -> addSpinning
    void apply(com.android.systemui.statusbar.NotificationData$Entry) -> apply
    void closeRemoteInputs() -> closeRemoteInputs
    boolean isRemoteInputActive() -> isRemoteInputActive
    boolean isRemoteInputActive(com.android.systemui.statusbar.NotificationData$Entry) -> isRemoteInputActive
    boolean isSpinning(java.lang.String) -> isSpinning
    boolean pruneWeakThenRemoveAndContains(com.android.systemui.statusbar.NotificationData$Entry,com.android.systemui.statusbar.NotificationData$Entry,java.lang.Object) -> pruneWeakThenRemoveAndContains
    void remoteInputSent(com.android.systemui.statusbar.NotificationData$Entry) -> remoteInputSent
    void removeRemoteInput(com.android.systemui.statusbar.NotificationData$Entry,java.lang.Object) -> removeRemoteInput
    void removeSpinning(java.lang.String,java.lang.Object) -> removeSpinning
com.android.systemui.recents.views.TaskStackAnimationHelper -> com.android.systemui.recents.views.TaskStackAnimationHelper:
    android.view.animation.Interpolator DISMISS_ALL_TRANSLATION_INTERPOLATOR -> DISMISS_ALL_TRANSLATION_INTERPOLATOR
    android.view.animation.Interpolator ENTER_FROM_HOME_ALPHA_INTERPOLATOR -> ENTER_FROM_HOME_ALPHA_INTERPOLATOR
    android.view.animation.Interpolator ENTER_WHILE_DOCKING_INTERPOLATOR -> ENTER_WHILE_DOCKING_INTERPOLATOR
    android.view.animation.Interpolator EXIT_TO_HOME_TRANSLATION_INTERPOLATOR -> EXIT_TO_HOME_TRANSLATION_INTERPOLATOR
    android.view.animation.Interpolator FOCUS_BEHIND_NEXT_TASK_INTERPOLATOR -> FOCUS_BEHIND_NEXT_TASK_INTERPOLATOR
    android.view.animation.Interpolator FOCUS_IN_FRONT_NEXT_TASK_INTERPOLATOR -> FOCUS_IN_FRONT_NEXT_TASK_INTERPOLATOR
    android.view.animation.Interpolator FOCUS_NEXT_TASK_INTERPOLATOR -> FOCUS_NEXT_TASK_INTERPOLATOR
    int mEnterAndExitFromHomeTranslationOffset -> mEnterAndExitFromHomeTranslationOffset
    com.android.systemui.recents.views.TaskStackView mStackView -> mStackView
    java.util.ArrayList mTmpCurrentTaskTransforms -> mTmpCurrentTaskTransforms
    java.util.ArrayList mTmpFinalTaskTransforms -> mTmpFinalTaskTransforms
    com.android.systemui.recents.views.TaskViewTransform mTmpTransform -> mTmpTransform
    void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackView) -> <init>
    boolean startScrollToFocusedTaskAnimation(com.android.systemui.recents.model.Task,boolean) -> startScrollToFocusedTaskAnimation
    void prepareForEnterAnimation() -> prepareForEnterAnimation
    void startLaunchTaskAnimation(com.android.systemui.recents.views.TaskView,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startLaunchTaskAnimation
    void startExitToHomeAnimation(boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startExitToHomeAnimation
    void startDeleteTaskAnimation(com.android.systemui.recents.views.TaskView,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startDeleteTaskAnimation
    void startDeleteAllTasksAnimation(java.util.List,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startDeleteAllTasksAnimation
    void startEnterAnimation(com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startEnterAnimation
    void startNewStackScrollAnimation(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startNewStackScrollAnimation
    int calculateStaggeredAnimDuration(int) -> calculateStaggeredAnimDuration
    void startTaskGridDeleteTaskAnimation(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startTaskGridDeleteTaskAnimation
    void startTaskStackDeleteAllTasksAnimation(java.util.List,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startTaskStackDeleteAllTasksAnimation
    void startTaskStackDeleteTaskAnimation(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> startTaskStackDeleteTaskAnimation
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_recents_views_TaskStackAnimationHelper_12480() -> lambda$-com_android_systemui_recents_views_TaskStackAnimationHelper_12480
    void lambda$-com_android_systemui_recents_views_TaskStackAnimationHelper_33167(com.android.systemui.recents.views.TaskView) -> lambda$-com_android_systemui_recents_views_TaskStackAnimationHelper_33167
    void lambda$-com_android_systemui_recents_views_TaskStackAnimationHelper_33985(com.android.systemui.recents.views.TaskStackViewTouchHandler,com.android.systemui.recents.views.TaskView) -> lambda$-com_android_systemui_recents_views_TaskStackAnimationHelper_33985
    void lambda$-com_android_systemui_recents_views_TaskStackAnimationHelper_34270(com.android.systemui.recents.views.TaskView,float,com.android.systemui.recents.views.TaskStackViewTouchHandler,android.animation.ValueAnimator) -> lambda$-com_android_systemui_recents_views_TaskStackAnimationHelper_34270
    android.view.animation.Interpolator -get0() -> -get0
    com.android.systemui.recents.views.TaskStackView -get1(com.android.systemui.recents.views.TaskStackAnimationHelper) -> -get1
android.support.v7.widget.FastScroller$AnimatorListener -> android.support.v7.widget.FastScroller$AnimatorListener:
    boolean mCanceled -> mCanceled
    android.support.v7.widget.FastScroller this$0 -> this$0
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void <init>(android.support.v7.widget.FastScroller,android.support.v7.widget.FastScroller$AnimatorListener) -> <init>
    void <init>(android.support.v7.widget.FastScroller) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.settingslib.bluetooth.Utils$ErrorListener -> com.android.settingslib.bluetooth.Utils$ErrorListener:
    void onShowError(android.content.Context,java.lang.String,int) -> onShowError
android.support.v4.view.ViewCompat$ViewCompatApi23Impl -> android.support.v4.view.ViewCompat$ViewCompatApi23Impl:
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    void <init>() -> <init>
    void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
com.android.systemui.statusbar.notification.NotificationDozeHelper$2 -> com.android.systemui.statusbar.notification.NotificationDozeHelper$2:
    com.android.systemui.statusbar.notification.NotificationDozeHelper this$0 -> this$0
    boolean val$dark -> val$dark
    android.widget.ImageView val$target -> val$target
    void <init>(com.android.systemui.statusbar.notification.NotificationDozeHelper,boolean,android.widget.ImageView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    android.os.Handler mHandler -> mHandler
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean mLocal -> mLocal
    android.support.v4.os.IResultReceiver mReceiver -> mReceiver
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    int describeContents() -> describeContents
com.android.systemui.statusbar.FlingAnimationUtils -> com.android.systemui.statusbar.FlingAnimationUtils:
    com.android.systemui.statusbar.FlingAnimationUtils$AnimatorProperties mAnimatorProperties -> mAnimatorProperties
    float mCachedStartGradient -> mCachedStartGradient
    float mCachedVelocityFactor -> mCachedVelocityFactor
    float mHighVelocityPxPerSecond -> mHighVelocityPxPerSecond
    android.view.animation.PathInterpolator mInterpolator -> mInterpolator
    float mLinearOutSlowInX2 -> mLinearOutSlowInX2
    float mMaxLengthSeconds -> mMaxLengthSeconds
    float mMinVelocityPxPerSecond -> mMinVelocityPxPerSecond
    float mSpeedUpFactor -> mSpeedUpFactor
    float mY2 -> mY2
    void <init>(android.content.Context,float) -> <init>
    void <init>(android.content.Context,float,float) -> <init>
    void <init>(android.content.Context,float,float,float,float) -> <init>
    void apply(android.animation.Animator,float,float,float) -> apply
    void apply(android.view.ViewPropertyAnimator,float,float,float) -> apply
    void apply(android.animation.Animator,float,float,float,float) -> apply
    void apply(android.view.ViewPropertyAnimator,float,float,float,float) -> apply
    void applyDismissing(android.animation.Animator,float,float,float,float) -> applyDismissing
    float calculateLinearOutFasterInY2(float) -> calculateLinearOutFasterInY2
    com.android.systemui.statusbar.FlingAnimationUtils$AnimatorProperties getDismissingProperties(float,float,float,float) -> getDismissingProperties
    android.view.animation.Interpolator getInterpolator(float,float) -> getInterpolator
    float getMinVelocityPxPerSecond() -> getMinVelocityPxPerSecond
    com.android.systemui.statusbar.FlingAnimationUtils$AnimatorProperties getProperties(float,float,float,float) -> getProperties
com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$2 -> com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$2:
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper) -> <init>
    void run() -> run
android.support.v4.os.IResultReceiver -> android.support.v4.os.IResultReceiver:
    void send(int,android.os.Bundle) -> send
com.android.systemui.recents.events.activity.LaunchNextTaskRequestEvent -> com.android.systemui.recents.events.activity.LaunchNextTaskRequestEvent:
    void <init>() -> <init>
com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation -> com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation:
    void <init>() -> <init>
    boolean customTransformTarget(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState) -> customTransformTarget
    android.view.animation.Interpolator getCustomInterpolator(int,boolean) -> getCustomInterpolator
    boolean initTransformation(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState) -> initTransformation
    boolean transformFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    boolean transformTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float) -> transformTo
com.android.systemui.volume.ZenModePanel$ZenPrefs -> com.android.systemui.volume.ZenModePanel$ZenPrefs:
    boolean mConfirmedAlarmIntroduction -> mConfirmedAlarmIntroduction
    boolean mConfirmedPriorityIntroduction -> mConfirmedPriorityIntroduction
    boolean mConfirmedSilenceIntroduction -> mConfirmedSilenceIntroduction
    int mMinuteIndex -> mMinuteIndex
    int mNoneDangerousThreshold -> mNoneDangerousThreshold
    int mNoneSelected -> mNoneSelected
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    void <init>(com.android.systemui.volume.ZenModePanel) -> <init>
    int clampIndex(int) -> clampIndex
    int clampNoneSelected(int) -> clampNoneSelected
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void setMinuteIndex(int) -> setMinuteIndex
    void trackNoneSelected() -> trackNoneSelected
    void updateConfirmedAlarmIntroduction() -> updateConfirmedAlarmIntroduction
    void updateConfirmedPriorityIntroduction() -> updateConfirmedPriorityIntroduction
    void updateConfirmedSilenceIntroduction() -> updateConfirmedSilenceIntroduction
    void updateMinuteIndex() -> updateMinuteIndex
    void updateNoneSelected() -> updateNoneSelected
    boolean -get0(com.android.systemui.volume.ZenModePanel$ZenPrefs) -> -get0
    boolean -get1(com.android.systemui.volume.ZenModePanel$ZenPrefs) -> -get1
    boolean -get2(com.android.systemui.volume.ZenModePanel$ZenPrefs) -> -get2
    void <init>(com.android.systemui.volume.ZenModePanel,com.android.systemui.volume.ZenModePanel$ZenPrefs) -> <init>
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    void send(int,android.os.Bundle) -> send
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void <init>() -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.android.systemui.statusbar.policy.SplitClockView -> com.android.systemui.statusbar.policy.SplitClockView:
    android.widget.TextClock mAmPmView -> mAmPmView
    android.content.BroadcastReceiver mIntentReceiver -> mIntentReceiver
    android.widget.TextClock mTimeView -> mTimeView
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getAmPmPartEndIndex(java.lang.String) -> getAmPmPartEndIndex
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void updatePatterns() -> updatePatterns
    void -wrap0(com.android.systemui.statusbar.policy.SplitClockView) -> -wrap0
com.android.systemui.RoundedCorners$2 -> com.android.systemui.RoundedCorners$2:
    com.android.systemui.RoundedCorners this$0 -> this$0
    void <init>(com.android.systemui.RoundedCorners) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk$2 -> com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk$2:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void $m$1(android.view.View) -> $m$1
    void onClick(android.view.View) -> onClick
com.android.systemui.settings.ToggleSliderView$1 -> com.android.systemui.settings.ToggleSliderView$1:
    com.android.systemui.settings.ToggleSliderView this$0 -> this$0
    void <init>(com.android.systemui.settings.ToggleSliderView) -> <init>
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.systemui.recents.events.ui.focus.FocusPreviousTaskViewEvent -> com.android.systemui.recents.events.ui.focus.FocusPreviousTaskViewEvent:
    void <init>() -> <init>
com.android.systemui.statusbar.policy.AccessibilityController$AccessibilityStateChangedCallback -> com.android.systemui.statusbar.policy.AccessibilityController$AccessibilityStateChangedCallback:
    void onStateChanged(boolean,boolean) -> onStateChanged
com.android.systemui.statusbar.phone.StatusBarIconController$DarkIconManager -> com.android.systemui.statusbar.phone.StatusBarIconController$DarkIconManager:
    com.android.systemui.statusbar.policy.DarkIconDispatcher mDarkIconDispatcher -> mDarkIconDispatcher
    int mIconHPadding -> mIconHPadding
    void <init>(android.widget.LinearLayout) -> <init>
    void destroy() -> destroy
    android.widget.LinearLayout$LayoutParams onCreateLayoutParams() -> onCreateLayoutParams
    void onIconAdded(int,java.lang.String,boolean,com.android.internal.statusbar.StatusBarIcon) -> onIconAdded
    void onRemoveIcon(int) -> onRemoveIcon
    void onSetIcon(int,com.android.internal.statusbar.StatusBarIcon) -> onSetIcon
android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 -> android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    android.support.v7.view.ActionMode$Callback mWrapped -> mWrapped
    void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.support.v7.view.ActionMode$Callback) -> <init>
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
android.arch.core.internal.SafeIterableMap$DescendingIterator -> android.arch.core.internal.SafeIterableMap$DescendingIterator:
    void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> forward
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener:
    android.view.View mView -> mView
    void <init>(android.view.View,android.view.animation.Animation$AnimationListener) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v17.leanback.widget.BrowseFrameLayout$OnChildFocusListener -> android.support.v17.leanback.widget.BrowseFrameLayout$OnChildFocusListener:
    void onRequestChildFocus(android.view.View,android.view.View) -> onRequestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.settingslib.wifi.WifiTracker$WifiListener -> com.android.settingslib.wifi.WifiTracker$WifiListener:
    void onAccessPointsChanged() -> onAccessPointsChanged
    void onWifiStateChanged(int) -> onWifiStateChanged
    void onConnectedChanged() -> onConnectedChanged
android.support.v7.media.RegisteredMediaRouteProvider$ReceiveHandler -> android.support.v7.media.RegisteredMediaRouteProvider$ReceiveHandler:
    java.lang.ref.WeakReference mConnectionRef -> mConnectionRef
    void dispose() -> dispose
    boolean processMessage(android.support.v7.media.RegisteredMediaRouteProvider$Connection,int,int,int,java.lang.Object,android.os.Bundle) -> processMessage
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(android.support.v7.media.RegisteredMediaRouteProvider$Connection) -> <init>
com.android.systemui.statusbar.ActivatableNotificationView$5 -> com.android.systemui.statusbar.ActivatableNotificationView$5:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.content.res.TypedArrayUtils -> android.support.v4.content.res.TypedArrayUtils:
    int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    int getAttr(android.content.Context,int,int) -> getAttr
    android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
    void <init>() -> <init>
    int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
android.support.v7.view.menu.ShowableListMenu -> android.support.v7.view.menu.ShowableListMenu:
    void dismiss() -> dismiss
    android.widget.ListView getListView() -> getListView
    boolean isShowing() -> isShowing
    void show() -> show
com.android.systemui.statusbar.policy.DataSaverController$Listener -> com.android.systemui.statusbar.policy.DataSaverController$Listener:
    void onDataSaverChanged(boolean) -> onDataSaverChanged
com.android.keyguard.KeyguardAbsKeyInputView -> com.android.keyguard.KeyguardAbsKeyInputView:
    com.android.keyguard.SecurityMessageDisplay mSecurityMessageDisplay -> mSecurityMessageDisplay
    com.android.keyguard.KeyguardSecurityCallback mCallback -> mCallback
    android.view.View mEcaView -> mEcaView
    android.os.CountDownTimer mCountdownTimer -> mCountdownTimer
    boolean mDismissing -> mDismissing
    boolean mEnableHaptics -> mEnableHaptics
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    android.os.AsyncTask mPendingLockCheck -> mPendingLockCheck
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void doHapticKeyClick() -> doHapticKeyClick
    java.lang.String getPasswordText() -> getPasswordText
    int getPasswordTextViewId() -> getPasswordTextViewId
    int getPromtReasonStringRes(int) -> getPromtReasonStringRes
    int getWrongPasswordStringId() -> getWrongPasswordStringId
    void handleAttemptLockout(long) -> handleAttemptLockout
    boolean needsInput() -> needsInput
    void onEmergencyButtonClickedWhenInCall() -> onEmergencyButtonClickedWhenInCall
    void onFinishInflate() -> onFinishInflate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPasswordChecked(int,boolean,int,boolean) -> onPasswordChecked
    void onPause() -> onPause
    void onResume(int) -> onResume
    void onUserInput() -> onUserInput
    void reset() -> reset
    void resetPasswordText(boolean,boolean) -> resetPasswordText
    void resetState() -> resetState
    void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback) -> setKeyguardCallback
    void setLockPatternUtils(com.android.internal.widget.LockPatternUtils) -> setLockPatternUtils
    void setPasswordEntryEnabled(boolean) -> setPasswordEntryEnabled
    void setPasswordEntryInputEnabled(boolean) -> setPasswordEntryInputEnabled
    boolean shouldLockout(long) -> shouldLockout
    void showMessage(java.lang.String,int) -> showMessage
    void showPromptReason(int) -> showPromptReason
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    void verifyPasswordAndUnlock() -> verifyPasswordAndUnlock
    android.content.Context -get0(com.android.keyguard.KeyguardAbsKeyInputView) -> -get0
    void -wrap0(com.android.keyguard.KeyguardAbsKeyInputView,int,boolean,int,boolean) -> -wrap0
com.android.systemui.statusbar.NotificationData$Entry -> com.android.systemui.statusbar.NotificationData$Entry:
    boolean autoRedacted -> autoRedacted
    android.widget.RemoteViews cachedAmbientContentView -> cachedAmbientContentView
    android.widget.RemoteViews cachedBigContentView -> cachedBigContentView
    android.widget.RemoteViews cachedContentView -> cachedContentView
    android.widget.RemoteViews cachedHeadsUpContentView -> cachedHeadsUpContentView
    android.widget.RemoteViews cachedPublicContentView -> cachedPublicContentView
    android.app.NotificationChannel channel -> channel
    com.android.systemui.statusbar.StatusBarIconView expandedIcon -> expandedIcon
    com.android.systemui.statusbar.StatusBarIconView icon -> icon
    boolean interruption -> interruption
    java.lang.String key -> key
    long lastFullScreenIntentLaunchTime -> lastFullScreenIntentLaunchTime
    int mCachedContrastColor -> mCachedContrastColor
    int mCachedContrastColorIsFor -> mCachedContrastColorIsFor
    java.lang.Throwable mDebugThrowable -> mDebugThrowable
    com.android.systemui.statusbar.InflationTask mRunningTask -> mRunningTask
    android.service.notification.StatusBarNotification notification -> notification
    java.lang.CharSequence remoteInputText -> remoteInputText
    com.android.systemui.statusbar.ExpandableNotificationRow row -> row
    java.util.List snoozeCriteria -> snoozeCriteria
    int targetSdk -> targetSdk
    void <init>(android.service.notification.StatusBarNotification) -> <init>
    void abortTask() -> abortTask
    void createIcons(android.content.Context,android.service.notification.StatusBarNotification) -> createIcons
    int getContrastedColor(android.content.Context,boolean,int) -> getContrastedColor
    java.lang.Throwable getDebugThrowable() -> getDebugThrowable
    android.view.View getExpandedContentView() -> getExpandedContentView
    com.android.systemui.statusbar.InflationTask getRunningTask() -> getRunningTask
    boolean hasInterrupted() -> hasInterrupted
    boolean hasJustLaunchedFullScreenIntent() -> hasJustLaunchedFullScreenIntent
    void notifyFullScreenIntentLaunched() -> notifyFullScreenIntentLaunched
    void onInflationTaskFinished() -> onInflationTaskFinished
    void reset() -> reset
    void setDebugThrowable(java.lang.Throwable) -> setDebugThrowable
    void setIconTag(int,java.lang.Object) -> setIconTag
    void setInflationTask(com.android.systemui.statusbar.InflationTask) -> setInflationTask
    void setInterruption() -> setInterruption
    void updateIcons(android.content.Context,android.service.notification.StatusBarNotification) -> updateIcons
    void lambda$-com_android_systemui_statusbar_NotificationData$Entry_6652(int) -> lambda$-com_android_systemui_statusbar_NotificationData$Entry_6652
com.android.systemui.volume.VolumeDialogMotion$7 -> com.android.systemui.volume.VolumeDialogMotion$7:
    boolean mCancelled -> mCancelled
    com.android.systemui.volume.VolumeDialogMotion this$0 -> this$0
    java.lang.Runnable val$onComplete -> val$onComplete
    void <init>(com.android.systemui.volume.VolumeDialogMotion,java.lang.Runnable) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.graphics.TypefaceCompatUtil -> android.support.v4.graphics.TypefaceCompatUtil:
    java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    void closeQuietly(java.io.Closeable) -> closeQuietly
    java.nio.ByteBuffer mmap(java.io.File) -> mmap
    boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    java.io.File getTempFile(android.content.Context) -> getTempFile
    void <init>() -> <init>
    java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
com.android.systemui.settings.ToggleSlider$Listener -> com.android.systemui.settings.ToggleSlider$Listener:
    void onChanged(com.android.systemui.settings.ToggleSlider,boolean,boolean,int,boolean) -> onChanged
    void onInit(com.android.systemui.settings.ToggleSlider) -> onInit
com.android.systemui.car.-$Lambda$FzSWPoBmYhequhh86D4WD0hQurY -> com.android.systemui.car.-$Lambda$FzSWPoBmYhequhh86D4WD0hQurY:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    java.lang.Object $m$0() -> $m$0
    java.lang.Object createDependency() -> createDependency
com.android.systemui.statusbar.phone.KeyguardStatusBarView$1 -> com.android.systemui.statusbar.phone.KeyguardStatusBarView$1:
    com.android.systemui.statusbar.phone.KeyguardStatusBarView this$0 -> this$0
    boolean val$userSwitcherVisible -> val$userSwitcherVisible
    int val$systemIconsCurrentX -> val$systemIconsCurrentX
    void <init>(com.android.systemui.statusbar.phone.KeyguardStatusBarView,boolean,int) -> <init>
    boolean onPreDraw() -> onPreDraw
com.android.systemui.statusbar.StatusBarIconView$OnVisibilityChangedListener -> com.android.systemui.statusbar.StatusBarIconView$OnVisibilityChangedListener:
    void onVisibilityChanged(int) -> onVisibilityChanged
com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent -> com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent:
    int msgResId -> msgResId
    void <init>(int) -> <init>
android.support.v7.widget.RecyclerView$OnScrollListener -> android.support.v7.widget.RecyclerView$OnScrollListener:
    void <init>() -> <init>
    void onScrollStateChanged(android.support.v7.widget.RecyclerView,int) -> onScrollStateChanged
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
com.android.settingslib.core.lifecycle.events.OnPause -> com.android.settingslib.core.lifecycle.events.OnPause:
    void onPause() -> onPause
android.support.v7.widget.GapWorker -> android.support.v7.widget.GapWorker:
    long mPostTimeNs -> mPostTimeNs
    long mFrameIntervalNs -> mFrameIntervalNs
    java.util.Comparator sTaskComparator -> sTaskComparator
    java.lang.ThreadLocal sGapWorker -> sGapWorker
    java.util.ArrayList mTasks -> mTasks
    java.util.ArrayList mRecyclerViews -> mRecyclerViews
    void run() -> run
    void remove(android.support.v7.widget.RecyclerView) -> remove
    android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    void prefetch(long) -> prefetch
    void buildTaskList() -> buildTaskList
    boolean isPrefetchPositionAttached(android.support.v7.widget.RecyclerView,int) -> isPrefetchPositionAttached
    void <clinit>() -> <clinit>
    void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    void <init>() -> <init>
    void postFromTraversal(android.support.v7.widget.RecyclerView,int,int) -> postFromTraversal
    void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    void add(android.support.v7.widget.RecyclerView) -> add
    void flushTasksWithDeadline(long) -> flushTasksWithDeadline
com.android.systemui.pip.phone.InputConsumerController$RegistrationListener -> com.android.systemui.pip.phone.InputConsumerController$RegistrationListener:
    void onRegistrationChanged(boolean) -> onRegistrationChanged
com.android.systemui.doze.DozePauser -> com.android.systemui.doze.DozePauser:
    java.lang.String TAG -> TAG
    com.android.systemui.doze.DozeMachine mMachine -> mMachine
    com.android.systemui.util.AlarmTimeout mPauseTimeout -> mPauseTimeout
    com.android.systemui.doze.AlwaysOnDisplayPolicy mPolicy -> mPolicy
    int[] -com-android-systemui-doze-DozeMachine$StateSwitchesValues -> -com-android-systemui-doze-DozeMachine$StateSwitchesValues
    void <init>(android.os.Handler,com.android.systemui.doze.DozeMachine,android.app.AlarmManager,com.android.systemui.doze.AlwaysOnDisplayPolicy) -> <init>
    void onTimeout() -> onTimeout
    void transitionTo(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State) -> transitionTo
    void <clinit>() -> <clinit>
    void -com_android_systemui_doze_DozePauser-mthref-0() -> -com_android_systemui_doze_DozePauser-mthref-0
    int[] -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues() -> -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues
android.support.v7.app.MediaRouteControllerDialogFragment -> android.support.v7.app.MediaRouteControllerDialogFragment:
    android.support.v7.app.MediaRouteControllerDialog mDialog -> mDialog
    void onStop() -> onStop
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    android.support.v7.app.MediaRouteControllerDialog onCreateControllerDialog(android.content.Context,android.os.Bundle) -> onCreateControllerDialog
    void <init>() -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void <init>(int) -> <init>
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    void <init>() -> <init>
    java.util.Set entrySet() -> entrySet
    android.support.v4.util.MapCollections getCollection() -> getCollection
com.android.systemui.statusbar.ExpandableNotificationRow$4 -> com.android.systemui.statusbar.ExpandableNotificationRow$4:
    com.android.systemui.statusbar.ExpandableNotificationRow this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onInflate(android.view.ViewStub,android.view.View) -> onInflate
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
com.android.systemui.stackdivider.ForcedResizableInfoActivity$1 -> com.android.systemui.stackdivider.ForcedResizableInfoActivity$1:
    com.android.systemui.stackdivider.ForcedResizableInfoActivity this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.ForcedResizableInfoActivity) -> <init>
    void run() -> run
android.support.v7.app.MediaRouteControllerDialog$5 -> android.support.v7.app.MediaRouteControllerDialog$5:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v17.leanback.widget.ShadowHelper$ShadowHelperStubImpl -> android.support.v17.leanback.widget.ShadowHelper$ShadowHelperStubImpl:
    void <init>() -> <init>
    void setZ(android.view.View,float) -> setZ
android.support.v7.widget.AppCompatSpinner -> android.support.v7.widget.AppCompatSpinner:
    android.support.v7.widget.ForwardingListener mForwardingListener -> mForwardingListener
    int[] ATTRS_ANDROID_SPINNERMODE -> ATTRS_ANDROID_SPINNERMODE
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.content.Context mPopupContext -> mPopupContext
    android.support.v7.widget.AppCompatSpinner$DropdownPopup mPopup -> mPopup
    android.graphics.Rect mTempRect -> mTempRect
    boolean mPopupSet -> mPopupSet
    android.widget.SpinnerAdapter mTempAdapter -> mTempAdapter
    int mDropDownWidth -> mDropDownWidth
    java.lang.CharSequence getPrompt() -> getPrompt
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void setDropDownWidth(int) -> setDropDownWidth
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.graphics.Rect -get2(android.support.v7.widget.AppCompatSpinner) -> -get2
    android.support.v7.widget.AppCompatSpinner$DropdownPopup -get1(android.support.v7.widget.AppCompatSpinner) -> -get1
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    int -get0(android.support.v7.widget.AppCompatSpinner) -> -get0
    void onMeasure(int,int) -> onMeasure
    void setBackgroundResource(int) -> setBackgroundResource
    android.content.Context getPopupContext() -> getPopupContext
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    boolean performClick() -> performClick
    void drawableStateChanged() -> drawableStateChanged
    void <clinit>() -> <clinit>
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void onDetachedFromWindow() -> onDetachedFromWindow
    int getDropDownWidth() -> getDropDownWidth
com.android.systemui.SwipeHelper$5 -> com.android.systemui.SwipeHelper$5:
    boolean wasCancelled -> wasCancelled
    com.android.systemui.SwipeHelper this$0 -> this$0
    android.view.View val$animView -> val$animView
    boolean val$canBeDismissed -> val$canBeDismissed
    float val$targetLeft -> val$targetLeft
    void <init>(com.android.systemui.SwipeHelper,android.view.View,boolean,float) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.car.CarBatteryController$BatteryViewHandler -> com.android.systemui.statusbar.car.CarBatteryController$BatteryViewHandler:
    void hideBatteryView() -> hideBatteryView
    void showBatteryView() -> showBatteryView
android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout -> android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout:
    java.lang.String name -> name
    int resId -> resId
    int widgetResId -> widgetResId
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int -set1(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout,int) -> -set1
    void <init>(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout) -> <init>
    java.lang.String -set0(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout,java.lang.String) -> -set0
    int -get0(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout) -> -get0
    int -set2(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout,int) -> -set2
    int -get1(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout) -> -get1
    void <init>() -> <init>
com.android.systemui.statusbar.policy.UserSwitcherController$ExitGuestDialog -> com.android.systemui.statusbar.policy.UserSwitcherController$ExitGuestDialog:
    int mGuestId -> mGuestId
    int mTargetId -> mTargetId
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController,android.content.Context,int,int) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v17.leanback.R$styleable -> android.support.v17.leanback.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int[] ActionMenuItemView -> ActionMenuItemView
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int[] ActivityChooserView -> ActivityChooserView
    int[] AlertDialog -> AlertDialog
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int[] AppCompatTextView -> AppCompatTextView
    int[] AppCompatTheme -> AppCompatTheme
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] BackgroundStyle -> BackgroundStyle
    int[] BatteryMeterView -> BatteryMeterView
    int[] ButtonBarLayout -> ButtonBarLayout
    int[] CarrierText -> CarrierText
    int[] CheckBoxPreference -> CheckBoxPreference
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int[] CompoundButton -> CompoundButton
    int[] DateView -> DateView
    int[] DeadZone -> DeadZone
    int[] DialogPreference -> DialogPreference
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyButtonView -> KeyButtonView
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int LeanbackGuidedStepTheme_guidedStepKeyline -> LeanbackGuidedStepTheme_guidedStepKeyline
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int[] ListPopupWindow -> ListPopupWindow
    int[] ListPreference -> ListPreference
    int[] MediaRouteButton -> MediaRouteButton
    int[] MenuGroup -> MenuGroup
    int[] MenuItem -> MenuItem
    int[] MenuView -> MenuView
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] NumPadKey -> NumPadKey
    int[] PagingIndicator -> PagingIndicator
    int PagingIndicator_arrowBgColor -> PagingIndicator_arrowBgColor
    int PagingIndicator_arrowColor -> PagingIndicator_arrowColor
    int PagingIndicator_arrowRadius -> PagingIndicator_arrowRadius
    int PagingIndicator_dotBgColor -> PagingIndicator_dotBgColor
    int PagingIndicator_dotToArrowGap -> PagingIndicator_dotToArrowGap
    int PagingIndicator_dotToDotGap -> PagingIndicator_dotToDotGap
    int PagingIndicator_lbDotRadius -> PagingIndicator_lbDotRadius
    int[] PasswordTextView -> PasswordTextView
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int[] PreferenceGroup -> PreferenceGroup
    int[] PreferenceImageView -> PreferenceImageView
    int[] PreferenceTheme -> PreferenceTheme
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int[] RecyclerView -> RecyclerView
    int[] RestrictedPreference -> RestrictedPreference
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int[] SearchView -> SearchView
    int[] SeekBarPreference -> SeekBarPreference
    int[] Spinner -> Spinner
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int[] TextAppearance -> TextAppearance
    int[] ToggleSliderView -> ToggleSliderView
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] UserDetailItemView -> UserDetailItemView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int[] ViewStubCompat -> ViewStubCompat
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int lbBaseCardView_Layout_layout_viewType -> lbBaseCardView_Layout_layout_viewType
    int lbBaseCardView_activatedAnimationDuration -> lbBaseCardView_activatedAnimationDuration
    int lbBaseCardView_cardBackground -> lbBaseCardView_cardBackground
    int lbBaseCardView_cardForeground -> lbBaseCardView_cardForeground
    int lbBaseCardView_cardType -> lbBaseCardView_cardType
    int lbBaseCardView_extraVisibility -> lbBaseCardView_extraVisibility
    int lbBaseCardView_infoVisibility -> lbBaseCardView_infoVisibility
    int lbBaseCardView_selectedAnimationDelay -> lbBaseCardView_selectedAnimationDelay
    int lbBaseCardView_selectedAnimationDuration -> lbBaseCardView_selectedAnimationDuration
    int[] lbBaseGridView -> lbBaseGridView
    int lbBaseGridView_android_gravity -> lbBaseGridView_android_gravity
    int lbBaseGridView_android_horizontalSpacing -> lbBaseGridView_android_horizontalSpacing
    int lbBaseGridView_android_verticalSpacing -> lbBaseGridView_android_verticalSpacing
    int lbBaseGridView_focusOutEnd -> lbBaseGridView_focusOutEnd
    int lbBaseGridView_focusOutFront -> lbBaseGridView_focusOutFront
    int lbBaseGridView_focusOutSideEnd -> lbBaseGridView_focusOutSideEnd
    int lbBaseGridView_focusOutSideStart -> lbBaseGridView_focusOutSideStart
    int lbBaseGridView_horizontalMargin -> lbBaseGridView_horizontalMargin
    int lbBaseGridView_verticalMargin -> lbBaseGridView_verticalMargin
    int[] lbDatePicker -> lbDatePicker
    int lbDatePicker_android_maxDate -> lbDatePicker_android_maxDate
    int lbDatePicker_android_minDate -> lbDatePicker_android_minDate
    int lbDatePicker_datePickerFormat -> lbDatePicker_datePickerFormat
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int lbHorizontalGridView_numberOfRows -> lbHorizontalGridView_numberOfRows
    int lbHorizontalGridView_rowHeight -> lbHorizontalGridView_rowHeight
    int[] lbImageCardView -> lbImageCardView
    int lbImageCardView_infoAreaBackground -> lbImageCardView_infoAreaBackground
    int lbImageCardView_lbImageCardViewType -> lbImageCardView_lbImageCardViewType
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int lbResizingTextView_maintainLineSpacing -> lbResizingTextView_maintainLineSpacing
    int lbResizingTextView_resizeTrigger -> lbResizingTextView_resizeTrigger
    int lbResizingTextView_resizedPaddingAdjustmentBottom -> lbResizingTextView_resizedPaddingAdjustmentBottom
    int lbResizingTextView_resizedPaddingAdjustmentTop -> lbResizingTextView_resizedPaddingAdjustmentTop
    int lbResizingTextView_resizedTextSize -> lbResizingTextView_resizedTextSize
    int[] lbSearchOrbView -> lbSearchOrbView
    int lbSearchOrbView_searchOrbBrightColor -> lbSearchOrbView_searchOrbBrightColor
    int lbSearchOrbView_searchOrbColor -> lbSearchOrbView_searchOrbColor
    int lbSearchOrbView_searchOrbIcon -> lbSearchOrbView_searchOrbIcon
    int lbSearchOrbView_searchOrbIconColor -> lbSearchOrbView_searchOrbIconColor
    int[] lbSlide -> lbSlide
    int lbSlide_android_duration -> lbSlide_android_duration
    int lbSlide_android_interpolator -> lbSlide_android_interpolator
    int lbSlide_android_startDelay -> lbSlide_android_startDelay
    int lbSlide_lb_slideEdge -> lbSlide_lb_slideEdge
    int[] lbTimePicker -> lbTimePicker
    int lbTimePicker_is24HourFormat -> lbTimePicker_is24HourFormat
    int lbTimePicker_useCurrentTime -> lbTimePicker_useCurrentTime
    int[] lbVerticalGridView -> lbVerticalGridView
    int lbVerticalGridView_columnWidth -> lbVerticalGridView_columnWidth
    int lbVerticalGridView_numberOfColumns -> lbVerticalGridView_numberOfColumns
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.LinearLayoutCompat:
    int mDividerPadding -> mDividerPadding
    int mGravity -> mGravity
    int mOrientation -> mOrientation
    boolean mUseLargestChild -> mUseLargestChild
    int mDividerWidth -> mDividerWidth
    int[] mMaxAscent -> mMaxAscent
    boolean mBaselineAligned -> mBaselineAligned
    int mBaselineChildTop -> mBaselineChildTop
    int[] mMaxDescent -> mMaxDescent
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mBaselineAlignedChildIndex -> mBaselineAlignedChildIndex
    int mTotalLength -> mTotalLength
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    float mWeightSum -> mWeightSum
    void forceUniformHeight(int,int) -> forceUniformHeight
    void forceUniformWidth(int,int) -> forceUniformWidth
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int getLocationOffset(android.view.View) -> getLocationOffset
    void layoutVertical(int,int,int,int) -> layoutVertical
    android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    void measureHorizontal(int,int) -> measureHorizontal
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    void setBaselineAligned(boolean) -> setBaselineAligned
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setOrientation(int) -> setOrientation
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    int getBaseline() -> getBaseline
    void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    int getVirtualChildCount() -> getVirtualChildCount
    android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    int getDividerWidth() -> getDividerWidth
    int measureNullChild(int) -> measureNullChild
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    int getGravity() -> getGravity
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void measureVertical(int,int) -> measureVertical
    void setGravity(int) -> setGravity
    void <init>(android.content.Context) -> <init>
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onDraw(android.graphics.Canvas) -> onDraw
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$8 -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$8:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    java.lang.Object -$f5 -> -$f5
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.statusbar.phone.LockscreenWallpaper$1 -> com.android.systemui.statusbar.phone.LockscreenWallpaper$1:
    com.android.systemui.statusbar.phone.LockscreenWallpaper this$0 -> this$0
    int val$currentUser -> val$currentUser
    android.os.UserHandle val$selectedUser -> val$selectedUser
    void <init>(com.android.systemui.statusbar.phone.LockscreenWallpaper,int,android.os.UserHandle) -> <init>
    com.android.systemui.statusbar.phone.LockscreenWallpaper$LoaderResult doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.android.systemui.statusbar.phone.LockscreenWallpaper$LoaderResult) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.android.systemui.statusbar.NotificationHeaderUtil$2 -> com.android.systemui.statusbar.NotificationHeaderUtil$2:
    void <init>() -> <init>
    boolean compare(android.view.View,android.view.View,java.lang.Object,java.lang.Object) -> compare
com.android.systemui.recents.views.TaskStackAnimationHelper$5 -> com.android.systemui.recents.views.TaskStackAnimationHelper$5:
    com.android.systemui.recents.views.TaskStackAnimationHelper this$0 -> this$0
    com.android.systemui.recents.misc.ReferenceCountedTrigger val$postAnimationTrigger -> val$postAnimationTrigger
    void <init>(com.android.systemui.recents.views.TaskStackAnimationHelper,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.pip.phone.PipMediaController$ActionListener -> com.android.systemui.pip.phone.PipMediaController$ActionListener:
    void onMediaActionsChanged(java.util.List) -> onMediaActionsChanged
com.android.systemui.tuner.ShortcutPicker$ShortcutPreference -> com.android.systemui.tuner.ShortcutPicker$ShortcutPreference:
    boolean mBinding -> mBinding
    com.android.systemui.tuner.ShortcutParser$Shortcut mShortcut -> mShortcut
    void <init>(android.content.Context,com.android.systemui.tuner.ShortcutParser$Shortcut,java.lang.CharSequence) -> <init>
    void notifyChanged() -> notifyChanged
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    java.lang.String toString() -> toString
com.android.systemui.statusbar.SignalClusterView$PhoneState -> com.android.systemui.statusbar.SignalClusterView$PhoneState:
    boolean mActivityIn -> mActivityIn
    boolean mActivityOut -> mActivityOut
    android.widget.ImageView mDataActivity -> mDataActivity
    int mDataActivityId -> mDataActivityId
    boolean mIsMobileTypeIconWide -> mIsMobileTypeIconWide
    int mLastMobileStrengthId -> mLastMobileStrengthId
    int mLastMobileTypeId -> mLastMobileTypeId
    android.widget.ImageView mMobile -> mMobile
    android.widget.ImageView mMobileActivityIn -> mMobileActivityIn
    android.widget.ImageView mMobileActivityOut -> mMobileActivityOut
    android.widget.ImageView mMobileDark -> mMobileDark
    java.lang.String mMobileDescription -> mMobileDescription
    android.view.ViewGroup mMobileGroup -> mMobileGroup
    android.widget.ImageView mMobileRoaming -> mMobileRoaming
    android.view.ViewGroup mMobileSingleGroup -> mMobileSingleGroup
    android.view.ViewGroup mMobileStackedGroup -> mMobileStackedGroup
    int mMobileStrengthId -> mMobileStrengthId
    android.widget.ImageView mMobileType -> mMobileType
    java.lang.String mMobileTypeDescription -> mMobileTypeDescription
    int mMobileTypeId -> mMobileTypeId
    boolean mMobileVisible -> mMobileVisible
    boolean mRoaming -> mRoaming
    android.widget.ImageView mStackedData -> mStackedData
    int mStackedDataId -> mStackedDataId
    android.widget.ImageView mStackedVoice -> mStackedVoice
    int mStackedVoiceId -> mStackedVoiceId
    int mSubId -> mSubId
    com.android.systemui.statusbar.SignalClusterView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.SignalClusterView,int,android.content.Context) -> <init>
    boolean apply(boolean) -> apply
    void populateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> populateAccessibilityEvent
    void setIconTint(int,float,android.graphics.Rect) -> setIconTint
    void setViews(android.view.ViewGroup) -> setViews
    android.view.ViewGroup -get0(com.android.systemui.statusbar.SignalClusterView$PhoneState) -> -get0
    android.widget.ImageView -get1(com.android.systemui.statusbar.SignalClusterView$PhoneState) -> -get1
    int -get2(com.android.systemui.statusbar.SignalClusterView$PhoneState) -> -get2
    int -get3(com.android.systemui.statusbar.SignalClusterView$PhoneState) -> -get3
    int -set0(com.android.systemui.statusbar.SignalClusterView$PhoneState,int) -> -set0
    boolean -set1(com.android.systemui.statusbar.SignalClusterView$PhoneState,boolean) -> -set1
    int -set2(com.android.systemui.statusbar.SignalClusterView$PhoneState,int) -> -set2
    java.lang.String -set3(com.android.systemui.statusbar.SignalClusterView$PhoneState,java.lang.String) -> -set3
    int -set4(com.android.systemui.statusbar.SignalClusterView$PhoneState,int) -> -set4
    java.lang.String -set5(com.android.systemui.statusbar.SignalClusterView$PhoneState,java.lang.String) -> -set5
    int -set6(com.android.systemui.statusbar.SignalClusterView$PhoneState,int) -> -set6
    boolean -set7(com.android.systemui.statusbar.SignalClusterView$PhoneState,boolean) -> -set7
    int -set8(com.android.systemui.statusbar.SignalClusterView$PhoneState,int) -> -set8
    int -set9(com.android.systemui.statusbar.SignalClusterView$PhoneState,int) -> -set9
android.support.v17.leanback.transition.TranslationAnimationCreator$TransitionPositionListener -> android.support.v17.leanback.transition.TranslationAnimationCreator$TransitionPositionListener:
    int[] mTransitionPosition -> mTransitionPosition
    float mTerminalY -> mTerminalY
    int mStartX -> mStartX
    float mTerminalX -> mTerminalX
    android.view.View mMovingView -> mMovingView
    float mPausedX -> mPausedX
    float mPausedY -> mPausedY
    int mStartY -> mStartY
    android.view.View mViewInHierarchy -> mViewInHierarchy
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void <init>(android.view.View,android.view.View,int,int,float,float) -> <init>
    void onTransitionResume(android.transition.Transition) -> onTransitionResume
    void onTransitionStart(android.transition.Transition) -> onTransitionStart
    void onAnimationResume(android.animation.Animator) -> onAnimationResume
    void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationPause(android.animation.Animator) -> onAnimationPause
    void onTransitionPause(android.transition.Transition) -> onTransitionPause
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1:
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> this$1
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onForwardingStopped() -> onForwardingStopped
    boolean onForwardingStarted() -> onForwardingStarted
    void <init>(android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View) -> <init>
com.android.systemui.recents.events.EventBus$ReusableEvent -> com.android.systemui.recents.events.EventBus$ReusableEvent:
    int mDispatchCount -> mDispatchCount
    void <init>() -> <init>
    java.lang.Object clone() -> clone
    void onPostDispatch() -> onPostDispatch
com.android.systemui.qs.TouchAnimator$KeyframeSet -> com.android.systemui.qs.TouchAnimator$KeyframeSet:
    float mFrameWidth -> mFrameWidth
    int mSize -> mSize
    void <init>(int) -> <init>
    void interpolate(int,float,java.lang.Object) -> interpolate
    com.android.systemui.qs.TouchAnimator$KeyframeSet ofFloat(android.util.Property,float[]) -> ofFloat
    void setValue(float,java.lang.Object) -> setValue
com.android.systemui.recents.misc.SystemServicesProxy$TaskStackListener -> com.android.systemui.recents.misc.SystemServicesProxy$TaskStackListener:
    void <init>() -> <init>
    boolean checkCurrentUserId(android.content.Context,boolean) -> checkCurrentUserId
    void onActivityDismissingDockedStack() -> onActivityDismissingDockedStack
    void onActivityForcedResizable(java.lang.String,int,int) -> onActivityForcedResizable
    void onActivityLaunchOnSecondaryDisplayFailed() -> onActivityLaunchOnSecondaryDisplayFailed
    void onActivityPinned(java.lang.String,int,int) -> onActivityPinned
    void onActivityUnpinned() -> onActivityUnpinned
    void onPinnedActivityRestartAttempt(boolean) -> onPinnedActivityRestartAttempt
    void onPinnedStackAnimationEnded() -> onPinnedStackAnimationEnded
    void onPinnedStackAnimationStarted() -> onPinnedStackAnimationStarted
    void onTaskProfileLocked(int,int) -> onTaskProfileLocked
    void onTaskSnapshotChanged(int,android.app.ActivityManager$TaskSnapshot) -> onTaskSnapshotChanged
    void onTaskStackChanged() -> onTaskStackChanged
    void onTaskStackChangedBackground() -> onTaskStackChangedBackground
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChange(boolean) -> onChange
    boolean deliverSelfNotifications() -> deliverSelfNotifications
com.android.systemui.statusbar.phone.-$Lambda$aZ4Bmia8Y6U6UmJgP9YZzmut0D8 -> com.android.systemui.statusbar.phone.-$Lambda$aZ4Bmia8Y6U6UmJgP9YZzmut0D8:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void $m$2(java.lang.Object) -> $m$2
    void $m$3(java.lang.Object) -> $m$3
    void $m$4(java.lang.Object) -> $m$4
    void $m$5(java.lang.Object) -> $m$5
    void $m$6(java.lang.Object) -> $m$6
    void $m$7(java.lang.Object) -> $m$7
    void $m$8(java.lang.Object) -> $m$8
    void $m$9(java.lang.Object) -> $m$9
    void accept(java.lang.Object) -> accept
com.android.systemui.statusbar.policy.UserInfoControllerImpl$1 -> com.android.systemui.statusbar.policy.UserInfoControllerImpl$1:
    com.android.systemui.statusbar.policy.UserInfoControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserInfoControllerImpl) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.car.FullscreenUserSwitcher -> com.android.systemui.statusbar.car.FullscreenUserSwitcher:
    int mAnimUpdateIntervalMs -> mAnimUpdateIntervalMs
    android.view.View mContainer -> mContainer
    int mLoginTimeoutMs -> mLoginTimeoutMs
    android.view.View mParent -> mParent
    android.widget.ProgressBar mProgressBar -> mProgressBar
    int mShortAnimDuration -> mShortAnimDuration
    boolean mShowing -> mShowing
    android.widget.ProgressBar mSwitchingUsers -> mSwitchingUsers
    android.os.CountDownTimer mTimer -> mTimer
    com.android.systemui.statusbar.car.UserGridView mUserGridView -> mUserGridView
    com.android.systemui.statusbar.policy.UserSwitcherController mUserSwitcherController -> mUserSwitcherController
    void <init>(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.policy.UserSwitcherController,android.view.ViewStub) -> <init>
    void automaticallySelectUser() -> automaticallySelectUser
    void cancelTimer() -> cancelTimer
    void crossFade(android.view.View,android.view.View) -> crossFade
    void hide() -> hide
    void onUserSwitched(int) -> onUserSwitched
    void show() -> show
    void toggleSwitchInProgress(boolean) -> toggleSwitchInProgress
    void lambda$-com_android_systemui_statusbar_car_FullscreenUserSwitcher_2135(com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> lambda$-com_android_systemui_statusbar_car_FullscreenUserSwitcher_2135
    void lambda$-com_android_systemui_statusbar_car_FullscreenUserSwitcher_2868(android.view.View) -> lambda$-com_android_systemui_statusbar_car_FullscreenUserSwitcher_2868
    void lambda$-com_android_systemui_statusbar_car_FullscreenUserSwitcher_3060(android.view.View) -> lambda$-com_android_systemui_statusbar_car_FullscreenUserSwitcher_3060
    boolean lambda$-com_android_systemui_statusbar_car_FullscreenUserSwitcher_3147(android.view.View,android.view.MotionEvent) -> lambda$-com_android_systemui_statusbar_car_FullscreenUserSwitcher_3147
    int -get0(com.android.systemui.statusbar.car.FullscreenUserSwitcher) -> -get0
    android.widget.ProgressBar -get1(com.android.systemui.statusbar.car.FullscreenUserSwitcher) -> -get1
    void -wrap0(com.android.systemui.statusbar.car.FullscreenUserSwitcher) -> -wrap0
com.android.settingslib.core.lifecycle.events.OnOptionsItemSelected -> com.android.settingslib.core.lifecycle.events.OnOptionsItemSelected:
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase -> android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase:
    android.support.v7.app.AppCompatDelegateImplBase this$0 -> this$0
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onContentChanged() -> onContentChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback) -> <init>
com.android.systemui.recents.Recents$1$1 -> com.android.systemui.recents.Recents$1$1:
    com.android.systemui.recents.Recents$1 this$1 -> this$1
    void <init>(com.android.systemui.recents.Recents$1) -> <init>
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isOpen -> isOpen
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.statusbar.policy.KeyButtonView -> com.android.systemui.statusbar.policy.KeyButtonView:
    android.media.AudioManager mAudioManager -> mAudioManager
    java.lang.Runnable mCheckLongPress -> mCheckLongPress
    int mCode -> mCode
    int mContentDescriptionRes -> mContentDescriptionRes
    long mDownTime -> mDownTime
    boolean mGestureAborted -> mGestureAborted
    boolean mLongClicked -> mLongClicked
    com.android.internal.logging.MetricsLogger mMetricsLogger -> mMetricsLogger
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    boolean mPlaySounds -> mPlaySounds
    com.android.systemui.statusbar.policy.KeyButtonRipple mRipple -> mRipple
    boolean mSupportsLongpress -> mSupportsLongpress
    int mTouchSlop -> mTouchSlop
    void setCode(int) -> setCode
    void loadAsync(android.graphics.drawable.Icon) -> loadAsync
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void abortCurrentGesture() -> abortCurrentGesture
    boolean isClickable() -> isClickable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    boolean performAccessibilityActionInternal(int,android.os.Bundle) -> performAccessibilityActionInternal
    void playSoundEffect(int) -> playSoundEffect
    void sendEvent(int,int) -> sendEvent
    void sendEvent(int,int,long) -> sendEvent
    void setDarkIntensity(float) -> setDarkIntensity
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setVertical(boolean) -> setVertical
    android.content.Context -get0(com.android.systemui.statusbar.policy.KeyButtonView) -> -get0
    boolean -get1(com.android.systemui.statusbar.policy.KeyButtonView) -> -get1
    boolean -set0(com.android.systemui.statusbar.policy.KeyButtonView,boolean) -> -set0
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
    void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
com.android.systemui.statusbar.phone.StatusBar$40$1 -> com.android.systemui.statusbar.phone.StatusBar$40$1:
    com.android.systemui.statusbar.phone.StatusBar$40 this$1 -> this$1
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout val$scrollLayout -> val$scrollLayout
    com.android.systemui.statusbar.ExpandableNotificationRow val$row -> val$row
    void <init>(com.android.systemui.statusbar.phone.StatusBar$40,com.android.systemui.statusbar.stack.NotificationStackScrollLayout,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void run() -> run
com.android.systemui.pip.phone.-$Lambda$DtUkKn4xIMuq8TSa5smVIdc6GkM -> com.android.systemui.pip.phone.-$Lambda$DtUkKn4xIMuq8TSa5smVIdc6GkM:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(boolean) -> $m$0
    void onRegistrationChanged(boolean) -> onRegistrationChanged
com.android.systemui.BatteryMeterView -> com.android.systemui.BatteryMeterView:
    com.android.systemui.statusbar.policy.BatteryController mBatteryController -> mBatteryController
    android.widget.ImageView mBatteryIconView -> mBatteryIconView
    android.widget.TextView mBatteryPercentView -> mBatteryPercentView
    float mDarkIntensity -> mDarkIntensity
    int mDarkModeBackgroundColor -> mDarkModeBackgroundColor
    int mDarkModeFillColor -> mDarkModeFillColor
    com.android.settingslib.graph.BatteryMeterDrawableBase mDrawable -> mDrawable
    boolean mForceShowPercent -> mForceShowPercent
    int mLevel -> mLevel
    int mLightModeBackgroundColor -> mLightModeBackgroundColor
    int mLightModeFillColor -> mLightModeFillColor
    com.android.systemui.BatteryMeterView$SettingObserver mSettingObserver -> mSettingObserver
    java.lang.String mSlotBattery -> mSlotBattery
    int mTextColor -> mTextColor
    int mUser -> mUser
    com.android.systemui.settings.CurrentUserTracker mUserTracker -> mUserTracker
    void setForceShowPercent(boolean) -> setForceShowPercent
    void setFillColor(int) -> setFillColor
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getColorForDarkIntensity(float,int,int) -> getColorForDarkIntensity
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    android.widget.TextView loadPercentView() -> loadPercentView
    void onAttachedToWindow() -> onAttachedToWindow
    void onBatteryLevelChanged(int,boolean,boolean) -> onBatteryLevelChanged
    void onDarkChanged(android.graphics.Rect,float,int) -> onDarkChanged
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPowerSaveChanged(boolean) -> onPowerSaveChanged
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void scaleBatteryMeterViews() -> scaleBatteryMeterViews
    void setTextColor(int) -> setTextColor
    void updatePercentText() -> updatePercentText
    void updateShowPercent() -> updateShowPercent
    com.android.systemui.BatteryMeterView$SettingObserver -get0(com.android.systemui.BatteryMeterView) -> -get0
    int -set0(com.android.systemui.BatteryMeterView,int) -> -set0
    void -wrap0(com.android.systemui.BatteryMeterView) -> -wrap0
com.android.systemui.qs.QSDetailItems$H -> com.android.systemui.qs.QSDetailItems$H:
    com.android.systemui.qs.QSDetailItems this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetailItems) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> mHandler
    boolean mStopped -> mStopped
    boolean mCreated -> mCreated
    boolean mRetaining -> mRetaining
    android.support.v4.util.SparseArrayCompat mPendingFragmentActivityResults -> mPendingFragmentActivityResults
    boolean mReallyStopped -> mReallyStopped
    android.support.v4.app.FragmentController mFragments -> mFragments
    int mNextCandidateRequestIndex -> mNextCandidateRequestIndex
    boolean mResumed -> mResumed
    void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    void doReallyStop(boolean) -> doReallyStop
    void onCreate(android.os.Bundle) -> onCreate
    void onLowMemory() -> onLowMemory
    void onStart() -> onStart
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    void onBackPressed() -> onBackPressed
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onResumeFragments() -> onResumeFragments
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onResume() -> onResume
    void markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State) -> markState
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onStateNotSaved() -> onStateNotSaved
    void <init>() -> <init>
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onReallyStop() -> onReallyStop
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
android.support.v7.preference.Preference$OnPreferenceClickListener -> android.support.v7.preference.Preference$OnPreferenceClickListener:
    boolean onPreferenceClick(android.support.v7.preference.Preference) -> onPreferenceClick
com.android.settingslib.core.lifecycle.events.OnCreate -> com.android.settingslib.core.lifecycle.events.OnCreate:
    void onCreate(android.os.Bundle) -> onCreate
com.android.systemui.classifier.AnglesClassifier$Data -> com.android.systemui.classifier.AnglesClassifier$Data:
    float ANGLE_DEVIATION -> ANGLE_DEVIATION
    float mAnglesCount -> mAnglesCount
    float mBiggestAngle -> mBiggestAngle
    float mCount -> mCount
    float mFirstAngleVariance -> mFirstAngleVariance
    float mFirstLength -> mFirstLength
    java.util.List mLastThreePoints -> mLastThreePoints
    float mLeftAngles -> mLeftAngles
    float mLength -> mLength
    float mPreviousAngle -> mPreviousAngle
    float mRightAngles -> mRightAngles
    float mSecondCount -> mSecondCount
    float mSecondSum -> mSecondSum
    float mSecondSumSquares -> mSecondSumSquares
    float mStraightAngles -> mStraightAngles
    float mSum -> mSum
    float mSumSquares -> mSumSquares
    void <init>() -> <init>
    void addPoint(com.android.systemui.classifier.Point) -> addPoint
    float getAnglesPercentage() -> getAnglesPercentage
    float getAnglesVariance() -> getAnglesVariance
    float getAnglesVariance(float,float,float) -> getAnglesVariance
android.support.v17.leanback.widget.BrowseFrameLayout -> android.support.v17.leanback.widget.BrowseFrameLayout:
    android.support.v17.leanback.widget.BrowseFrameLayout$OnFocusSearchListener mListener -> mListener
    android.view.View$OnKeyListener mOnDispatchKeyListener -> mOnDispatchKeyListener
    android.support.v17.leanback.widget.BrowseFrameLayout$OnChildFocusListener mOnChildFocusListener -> mOnChildFocusListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.systemui.util.leak.WeakIdentityHashMap -> com.android.systemui.util.leak.WeakIdentityHashMap:
    java.util.HashMap mMap -> mMap
    java.lang.ref.ReferenceQueue mRefQueue -> mRefQueue
    void <init>() -> <init>
    void put(java.lang.Object,java.lang.Object) -> put
    int size() -> size
    boolean isEmpty() -> isEmpty
    void cleanUp() -> cleanUp
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
android.support.v7.app.AlertController$1 -> android.support.v7.app.AlertController$1:
    android.support.v7.app.AlertController this$0 -> this$0
    void <init>(android.support.v7.app.AlertController) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.provider.FontsContractCompat$2 -> android.support.v4.provider.FontsContractCompat$2:
    java.lang.String val$id -> val$id
    android.support.v4.provider.FontRequest val$request -> val$request
    int val$style -> val$style
    android.content.Context val$context -> val$context
    java.lang.Object call() -> call
    void <init>(android.content.Context,android.support.v4.provider.FontRequest,int,java.lang.String) -> <init>
    android.graphics.Typeface call() -> call
com.android.systemui.SysuiRestartReceiver -> com.android.systemui.SysuiRestartReceiver:
    java.lang.String ACTION -> ACTION
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <clinit>() -> <clinit>
com.android.systemui.pip.phone.PipTouchHandler$3$1 -> com.android.systemui.pip.phone.PipTouchHandler$3$1:
    com.android.systemui.pip.phone.PipTouchHandler$3 this$1 -> this$1
    void <init>(com.android.systemui.pip.phone.PipTouchHandler$3) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.policy.UserInfoController -> com.android.systemui.statusbar.policy.UserInfoController:
    void reloadUserInfo() -> reloadUserInfo
com.android.systemui.volume.VolumeDialogMotion$3 -> com.android.systemui.volume.VolumeDialogMotion$3:
    com.android.systemui.volume.VolumeDialogMotion this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogMotion) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.DateView$1 -> com.android.systemui.statusbar.policy.DateView$1:
    com.android.systemui.statusbar.policy.DateView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.DateView) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void lambda$-com_android_systemui_statusbar_policy_DateView$1_2090() -> lambda$-com_android_systemui_statusbar_policy_DateView$1_2090
    void lambda$-com_android_systemui_statusbar_policy_DateView$1_2169() -> lambda$-com_android_systemui_statusbar_policy_DateView$1_2169
com.android.systemui.statusbar.phone.KeyguardIndicationTextView -> com.android.systemui.statusbar.phone.KeyguardIndicationTextView:
    void switchIndication(java.lang.CharSequence) -> switchIndication
    void switchIndication(int) -> switchIndication
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
android.support.v17.leanback.transition.SlideKitkat$2 -> android.support.v17.leanback.transition.SlideKitkat$2:
    void <init>() -> <init>
    float getGone(android.view.View) -> getGone
com.android.systemui.plugins.VolumeDialog -> com.android.systemui.plugins.VolumeDialog:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    void destroy() -> destroy
    void init(int,com.android.systemui.plugins.VolumeDialog$Callback) -> init
com.android.systemui.statusbar.notification.NotificationInflater$2 -> com.android.systemui.statusbar.notification.NotificationInflater$2:
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress val$result -> val$result
    void <init>(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> <init>
    android.widget.RemoteViews getRemoteView() -> getRemoteView
    void setResultView(android.view.View) -> setResultView
com.android.keyguard.PasswordTextView$CharState$9 -> com.android.keyguard.PasswordTextView$CharState$9:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.StatusBarIconView$4 -> com.android.systemui.statusbar.StatusBarIconView$4:
    com.android.systemui.statusbar.StatusBarIconView this$0 -> this$0
    java.lang.Runnable val$endRunnable -> val$endRunnable
    void <init>(com.android.systemui.statusbar.StatusBarIconView,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.tuner.ShortcutPicker -> com.android.systemui.tuner.ShortcutPicker:
    java.lang.String mKey -> mKey
    com.android.systemui.tuner.SelectablePreference mNonePreference -> mNonePreference
    java.util.ArrayList mSelectablePreferences -> mSelectablePreferences
    com.android.systemui.tuner.TunerService mTunerService -> mTunerService
    void <init>() -> <init>
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    void onDestroy() -> onDestroy
    boolean onPreferenceTreeClick(android.support.v7.preference.Preference) -> onPreferenceTreeClick
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void lambda$-com_android_systemui_tuner_ShortcutPicker_2792(android.content.Context,android.support.v7.preference.PreferenceScreen,android.support.v7.preference.PreferenceCategory,android.content.pm.LauncherActivityInfo) -> lambda$-com_android_systemui_tuner_ShortcutPicker_2792
    void lambda$-com_android_systemui_tuner_ShortcutPicker_3437(android.content.Context,android.content.pm.LauncherActivityInfo,android.support.v7.preference.PreferenceScreen,com.android.systemui.tuner.ShortcutParser$Shortcut) -> lambda$-com_android_systemui_tuner_ShortcutPicker_3437
    void lambda$-com_android_systemui_tuner_ShortcutPicker_5387(java.lang.String,com.android.systemui.tuner.SelectablePreference) -> lambda$-com_android_systemui_tuner_ShortcutPicker_5387
com.android.settingslib.net.DataUsageController$DataUsageInfo -> com.android.settingslib.net.DataUsageController$DataUsageInfo:
    long limitLevel -> limitLevel
    long usageLevel -> usageLevel
    java.lang.String carrier -> carrier
    long startDate -> startDate
    long warningLevel -> warningLevel
    java.lang.String period -> period
    void <init>() -> <init>
com.android.systemui.egg.MLand$Pop$1 -> com.android.systemui.egg.MLand$Pop$1:
    com.android.systemui.egg.MLand$Pop this$1 -> this$1
    void <init>(com.android.systemui.egg.MLand$Pop) -> <init>
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
android.support.v7.util.DiffUtil$DiffResult$1 -> android.support.v7.util.DiffUtil$DiffResult$1:
    android.support.v7.widget.RecyclerView$Adapter val$adapter -> val$adapter
    android.support.v7.util.DiffUtil$DiffResult this$1 -> this$1
    void onMoved(int,int) -> onMoved
    void onRemoved(int,int) -> onRemoved
    void <init>(android.support.v7.util.DiffUtil$DiffResult,android.support.v7.widget.RecyclerView$Adapter) -> <init>
    void onChanged(int,int,java.lang.Object) -> onChanged
    void onInserted(int,int) -> onInserted
com.android.systemui.statusbar.phone.StatusBar$39$1 -> com.android.systemui.statusbar.phone.StatusBar$39$1:
    com.android.systemui.statusbar.phone.StatusBar$39 this$1 -> this$1
    void <init>(com.android.systemui.statusbar.phone.StatusBar$39) -> <init>
    void run() -> run
com.android.systemui.recents.views.SystemBarScrimViews -> com.android.systemui.recents.views.SystemBarScrimViews:
    android.content.Context mContext -> mContext
    boolean mHasDockedTasks -> mHasDockedTasks
    boolean mHasNavBarScrim -> mHasNavBarScrim
    boolean mHasTransposedNavBar -> mHasTransposedNavBar
    int mNavBarScrimEnterDuration -> mNavBarScrimEnterDuration
    android.view.View mNavBarScrimView -> mNavBarScrimView
    boolean mShouldAnimateNavBarScrim -> mShouldAnimateNavBarScrim
    void <init>(com.android.systemui.recents.RecentsActivity) -> <init>
    void animateNavBarScrimVisibility(boolean,com.android.systemui.recents.views.AnimationProps) -> animateNavBarScrimVisibility
    void animateScrimToCurrentNavBarState(boolean) -> animateScrimToCurrentNavBarState
    com.android.systemui.recents.views.AnimationProps createBoundsAnimation(int) -> createBoundsAnimation
    boolean isNavBarScrimRequired(boolean) -> isNavBarScrimRequired
    void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent) -> onBusEvent
    void prepareEnterRecentsAnimation(boolean,boolean) -> prepareEnterRecentsAnimation
    void updateNavBarScrim(boolean,boolean,com.android.systemui.recents.views.AnimationProps) -> updateNavBarScrim
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void <init>(android.support.v4.widget.AutoScrollHelper) -> <init>
    void run() -> run
com.android.keyguard.KeyguardSimPukView$CheckSimPuk$1 -> com.android.keyguard.KeyguardSimPukView$CheckSimPuk$1:
    com.android.keyguard.KeyguardSimPukView$CheckSimPuk this$1 -> this$1
    int[] val$result -> val$result
    void <init>(com.android.keyguard.KeyguardSimPukView$CheckSimPuk,int[]) -> <init>
    void run() -> run
com.android.settingslib.bluetooth.LocalBluetoothProfileManager$ServiceListener -> com.android.settingslib.bluetooth.LocalBluetoothProfileManager$ServiceListener:
    void onServiceDisconnected() -> onServiceDisconnected
    void onServiceConnected() -> onServiceConnected
android.support.v7.app.MediaRouteControllerDialog$8 -> android.support.v7.app.MediaRouteControllerDialog$8:
    java.util.Map val$previousRouteBoundMap -> val$previousRouteBoundMap
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    java.util.Map val$previousRouteBitmapMap -> val$previousRouteBitmapMap
    void onGlobalLayout() -> onGlobalLayout
    void <init>(android.support.v7.app.MediaRouteControllerDialog,java.util.Map,java.util.Map) -> <init>
com.android.systemui.statusbar.CrossFadeHelper$1 -> com.android.systemui.statusbar.CrossFadeHelper$1:
    java.lang.Runnable val$endRunnable -> val$endRunnable
    android.view.View val$view -> val$view
    void <init>(java.lang.Runnable,android.view.View) -> <init>
    void run() -> run
android.support.v7.view.menu.MenuPresenter$Callback -> android.support.v7.view.menu.MenuPresenter$Callback:
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.android.systemui.statusbar.EmptyShadeView$EmptyShadeViewState -> com.android.systemui.statusbar.EmptyShadeView$EmptyShadeViewState:
    com.android.systemui.statusbar.EmptyShadeView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.EmptyShadeView) -> <init>
    void applyToView(android.view.View) -> applyToView
android.support.v7.media.MediaRouterJellybean$SelectRouteWorkaround -> android.support.v7.media.MediaRouterJellybean$SelectRouteWorkaround:
    java.lang.reflect.Method mSelectRouteIntMethod -> mSelectRouteIntMethod
    void <init>() -> <init>
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
com.android.systemui.assist.AssistManager$4 -> com.android.systemui.assist.AssistManager$4:
    com.android.systemui.assist.AssistManager this$0 -> this$0
    android.content.Intent val$intent -> val$intent
    android.app.ActivityOptions val$opts -> val$opts
    void <init>(com.android.systemui.assist.AssistManager,android.content.Intent,android.app.ActivityOptions) -> <init>
    void run() -> run
com.android.systemui.plugins.-$Lambda$Upv-4XtKk9gV4CvuUNPqdt0_SZ8$1 -> com.android.systemui.plugins.-$Lambda$Upv-4XtKk9gV4CvuUNPqdt0_SZ8$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.String,android.util.Log$TerribleFailure,boolean) -> $m$0
    void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure,boolean) -> onTerribleFailure
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.android.systemui.qs.QSFooter -> com.android.systemui.qs.QSFooter:
    void setQSPanel(com.android.systemui.qs.QSPanel) -> setQSPanel
    void setVisibility(int) -> setVisibility
    void setExpanded(boolean) -> setExpanded
    android.view.View getExpandView() -> getExpandView
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void setListening(boolean) -> setListening
    void setExpansion(float) -> setExpansion
    int getHeight() -> getHeight
android.support.v17.leanback.widget.SearchBar$4 -> android.support.v17.leanback.widget.SearchBar$4:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    java.lang.Runnable val$mOnTextChangedRunnable -> val$mOnTextChangedRunnable
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void <init>(android.support.v17.leanback.widget.SearchBar,java.lang.Runnable) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
android.support.annotation.RestrictTo$Scope -> android.support.annotation.RestrictTo$Scope:
    android.support.annotation.RestrictTo$Scope SUBCLASSES -> SUBCLASSES
    android.support.annotation.RestrictTo$Scope[] $VALUES -> $VALUES
    android.support.annotation.RestrictTo$Scope TESTS -> TESTS
    android.support.annotation.RestrictTo$Scope GROUP_ID -> GROUP_ID
    android.support.annotation.RestrictTo$Scope LIBRARY -> LIBRARY
    android.support.annotation.RestrictTo$Scope LIBRARY_GROUP -> LIBRARY_GROUP
    void <clinit>() -> <clinit>
    android.support.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    android.support.annotation.RestrictTo$Scope[] values() -> values
com.android.systemui.plugins.ViewProvider -> com.android.systemui.plugins.ViewProvider:
    android.view.View getView() -> getView
android.arch.core.internal.SafeIterableMap$AscendingIterator -> android.arch.core.internal.SafeIterableMap$AscendingIterator:
    void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> forward
com.android.systemui.classifier.DirectionEvaluator -> com.android.systemui.classifier.DirectionEvaluator:
    void <init>() -> <init>
    float evaluate(float,float,int) -> evaluate
com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$4 -> com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$4:
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> <init>
    void run() -> run
android.support.v4.view.NestedScrollingParent2 -> android.support.v4.view.NestedScrollingParent2:
    void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
com.android.systemui.globalactions.GlobalActionsDialog$6 -> com.android.systemui.globalactions.GlobalActionsDialog$6:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,int,int,int,int,int) -> <init>
    void changeStateFromPress(boolean) -> changeStateFromPress
    void onToggle(boolean) -> onToggle
    boolean showBeforeProvisioning() -> showBeforeProvisioning
    boolean showDuringKeyguard() -> showDuringKeyguard
com.android.systemui.statusbar.policy.NetworkControllerImpl$7 -> com.android.systemui.statusbar.policy.NetworkControllerImpl$7:
    com.android.systemui.statusbar.policy.NetworkControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.NetworkControllerImpl) -> <init>
    int compare(android.telephony.SubscriptionInfo,android.telephony.SubscriptionInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.settingslib.R$string -> com.android.settingslib.R$string:
    int accessibility_no_wifi -> accessibility_no_wifi
    int accessibility_wifi_one_bar -> accessibility_wifi_one_bar
    int accessibility_wifi_security_type_none -> accessibility_wifi_security_type_none
    int accessibility_wifi_security_type_secured -> accessibility_wifi_security_type_secured
    int accessibility_wifi_signal_full -> accessibility_wifi_signal_full
    int accessibility_wifi_three_bars -> accessibility_wifi_three_bars
    int accessibility_wifi_two_bars -> accessibility_wifi_two_bars
    int available_via_carrier -> available_via_carrier
    int available_via_passpoint -> available_via_passpoint
    int battery_meter_very_low_overlay_symbol -> battery_meter_very_low_overlay_symbol
    int bluetooth_pairing_device_down_error_message -> bluetooth_pairing_device_down_error_message
    int bluetooth_pairing_error_message -> bluetooth_pairing_error_message
    int bluetooth_pairing_pin_error_message -> bluetooth_pairing_pin_error_message
    int bluetooth_pairing_rejected_error_message -> bluetooth_pairing_rejected_error_message
    int connected_via_carrier -> connected_via_carrier
    int connected_via_network_scorer -> connected_via_network_scorer
    int connected_via_network_scorer_default -> connected_via_network_scorer_default
    int connected_via_passpoint -> connected_via_passpoint
    int disabled_by_admin -> disabled_by_admin
    int disabled_by_admin_summary_text -> disabled_by_admin_summary_text
    int preference_summary_default_combination -> preference_summary_default_combination
    int speed_label_fast -> speed_label_fast
    int speed_label_okay -> speed_label_okay
    int speed_label_slow -> speed_label_slow
    int speed_label_very_fast -> speed_label_very_fast
    int wifi_ap_unable_to_handle_new_sta -> wifi_ap_unable_to_handle_new_sta
    int wifi_auth_password_wrong -> wifi_auth_password_wrong
    int wifi_check_password_try_again -> wifi_check_password_try_again
    int wifi_connected_no_internet -> wifi_connected_no_internet
    int wifi_disabled_by_recommendation_provider -> wifi_disabled_by_recommendation_provider
    int wifi_disabled_generic -> wifi_disabled_generic
    int wifi_disabled_network_failure -> wifi_disabled_network_failure
    int wifi_disabled_password_failure -> wifi_disabled_password_failure
    int wifi_fail_to_scan -> wifi_fail_to_scan
    int wifi_no_internet -> wifi_no_internet
    int wifi_no_internet_no_reconnect -> wifi_no_internet_no_reconnect
    int wifi_not_in_range -> wifi_not_in_range
    int wifi_remembered -> wifi_remembered
    void <init>() -> <init>
com.android.systemui.statusbar.policy.KeyguardUserSwitcher$3 -> com.android.systemui.statusbar.policy.KeyguardUserSwitcher$3:
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.ActionBarOverlayLayout$1 -> android.support.v7.widget.ActionBarOverlayLayout$1:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> this$0
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.util.leak.TrackedGarbage -> com.android.systemui.util.leak.TrackedGarbage:
    java.util.HashSet mGarbage -> mGarbage
    java.lang.ref.ReferenceQueue mRefQueue -> mRefQueue
    com.android.systemui.util.leak.TrackedCollections mTrackedCollections -> mTrackedCollections
    int countOldGarbage() -> countOldGarbage
    void <init>(com.android.systemui.util.leak.TrackedCollections) -> <init>
    void cleanUp() -> cleanUp
    void dump(java.io.PrintWriter) -> dump
    boolean isOld(long,long) -> isOld
    void track(java.lang.Object) -> track
com.android.systemui.plugins.R$dimen -> com.android.systemui.plugins.R$dimen:
    int G -> G
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_content_inset_with_nav -> abc_action_bar_content_inset_with_nav
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_elevation_material -> abc_action_bar_elevation_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_cascading_menus_min_smallest_width -> abc_cascading_menus_min_smallest_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_fixed_height_major -> abc_dialog_fixed_height_major
    int abc_dialog_fixed_height_minor -> abc_dialog_fixed_height_minor
    int abc_dialog_fixed_width_major -> abc_dialog_fixed_width_major
    int abc_dialog_fixed_width_minor -> abc_dialog_fixed_width_minor
    int abc_dialog_list_padding_bottom_no_buttons -> abc_dialog_list_padding_bottom_no_buttons
    int abc_dialog_list_padding_top_no_title -> abc_dialog_list_padding_top_no_title
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_dialog_title_divider_material -> abc_dialog_title_divider_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_progress_bar_height_material -> abc_progress_bar_height_material
    int abc_search_view_preferred_height -> abc_search_view_preferred_height
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_seekbar_track_background_height_material -> abc_seekbar_track_background_height_material
    int abc_seekbar_track_progress_height_material -> abc_seekbar_track_progress_height_material
    int abc_select_dialog_padding_start_material -> abc_select_dialog_padding_start_material
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_header_material -> abc_text_size_menu_header_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int appear_y_translation_start -> appear_y_translation_start
    int assist_disclosure_shadow_thickness -> assist_disclosure_shadow_thickness
    int assist_disclosure_thickness -> assist_disclosure_thickness
    int assist_orb_base_margin -> assist_orb_base_margin
    int assist_orb_elevation -> assist_orb_elevation
    int assist_orb_navbar_scrim_height -> assist_orb_navbar_scrim_height
    int assist_orb_scrim_height -> assist_orb_scrim_height
    int assist_orb_size -> assist_orb_size
    int assist_orb_travel_distance -> assist_orb_travel_distance
    int battery_detail_graph_space_bottom -> battery_detail_graph_space_bottom
    int battery_detail_graph_space_top -> battery_detail_graph_space_top
    int battery_height -> battery_height
    int battery_level_padding_start -> battery_level_padding_start
    int battery_level_text_size -> battery_level_text_size
    int battery_margin_bottom -> battery_margin_bottom
    int battery_width -> battery_width
    int blinds_pop_threshold -> blinds_pop_threshold
    int boost_dv -> boost_dv
    int borderless_button_radius -> borderless_button_radius
    int bottom_padding -> bottom_padding
    int bottom_text_spacing_digital -> bottom_text_spacing_digital
    int bt_battery_padding -> bt_battery_padding
    int building_height_min -> building_height_min
    int building_width_max -> building_width_max
    int building_width_min -> building_width_min
    int burn_in_prevention_offset_x -> burn_in_prevention_offset_x
    int burn_in_prevention_offset_y -> burn_in_prevention_offset_y
    int button_size -> button_size
    int car_body2_size -> car_body2_size
    int car_fullscreen_user_pod_icon_text_size -> car_fullscreen_user_pod_icon_text_size
    int car_fullscreen_user_pod_image_avatar_height -> car_fullscreen_user_pod_image_avatar_height
    int car_fullscreen_user_pod_image_avatar_width -> car_fullscreen_user_pod_image_avatar_width
    int car_fullscreen_user_pod_margin_between -> car_fullscreen_user_pod_margin_between
    int car_fullscreen_user_pod_margin_name_bottom -> car_fullscreen_user_pod_margin_name_bottom
    int car_fullscreen_user_pod_margin_name_top -> car_fullscreen_user_pod_margin_name_top
    int car_fullscreen_user_pod_text_size -> car_fullscreen_user_pod_text_size
    int car_fullscreen_user_pod_width -> car_fullscreen_user_pod_width
    int car_margin -> car_margin
    int car_navigation_bar_width -> car_navigation_bar_width
    int car_navigation_button_width -> car_navigation_button_width
    int car_page_indicator_dot_diameter -> car_page_indicator_dot_diameter
    int car_page_indicator_margin_top -> car_page_indicator_margin_top
    int car_qs_footer_height -> car_qs_footer_height
    int car_qs_footer_icon_height -> car_qs_footer_icon_height
    int car_qs_footer_icon_width -> car_qs_footer_icon_width
    int car_qs_footer_padding_bottom -> car_qs_footer_padding_bottom
    int car_qs_footer_padding_end -> car_qs_footer_padding_end
    int car_qs_footer_padding_start -> car_qs_footer_padding_start
    int car_qs_footer_padding_top -> car_qs_footer_padding_top
    int car_qs_footer_user_name_text_size -> car_qs_footer_user_name_text_size
    int car_qs_footer_user_switch_margin_right -> car_qs_footer_user_switch_margin_right
    int car_qs_header_system_icons_area_height -> car_qs_header_system_icons_area_height
    int car_start_driving_corner_radius -> car_start_driving_corner_radius
    int car_start_driving_height -> car_start_driving_height
    int car_start_driving_padding_side -> car_start_driving_padding_side
    int car_start_driving_text_size -> car_start_driving_text_size
    int car_status_bar_header_height -> car_status_bar_header_height
    int car_user_switcher_progress_bar_height -> car_user_switcher_progress_bar_height
    int car_user_switcher_progress_bar_margin_top -> car_user_switcher_progress_bar_margin_top
    int carrier_label_height -> carrier_label_height
    int cell_overlay_padding -> cell_overlay_padding
    int circle_avatar_size -> circle_avatar_size
    int clear_all_padding_top -> clear_all_padding_top
    int clock_collapsed_bottom_margin -> clock_collapsed_bottom_margin
    int clock_collapsed_bottom_margin_large_text -> clock_collapsed_bottom_margin_large_text
    int clock_expanded_bottom_margin -> clock_expanded_bottom_margin
    int close_handle_height -> close_handle_height
    int close_handle_underlap -> close_handle_underlap
    int cloud_size_max -> cloud_size_max
    int cloud_size_min -> cloud_size_min
    int corner_size -> corner_size
    int data_usage_graph_marker_width -> data_usage_graph_marker_width
    int date_owner_info_margin -> date_owner_info_margin
    int default_gear_space -> default_gear_space
    int dessert_case_cell_size -> dessert_case_cell_size
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int disappear_y_translation -> disappear_y_translation
    int docked_divider_handle_height -> docked_divider_handle_height
    int docked_divider_handle_width -> docked_divider_handle_width
    int docked_stack_divider_lift_elevation -> docked_stack_divider_lift_elevation
    int double_tap_slop -> double_tap_slop
    int dozing_stack_padding -> dozing_stack_padding
    int eca_overlap -> eca_overlap
    int edge_margin -> edge_margin
    int edge_tap_area_width -> edge_tap_area_width
    int fab_elevation -> fab_elevation
    int fab_margin -> fab_margin
    int fab_press_translation_z -> fab_press_translation_z
    int fab_size -> fab_size
    int fake_shadow_inset -> fake_shadow_inset
    int fake_shadow_size -> fake_shadow_size
    int fastscroll_default_thickness -> fastscroll_default_thickness
    int fastscroll_margin -> fastscroll_margin
    int fastscroll_minimum_range -> fastscroll_minimum_range
    int fingerprint_icon_additional_padding -> fingerprint_icon_additional_padding
    int framed_avatar_size -> framed_avatar_size
    int global_actions_panel_width -> global_actions_panel_width
    int global_actions_top_padding -> global_actions_top_padding
    int global_screenshot_bg_padding -> global_screenshot_bg_padding
    int glowpadview_glow_radius -> glowpadview_glow_radius
    int glowpadview_inner_radius -> glowpadview_inner_radius
    int go_to_full_shade_appearing_translation -> go_to_full_shade_appearing_translation
    int group_overflow_number_extra_padding_dark -> group_overflow_number_extra_padding_dark
    int group_overflow_number_padding -> group_overflow_number_padding
    int group_overflow_number_size -> group_overflow_number_size
    int group_overflow_number_size_dark -> group_overflow_number_size_dark
    int header_battery_margin_expanded -> header_battery_margin_expanded
    int header_battery_margin_keyguard -> header_battery_margin_keyguard
    int header_notifications_collide_distance -> header_notifications_collide_distance
    int heads_up_scrim_height -> heads_up_scrim_height
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int hint_alpha_material_dark -> hint_alpha_material_dark
    int hint_alpha_material_light -> hint_alpha_material_light
    int hint_grow_amount_sideways -> hint_grow_amount_sideways
    int hint_move_distance -> hint_move_distance
    int hint_pressed_alpha_material_dark -> hint_pressed_alpha_material_dark
    int hint_pressed_alpha_material_light -> hint_pressed_alpha_material_light
    int home_padding -> home_padding
    int hud_z -> hud_z
    int hwui_edge_margin -> hwui_edge_margin
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    int key_button_ripple_max_width -> key_button_ripple_max_width
    int keyguard_affordance_height -> keyguard_affordance_height
    int keyguard_affordance_icon_height -> keyguard_affordance_icon_height
    int keyguard_affordance_icon_width -> keyguard_affordance_icon_width
    int keyguard_affordance_min_background_radius -> keyguard_affordance_min_background_radius
    int keyguard_affordance_touch_target_size -> keyguard_affordance_touch_target_size
    int keyguard_affordance_width -> keyguard_affordance_width
    int keyguard_carrier_text_margin -> keyguard_carrier_text_margin
    int keyguard_clock_notifications_margin_max -> keyguard_clock_notifications_margin_max
    int keyguard_clock_notifications_margin_min -> keyguard_clock_notifications_margin_min
    int keyguard_drag_down_min_distance -> keyguard_drag_down_min_distance
    int keyguard_indication_bottom_padding -> keyguard_indication_bottom_padding
    int keyguard_indication_margin_bottom -> keyguard_indication_margin_bottom
    int keyguard_min_swipe_amount -> keyguard_min_swipe_amount
    int keyguard_security_height -> keyguard_security_height
    int keyguard_security_max_height -> keyguard_security_max_height
    int keyguard_security_view_lateral_margin -> keyguard_security_view_lateral_margin
    int keyguard_security_view_top_margin -> keyguard_security_view_top_margin
    int keyguard_security_width -> keyguard_security_width
    int keyguard_user_switcher_border_thickness -> keyguard_user_switcher_border_thickness
    int kg_status_line_font_size -> kg_status_line_font_size
    int ksh_item_margin_start -> ksh_item_margin_start
    int ksh_item_padding -> ksh_item_padding
    int ksh_item_text_size -> ksh_item_text_size
    int ksh_layout_width -> ksh_layout_width
    int lb_action_1_line_height -> lb_action_1_line_height
    int lb_action_2_lines_height -> lb_action_2_lines_height
    int lb_action_button_corner_radius -> lb_action_button_corner_radius
    int lb_action_icon_margin -> lb_action_icon_margin
    int lb_action_padding_horizontal -> lb_action_padding_horizontal
    int lb_action_text_size -> lb_action_text_size
    int lb_action_with_icon_padding_end -> lb_action_with_icon_padding_end
    int lb_action_with_icon_padding_start -> lb_action_with_icon_padding_start
    int lb_basic_card_content_text_size -> lb_basic_card_content_text_size
    int lb_basic_card_info_badge_margin -> lb_basic_card_info_badge_margin
    int lb_basic_card_info_badge_size -> lb_basic_card_info_badge_size
    int lb_basic_card_info_height -> lb_basic_card_info_height
    int lb_basic_card_info_height_no_content -> lb_basic_card_info_height_no_content
    int lb_basic_card_info_padding_bottom -> lb_basic_card_info_padding_bottom
    int lb_basic_card_info_padding_horizontal -> lb_basic_card_info_padding_horizontal
    int lb_basic_card_info_padding_top -> lb_basic_card_info_padding_top
    int lb_basic_card_info_text_margin -> lb_basic_card_info_text_margin
    int lb_basic_card_main_height -> lb_basic_card_main_height
    int lb_basic_card_main_width -> lb_basic_card_main_width
    int lb_basic_card_title_text_size -> lb_basic_card_title_text_size
    int lb_browse_expanded_row_no_hovercard_bottom_padding -> lb_browse_expanded_row_no_hovercard_bottom_padding
    int lb_browse_expanded_selected_row_top_padding -> lb_browse_expanded_selected_row_top_padding
    int lb_browse_header_description_text_size -> lb_browse_header_description_text_size
    int lb_browse_header_fading_length -> lb_browse_header_fading_length
    int lb_browse_header_height -> lb_browse_header_height
    int lb_browse_header_padding_end -> lb_browse_header_padding_end
    int lb_browse_header_select_duration -> lb_browse_header_select_duration
    int lb_browse_header_select_scale -> lb_browse_header_select_scale
    int lb_browse_header_text_size -> lb_browse_header_text_size
    int lb_browse_headers_vertical_spacing -> lb_browse_headers_vertical_spacing
    int lb_browse_headers_width -> lb_browse_headers_width
    int lb_browse_headers_z -> lb_browse_headers_z
    int lb_browse_item_horizontal_spacing -> lb_browse_item_horizontal_spacing
    int lb_browse_item_vertical_spacing -> lb_browse_item_vertical_spacing
    int lb_browse_padding_bottom -> lb_browse_padding_bottom
    int lb_browse_padding_end -> lb_browse_padding_end
    int lb_browse_padding_start -> lb_browse_padding_start
    int lb_browse_padding_top -> lb_browse_padding_top
    int lb_browse_row_hovercard_description_font_size -> lb_browse_row_hovercard_description_font_size
    int lb_browse_row_hovercard_max_width -> lb_browse_row_hovercard_max_width
    int lb_browse_row_hovercard_title_font_size -> lb_browse_row_hovercard_title_font_size
    int lb_browse_rows_fading_edge -> lb_browse_rows_fading_edge
    int lb_browse_rows_margin_start -> lb_browse_rows_margin_start
    int lb_browse_rows_margin_top -> lb_browse_rows_margin_top
    int lb_browse_section_header_text_size -> lb_browse_section_header_text_size
    int lb_browse_selected_row_top_padding -> lb_browse_selected_row_top_padding
    int lb_browse_title_height -> lb_browse_title_height
    int lb_browse_title_icon_height -> lb_browse_title_icon_height
    int lb_browse_title_icon_max_width -> lb_browse_title_icon_max_width
    int lb_browse_title_text_size -> lb_browse_title_text_size
    int lb_control_button_diameter -> lb_control_button_diameter
    int lb_control_button_height -> lb_control_button_height
    int lb_control_button_secondary_diameter -> lb_control_button_secondary_diameter
    int lb_control_button_secondary_height -> lb_control_button_secondary_height
    int lb_control_button_text_size -> lb_control_button_text_size
    int lb_control_icon_height -> lb_control_icon_height
    int lb_control_icon_width -> lb_control_icon_width
    int lb_details_cover_drawable_parallax_movement -> lb_details_cover_drawable_parallax_movement
    int lb_details_description_body_line_spacing -> lb_details_description_body_line_spacing
    int lb_details_description_body_text_size -> lb_details_description_body_text_size
    int lb_details_description_subtitle_text_size -> lb_details_description_subtitle_text_size
    int lb_details_description_title_baseline -> lb_details_description_title_baseline
    int lb_details_description_title_line_spacing -> lb_details_description_title_line_spacing
    int lb_details_description_title_padding_adjust_bottom -> lb_details_description_title_padding_adjust_bottom
    int lb_details_description_title_padding_adjust_top -> lb_details_description_title_padding_adjust_top
    int lb_details_description_title_resized_text_size -> lb_details_description_title_resized_text_size
    int lb_details_description_title_text_size -> lb_details_description_title_text_size
    int lb_details_description_under_subtitle_baseline_margin -> lb_details_description_under_subtitle_baseline_margin
    int lb_details_description_under_title_baseline_margin -> lb_details_description_under_title_baseline_margin
    int lb_details_overview_action_items_spacing -> lb_details_overview_action_items_spacing
    int lb_details_overview_action_select_duration -> lb_details_overview_action_select_duration
    int lb_details_overview_actions_fade_size -> lb_details_overview_actions_fade_size
    int lb_details_overview_actions_height -> lb_details_overview_actions_height
    int lb_details_overview_actions_padding_end -> lb_details_overview_actions_padding_end
    int lb_details_overview_actions_padding_start -> lb_details_overview_actions_padding_start
    int lb_details_overview_description_margin_bottom -> lb_details_overview_description_margin_bottom
    int lb_details_overview_description_margin_end -> lb_details_overview_description_margin_end
    int lb_details_overview_description_margin_start -> lb_details_overview_description_margin_start
    int lb_details_overview_description_margin_top -> lb_details_overview_description_margin_top
    int lb_details_overview_height_large -> lb_details_overview_height_large
    int lb_details_overview_height_small -> lb_details_overview_height_small
    int lb_details_overview_image_margin_horizontal -> lb_details_overview_image_margin_horizontal
    int lb_details_overview_image_margin_vertical -> lb_details_overview_image_margin_vertical
    int lb_details_overview_margin_bottom -> lb_details_overview_margin_bottom
    int lb_details_overview_margin_end -> lb_details_overview_margin_end
    int lb_details_overview_margin_start -> lb_details_overview_margin_start
    int lb_details_overview_z -> lb_details_overview_z
    int lb_details_rows_align_top -> lb_details_rows_align_top
    int lb_details_v2_actions_height -> lb_details_v2_actions_height
    int lb_details_v2_align_pos_for_actions -> lb_details_v2_align_pos_for_actions
    int lb_details_v2_align_pos_for_description -> lb_details_v2_align_pos_for_description
    int lb_details_v2_blank_height -> lb_details_v2_blank_height
    int lb_details_v2_card_height -> lb_details_v2_card_height
    int lb_details_v2_description_margin_end -> lb_details_v2_description_margin_end
    int lb_details_v2_description_margin_start -> lb_details_v2_description_margin_start
    int lb_details_v2_description_margin_top -> lb_details_v2_description_margin_top
    int lb_details_v2_left -> lb_details_v2_left
    int lb_details_v2_logo_margin_start -> lb_details_v2_logo_margin_start
    int lb_details_v2_logo_max_height -> lb_details_v2_logo_max_height
    int lb_details_v2_logo_max_width -> lb_details_v2_logo_max_width
    int lb_error_image_max_height -> lb_error_image_max_height
    int lb_error_message_max_width -> lb_error_message_max_width
    int lb_error_message_text_size -> lb_error_message_text_size
    int lb_error_under_image_baseline_margin -> lb_error_under_image_baseline_margin
    int lb_error_under_message_baseline_margin -> lb_error_under_message_baseline_margin
    int lb_guidedactions_elevation -> lb_guidedactions_elevation
    int lb_guidedactions_item_bottom_padding -> lb_guidedactions_item_bottom_padding
    int lb_guidedactions_item_checkmark_diameter -> lb_guidedactions_item_checkmark_diameter
    int lb_guidedactions_item_delimiter_padding -> lb_guidedactions_item_delimiter_padding
    int lb_guidedactions_item_description_font_size -> lb_guidedactions_item_description_font_size
    int lb_guidedactions_item_end_padding -> lb_guidedactions_item_end_padding
    int lb_guidedactions_item_icon_height -> lb_guidedactions_item_icon_height
    int lb_guidedactions_item_icon_width -> lb_guidedactions_item_icon_width
    int lb_guidedactions_item_space_between_title_and_description -> lb_guidedactions_item_space_between_title_and_description
    int lb_guidedactions_item_start_padding -> lb_guidedactions_item_start_padding
    int lb_guidedactions_item_text_width -> lb_guidedactions_item_text_width
    int lb_guidedactions_item_text_width_no_icon -> lb_guidedactions_item_text_width_no_icon
    int lb_guidedactions_item_title_font_size -> lb_guidedactions_item_title_font_size
    int lb_guidedactions_item_top_padding -> lb_guidedactions_item_top_padding
    int lb_guidedactions_list_padding_end -> lb_guidedactions_list_padding_end
    int lb_guidedactions_list_padding_start -> lb_guidedactions_list_padding_start
    int lb_guidedactions_list_vertical_spacing -> lb_guidedactions_list_vertical_spacing
    int lb_guidedactions_section_shadow_width -> lb_guidedactions_section_shadow_width
    int lb_guidedactions_sublist_bottom_margin -> lb_guidedactions_sublist_bottom_margin
    int lb_guidedactions_sublist_padding_bottom -> lb_guidedactions_sublist_padding_bottom
    int lb_guidedactions_sublist_padding_top -> lb_guidedactions_sublist_padding_top
    int lb_guidedactions_vertical_padding -> lb_guidedactions_vertical_padding
    int lb_guidedstep_slide_ime_distance -> lb_guidedstep_slide_ime_distance
    int lb_list_row_height -> lb_list_row_height
    int lb_material_shadow_details_z -> lb_material_shadow_details_z
    int lb_material_shadow_focused_z -> lb_material_shadow_focused_z
    int lb_material_shadow_normal_z -> lb_material_shadow_normal_z
    int lb_onboarding_content_margin_bottom -> lb_onboarding_content_margin_bottom
    int lb_onboarding_content_margin_top -> lb_onboarding_content_margin_top
    int lb_onboarding_content_width -> lb_onboarding_content_width
    int lb_onboarding_header_height -> lb_onboarding_header_height
    int lb_onboarding_header_margin_top -> lb_onboarding_header_margin_top
    int lb_onboarding_navigation_height -> lb_onboarding_navigation_height
    int lb_onboarding_start_button_height -> lb_onboarding_start_button_height
    int lb_onboarding_start_button_margin_bottom -> lb_onboarding_start_button_margin_bottom
    int lb_onboarding_start_button_translation_offset -> lb_onboarding_start_button_translation_offset
    int lb_page_indicator_arrow_gap -> lb_page_indicator_arrow_gap
    int lb_page_indicator_arrow_radius -> lb_page_indicator_arrow_radius
    int lb_page_indicator_arrow_shadow_offset -> lb_page_indicator_arrow_shadow_offset
    int lb_page_indicator_arrow_shadow_radius -> lb_page_indicator_arrow_shadow_radius
    int lb_page_indicator_dot_gap -> lb_page_indicator_dot_gap
    int lb_page_indicator_dot_radius -> lb_page_indicator_dot_radius
    int lb_playback_controls_card_height -> lb_playback_controls_card_height
    int lb_playback_controls_child_margin_bigger -> lb_playback_controls_child_margin_bigger
    int lb_playback_controls_child_margin_biggest -> lb_playback_controls_child_margin_biggest
    int lb_playback_controls_child_margin_default -> lb_playback_controls_child_margin_default
    int lb_playback_controls_margin_bottom -> lb_playback_controls_margin_bottom
    int lb_playback_controls_margin_end -> lb_playback_controls_margin_end
    int lb_playback_controls_margin_start -> lb_playback_controls_margin_start
    int lb_playback_controls_padding_bottom -> lb_playback_controls_padding_bottom
    int lb_playback_controls_time_text_size -> lb_playback_controls_time_text_size
    int lb_playback_controls_z -> lb_playback_controls_z
    int lb_playback_current_time_margin_start -> lb_playback_current_time_margin_start
    int lb_playback_description_margin_end -> lb_playback_description_margin_end
    int lb_playback_description_margin_start -> lb_playback_description_margin_start
    int lb_playback_description_margin_top -> lb_playback_description_margin_top
    int lb_playback_major_fade_translate_y -> lb_playback_major_fade_translate_y
    int lb_playback_media_item_radio_icon_size -> lb_playback_media_item_radio_icon_size
    int lb_playback_media_radio_width_with_padding -> lb_playback_media_radio_width_with_padding
    int lb_playback_media_row_details_selector_width -> lb_playback_media_row_details_selector_width
    int lb_playback_media_row_horizontal_padding -> lb_playback_media_row_horizontal_padding
    int lb_playback_media_row_radio_selector_width -> lb_playback_media_row_radio_selector_width
    int lb_playback_media_row_selector_round_rect_radius -> lb_playback_media_row_selector_round_rect_radius
    int lb_playback_media_row_separator_height -> lb_playback_media_row_separator_height
    int lb_playback_minor_fade_translate_y -> lb_playback_minor_fade_translate_y
    int lb_playback_now_playing_bar_height -> lb_playback_now_playing_bar_height
    int lb_playback_now_playing_bar_left_margin -> lb_playback_now_playing_bar_left_margin
    int lb_playback_now_playing_bar_margin -> lb_playback_now_playing_bar_margin
    int lb_playback_now_playing_bar_top_margin -> lb_playback_now_playing_bar_top_margin
    int lb_playback_now_playing_bar_width -> lb_playback_now_playing_bar_width
    int lb_playback_now_playing_view_size -> lb_playback_now_playing_view_size
    int lb_playback_other_rows_center_to_bottom -> lb_playback_other_rows_center_to_bottom
    int lb_playback_play_icon_size -> lb_playback_play_icon_size
    int lb_playback_time_padding_top -> lb_playback_time_padding_top
    int lb_playback_total_time_margin_end -> lb_playback_total_time_margin_end
    int lb_playback_transport_control_info_margin_bottom -> lb_playback_transport_control_info_margin_bottom
    int lb_playback_transport_control_row_padding_bottom -> lb_playback_transport_control_row_padding_bottom
    int lb_playback_transport_controlbar_margin_start -> lb_playback_transport_controlbar_margin_start
    int lb_playback_transport_hero_thumbs_height -> lb_playback_transport_hero_thumbs_height
    int lb_playback_transport_hero_thumbs_width -> lb_playback_transport_hero_thumbs_width
    int lb_playback_transport_image_height -> lb_playback_transport_image_height
    int lb_playback_transport_image_margin_end -> lb_playback_transport_image_margin_end
    int lb_playback_transport_progressbar_active_bar_height -> lb_playback_transport_progressbar_active_bar_height
    int lb_playback_transport_progressbar_active_radius -> lb_playback_transport_progressbar_active_radius
    int lb_playback_transport_progressbar_bar_height -> lb_playback_transport_progressbar_bar_height
    int lb_playback_transport_progressbar_height -> lb_playback_transport_progressbar_height
    int lb_playback_transport_thumbs_bottom_margin -> lb_playback_transport_thumbs_bottom_margin
    int lb_playback_transport_thumbs_height -> lb_playback_transport_thumbs_height
    int lb_playback_transport_thumbs_margin -> lb_playback_transport_thumbs_margin
    int lb_playback_transport_thumbs_width -> lb_playback_transport_thumbs_width
    int lb_playback_transport_time_margin -> lb_playback_transport_time_margin
    int lb_playback_transport_time_margin_top -> lb_playback_transport_time_margin_top
    int lb_rounded_rect_corner_radius -> lb_rounded_rect_corner_radius
    int lb_search_bar_edit_text_margin_start -> lb_search_bar_edit_text_margin_start
    int lb_search_bar_height -> lb_search_bar_height
    int lb_search_bar_hint_margin_start -> lb_search_bar_hint_margin_start
    int lb_search_bar_icon_height -> lb_search_bar_icon_height
    int lb_search_bar_icon_margin_start -> lb_search_bar_icon_margin_start
    int lb_search_bar_icon_width -> lb_search_bar_icon_width
    int lb_search_bar_inner_margin_bottom -> lb_search_bar_inner_margin_bottom
    int lb_search_bar_inner_margin_top -> lb_search_bar_inner_margin_top
    int lb_search_bar_items_height -> lb_search_bar_items_height
    int lb_search_bar_items_layout_margin_top -> lb_search_bar_items_layout_margin_top
    int lb_search_bar_items_margin_start -> lb_search_bar_items_margin_start
    int lb_search_bar_items_width -> lb_search_bar_items_width
    int lb_search_bar_padding_start -> lb_search_bar_padding_start
    int lb_search_bar_padding_top -> lb_search_bar_padding_top
    int lb_search_bar_speech_orb_margin_start -> lb_search_bar_speech_orb_margin_start
    int lb_search_bar_speech_orb_size -> lb_search_bar_speech_orb_size
    int lb_search_bar_text_size -> lb_search_bar_text_size
    int lb_search_bar_unfocused_text_size -> lb_search_bar_unfocused_text_size
    int lb_search_browse_row_padding_start -> lb_search_browse_row_padding_start
    int lb_search_browse_rows_align_top -> lb_search_browse_rows_align_top
    int lb_search_orb_focused_z -> lb_search_orb_focused_z
    int lb_search_orb_margin_bottom -> lb_search_orb_margin_bottom
    int lb_search_orb_margin_end -> lb_search_orb_margin_end
    int lb_search_orb_margin_start -> lb_search_orb_margin_start
    int lb_search_orb_margin_top -> lb_search_orb_margin_top
    int lb_search_orb_size -> lb_search_orb_size
    int lb_search_orb_unfocused_z -> lb_search_orb_unfocused_z
    int lb_vertical_grid_padding_bottom -> lb_vertical_grid_padding_bottom
    int managed_profile_toast_padding -> managed_profile_toast_padding
    int match_parent -> match_parent
    int max_avatar_size -> max_avatar_size
    int max_notification_fadeout_height -> max_notification_fadeout_height
    int max_v -> max_v
    int min_notification_layout_height -> min_notification_layout_height
    int min_stack_height -> min_stack_height
    int min_top_overscroll_to_qs -> min_top_overscroll_to_qs
    int mobile_data_icon_start_padding -> mobile_data_icon_start_padding
    int mobile_signal_group_end_padding -> mobile_signal_group_end_padding
    int moon_size -> moon_size
    int mr_controller_volume_group_list_item_height -> mr_controller_volume_group_list_item_height
    int mr_controller_volume_group_list_item_icon_size -> mr_controller_volume_group_list_item_icon_size
    int mr_controller_volume_group_list_max_height -> mr_controller_volume_group_list_max_height
    int mr_controller_volume_group_list_padding_top -> mr_controller_volume_group_list_padding_top
    int mr_dialog_fixed_width_major -> mr_dialog_fixed_width_major
    int mr_dialog_fixed_width_minor -> mr_dialog_fixed_width_minor
    int multi_user_avatar_collapsed_size -> multi_user_avatar_collapsed_size
    int multi_user_avatar_expanded_size -> multi_user_avatar_expanded_size
    int multi_user_avatar_keyguard_size -> multi_user_avatar_keyguard_size
    int multi_user_switch_collapsed_margin -> multi_user_switch_collapsed_margin
    int multi_user_switch_expanded_margin -> multi_user_switch_expanded_margin
    int multi_user_switch_keyguard_margin -> multi_user_switch_keyguard_margin
    int multi_user_switch_width_collapsed -> multi_user_switch_width_collapsed
    int multi_user_switch_width_expanded -> multi_user_switch_width_expanded
    int multi_user_switch_width_keyguard -> multi_user_switch_width_keyguard
    int nav_content_padding -> nav_content_padding
    int navbar_search_outerring_diameter -> navbar_search_outerring_diameter
    int navbar_search_outerring_radius -> navbar_search_outerring_radius
    int navbar_search_panel_height -> navbar_search_panel_height
    int navbar_search_snap_margin -> navbar_search_snap_margin
    int navigation_bar_deadzone_size -> navigation_bar_deadzone_size
    int navigation_bar_deadzone_size_max -> navigation_bar_deadzone_size_max
    int navigation_bar_height -> navigation_bar_height
    int navigation_bar_height_car_mode -> navigation_bar_height_car_mode
    int navigation_bar_min_swipe_distance -> navigation_bar_min_swipe_distance
    int navigation_bar_size -> navigation_bar_size
    int navigation_extra_key_width -> navigation_extra_key_width
    int navigation_key_padding -> navigation_key_padding
    int navigation_key_width -> navigation_key_width
    int navigation_side_padding -> navigation_side_padding
    int no_signal_cluster_battery_padding -> no_signal_cluster_battery_padding
    int notification_ambient_height -> notification_ambient_height
    int notification_children_container_divider_height -> notification_children_container_divider_height
    int notification_children_container_header_height -> notification_children_container_header_height
    int notification_children_container_margin_top -> notification_children_container_margin_top
    int notification_children_container_top_padding -> notification_children_container_top_padding
    int notification_children_padding -> notification_children_padding
    int notification_divider_alpha -> notification_divider_alpha
    int notification_divider_height -> notification_divider_height
    int notification_divider_height_increased -> notification_divider_height_increased
    int notification_header_height -> notification_header_height
    int notification_icon_appear_padding -> notification_icon_appear_padding
    int notification_icon_transform_content_shift -> notification_icon_transform_content_shift
    int notification_max_heads_up_height -> notification_max_heads_up_height
    int notification_max_heads_up_height_increased -> notification_max_heads_up_height_increased
    int notification_max_heads_up_height_legacy -> notification_max_heads_up_height_legacy
    int notification_max_height -> notification_max_height
    int notification_menu_icon_padding -> notification_menu_icon_padding
    int notification_menu_icon_size -> notification_menu_icon_size
    int notification_min_height -> notification_min_height
    int notification_min_height_increased -> notification_min_height_increased
    int notification_min_height_legacy -> notification_min_height_legacy
    int notification_min_interaction_height -> notification_min_interaction_height
    int notification_panel_margin_bottom -> notification_panel_margin_bottom
    int notification_panel_margin_top -> notification_panel_margin_top
    int notification_panel_min_height -> notification_panel_min_height
    int notification_panel_min_height_frac -> notification_panel_min_height_frac
    int notification_panel_min_side_margin -> notification_panel_min_side_margin
    int notification_panel_width -> notification_panel_width
    int notification_scrim_wait_distance -> notification_scrim_wait_distance
    int notification_shadow_radius -> notification_shadow_radius
    int notification_shelf_height -> notification_shelf_height
    int obstacle_gap -> obstacle_gap
    int obstacle_height_min -> obstacle_height_min
    int obstacle_spacing -> obstacle_spacing
    int obstacle_stem_width -> obstacle_stem_width
    int obstacle_width -> obstacle_width
    int obstacle_z -> obstacle_z
    int one_finger_pop_limit -> one_finger_pop_limit
    int overflow_dot_radius -> overflow_dot_radius
    int overflow_icon_dot_padding -> overflow_icon_dot_padding
    int panel_float -> panel_float
    int password_char_padding -> password_char_padding
    int password_dot_size -> password_dot_size
    int peek_height -> peek_height
    int peek_window_y_offset -> peek_window_y_offset
    int picker_column_horizontal_padding -> picker_column_horizontal_padding
    int picker_item_height -> picker_item_height
    int picker_item_spacing -> picker_item_spacing
    int picker_separator_horizontal_padding -> picker_separator_horizontal_padding
    int picture_in_picture_button_start_margin -> picture_in_picture_button_start_margin
    int picture_in_picture_button_width -> picture_in_picture_button_width
    int pip_action_padding -> pip_action_padding
    int pip_action_size -> pip_action_size
    int pip_between_action_padding_land -> pip_between_action_padding_land
    int pip_dismiss_gradient_height -> pip_dismiss_gradient_height
    int pip_dismiss_text_bottom_margin -> pip_dismiss_text_bottom_margin
    int pip_expand_container_edge_margin -> pip_expand_container_edge_margin
    int pip_expanded_shortest_edge_size -> pip_expanded_shortest_edge_size
    int pip_ime_offset -> pip_ime_offset
    int player_hit_size -> player_hit_size
    int player_size -> player_size
    int player_z -> player_z
    int player_z_boost -> player_z_boost
    int preference_icon_minWidth -> preference_icon_minWidth
    int preference_no_icon_padding_start -> preference_no_icon_padding_start
    int preference_seekbar_padding_end -> preference_seekbar_padding_end
    int preference_seekbar_padding_start -> preference_seekbar_padding_start
    int preference_seekbar_value_width -> preference_seekbar_value_width
    int pull_span_min -> pull_span_min
    int qs_battery_padding -> qs_battery_padding
    int qs_brightness_padding_top -> qs_brightness_padding_top
    int qs_data_usage_text_size -> qs_data_usage_text_size
    int qs_data_usage_usage_text_size -> qs_data_usage_usage_text_size
    int qs_date_collapsed_size -> qs_date_collapsed_size
    int qs_date_time_translation -> qs_date_time_translation
    int qs_detail_back_margin_end -> qs_detail_back_margin_end
    int qs_detail_button_text_size -> qs_detail_button_text_size
    int qs_detail_empty_text_size -> qs_detail_empty_text_size
    int qs_detail_header_height -> qs_detail_header_height
    int qs_detail_header_padding -> qs_detail_header_padding
    int qs_detail_header_text_padding -> qs_detail_header_text_padding
    int qs_detail_header_text_size -> qs_detail_header_text_size
    int qs_detail_icon_overlay_size -> qs_detail_icon_overlay_size
    int qs_detail_image_height -> qs_detail_image_height
    int qs_detail_image_padding -> qs_detail_image_padding
    int qs_detail_image_width -> qs_detail_image_width
    int qs_detail_item_height -> qs_detail_item_height
    int qs_detail_item_icon_marginEnd -> qs_detail_item_icon_marginEnd
    int qs_detail_item_icon_marginStart -> qs_detail_item_icon_marginStart
    int qs_detail_item_icon_size -> qs_detail_item_icon_size
    int qs_detail_item_icon_width -> qs_detail_item_icon_width
    int qs_detail_item_primary_text_size -> qs_detail_item_primary_text_size
    int qs_detail_item_secondary_text_size -> qs_detail_item_secondary_text_size
    int qs_detail_items_padding_top -> qs_detail_items_padding_top
    int qs_detail_margin_top -> qs_detail_margin_top
    int qs_detail_padding_start -> qs_detail_padding_start
    int qs_dual_tile_height -> qs_dual_tile_height
    int qs_dual_tile_padding_horizontal -> qs_dual_tile_padding_horizontal
    int qs_dual_tile_padding_vertical -> qs_dual_tile_padding_vertical
    int qs_emergency_calls_only_text_size -> qs_emergency_calls_only_text_size
    int qs_falsing_threshold -> qs_falsing_threshold
    int qs_footer_dialog_icon_margin -> qs_footer_dialog_icon_margin
    int qs_footer_dialog_icon_size -> qs_footer_dialog_icon_size
    int qs_footer_dialog_subtitle_padding -> qs_footer_dialog_subtitle_padding
    int qs_footer_height -> qs_footer_height
    int qs_footer_icon_size -> qs_footer_icon_size
    int qs_footer_padding_end -> qs_footer_padding_end
    int qs_footer_padding_start -> qs_footer_padding_start
    int qs_header_gear_translation -> qs_header_gear_translation
    int qs_header_system_icons_area_height -> qs_header_system_icons_area_height
    int qs_page_indicator_height -> qs_page_indicator_height
    int qs_page_indicator_width -> qs_page_indicator_width
    int qs_panel_padding -> qs_panel_padding
    int qs_panel_padding_bottom -> qs_panel_padding_bottom
    int qs_panel_width -> qs_panel_width
    int qs_peek_height -> qs_peek_height
    int qs_quick_tile_padding -> qs_quick_tile_padding
    int qs_quick_tile_size -> qs_quick_tile_size
    int qs_tile_divider_height -> qs_tile_divider_height
    int qs_tile_height -> qs_tile_height
    int qs_tile_icon_size -> qs_tile_icon_size
    int qs_tile_margin -> qs_tile_margin
    int qs_tile_margin_top -> qs_tile_margin_top
    int qs_tile_padding_below_icon -> qs_tile_padding_below_icon
    int qs_tile_padding_bottom -> qs_tile_padding_bottom
    int qs_tile_padding_top -> qs_tile_padding_top
    int qs_tile_padding_top_large_text -> qs_tile_padding_top_large_text
    int qs_tile_spacing -> qs_tile_spacing
    int qs_tile_text_size -> qs_tile_text_size
    int qs_time_collapsed_size -> qs_time_collapsed_size
    int qs_time_expanded_size -> qs_time_expanded_size
    int recents_drag_hint_text_size -> recents_drag_hint_text_size
    int recents_fast_fling_velocity -> recents_fast_fling_velocity
    int recents_fling_overscroll_distance -> recents_fling_overscroll_distance
    int recents_freeform_layout_bottom_margin -> recents_freeform_layout_bottom_margin
    int recents_freeform_layout_task_padding -> recents_freeform_layout_task_padding
    int recents_grid_padding_left_right -> recents_grid_padding_left_right
    int recents_grid_padding_task_view -> recents_grid_padding_task_view
    int recents_grid_padding_top_bottom -> recents_grid_padding_top_bottom
    int recents_grid_task_view_focused_frame_rounded_corners_radius -> recents_grid_task_view_focused_frame_rounded_corners_radius
    int recents_grid_task_view_focused_frame_thickness -> recents_grid_task_view_focused_frame_thickness
    int recents_grid_task_view_header_button_padding -> recents_grid_task_view_header_button_padding
    int recents_grid_task_view_header_height -> recents_grid_task_view_header_height
    int recents_grid_task_view_rounded_corners_radius -> recents_grid_task_view_rounded_corners_radius
    int recents_layout_bottom_margin -> recents_layout_bottom_margin
    int recents_layout_bottom_peek_size -> recents_layout_bottom_peek_size
    int recents_layout_initial_bottom_offset_phone_land -> recents_layout_initial_bottom_offset_phone_land
    int recents_layout_initial_bottom_offset_phone_port -> recents_layout_initial_bottom_offset_phone_port
    int recents_layout_initial_bottom_offset_tablet -> recents_layout_initial_bottom_offset_tablet
    int recents_layout_initial_top_offset_phone_land -> recents_layout_initial_top_offset_phone_land
    int recents_layout_initial_top_offset_phone_port -> recents_layout_initial_top_offset_phone_port
    int recents_layout_initial_top_offset_tablet -> recents_layout_initial_top_offset_tablet
    int recents_layout_min_margin -> recents_layout_min_margin
    int recents_layout_side_margin_phone -> recents_layout_side_margin_phone
    int recents_layout_side_margin_tablet -> recents_layout_side_margin_tablet
    int recents_layout_side_margin_tablet_docked -> recents_layout_side_margin_tablet_docked
    int recents_layout_side_margin_tablet_xlarge -> recents_layout_side_margin_tablet_xlarge
    int recents_layout_side_margin_tablet_xlarge_docked -> recents_layout_side_margin_tablet_xlarge_docked
    int recents_layout_top_margin_phone -> recents_layout_top_margin_phone
    int recents_layout_top_margin_tablet -> recents_layout_top_margin_tablet
    int recents_layout_top_margin_tablet_xlarge -> recents_layout_top_margin_tablet_xlarge
    int recents_layout_top_peek_size -> recents_layout_top_peek_size
    int recents_layout_z_max -> recents_layout_z_max
    int recents_layout_z_min -> recents_layout_z_min
    int recents_lock_to_app_icon_size -> recents_lock_to_app_icon_size
    int recents_lock_to_app_size -> recents_lock_to_app_size
    int recents_recents_row_dim_alpha -> recents_recents_row_dim_alpha
    int recents_task_affiliation_color_min_alpha_percentage -> recents_task_affiliation_color_min_alpha_percentage
    int recents_task_stack_animation_affiliate_enter_offset -> recents_task_stack_animation_affiliate_enter_offset
    int recents_task_stack_animation_launched_while_docking_offset -> recents_task_stack_animation_launched_while_docking_offset
    int recents_task_view_header_button_padding -> recents_task_view_header_button_padding
    int recents_task_view_header_button_padding_tablet_land -> recents_task_view_header_button_padding_tablet_land
    int recents_task_view_header_height -> recents_task_view_header_height
    int recents_task_view_header_height_tablet_land -> recents_task_view_header_height_tablet_land
    int recents_task_view_highlight -> recents_task_view_highlight
    int recents_task_view_remove_anim_translation_x -> recents_task_view_remove_anim_translation_x
    int recents_task_view_rounded_corners_radius -> recents_task_view_rounded_corners_radius
    int recents_task_view_shadow_rounded_corners_radius -> recents_task_view_shadow_rounded_corners_radius
    int restricted_icon_padding -> restricted_icon_padding
    int restricted_icon_size -> restricted_icon_size
    int restricted_padlock_pading -> restricted_padlock_pading
    int rounded_corner_content_padding -> rounded_corner_content_padding
    int rounded_corner_radius -> rounded_corner_radius
    int scenery_z -> scenery_z
    int screen_pinning_nav_highlight_outer_size -> screen_pinning_nav_highlight_outer_size
    int screen_pinning_nav_highlight_size -> screen_pinning_nav_highlight_size
    int screen_pinning_request_button_height -> screen_pinning_request_button_height
    int screen_pinning_request_button_width -> screen_pinning_request_button_width
    int screen_pinning_request_frame_padding -> screen_pinning_request_frame_padding
    int screen_pinning_request_inner_padding -> screen_pinning_request_inner_padding
    int screen_pinning_request_nav_icon_padding -> screen_pinning_request_nav_icon_padding
    int screen_pinning_request_nav_side_padding -> screen_pinning_request_nav_side_padding
    int screen_pinning_request_seascape_button_offset -> screen_pinning_request_seascape_button_offset
    int screen_pinning_request_seascape_padding_negative -> screen_pinning_request_seascape_padding_negative
    int screen_pinning_request_side_width -> screen_pinning_request_side_width
    int screen_pinning_request_width -> screen_pinning_request_width
    int scrim_behind_alpha -> scrim_behind_alpha
    int scroll_fast_threshold -> scroll_fast_threshold
    int secondary_telephony_padding -> secondary_telephony_padding
    int segmented_button_spacing -> segmented_button_spacing
    int shelf_icon_container_padding -> shelf_icon_container_padding
    int signal_cluster_battery_padding -> signal_cluster_battery_padding
    int signal_cluster_margin_start -> signal_cluster_margin_start
    int signal_icon_size -> signal_icon_size
    int snooze_option_padding -> snooze_option_padding
    int snooze_option_text_size -> snooze_option_text_size
    int snooze_snackbar_min_height -> snooze_snackbar_min_height
    int speed_bump_height -> speed_bump_height
    int standard_notification_panel_width -> standard_notification_panel_width
    int star_size_max -> star_size_max
    int star_size_min -> star_size_min
    int stat_sys_mobile_signal_circle_inset -> stat_sys_mobile_signal_circle_inset
    int stat_sys_mobile_signal_corner_radius -> stat_sys_mobile_signal_corner_radius
    int status_bar_airplane_spacer_width -> status_bar_airplane_spacer_width
    int status_bar_battery_icon_height -> status_bar_battery_icon_height
    int status_bar_battery_icon_width -> status_bar_battery_icon_width
    int status_bar_clock_end_padding -> status_bar_clock_end_padding
    int status_bar_clock_size -> status_bar_clock_size
    int status_bar_clock_starting_padding -> status_bar_clock_starting_padding
    int status_bar_connected_device_bt_indicator_size -> status_bar_connected_device_bt_indicator_size
    int status_bar_connected_device_signal_margin_end -> status_bar_connected_device_signal_margin_end
    int status_bar_header_height -> status_bar_header_height
    int status_bar_header_height_expanded -> status_bar_header_height_expanded
    int status_bar_header_height_keyguard -> status_bar_header_height_keyguard
    int status_bar_header_padding_bottom -> status_bar_header_padding_bottom
    int status_bar_height -> status_bar_height
    int status_bar_icon_drawing_alpha -> status_bar_icon_drawing_alpha
    int status_bar_icon_drawing_size -> status_bar_icon_drawing_size
    int status_bar_icon_drawing_size_dark -> status_bar_icon_drawing_size_dark
    int status_bar_icon_padding -> status_bar_icon_padding
    int status_bar_icon_scale_factor -> status_bar_icon_scale_factor
    int status_bar_icon_size -> status_bar_icon_size
    int status_bar_padding_start -> status_bar_padding_start
    int status_bar_wifi_signal_spacer_width -> status_bar_wifi_signal_spacer_width
    int sun_size -> sun_size
    int swipe_helper_falsing_threshold -> swipe_helper_falsing_threshold
    int system_icons_keyguard_padding_end -> system_icons_keyguard_padding_end
    int system_icons_super_container_avatarless_margin_end -> system_icons_super_container_avatarless_margin_end
    int system_icons_super_container_margin_start -> system_icons_super_container_margin_start
    int system_icons_switcher_hidden_expanded_margin -> system_icons_switcher_hidden_expanded_margin
    int tooltip_corner_radius -> tooltip_corner_radius
    int tooltip_horizontal_padding -> tooltip_horizontal_padding
    int tooltip_margin -> tooltip_margin
    int tooltip_precise_anchor_extra_offset -> tooltip_precise_anchor_extra_offset
    int tooltip_precise_anchor_threshold -> tooltip_precise_anchor_threshold
    int tooltip_vertical_padding -> tooltip_vertical_padding
    int tooltip_y_offset_non_touch -> tooltip_y_offset_non_touch
    int tooltip_y_offset_touch -> tooltip_y_offset_touch
    int top_padding -> top_padding
    int translation_per_sec -> translation_per_sec
    int trust_circle_inner_radius_enter -> trust_circle_inner_radius_enter
    int trust_circle_inner_radius_exit -> trust_circle_inner_radius_exit
    int trust_circle_inner_radius_visible_max -> trust_circle_inner_radius_visible_max
    int trust_circle_inner_radius_visible_min -> trust_circle_inner_radius_visible_min
    int trust_circle_thickness -> trust_circle_thickness
    int unlock_falsing_threshold -> unlock_falsing_threshold
    int unlock_move_distance -> unlock_move_distance
    int usage_graph_area_height -> usage_graph_area_height
    int usage_graph_divider_size -> usage_graph_divider_size
    int usage_graph_dot_interval -> usage_graph_dot_interval
    int usage_graph_dot_size -> usage_graph_dot_size
    int usage_graph_labels_padding -> usage_graph_labels_padding
    int usage_graph_labels_width -> usage_graph_labels_width
    int usage_graph_line_corner_radius -> usage_graph_line_corner_radius
    int usage_graph_line_width -> usage_graph_line_width
    int usage_graph_margin_top_bottom -> usage_graph_margin_top_bottom
    int user_icon_view_height -> user_icon_view_height
    int user_spinner_height -> user_spinner_height
    int user_spinner_item_height -> user_spinner_item_height
    int user_spinner_padding -> user_spinner_padding
    int user_spinner_padding_sides -> user_spinner_padding_sides
    int volume_button_size -> volume_button_size
    int volume_dialog_margin_bottom -> volume_dialog_margin_bottom
    int volume_dialog_padding_end -> volume_dialog_padding_end
    int volume_dialog_padding_top -> volume_dialog_padding_top
    int volume_dialog_panel_width -> volume_dialog_panel_width
    int volume_expander_margin_end -> volume_expander_margin_end
    int volume_expander_margin_top -> volume_expander_margin_top
    int volume_offset_top -> volume_offset_top
    int volume_row_header_padding_start -> volume_row_header_padding_start
    int volume_row_height -> volume_row_height
    int volume_row_padding_bottom -> volume_row_padding_bottom
    int volume_row_padding_start -> volume_row_padding_start
    int volume_row_slider_height -> volume_row_slider_height
    int volume_row_slider_padding_start -> volume_row_slider_padding_start
    int volume_slider_interspacing -> volume_slider_interspacing
    int wide_type_icon_start_padding -> wide_type_icon_start_padding
    int wide_type_icon_start_padding_qs -> wide_type_icon_start_padding_qs
    int widget_big_font_size -> widget_big_font_size
    int widget_label_font_size -> widget_label_font_size
    int wifi_preference_badge_padding -> wifi_preference_badge_padding
    int z_distance_between_notifications -> z_distance_between_notifications
    int zen_mode_condition_detail_bottom_padding -> zen_mode_condition_detail_bottom_padding
    int zen_mode_condition_detail_button_padding -> zen_mode_condition_detail_button_padding
    int zen_mode_condition_detail_item_interline_spacing -> zen_mode_condition_detail_item_interline_spacing
    int zen_mode_condition_detail_item_spacing -> zen_mode_condition_detail_item_spacing
    void <init>() -> <init>
com.android.systemui.doze.DozeLog$1 -> com.android.systemui.doze.DozeLog$1:
    void <init>() -> <init>
    void onEmergencyCallAction() -> onEmergencyCallAction
    void onFinishedGoingToSleep(int) -> onFinishedGoingToSleep
    void onKeyguardBouncerChanged(boolean) -> onKeyguardBouncerChanged
    void onKeyguardVisibilityChanged(boolean) -> onKeyguardVisibilityChanged
    void onStartedWakingUp() -> onStartedWakingUp
com.android.keyguard.KeyguardEsimArea -> com.android.keyguard.KeyguardEsimArea:
    android.telephony.euicc.EuiccManager mEuiccManager -> mEuiccManager
    android.content.BroadcastReceiver mReceiver -> mReceiver
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    boolean isEsimLocked(android.content.Context,int) -> isEsimLocked
    void onAttachedToWindow() -> onAttachedToWindow
    void onClick(android.view.View) -> onClick
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.systemui.statusbar.car.CarBatteryController -> com.android.systemui.statusbar.car.CarBatteryController:
    android.bluetooth.BluetoothAdapter mAdapter -> mAdapter
    com.android.systemui.statusbar.car.CarBatteryController$BatteryViewHandler mBatteryViewHandler -> mBatteryViewHandler
    android.bluetooth.BluetoothHeadsetClient mBluetoothHeadsetClient -> mBluetoothHeadsetClient
    java.util.ArrayList mChangeCallbacks -> mChangeCallbacks
    android.content.Context mContext -> mContext
    android.bluetooth.BluetoothProfile$ServiceListener mHfpServiceListener -> mHfpServiceListener
    int mLevel -> mLevel
    void <init>(android.content.Context) -> <init>
    void addBatteryViewHandler(com.android.systemui.statusbar.car.CarBatteryController$BatteryViewHandler) -> addBatteryViewHandler
    void addCallback(com.android.systemui.statusbar.policy.BatteryController$BatteryStateChangeCallback) -> addCallback
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean isPowerSave() -> isPowerSave
    void notifyBatteryLevelChanged() -> notifyBatteryLevelChanged
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void removeCallback(com.android.systemui.statusbar.policy.BatteryController$BatteryStateChangeCallback) -> removeCallback
    void setPowerSaveMode(boolean) -> setPowerSaveMode
    void startListening() -> startListening
    void updateBatteryIcon(android.bluetooth.BluetoothDevice,int) -> updateBatteryIcon
    void updateBatteryLevel(int) -> updateBatteryLevel
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    android.bluetooth.BluetoothHeadsetClient -set0(com.android.systemui.statusbar.car.CarBatteryController,android.bluetooth.BluetoothHeadsetClient) -> -set0
com.android.systemui.tuner.PluginFragment$PluginPreference -> com.android.systemui.tuner.PluginFragment$PluginPreference:
    boolean mHasSettings -> mHasSettings
    android.content.pm.PackageInfo mInfo -> mInfo
    android.content.pm.PackageManager mPm -> mPm
    void <init>(android.content.Context,android.content.pm.PackageInfo) -> <init>
    boolean isPluginEnabled() -> isPluginEnabled
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    boolean persistBoolean(boolean) -> persistBoolean
    void lambda$-com_android_systemui_tuner_PluginFragment$PluginPreference_7674(android.view.View) -> lambda$-com_android_systemui_tuner_PluginFragment$PluginPreference_7674
    boolean lambda$-com_android_systemui_tuner_PluginFragment$PluginPreference_8240(android.view.View) -> lambda$-com_android_systemui_tuner_PluginFragment$PluginPreference_8240
com.android.systemui.statusbar.phone.UserAvatarView -> com.android.systemui.statusbar.phone.UserAvatarView:
    com.android.settingslib.drawable.UserIconDrawable mDrawable -> mDrawable
    void setAvatarWithBadge(android.graphics.Bitmap,int) -> setAvatarWithBadge
    void setDrawableWithBadge(android.graphics.drawable.Drawable,int) -> setDrawableWithBadge
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setAvatarPadding(float) -> setAvatarPadding
    void setBadgeDiameter(float) -> setBadgeDiameter
    void setBadgeMargin(float) -> setBadgeMargin
    void setFrameColor(android.content.res.ColorStateList) -> setFrameColor
    void setFramePadding(float) -> setFramePadding
    void setFrameWidth(float) -> setFrameWidth
android.support.v7.widget.FastScroller$2 -> android.support.v7.widget.FastScroller$2:
    android.support.v7.widget.FastScroller this$0 -> this$0
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
    void <init>(android.support.v7.widget.FastScroller) -> <init>
android.support.v7.app.MediaRouteControllerDialog$VolumeGroupAdapter -> android.support.v7.app.MediaRouteControllerDialog$VolumeGroupAdapter:
    float mDisabledAlpha -> mDisabledAlpha
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteControllerDialog,android.content.Context,java.util.List) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled(int) -> isEnabled
com.android.systemui.GuestResumeSessionReceiver -> com.android.systemui.GuestResumeSessionReceiver:
    android.app.Dialog mNewSessionDialog -> mNewSessionDialog
    void <init>() -> <init>
    void register(android.content.Context) -> register
    void cancelDialog() -> cancelDialog
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void wipeGuestSession(android.content.Context,int) -> wipeGuestSession
    void -wrap0(android.content.Context,int) -> -wrap0
com.android.systemui.statusbar.notification.NotificationDozeHelper$1 -> com.android.systemui.statusbar.notification.NotificationDozeHelper$1:
    com.android.systemui.statusbar.notification.NotificationDozeHelper this$0 -> this$0
    android.widget.ImageView val$target -> val$target
    void <init>(com.android.systemui.statusbar.notification.NotificationDozeHelper,android.widget.ImageView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionView(int) -> setActionView
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    java.lang.CharSequence getTooltipText() -> getTooltipText
    boolean expandActionView() -> expandActionView
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    int getNumericModifiers() -> getNumericModifiers
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    boolean collapseActionView() -> collapseActionView
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
com.android.systemui.statusbar.stack.ViewState$6 -> com.android.systemui.statusbar.stack.ViewState$6:
    com.android.systemui.statusbar.stack.ViewState this$0 -> this$0
    android.view.View val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ViewState,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v17.leanback.widget.GridLayoutManager$GridLinearSmoothScroller -> android.support.v17.leanback.widget.GridLayoutManager$GridLinearSmoothScroller:
    android.support.v17.leanback.widget.GridLayoutManager this$0 -> this$0
    void onStop() -> onStop
    void <init>(android.support.v17.leanback.widget.GridLayoutManager) -> <init>
    int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
com.android.keyguard.PasswordTextView$CharState$5 -> com.android.keyguard.PasswordTextView$CharState$5:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v17.leanback.widget.PlaybackControlsRowView$OnUnhandledKeyListener -> android.support.v17.leanback.widget.PlaybackControlsRowView$OnUnhandledKeyListener:
    boolean onUnhandledKey(android.view.KeyEvent) -> onUnhandledKey
com.android.systemui.RecentsComponent -> com.android.systemui.RecentsComponent:
    boolean dockTopTask(int,int,android.graphics.Rect,int) -> dockTopTask
    void onDraggingInRecents(float) -> onDraggingInRecents
    void onDraggingInRecentsEnded(float) -> onDraggingInRecentsEnded
    void showNextAffiliatedTask() -> showNextAffiliatedTask
    void showPrevAffiliatedTask() -> showPrevAffiliatedTask
com.android.systemui.qs.tiles.WorkModeTile -> com.android.systemui.qs.tiles.WorkModeTile:
    com.android.systemui.plugins.qs.QSTile$Icon mIcon -> mIcon
    com.android.systemui.statusbar.phone.ManagedProfileController mProfileController -> mProfileController
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void onManagedProfileChanged() -> onManagedProfileChanged
    void onManagedProfileRemoved() -> onManagedProfileRemoved
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
com.android.systemui.keyguard.WorkLockActivityController$1 -> com.android.systemui.keyguard.WorkLockActivityController$1:
    com.android.systemui.keyguard.WorkLockActivityController this$0 -> this$0
    void <init>(com.android.systemui.keyguard.WorkLockActivityController) -> <init>
    void onTaskProfileLocked(int,int) -> onTaskProfileLocked
com.android.systemui.volume.VolumeDialogImpl$4 -> com.android.systemui.volume.VolumeDialogImpl$4:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl) -> <init>
    boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$5 -> com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$5:
    int -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(int,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.power.-$Lambda$ukbeS6xX0pOVxqPgAJOxY1C8Mmc -> com.android.systemui.power.-$Lambda$ukbeS6xX0pOVxqPgAJOxY1C8Mmc:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.content.DialogInterface) -> $m$0
    void $m$1(android.content.DialogInterface) -> $m$1
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.systemui.recents.views.-$Lambda$WwZGxqla_6RESRnuRvIBkLf5Lio -> com.android.systemui.recents.views.-$Lambda$WwZGxqla_6RESRnuRvIBkLf5Lio:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void run() -> run
com.android.systemui.volume.MediaSessions$MediaControllerRecord -> com.android.systemui.volume.MediaSessions$MediaControllerRecord:
    android.media.session.MediaController controller -> controller
    java.lang.String name -> name
    boolean sentRemote -> sentRemote
    com.android.systemui.volume.MediaSessions this$0 -> this$0
    void <init>(com.android.systemui.volume.MediaSessions,android.media.session.MediaController) -> <init>
    java.lang.String cb(java.lang.String) -> cb
    void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    android.media.session.MediaController -get0(com.android.systemui.volume.MediaSessions$MediaControllerRecord) -> -get0
    java.lang.String -get1(com.android.systemui.volume.MediaSessions$MediaControllerRecord) -> -get1
    boolean -get2(com.android.systemui.volume.MediaSessions$MediaControllerRecord) -> -get2
    java.lang.String -set0(com.android.systemui.volume.MediaSessions$MediaControllerRecord,java.lang.String) -> -set0
    boolean -set1(com.android.systemui.volume.MediaSessions$MediaControllerRecord,boolean) -> -set1
    void <init>(com.android.systemui.volume.MediaSessions,android.media.session.MediaController,com.android.systemui.volume.MediaSessions$MediaControllerRecord) -> <init>
android.support.v7.widget.GapWorker$1 -> android.support.v7.widget.GapWorker$1:
    void <init>() -> <init>
    int compare(android.support.v7.widget.GapWorker$Task,android.support.v7.widget.GapWorker$Task) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.volume.VolumeDialogControllerImpl$SettingObserver -> com.android.systemui.volume.VolumeDialogControllerImpl$SettingObserver:
    android.net.Uri ZEN_MODE_CONFIG_URI -> ZEN_MODE_CONFIG_URI
    android.net.Uri ZEN_MODE_URI -> ZEN_MODE_URI
    com.android.systemui.volume.VolumeDialogControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl,android.os.Handler) -> <init>
    void init() -> init
    void onChange(boolean,android.net.Uri) -> onChange
android.support.v7.preference.DropDownPreference$1 -> android.support.v7.preference.DropDownPreference$1:
    android.support.v7.preference.DropDownPreference this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void <init>(android.support.v7.preference.DropDownPreference) -> <init>
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.android.systemui.assist.AssistOrbView -> com.android.systemui.assist.AssistOrbView:
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    int mBaseMargin -> mBaseMargin
    float mCircleAnimationEndValue -> mCircleAnimationEndValue
    android.animation.ValueAnimator mCircleAnimator -> mCircleAnimator
    int mCircleMinSize -> mCircleMinSize
    android.graphics.Rect mCircleRect -> mCircleRect
    float mCircleSize -> mCircleSize
    android.animation.ValueAnimator$AnimatorUpdateListener mCircleUpdateListener -> mCircleUpdateListener
    android.animation.AnimatorListenerAdapter mClearAnimatorListener -> mClearAnimatorListener
    boolean mClipToOutline -> mClipToOutline
    android.widget.ImageView mLogo -> mLogo
    int mMaxElevation -> mMaxElevation
    float mOffset -> mOffset
    android.animation.ValueAnimator mOffsetAnimator -> mOffsetAnimator
    android.animation.ValueAnimator$AnimatorUpdateListener mOffsetUpdateListener -> mOffsetUpdateListener
    float mOutlineAlpha -> mOutlineAlpha
    android.view.animation.Interpolator mOvershootInterpolator -> mOvershootInterpolator
    int mStaticOffset -> mStaticOffset
    android.graphics.Rect mStaticRect -> mStaticRect
    android.widget.ImageView getLogo() -> getLogo
    void reset() -> reset
    void startEnterAnimation() -> startEnterAnimation
    void startExitAnimation(long) -> startExitAnimation
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void animateCircleSize(float,long,long,android.view.animation.Interpolator) -> animateCircleSize
    void animateOffset(float,long,long,android.view.animation.Interpolator) -> animateOffset
    void applyCircleSize(float) -> applyCircleSize
    void drawBackground(android.graphics.Canvas) -> drawBackground
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onDraw(android.graphics.Canvas) -> onDraw
    void onFinishInflate() -> onFinishInflate
    void onLayout(boolean,int,int,int,int) -> onLayout
    void updateCircleRect() -> updateCircleRect
    void updateCircleRect(android.graphics.Rect,float,boolean) -> updateCircleRect
    void updateClipping() -> updateClipping
    void updateElevation() -> updateElevation
    void updateLayout() -> updateLayout
    void updateLogo() -> updateLogo
    int -get0(com.android.systemui.assist.AssistOrbView) -> -get0
    android.graphics.Rect -get1(com.android.systemui.assist.AssistOrbView) -> -get1
    float -get2(com.android.systemui.assist.AssistOrbView) -> -get2
    float -get3(com.android.systemui.assist.AssistOrbView) -> -get3
    android.view.animation.Interpolator -get4(com.android.systemui.assist.AssistOrbView) -> -get4
    int -get5(com.android.systemui.assist.AssistOrbView) -> -get5
    android.animation.ValueAnimator -set0(com.android.systemui.assist.AssistOrbView,android.animation.ValueAnimator) -> -set0
    float -set1(com.android.systemui.assist.AssistOrbView,float) -> -set1
    android.animation.ValueAnimator -set2(com.android.systemui.assist.AssistOrbView,android.animation.ValueAnimator) -> -set2
    void -wrap0(com.android.systemui.assist.AssistOrbView,float,long,long,android.view.animation.Interpolator) -> -wrap0
    void -wrap1(com.android.systemui.assist.AssistOrbView,float) -> -wrap1
    void -wrap2(com.android.systemui.assist.AssistOrbView) -> -wrap2
    void -wrap3(com.android.systemui.assist.AssistOrbView) -> -wrap3
com.android.systemui.classifier.FalsingManager -> com.android.systemui.classifier.FalsingManager:
    int[] CLASSIFIER_SENSORS -> CLASSIFIER_SENSORS
    int[] COLLECTOR_SENSORS -> COLLECTOR_SENSORS
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    boolean mBouncerOn -> mBouncerOn
    android.content.Context mContext -> mContext
    com.android.systemui.analytics.DataCollector mDataCollector -> mDataCollector
    boolean mEnforceBouncer -> mEnforceBouncer
    android.os.Handler mHandler -> mHandler
    com.android.systemui.classifier.HumanInteractionClassifier mHumanInteractionClassifier -> mHumanInteractionClassifier
    java.lang.Runnable mPendingWtf -> mPendingWtf
    boolean mScreenOn -> mScreenOn
    android.hardware.SensorManager mSensorManager -> mSensorManager
    boolean mSessionActive -> mSessionActive
    android.database.ContentObserver mSettingsObserver -> mSettingsObserver
    boolean mShowingAod -> mShowingAod
    int mState -> mState
    com.android.systemui.UiOffloadThread mUiOffloadThread -> mUiOffloadThread
    com.android.systemui.classifier.FalsingManager sInstance -> sInstance
    com.android.systemui.classifier.FalsingManager getInstance(android.content.Context) -> getInstance
    void onNotificatonStartDraggingDown() -> onNotificatonStartDraggingDown
    boolean isFalseTouch() -> isFalseTouch
    void onNotificatonStopDraggingDown() -> onNotificatonStopDraggingDown
    void setShowingAod(boolean) -> setShowingAod
    boolean isClassiferEnabled() -> isClassiferEnabled
    void onScreenTurningOn() -> onScreenTurningOn
    void onScreenOff() -> onScreenOff
    android.net.Uri reportRejectedTouch() -> reportRejectedTouch
    boolean isReportingEnabled() -> isReportingEnabled
    void dump(java.io.PrintWriter) -> dump
    void setStatusBarState(int) -> setStatusBarState
    void onUnlockHintStarted() -> onUnlockHintStarted
    void onCameraHintStarted() -> onCameraHintStarted
    void onLeftAffordanceHintStarted() -> onLeftAffordanceHintStarted
    boolean shouldEnforceBouncer() -> shouldEnforceBouncer
    void onScreenOnFromTouch() -> onScreenOnFromTouch
    void onQsDown() -> onQsDown
    void setQsExpanded(boolean) -> setQsExpanded
    void onTrackingStarted() -> onTrackingStarted
    void onTrackingStopped() -> onTrackingStopped
    void onLeftAffordanceOn() -> onLeftAffordanceOn
    void onCameraOn() -> onCameraOn
    void onAffordanceSwipingStarted(boolean) -> onAffordanceSwipingStarted
    void onAffordanceSwipingAborted() -> onAffordanceSwipingAborted
    void onSucccessfulUnlock() -> onSucccessfulUnlock
    void onNotificationDismissed() -> onNotificationDismissed
    void onNotificatonStartDismissing() -> onNotificatonStartDismissing
    void onNotificatonStopDismissing() -> onNotificatonStopDismissing
    void onNotificationDoubleTap(boolean,float,float) -> onNotificationDoubleTap
    void onNotificationActive() -> onNotificationActive
    void <init>(android.content.Context) -> <init>
    void clearPendingWtf() -> clearPendingWtf
    boolean isEnabled() -> isEnabled
    void log(java.lang.String) -> log
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onBouncerHidden() -> onBouncerHidden
    void onBouncerShown() -> onBouncerShown
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onSessionStart() -> onSessionStart
    void onTouchEvent(android.view.MotionEvent,int,int) -> onTouchEvent
    void registerSensors(int[]) -> registerSensors
    boolean sessionEntrypoint() -> sessionEntrypoint
    void sessionExitpoint(boolean) -> sessionExitpoint
    void setNotificationExpanded() -> setNotificationExpanded
    boolean shouldSessionBeActive() -> shouldSessionBeActive
    void updateConfiguration() -> updateConfiguration
    void updateSessionActive() -> updateSessionActive
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_classifier_FalsingManager_5698() -> lambda$-com_android_systemui_classifier_FalsingManager_5698
    void lambda$-com_android_systemui_classifier_FalsingManager_6894(android.hardware.Sensor) -> lambda$-com_android_systemui_classifier_FalsingManager_6894
    void lambda$-com_android_systemui_classifier_FalsingManager_8969(int,int,java.lang.String,java.lang.Throwable) -> lambda$-com_android_systemui_classifier_FalsingManager_8969
    void -wrap0(com.android.systemui.classifier.FalsingManager) -> -wrap0
com.android.systemui.statusbar.phone.StatusBar$21$1 -> com.android.systemui.statusbar.phone.StatusBar$21$1:
    com.android.systemui.statusbar.phone.StatusBar$21 this$1 -> this$1
    android.view.View val$view -> val$view
    android.app.PendingIntent val$pendingIntent -> val$pendingIntent
    android.content.Intent val$fillInIntent -> val$fillInIntent
    void <init>(com.android.systemui.statusbar.phone.StatusBar$21,android.view.View,android.app.PendingIntent,android.content.Intent) -> <init>
    boolean onDismiss() -> onDismiss
com.android.systemui.statusbar.NotificationHeaderUtil$ViewComparator -> com.android.systemui.statusbar.NotificationHeaderUtil$ViewComparator:
    boolean compare(android.view.View,android.view.View,java.lang.Object,java.lang.Object) -> compare
    boolean isEmpty(android.view.View) -> isEmpty
com.android.systemui.plugins.qs.QSTile$Callback -> com.android.systemui.plugins.qs.QSTile$Callback:
    int VERSION -> VERSION
    void onStateChanged(com.android.systemui.plugins.qs.QSTile$State) -> onStateChanged
    void onShowDetail(boolean) -> onShowDetail
    void onScanStateChanged(boolean) -> onScanStateChanged
    void onToggleStateChanged(boolean) -> onToggleStateChanged
    void onAnnouncementRequested(java.lang.CharSequence) -> onAnnouncementRequested
android.support.v17.leanback.transition.SlideNoPropagation -> android.support.v17.leanback.transition.SlideNoPropagation:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>() -> <init>
    void setSlideEdge(int) -> setSlideEdge
    void <init>(int) -> <init>
android.support.v7.widget.RecyclerView$ItemAnimator -> android.support.v7.widget.RecyclerView$ItemAnimator:
    long mRemoveDuration -> mRemoveDuration
    long mAddDuration -> mAddDuration
    long mMoveDuration -> mMoveDuration
    long mChangeDuration -> mChangeDuration
    java.util.ArrayList mFinishedListeners -> mFinishedListeners
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> mListener
    long getChangeDuration() -> getChangeDuration
    void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    void runPendingAnimations() -> runPendingAnimations
    int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    boolean animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    void setMoveDuration(long) -> setMoveDuration
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> endAnimation
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    long getMoveDuration() -> getMoveDuration
    long getAddDuration() -> getAddDuration
    boolean isRunning(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    long getRemoveDuration() -> getRemoveDuration
    boolean isRunning() -> isRunning
    void <init>() -> <init>
    boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    void endAnimations() -> endAnimations
android.support.v7.widget.SearchView$SavedState -> android.support.v7.widget.SearchView$SavedState:
    boolean isIconified -> isIconified
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.volume.VolumeDialogControllerImpl$C$1 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$1:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    int val$reason -> val$reason
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry,int) -> <init>
    void run() -> run
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$7 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$7:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> get
    void setValue(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.plugins.qs.QSTile$Icon -> com.android.systemui.plugins.qs.QSTile$Icon:
    int VERSION -> VERSION
    android.graphics.drawable.Drawable getInvisibleDrawable(android.content.Context) -> getInvisibleDrawable
    int getPadding() -> getPadding
    int hashCode() -> hashCode
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
com.android.systemui.SystemUI -> com.android.systemui.SystemUI:
    android.content.Context mContext -> mContext
    java.util.Map mComponents -> mComponents
    void overrideNotificationAppName(android.content.Context,android.app.Notification$Builder) -> overrideNotificationAppName
    void <init>() -> <init>
    java.lang.Object getComponent(java.lang.Class) -> getComponent
    void putComponent(java.lang.Class,java.lang.Object) -> putComponent
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void start() -> start
    void onBootCompleted() -> onBootCompleted
com.android.systemui.statusbar.phone.MultiUserSwitch -> com.android.systemui.statusbar.phone.MultiUserSwitch:
    boolean mKeyguardMode -> mKeyguardMode
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher mKeyguardUserSwitcher -> mKeyguardUserSwitcher
    com.android.systemui.qs.QSPanel mQsPanel -> mQsPanel
    int[] mTmpInt2 -> mTmpInt2
    com.android.systemui.statusbar.policy.UserSwitcherController$BaseUserAdapter mUserListener -> mUserListener
    android.os.UserManager mUserManager -> mUserManager
    com.android.systemui.statusbar.policy.UserSwitcherController mUserSwitcherController -> mUserSwitcherController
    void setClickable(boolean) -> setClickable
    void setKeyguardMode(boolean) -> setKeyguardMode
    void setUserSwitcherController(com.android.systemui.statusbar.policy.UserSwitcherController) -> setUserSwitcherController
    void setQsPanel(com.android.systemui.qs.QSPanel) -> setQsPanel
    void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> setKeyguardUserSwitcher
    boolean hasMultipleUsers() -> hasMultipleUsers
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    com.android.systemui.plugins.qs.DetailAdapter getUserDetailAdapter() -> getUserDetailAdapter
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onClick(android.view.View) -> onClick
    void onFinishInflate() -> onFinishInflate
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void refreshContentDescription() -> refreshContentDescription
    void registerListener() -> registerListener
    void -wrap0(com.android.systemui.statusbar.phone.MultiUserSwitch) -> -wrap0
com.android.systemui.stackdivider.DividerHandleView$2 -> com.android.systemui.stackdivider.DividerHandleView$2:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Integer get(com.android.systemui.stackdivider.DividerHandleView) -> get
    void set(com.android.systemui.stackdivider.DividerHandleView,java.lang.Integer) -> set
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.statusbar.phone.StatusBar$42$1 -> com.android.systemui.statusbar.phone.StatusBar$42$1:
    com.android.systemui.statusbar.phone.StatusBar$42 this$1 -> this$1
    android.content.Intent val$intent -> val$intent
    int val$appUid -> val$appUid
    void <init>(com.android.systemui.statusbar.phone.StatusBar$42,android.content.Intent,int) -> <init>
    void run() -> run
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.ActionMenuPresenter:
    boolean mReserveOverflowSet -> mReserveOverflowSet
    boolean mStrictWidthLimit -> mStrictWidthLimit
    int mWidthLimit -> mWidthLimit
    boolean mPendingOverflowIconSet -> mPendingOverflowIconSet
    android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> mPopupPresenterCallback
    int mActionItemWidthLimit -> mActionItemWidthLimit
    int mMaxItems -> mMaxItems
    android.util.SparseBooleanArray mActionButtonGroups -> mActionButtonGroups
    android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> mPopupCallback
    boolean mMaxItemsSet -> mMaxItemsSet
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> mOverflowPopup
    android.view.View mScrapActionButtonView -> mScrapActionButtonView
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> mActionButtonPopup
    int mMinCellSize -> mMinCellSize
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> mOverflowButton
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> mPostedOpenRunnable
    boolean mWidthLimitSet -> mWidthLimitSet
    android.graphics.drawable.Drawable mPendingOverflowIcon -> mPendingOverflowIcon
    boolean mExpandedActionViewsExclusive -> mExpandedActionViewsExclusive
    int mOpenSubMenuId -> mOpenSubMenuId
    boolean mReserveOverflow -> mReserveOverflow
    boolean dismissPopupMenus() -> dismissPopupMenus
    android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    boolean showOverflowMenu() -> showOverflowMenu
    android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    void updateMenuView(boolean) -> updateMenuView
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl) -> shouldIncludeItem
    void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView) -> bindItemView
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.support.v7.view.menu.MenuView -get1(android.support.v7.widget.ActionMenuPresenter) -> -get1
    void setReserveOverflow(boolean) -> setReserveOverflow
    android.support.v7.view.menu.MenuBuilder -get0(android.support.v7.widget.ActionMenuPresenter) -> -get0
    boolean flagActionItems() -> flagActionItems
    boolean hideSubMenus() -> hideSubMenus
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void <init>(android.content.Context) -> <init>
    void setMenuView(android.support.v7.widget.ActionMenuView) -> setMenuView
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v4.provider.SelfDestructiveThread -> android.support.v4.provider.SelfDestructiveThread:
    android.os.Handler mHandler -> mHandler
    android.os.Handler$Callback mCallback -> mCallback
    int mGeneration -> mGeneration
    java.lang.Object mLock -> mLock
    android.os.HandlerThread mThread -> mThread
    int mDestructAfterMillisec -> mDestructAfterMillisec
    java.lang.String mThreadName -> mThreadName
    int mPriority -> mPriority
    void -wrap0(android.support.v4.provider.SelfDestructiveThread) -> -wrap0
    void <init>(java.lang.String,int,int) -> <init>
    void post(java.lang.Runnable) -> post
    void postAndReply(java.util.concurrent.Callable,android.support.v4.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    void -wrap1(android.support.v4.provider.SelfDestructiveThread,java.lang.Runnable) -> -wrap1
    void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
    boolean isRunning() -> isRunning
    void onDestruction() -> onDestruction
    int getGeneration() -> getGeneration
android.support.v17.leanback.widget.PagingIndicator$2 -> android.support.v17.leanback.widget.PagingIndicator$2:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Float get(android.support.v17.leanback.widget.PagingIndicator$Dot) -> get
    void set(android.support.v17.leanback.widget.PagingIndicator$Dot,java.lang.Float) -> set
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.pip.phone.PipMediaController$2 -> com.android.systemui.pip.phone.PipMediaController$2:
    com.android.systemui.pip.phone.PipMediaController this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMediaController) -> <init>
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
android.support.v17.leanback.widget.Grid$Location -> android.support.v17.leanback.widget.Grid$Location:
    int row -> row
    void <init>(int) -> <init>
android.support.v7.widget.ActivityChooserView$2 -> android.support.v7.widget.ActivityChooserView$2:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
com.android.keyguard.NumPadKey -> com.android.keyguard.NumPadKey:
    int mDigit -> mDigit
    android.widget.TextView mDigitText -> mDigitText
    boolean mEnableHaptics -> mEnableHaptics
    android.widget.TextView mKlondikeText -> mKlondikeText
    android.view.View$OnClickListener mListener -> mListener
    android.os.PowerManager mPM -> mPM
    com.android.keyguard.PasswordTextView mTextView -> mTextView
    int mTextViewResId -> mTextViewResId
    java.lang.String[] sKlondike -> sKlondike
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void doHapticKeyClick() -> doHapticKeyClick
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void userActivity() -> userActivity
    int -get0(com.android.keyguard.NumPadKey) -> -get0
    com.android.keyguard.PasswordTextView -get1(com.android.keyguard.NumPadKey) -> -get1
    int -get2(com.android.keyguard.NumPadKey) -> -get2
    com.android.keyguard.PasswordTextView -set0(com.android.keyguard.NumPadKey,com.android.keyguard.PasswordTextView) -> -set0
com.android.systemui.statusbar.notification.ActionListTransformState -> com.android.systemui.statusbar.notification.ActionListTransformState:
    android.util.Pools$SimplePool sInstancePool -> sInstancePool
    com.android.systemui.statusbar.notification.ActionListTransformState obtain() -> obtain
    void <init>() -> <init>
    void recycle() -> recycle
    void resetTransformedView() -> resetTransformedView
    boolean sameAs(com.android.systemui.statusbar.notification.TransformState) -> sameAs
    void transformViewFullyFrom(com.android.systemui.statusbar.notification.TransformState,float) -> transformViewFullyFrom
    void transformViewFullyTo(com.android.systemui.statusbar.notification.TransformState,float) -> transformViewFullyTo
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23:
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$3 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$3:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ -> com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ:
    byte $id -> $id
    com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ $INST$0 -> $INST$0
    com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ $INST$1 -> $INST$1
    com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ $INST$2 -> $INST$2
    com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ $INST$3 -> $INST$3
    com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ $INST$4 -> $INST$4
    com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ $INST$5 -> $INST$5
    com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ $INST$6 -> $INST$6
    com.android.systemui.keyguard.-$Lambda$a-rTbia0ew11VH8Z4-exO6ADmzQ $INST$7 -> $INST$7
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void $m$2(java.lang.Object) -> $m$2
    void $m$3(java.lang.Object) -> $m$3
    void $m$4(java.lang.Object) -> $m$4
    void $m$5(java.lang.Object) -> $m$5
    void $m$6(java.lang.Object) -> $m$6
    void $m$7(java.lang.Object) -> $m$7
    void accept(java.lang.Object) -> accept
android.support.v17.leanback.widget.picker.DatePicker -> android.support.v17.leanback.widget.picker.DatePicker:
    java.util.Calendar mCurrentDate -> mCurrentDate
    java.util.Calendar mMinDate -> mMinDate
    int mColDayIndex -> mColDayIndex
    android.support.v17.leanback.widget.picker.PickerUtility$DateConstant mConstant -> mConstant
    java.util.Calendar mMaxDate -> mMaxDate
    int mColMonthIndex -> mColMonthIndex
    int mColYearIndex -> mColYearIndex
    android.support.v17.leanback.widget.picker.PickerColumn mYearColumn -> mYearColumn
    java.text.DateFormat mDateFormat -> mDateFormat
    int[] DATE_FIELDS -> DATE_FIELDS
    java.lang.String mDatePickerFormat -> mDatePickerFormat
    java.util.Calendar mTempDate -> mTempDate
    android.support.v17.leanback.widget.picker.PickerColumn mDayColumn -> mDayColumn
    android.support.v17.leanback.widget.picker.PickerColumn mMonthColumn -> mMonthColumn
    void updateSpinnersImpl(boolean) -> updateSpinnersImpl
    void updateSpinners(boolean) -> updateSpinners
    void updateCurrentLocale() -> updateCurrentLocale
    void onColumnValueChanged(int,int) -> onColumnValueChanged
    boolean updateMax(android.support.v17.leanback.widget.picker.PickerColumn,int) -> updateMax
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean isAnyOf(char,char[]) -> isAnyOf
    void setDate(int,int,int) -> setDate
    void <clinit>() -> <clinit>
    java.lang.String getBestYearMonthDayPattern(java.lang.String) -> getBestYearMonthDayPattern
    boolean parseDate(java.lang.String,java.util.Calendar) -> parseDate
    boolean updateMin(android.support.v17.leanback.widget.picker.PickerColumn,int) -> updateMin
    void setDatePickerFormat(java.lang.String) -> setDatePickerFormat
    java.util.List extractSeparators() -> extractSeparators
com.android.systemui.statusbar.KeyguardIndicationController -> com.android.systemui.statusbar.KeyguardIndicationController:
    com.android.internal.app.IBatteryStats mBatteryInfo -> mBatteryInfo
    int mChargingSpeed -> mChargingSpeed
    int mChargingWattage -> mChargingWattage
    android.content.Context mContext -> mContext
    android.app.admin.DevicePolicyManager mDevicePolicyManager -> mDevicePolicyManager
    com.android.systemui.statusbar.phone.KeyguardIndicationTextView mDisclosure -> mDisclosure
    boolean mDozing -> mDozing
    int mFastThreshold -> mFastThreshold
    android.os.Handler mHandler -> mHandler
    android.view.ViewGroup mIndicationArea -> mIndicationArea
    int mInitialTextColor -> mInitialTextColor
    com.android.systemui.statusbar.phone.LockIcon mLockIcon -> mLockIcon
    java.lang.String mMessageToShowOnScreenOn -> mMessageToShowOnScreenOn
    boolean mPowerCharged -> mPowerCharged
    boolean mPowerPluggedIn -> mPowerPluggedIn
    java.lang.String mRestingIndication -> mRestingIndication
    int mSlowThreshold -> mSlowThreshold
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager mStatusBarKeyguardViewManager -> mStatusBarKeyguardViewManager
    com.android.systemui.statusbar.phone.KeyguardIndicationTextView mTextView -> mTextView
    android.content.BroadcastReceiver mTickReceiver -> mTickReceiver
    java.lang.String mTransientIndication -> mTransientIndication
    int mTransientTextColor -> mTransientTextColor
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateMonitorCallback -> mUpdateMonitorCallback
    android.os.UserManager mUserManager -> mUserManager
    boolean mVisible -> mVisible
    com.android.systemui.util.wakelock.SettableWakeLock mWakeLock -> mWakeLock
    void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> setStatusBarKeyguardViewManager
    void setVisible(boolean) -> setVisible
    void setDozing(boolean) -> setDozing
    void showTransientIndication(int) -> showTransientIndication
    void hideTransientIndication() -> hideTransientIndication
    void hideTransientIndicationDelayed(long) -> hideTransientIndicationDelayed
    void <init>(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.phone.LockIcon) -> <init>
    void <init>(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.phone.LockIcon,com.android.systemui.util.wakelock.WakeLock) -> <init>
    java.lang.String computePowerIndication() -> computePowerIndication
    com.android.keyguard.KeyguardUpdateMonitorCallback getKeyguardCallback() -> getKeyguardCallback
    java.lang.String getTrustGrantedIndication() -> getTrustGrantedIndication
    java.lang.String getTrustManagedIndication() -> getTrustManagedIndication
    void registerCallbacks(com.android.keyguard.KeyguardUpdateMonitor) -> registerCallbacks
    void showTransientIndication(java.lang.String) -> showTransientIndication
    void showTransientIndication(java.lang.String,int) -> showTransientIndication
    void updateDisclosure() -> updateDisclosure
    void updateIndication() -> updateIndication
    android.content.Context -get0(com.android.systemui.statusbar.KeyguardIndicationController) -> -get0
    boolean -get1(com.android.systemui.statusbar.KeyguardIndicationController) -> -get1
    int -get2(com.android.systemui.statusbar.KeyguardIndicationController) -> -get2
    android.os.Handler -get3(com.android.systemui.statusbar.KeyguardIndicationController) -> -get3
    com.android.systemui.statusbar.phone.LockIcon -get4(com.android.systemui.statusbar.KeyguardIndicationController) -> -get4
    java.lang.String -get5(com.android.systemui.statusbar.KeyguardIndicationController) -> -get5
    boolean -get6(com.android.systemui.statusbar.KeyguardIndicationController) -> -get6
    int -get7(com.android.systemui.statusbar.KeyguardIndicationController) -> -get7
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager -get8(com.android.systemui.statusbar.KeyguardIndicationController) -> -get8
    boolean -get9(com.android.systemui.statusbar.KeyguardIndicationController) -> -get9
    int -set0(com.android.systemui.statusbar.KeyguardIndicationController,int) -> -set0
    int -set1(com.android.systemui.statusbar.KeyguardIndicationController,int) -> -set1
    java.lang.String -set2(com.android.systemui.statusbar.KeyguardIndicationController,java.lang.String) -> -set2
    boolean -set3(com.android.systemui.statusbar.KeyguardIndicationController,boolean) -> -set3
    boolean -set4(com.android.systemui.statusbar.KeyguardIndicationController,boolean) -> -set4
    java.lang.String -wrap0(com.android.systemui.statusbar.KeyguardIndicationController) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.KeyguardIndicationController) -> -wrap1
android.support.v7.view.ViewPropertyAnimatorCompatSet$1 -> android.support.v7.view.ViewPropertyAnimatorCompatSet$1:
    boolean mProxyStarted -> mProxyStarted
    android.support.v7.view.ViewPropertyAnimatorCompatSet this$0 -> this$0
    int mProxyEndCount -> mProxyEndCount
    void onEnd() -> onEnd
    void <init>(android.support.v7.view.ViewPropertyAnimatorCompatSet) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.android.systemui.statusbar.phone.KeyguardPreviewContainer$1 -> com.android.systemui.statusbar.phone.KeyguardPreviewContainer$1:
    com.android.systemui.statusbar.phone.KeyguardPreviewContainer this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardPreviewContainer) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.android.systemui.statusbar.car.CarNavigationBarView -> com.android.systemui.statusbar.car.CarNavigationBarView:
    android.widget.LinearLayout mLightsOutButtons -> mLightsOutButtons
    android.widget.LinearLayout mNavButtons -> mNavButtons
    void addButton(com.android.systemui.statusbar.car.CarNavigationButton,com.android.systemui.statusbar.car.CarNavigationButton) -> addButton
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.View getCurrentView() -> getCurrentView
    void onFinishInflate() -> onFinishInflate
    void reorient() -> reorient
    void setDisabledFlags(int,boolean) -> setDisabledFlags
    void setNavigationIconHints(int,boolean) -> setNavigationIconHints
com.android.systemui.volume.VolumeDialogImpl$CustomDialog -> com.android.systemui.volume.VolumeDialogImpl$CustomDialog:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogImpl,android.content.Context) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onStop() -> onStop
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.statusbar.phone.NotificationPanelView$15 -> com.android.systemui.statusbar.phone.NotificationPanelView$15:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    java.lang.Runnable val$onFinishRunnable -> val$onFinishRunnable
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView,java.lang.Runnable) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.policy.SecurityControllerImpl$CACertLoader -> com.android.systemui.statusbar.policy.SecurityControllerImpl$CACertLoader:
    com.android.systemui.statusbar.policy.SecurityControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.SecurityControllerImpl) -> <init>
    android.util.Pair doInBackground(java.lang.Integer[]) -> doInBackground
    void onPostExecute(android.util.Pair) -> onPostExecute
    void lambda$-com_android_systemui_statusbar_policy_SecurityControllerImpl$CACertLoader_15013(java.lang.Integer[]) -> lambda$-com_android_systemui_statusbar_policy_SecurityControllerImpl$CACertLoader_15013
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.android.systemui.assist.AssistManager$2 -> com.android.systemui.assist.AssistManager$2:
    com.android.systemui.assist.AssistManager this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistManager) -> <init>
    void run() -> run
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int scrollPosition -> scrollPosition
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
android.support.v7.view.SupportActionModeWrapper$CallbackWrapper -> android.support.v7.view.SupportActionModeWrapper$CallbackWrapper:
    android.view.ActionMode$Callback mWrappedCallback -> mWrappedCallback
    android.content.Context mContext -> mContext
    android.support.v4.util.SimpleArrayMap mMenus -> mMenus
    java.util.ArrayList mActionModes -> mActionModes
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    android.view.ActionMode getActionModeWrapper(android.support.v7.view.ActionMode) -> getActionModeWrapper
com.android.systemui.recents.IRecentsNonSystemUserCallbacks -> com.android.systemui.recents.IRecentsNonSystemUserCallbacks:
    void showRecents(boolean,boolean,boolean,boolean,boolean,int) -> showRecents
    void hideRecents(boolean,boolean) -> hideRecents
    void toggleRecents(int) -> toggleRecents
    void preloadRecents() -> preloadRecents
    void cancelPreloadingRecents() -> cancelPreloadingRecents
    void dockTopTask(int,int,int,android.graphics.Rect) -> dockTopTask
    void onDraggingInRecents(float) -> onDraggingInRecents
    void onDraggingInRecentsEnded(float) -> onDraggingInRecentsEnded
    void onConfigurationChanged() -> onConfigurationChanged
    void showCurrentUserToast(int,int) -> showCurrentUserToast
com.android.systemui.statusbar.-$Lambda$8GVkhItfkCKqtDvTlHTILsytvsQ -> com.android.systemui.statusbar.-$Lambda$8GVkhItfkCKqtDvTlHTILsytvsQ:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.recents.views.TaskView$3 -> com.android.systemui.recents.views.TaskView$3:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.recents.views.TaskView) -> get
    void setValue(com.android.systemui.recents.views.TaskView,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.statusbar.ViewTransformationHelper -> com.android.systemui.statusbar.ViewTransformationHelper:
    android.util.ArrayMap mCustomTransformations -> mCustomTransformations
    android.util.ArrayMap mTransformedViews -> mTransformedViews
    android.animation.ValueAnimator mViewTransformationAnimation -> mViewTransformationAnimation
    void addTransformedView(int,android.view.View) -> addTransformedView
    void setCustomTransformation(com.android.systemui.statusbar.ViewTransformationHelper$CustomTransformation,int) -> setCustomTransformation
    void <init>() -> <init>
    android.util.ArraySet getAllTransformingViews() -> getAllTransformingViews
    void resetTransformedView(android.view.View) -> resetTransformedView
    void addRemainingTransformTypes(android.view.View) -> addRemainingTransformTypes
    void reset() -> reset
    com.android.systemui.statusbar.notification.TransformState getCurrentState(int) -> getCurrentState
    void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable) -> transformTo
    void transformTo(com.android.systemui.statusbar.TransformableView,float) -> transformTo
    void transformFrom(com.android.systemui.statusbar.TransformableView) -> transformFrom
    void transformFrom(com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    void setVisible(boolean) -> setVisible
    void abortTransformations() -> abortTransformations
    void -wrap0(com.android.systemui.statusbar.ViewTransformationHelper) -> -wrap0
com.android.settingslib.graph.BluetoothDeviceLayerDrawable$BatteryMeterDrawable -> com.android.settingslib.graph.BluetoothDeviceLayerDrawable$BatteryMeterDrawable:
    int mFrameColor -> mFrameColor
    float mAspectRatio -> mAspectRatio
    float getRadiusRatio() -> getRadiusRatio
    void <init>(android.content.Context,int,int) -> <init>
    float getAspectRatio() -> getAspectRatio
android.support.v7.graphics.ColorCutQuantizer$Vbox -> android.support.v7.graphics.ColorCutQuantizer$Vbox:
    int mMinBlue -> mMinBlue
    int mMinGreen -> mMinGreen
    int mUpperIndex -> mUpperIndex
    int mMaxRed -> mMaxRed
    int mMaxGreen -> mMaxGreen
    int mLowerIndex -> mLowerIndex
    int mMinRed -> mMinRed
    int mMaxBlue -> mMaxBlue
    int mPopulation -> mPopulation
    android.support.v7.graphics.ColorCutQuantizer this$0 -> this$0
    void <init>(android.support.v7.graphics.ColorCutQuantizer,int,int) -> <init>
    int findSplitPoint() -> findSplitPoint
    android.support.v7.graphics.Palette$Swatch getAverageColor() -> getAverageColor
    int getLongestColorDimension() -> getLongestColorDimension
    android.support.v7.graphics.ColorCutQuantizer$Vbox splitBox() -> splitBox
    int getVolume() -> getVolume
    int getColorCount() -> getColorCount
    void fitBox() -> fitBox
    boolean canSplit() -> canSplit
android.support.v7.widget.LinearLayoutManager$SavedState -> android.support.v7.widget.LinearLayoutManager$SavedState:
    int mAnchorOffset -> mAnchorOffset
    boolean mAnchorLayoutFromEnd -> mAnchorLayoutFromEnd
    int mAnchorPosition -> mAnchorPosition
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v7.widget.LinearLayoutManager$SavedState) -> <init>
    void invalidateAnchor() -> invalidateAnchor
    boolean hasValidAnchor() -> hasValidAnchor
    int describeContents() -> describeContents
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
com.android.systemui.recents.views.RecentsView$1 -> com.android.systemui.recents.views.RecentsView$1:
    com.android.systemui.recents.views.RecentsView this$0 -> this$0
    void <init>(com.android.systemui.recents.views.RecentsView) -> <init>
    void run() -> run
android.support.v17.leanback.R$raw -> android.support.v17.leanback.R$raw:
    int lb_voice_failure -> lb_voice_failure
    int lb_voice_no_input -> lb_voice_no_input
    int lb_voice_open -> lb_voice_open
    int lb_voice_success -> lb_voice_success
    void <init>() -> <init>
com.android.systemui.screenshot.GlobalScreenshot$TargetChosenReceiver -> com.android.systemui.screenshot.GlobalScreenshot$TargetChosenReceiver:
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.widget.RecyclerView$OnItemTouchListener -> android.support.v7.widget.RecyclerView$OnItemTouchListener:
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
com.android.systemui.statusbar.ScrimView -> com.android.systemui.statusbar.ScrimView:
    android.animation.ValueAnimator mAlphaAnimator -> mAlphaAnimator
    android.animation.ValueAnimator$AnimatorUpdateListener mAlphaUpdateListener -> mAlphaUpdateListener
    java.lang.Runnable mChangeRunnable -> mChangeRunnable
    android.animation.AnimatorListenerAdapter mClearAnimatorListener -> mClearAnimatorListener
    android.graphics.PorterDuffColorFilter mColorFilter -> mColorFilter
    com.android.internal.colorextraction.ColorExtractor$GradientColors mColors -> mColors
    boolean mDrawAsSrc -> mDrawAsSrc
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    android.graphics.Rect mExcludedRect -> mExcludedRect
    boolean mHasExcludedArea -> mHasExcludedArea
    int mTintColor -> mTintColor
    float mViewAlpha -> mViewAlpha
    void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    void setColors(com.android.internal.colorextraction.ColorExtractor$GradientColors,boolean) -> setColors
    float getViewAlpha() -> getViewAlpha
    com.android.internal.colorextraction.ColorExtractor$GradientColors getColors() -> getColors
    void setViewAlpha(float) -> setViewAlpha
    void setTint(int) -> setTint
    void setDrawAsSrc(boolean) -> setDrawAsSrc
    void setExcludedArea(android.graphics.Rect) -> setExcludedArea
    void setChangeRunnable(java.lang.Runnable) -> setChangeRunnable
    int getTint() -> getTint
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigChanged(android.content.res.Configuration) -> onConfigChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTint(int,boolean) -> setTint
    void updateColorWithTint(boolean) -> updateColorWithTint
    void updateScreenSize() -> updateScreenSize
    void lambda$-com_android_systemui_statusbar_ScrimView_2349(android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_ScrimView_2349
    android.animation.ValueAnimator -set0(com.android.systemui.statusbar.ScrimView,android.animation.ValueAnimator) -> -set0
com.android.systemui.util.leak.GarbageMonitor -> com.android.systemui.util.leak.GarbageMonitor:
    android.os.Handler mHandler -> mHandler
    com.android.systemui.util.leak.LeakReporter mLeakReporter -> mLeakReporter
    com.android.systemui.util.leak.TrackedGarbage mTrackedGarbage -> mTrackedGarbage
    void <init>(android.os.Looper,com.android.systemui.util.leak.LeakDetector,com.android.systemui.util.leak.LeakReporter) -> <init>
    void inspectGarbage() -> inspectGarbage
    void reinspectGarbageAfterGc() -> reinspectGarbageAfterGc
    void scheduleInspectGarbage(java.lang.Runnable) -> scheduleInspectGarbage
    void scheduleReinspectGarbage(java.lang.Runnable) -> scheduleReinspectGarbage
    void start() -> start
    void -com_android_systemui_util_leak_GarbageMonitor-mthref-0() -> -com_android_systemui_util_leak_GarbageMonitor-mthref-0
    void -com_android_systemui_util_leak_GarbageMonitor-mthref-1() -> -com_android_systemui_util_leak_GarbageMonitor-mthref-1
    void -com_android_systemui_util_leak_GarbageMonitor-mthref-2() -> -com_android_systemui_util_leak_GarbageMonitor-mthref-2
com.android.systemui.doze.DozeHost -> com.android.systemui.doze.DozeHost:
    void addCallback(com.android.systemui.doze.DozeHost$Callback) -> addCallback
    void dozeTimeTick() -> dozeTimeTick
    void extendPulse() -> extendPulse
    boolean isBlockingDoze() -> isBlockingDoze
    boolean isPowerSaveActive() -> isPowerSaveActive
    boolean isProvisioned() -> isProvisioned
    boolean isPulsingBlocked() -> isPulsingBlocked
    void onDoubleTap(float,float) -> onDoubleTap
    void onIgnoreTouchWhilePulsing(boolean) -> onIgnoreTouchWhilePulsing
    void pulseWhileDozing(com.android.systemui.doze.DozeHost$PulseCallback,int) -> pulseWhileDozing
    void removeCallback(com.android.systemui.doze.DozeHost$Callback) -> removeCallback
    void setAnimateWakeup(boolean) -> setAnimateWakeup
    void setAodDimmingScrim(float) -> setAodDimmingScrim
    void setDozeScreenBrightness(int) -> setDozeScreenBrightness
    void startDozing() -> startDozing
    void stopDozing() -> stopDozing
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$4 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$4:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> <init>
    void onFingerprintRunningStateChanged(boolean) -> onFingerprintRunningStateChanged
    void onFinishedGoingToSleep(int) -> onFinishedGoingToSleep
    void onKeyguardVisibilityChanged(boolean) -> onKeyguardVisibilityChanged
    void onScreenTurnedOff() -> onScreenTurnedOff
    void onScreenTurnedOn() -> onScreenTurnedOn
    void onStartedWakingUp() -> onStartedWakingUp
    void onStrongAuthStateChanged(int) -> onStrongAuthStateChanged
    void onUserSwitchComplete(int) -> onUserSwitchComplete
    void onUserUnlocked() -> onUserUnlocked
com.android.settingslib.RestrictedPreference -> com.android.settingslib.RestrictedPreference:
    com.android.settingslib.RestrictedPreferenceHelper mHelper -> mHelper
    void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder) -> onBindViewHolder
    boolean shouldHideSecondTarget() -> shouldHideSecondTarget
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setEnabled(boolean) -> setEnabled
    void performClick() -> performClick
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getSecondTargetResId() -> getSecondTargetResId
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onAttachedToHierarchy(android.support.v7.preference.PreferenceManager) -> onAttachedToHierarchy
    boolean isDisabledByAdmin() -> isDisabledByAdmin
com.android.systemui.egg.MLand$Player$1 -> com.android.systemui.egg.MLand$Player$1:
    com.android.systemui.egg.MLand$Player this$1 -> this$1
    void <init>(com.android.systemui.egg.MLand$Player) -> <init>
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.systemui.pip.phone.PipMenuActivity -> com.android.systemui.pip.phone.PipMenuActivity:
    java.util.List mActions -> mActions
    android.widget.LinearLayout mActionsGroup -> mActionsGroup
    boolean mAllowMenuTimeout -> mAllowMenuTimeout
    boolean mAllowTouches -> mAllowTouches
    android.graphics.drawable.Drawable mBackgroundDrawable -> mBackgroundDrawable
    int mBetweenActionPaddingLand -> mBetweenActionPaddingLand
    android.view.View mDismissButton -> mDismissButton
    android.graphics.PointF mDownDelta -> mDownDelta
    android.graphics.PointF mDownPosition -> mDownPosition
    android.widget.ImageView mExpandButton -> mExpandButton
    java.lang.Runnable mFinishRunnable -> mFinishRunnable
    android.os.Handler mHandler -> mHandler
    android.animation.ValueAnimator$AnimatorUpdateListener mMenuBgUpdateListener -> mMenuBgUpdateListener
    android.view.View mMenuContainer -> mMenuContainer
    android.animation.AnimatorSet mMenuContainerAnimator -> mMenuContainerAnimator
    int mMenuState -> mMenuState
    android.os.Messenger mMessenger -> mMessenger
    android.os.Messenger mToControllerMessenger -> mToControllerMessenger
    com.android.systemui.pip.phone.PipTouchState mTouchState -> mTouchState
    android.view.ViewConfiguration mViewConfig -> mViewConfig
    android.view.View mViewRoot -> mViewRoot
    void <init>() -> <init>
    void cancelDelayedFinish() -> cancelDelayedFinish
    void dismissPip() -> dismissPip
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void expandPip() -> expandPip
    void finish() -> finish
    void hideMenu() -> hideMenu
    void hideMenu(java.lang.Runnable,boolean) -> hideMenu
    void notifyActivityCallback(android.os.Messenger) -> notifyActivityCallback
    void notifyMenuStateChange(int) -> notifyMenuStateChange
    void notifyRegisterInputConsumer() -> notifyRegisterInputConsumer
    void notifyUnregisterInputConsumer() -> notifyUnregisterInputConsumer
    void onBusEvent(com.android.systemui.recents.events.component.HidePipMenuEvent) -> onBusEvent
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    void onStop() -> onStop
    void onUserInteraction() -> onUserInteraction
    void onUserLeaveHint() -> onUserLeaveHint
    void repostDelayedFinish(long) -> repostDelayedFinish
    void sendEmptyMessage(int,java.lang.String) -> sendEmptyMessage
    void sendMessage(android.os.Message,java.lang.String) -> sendMessage
    void setActions(android.graphics.Rect,java.util.List) -> setActions
    void setTaskDescription(android.app.ActivityManager$TaskDescription) -> setTaskDescription
    void showMenu(int,android.graphics.Rect,android.graphics.Rect,boolean,boolean) -> showMenu
    void showPipMenu() -> showPipMenu
    void updateActionViews(android.graphics.Rect) -> updateActionViews
    void updateDismissFraction(float) -> updateDismissFraction
    void updateFromIntent(android.content.Intent) -> updateFromIntent
    void lambda$-com_android_systemui_pip_phone_PipMenuActivity_7407() -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_7407
    boolean lambda$-com_android_systemui_pip_phone_PipMenuActivity_8114(android.view.View,android.view.MotionEvent) -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_8114
    void lambda$-com_android_systemui_pip_phone_PipMenuActivity_9412(android.view.View) -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_9412
    void lambda$-com_android_systemui_pip_phone_PipMenuActivity_12776(com.android.systemui.recents.events.component.HidePipMenuEvent) -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_12776
    void lambda$-com_android_systemui_pip_phone_PipMenuActivity_12814(com.android.systemui.recents.events.component.HidePipMenuEvent) -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_12814
    boolean lambda$-com_android_systemui_pip_phone_PipMenuActivity_18581(android.view.View,android.view.MotionEvent) -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_18581
    void lambda$-com_android_systemui_pip_phone_PipMenuActivity_20235(android.widget.ImageView,android.graphics.drawable.Drawable) -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_20235
    void lambda$-com_android_systemui_pip_phone_PipMenuActivity_20566(android.app.RemoteAction,android.view.View) -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_20566
    void lambda$-com_android_systemui_pip_phone_PipMenuActivity_23692() -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_23692
    void lambda$-com_android_systemui_pip_phone_PipMenuActivity_24250() -> lambda$-com_android_systemui_pip_phone_PipMenuActivity_24250
    android.graphics.drawable.Drawable -get0(com.android.systemui.pip.phone.PipMenuActivity) -> -get0
    boolean -set0(com.android.systemui.pip.phone.PipMenuActivity,boolean) -> -set0
    void -wrap0(com.android.systemui.pip.phone.PipMenuActivity) -> -wrap0
    void -wrap1(com.android.systemui.pip.phone.PipMenuActivity) -> -wrap1
    void -wrap2(com.android.systemui.pip.phone.PipMenuActivity,long) -> -wrap2
    void -wrap3(com.android.systemui.pip.phone.PipMenuActivity,android.graphics.Rect,java.util.List) -> -wrap3
    void -wrap4(com.android.systemui.pip.phone.PipMenuActivity,int,android.graphics.Rect,android.graphics.Rect,boolean,boolean) -> -wrap4
    void -wrap5(com.android.systemui.pip.phone.PipMenuActivity,float) -> -wrap5
android.support.v4.graphics.drawable.TintAwareDrawable -> android.support.v4.graphics.drawable.TintAwareDrawable:
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void setTint(int) -> setTint
com.android.systemui.globalactions.GlobalActionsDialog$MyAdapter -> com.android.systemui.globalactions.GlobalActionsDialog$MyAdapter:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getCount() -> getCount
    com.android.systemui.globalactions.GlobalActionsDialog$Action getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog,com.android.systemui.globalactions.GlobalActionsDialog$MyAdapter) -> <init>
android.support.v4.widget.ImageViewCompat$BaseViewCompatImpl -> android.support.v4.widget.ImageViewCompat$BaseViewCompatImpl:
    android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    void <init>() -> <init>
    void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
    android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$8 -> com.android.systemui.statusbar.phone.-$Lambda$fDrSS3RIxcI2CM37DsIZ2NRuMa0$8:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.view.View,android.content.Intent) -> $m$0
    void onClick(android.view.View,android.content.Intent) -> onClick
com.android.systemui.LatencyTester$1 -> com.android.systemui.LatencyTester$1:
    com.android.systemui.LatencyTester this$0 -> this$0
    void <init>(com.android.systemui.LatencyTester) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.widget.ViewInfoStore -> android.support.v7.widget.ViewInfoStore:
    android.support.v4.util.ArrayMap mLayoutHolderMap -> mLayoutHolderMap
    android.support.v4.util.LongSparseArray mOldChangedHolders -> mOldChangedHolders
    android.support.v7.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    void process(android.support.v7.widget.ViewInfoStore$ProcessCallback) -> process
    void onViewDetached(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewDetached
    void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    void addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    boolean isDisappearing(android.support.v7.widget.RecyclerView$ViewHolder) -> isDisappearing
    void addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    void clear() -> clear
    void addToDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    void addToAppearedInPreLayoutHolders(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    void removeFromDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    void onDetach() -> onDetach
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(android.support.v7.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    void <init>() -> <init>
    boolean isInPreLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> isInPreLayout
    void removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> removeViewHolder
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> popFromPreLayout
com.android.systemui.keyguard.DismissCallbackRegistry -> com.android.systemui.keyguard.DismissCallbackRegistry:
    java.util.ArrayList mDismissCallbacks -> mDismissCallbacks
    com.android.systemui.UiOffloadThread mUiOffloadThread -> mUiOffloadThread
    void <init>() -> <init>
    void addCallback(com.android.internal.policy.IKeyguardDismissCallback) -> addCallback
    void notifyDismissSucceeded() -> notifyDismissSucceeded
    void notifyDismissCancelled() -> notifyDismissCancelled
    void -com_android_systemui_keyguard_DismissCallbackRegistry-mthref-0(com.android.systemui.keyguard.DismissCallbackWrapper) -> -com_android_systemui_keyguard_DismissCallbackRegistry-mthref-0
    void -com_android_systemui_keyguard_DismissCallbackRegistry-mthref-1(com.android.systemui.keyguard.DismissCallbackWrapper) -> -com_android_systemui_keyguard_DismissCallbackRegistry-mthref-1
com.android.systemui.util.leak.TrackedObjects$TrackedClass -> com.android.systemui.util.leak.TrackedObjects$TrackedClass:
    com.android.systemui.util.leak.WeakIdentityHashMap instances -> instances
    void <init>() -> <init>
    boolean isEmpty() -> isEmpty
    int size() -> size
    void track(java.lang.Object) -> track
    void <init>(com.android.systemui.util.leak.TrackedObjects$TrackedClass) -> <init>
com.android.systemui.qs.QuickQSPanel$HeaderTileLayout -> com.android.systemui.qs.QuickQSPanel$HeaderTileLayout:
    boolean mListening -> mListening
    java.util.ArrayList mRecords -> mRecords
    void <init>(android.content.Context) -> <init>
    void addTile(com.android.systemui.qs.QSPanel$TileRecord) -> addTile
    android.widget.LinearLayout$LayoutParams generateLayoutParams() -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateSpaceParams() -> generateSpaceParams
    int getChildIndex(com.android.systemui.plugins.qs.QSTileView) -> getChildIndex
    int getOffsetTop(com.android.systemui.qs.QSPanel$TileRecord) -> getOffsetTop
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onMeasure(int,int) -> onMeasure
    void removeTile(com.android.systemui.qs.QSPanel$TileRecord) -> removeTile
    void setListening(boolean) -> setListening
    boolean updateResources() -> updateResources
com.android.settingslib.wifi.WifiTracker$WorkHandler -> com.android.settingslib.wifi.WifiTracker$WorkHandler:
    com.android.settingslib.wifi.WifiTracker this$0 -> this$0
    void removePendingMessages() -> removePendingMessages
    void processMessage(android.os.Message) -> processMessage
    void <init>(com.android.settingslib.wifi.WifiTracker,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void -wrap0(com.android.settingslib.wifi.WifiTracker$WorkHandler) -> -wrap0
com.android.settingslib.core.lifecycle.events.OnStart -> com.android.settingslib.core.lifecycle.events.OnStart:
    void onStart() -> onStart
com.android.systemui.plugins.VolumeDialogController$Callbacks -> com.android.systemui.plugins.VolumeDialogController$Callbacks:
    int VERSION -> VERSION
    void onDismissRequested(int) -> onDismissRequested
    void onShowSilentHint() -> onShowSilentHint
    void onScreenOff() -> onScreenOff
    void onAccessibilityModeChanged(java.lang.Boolean) -> onAccessibilityModeChanged
    void onShowRequested(int) -> onShowRequested
    void onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    void onConfigurationChanged() -> onConfigurationChanged
    void onShowSafetyWarning(int) -> onShowSafetyWarning
    void onShowVibrateHint() -> onShowVibrateHint
    void onStateChanged(com.android.systemui.plugins.VolumeDialogController$State) -> onStateChanged
com.android.systemui.SwipeHelper$3 -> com.android.systemui.SwipeHelper$3:
    boolean mCancelled -> mCancelled
    com.android.systemui.SwipeHelper this$0 -> this$0
    android.view.View val$animView -> val$animView
    boolean val$canBeDismissed -> val$canBeDismissed
    java.lang.Runnable val$endAction -> val$endAction
    void <init>(com.android.systemui.SwipeHelper,android.view.View,boolean,java.lang.Runnable) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.ToolbarWidgetWrapper$2 -> android.support.v7.widget.ToolbarWidgetWrapper$2:
    boolean mCanceled -> mCanceled
    android.support.v7.widget.ToolbarWidgetWrapper this$0 -> this$0
    int val$visibility -> val$visibility
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void <init>(android.support.v7.widget.ToolbarWidgetWrapper,int) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.Toolbar$1:
    android.support.v7.widget.Toolbar this$0 -> this$0
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long mActions -> mActions
    long mBufferedPosition -> mBufferedPosition
    long mUpdateTime -> mUpdateTime
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Bundle mExtras -> mExtras
    java.util.List mCustomActions -> mCustomActions
    long mActiveItemId -> mActiveItemId
    int mErrorCode -> mErrorCode
    java.lang.Object mStateObj -> mStateObj
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    int mState -> mState
    long mPosition -> mPosition
    float mSpeed -> mSpeed
    int getState() -> getState
    void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    int describeContents() -> describeContents
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    long getActions() -> getActions
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$1 -> com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$1:
    com.android.systemui.statusbar.phone.PhoneStatusBarPolicy this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> <init>
    void onUserSwitchComplete(int) -> onUserSwitchComplete
    void onUserSwitching(int) -> onUserSwitching
    void lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy$1_30479() -> lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy$1_30479
    void lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy$1_30692() -> lambda$-com_android_systemui_statusbar_phone_PhoneStatusBarPolicy$1_30692
com.android.systemui.statusbar.notification.NotificationInflater$ApplyCallback -> com.android.systemui.statusbar.notification.NotificationInflater$ApplyCallback:
    void <init>() -> <init>
    android.widget.RemoteViews getRemoteView() -> getRemoteView
    void setResultView(android.view.View) -> setResultView
com.android.systemui.plugins.PluginUtils -> com.android.systemui.plugins.PluginUtils:
    void <init>() -> <init>
    void setId(android.content.Context,android.view.View,java.lang.String) -> setId
android.support.v7.media.MediaRouter$CallbackRecord -> android.support.v7.media.MediaRouter$CallbackRecord:
    android.support.v7.media.MediaRouter mRouter -> mRouter
    int mFlags -> mFlags
    android.support.v7.media.MediaRouter$Callback mCallback -> mCallback
    android.support.v7.media.MediaRouteSelector mSelector -> mSelector
    boolean filterRouteEvent(android.support.v7.media.MediaRouter$RouteInfo) -> filterRouteEvent
    void <init>(android.support.v7.media.MediaRouter,android.support.v7.media.MediaRouter$Callback) -> <init>
android.support.v7.view.menu.CascadingMenuPopup$HorizPosition -> android.support.v7.view.menu.CascadingMenuPopup$HorizPosition:
com.android.systemui.statusbar.StackScrollerDecorView -> com.android.systemui.statusbar.StackScrollerDecorView:
    boolean mAnimating -> mAnimating
    android.view.View mContent -> mContent
    boolean mIsVisible -> mIsVisible
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateText(boolean,java.lang.Runnable) -> animateText
    void cancelAnimation() -> cancelAnimation
    android.view.View findContentView() -> findContentView
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    boolean isTransparent() -> isTransparent
    boolean isVisible() -> isVisible
    void onFinishInflate() -> onFinishInflate
    void onLayout(boolean,int,int,int,int) -> onLayout
    void performAddAnimation(long,long) -> performAddAnimation
    void performRemoveAnimation(long,float,java.lang.Runnable) -> performRemoveAnimation
    void performVisibilityAnimation(boolean) -> performVisibilityAnimation
    void performVisibilityAnimation(boolean,java.lang.Runnable) -> performVisibilityAnimation
    void setInvisible() -> setInvisible
    boolean -set0(com.android.systemui.statusbar.StackScrollerDecorView,boolean) -> -set0
android.support.annotation.ArrayRes -> android.support.annotation.ArrayRes:
android.support.v17.leanback.widget.picker.Picker -> android.support.v17.leanback.widget.picker.Picker:
    float mVisibleItems -> mVisibleItems
    android.view.ViewGroup mPickerView -> mPickerView
    float mFocusedAlpha -> mFocusedAlpha
    java.util.List mSeparators -> mSeparators
    float mVisibleColumnAlpha -> mVisibleColumnAlpha
    float mInvisibleColumnAlpha -> mInvisibleColumnAlpha
    android.view.animation.Interpolator mAccelerateInterpolator -> mAccelerateInterpolator
    java.util.List mColumnViews -> mColumnViews
    int mPickerItemLayoutId -> mPickerItemLayoutId
    int mAlphaAnimDuration -> mAlphaAnimDuration
    int mPickerItemTextViewId -> mPickerItemTextViewId
    int mSelectedColumn -> mSelectedColumn
    android.view.animation.Interpolator mDecelerateInterpolator -> mDecelerateInterpolator
    float mUnfocusedAlpha -> mUnfocusedAlpha
    float mVisibleItemsActivated -> mVisibleItemsActivated
    java.util.ArrayList mColumns -> mColumns
    java.util.ArrayList mListeners -> mListeners
    android.view.ViewGroup mRootView -> mRootView
    android.support.v17.leanback.widget.OnChildViewHolderSelectedListener mColumnChangeListener -> mColumnChangeListener
    float getVisibleItemCount() -> getVisibleItemCount
    void setOrAnimateAlpha(android.view.View,boolean,int,boolean) -> setOrAnimateAlpha
    float getActivatedVisibleItemCount() -> getActivatedVisibleItemCount
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void setOrAnimateAlpha(android.view.View,boolean,float,float,android.view.animation.Interpolator) -> setOrAnimateAlpha
    void onColumnValueChanged(int,int) -> onColumnValueChanged
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void notifyValueChanged(int) -> notifyValueChanged
    void updateColumnSize(android.support.v17.leanback.widget.VerticalGridView) -> updateColumnSize
    int getPickerItemHeightPixels() -> getPickerItemHeightPixels
    void updateColumnAlpha(int,boolean) -> updateColumnAlpha
    void updateColumnSize() -> updateColumnSize
    void setActivated(boolean) -> setActivated
    int getPickerItemLayoutId() -> getPickerItemLayoutId
    void setColumnValue(int,int,boolean) -> setColumnValue
    int getPickerItemTextViewId() -> getPickerItemTextViewId
    android.support.v17.leanback.widget.picker.PickerColumn getColumnAt(int) -> getColumnAt
    int getColumnsCount() -> getColumnsCount
    void updateItemFocusable() -> updateItemFocusable
    void setSelectedColumn(int) -> setSelectedColumn
    int getSelectedColumn() -> getSelectedColumn
    void setColumnAt(int,android.support.v17.leanback.widget.picker.PickerColumn) -> setColumnAt
    void setSeparators(java.util.List) -> setSeparators
    void setColumns(java.util.List) -> setColumns
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.keyguard.KeyguardHostView$OnDismissAction -> com.android.keyguard.KeyguardHostView$OnDismissAction:
    boolean onDismiss() -> onDismiss
com.android.systemui.statusbar.TransformableView -> com.android.systemui.statusbar.TransformableView:
    com.android.systemui.statusbar.notification.TransformState getCurrentState(int) -> getCurrentState
    void transformFrom(com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    void transformTo(com.android.systemui.statusbar.TransformableView,float) -> transformTo
    void setVisible(boolean) -> setVisible
    void transformFrom(com.android.systemui.statusbar.TransformableView) -> transformFrom
    void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable) -> transformTo
android.support.v7.media.MediaRouteProviderProtocol -> android.support.v7.media.MediaRouteProviderProtocol:
    void <init>() -> <init>
    boolean isValidRemoteMessenger(android.os.Messenger) -> isValidRemoteMessenger
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    void run() -> run
    void <init>(android.support.v4.app.Fragment) -> <init>
com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk$1 -> com.android.systemui.pip.phone.-$Lambda$zhGzj57RCvU7cfDWUs39QAoQ-gk$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.graphics.drawable.Drawable) -> $m$0
    void onDrawableLoaded(android.graphics.drawable.Drawable) -> onDrawableLoaded
com.android.systemui.statusbar.KeyguardAffordanceView$7 -> com.android.systemui.statusbar.KeyguardAffordanceView$7:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.pip.tv.PipControlsView$5 -> com.android.systemui.pip.tv.PipControlsView$5:
    com.android.systemui.pip.tv.PipControlsView this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipControlsView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.phone.PanelBar -> com.android.systemui.statusbar.phone.PanelBar:
    com.android.systemui.statusbar.phone.PanelView mPanel -> mPanel
    java.lang.String TAG -> TAG
    int mState -> mState
    boolean mTracking -> mTracking
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onPanelPeeked() -> onPanelPeeked
    void onPanelCollapsed() -> onPanelCollapsed
    void onPanelFullyOpened() -> onPanelFullyOpened
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onTrackingStarted() -> onTrackingStarted
    void onClosingFinished() -> onClosingFinished
    void onTrackingStopped(boolean) -> onTrackingStopped
    void onExpandingFinished() -> onExpandingFinished
    void panelExpansionChanged(float,boolean) -> panelExpansionChanged
    void collapsePanel(boolean,boolean,float) -> collapsePanel
    int getState() -> getState
    void go(int) -> go
    boolean isClosed() -> isClosed
    void onFinishInflate() -> onFinishInflate
    boolean panelEnabled() -> panelEnabled
    void panelScrimMinFractionChanged(float) -> panelScrimMinFractionChanged
    void setBouncerShowing(boolean) -> setBouncerShowing
    void setPanel(com.android.systemui.statusbar.phone.PanelView) -> setPanel
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$ViewHolder -> android.support.v7.widget.RecyclerView$ViewHolder:
    java.util.List mUnmodifiedPayloads -> mUnmodifiedPayloads
    android.support.v7.widget.RecyclerView$Recycler mScrapContainer -> mScrapContainer
    android.support.v7.widget.RecyclerView mOwnerRecyclerView -> mOwnerRecyclerView
    android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder -> mShadowedHolder
    android.view.View itemView -> itemView
    java.lang.ref.WeakReference mNestedRecyclerView -> mNestedRecyclerView
    java.util.List FULLUPDATE_PAYLOADS -> FULLUPDATE_PAYLOADS
    int mIsRecyclableCount -> mIsRecyclableCount
    java.util.List mPayloads -> mPayloads
    int mPendingAccessibilityState -> mPendingAccessibilityState
    android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder -> mShadowingHolder
    int mWasImportantForAccessibilityBeforeHidden -> mWasImportantForAccessibilityBeforeHidden
    int mPreLayoutPosition -> mPreLayoutPosition
    int mPosition -> mPosition
    long mItemId -> mItemId
    int mFlags -> mFlags
    boolean mInChangeScrap -> mInChangeScrap
    int mItemViewType -> mItemViewType
    int mOldPosition -> mOldPosition
    boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    boolean isTmpDetached() -> isTmpDetached
    int getAdapterPosition() -> getAdapterPosition
    int getLayoutPosition() -> getLayoutPosition
    void <init>(android.view.View) -> <init>
    int -get0(android.support.v7.widget.RecyclerView$ViewHolder) -> -get0
    void addChangePayload(java.lang.Object) -> addChangePayload
    int getOldPosition() -> getOldPosition
    boolean shouldIgnore() -> shouldIgnore
    boolean -get1(android.support.v7.widget.RecyclerView$ViewHolder) -> -get1
    void onLeftHiddenState(android.support.v7.widget.RecyclerView) -> onLeftHiddenState
    boolean isRemoved() -> isRemoved
    boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    boolean isInvalid() -> isInvalid
    java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    boolean needsUpdate() -> needsUpdate
    boolean -wrap1(android.support.v7.widget.RecyclerView$ViewHolder) -> -wrap1
    void offsetPosition(int,boolean) -> offsetPosition
    boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    void setIsRecyclable(boolean) -> setIsRecyclable
    boolean isRecyclable() -> isRecyclable
    boolean wasReturnedFromScrap() -> wasReturnedFromScrap
    boolean isBound() -> isBound
    boolean isUpdated() -> isUpdated
    void saveOldPosition() -> saveOldPosition
    void addFlags(int) -> addFlags
    boolean -set0(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> -set0
    boolean isScrap() -> isScrap
    void unScrap() -> unScrap
    void onEnteredHiddenState(android.support.v7.widget.RecyclerView) -> onEnteredHiddenState
    void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    long getItemId() -> getItemId
    boolean -wrap0(android.support.v7.widget.RecyclerView$ViewHolder) -> -wrap0
    void -wrap2(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView) -> -wrap2
    void clearOldPosition() -> clearOldPosition
    void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    int getItemViewType() -> getItemViewType
    void resetInternal() -> resetInternal
    android.support.v7.widget.RecyclerView$Recycler -set1(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler) -> -set1
    void clearPayload() -> clearPayload
    void -wrap3(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView) -> -wrap3
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    void setScrapContainer(android.support.v7.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    void clearTmpDetachFlag() -> clearTmpDetachFlag
    void setFlags(int,int) -> setFlags
com.android.systemui.recents.model.TaskStack$DockState$ViewState$1 -> com.android.systemui.recents.model.TaskStack$DockState$ViewState$1:
    void <init>(java.lang.String) -> <init>
    java.lang.Integer get(com.android.systemui.recents.model.TaskStack$DockState$ViewState) -> get
    void setValue(com.android.systemui.recents.model.TaskStack$DockState$ViewState,int) -> setValue
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
android.support.v7.widget.GridLayoutManager$LayoutParams -> android.support.v7.widget.GridLayoutManager$LayoutParams:
    int mSpanIndex -> mSpanIndex
    int mSpanSize -> mSpanSize
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getSpanIndex() -> getSpanIndex
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    int getSpanSize() -> getSpanSize
com.android.systemui.statusbar.notification.TextViewTransformState -> com.android.systemui.statusbar.notification.TextViewTransformState:
    android.widget.TextView mText -> mText
    android.util.Pools$SimplePool sInstancePool -> sInstancePool
    void <init>() -> <init>
    int getEllipsisCount() -> getEllipsisCount
    int getViewHeight() -> getViewHeight
    int getViewWidth() -> getViewWidth
    boolean hasSameSpans(com.android.systemui.statusbar.notification.TextViewTransformState) -> hasSameSpans
    void initFrom(android.view.View) -> initFrom
    com.android.systemui.statusbar.notification.TextViewTransformState obtain() -> obtain
    void recycle() -> recycle
    void reset() -> reset
    boolean sameAs(com.android.systemui.statusbar.notification.TransformState) -> sameAs
    boolean transformScale(com.android.systemui.statusbar.notification.TransformState) -> transformScale
    void <clinit>() -> <clinit>
android.support.v7.media.MediaRouteDescriptor$Builder -> android.support.v7.media.MediaRouteDescriptor$Builder:
    java.util.ArrayList mControlFilters -> mControlFilters
    java.util.ArrayList mGroupMemberIds -> mGroupMemberIds
    android.os.Bundle mBundle -> mBundle
    android.support.v7.media.MediaRouteDescriptor$Builder setDeviceType(int) -> setDeviceType
    android.support.v7.media.MediaRouteDescriptor$Builder setEnabled(boolean) -> setEnabled
    android.support.v7.media.MediaRouteDescriptor$Builder addControlFilter(android.content.IntentFilter) -> addControlFilter
    android.support.v7.media.MediaRouteDescriptor$Builder setPresentationDisplayId(int) -> setPresentationDisplayId
    android.support.v7.media.MediaRouteDescriptor$Builder setVolumeMax(int) -> setVolumeMax
    android.support.v7.media.MediaRouteDescriptor$Builder setPlaybackType(int) -> setPlaybackType
    void <init>(java.lang.String,java.lang.String) -> <init>
    android.support.v7.media.MediaRouteDescriptor$Builder setName(java.lang.String) -> setName
    android.support.v7.media.MediaRouteDescriptor$Builder setVolumeHandling(int) -> setVolumeHandling
    android.support.v7.media.MediaRouteDescriptor$Builder setDescription(java.lang.String) -> setDescription
    android.support.v7.media.MediaRouteDescriptor$Builder setVolume(int) -> setVolume
    void <init>(android.support.v7.media.MediaRouteDescriptor) -> <init>
    android.support.v7.media.MediaRouteDescriptor build() -> build
    android.support.v7.media.MediaRouteDescriptor$Builder setConnecting(boolean) -> setConnecting
    android.support.v7.media.MediaRouteDescriptor$Builder setPlaybackStream(int) -> setPlaybackStream
    android.support.v7.media.MediaRouteDescriptor$Builder setId(java.lang.String) -> setId
    android.support.v7.media.MediaRouteDescriptor$Builder addControlFilters(java.util.Collection) -> addControlFilters
com.android.systemui.statusbar.phone.NotificationPanelView$1 -> com.android.systemui.statusbar.phone.NotificationPanelView$1:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.statusbar.phone.NotificationPanelView) -> get
    void setValue(com.android.systemui.statusbar.phone.NotificationPanelView,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
android.support.v7.media.MediaRouterJellybean$VolumeCallback -> android.support.v7.media.MediaRouterJellybean$VolumeCallback:
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
com.android.systemui.EventLogConstants -> com.android.systemui.EventLogConstants:
    int[] METRICS_GESTURE_TYPE_MAP -> METRICS_GESTURE_TYPE_MAP
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    java.lang.Object mInsets -> mInsets
    int hashCode() -> hashCode
    boolean isConsumed() -> isConsumed
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    void <init>(java.lang.Object) -> <init>
    android.support.v4.view.WindowInsetsCompat wrap(java.lang.Object) -> wrap
    boolean equals(java.lang.Object) -> equals
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    java.lang.Object unwrap(android.support.v4.view.WindowInsetsCompat) -> unwrap
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
com.android.systemui.statusbar.policy.CastControllerImpl -> com.android.systemui.statusbar.policy.CastControllerImpl:
    boolean DEBUG -> DEBUG
    boolean mCallbackRegistered -> mCallbackRegistered
    java.util.ArrayList mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    boolean mDiscovering -> mDiscovering
    java.lang.Object mDiscoveringLock -> mDiscoveringLock
    android.media.MediaRouter$SimpleCallback mMediaCallback -> mMediaCallback
    android.media.MediaRouter mMediaRouter -> mMediaRouter
    android.media.projection.MediaProjectionInfo mProjection -> mProjection
    android.media.projection.MediaProjectionManager$Callback mProjectionCallback -> mProjectionCallback
    java.lang.Object mProjectionLock -> mProjectionLock
    android.media.projection.MediaProjectionManager mProjectionManager -> mProjectionManager
    android.util.ArrayMap mRoutes -> mRoutes
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.CastController$Callback) -> addCallback
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void ensureTagExists(android.media.MediaRouter$RouteInfo) -> ensureTagExists
    void fireOnCastDevicesChanged() -> fireOnCastDevicesChanged
    void fireOnCastDevicesChanged(com.android.systemui.statusbar.policy.CastController$Callback) -> fireOnCastDevicesChanged
    java.lang.String getAppName(java.lang.String) -> getAppName
    java.util.Set getCastDevices() -> getCastDevices
    void handleDiscoveryChangeLocked() -> handleDiscoveryChangeLocked
    void removeCallback(com.android.systemui.statusbar.policy.CastController$Callback) -> removeCallback
    java.lang.String routeToString(android.media.MediaRouter$RouteInfo) -> routeToString
    void setCurrentUserId(int) -> setCurrentUserId
    void setDiscovering(boolean) -> setDiscovering
    void setProjection(android.media.projection.MediaProjectionInfo,boolean) -> setProjection
    void startCasting(com.android.systemui.statusbar.policy.CastController$CastDevice) -> startCasting
    void stopCasting(com.android.systemui.statusbar.policy.CastController$CastDevice) -> stopCasting
    void updateRemoteDisplays() -> updateRemoteDisplays
    void <clinit>() -> <clinit>
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    boolean -get0() -> -get0
    java.lang.String -wrap0(android.media.MediaRouter$RouteInfo) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.CastControllerImpl,android.media.projection.MediaProjectionInfo,boolean) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.policy.CastControllerImpl) -> -wrap2
com.android.systemui.pip.phone.PipAccessibilityInteractionConnection -> com.android.systemui.pip.phone.PipAccessibilityInteractionConnection:
    java.util.List mAccessibilityNodeInfoList -> mAccessibilityNodeInfoList
    com.android.systemui.pip.phone.PipAccessibilityInteractionConnection$AccessibilityCallbacks mCallbacks -> mCallbacks
    android.os.Handler mHandler -> mHandler
    com.android.systemui.pip.phone.PipMotionHelper mMotionHelper -> mMotionHelper
    android.graphics.Rect mTmpBounds -> mTmpBounds
    void <init>(com.android.systemui.pip.phone.PipMotionHelper,com.android.systemui.pip.phone.PipAccessibilityInteractionConnection$AccessibilityCallbacks,android.os.Handler) -> <init>
    void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec,android.os.Bundle) -> findAccessibilityNodeInfoByAccessibilityId
    void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec) -> findAccessibilityNodeInfosByText
    void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec) -> findAccessibilityNodeInfosByViewId
    void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec) -> findFocus
    void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec) -> focusSearch
    java.util.List getNodeList() -> getNodeList
    android.view.accessibility.AccessibilityNodeInfo obtainRootAccessibilityNodeInfo() -> obtainRootAccessibilityNodeInfo
    void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long) -> performAccessibilityAction
    void lambda$-com_android_systemui_pip_phone_PipAccessibilityInteractionConnection_3319() -> lambda$-com_android_systemui_pip_phone_PipAccessibilityInteractionConnection_3319
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int mMaxVolume -> mMaxVolume
    int mVolumeControl -> mVolumeControl
    int mAudioStream -> mAudioStream
    int mCurrentVolume -> mCurrentVolume
    int mPlaybackType -> mPlaybackType
    void <init>(int,int,int,int,int) -> <init>
com.android.systemui.qs.QSPanel$Record -> com.android.systemui.qs.QSPanel$Record:
    com.android.systemui.plugins.qs.DetailAdapter detailAdapter -> detailAdapter
    int x -> x
    int y -> y
    void <init>() -> <init>
com.android.systemui.statusbar.policy.UserSwitcherController$7 -> com.android.systemui.statusbar.policy.UserSwitcherController$7:
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    boolean val$addUsersWhenLocked -> val$addUsersWhenLocked
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController,boolean) -> <init>
    java.util.ArrayList doInBackground(android.util.SparseArray[]) -> doInBackground
    void onPostExecute(java.util.ArrayList) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.android.systemui.statusbar.phone.StatusBar$1 -> com.android.systemui.statusbar.phone.StatusBar$1:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onUserSetupChanged() -> onUserSetupChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.SearchView$2:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void run() -> run
android.support.v7.mediarouter.R$interpolator -> android.support.v7.mediarouter.R$interpolator:
    int mr_fast_out_slow_in -> mr_fast_out_slow_in
    int mr_linear_out_slow_in -> mr_linear_out_slow_in
    void <init>() -> <init>
com.android.systemui.util.Utils -> com.android.systemui.util.Utils:
    void safeForeach(java.util.List,java.util.function.Consumer) -> safeForeach
    void <init>() -> <init>
android.support.v7.widget.AppCompatImageHelper -> android.support.v7.widget.AppCompatImageHelper:
    android.support.v7.widget.TintInfo mInternalImageTint -> mInternalImageTint
    android.support.v7.widget.TintInfo mTmpInfo -> mTmpInfo
    android.widget.ImageView mView -> mView
    android.support.v7.widget.TintInfo mImageTint -> mImageTint
    android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    void setImageResource(int) -> setImageResource
    void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    void <init>(android.widget.ImageView) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void applySupportImageTint() -> applySupportImageTint
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
    boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
android.support.v17.leanback.widget.BaseGridView$OnMotionInterceptListener -> android.support.v17.leanback.widget.BaseGridView$OnMotionInterceptListener:
    boolean onInterceptMotionEvent(android.view.MotionEvent) -> onInterceptMotionEvent
com.android.systemui.statusbar.NotificationSnooze$1 -> com.android.systemui.statusbar.NotificationSnooze$1:
    boolean cancelled -> cancelled
    com.android.systemui.statusbar.NotificationSnooze this$0 -> this$0
    boolean val$show -> val$show
    void <init>(com.android.systemui.statusbar.NotificationSnooze,boolean) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.plugins.annotations.DependsOn -> com.android.systemui.plugins.annotations.DependsOn:
    java.lang.Class target() -> target
com.android.systemui.statusbar.policy.HotspotController$Callback -> com.android.systemui.statusbar.policy.HotspotController$Callback:
    void onHotspotChanged(boolean) -> onHotspotChanged
android.support.v4.widget.NestedScrollView$OnScrollChangeListener -> android.support.v4.widget.NestedScrollView$OnScrollChangeListener:
    void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int) -> onScrollChange
android.support.v4.media.session.IMediaSession -> android.support.v4.media.session.IMediaSession:
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    java.lang.String getPackageName() -> getPackageName
    boolean isShuffleModeEnabledDeprecated() -> isShuffleModeEnabledDeprecated
    void setShuffleModeEnabledDeprecated(boolean) -> setShuffleModeEnabledDeprecated
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    java.lang.String getTag() -> getTag
    void play() -> play
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void previous() -> previous
    void removeQueueItemAt(int) -> removeQueueItemAt
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void pause() -> pause
    void setShuffleMode(int) -> setShuffleMode
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void stop() -> stop
    long getFlags() -> getFlags
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    void rewind() -> rewind
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    void prepare() -> prepare
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    void setRepeatMode(int) -> setRepeatMode
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    android.os.Bundle getExtras() -> getExtras
    int getRepeatMode() -> getRepeatMode
    int getRatingType() -> getRatingType
    void fastForward() -> fastForward
    void next() -> next
    void skipToQueueItem(long) -> skipToQueueItem
    int getShuffleMode() -> getShuffleMode
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
com.android.systemui.tuner.-$Lambda$GAjFEvOLiSKNXfjSNjYuk-hj54A -> com.android.systemui.tuner.-$Lambda$GAjFEvOLiSKNXfjSNjYuk-hj54A:
    byte $id -> $id
    com.android.systemui.tuner.-$Lambda$GAjFEvOLiSKNXfjSNjYuk-hj54A $INST$0 -> $INST$0
    com.android.systemui.tuner.-$Lambda$GAjFEvOLiSKNXfjSNjYuk-hj54A $INST$1 -> $INST$1
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void accept(java.lang.Object) -> accept
com.android.settingslib.bluetooth.LocalBluetoothProfile -> com.android.settingslib.bluetooth.LocalBluetoothProfile:
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
com.android.systemui.power.PowerUI$WarningsUI -> com.android.systemui.power.PowerUI$WarningsUI:
    void dismissHighTemperatureWarning() -> dismissHighTemperatureWarning
    void dismissInvalidChargerWarning() -> dismissInvalidChargerWarning
    void dismissLowBatteryWarning() -> dismissLowBatteryWarning
    void dump(java.io.PrintWriter) -> dump
    boolean isInvalidChargerWarningShowing() -> isInvalidChargerWarningShowing
    void showHighTemperatureWarning() -> showHighTemperatureWarning
    void showInvalidChargerWarning() -> showInvalidChargerWarning
    void showLowBatteryWarning(boolean) -> showLowBatteryWarning
    void showThermalShutdownWarning() -> showThermalShutdownWarning
    void update(int,int,long) -> update
    void updateLowBatteryWarning() -> updateLowBatteryWarning
    void userSwitched() -> userSwitched
com.android.settingslib.drawer.CategoryManager -> com.android.settingslib.drawer.CategoryManager:
    com.android.settingslib.applications.InterestingConfigChanges mInterestingConfigChanges -> mInterestingConfigChanges
    java.util.Map mCategoryByKeyMap -> mCategoryByKeyMap
    java.util.Map mTileByComponentCache -> mTileByComponentCache
    com.android.settingslib.drawer.CategoryManager sInstance -> sInstance
    java.lang.String mExtraAction -> mExtraAction
    java.util.List mCategories -> mCategories
    void reloadAllCategories(android.content.Context,java.lang.String) -> reloadAllCategories
    com.android.settingslib.drawer.CategoryManager get(android.content.Context) -> get
    void <init>(android.content.Context,java.lang.String) -> <init>
    void backwardCompatCleanupForCategory(java.util.Map,java.util.Map) -> backwardCompatCleanupForCategory
    com.android.settingslib.drawer.CategoryManager get(android.content.Context,java.lang.String) -> get
    void sortCategoriesForExternalTiles(android.content.Context,com.android.settingslib.drawer.DashboardCategory) -> sortCategoriesForExternalTiles
    void updateCategoryFromBlacklist(java.util.Set) -> updateCategoryFromBlacklist
    void tryInitCategories(android.content.Context,boolean,java.lang.String) -> tryInitCategories
    int lambda$-com_android_settingslib_drawer_CategoryManager_9560(java.lang.String,com.android.settingslib.drawer.Tile,com.android.settingslib.drawer.Tile) -> lambda$-com_android_settingslib_drawer_CategoryManager_9560
    void sortCategories(android.content.Context,java.util.Map) -> sortCategories
    void filterDuplicateTiles(java.util.Map) -> filterDuplicateTiles
android.support.v4.widget.TintableImageSourceView -> android.support.v4.widget.TintableImageSourceView:
    android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
com.android.systemui.egg.MLand$Scenery -> com.android.systemui.egg.MLand$Scenery:
    int h -> h
    float v -> v
    int w -> w
    float z -> z
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context) -> <init>
    void step(long,long,float,float) -> step
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationFinished
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
android.support.v7.graphics.ColorCutQuantizer -> android.support.v7.graphics.ColorCutQuantizer:
    android.util.TimingLogger mTimingLogger -> mTimingLogger
    java.util.Comparator VBOX_COMPARATOR_VOLUME -> VBOX_COMPARATOR_VOLUME
    java.util.List mQuantizedColors -> mQuantizedColors
    android.support.v7.graphics.Palette$Filter[] mFilters -> mFilters
    int[] mHistogram -> mHistogram
    int[] mColors -> mColors
    float[] mTempHsl -> mTempHsl
    int quantizedGreen(int) -> quantizedGreen
    void splitBoxes(java.util.PriorityQueue,int) -> splitBoxes
    void modifySignificantOctet(int[],int,int,int) -> modifySignificantOctet
    int approximateToRgb888(int) -> approximateToRgb888
    int quantizeFromRgb888(int) -> quantizeFromRgb888
    void <init>(int[],int,android.support.v7.graphics.Palette$Filter[]) -> <init>
    int quantizedRed(int) -> quantizedRed
    java.util.List generateAverageColors(java.util.Collection) -> generateAverageColors
    java.util.List quantizePixels(int) -> quantizePixels
    boolean shouldIgnoreColor(int,float[]) -> shouldIgnoreColor
    int approximateToRgb888(int,int,int) -> approximateToRgb888
    int modifyWordWidth(int,int,int) -> modifyWordWidth
    int quantizedBlue(int) -> quantizedBlue
    boolean shouldIgnoreColor(int) -> shouldIgnoreColor
    void <clinit>() -> <clinit>
    boolean shouldIgnoreColor(android.support.v7.graphics.Palette$Swatch) -> shouldIgnoreColor
    java.util.List getQuantizedColors() -> getQuantizedColors
com.android.systemui.screenshot.GlobalScreenshot$1 -> com.android.systemui.screenshot.GlobalScreenshot$1:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.statusbar.car.FullscreenUserSwitcher$3 -> com.android.systemui.statusbar.car.FullscreenUserSwitcher$3:
    com.android.systemui.statusbar.car.FullscreenUserSwitcher this$0 -> this$0
    void <init>(com.android.systemui.statusbar.car.FullscreenUserSwitcher,long,long) -> <init>
    void onFinish() -> onFinish
    void onTick(long) -> onTick
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> mAction
    int mIcon -> mIcon
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.CharSequence mName -> mName
    java.lang.Object mCustomActionObj -> mCustomActionObj
    android.os.Bundle mExtras -> mExtras
    android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
com.android.systemui.fragments.FragmentService -> com.android.systemui.fragments.FragmentService:
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    android.util.ArrayMap mHosts -> mHosts
    com.android.systemui.fragments.FragmentHostManager getFragmentHostManager(android.view.View) -> getFragmentHostManager
    void destroyAll() -> destroyAll
    void <init>(android.content.Context) -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context -get0(com.android.systemui.fragments.FragmentService) -> -get0
    android.os.Handler -get1(com.android.systemui.fragments.FragmentService) -> -get1
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$6 -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$6:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.app.WindowDecorActionBar$3 -> android.support.v7.app.WindowDecorActionBar$3:
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v17.leanback.widget.SearchBar$SearchBarPermissionListener -> android.support.v17.leanback.widget.SearchBar$SearchBarPermissionListener:
    void requestAudioPermission() -> requestAudioPermission
com.android.systemui.qs.QSFragment -> com.android.systemui.qs.QSFragment:
    android.animation.Animator$AnimatorListener mAnimateHeaderSlidingInListener -> mAnimateHeaderSlidingInListener
    com.android.systemui.qs.QSContainerImpl mContainer -> mContainer
    long mDelay -> mDelay
    com.android.systemui.qs.QSFooter mFooter -> mFooter
    com.android.systemui.qs.QuickStatusBarHeader mHeader -> mHeader
    boolean mHeaderAnimating -> mHeaderAnimating
    boolean mKeyguardShowing -> mKeyguardShowing
    int mLayoutDirection -> mLayoutDirection
    boolean mListening -> mListening
    com.android.systemui.plugins.qs.QS$HeightListener mPanelView -> mPanelView
    com.android.systemui.qs.QSAnimator mQSAnimator -> mQSAnimator
    com.android.systemui.qs.customize.QSCustomizer mQSCustomizer -> mQSCustomizer
    com.android.systemui.qs.QSDetail mQSDetail -> mQSDetail
    com.android.systemui.qs.QSPanel mQSPanel -> mQSPanel
    android.graphics.Rect mQsBounds -> mQsBounds
    boolean mQsExpanded -> mQsExpanded
    boolean mStackScrollerOverscrolling -> mStackScrollerOverscrolling
    android.view.ViewTreeObserver$OnPreDrawListener mStartHeaderSlidingIn -> mStartHeaderSlidingIn
    void <init>() -> <init>
    void animateHeaderSlidingIn(long) -> animateHeaderSlidingIn
    void animateHeaderSlidingOut() -> animateHeaderSlidingOut
    void closeDetail() -> closeDetail
    int getDesiredHeight() -> getDesiredHeight
    android.view.View getHeader() -> getHeader
    int getQsMinExpansionHeight() -> getQsMinExpansionHeight
    com.android.systemui.qs.QSPanel getQsPanel() -> getQsPanel
    void hideImmediately() -> hideImmediately
    boolean isCustomizing() -> isCustomizing
    boolean isExpanded() -> isExpanded
    boolean isListening() -> isListening
    boolean isShowingDetail() -> isShowingDetail
    void notifyCustomizeChanged() -> notifyCustomizeChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setContainer(android.view.ViewGroup) -> setContainer
    void setExpandClickListener(android.view.View$OnClickListener) -> setExpandClickListener
    void setExpanded(boolean) -> setExpanded
    void setHasNotifications(boolean) -> setHasNotifications
    void setHeaderClickable(boolean) -> setHeaderClickable
    void setHeaderListening(boolean) -> setHeaderListening
    void setHeightOverride(int) -> setHeightOverride
    void setHost(com.android.systemui.qs.QSTileHost) -> setHost
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void setListening(boolean) -> setListening
    void setOverscrolling(boolean) -> setOverscrolling
    void setPanelView(com.android.systemui.plugins.qs.QS$HeightListener) -> setPanelView
    void setQsExpansion(float,float) -> setQsExpansion
    void updateQsState() -> updateQsState
    android.animation.Animator$AnimatorListener -get0(com.android.systemui.qs.QSFragment) -> -get0
    long -get1(com.android.systemui.qs.QSFragment) -> -get1
    boolean -set0(com.android.systemui.qs.QSFragment,boolean) -> -set0
    void -wrap0(com.android.systemui.qs.QSFragment) -> -wrap0
android.support.v7.media.MediaRouterJellybeanMr1$CallbackProxy -> android.support.v7.media.MediaRouterJellybeanMr1$CallbackProxy:
    void <init>(android.support.v7.media.MediaRouterJellybeanMr1$Callback) -> <init>
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
com.android.systemui.statusbar.phone.-$Lambda$C8S9kJaaTlzVq3LYiZGDd0cUnJ4 -> com.android.systemui.statusbar.phone.-$Lambda$C8S9kJaaTlzVq3LYiZGDd0cUnJ4:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.recents.views.RecentsView -> com.android.systemui.recents.views.RecentsView:
    android.graphics.Rect mSystemInsets -> mSystemInsets
    boolean mAwaitingFirstLayout -> mAwaitingFirstLayout
    com.android.internal.colorextraction.drawable.GradientDrawable mBackgroundScrim -> mBackgroundScrim
    android.animation.ValueAnimator mBackgroundScrimAnimator -> mBackgroundScrimAnimator
    float mBusynessFactor -> mBusynessFactor
    int mDividerSize -> mDividerSize
    android.widget.TextView mEmptyView -> mEmptyView
    com.android.systemui.statusbar.FlingAnimationUtils mFlingAnimationUtils -> mFlingAnimationUtils
    boolean mLastTaskLaunchedWasFreeform -> mLastTaskLaunchedWasFreeform
    android.graphics.drawable.ColorDrawable mMultiWindowBackgroundScrim -> mMultiWindowBackgroundScrim
    android.widget.TextView mStackActionButton -> mStackActionButton
    int mStackButtonShadowColor -> mStackButtonShadowColor
    android.graphics.PointF mStackButtonShadowDistance -> mStackButtonShadowDistance
    float mStackButtonShadowRadius -> mStackButtonShadowRadius
    com.android.systemui.recents.views.TaskStackView mTaskStackView -> mTaskStackView
    android.graphics.Point mTmpDisplaySize -> mTmpDisplaySize
    com.android.systemui.recents.views.RecentsViewTouchHandler mTouchHandler -> mTouchHandler
    com.android.systemui.recents.views.RecentsTransitionHelper mTransitionHelper -> mTransitionHelper
    android.animation.ValueAnimator$AnimatorUpdateListener mUpdateBackgroundScrimAlpha -> mUpdateBackgroundScrimAlpha
    com.android.systemui.recents.model.TaskStack getStack() -> getStack
    android.view.View getStackActionButton() -> getStackActionButton
    android.graphics.Rect getStackActionButtonBoundsFromStackLayout() -> getStackActionButtonBoundsFromStackLayout
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void animateBackgroundScrim(float,int) -> animateBackgroundScrim
    void animateEmptyView(boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> animateEmptyView
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    float getOpaqueScrimAlpha() -> getOpaqueScrimAlpha
    android.graphics.Rect getTaskRect(com.android.systemui.recents.views.TaskView) -> getTaskRect
    void hideEmptyView() -> hideEmptyView
    void hideStackActionButton(int,boolean) -> hideStackActionButton
    void hideStackActionButton(int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> hideStackActionButton
    boolean isLastTaskLaunchedFreeform() -> isLastTaskLaunchedFreeform
    boolean launchFocusedTask(int) -> launchFocusedTask
    boolean launchPreviousTask() -> launchPreviousTask
    android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    void onAttachedToWindow() -> onAttachedToWindow
    void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.DraggingInRecentsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.DraggingInRecentsEndedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.ShowStackActionButtonEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.HideStackActionButtonEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent) -> onBusEvent
    void onBusEvent(com.android.systemui.recents.events.activity.ShowEmptyViewEvent) -> onBusEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDrawForeground(android.graphics.Canvas) -> onDrawForeground
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onReload(com.android.systemui.recents.model.TaskStack,boolean) -> onReload
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void reevaluateStyles() -> reevaluateStyles
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void setScrimColors(com.android.internal.colorextraction.ColorExtractor$GradientColors,boolean) -> setScrimColors
    void showEmptyView(int) -> showEmptyView
    void showStackActionButton(int,boolean) -> showStackActionButton
    void updateBackgroundScrim(android.view.Window,boolean) -> updateBackgroundScrim
    boolean updateBusyness() -> updateBusyness
    void updateScrimOpacity() -> updateScrimOpacity
    void updateStack(com.android.systemui.recents.model.TaskStack,boolean) -> updateStack
    void updateVisibleDockRegions(com.android.systemui.recents.model.TaskStack$DockState[],boolean,int,int,boolean,boolean) -> updateVisibleDockRegions
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void lambda$-com_android_systemui_recents_views_RecentsView_5780(android.animation.ValueAnimator) -> lambda$-com_android_systemui_recents_views_RecentsView_5780
    android.widget.TextView -get0(com.android.systemui.recents.views.RecentsView) -> -get0
    com.android.systemui.recents.views.RecentsTransitionHelper -get1(com.android.systemui.recents.views.RecentsView) -> -get1
com.android.systemui.ForegroundServicesDialog -> com.android.systemui.ForegroundServicesDialog:
    com.android.systemui.ForegroundServicesDialog$PackageItemAdapter mAdapter -> mAdapter
    android.content.DialogInterface$OnClickListener mAppClickListener -> mAppClickListener
    android.view.LayoutInflater mInflater -> mInflater
    com.android.internal.logging.MetricsLogger mMetricsLogger -> mMetricsLogger
    java.lang.String[] mPackages -> mPackages
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onPause() -> onPause
    void onPrepareListView(android.widget.ListView) -> onPrepareListView
    void onResume() -> onResume
    void onStop() -> onStop
    void updateApps(android.content.Intent) -> updateApps
    com.android.systemui.ForegroundServicesDialog$PackageItemAdapter -get0(com.android.systemui.ForegroundServicesDialog) -> -get0
android.support.v17.leanback.widget.StaticShadowHelper$ShadowHelperVersionImpl -> android.support.v17.leanback.widget.StaticShadowHelper$ShadowHelperVersionImpl:
android.support.v7.widget.AppCompatProgressBarHelper -> android.support.v7.widget.AppCompatProgressBarHelper:
    android.widget.ProgressBar mView -> mView
    android.graphics.Bitmap mSampleTile -> mSampleTile
    int[] TINT_ATTRS -> TINT_ATTRS
    void <clinit>() -> <clinit>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    android.graphics.Bitmap getSampleTime() -> getSampleTime
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    void <init>(android.widget.ProgressBar) -> <init>
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
android.support.v7.widget.RecyclerView$SavedState$1 -> android.support.v7.widget.RecyclerView$SavedState$1:
    android.support.v7.widget.RecyclerView$SavedState[] newArray(int) -> newArray
    android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.settings.CurrentUserTracker$UserReceiver -> com.android.systemui.settings.CurrentUserTracker$UserReceiver:
    android.content.Context mAppContext -> mAppContext
    java.util.List mCallbacks -> mCallbacks
    int mCurrentUserId -> mCurrentUserId
    boolean mReceiverRegistered -> mReceiverRegistered
    com.android.systemui.settings.CurrentUserTracker$UserReceiver sInstance -> sInstance
    void <init>(android.content.Context) -> <init>
    void addTracker(java.util.function.Consumer) -> addTracker
    com.android.systemui.settings.CurrentUserTracker$UserReceiver getInstance(android.content.Context) -> getInstance
    void notifyUserSwitched(int) -> notifyUserSwitched
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void removeTracker(java.util.function.Consumer) -> removeTracker
    void -wrap0(com.android.systemui.settings.CurrentUserTracker$UserReceiver,java.util.function.Consumer) -> -wrap0
    void -wrap1(com.android.systemui.settings.CurrentUserTracker$UserReceiver,java.util.function.Consumer) -> -wrap1
android.support.v4.provider.FontsContractCompat$1 -> android.support.v4.provider.FontsContractCompat$1:
    int compare(byte[],byte[]) -> compare
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.systemui.statusbar.policy.-$Lambda$ZBSSeqFNBAvA0ccFE9j_JqrBBT8 -> com.android.systemui.statusbar.policy.-$Lambda$ZBSSeqFNBAvA0ccFE9j_JqrBBT8:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void $m$4() -> $m$4
    void run() -> run
com.android.keyguard.PasswordTextView$CharState$8 -> com.android.keyguard.PasswordTextView$CharState$8:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.volume.ZenFooter$1 -> com.android.systemui.volume.ZenFooter$1:
    com.android.systemui.volume.ZenFooter this$0 -> this$0
    void <init>(com.android.systemui.volume.ZenFooter) -> <init>
    void onConfigChanged(android.service.notification.ZenModeConfig) -> onConfigChanged
    void onZenChanged(int) -> onZenChanged
com.android.systemui.plugins.PluginInstanceManager -> com.android.systemui.plugins.PluginInstanceManager:
    java.lang.String PLUGIN_PERMISSION -> PLUGIN_PERMISSION
    boolean isDebuggable -> isDebuggable
    java.lang.String mAction -> mAction
    boolean mAllowMultiple -> mAllowMultiple
    android.content.Context mContext -> mContext
    com.android.systemui.plugins.PluginListener mListener -> mListener
    com.android.systemui.plugins.PluginInstanceManager$MainHandler mMainHandler -> mMainHandler
    com.android.systemui.plugins.PluginManagerImpl mManager -> mManager
    com.android.systemui.plugins.PluginInstanceManager$PluginHandler mPluginHandler -> mPluginHandler
    android.content.pm.PackageManager mPm -> mPm
    com.android.systemui.plugins.VersionInfo mVersion -> mVersion
    void <init>(android.content.Context,java.lang.String,com.android.systemui.plugins.PluginListener,boolean,android.os.Looper,com.android.systemui.plugins.VersionInfo,com.android.systemui.plugins.PluginManagerImpl) -> <init>
    void <init>(android.content.Context,android.content.pm.PackageManager,java.lang.String,com.android.systemui.plugins.PluginListener,boolean,android.os.Looper,com.android.systemui.plugins.VersionInfo,com.android.systemui.plugins.PluginManagerImpl,boolean) -> <init>
    boolean checkAndDisable(java.lang.String) -> checkAndDisable
    boolean dependsOn(com.android.systemui.plugins.Plugin,java.lang.Class) -> dependsOn
    void destroy() -> destroy
    void disable(com.android.systemui.plugins.PluginInstanceManager$PluginInfo) -> disable
    boolean disableAll() -> disableAll
    com.android.systemui.plugins.PluginInstanceManager$PluginInfo getPlugin() -> getPlugin
    void loadAll() -> loadAll
    void onPackageChange(java.lang.String) -> onPackageChange
    void onPackageRemoved(java.lang.String) -> onPackageRemoved
    boolean -get0(com.android.systemui.plugins.PluginInstanceManager) -> -get0
    java.lang.String -get1(com.android.systemui.plugins.PluginInstanceManager) -> -get1
    boolean -get2(com.android.systemui.plugins.PluginInstanceManager) -> -get2
    android.content.Context -get3(com.android.systemui.plugins.PluginInstanceManager) -> -get3
    com.android.systemui.plugins.PluginListener -get4(com.android.systemui.plugins.PluginInstanceManager) -> -get4
    com.android.systemui.plugins.PluginManagerImpl -get5(com.android.systemui.plugins.PluginInstanceManager) -> -get5
    android.content.pm.PackageManager -get6(com.android.systemui.plugins.PluginInstanceManager) -> -get6
    com.android.systemui.plugins.VersionInfo -get7(com.android.systemui.plugins.PluginInstanceManager) -> -get7
com.android.systemui.qs.customize.TileQueryHelper$1 -> com.android.systemui.qs.customize.TileQueryHelper$1:
    com.android.systemui.qs.customize.TileQueryHelper this$0 -> this$0
    com.android.systemui.plugins.qs.QSTile val$tile -> val$tile
    android.os.Handler val$mainHandler -> val$mainHandler
    java.lang.String val$spec -> val$spec
    void <init>(com.android.systemui.qs.customize.TileQueryHelper,com.android.systemui.plugins.qs.QSTile,android.os.Handler,java.lang.String) -> <init>
    void run() -> run
android.support.v17.leanback.widget.BaseCardView$AnimationBase -> android.support.v17.leanback.widget.BaseCardView$AnimationBase:
    android.support.v17.leanback.widget.BaseCardView this$0 -> this$0
    void mockStart() -> mockStart
    void <init>(android.support.v17.leanback.widget.BaseCardView) -> <init>
    void mockEnd() -> mockEnd
com.android.systemui.statusbar.stack.ExpandableViewState$1 -> com.android.systemui.statusbar.stack.ExpandableViewState$1:
    com.android.systemui.statusbar.stack.ExpandableViewState this$0 -> this$0
    com.android.systemui.statusbar.ExpandableView val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.ExpandableView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.policy.UserSwitcherController$4 -> com.android.systemui.statusbar.policy.UserSwitcherController$4:
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.settingslib.core.lifecycle.events.OnDestroy -> com.android.settingslib.core.lifecycle.events.OnDestroy:
    void onDestroy() -> onDestroy
com.android.systemui.qs.PseudoGridView$ViewGroupAdapterBridge -> com.android.systemui.qs.PseudoGridView$ViewGroupAdapterBridge:
    android.widget.BaseAdapter mAdapter -> mAdapter
    boolean mReleased -> mReleased
    java.lang.ref.WeakReference mViewGroup -> mViewGroup
    void link(android.view.ViewGroup,android.widget.BaseAdapter) -> link
    void <init>(android.view.ViewGroup,android.widget.BaseAdapter) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void refresh() -> refresh
    void release() -> release
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$2 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$2:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout this$0 -> this$0
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> <init>
    boolean onPreDraw() -> onPreDraw
com.android.systemui.volume.ZenModePanel$TransitionHelper -> com.android.systemui.volume.ZenModePanel$TransitionHelper:
    boolean mPendingUpdateWidgets -> mPendingUpdateWidgets
    boolean mTransitioning -> mTransitioning
    android.util.ArraySet mTransitioningViews -> mTransitioningViews
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    void <init>(com.android.systemui.volume.ZenModePanel) -> <init>
    void clear() -> clear
    void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int) -> endTransition
    boolean isTransitioning() -> isTransitioning
    void pendingUpdateWidgets() -> pendingUpdateWidgets
    void run() -> run
    void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int) -> startTransition
    void updateTransitioning() -> updateTransitioning
    void <init>(com.android.systemui.volume.ZenModePanel,com.android.systemui.volume.ZenModePanel$TransitionHelper) -> <init>
android.support.v7.widget.RecyclerView$Adapter -> android.support.v7.widget.RecyclerView$Adapter:
    boolean mHasStableIds -> mHasStableIds
    android.support.v7.widget.RecyclerView$AdapterDataObservable mObservable -> mObservable
    long getItemId(int) -> getItemId
    void setHasStableIds(boolean) -> setHasStableIds
    void notifyItemChanged(int) -> notifyItemChanged
    void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
    android.support.v7.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView) -> onAttachedToRecyclerView
    void notifyItemMoved(int,int) -> notifyItemMoved
    boolean hasObservers() -> hasObservers
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void notifyItemInserted(int) -> notifyItemInserted
    void bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    void notifyItemRemoved(int) -> notifyItemRemoved
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    boolean hasStableIds() -> hasStableIds
    void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    int getItemViewType(int) -> getItemViewType
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    int getItemCount() -> getItemCount
    void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
    void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    void <init>() -> <init>
    void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView) -> onDetachedFromRecyclerView
com.android.systemui.statusbar.policy.ZenModeController -> com.android.systemui.statusbar.policy.ZenModeController:
    android.service.notification.ZenModeConfig getConfig() -> getConfig
    int getCurrentUser() -> getCurrentUser
    android.service.notification.ZenModeConfig$ZenRule getManualRule() -> getManualRule
    long getNextAlarm() -> getNextAlarm
    int getZen() -> getZen
    boolean isVolumeRestricted() -> isVolumeRestricted
    void setZen(int,android.net.Uri,java.lang.String) -> setZen
com.android.systemui.statusbar.phone.AutoTileManager$1 -> com.android.systemui.statusbar.phone.AutoTileManager$1:
    com.android.systemui.statusbar.phone.AutoTileManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.AutoTileManager) -> <init>
    void onManagedProfileChanged() -> onManagedProfileChanged
    void onManagedProfileRemoved() -> onManagedProfileRemoved
    void lambda$-com_android_systemui_statusbar_phone_AutoTileManager$1_4471() -> lambda$-com_android_systemui_statusbar_phone_AutoTileManager$1_4471
com.android.settingslib.bluetooth.MapProfile -> com.android.settingslib.bluetooth.MapProfile:
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    android.bluetooth.BluetoothMap mService -> mService
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    android.os.ParcelUuid[] UUIDS -> UUIDS
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    android.bluetooth.BluetoothMap -get4(com.android.settingslib.bluetooth.MapProfile) -> -get4
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.MapProfile) -> -get1
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> <init>
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.settingslib.bluetooth.MapProfile) -> -get2
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    boolean -set0(com.android.settingslib.bluetooth.MapProfile,boolean) -> -set0
    android.bluetooth.BluetoothMap -set1(com.android.settingslib.bluetooth.MapProfile,android.bluetooth.BluetoothMap) -> -set1
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get3(com.android.settingslib.bluetooth.MapProfile) -> -get3
    void finalize() -> finalize
com.android.settingslib.animation.AppearAnimationUtils$RowTranslationScaler -> com.android.settingslib.animation.AppearAnimationUtils$RowTranslationScaler:
    float getRowTranslationScale(int,int) -> getRowTranslationScale
android.support.v7.widget.TintResources -> android.support.v7.widget.TintResources:
    java.lang.ref.WeakReference mContextRef -> mContextRef
    void <init>(android.content.Context,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
android.support.v17.leanback.transition.FadeAndShortSlide -> android.support.v17.leanback.transition.FadeAndShortSlide:
    android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateEnd -> sCalculateEnd
    android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator -> mSlideCalculator
    android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTop -> sCalculateTop
    android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateStart -> sCalculateStart
    float mDistance -> mDistance
    android.transition.Visibility mFade -> mFade
    android.animation.TimeInterpolator sDecelerate -> sDecelerate
    android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTopBottom -> sCalculateTopBottom
    android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateBottom -> sCalculateBottom
    android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateStartEnd -> sCalculateStartEnd
    android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onAppear
    float getHorizontalDistance(android.view.ViewGroup) -> getHorizontalDistance
    void <init>(int) -> <init>
    android.transition.Transition clone() -> clone
    java.lang.Object clone() -> clone
    android.transition.Transition addListener(android.transition.Transition$TransitionListener) -> addListener
    void setEpicenterCallback(android.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    void captureEndValues(android.transition.TransitionValues) -> captureEndValues
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.transition.Transition removeListener(android.transition.Transition$TransitionListener) -> removeListener
    void captureStartValues(android.transition.TransitionValues) -> captureStartValues
    float getVerticalDistance(android.view.ViewGroup) -> getVerticalDistance
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void captureValues(android.transition.TransitionValues) -> captureValues
    void setSlideEdge(int) -> setSlideEdge
    android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onDisappear
android.support.v7.preference.R$styleable -> android.support.v7.preference.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int[] ActionMenuItemView -> ActionMenuItemView
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int[] ActivityChooserView -> ActivityChooserView
    int[] AlertDialog -> AlertDialog
    int[] AnimatedImageView -> AnimatedImageView
    int[] AppCompatImageView -> AppCompatImageView
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int[] AppCompatTextView -> AppCompatTextView
    int[] AppCompatTheme -> AppCompatTheme
    int[] AutoReinflateContainer -> AutoReinflateContainer
    int[] AutoSizingList -> AutoSizingList
    int[] BackgroundStyle -> BackgroundStyle
    int BackgroundStyle_android_selectableItemBackground -> BackgroundStyle_android_selectableItemBackground
    int[] BatteryMeterView -> BatteryMeterView
    int[] ButtonBarLayout -> ButtonBarLayout
    int[] CarrierText -> CarrierText
    int[] CheckBoxPreference -> CheckBoxPreference
    int CheckBoxPreference_android_disableDependentsState -> CheckBoxPreference_android_disableDependentsState
    int CheckBoxPreference_android_summaryOff -> CheckBoxPreference_android_summaryOff
    int CheckBoxPreference_android_summaryOn -> CheckBoxPreference_android_summaryOn
    int CheckBoxPreference_disableDependentsState -> CheckBoxPreference_disableDependentsState
    int CheckBoxPreference_summaryOff -> CheckBoxPreference_summaryOff
    int CheckBoxPreference_summaryOn -> CheckBoxPreference_summaryOn
    int[] Clock -> Clock
    int[] ColorStateListItem -> ColorStateListItem
    int[] CompoundButton -> CompoundButton
    int[] DateView -> DateView
    int[] DeadZone -> DeadZone
    int[] DialogPreference -> DialogPreference
    int DialogPreference_android_dialogIcon -> DialogPreference_android_dialogIcon
    int DialogPreference_android_dialogLayout -> DialogPreference_android_dialogLayout
    int DialogPreference_android_dialogMessage -> DialogPreference_android_dialogMessage
    int DialogPreference_android_dialogTitle -> DialogPreference_android_dialogTitle
    int DialogPreference_android_negativeButtonText -> DialogPreference_android_negativeButtonText
    int DialogPreference_android_positiveButtonText -> DialogPreference_android_positiveButtonText
    int DialogPreference_dialogIcon -> DialogPreference_dialogIcon
    int DialogPreference_dialogLayout -> DialogPreference_dialogLayout
    int DialogPreference_dialogMessage -> DialogPreference_dialogMessage
    int DialogPreference_dialogTitle -> DialogPreference_dialogTitle
    int DialogPreference_negativeButtonText -> DialogPreference_negativeButtonText
    int DialogPreference_positiveButtonText -> DialogPreference_positiveButtonText
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int[] HybridNotificationTheme -> HybridNotificationTheme
    int[] KeyButtonView -> KeyButtonView
    int[] KeyguardSecurityViewFlipper_Layout -> KeyguardSecurityViewFlipper_Layout
    int[] LeanbackGuidedStepTheme -> LeanbackGuidedStepTheme
    int[] LeanbackOnboardingTheme -> LeanbackOnboardingTheme
    int[] LeanbackTheme -> LeanbackTheme
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int[] ListPopupWindow -> ListPopupWindow
    int[] ListPreference -> ListPreference
    int ListPreference_android_entries -> ListPreference_android_entries
    int ListPreference_android_entryValues -> ListPreference_android_entryValues
    int ListPreference_entries -> ListPreference_entries
    int ListPreference_entryValues -> ListPreference_entryValues
    int[] MediaRouteButton -> MediaRouteButton
    int[] MenuGroup -> MenuGroup
    int[] MenuItem -> MenuItem
    int[] MenuView -> MenuView
    int[] MultiSelectListPreference -> MultiSelectListPreference
    int MultiSelectListPreference_android_entries -> MultiSelectListPreference_android_entries
    int MultiSelectListPreference_android_entryValues -> MultiSelectListPreference_android_entryValues
    int MultiSelectListPreference_entries -> MultiSelectListPreference_entries
    int MultiSelectListPreference_entryValues -> MultiSelectListPreference_entryValues
    int[] NotificationLinearLayout -> NotificationLinearLayout
    int[] NumPadKey -> NumPadKey
    int[] PagingIndicator -> PagingIndicator
    int[] PasswordTextView -> PasswordTextView
    int[] PluginInflateContainer -> PluginInflateContainer
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int[] Preference -> Preference
    int[] PreferenceFragment -> PreferenceFragment
    int[] PreferenceFragmentCompat -> PreferenceFragmentCompat
    int[] PreferenceGroup -> PreferenceGroup
    int PreferenceGroup_orderingFromXml -> PreferenceGroup_orderingFromXml
    int[] PreferenceImageView -> PreferenceImageView
    int PreferenceImageView_maxHeight -> PreferenceImageView_maxHeight
    int PreferenceImageView_maxWidth -> PreferenceImageView_maxWidth
    int[] PreferenceTheme -> PreferenceTheme
    int Preference_allowDividerAbove -> Preference_allowDividerAbove
    int Preference_allowDividerBelow -> Preference_allowDividerBelow
    int Preference_android_defaultValue -> Preference_android_defaultValue
    int Preference_android_dependency -> Preference_android_dependency
    int Preference_android_enabled -> Preference_android_enabled
    int Preference_android_fragment -> Preference_android_fragment
    int Preference_android_icon -> Preference_android_icon
    int Preference_android_iconSpaceReserved -> Preference_android_iconSpaceReserved
    int Preference_android_key -> Preference_android_key
    int Preference_android_layout -> Preference_android_layout
    int Preference_android_order -> Preference_android_order
    int Preference_android_persistent -> Preference_android_persistent
    int Preference_android_selectable -> Preference_android_selectable
    int Preference_android_shouldDisableView -> Preference_android_shouldDisableView
    int Preference_android_singleLineTitle -> Preference_android_singleLineTitle
    int Preference_android_summary -> Preference_android_summary
    int Preference_android_title -> Preference_android_title
    int Preference_android_widgetLayout -> Preference_android_widgetLayout
    int Preference_defaultValue -> Preference_defaultValue
    int Preference_dependency -> Preference_dependency
    int Preference_enabled -> Preference_enabled
    int Preference_fragment -> Preference_fragment
    int Preference_icon -> Preference_icon
    int Preference_iconSpaceReserved -> Preference_iconSpaceReserved
    int Preference_key -> Preference_key
    int Preference_layout -> Preference_layout
    int Preference_order -> Preference_order
    int Preference_persistent -> Preference_persistent
    int Preference_selectable -> Preference_selectable
    int Preference_shouldDisableView -> Preference_shouldDisableView
    int Preference_singleLineTitle -> Preference_singleLineTitle
    int Preference_summary -> Preference_summary
    int Preference_title -> Preference_title
    int Preference_widgetLayout -> Preference_widgetLayout
    int[] PseudoGridView -> PseudoGridView
    int[] RecentsPanelView -> RecentsPanelView
    int[] RecycleListView -> RecycleListView
    int[] RecyclerView -> RecyclerView
    int[] RestrictedPreference -> RestrictedPreference
    int[] RestrictedSwitchPreference -> RestrictedSwitchPreference
    int[] SearchView -> SearchView
    int[] SeekBarPreference -> SeekBarPreference
    int SeekBarPreference_adjustable -> SeekBarPreference_adjustable
    int SeekBarPreference_android_max -> SeekBarPreference_android_max
    int SeekBarPreference_min -> SeekBarPreference_min
    int SeekBarPreference_seekBarIncrement -> SeekBarPreference_seekBarIncrement
    int SeekBarPreference_showSeekBarValue -> SeekBarPreference_showSeekBarValue
    int[] Spinner -> Spinner
    int[] StatusBarWindowView_Layout -> StatusBarWindowView_Layout
    int[] SwitchCompat -> SwitchCompat
    int[] SwitchPreference -> SwitchPreference
    int[] SwitchPreferenceCompat -> SwitchPreferenceCompat
    int SwitchPreferenceCompat_android_disableDependentsState -> SwitchPreferenceCompat_android_disableDependentsState
    int SwitchPreferenceCompat_android_summaryOff -> SwitchPreferenceCompat_android_summaryOff
    int SwitchPreferenceCompat_android_summaryOn -> SwitchPreferenceCompat_android_summaryOn
    int SwitchPreferenceCompat_android_switchTextOff -> SwitchPreferenceCompat_android_switchTextOff
    int SwitchPreferenceCompat_android_switchTextOn -> SwitchPreferenceCompat_android_switchTextOn
    int SwitchPreferenceCompat_disableDependentsState -> SwitchPreferenceCompat_disableDependentsState
    int SwitchPreferenceCompat_summaryOff -> SwitchPreferenceCompat_summaryOff
    int SwitchPreferenceCompat_summaryOn -> SwitchPreferenceCompat_summaryOn
    int SwitchPreferenceCompat_switchTextOff -> SwitchPreferenceCompat_switchTextOff
    int SwitchPreferenceCompat_switchTextOn -> SwitchPreferenceCompat_switchTextOn
    int[] TextAppearance -> TextAppearance
    int[] ToggleSliderView -> ToggleSliderView
    int[] TonedIcon -> TonedIcon
    int[] Toolbar -> Toolbar
    int[] TunerSwitch -> TunerSwitch
    int[] UserAvatarView -> UserAvatarView
    int[] UserDetailItemView -> UserDetailItemView
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int[] ViewStubCompat -> ViewStubCompat
    int[] WifiEncryptionState -> WifiEncryptionState
    int[] WifiMeteredState -> WifiMeteredState
    int[] WifiSavedState -> WifiSavedState
    int[] lbBaseCardView -> lbBaseCardView
    int[] lbBaseCardView_Layout -> lbBaseCardView_Layout
    int[] lbBaseGridView -> lbBaseGridView
    int[] lbDatePicker -> lbDatePicker
    int[] lbHorizontalGridView -> lbHorizontalGridView
    int[] lbImageCardView -> lbImageCardView
    int[] lbPlaybackControlsActionIcons -> lbPlaybackControlsActionIcons
    int[] lbResizingTextView -> lbResizingTextView
    int[] lbSearchOrbView -> lbSearchOrbView
    int[] lbSlide -> lbSlide
    int[] lbTimePicker -> lbTimePicker
    int[] lbVerticalGridView -> lbVerticalGridView
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.systemui.pip.tv.PipControlsView$1 -> com.android.systemui.pip.tv.PipControlsView$1:
    com.android.systemui.pip.tv.PipControlsView this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipControlsView) -> <init>
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
android.support.v17.leanback.widget.SearchBar$6 -> android.support.v17.leanback.widget.SearchBar$6:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v4.widget.PopupWindowCompat$PopupWindowCompatBaseImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowCompatBaseImpl:
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> sSetWindowLayoutTypeMethod
    boolean sSetWindowLayoutTypeMethodAttempted -> sSetWindowLayoutTypeMethodAttempted
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler -> android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler:
    void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
com.android.systemui.statusbar.policy.UserSwitcherController$1 -> com.android.systemui.statusbar.policy.UserSwitcherController$1:
    int mCallState -> mCallState
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
android.support.v17.leanback.widget.GridLayoutManager$OnLayoutCompleteListener -> android.support.v17.leanback.widget.GridLayoutManager$OnLayoutCompleteListener:
    void <init>() -> <init>
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.ActionMenuPresenter$OverflowPopup:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    void onDismiss() -> onDismiss
com.android.systemui.volume.VolumeDialogMotion$Callback -> com.android.systemui.volume.VolumeDialogMotion$Callback:
    void onAnimatingChanged(boolean) -> onAnimatingChanged
com.android.systemui.statusbar.phone.NotificationPanelView$14 -> com.android.systemui.statusbar.phone.NotificationPanelView$14:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm -> com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm:
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int mBurnInPreventionOffsetX -> mBurnInPreventionOffsetX
    int mBurnInPreventionOffsetY -> mBurnInPreventionOffsetY
    int mClockBottom -> mClockBottom
    int mClockNotificationsMarginMax -> mClockNotificationsMarginMax
    int mClockNotificationsMarginMin -> mClockNotificationsMarginMin
    float mClockYFractionMax -> mClockYFractionMax
    float mClockYFractionMin -> mClockYFractionMin
    float mDarkAmount -> mDarkAmount
    float mDensity -> mDensity
    int mDozingStackPadding -> mDozingStackPadding
    float mEmptyDragAmount -> mEmptyDragAmount
    float mExpandedHeight -> mExpandedHeight
    int mHeight -> mHeight
    int mKeyguardStatusHeight -> mKeyguardStatusHeight
    int mMaxKeyguardNotifications -> mMaxKeyguardNotifications
    int mMaxPanelHeight -> mMaxPanelHeight
    float mMoreCardNotificationAmount -> mMoreCardNotificationAmount
    int mNotificationCount -> mNotificationCount
    android.view.animation.PathInterpolator sSlowDownInterpolator -> sSlowDownInterpolator
    void <init>() -> <init>
    void loadDimens(android.content.res.Resources) -> loadDimens
    void setup(int,int,float,int,int,int,float,int,float) -> setup
    void run(com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm$Result) -> run
    float getMinStackScrollerPadding(int,int) -> getMinStackScrollerPadding
    float burnInPreventionOffsetX() -> burnInPreventionOffsetX
    float burnInPreventionOffsetY() -> burnInPreventionOffsetY
    float getClockAlpha(float) -> getClockAlpha
    int getClockNotificationsPadding() -> getClockNotificationsPadding
    float getClockScale(int,int,int) -> getClockScale
    int getClockY() -> getClockY
    float getClockYExpansionAdjustment() -> getClockYExpansionAdjustment
    float getClockYExpansionRubberbandFactor() -> getClockYExpansionRubberbandFactor
    float getClockYFraction() -> getClockYFraction
    float getNotificationAmountT() -> getNotificationAmountT
    float getTopPaddingAdjMultiplier() -> getTopPaddingAdjMultiplier
    float zigzag(float,float,float) -> zigzag
    void <clinit>() -> <clinit>
android.support.v17.leanback.widget.Parallax$IntProperty -> android.support.v17.leanback.widget.Parallax$IntProperty:
    int mIndex -> mIndex
    void set(android.support.v17.leanback.widget.Parallax,java.lang.Integer) -> set
    int getIndex() -> getIndex
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Integer get(android.support.v17.leanback.widget.Parallax) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.android.systemui.screenshot.GlobalScreenshot$DeleteScreenshotReceiver -> com.android.systemui.screenshot.GlobalScreenshot$DeleteScreenshotReceiver:
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.systemui.statusbar.ExpandableNotificationRow -> com.android.systemui.statusbar.ExpandableNotificationRow:
    android.util.Property TRANSLATE_CONTENT -> TRANSLATE_CONTENT
    boolean mAboveShelf -> mAboveShelf
    com.android.systemui.statusbar.notification.AboveShelfChangedListener mAboveShelfChangedListener -> mAboveShelfChangedListener
    java.lang.String mAppName -> mAppName
    android.view.View mChildAfterViewWhenDismissed -> mChildAfterViewWhenDismissed
    com.android.systemui.statusbar.stack.NotificationChildrenContainer mChildrenContainer -> mChildrenContainer
    android.view.ViewStub mChildrenContainerStub -> mChildrenContainerStub
    boolean mChildrenExpanded -> mChildrenExpanded
    float mContentTransformationAmount -> mContentTransformationAmount
    boolean mDark -> mDark
    boolean mDismissed -> mDismissed
    boolean mEnableNonGroupedNotificationExpand -> mEnableNonGroupedNotificationExpand
    com.android.systemui.statusbar.NotificationData$Entry mEntry -> mEntry
    android.view.View$OnClickListener mExpandClickListener -> mExpandClickListener
    boolean mExpandable -> mExpandable
    boolean mExpandedWhenPinned -> mExpandedWhenPinned
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    boolean mForceUnlocked -> mForceUnlocked
    boolean mGroupExpansionChanging -> mGroupExpansionChanging
    com.android.systemui.statusbar.phone.NotificationGroupManager mGroupManager -> mGroupManager
    android.view.View mGroupParentWhenDismissed -> mGroupParentWhenDismissed
    com.android.systemui.statusbar.NotificationGuts mGuts -> mGuts
    android.view.ViewStub mGutsStub -> mGutsStub
    boolean mHasUserChangedExpansion -> mHasUserChangedExpansion
    int mHeadsUpHeight -> mHeadsUpHeight
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    boolean mHeadsupDisappearRunning -> mHeadsupDisappearRunning
    boolean mHideSensitiveForIntrinsicHeight -> mHideSensitiveForIntrinsicHeight
    boolean mIconAnimationRunning -> mIconAnimationRunning
    int mIconTransformContentShift -> mIconTransformContentShift
    int mIconTransformContentShiftNoIcon -> mIconTransformContentShiftNoIcon
    boolean mIconsVisible -> mIconsVisible
    int mIncreasedPaddingBetweenElements -> mIncreasedPaddingBetweenElements
    boolean mIsColorized -> mIsColorized
    boolean mIsHeadsUp -> mIsHeadsUp
    boolean mIsLastChild -> mIsLastChild
    boolean mIsLowPriority -> mIsLowPriority
    boolean mIsPinned -> mIsPinned
    boolean mIsSummaryWithChildren -> mIsSummaryWithChildren
    boolean mIsSystemChildExpanded -> mIsSystemChildExpanded
    boolean mIsSystemExpanded -> mIsSystemExpanded
    boolean mJustClicked -> mJustClicked
    boolean mKeepInParent -> mKeepInParent
    boolean mLastChronometerRunning -> mLastChronometerRunning
    com.android.systemui.statusbar.ExpandableNotificationRow$LayoutListener mLayoutListener -> mLayoutListener
    com.android.systemui.statusbar.NotificationContentView[] mLayouts -> mLayouts
    com.android.systemui.statusbar.ExpandableNotificationRow$ExpansionLogger mLogger -> mLogger
    java.lang.String mLoggingKey -> mLoggingKey
    boolean mLowPriorityStateUpdated -> mLowPriorityStateUpdated
    int mMaxExpandHeight -> mMaxExpandHeight
    int mMaxHeadsUpHeight -> mMaxHeadsUpHeight
    int mMaxHeadsUpHeightIncreased -> mMaxHeadsUpHeightIncreased
    int mMaxHeadsUpHeightLegacy -> mMaxHeadsUpHeightLegacy
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin mMenuRow -> mMenuRow
    int mNotificationAmbientHeight -> mNotificationAmbientHeight
    int mNotificationColor -> mNotificationColor
    int mNotificationColorAmbient -> mNotificationColorAmbient
    com.android.systemui.statusbar.notification.NotificationInflater mNotificationInflater -> mNotificationInflater
    int mNotificationMaxHeight -> mNotificationMaxHeight
    int mNotificationMinHeight -> mNotificationMinHeight
    int mNotificationMinHeightLarge -> mNotificationMinHeightLarge
    int mNotificationMinHeightLegacy -> mNotificationMinHeightLegacy
    com.android.systemui.statusbar.ExpandableNotificationRow mNotificationParent -> mNotificationParent
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    java.lang.Runnable mOnDismissRunnable -> mOnDismissRunnable
    com.android.systemui.statusbar.ExpandableNotificationRow$OnExpandClickListener mOnExpandClickListener -> mOnExpandClickListener
    boolean mOnKeyguard -> mOnKeyguard
    com.android.systemui.statusbar.NotificationContentView mPrivateLayout -> mPrivateLayout
    com.android.systemui.statusbar.NotificationContentView mPublicLayout -> mPublicLayout
    boolean mRefocusOnDismiss -> mRefocusOnDismiss
    boolean mRemoved -> mRemoved
    java.util.function.BooleanSupplier mSecureStateProvider -> mSecureStateProvider
    boolean mSensitive -> mSensitive
    boolean mSensitiveHiddenInGeneral -> mSensitiveHiddenInGeneral
    boolean mShowAmbient -> mShowAmbient
    boolean mShowGroupBackgroundWhenExpanded -> mShowGroupBackgroundWhenExpanded
    boolean mShowNoBackground -> mShowNoBackground
    boolean mShowingPublic -> mShowingPublic
    boolean mShowingPublicInitialized -> mShowingPublicInitialized
    android.service.notification.StatusBarNotification mStatusBarNotification -> mStatusBarNotification
    android.animation.Animator mTranslateAnim -> mTranslateAnim
    java.util.ArrayList mTranslateableViews -> mTranslateableViews
    float mTranslationWhenRemoved -> mTranslationWhenRemoved
    boolean mUseIncreasedCollapsedHeight -> mUseIncreasedCollapsedHeight
    boolean mUseIncreasedHeadsUpHeight -> mUseIncreasedHeadsUpHeight
    boolean mUserExpanded -> mUserExpanded
    boolean mUserLocked -> mUserLocked
    boolean mWasChildInGroupWhenRemoved -> mWasChildInGroupWhenRemoved
    void setSingleLineWidthIndention(int) -> setSingleLineWidthIndention
    void setUserLocked(boolean) -> setUserLocked
    void setContentTransformationAmount(float,boolean) -> setContentTransformationAmount
    void setSystemChildExpanded(boolean) -> setSystemChildExpanded
    boolean isRemoved() -> isRemoved
    android.service.notification.StatusBarNotification getStatusBarNotification() -> getStatusBarNotification
    boolean isShowingAmbient() -> isShowingAmbient
    int getIntrinsicHeight() -> getIntrinsicHeight
    boolean isGroupExpansionChanging() -> isGroupExpansionChanging
    com.android.systemui.statusbar.notification.HybridNotificationView getAmbientSingleLineView() -> getAmbientSingleLineView
    com.android.systemui.statusbar.notification.HybridNotificationView getSingleLineView() -> getSingleLineView
    boolean isUserLocked() -> isUserLocked
    boolean isOnKeyguard() -> isOnKeyguard
    boolean isExpanded() -> isExpanded
    boolean isHeadsUp() -> isHeadsUp
    void setClipBottomAmount(int) -> setClipBottomAmount
    void setChildrenExpanded(boolean,boolean) -> setChildrenExpanded
    boolean isExpanded(boolean) -> isExpanded
    int getMaxExpandHeight() -> getMaxExpandHeight
    com.android.systemui.statusbar.NotificationContentView getShowingLayout() -> getShowingLayout
    void setActualHeight(int,boolean) -> setActualHeight
    int getNotificationColor() -> getNotificationColor
    int getNotificationColorAmbient() -> getNotificationColorAmbient
    void reset() -> reset
    com.android.systemui.statusbar.NotificationContentView getPrivateLayout() -> getPrivateLayout
    com.android.systemui.statusbar.NotificationContentView getPublicLayout() -> getPublicLayout
    void setIconsVisible(boolean) -> setIconsVisible
    boolean isPinned() -> isPinned
    void setHeadsUp(boolean) -> setHeadsUp
    void setPinned(boolean) -> setPinned
    boolean isChildInGroup() -> isChildInGroup
    int getPinnedHeadsUpHeight() -> getPinnedHeadsUpHeight
    com.android.systemui.statusbar.NotificationData$Entry getEntry() -> getEntry
    void setGroupExpansionChanging(boolean) -> setGroupExpansionChanging
    void setLayoutListener(com.android.systemui.statusbar.ExpandableNotificationRow$LayoutListener) -> setLayoutListener
    void removeListener() -> removeListener
    boolean areGutsExposed() -> areGutsExposed
    boolean canViewBeDismissed() -> canViewBeDismissed
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin getProvider() -> getProvider
    void closeRemoteInput() -> closeRemoteInput
    boolean wasChildInGroupWhenRemoved() -> wasChildInGroupWhenRemoved
    float getTranslationWhenRemoved() -> getTranslationWhenRemoved
    void prepareExpansionChanged(com.android.systemui.statusbar.stack.StackScrollState) -> prepareExpansionChanged
    void animateTranslateNotification(float) -> animateTranslateNotification
    void setJustClicked(boolean) -> setJustClicked
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setUserExpanded(boolean) -> setUserExpanded
    com.android.systemui.statusbar.NotificationGuts getGuts() -> getGuts
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    java.util.List getNotificationChildren() -> getNotificationChildren
    boolean areChildrenExpanded() -> areChildrenExpanded
    void resetTranslation() -> resetTranslation
    boolean hasLowPriorityStateUpdated() -> hasLowPriorityStateUpdated
    void setLowPriorityStateUpdated(boolean) -> setLowPriorityStateUpdated
    boolean isDismissed() -> isDismissed
    void setRemoved() -> setRemoved
    boolean isSummaryWithChildren() -> isSummaryWithChildren
    void setKeepInParent(boolean) -> setKeepInParent
    void setSensitive(boolean,boolean) -> setSensitive
    void setNeedsRedaction(boolean) -> setNeedsRedaction
    void removeAllChildren() -> removeAllChildren
    void addChildNotification(com.android.systemui.statusbar.ExpandableNotificationRow,int) -> addChildNotification
    boolean applyChildOrder(java.util.List,com.android.systemui.statusbar.notification.VisualStabilityManager,com.android.systemui.statusbar.notification.VisualStabilityManager$Callback) -> applyChildOrder
    boolean keepInParent() -> keepInParent
    void removeChildNotification(com.android.systemui.statusbar.ExpandableNotificationRow) -> removeChildNotification
    com.android.systemui.statusbar.stack.NotificationChildrenContainer getChildrenContainer() -> getChildrenContainer
    void resetUserExpansion() -> resetUserExpansion
    void notifyHeightChanged(boolean) -> notifyHeightChanged
    void onExpandedByGesture(boolean) -> onExpandedByGesture
    void setUserExpanded(boolean,boolean) -> setUserExpanded
    void makeActionsVisibile() -> makeActionsVisibile
    void inflateGuts() -> inflateGuts
    void setGutsView(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> setGutsView
    void setExpansionLogger(com.android.systemui.statusbar.ExpandableNotificationRow$ExpansionLogger,java.lang.String) -> setExpansionLogger
    void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager) -> setGroupManager
    void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager) -> setHeadsUpManager
    void setAboveShelfChangedListener(com.android.systemui.statusbar.notification.AboveShelfChangedListener) -> setAboveShelfChangedListener
    void setRemoteInputController(com.android.systemui.statusbar.RemoteInputController) -> setRemoteInputController
    void setOnExpandClickListener(com.android.systemui.statusbar.ExpandableNotificationRow$OnExpandClickListener) -> setOnExpandClickListener
    void setRemoteViewClickHandler(android.widget.RemoteViews$OnClickHandler) -> setRemoteViewClickHandler
    void setInflationCallback(com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback) -> setInflationCallback
    void setSecureStateProvider(java.util.function.BooleanSupplier) -> setSecureStateProvider
    void setAppName(java.lang.String) -> setAppName
    void setOnDismissRunnable(java.lang.Runnable) -> setOnDismissRunnable
    boolean isLowPriority() -> isLowPriority
    void setIsLowPriority(boolean) -> setIsLowPriority
    void setLegacy(boolean) -> setLegacy
    void setUseIncreasedCollapsedHeight(boolean) -> setUseIncreasedCollapsedHeight
    void setUseIncreasedHeadsUpHeight(boolean) -> setUseIncreasedHeadsUpHeight
    void updateNotification(com.android.systemui.statusbar.NotificationData$Entry) -> updateNotification
    void setOnKeyguard(boolean) -> setOnKeyguard
    void setSystemExpanded(boolean) -> setSystemExpanded
    void setShowAmbient(boolean) -> setShowAmbient
    com.android.systemui.statusbar.ExpandableNotificationRow getNotificationParent() -> getNotificationParent
    void setClipToActualHeight(boolean) -> setClipToActualHeight
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin createMenu() -> createMenu
    android.animation.Animator getTranslateViewAnimator(float,android.animation.ValueAnimator$AnimatorUpdateListener) -> getTranslateViewAnimator
    boolean isClearable() -> isClearable
    void setDismissed(boolean,boolean) -> setDismissed
    void performDismiss() -> performDismiss
    com.android.systemui.statusbar.ExpandableNotificationRow getViewAtPosition(float) -> getViewAtPosition
    boolean isExpandable() -> isExpandable
    float getTranslation() -> getTranslation
    boolean shouldRefocusOnDismiss() -> shouldRefocusOnDismiss
    android.view.View getChildAfterViewWhenDismissed() -> getChildAfterViewWhenDismissed
    android.view.View getGroupParentWhenDismissed() -> getGroupParentWhenDismissed
    void setHeadsUpAnimatingAway(boolean) -> setHeadsUpAnimatingAway
    int getPositionOfChild(com.android.systemui.statusbar.ExpandableNotificationRow) -> getPositionOfChild
    void setIconAnimationRunning(boolean) -> setIconAnimationRunning
    boolean wasJustClicked() -> wasJustClicked
    void setChronometerRunning(boolean) -> setChronometerRunning
    void onFinishedExpansionChange() -> onFinishedExpansionChange
    boolean isAboveShelf() -> isAboveShelf
    android.view.NotificationHeaderView getNotificationHeader() -> getNotificationHeader
    android.view.NotificationHeaderView getContractedNotificationHeader() -> getContractedNotificationHeader
    void setAboveShelf(boolean) -> setAboveShelf
    boolean isHeadsUpAnimatingAway() -> isHeadsUpAnimatingAway
    int getCollapsedHeight() -> getCollapsedHeight
    android.view.View getNotificationIcon() -> getNotificationIcon
    float getContentTranslation() -> getContentTranslation
    int getRelativeTopPadding(android.view.View) -> getRelativeTopPadding
    boolean isShowingIcon() -> isShowingIcon
    android.view.NotificationHeaderView getVisibleNotificationHeader() -> getVisibleNotificationHeader
    void setContentBackground(int,boolean,com.android.systemui.statusbar.NotificationContentView) -> setContentBackground
    boolean isGroupExpanded() -> isGroupExpanded
    int getMaxContentHeight() -> getMaxContentHeight
    void getChildrenStates(com.android.systemui.statusbar.stack.StackScrollState) -> getChildrenStates
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateShowingPublic(long,long) -> animateShowingPublic
    void applyChildrenState(com.android.systemui.statusbar.stack.StackScrollState) -> applyChildrenState
    com.android.systemui.statusbar.stack.ExpandableViewState createNewViewState(com.android.systemui.statusbar.stack.StackScrollState) -> createNewViewState
    boolean disallowSingleClick(android.view.MotionEvent) -> disallowSingleClick
    android.view.View getContentView() -> getContentView
    int getExtraBottomPadding() -> getExtraBottomPadding
    int getFontScaledHeight(int) -> getFontScaledHeight
    float getIncreasedPaddingAmount() -> getIncreasedPaddingAmount
    int getMinHeight(boolean) -> getMinHeight
    com.android.systemui.statusbar.notification.NotificationInflater getNotificationInflater() -> getNotificationInflater
    int getPinnedHeadsUpHeight(boolean) -> getPinnedHeadsUpHeight
    boolean handleSlideBack() -> handleSlideBack
    boolean hasUserChangedExpansion() -> hasUserChangedExpansion
    void initDimens() -> initDimens
    boolean isColorized() -> isColorized
    boolean isContentExpandable() -> isContentExpandable
    boolean isDimmable() -> isDimmable
    boolean isHeadsUpAllowed() -> isHeadsUpAllowed
    boolean isSoundEffectsEnabled() -> isSoundEffectsEnabled
    boolean isSystemChildExpanded() -> isSystemChildExpanded
    boolean isSystemExpanded() -> isSystemExpanded
    boolean isUserExpanded() -> isUserExpanded
    boolean mustStayOnScreen() -> mustStayOnScreen
    void onAppearAnimationFinished(boolean) -> onAppearAnimationFinished
    void onAttachedToWindow() -> onAttachedToWindow
    void onBelowSpeedBumpChanged() -> onBelowSpeedBumpChanged
    void onChildrenCountChanged() -> onChildrenCountChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onExpansionChanged(boolean,boolean) -> onExpansionChanged
    void onFinishInflate() -> onFinishInflate
    void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfoInternal
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onNotificationUpdated() -> onNotificationUpdated
    void onPluginConnected(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin) -> onPluginDisconnected
    boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEventInternal
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performAccessibilityActionInternal(int,android.os.Bundle) -> performAccessibilityActionInternal
    void setActualHeightAnimating(boolean) -> setActualHeightAnimating
    void setChildrenContainer(com.android.systemui.statusbar.stack.NotificationChildrenContainer) -> setChildrenContainer
    void setChronometerRunning(boolean,com.android.systemui.statusbar.NotificationContentView) -> setChronometerRunning
    void setChronometerRunningForChild(boolean,android.view.View) -> setChronometerRunningForChild
    void setClipTopAmount(int) -> setClipTopAmount
    void setDark(boolean,boolean,long) -> setDark
    void setExpandable(boolean) -> setExpandable
    void setHideSensitive(boolean,boolean,long,long) -> setHideSensitive
    void setHideSensitiveForIntrinsicHeight(boolean) -> setHideSensitiveForIntrinsicHeight
    void setIconAnimationRunning(boolean,com.android.systemui.statusbar.NotificationContentView) -> setIconAnimationRunning
    void setIconAnimationRunningForChild(boolean,android.view.View) -> setIconAnimationRunningForChild
    void setIconRunning(android.widget.ImageView,boolean) -> setIconRunning
    void setIsChildInGroup(boolean,com.android.systemui.statusbar.ExpandableNotificationRow) -> setIsChildInGroup
    void setTranslation(float) -> setTranslation
    boolean shouldHideBackground() -> shouldHideBackground
    void startChildAnimation(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.AnimationProperties) -> startChildAnimation
    void updateBackgroundForGroupState() -> updateBackgroundForGroupState
    void updateBackgroundTint() -> updateBackgroundTint
    void updateChildrenHeaderAppearance() -> updateChildrenHeaderAppearance
    void updateChildrenVisibility() -> updateChildrenVisibility
    void updateClickAndFocus() -> updateClickAndFocus
    void updateContentShiftHeight() -> updateContentShiftHeight
    void updateContentTransformation() -> updateContentTransformation
    void updateIconVisibilities() -> updateIconVisibilities
    void updateLimits() -> updateLimits
    void updateLimitsForView(com.android.systemui.statusbar.NotificationContentView) -> updateLimitsForView
    void updateMaxHeights() -> updateMaxHeights
    void updateNotificationColor() -> updateNotificationColor
    void updateShelfIconColor() -> updateShelfIconColor
    void <clinit>() -> <clinit>
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    com.android.systemui.statusbar.stack.NotificationChildrenContainer -get0(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get0
    android.content.Context -get1(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get1
    boolean -get2(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get2
    com.android.systemui.statusbar.NotificationData$Entry -get3(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get3
    boolean -get4(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get4
    com.android.systemui.statusbar.phone.NotificationGroupManager -get5(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get5
    com.android.systemui.statusbar.NotificationGuts -get6(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get6
    boolean -get7(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get7
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin -get8(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get8
    com.android.systemui.statusbar.ExpandableNotificationRow$OnExpandClickListener -get9(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get9
    com.android.systemui.statusbar.NotificationContentView -get10(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get10
    boolean -get11(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get11
    android.service.notification.StatusBarNotification -get12(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get12
    java.util.ArrayList -get13(com.android.systemui.statusbar.ExpandableNotificationRow) -> -get13
    com.android.systemui.statusbar.stack.NotificationChildrenContainer -set0(com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.statusbar.stack.NotificationChildrenContainer) -> -set0
    boolean -set1(com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> -set1
    boolean -set2(com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> -set2
    com.android.systemui.statusbar.NotificationGuts -set3(com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.statusbar.NotificationGuts) -> -set3
    android.view.ViewStub -set4(com.android.systemui.statusbar.ExpandableNotificationRow,android.view.ViewStub) -> -set4
    android.animation.Animator -set5(com.android.systemui.statusbar.ExpandableNotificationRow,android.animation.Animator) -> -set5
    void -wrap0(com.android.systemui.statusbar.ExpandableNotificationRow,boolean,boolean) -> -wrap0
com.android.keyguard.PasswordTextView$CharState$10 -> com.android.keyguard.PasswordTextView$CharState$10:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void run() -> run
com.android.settingslib.wifi.WifiTracker$MainHandler -> com.android.settingslib.wifi.WifiTracker$MainHandler:
    int MSG_CONNECTED_CHANGED -> MSG_CONNECTED_CHANGED
    int MSG_WIFI_STATE_CHANGED -> MSG_WIFI_STATE_CHANGED
    com.android.settingslib.wifi.WifiTracker this$0 -> this$0
    int MSG_ACCESS_POINT_CHANGED -> MSG_ACCESS_POINT_CHANGED
    void removePendingMessages() -> removePendingMessages
    void <init>(com.android.settingslib.wifi.WifiTracker,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.recents.events.activity.UndockingTaskEvent -> com.android.systemui.recents.events.activity.UndockingTaskEvent:
    void <init>() -> <init>
com.android.keyguard.KeyguardPINView$2 -> com.android.keyguard.KeyguardPINView$2:
    com.android.keyguard.KeyguardPINView this$0 -> this$0
    java.lang.Runnable val$finishRunnable -> val$finishRunnable
    void <init>(com.android.keyguard.KeyguardPINView,java.lang.Runnable) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager -> com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager:
    java.lang.String TAG -> TAG
    com.android.keyguard.KeyguardHostView$OnDismissAction mAfterKeyguardGoneAction -> mAfterKeyguardGoneAction
    java.util.ArrayList mAfterKeyguardGoneRunnables -> mAfterKeyguardGoneRunnables
    com.android.systemui.statusbar.phone.KeyguardBouncer mBouncer -> mBouncer
    android.view.ViewGroup mContainer -> mContainer
    android.content.Context mContext -> mContext
    boolean mDeferScrimFadeOut -> mDeferScrimFadeOut
    boolean mDisplayBlanksAfterDoze -> mDisplayBlanksAfterDoze
    boolean mDozing -> mDozing
    com.android.systemui.statusbar.phone.FingerprintUnlockController mFingerprintUnlockController -> mFingerprintUnlockController
    boolean mFirstUpdate -> mFirstUpdate
    boolean mLastBouncerDismissible -> mLastBouncerDismissible
    boolean mLastBouncerShowing -> mLastBouncerShowing
    boolean mLastDeferScrimFadeOut -> mLastDeferScrimFadeOut
    boolean mLastDozing -> mLastDozing
    int mLastFpMode -> mLastFpMode
    boolean mLastOccluded -> mLastOccluded
    boolean mLastRemoteInputActive -> mLastRemoteInputActive
    boolean mLastShowing -> mLastShowing
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    java.lang.Runnable mMakeNavigationBarVisibleRunnable -> mMakeNavigationBarVisibleRunnable
    boolean mOccluded -> mOccluded
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$DismissWithActionRequest mPendingWakeupAction -> mPendingWakeupAction
    boolean mRemoteInputActive -> mRemoteInputActive
    boolean mScreenTurnedOn -> mScreenTurnedOn
    com.android.systemui.statusbar.phone.ScrimController mScrimController -> mScrimController
    boolean mShowing -> mShowing
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    com.android.systemui.statusbar.phone.StatusBarWindowManager mStatusBarWindowManager -> mStatusBarWindowManager
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateMonitorCallback -> mUpdateMonitorCallback
    com.android.keyguard.ViewMediatorCallback mViewMediatorCallback -> mViewMediatorCallback
    boolean isShowing() -> isShowing
    boolean isOccluded() -> isOccluded
    void addAfterKeyguardGoneRunnable(java.lang.Runnable) -> addAfterKeyguardGoneRunnable
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onOverlayChanged() -> onOverlayChanged
    void readyForKeyguardDone() -> readyForKeyguardDone
    void dismissWithAction(com.android.keyguard.KeyguardHostView$OnDismissAction,java.lang.Runnable,boolean) -> dismissWithAction
    boolean isBouncerShowing() -> isBouncerShowing
    boolean isSecure(int) -> isSecure
    boolean interceptMediaKey(android.view.KeyEvent) -> interceptMediaKey
    boolean shouldDismissOnMenuPressed() -> shouldDismissOnMenuPressed
    boolean onBackPressed() -> onBackPressed
    void dismiss() -> dismiss
    void notifyDeviceWakeUpRequested() -> notifyDeviceWakeUpRequested
    void setDozing(boolean) -> setDozing
    boolean isSecure() -> isSecure
    void notifyKeyguardAuthenticated(boolean) -> notifyKeyguardAuthenticated
    void animateCollapsePanels(float) -> animateCollapsePanels
    void setNeedsInput(boolean) -> setNeedsInput
    void startPreHideAnimation(java.lang.Runnable) -> startPreHideAnimation
    void keyguardGoingAway() -> keyguardGoingAway
    boolean shouldDisableWindowAnimationsForUnlock() -> shouldDisableWindowAnimationsForUnlock
    boolean isGoingToNotificationShade() -> isGoingToNotificationShade
    boolean isUnlockWithWallpaper() -> isUnlockWithWallpaper
    void setOccluded(boolean,boolean) -> setOccluded
    void dismissAndCollapse() -> dismissAndCollapse
    void show(android.os.Bundle) -> show
    android.view.ViewRootImpl getViewRootImpl() -> getViewRootImpl
    void hide(long,long) -> hide
    void reset(boolean) -> reset
    void onStartedGoingToSleep() -> onStartedGoingToSleep
    void onFinishedGoingToSleep() -> onFinishedGoingToSleep
    void onStartedWakingUp() -> onStartedWakingUp
    void onScreenTurningOn() -> onScreenTurningOn
    void onScreenTurnedOn() -> onScreenTurnedOn
    void onScreenTurnedOff() -> onScreenTurnedOff
    void registerStatusBar(com.android.systemui.statusbar.phone.StatusBar,android.view.ViewGroup,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.FingerprintUnlockController,com.android.systemui.keyguard.DismissCallbackRegistry) -> registerStatusBar
    void showBouncerMessage(java.lang.String,int) -> showBouncerMessage
    void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils) -> <init>
    void animateScrimControllerKeyguardFadingOut(long,long,boolean) -> animateScrimControllerKeyguardFadingOut
    void animateScrimControllerKeyguardFadingOut(long,long,java.lang.Runnable,boolean) -> animateScrimControllerKeyguardFadingOut
    void cancelPendingWakeupAction() -> cancelPendingWakeupAction
    void executeAfterKeyguardGoneAction() -> executeAfterKeyguardGoneAction
    boolean getLastNavBarVisible() -> getLastNavBarVisible
    long getNavBarShowDelay() -> getNavBarShowDelay
    void hideBouncer(boolean) -> hideBouncer
    boolean isNavBarVisible() -> isNavBarVisible
    boolean isWakeAndUnlocking() -> isWakeAndUnlocking
    void launchPendingWakeupAction() -> launchPendingWakeupAction
    void onRemoteInputActive(boolean) -> onRemoteInputActive
    void showBouncer() -> showBouncer
    void showBouncerOrKeyguard(boolean) -> showBouncerOrKeyguard
    void updateStates() -> updateStates
    void <clinit>() -> <clinit>
    void -com_android_systemui_statusbar_phone_StatusBarKeyguardViewManager-mthref-0(com.android.systemui.statusbar.phone.StatusBar) -> -com_android_systemui_statusbar_phone_StatusBarKeyguardViewManager-mthref-0
    void lambda$-com_android_systemui_statusbar_phone_StatusBarKeyguardViewManager_18959() -> lambda$-com_android_systemui_statusbar_phone_StatusBarKeyguardViewManager_18959
    android.view.ViewGroup -get0(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> -get0
    com.android.systemui.statusbar.phone.FingerprintUnlockController -get1(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> -get1
    com.android.systemui.statusbar.phone.ScrimController -get2(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> -get2
    com.android.systemui.statusbar.phone.StatusBarWindowManager -get3(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> -get3
    void -wrap0(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager,boolean) -> -wrap1
android.support.v7.widget.GridLayoutManager$SpanSizeLookup -> android.support.v7.widget.GridLayoutManager$SpanSizeLookup:
    boolean mCacheSpanIndices -> mCacheSpanIndices
    android.util.SparseIntArray mSpanIndexCache -> mSpanIndexCache
    void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    int getSpanIndex(int,int) -> getSpanIndex
    int getSpanSize(int) -> getSpanSize
    void <init>() -> <init>
    int findReferenceIndexFromCache(int) -> findReferenceIndexFromCache
com.android.systemui.tuner.ClipboardView -> com.android.systemui.tuner.ClipboardView:
    android.content.ClipboardManager mClipboardManager -> mClipboardManager
    android.content.ClipData mCurrentClip -> mCurrentClip
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    void onPrimaryClipChanged() -> onPrimaryClipChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setBackgroundDragTarget(boolean) -> setBackgroundDragTarget
    void startListening() -> startListening
    void startPocketDrag() -> startPocketDrag
    void stopListening() -> stopListening
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.android.systemui.volume.Events$Callback -> com.android.systemui.volume.Events$Callback:
    void writeEvent(long,int,java.lang.Object[]) -> writeEvent
    void writeState(long,com.android.systemui.plugins.VolumeDialogController$State) -> writeState
android.support.v4.widget.TextViewCompat$AutoSizeTextType -> android.support.v4.widget.TextViewCompat$AutoSizeTextType:
android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.Class[] PARAM_TYPES -> PARAM_TYPES
    java.lang.reflect.Method mMethod -> mMethod
    void <clinit>() -> <clinit>
    void <init>(java.lang.Object,java.lang.String) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.view.View onCreateActionView() -> onCreateActionView
    void <init>(android.content.Context) -> <init>
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    boolean isVisible() -> isVisible
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void reset() -> reset
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
com.android.systemui.qs.QSFragment$2 -> com.android.systemui.qs.QSFragment$2:
    com.android.systemui.qs.QSFragment this$0 -> this$0
    void <init>(com.android.systemui.qs.QSFragment) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.NestedScrollingParent:
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
com.android.systemui.tuner.-$Lambda$S4S5TsLYOFyxLJH4L9zSMxWlxg8 -> com.android.systemui.tuner.-$Lambda$S4S5TsLYOFyxLJH4L9zSMxWlxg8:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    void <init>(byte,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void $m$2(java.lang.Object) -> $m$2
    void accept(java.lang.Object) -> accept
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.statusbar.phone.-$Lambda$N_OtJ8HKQ17eyDg8Dp9cEYfCWls -> com.android.systemui.statusbar.phone.-$Lambda$N_OtJ8HKQ17eyDg8Dp9cEYfCWls:
    com.android.systemui.statusbar.phone.-$Lambda$N_OtJ8HKQ17eyDg8Dp9cEYfCWls $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void $m$0(boolean) -> $m$0
    void onActiveChanged(boolean) -> onActiveChanged
android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    android.support.v4.provider.FontRequest mRequest -> mRequest
    int mStrategy -> mStrategy
    int mTimeoutMs -> mTimeoutMs
    int getTimeout() -> getTimeout
    int getFetchStrategy() -> getFetchStrategy
    android.support.v4.provider.FontRequest getRequest() -> getRequest
    void <init>(android.support.v4.provider.FontRequest,int,int) -> <init>
com.android.systemui.usb.-$Lambda$i092pT7BFOR732L1S_poxukWflE -> com.android.systemui.usb.-$Lambda$i092pT7BFOR732L1S_poxukWflE:
    com.android.systemui.usb.-$Lambda$i092pT7BFOR732L1S_poxukWflE $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    boolean $m$0(android.view.View,android.view.MotionEvent) -> $m$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.settings.BrightnessController$BrightnessStateChangeCallback -> com.android.systemui.settings.BrightnessController$BrightnessStateChangeCallback:
    void onBrightnessLevelChanged() -> onBrightnessLevelChanged
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
    void <init>(android.support.v4.widget.CursorFilter$CursorFilterClient) -> <init>
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
com.android.systemui.recents.views.RecentsTransitionHelper -> com.android.systemui.recents.views.RecentsTransitionHelper:
    java.util.List SPECS_WAITING -> SPECS_WAITING
    java.util.List mAppTransitionAnimationSpecs -> mAppTransitionAnimationSpecs
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.android.systemui.recents.views.RecentsTransitionHelper$StartScreenPinningRunnableRunnable mStartScreenPinningRunnable -> mStartScreenPinningRunnable
    com.android.systemui.recents.views.TaskViewTransform mTmpTransform -> mTmpTransform
    void <init>(android.content.Context) -> <init>
    android.view.AppTransitionAnimationSpec composeAnimationSpec(com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform,boolean) -> composeAnimationSpec
    java.util.List composeAnimationSpecs(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskStackView,int,android.graphics.Rect) -> composeAnimationSpecs
    java.util.List composeDockAnimationSpec(com.android.systemui.recents.views.TaskView,android.graphics.Rect) -> composeDockAnimationSpec
    android.graphics.GraphicBuffer composeHeaderBitmap(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform) -> composeHeaderBitmap
    android.view.AppTransitionAnimationSpec composeOffscreenAnimationSpec(com.android.systemui.recents.model.Task,android.graphics.Rect) -> composeOffscreenAnimationSpec
    android.graphics.GraphicBuffer composeTaskBitmap(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform) -> composeTaskBitmap
    android.graphics.GraphicBuffer drawViewIntoGraphicBuffer(int,int,android.view.View,float,int) -> drawViewIntoGraphicBuffer
    com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture getAppTransitionFuture(com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer) -> getAppTransitionFuture
    void launchTaskFromRecents(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.TaskView,boolean,int) -> launchTaskFromRecents
    void startTaskActivity(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,android.app.ActivityOptions,com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture,int) -> startTaskActivity
    android.os.IRemoteCallback wrapStartedListener(android.app.ActivityOptions$OnAnimationStartedListener) -> wrapStartedListener
    void <clinit>() -> <clinit>
    java.util.List lambda$-com_android_systemui_recents_views_RecentsTransitionHelper_4885(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskStackView,int,android.graphics.Rect) -> lambda$-com_android_systemui_recents_views_RecentsTransitionHelper_4885
    void lambda$-com_android_systemui_recents_views_RecentsTransitionHelper_10294(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,boolean) -> lambda$-com_android_systemui_recents_views_RecentsTransitionHelper_10294
    void -com_android_systemui_recents_views_RecentsTransitionHelper-mthref-0(com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture) -> -com_android_systemui_recents_views_RecentsTransitionHelper-mthref-0
    java.util.List -get0() -> -get0
    java.util.List -get1(com.android.systemui.recents.views.RecentsTransitionHelper) -> -get1
    android.content.Context -get2(com.android.systemui.recents.views.RecentsTransitionHelper) -> -get2
    android.os.Handler -get3(com.android.systemui.recents.views.RecentsTransitionHelper) -> -get3
    com.android.systemui.recents.views.RecentsTransitionHelper$StartScreenPinningRunnableRunnable -get4(com.android.systemui.recents.views.RecentsTransitionHelper) -> -get4
    java.util.List -set0(com.android.systemui.recents.views.RecentsTransitionHelper,java.util.List) -> -set0
    void -wrap0(com.android.systemui.recents.views.RecentsTransitionHelper,com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,android.app.ActivityOptions,com.android.systemui.recents.views.RecentsTransitionHelper$AppTransitionAnimationSpecsFuture,int) -> -wrap0
com.android.systemui.statusbar.phone.StatusBar$H -> com.android.systemui.statusbar.phone.StatusBar$H:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.power.PowerNotificationWarnings$2 -> com.android.systemui.power.PowerNotificationWarnings$2:
    com.android.systemui.power.PowerNotificationWarnings this$0 -> this$0
    void <init>(com.android.systemui.power.PowerNotificationWarnings) -> <init>
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.systemui.qs.QSDetailClipper$1 -> com.android.systemui.qs.QSDetailClipper$1:
    com.android.systemui.qs.QSDetailClipper this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetailClipper) -> <init>
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$4 -> android.support.v7.widget.DefaultItemAnimator$4:
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.view.View val$view -> val$view
    android.view.ViewPropertyAnimator val$animation -> val$animation
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.CellTileView$SignalIcon -> com.android.systemui.qs.CellTileView$SignalIcon:
    int mState -> mState
    void <init>(int) -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
    int getState() -> getState
com.android.keyguard.KeyguardStatusView$1 -> com.android.keyguard.KeyguardStatusView$1:
    com.android.keyguard.KeyguardStatusView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardStatusView) -> <init>
    void onFinishedGoingToSleep(int) -> onFinishedGoingToSleep
    void onKeyguardVisibilityChanged(boolean) -> onKeyguardVisibilityChanged
    void onStartedWakingUp() -> onStartedWakingUp
    void onTimeChanged() -> onTimeChanged
    void onUserSwitchComplete(int) -> onUserSwitchComplete
com.android.systemui.statusbar.stack.AmbientState -> com.android.systemui.statusbar.stack.AmbientState:
    com.android.systemui.statusbar.ActivatableNotificationView mActivatedChild -> mActivatedChild
    int mBaseZHeight -> mBaseZHeight
    float mCurrentScrollVelocity -> mCurrentScrollVelocity
    boolean mDark -> mDark
    boolean mDimmed -> mDimmed
    boolean mDismissAllInProgress -> mDismissAllInProgress
    java.util.ArrayList mDraggedViews -> mDraggedViews
    float mExpandingVelocity -> mExpandingVelocity
    boolean mExpansionChanging -> mExpansionChanging
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    boolean mHideSensitive -> mHideSensitive
    int mIntrinsicPadding -> mIntrinsicPadding
    com.android.systemui.statusbar.ActivatableNotificationView mLastVisibleBackgroundChild -> mLastVisibleBackgroundChild
    int mLayoutHeight -> mLayoutHeight
    int mLayoutMinHeight -> mLayoutMinHeight
    float mMaxHeadsUpTranslation -> mMaxHeadsUpTranslation
    int mMaxLayoutHeight -> mMaxLayoutHeight
    float mOverScrollBottomAmount -> mOverScrollBottomAmount
    float mOverScrollTopAmount -> mOverScrollTopAmount
    boolean mPanelFullWidth -> mPanelFullWidth
    boolean mPanelTracking -> mPanelTracking
    java.util.Collection mPulsing -> mPulsing
    boolean mQsCustomizerShowing -> mQsCustomizerShowing
    int mScrollY -> mScrollY
    boolean mShadeExpanded -> mShadeExpanded
    com.android.systemui.statusbar.NotificationShelf mShelf -> mShelf
    int mSpeedBumpIndex -> mSpeedBumpIndex
    float mStackTranslation -> mStackTranslation
    int mStatusBarState -> mStatusBarState
    int mTopPadding -> mTopPadding
    boolean mUnlockHintRunning -> mUnlockHintRunning
    int mZDistanceBetweenElements -> mZDistanceBetweenElements
    void <init>(android.content.Context) -> <init>
    boolean isDark() -> isDark
    void reload(android.content.Context) -> reload
    void setSpeedBumpIndex(int) -> setSpeedBumpIndex
    void setLayoutHeight(int) -> setLayoutHeight
    void setTopPadding(int) -> setTopPadding
    void setLayoutMinHeight(int) -> setLayoutMinHeight
    void setCurrentScrollVelocity(float) -> setCurrentScrollVelocity
    void setScrollY(int) -> setScrollY
    boolean isAboveShelf(com.android.systemui.statusbar.ExpandableView) -> isAboveShelf
    void setStackTranslation(float) -> setStackTranslation
    void onDragFinished(android.view.View) -> onDragFinished
    void onBeginDrag(android.view.View) -> onBeginDrag
    void setOverScrollAmount(float,boolean) -> setOverScrollAmount
    float getOverScrollAmount(boolean) -> getOverScrollAmount
    void setLayoutMaxHeight(int) -> setLayoutMaxHeight
    boolean isPulsing(com.android.systemui.statusbar.NotificationData$Entry) -> isPulsing
    boolean isPanelFullWidth() -> isPanelFullWidth
    void setLastVisibleBackgroundChild(com.android.systemui.statusbar.ActivatableNotificationView) -> setLastVisibleBackgroundChild
    boolean isHideSensitive() -> isHideSensitive
    float getMaxHeadsUpTranslation() -> getMaxHeadsUpTranslation
    void setExpansionChanging(boolean) -> setExpansionChanging
    void setPanelTracking(boolean) -> setPanelTracking
    void setDimmed(boolean) -> setDimmed
    boolean isDimmed() -> isDimmed
    void setHideSensitive(boolean) -> setHideSensitive
    void setActivatedChild(com.android.systemui.statusbar.ActivatableNotificationView) -> setActivatedChild
    com.android.systemui.statusbar.ActivatableNotificationView getActivatedChild() -> getActivatedChild
    void setIntrinsicPadding(int) -> setIntrinsicPadding
    void setDark(boolean) -> setDark
    void setDismissAllInProgress(boolean) -> setDismissAllInProgress
    void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager) -> setHeadsUpManager
    void setShadeExpanded(boolean) -> setShadeExpanded
    void setMaxHeadsUpTranslation(float) -> setMaxHeadsUpTranslation
    void setPulsing(java.util.Collection) -> setPulsing
    void setShelf(com.android.systemui.statusbar.NotificationShelf) -> setShelf
    void setStatusBarState(int) -> setStatusBarState
    void setExpandingVelocity(float) -> setExpandingVelocity
    void setPanelFullWidth(boolean) -> setPanelFullWidth
    void setUnlockHintRunning(boolean) -> setUnlockHintRunning
    void setQsCustomizerShowing(boolean) -> setQsCustomizerShowing
    boolean isQsCustomizerShowing() -> isQsCustomizerShowing
    int getScrollY() -> getScrollY
    java.util.ArrayList getDraggedViews() -> getDraggedViews
    int getBaseZHeight() -> getBaseZHeight
    float getCurrentScrollVelocity() -> getCurrentScrollVelocity
    float getExpandingVelocity() -> getExpandingVelocity
    int getInnerHeight() -> getInnerHeight
    int getIntrinsicPadding() -> getIntrinsicPadding
    com.android.systemui.statusbar.ActivatableNotificationView getLastVisibleBackgroundChild() -> getLastVisibleBackgroundChild
    com.android.systemui.statusbar.NotificationShelf getShelf() -> getShelf
    int getSpeedBumpIndex() -> getSpeedBumpIndex
    float getStackTranslation() -> getStackTranslation
    float getTopPadding() -> getTopPadding
    int getZDistanceBetweenElements() -> getZDistanceBetweenElements
    boolean hasPulsingNotifications() -> hasPulsingNotifications
    boolean isDozingAndNotPulsing(com.android.systemui.statusbar.ExpandableView) -> isDozingAndNotPulsing
    boolean isDozingAndNotPulsing(com.android.systemui.statusbar.ExpandableNotificationRow) -> isDozingAndNotPulsing
    boolean isExpansionChanging() -> isExpansionChanging
    boolean isOnKeyguard() -> isOnKeyguard
    boolean isPanelTracking() -> isPanelTracking
    boolean isShadeExpanded() -> isShadeExpanded
    boolean isUnlockHintRunning() -> isUnlockHintRunning
com.android.keyguard.PasswordTextView$CharState$2 -> com.android.keyguard.PasswordTextView$CharState$2:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.classifier.ProximityEvaluator -> com.android.systemui.classifier.ProximityEvaluator:
    void <init>() -> <init>
    float evaluate(float,int) -> evaluate
com.android.keyguard.CarrierText$StatusMode -> com.android.keyguard.CarrierText$StatusMode:
    com.android.keyguard.CarrierText$StatusMode[] $VALUES -> $VALUES
    com.android.keyguard.CarrierText$StatusMode NetworkLocked -> NetworkLocked
    com.android.keyguard.CarrierText$StatusMode Normal -> Normal
    com.android.keyguard.CarrierText$StatusMode SimIoError -> SimIoError
    com.android.keyguard.CarrierText$StatusMode SimLocked -> SimLocked
    com.android.keyguard.CarrierText$StatusMode SimMissing -> SimMissing
    com.android.keyguard.CarrierText$StatusMode SimMissingLocked -> SimMissingLocked
    com.android.keyguard.CarrierText$StatusMode SimNotReady -> SimNotReady
    com.android.keyguard.CarrierText$StatusMode SimPermDisabled -> SimPermDisabled
    com.android.keyguard.CarrierText$StatusMode SimPukLocked -> SimPukLocked
    void <init>(java.lang.String,int) -> <init>
    com.android.keyguard.CarrierText$StatusMode valueOf(java.lang.String) -> valueOf
    com.android.keyguard.CarrierText$StatusMode[] values() -> values
    void <clinit>() -> <clinit>
com.android.systemui.statusbar.NotificationHeaderUtil$ResultApplicator -> com.android.systemui.statusbar.NotificationHeaderUtil$ResultApplicator:
    void apply(android.view.View,boolean) -> apply
com.android.systemui.settings.BrightnessController$4 -> com.android.systemui.settings.BrightnessController$4:
    com.android.systemui.settings.BrightnessController this$0 -> this$0
    void <init>(com.android.systemui.settings.BrightnessController) -> <init>
    void run() -> run
android.support.v7.widget.DecorContentParent -> android.support.v7.widget.DecorContentParent:
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setMenuPrepared() -> setMenuPrepared
    void dismissPopups() -> dismissPopups
    boolean showOverflowMenu() -> showOverflowMenu
    void initFeature(int) -> initFeature
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
com.android.systemui.qs.PseudoGridView -> com.android.systemui.qs.PseudoGridView:
    int mHorizontalSpacing -> mHorizontalSpacing
    int mNumColumns -> mNumColumns
    int mVerticalSpacing -> mVerticalSpacing
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
android.arch.core.internal.SafeIterableMap$ListIterator -> android.arch.core.internal.SafeIterableMap$ListIterator:
    android.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> mExpectedEnd
    android.arch.core.internal.SafeIterableMap$Entry mNext -> mNext
    android.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Map$Entry next() -> next
    android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> forward
android.support.v7.widget.AppCompatImageView -> android.support.v7.widget.AppCompatImageView:
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> mImageHelper
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    void setImageResource(int) -> setImageResource
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setBackgroundResource(int) -> setBackgroundResource
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void setImageURI(android.net.Uri) -> setImageURI
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
com.android.systemui.statusbar.phone.NotificationPanelView$7 -> com.android.systemui.statusbar.phone.NotificationPanelView$7:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
android.support.v4.app.BaseFragmentActivityApi14 -> android.support.v4.app.BaseFragmentActivityApi14:
    boolean mStartedIntentSenderFromFragment -> mStartedIntentSenderFromFragment
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void <init>() -> <init>
    void checkForValidRequestCode(int) -> checkForValidRequestCode
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
com.android.settingslib.wifi.TimestampedScoredNetwork$1 -> com.android.settingslib.wifi.TimestampedScoredNetwork$1:
    com.android.settingslib.wifi.TimestampedScoredNetwork[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    com.android.settingslib.wifi.TimestampedScoredNetwork createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.settingslib.bluetooth.HidProfile$InputDeviceServiceListener -> com.android.settingslib.bluetooth.HidProfile$InputDeviceServiceListener:
    com.android.settingslib.bluetooth.HidProfile this$0 -> this$0
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void <init>(com.android.settingslib.bluetooth.HidProfile,com.android.settingslib.bluetooth.HidProfile$InputDeviceServiceListener) -> <init>
    void <init>(com.android.settingslib.bluetooth.HidProfile) -> <init>
    void onServiceDisconnected(int) -> onServiceDisconnected
android.support.v17.leanback.widget.Parallax -> android.support.v17.leanback.widget.Parallax:
    java.util.List mProperties -> mProperties
    java.util.List mPropertiesReadOnly -> mPropertiesReadOnly
    java.util.List mEffects -> mEffects
    int[] mValues -> mValues
    float[] mFloatValues -> mFloatValues
    void setIntPropertyValue(int,int) -> setIntPropertyValue
    float getMaxValue() -> getMaxValue
    void updateValues() -> updateValues
    void verifyIntProperties() -> verifyIntProperties
    float getFloatPropertyValue(int) -> getFloatPropertyValue
    int getIntPropertyValue(int) -> getIntPropertyValue
    void verifyFloatProperties() -> verifyFloatProperties
    void <init>() -> <init>
com.android.systemui.analytics.DataCollector$2 -> com.android.systemui.analytics.DataCollector$2:
    com.android.systemui.analytics.DataCollector this$0 -> this$0
    com.android.systemui.analytics.SensorLoggerSession val$currentSession -> val$currentSession
    void <init>(com.android.systemui.analytics.DataCollector,com.android.systemui.analytics.SensorLoggerSession) -> <init>
    void run() -> run
android.support.v7.preference.R$layout -> android.support.v7.preference.R$layout:
    int preference -> preference
    int preference_list_fragment -> preference_list_fragment
    int preference_recyclerview -> preference_recyclerview
    void <init>() -> <init>
com.android.systemui.statusbar.ExpandableNotificationRow$NotificationViewState -> com.android.systemui.statusbar.ExpandableNotificationRow$NotificationViewState:
    com.android.systemui.statusbar.stack.StackScrollState mOverallState -> mOverallState
    void <init>(com.android.systemui.statusbar.stack.StackScrollState) -> <init>
    void animateTo(android.view.View,com.android.systemui.statusbar.stack.AnimationProperties) -> animateTo
    void applyToView(android.view.View) -> applyToView
    void onYTranslationAnimationFinished(android.view.View) -> onYTranslationAnimationFinished
    void <init>(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.ExpandableNotificationRow$NotificationViewState) -> <init>
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.SearchView$10:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.systemui.qs.customize.TileQueryHelper$1$1 -> com.android.systemui.qs.customize.TileQueryHelper$1$1:
    com.android.systemui.qs.customize.TileQueryHelper$1 this$1 -> this$1
    java.lang.String val$spec -> val$spec
    com.android.systemui.plugins.qs.QSTile$State val$state -> val$state
    void <init>(com.android.systemui.qs.customize.TileQueryHelper$1,java.lang.String,com.android.systemui.plugins.qs.QSTile$State) -> <init>
    void run() -> run
com.android.systemui.statusbar.stack.StackStateAnimator$3 -> com.android.systemui.statusbar.stack.StackStateAnimator$3:
    com.android.systemui.statusbar.stack.StackStateAnimator this$0 -> this$0
    com.android.systemui.statusbar.ExpandableView val$changingView -> val$changingView
    void <init>(com.android.systemui.statusbar.stack.StackStateAnimator,com.android.systemui.statusbar.ExpandableView) -> <init>
    void run() -> run
com.android.systemui.qs.external.-$Lambda$CA4QlgMyuUuRvIn6temzm1LPs5M$1 -> com.android.systemui.qs.external.-$Lambda$CA4QlgMyuUuRvIn6temzm1LPs5M$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    java.lang.Object $m$0() -> $m$0
    java.lang.Object get() -> get
com.android.systemui.doze.DozeBrightnessHostForwarder -> com.android.systemui.doze.DozeBrightnessHostForwarder:
    com.android.systemui.doze.DozeHost mHost -> mHost
    void <init>(com.android.systemui.doze.DozeMachine$Service,com.android.systemui.doze.DozeHost) -> <init>
    void setDozeScreenBrightness(int) -> setDozeScreenBrightness
com.android.systemui.SystemUIFactory -> com.android.systemui.SystemUIFactory:
    com.android.systemui.SystemUIFactory mFactory -> mFactory
    com.android.systemui.SystemUIFactory getInstance() -> getInstance
    com.android.systemui.statusbar.phone.NotificationIconAreaController createNotificationIconAreaController(android.content.Context,com.android.systemui.statusbar.phone.StatusBar) -> createNotificationIconAreaController
    com.android.systemui.statusbar.KeyguardIndicationController createKeyguardIndicationController(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.phone.LockIcon) -> createKeyguardIndicationController
    com.android.systemui.statusbar.phone.ScrimController createScrimController(com.android.systemui.statusbar.phone.LightBarController,com.android.systemui.statusbar.ScrimView,com.android.systemui.statusbar.ScrimView,android.view.View,com.android.systemui.statusbar.phone.LockscreenWallpaper,java.util.function.Consumer) -> createScrimController
    com.android.systemui.qs.QSTileHost createQSTileHost(android.content.Context,com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.phone.StatusBarIconController) -> createQSTileHost
    void injectDependencies(android.util.ArrayMap,android.content.Context) -> injectDependencies
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager createStatusBarKeyguardViewManager(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils) -> createStatusBarKeyguardViewManager
    void createFromConfig(android.content.Context) -> createFromConfig
    java.lang.Object createInstance(java.lang.Class) -> createInstance
    com.android.systemui.statusbar.phone.KeyguardBouncer createKeyguardBouncer(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils,android.view.ViewGroup,com.android.systemui.keyguard.DismissCallbackRegistry) -> createKeyguardBouncer
    void <init>() -> <init>
android.support.v4.app.FragmentTransitionImpl$2 -> android.support.v4.app.FragmentTransitionImpl$2:
    android.support.v4.app.FragmentTransitionImpl this$0 -> this$0
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    void <init>(android.support.v4.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    void run() -> run
android.support.graphics.drawable.VectorDrawableCompat$VClipPath -> android.support.graphics.drawable.VectorDrawableCompat$VClipPath:
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    boolean isClipPath() -> isClipPath
    void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
    void <init>() -> <init>
com.android.systemui.tuner.LockscreenFragment -> com.android.systemui.tuner.LockscreenFragment:
    android.os.Handler mHandler -> mHandler
    java.util.ArrayList mTunables -> mTunables
    com.android.systemui.tuner.TunerService mTunerService -> mTunerService
    void <init>() -> <init>
    void addTunable(com.android.systemui.tuner.TunerService$Tunable,java.lang.String[]) -> addTunable
    android.content.pm.ActivityInfo getActivityinfo(android.content.Context,java.lang.String) -> getActivityinfo
    com.android.systemui.tuner.ShortcutParser$Shortcut getShortcutInfo(android.content.Context,java.lang.String) -> getShortcutInfo
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    void onDestroy() -> onDestroy
    void setSummary(android.support.v7.preference.Preference,java.lang.String) -> setSummary
    void setupGroup(java.lang.String,java.lang.String) -> setupGroup
    void lambda$-com_android_systemui_tuner_LockscreenFragment_3763(com.android.systemui.tuner.TunerService$Tunable) -> lambda$-com_android_systemui_tuner_LockscreenFragment_3763
    void lambda$-com_android_systemui_tuner_LockscreenFragment_4038(android.support.v14.preference.SwitchPreference,android.support.v7.preference.Preference,java.lang.String,java.lang.String) -> lambda$-com_android_systemui_tuner_LockscreenFragment_4038
android.support.v7.media.MediaRouterJellybeanMr1$Callback -> android.support.v7.media.MediaRouterJellybeanMr1$Callback:
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState$1 -> android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState$1:
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState[] newArray(int) -> newArray
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    void <init>() -> <init>
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.SystemUIApplication -> com.android.systemui.SystemUIApplication:
    java.lang.Class[] SERVICES -> SERVICES
    java.lang.Class[] SERVICES_PER_USER -> SERVICES_PER_USER
    boolean mBootCompleted -> mBootCompleted
    java.util.Map mComponents -> mComponents
    com.android.systemui.SystemUI[] mServices -> mServices
    boolean mServicesStarted -> mServicesStarted
    void startSecondaryUserServicesIfNeeded() -> startSecondaryUserServicesIfNeeded
    com.android.systemui.SystemUI[] getServices() -> getServices
    java.lang.Object getComponent(java.lang.Class) -> getComponent
    void <init>() -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate() -> onCreate
    void startServicesIfNeeded() -> startServicesIfNeeded
    void startServicesIfNeeded(java.lang.Class[]) -> startServicesIfNeeded
    boolean -get0(com.android.systemui.SystemUIApplication) -> -get0
    com.android.systemui.SystemUI[] -get1(com.android.systemui.SystemUIApplication) -> -get1
    boolean -get2(com.android.systemui.SystemUIApplication) -> -get2
    boolean -set0(com.android.systemui.SystemUIApplication,boolean) -> -set0
com.android.systemui.statusbar.policy.Clock$1 -> com.android.systemui.statusbar.policy.Clock$1:
    com.android.systemui.statusbar.policy.Clock this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.Clock) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void lambda$-com_android_systemui_statusbar_policy_Clock$1_6330(java.lang.String) -> lambda$-com_android_systemui_statusbar_policy_Clock$1_6330
    void lambda$-com_android_systemui_statusbar_policy_Clock$1_6777(java.util.Locale) -> lambda$-com_android_systemui_statusbar_policy_Clock$1_6777
    void lambda$-com_android_systemui_statusbar_policy_Clock$1_7036() -> lambda$-com_android_systemui_statusbar_policy_Clock$1_7036
android.support.v7.util.DiffUtil -> android.support.v7.util.DiffUtil:
    java.util.Comparator SNAKE_COMPARATOR -> SNAKE_COMPARATOR
    void <clinit>() -> <clinit>
    android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback) -> calculateDiff
    android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback,boolean) -> calculateDiff
    android.support.v7.util.DiffUtil$Snake diffPartial(android.support.v7.util.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> diffPartial
    void <init>() -> <init>
com.android.systemui.statusbar.NotificationInfo -> com.android.systemui.statusbar.NotificationInfo:
    java.lang.String mAppName -> mAppName
    com.android.systemui.statusbar.NotificationInfo$OnAppSettingsClickListener mAppSettingsClickListener -> mAppSettingsClickListener
    int mAppUid -> mAppUid
    android.view.View mChannelDisabledView -> mChannelDisabledView
    android.widget.Switch mChannelEnabledSwitch -> mChannelEnabledSwitch
    com.android.systemui.statusbar.NotificationInfo$CheckSaveListener mCheckSaveListener -> mCheckSaveListener
    com.android.systemui.statusbar.NotificationGuts mGutsContainer -> mGutsContainer
    android.app.INotificationManager mINotificationManager -> mINotificationManager
    boolean mIsSingleDefaultChannel -> mIsSingleDefaultChannel
    java.util.List mNotificationChannels -> mNotificationChannels
    android.widget.TextView mNumChannelsView -> mNumChannelsView
    java.lang.String mPkg -> mPkg
    android.content.pm.PackageManager mPm -> mPm
    android.service.notification.StatusBarNotification mSbn -> mSbn
    android.widget.TextView mSettingsLinkView -> mSettingsLinkView
    android.app.NotificationChannel mSingleNotificationChannel -> mSingleNotificationChannel
    int mStartingUserImportance -> mStartingUserImportance
    void bindNotification(android.content.pm.PackageManager,android.app.INotificationManager,java.lang.String,java.util.List,int,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.NotificationInfo$OnSettingsClickListener,com.android.systemui.statusbar.NotificationInfo$OnAppSettingsClickListener,android.view.View$OnClickListener,com.android.systemui.statusbar.NotificationInfo$CheckSaveListener,java.util.Set) -> bindNotification
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void bindButtons(boolean) -> bindButtons
    int getActualHeight() -> getActualHeight
    android.content.Intent getAppSettingsIntent(android.content.pm.PackageManager,java.lang.String,android.app.NotificationChannel,int,java.lang.String) -> getAppSettingsIntent
    android.view.View getContentView() -> getContentView
    int getSelectedImportance() -> getSelectedImportance
    boolean handleCloseControls(boolean,boolean) -> handleCloseControls
    boolean hasImportanceChanged() -> hasImportanceChanged
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void saveImportance() -> saveImportance
    void setGutsParent(com.android.systemui.statusbar.NotificationGuts) -> setGutsParent
    void updateAppSettingsLink() -> updateAppSettingsLink
    void updateSecondaryText() -> updateSecondaryText
    boolean willBeRemoved() -> willBeRemoved
    void lambda$-com_android_systemui_statusbar_NotificationInfo_11242(com.android.systemui.statusbar.NotificationInfo$OnSettingsClickListener,int,android.view.View) -> lambda$-com_android_systemui_statusbar_NotificationInfo_11242
    void lambda$-com_android_systemui_statusbar_NotificationInfo_13636(android.widget.CompoundButton,boolean) -> lambda$-com_android_systemui_statusbar_NotificationInfo_13636
    void lambda$-com_android_systemui_statusbar_NotificationInfo_15714(android.content.Intent,android.view.View) -> lambda$-com_android_systemui_statusbar_NotificationInfo_15714
    void lambda$-com_android_systemui_statusbar_NotificationInfo_17498() -> lambda$-com_android_systemui_statusbar_NotificationInfo_17498
android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate$1 -> android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate$1:
    android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate this$0 -> this$0
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void <init>(android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate) -> <init>
com.android.systemui.recents.views.RecentsView$3 -> com.android.systemui.recents.views.RecentsView$3:
    com.android.systemui.recents.views.RecentsView this$0 -> this$0
    com.android.systemui.recents.events.ui.dragndrop.DragEndEvent val$event -> val$event
    android.graphics.Rect val$taskRect -> val$taskRect
    void <init>(com.android.systemui.recents.views.RecentsView,com.android.systemui.recents.events.ui.dragndrop.DragEndEvent,android.graphics.Rect) -> <init>
    java.util.List composeSpecs() -> composeSpecs
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.PermissionChecker$PermissionResult -> android.support.v4.content.PermissionChecker$PermissionResult:
com.android.systemui.ExpandHelper$Callback -> com.android.systemui.ExpandHelper$Callback:
    void setUserLockedChild(android.view.View,boolean) -> setUserLockedChild
    com.android.systemui.statusbar.ExpandableView getChildAtRawPosition(float,float) -> getChildAtRawPosition
    boolean canChildBeExpanded(android.view.View) -> canChildBeExpanded
    void expansionStateChanged(boolean) -> expansionStateChanged
    com.android.systemui.statusbar.ExpandableView getChildAtPosition(float,float) -> getChildAtPosition
    int getMaxExpandHeight(com.android.systemui.statusbar.ExpandableView) -> getMaxExpandHeight
    void setExpansionCancelled(android.view.View) -> setExpansionCancelled
    void setUserExpandedChild(android.view.View,boolean) -> setUserExpandedChild
com.android.systemui.recents.events.activity.DockedTopTaskEvent -> com.android.systemui.recents.events.activity.DockedTopTaskEvent:
    int dragMode -> dragMode
    android.graphics.Rect initialRect -> initialRect
    void <init>(int,android.graphics.Rect) -> <init>
com.android.keyguard.KeyguardSecurityModel$SecurityMode -> com.android.keyguard.KeyguardSecurityModel$SecurityMode:
    com.android.keyguard.KeyguardSecurityModel$SecurityMode[] $VALUES -> $VALUES
    com.android.keyguard.KeyguardSecurityModel$SecurityMode Invalid -> Invalid
    com.android.keyguard.KeyguardSecurityModel$SecurityMode None -> None
    com.android.keyguard.KeyguardSecurityModel$SecurityMode PIN -> PIN
    com.android.keyguard.KeyguardSecurityModel$SecurityMode Password -> Password
    com.android.keyguard.KeyguardSecurityModel$SecurityMode Pattern -> Pattern
    com.android.keyguard.KeyguardSecurityModel$SecurityMode SimPin -> SimPin
    com.android.keyguard.KeyguardSecurityModel$SecurityMode SimPuk -> SimPuk
    void <init>(java.lang.String,int) -> <init>
    com.android.keyguard.KeyguardSecurityModel$SecurityMode valueOf(java.lang.String) -> valueOf
    com.android.keyguard.KeyguardSecurityModel$SecurityMode[] values() -> values
    void <clinit>() -> <clinit>
com.android.systemui.recents.RecentsDebugFlags -> com.android.systemui.recents.RecentsDebugFlags:
    boolean isFastToggleRecentsEnabled() -> isFastToggleRecentsEnabled
    void <init>(android.content.Context) -> <init>
    boolean isPagingEnabled() -> isPagingEnabled
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
com.android.systemui.plugins.PluginInstanceManager$PluginContextWrapper -> com.android.systemui.plugins.PluginInstanceManager$PluginContextWrapper:
    java.lang.ClassLoader mClassLoader -> mClassLoader
    android.view.LayoutInflater mInflater -> mInflater
    void <init>(android.content.Context,java.lang.ClassLoader) -> <init>
    java.lang.ClassLoader getClassLoader() -> getClassLoader
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
com.android.systemui.statusbar.policy.KeyguardUserSwitcher$Container -> com.android.systemui.statusbar.policy.KeyguardUserSwitcher$Container:
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher mKeyguardUserSwitcher -> mKeyguardUserSwitcher
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> setKeyguardUserSwitcher
com.android.systemui.statusbar.policy.-$Lambda$SnNEiKlEvYrU6iyicO3bRfhbXXw$1 -> com.android.systemui.statusbar.policy.-$Lambda$SnNEiKlEvYrU6iyicO3bRfhbXXw$1:
    byte $id -> $id
    boolean -$f0 -> -$f0
    void <init>(byte,boolean) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void accept(java.lang.Object) -> accept
com.android.systemui.statusbar.ExpandableNotificationRow$1 -> com.android.systemui.statusbar.ExpandableNotificationRow$1:
    com.android.systemui.statusbar.ExpandableNotificationRow this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.notification.RowInflaterTask$RowInflationFinishedListener -> com.android.systemui.statusbar.notification.RowInflaterTask$RowInflationFinishedListener:
    void onInflationFinished(com.android.systemui.statusbar.ExpandableNotificationRow) -> onInflationFinished
com.android.systemui.tuner.TunerServiceImpl -> com.android.systemui.tuner.TunerServiceImpl:
    android.content.ContentResolver mContentResolver -> mContentResolver
    android.content.Context mContext -> mContext
    int mCurrentUser -> mCurrentUser
    android.util.ArrayMap mListeningUris -> mListeningUris
    com.android.systemui.tuner.TunerServiceImpl$Observer mObserver -> mObserver
    java.util.HashMap mTunableLookup -> mTunableLookup
    java.util.HashSet mTunables -> mTunables
    com.android.systemui.settings.CurrentUserTracker mUserTracker -> mUserTracker
    void <init>(android.content.Context) -> <init>
    void addTunable(com.android.systemui.tuner.TunerService$Tunable,java.lang.String[]) -> addTunable
    void addTunable(com.android.systemui.tuner.TunerService$Tunable,java.lang.String) -> addTunable
    void clearAll() -> clearAll
    java.lang.String getValue(java.lang.String) -> getValue
    int getValue(java.lang.String,int) -> getValue
    java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    void reloadAll() -> reloadAll
    void reloadSetting(android.net.Uri) -> reloadSetting
    void removeTunable(com.android.systemui.tuner.TunerService$Tunable) -> removeTunable
    void reregisterAll() -> reregisterAll
    void setValue(java.lang.String,java.lang.String) -> setValue
    void setValue(java.lang.String,int) -> setValue
    void upgradeTuner(int,int) -> upgradeTuner
    int -set0(com.android.systemui.tuner.TunerServiceImpl,int) -> -set0
    void -wrap0(com.android.systemui.tuner.TunerServiceImpl) -> -wrap0
    void -wrap1(com.android.systemui.tuner.TunerServiceImpl,android.net.Uri) -> -wrap1
android.support.v17.leanback.widget.PlaybackTransportRowView$OnUnhandledKeyListener -> android.support.v17.leanback.widget.PlaybackTransportRowView$OnUnhandledKeyListener:
    boolean onUnhandledKey(android.view.KeyEvent) -> onUnhandledKey
com.android.keyguard.KeyguardSimPinView$3 -> com.android.keyguard.KeyguardSimPinView$3:
    com.android.keyguard.KeyguardSimPinView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardSimPinView,com.android.keyguard.KeyguardSimPinView,java.lang.String,int) -> <init>
    void onSimCheckResponse(int,int) -> onSimCheckResponse
com.android.systemui.egg.MLand$Pop -> com.android.systemui.egg.MLand$Pop:
    android.graphics.drawable.Drawable antenna -> antenna
    int cx -> cx
    int cy -> cy
    android.graphics.drawable.Drawable eyes -> eyes
    int mRotate -> mRotate
    android.graphics.drawable.Drawable mouth -> mouth
    int r -> r
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context,float) -> <init>
    boolean intersects(com.android.systemui.egg.MLand$Player) -> intersects
    void onDraw(android.graphics.Canvas) -> onDraw
    void step(long,long,float,float) -> step
com.android.systemui.statusbar.notification.FakeShadowView$1 -> com.android.systemui.statusbar.notification.FakeShadowView$1:
    com.android.systemui.statusbar.notification.FakeShadowView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.notification.FakeShadowView) -> <init>
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$1 -> com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager$1:
    com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) -> <init>
    void onEmergencyCallAction() -> onEmergencyCallAction
android.support.v17.leanback.app.GuidedStepRootLayout -> android.support.v17.leanback.app.GuidedStepRootLayout:
    boolean mFocusOutEnd -> mFocusOutEnd
    boolean mFocusOutStart -> mFocusOutStart
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
android.support.v7.preference.Preference$BaseSavedState -> android.support.v7.preference.Preference$BaseSavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.systemui.statusbar.phone.NavigationBarInflaterView -> com.android.systemui.statusbar.phone.NavigationBarInflaterView:
    boolean isRot0Landscape -> isRot0Landscape
    boolean mAlternativeOrder -> mAlternativeOrder
    android.util.SparseArray mButtonDispatchers -> mButtonDispatchers
    java.lang.String mCurrentLayout -> mCurrentLayout
    android.view.LayoutInflater mLandscapeInflater -> mLandscapeInflater
    android.view.View mLastLandscape -> mLastLandscape
    android.view.View mLastPortrait -> mLastPortrait
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    java.util.List mPlugins -> mPlugins
    android.widget.FrameLayout mRot0 -> mRot0
    android.widget.FrameLayout mRot90 -> mRot90
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addAll(com.android.systemui.statusbar.phone.ButtonDispatcher,android.view.ViewGroup) -> addAll
    void addGravitySpacer(android.widget.LinearLayout) -> addGravitySpacer
    void addToDispatchers(android.view.View) -> addToDispatchers
    android.view.View applySize(android.view.View,java.lang.String,boolean,boolean) -> applySize
    void clearAllChildren(android.view.ViewGroup) -> clearAllChildren
    void clearViews() -> clearViews
    void createInflaters() -> createInflaters
    android.view.View createView(java.lang.String,android.view.ViewGroup,android.view.LayoutInflater) -> createView
    java.lang.String extractButton(java.lang.String) -> extractButton
    java.lang.String extractImage(java.lang.String) -> extractImage
    int extractKeycode(java.lang.String) -> extractKeycode
    java.lang.String extractSize(java.lang.String) -> extractSize
    java.lang.String getDefaultLayout() -> getDefaultLayout
    android.view.View inflateButton(java.lang.String,android.view.ViewGroup,boolean,boolean) -> inflateButton
    void inflateButtons(java.lang.String[],android.view.ViewGroup,boolean,boolean) -> inflateButtons
    void inflateChildren() -> inflateChildren
    void inflateLayout(java.lang.String) -> inflateLayout
    void initiallyFill(com.android.systemui.statusbar.phone.ButtonDispatcher) -> initiallyFill
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void onPluginConnected(com.android.systemui.plugins.statusbar.phone.NavBarButtonProvider,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.statusbar.phone.NavBarButtonProvider) -> onPluginDisconnected
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void setAlternativeOrder(boolean) -> setAlternativeOrder
    void setButtonDispatchers(android.util.SparseArray) -> setButtonDispatchers
    void updateAlternativeOrder() -> updateAlternativeOrder
    void updateAlternativeOrder(android.view.View) -> updateAlternativeOrder
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
com.android.systemui.statusbar.notification.NotificationInflater$1 -> com.android.systemui.statusbar.notification.NotificationInflater$1:
    com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress val$result -> val$result
    void <init>(com.android.systemui.statusbar.notification.NotificationInflater$InflationProgress) -> <init>
    android.widget.RemoteViews getRemoteView() -> getRemoteView
    void setResultView(android.view.View) -> setResultView
com.android.systemui.statusbar.stack.StackScrollAlgorithm -> com.android.systemui.statusbar.stack.StackScrollAlgorithm:
    boolean mClipNotificationScrollToTop -> mClipNotificationScrollToTop
    int mCollapsedSize -> mCollapsedSize
    int mIncreasedPaddingBetweenElements -> mIncreasedPaddingBetweenElements
    boolean mIsExpanded -> mIsExpanded
    int mPaddingBetweenElements -> mPaddingBetweenElements
    int mStatusBarHeight -> mStatusBarHeight
    com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState mTempAlgorithmState -> mTempAlgorithmState
    void initView(android.content.Context) -> initView
    void getStackScrollState(com.android.systemui.statusbar.stack.AmbientState,com.android.systemui.statusbar.stack.StackScrollState) -> getStackScrollState
    boolean canChildBeDismissed(android.view.View) -> canChildBeDismissed
    void <init>(android.content.Context) -> <init>
    void setIsExpanded(boolean) -> setIsExpanded
    void clampHunToMaxTranslation(com.android.systemui.statusbar.stack.AmbientState,com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.statusbar.stack.ExpandableViewState) -> clampHunToMaxTranslation
    void clampHunToTop(com.android.systemui.statusbar.stack.AmbientState,com.android.systemui.statusbar.ExpandableNotificationRow,com.android.systemui.statusbar.stack.ExpandableViewState) -> clampHunToTop
    void clampPositionToShelf(com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.stack.AmbientState) -> clampPositionToShelf
    int getMaxAllowedChildHeight(android.view.View) -> getMaxAllowedChildHeight
    void getNotificationChildrenStates(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState) -> getNotificationChildrenStates
    int getPaddingAfterChild(com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.ExpandableView) -> getPaddingAfterChild
    float getPaddingForValue(java.lang.Float) -> getPaddingForValue
    void handleDraggedViews(com.android.systemui.statusbar.stack.AmbientState,com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState) -> handleDraggedViews
    void initAlgorithmState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.stack.AmbientState) -> initAlgorithmState
    void initConstants(android.content.Context) -> initConstants
    float updateChild(int,com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.stack.AmbientState,float) -> updateChild
    float updateChildZValue(int,float,com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.stack.AmbientState) -> updateChildZValue
    void updateClipping(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.stack.AmbientState) -> updateClipping
    void updateDimmedActivatedHideSensitive(com.android.systemui.statusbar.stack.AmbientState,com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState) -> updateDimmedActivatedHideSensitive
    void updateHeadsUpStates(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.stack.AmbientState) -> updateHeadsUpStates
    int updateNotGoneIndex(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,int,com.android.systemui.statusbar.ExpandableView) -> updateNotGoneIndex
    void updatePositionsForState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.stack.AmbientState) -> updatePositionsForState
    void updateShelfState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.AmbientState) -> updateShelfState
    void updateSpeedBumpState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.stack.AmbientState) -> updateSpeedBumpState
    void updateZValuesForState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackScrollAlgorithm$StackScrollAlgorithmState,com.android.systemui.statusbar.stack.AmbientState) -> updateZValuesForState
    int -get0(com.android.systemui.statusbar.stack.StackScrollAlgorithm) -> -get0
com.android.systemui.-$Lambda$LNq66TT8jS0-kRjuflAuQa45E9s -> com.android.systemui.-$Lambda$LNq66TT8jS0-kRjuflAuQa45E9s:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.view.View,int,int,int,int,int,int,int,int) -> $m$0
    void $m$1(android.view.View,int,int,int,int,int,int,int,int) -> $m$1
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.systemui.statusbar.phone.FingerprintUnlockController$1 -> com.android.systemui.statusbar.phone.FingerprintUnlockController$1:
    com.android.systemui.statusbar.phone.FingerprintUnlockController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.FingerprintUnlockController) -> <init>
    void run() -> run
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.SearchView$5:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.OpReorderer$Callback -> android.support.v7.widget.OpReorderer$Callback:
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
com.android.systemui.tuner.-$Lambda$3H5rrdjfcQbYrkcFMQaPInE7qn0 -> com.android.systemui.tuner.-$Lambda$3H5rrdjfcQbYrkcFMQaPInE7qn0:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void $m$2(java.lang.Object) -> $m$2
    void accept(java.lang.Object) -> accept
com.android.systemui.pip.phone.PipAccessibilityInteractionConnection$AccessibilityCallbacks -> com.android.systemui.pip.phone.PipAccessibilityInteractionConnection$AccessibilityCallbacks:
    void onAccessibilityShowMenu() -> onAccessibilityShowMenu
com.android.systemui.statusbar.phone.StatusBar$3 -> com.android.systemui.statusbar.phone.StatusBar$3:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
com.android.systemui.Dependency$DependencyProvider -> com.android.systemui.Dependency$DependencyProvider:
    java.lang.Object createDependency() -> createDependency
com.android.systemui.statusbar.phone.-$Lambda$XqY7sa9kEG02uT1QAmuBm8yeXIU$2 -> com.android.systemui.statusbar.phone.-$Lambda$XqY7sa9kEG02uT1QAmuBm8yeXIU$2:
    int -$f0 -> -$f0
    int -$f1 -> -$f1
    void <init>(int,int) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.tuner.PowerNotificationControlsFragment -> com.android.systemui.tuner.PowerNotificationControlsFragment:
    void <init>() -> <init>
    boolean isEnabled() -> isEnabled
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onPause() -> onPause
    void onResume() -> onResume
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean -wrap0(com.android.systemui.tuner.PowerNotificationControlsFragment) -> -wrap0
com.android.keyguard.SecurityMessageDisplay -> com.android.keyguard.SecurityMessageDisplay:
    void formatMessage(int,java.lang.Object[]) -> formatMessage
    void setMessage(java.lang.CharSequence) -> setMessage
    void setMessage(int) -> setMessage
    void setNextMessageColor(int) -> setNextMessageColor
com.android.systemui.statusbar.phone.KeyguardBouncer -> com.android.systemui.statusbar.phone.KeyguardBouncer:
    int mBouncerPromptReason -> mBouncerPromptReason
    com.android.keyguard.ViewMediatorCallback mCallback -> mCallback
    android.view.ViewGroup mContainer -> mContainer
    android.content.Context mContext -> mContext
    com.android.systemui.keyguard.DismissCallbackRegistry mDismissCallbackRegistry -> mDismissCallbackRegistry
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    android.os.Handler mHandler -> mHandler
    com.android.keyguard.KeyguardHostView mKeyguardView -> mKeyguardView
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    java.lang.Runnable mRemoveViewRunnable -> mRemoveViewRunnable
    android.view.ViewGroup mRoot -> mRoot
    java.lang.Runnable mShowRunnable -> mShowRunnable
    boolean mShowingSoon -> mShowingSoon
    int mStatusBarHeight -> mStatusBarHeight
    com.android.keyguard.KeyguardUpdateMonitorCallback mUpdateMonitorCallback -> mUpdateMonitorCallback
    void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils,android.view.ViewGroup,com.android.systemui.keyguard.DismissCallbackRegistry) -> <init>
    void cancelShowRunnable() -> cancelShowRunnable
    void ensureView() -> ensureView
    void hide(boolean) -> hide
    void inflateView() -> inflateView
    boolean interceptMediaKey(android.view.KeyEvent) -> interceptMediaKey
    boolean isFullscreenBouncer() -> isFullscreenBouncer
    boolean isSecure() -> isSecure
    boolean isShowing() -> isShowing
    boolean needsFullscreenBouncer() -> needsFullscreenBouncer
    void notifyKeyguardAuthenticated(boolean) -> notifyKeyguardAuthenticated
    void onScreenTurnedOff() -> onScreenTurnedOff
    void prepare() -> prepare
    void removeView() -> removeView
    boolean shouldDismissOnMenuPressed() -> shouldDismissOnMenuPressed
    void show(boolean) -> show
    void showMessage(java.lang.String,int) -> showMessage
    void showPromptReason(int) -> showPromptReason
    void showWithDismissAction(com.android.keyguard.KeyguardHostView$OnDismissAction,java.lang.Runnable) -> showWithDismissAction
    void startPreHideAnimation(java.lang.Runnable) -> startPreHideAnimation
    void -com_android_systemui_statusbar_phone_KeyguardBouncer-mthref-0() -> -com_android_systemui_statusbar_phone_KeyguardBouncer-mthref-0
    int -get0(com.android.systemui.statusbar.phone.KeyguardBouncer) -> -get0
    int -get1(com.android.systemui.statusbar.phone.KeyguardBouncer) -> -get1
    int -set0(com.android.systemui.statusbar.phone.KeyguardBouncer,int) -> -set0
    boolean -set1(com.android.systemui.statusbar.phone.KeyguardBouncer,boolean) -> -set1
android.support.v7.app.AlertController -> android.support.v7.app.AlertController:
    android.os.Handler mHandler -> mHandler
    int mIconId -> mIconId
    java.lang.CharSequence mMessage -> mMessage
    android.widget.TextView mMessageView -> mMessageView
    android.widget.Button mButtonNegative -> mButtonNegative
    android.view.View mView -> mView
    int mViewSpacingLeft -> mViewSpacingLeft
    int mListLayout -> mListLayout
    android.widget.TextView mTitleView -> mTitleView
    int mViewLayoutResId -> mViewLayoutResId
    java.lang.CharSequence mButtonNeutralText -> mButtonNeutralText
    int mListItemLayout -> mListItemLayout
    int mViewSpacingRight -> mViewSpacingRight
    int mAlertDialogLayout -> mAlertDialogLayout
    android.support.v4.widget.NestedScrollView mScrollView -> mScrollView
    boolean mViewSpacingSpecified -> mViewSpacingSpecified
    java.lang.CharSequence mButtonNegativeText -> mButtonNegativeText
    android.widget.ImageView mIconView -> mIconView
    android.os.Message mButtonNeutralMessage -> mButtonNeutralMessage
    int mSingleChoiceItemLayout -> mSingleChoiceItemLayout
    int mViewSpacingBottom -> mViewSpacingBottom
    android.support.v7.app.AppCompatDialog mDialog -> mDialog
    android.view.Window mWindow -> mWindow
    android.content.Context mContext -> mContext
    int mCheckedItem -> mCheckedItem
    android.graphics.drawable.Drawable mIcon -> mIcon
    int mMultiChoiceItemLayout -> mMultiChoiceItemLayout
    java.lang.CharSequence mTitle -> mTitle
    int mButtonPanelSideLayout -> mButtonPanelSideLayout
    android.view.View$OnClickListener mButtonHandler -> mButtonHandler
    int mViewSpacingTop -> mViewSpacingTop
    android.widget.Button mButtonNeutral -> mButtonNeutral
    android.view.View mCustomTitleView -> mCustomTitleView
    android.os.Message mButtonNegativeMessage -> mButtonNegativeMessage
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.Button mButtonPositive -> mButtonPositive
    int mButtonPanelLayoutHint -> mButtonPanelLayoutHint
    java.lang.CharSequence mButtonPositiveText -> mButtonPositiveText
    android.widget.ListView mListView -> mListView
    android.os.Message mButtonPositiveMessage -> mButtonPositiveMessage
    boolean mShowTitle -> mShowTitle
    void <init>(android.content.Context,android.support.v7.app.AppCompatDialog,android.view.Window) -> <init>
    void setCustomTitle(android.view.View) -> setCustomTitle
    void installContent() -> installContent
    void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    void setIcon(int) -> setIcon
    void setView(android.view.View,int,int,int,int) -> setView
    int getIconAttributeResId(int) -> getIconAttributeResId
    void setMessage(java.lang.CharSequence) -> setMessage
    boolean canTextInput(android.view.View) -> canTextInput
    int selectContentView() -> selectContentView
    void setView(int) -> setView
    void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    void setView(android.view.View) -> setView
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void centerButton(android.widget.Button) -> centerButton
    void setupContent(android.view.ViewGroup) -> setupContent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setupTitle(android.view.ViewGroup) -> setupTitle
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setupView() -> setupView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setupButtons(android.view.ViewGroup) -> setupButtons
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message) -> setButton
    boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
    void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.LinearLayoutCompat$LayoutParams:
    int gravity -> gravity
    float weight -> weight
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v4.view.ViewCompat$ViewCompatBaseImpl -> android.support.v4.view.ViewCompat$ViewCompatBaseImpl:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    java.lang.reflect.Field sMinHeightField -> sMinHeightField
    boolean sMinHeightFieldFetched -> sMinHeightFieldFetched
    java.lang.reflect.Field sAccessibilityDelegateField -> sAccessibilityDelegateField
    boolean sMinWidthFieldFetched -> sMinWidthFieldFetched
    boolean sAccessibilityDelegateCheckFailed -> sAccessibilityDelegateCheckFailed
    java.util.WeakHashMap sTransitionNameMap -> sTransitionNameMap
    java.lang.reflect.Field sMinWidthField -> sMinWidthField
    long getFrameTime() -> getFrameTime
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    void setElevation(android.view.View,float) -> setElevation
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    float getElevation(android.view.View) -> getElevation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean isLaidOut(android.view.View) -> isLaidOut
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void <init>() -> <init>
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    boolean hasTransientState(android.view.View) -> hasTransientState
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void <clinit>() -> <clinit>
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    android.view.Display getDisplay(android.view.View) -> getDisplay
android.support.annotation.Nullable -> android.support.annotation.Nullable:
com.android.systemui.qs.tileimpl.-$Lambda$HWR9Y5oviVQDQwcpVJqL0gX3vIE -> com.android.systemui.qs.tileimpl.-$Lambda$HWR9Y5oviVQDQwcpVJqL0gX3vIE:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void $m$1(android.view.View) -> $m$1
    void onClick(android.view.View) -> onClick
com.android.systemui.recents.events.ui.dragndrop.DragStartEvent -> com.android.systemui.recents.events.ui.dragndrop.DragStartEvent:
    com.android.systemui.recents.model.Task task -> task
    com.android.systemui.recents.views.TaskView taskView -> taskView
    android.graphics.Point tlOffset -> tlOffset
    boolean isUserTouchInitiated -> isUserTouchInitiated
    void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,android.graphics.Point,boolean) -> <init>
    void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,android.graphics.Point) -> <init>
android.support.v7.widget.AlertDialogLayout -> android.support.v7.widget.AlertDialogLayout:
    void forceUniformWidth(int,int) -> forceUniformWidth
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void onMeasure(int,int) -> onMeasure
    int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    boolean tryOnMeasure(int,int) -> tryOnMeasure
com.android.systemui.recents.events.activity.IterateRecentsEvent -> com.android.systemui.recents.events.activity.IterateRecentsEvent:
    void <init>() -> <init>
com.android.systemui.DessertCaseView$RescalingContainer -> com.android.systemui.DessertCaseView$RescalingContainer:
    com.android.systemui.DessertCaseView mView -> mView
    void <init>(android.content.Context) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setView(com.android.systemui.DessertCaseView) -> setView
com.android.systemui.statusbar.policy.WifiSignalController -> com.android.systemui.statusbar.policy.WifiSignalController:
    boolean mHasMobileData -> mHasMobileData
    com.android.internal.util.AsyncChannel mWifiChannel -> mWifiChannel
    android.net.wifi.WifiManager mWifiManager -> mWifiManager
    com.android.settingslib.wifi.WifiStatusTracker mWifiTracker -> mWifiTracker
    void <init>(android.content.Context,boolean,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl) -> <init>
    void notifyListeners(com.android.systemui.statusbar.policy.NetworkController$SignalCallback) -> notifyListeners
    void handleBroadcast(android.content.Intent) -> handleBroadcast
    void setActivity(int) -> setActivity
    com.android.systemui.statusbar.policy.WifiSignalController$WifiState cleanState() -> cleanState
    com.android.systemui.statusbar.policy.SignalController$State cleanState() -> cleanState
    com.android.internal.util.AsyncChannel -get0(com.android.systemui.statusbar.policy.WifiSignalController) -> -get0
android.support.v4.widget.EdgeEffectCompat$EdgeEffectApi21Impl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectApi21Impl:
    void <init>() -> <init>
    void onPull(android.widget.EdgeEffect,float,float) -> onPull
com.android.systemui.pip.tv.-$Lambda$Oiq86WOA62rnj-bUR420RGgXbzQ$1 -> com.android.systemui.pip.tv.-$Lambda$Oiq86WOA62rnj-bUR420RGgXbzQ$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.recents.model.TaskResourceLoadQueue -> com.android.systemui.recents.model.TaskResourceLoadQueue:
    java.util.concurrent.ConcurrentLinkedQueue mQueue -> mQueue
    void <init>() -> <init>
    void addTask(com.android.systemui.recents.model.Task) -> addTask
    void clearTasks() -> clearTasks
    boolean isEmpty() -> isEmpty
    com.android.systemui.recents.model.Task nextTask() -> nextTask
    void removeTask(com.android.systemui.recents.model.Task) -> removeTask
com.android.systemui.doze.DozeTriggers$TriggerReceiver -> com.android.systemui.doze.DozeTriggers$TriggerReceiver:
    boolean mRegistered -> mRegistered
    com.android.systemui.doze.DozeTriggers this$0 -> this$0
    void <init>(com.android.systemui.doze.DozeTriggers) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void register(android.content.Context) -> register
    void unregister(android.content.Context) -> unregister
    void <init>(com.android.systemui.doze.DozeTriggers,com.android.systemui.doze.DozeTriggers$TriggerReceiver) -> <init>
com.android.systemui.statusbar.phone.StatusBarIconController$TintedIconManager -> com.android.systemui.statusbar.phone.StatusBarIconController$TintedIconManager:
    int mColor -> mColor
    void <init>(android.view.ViewGroup) -> <init>
    void setTint(int) -> setTint
    void onIconAdded(int,java.lang.String,boolean,com.android.internal.statusbar.StatusBarIcon) -> onIconAdded
com.android.systemui.statusbar.phone.StatusBar$33 -> com.android.systemui.statusbar.phone.StatusBar$33:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.globalactions.GlobalActionsDialog$5 -> com.android.systemui.globalactions.GlobalActionsDialog$5:
    com.android.systemui.globalactions.GlobalActionsDialog this$0 -> this$0
    void <init>(com.android.systemui.globalactions.GlobalActionsDialog) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.settingslib.core.lifecycle.events.OnResume -> com.android.settingslib.core.lifecycle.events.OnResume:
    void onResume() -> onResume
com.android.systemui.statusbar.phone.AutoTileManager$4 -> com.android.systemui.statusbar.phone.AutoTileManager$4:
    com.android.systemui.statusbar.phone.AutoTileManager this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.AutoTileManager) -> <init>
    void addNightTile() -> addNightTile
    void onActivated(boolean) -> onActivated
    void onAutoModeChanged(int) -> onAutoModeChanged
    void lambda$-com_android_systemui_statusbar_phone_AutoTileManager$4_6572() -> lambda$-com_android_systemui_statusbar_phone_AutoTileManager$4_6572
com.android.settingslib.bluetooth.CachedBluetoothDevice -> com.android.settingslib.bluetooth.CachedBluetoothDevice:
    android.content.Context mContext -> mContext
    android.bluetooth.BluetoothClass mBtClass -> mBtClass
    java.util.List mRemovedProfiles -> mRemovedProfiles
    java.lang.String mName -> mName
    boolean mIsConnectingErrorPossible -> mIsConnectingErrorPossible
    java.util.List mProfiles -> mProfiles
    long mConnectAttempted -> mConnectAttempted
    boolean mJustDiscovered -> mJustDiscovered
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    java.util.Collection mCallbacks -> mCallbacks
    int mMessageRejectionCount -> mMessageRejectionCount
    java.util.HashMap mProfileConnectionState -> mProfileConnectionState
    short mRssi -> mRssi
    android.bluetooth.BluetoothDevice mDevice -> mDevice
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    boolean mLocalNapRoleConnected -> mLocalNapRoleConnected
    int getBatteryLevel() -> getBatteryLevel
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.LocalBluetoothProfileManager,android.bluetooth.BluetoothDevice) -> <init>
    void connectWithoutResettingTimer(boolean) -> connectWithoutResettingTimer
    void refreshName() -> refreshName
    void setNewName(java.lang.String) -> setNewName
    int compareTo(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> compareTo
    boolean isConnected() -> isConnected
    void onUuidChanged() -> onUuidChanged
    void onBondingDockConnect() -> onBondingDockConnect
    int hashCode() -> hashCode
    void onProfileStateChanged(com.android.settingslib.bluetooth.LocalBluetoothProfile,int) -> onProfileStateChanged
    void setBtClass(android.bluetooth.BluetoothClass) -> setBtClass
    void connectInt(com.android.settingslib.bluetooth.LocalBluetoothProfile) -> connectInt
    int compareTo(java.lang.Object) -> compareTo
    boolean startPairing() -> startPairing
    void fetchBtClass() -> fetchBtClass
    void registerCallback(com.android.settingslib.bluetooth.CachedBluetoothDevice$Callback) -> registerCallback
    java.lang.String toString() -> toString
    void disconnect(com.android.settingslib.bluetooth.LocalBluetoothProfile) -> disconnect
    void setPhonebookPermissionChoice(int) -> setPhonebookPermissionChoice
    int getBondState() -> getBondState
    void connect(boolean) -> connect
    void saveMessageRejectionCount() -> saveMessageRejectionCount
    void setRssi(short) -> setRssi
    void setJustDiscovered(boolean) -> setJustDiscovered
    void clearProfileConnectionState() -> clearProfileConnectionState
    android.bluetooth.BluetoothDevice getDevice() -> getDevice
    void fillData() -> fillData
    void disconnect() -> disconnect
    boolean equals(java.lang.Object) -> equals
    void dispatchAttributesChanged() -> dispatchAttributesChanged
    java.lang.String getName() -> getName
    int getProfileConnectionState(com.android.settingslib.bluetooth.LocalBluetoothProfile) -> getProfileConnectionState
    int getPhonebookPermissionChoice() -> getPhonebookPermissionChoice
    java.lang.String describe(com.android.settingslib.bluetooth.LocalBluetoothProfile) -> describe
    void processPhonebookAccess() -> processPhonebookAccess
    void fetchMessageRejectionCount() -> fetchMessageRejectionCount
    void fetchName() -> fetchName
    boolean ensurePaired() -> ensurePaired
    void migratePhonebookPermissionChoice() -> migratePhonebookPermissionChoice
    int getMaxConnectionState() -> getMaxConnectionState
    void refresh() -> refresh
    void migrateMessagePermissionChoice() -> migrateMessagePermissionChoice
    java.util.List getProfiles() -> getProfiles
    void setMessagePermissionChoice(int) -> setMessagePermissionChoice
    void onBondingStateChanged(int) -> onBondingStateChanged
    void refreshBtClass() -> refreshBtClass
    void setSimPermissionChoice(int) -> setSimPermissionChoice
    boolean updateProfiles() -> updateProfiles
    void connectAutoConnectableProfiles() -> connectAutoConnectableProfiles
com.android.systemui.pip.tv.PipControlButtonView$1 -> com.android.systemui.pip.tv.PipControlButtonView$1:
    com.android.systemui.pip.tv.PipControlButtonView this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipControlButtonView) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.android.systemui.tuner.ShortcutParser -> com.android.systemui.tuner.ShortcutParser:
    android.util.AttributeSet mAttrs -> mAttrs
    android.content.Context mContext -> mContext
    java.lang.String mName -> mName
    java.lang.String mPkg -> mPkg
    int mResId -> mResId
    android.content.res.Resources mResources -> mResources
    void <init>(android.content.Context,android.content.ComponentName) -> <init>
    java.util.List getShortcuts() -> getShortcuts
    void <init>(android.content.Context,java.lang.String,java.lang.String,int) -> <init>
    int getResId(android.content.Context,android.content.ComponentName) -> getResId
    com.android.systemui.tuner.ShortcutParser$Shortcut parseShortcut(android.content.res.XmlResourceParser) -> parseShortcut
com.android.systemui.statusbar.phone.TrustDrawable$2 -> com.android.systemui.statusbar.phone.TrustDrawable$2:
    com.android.systemui.statusbar.phone.TrustDrawable this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.TrustDrawable) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.util.AlarmTimeout -> com.android.systemui.util.AlarmTimeout:
    android.app.AlarmManager mAlarmManager -> mAlarmManager
    android.os.Handler mHandler -> mHandler
    android.app.AlarmManager$OnAlarmListener mListener -> mListener
    boolean mScheduled -> mScheduled
    java.lang.String mTag -> mTag
    void <init>(android.app.AlarmManager,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler) -> <init>
    boolean isScheduled() -> isScheduled
    void schedule(long,int) -> schedule
    void cancel() -> cancel
    void onAlarm() -> onAlarm
com.android.systemui.SystemBars -> com.android.systemui.SystemBars:
    com.android.systemui.SystemUI mStatusBar -> mStatusBar
    void <init>() -> <init>
    java.lang.RuntimeException andLog(java.lang.String,java.lang.Throwable) -> andLog
    void createStatusBarFromConfig() -> createStatusBarFromConfig
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void start() -> start
android.support.v7.media.MediaRouter$GlobalMediaRouter$1 -> android.support.v7.media.MediaRouter$GlobalMediaRouter$1:
    android.support.v7.media.MediaRouter$GlobalMediaRouter this$1 -> this$1
    void <init>(android.support.v7.media.MediaRouter$GlobalMediaRouter) -> <init>
com.android.systemui.pip.phone.PipMediaController$1 -> com.android.systemui.pip.phone.PipMediaController$1:
    com.android.systemui.pip.phone.PipMediaController this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMediaController) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.keyguard.KeyguardMessageArea -> com.android.keyguard.KeyguardMessageArea:
    java.lang.Object ANNOUNCE_TOKEN -> ANNOUNCE_TOKEN
    int mDefaultColor -> mDefaultColor
    android.os.Handler mHandler -> mHandler
    com.android.keyguard.KeyguardUpdateMonitorCallback mInfoCallback -> mInfoCallback
    java.lang.CharSequence mMessage -> mMessage
    int mNextMessageColor -> mNextMessageColor
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void clearMessage() -> clearMessage
    com.android.keyguard.SecurityMessageDisplay findSecurityMessageDisplay(android.view.View) -> findSecurityMessageDisplay
    void formatMessage(int,java.lang.Object[]) -> formatMessage
    void onFinishInflate() -> onFinishInflate
    void securityMessageChanged(java.lang.CharSequence) -> securityMessageChanged
    void setMessage(java.lang.CharSequence) -> setMessage
    void setMessage(int) -> setMessage
    void setNextMessageColor(int) -> setNextMessageColor
    void update() -> update
    void <clinit>() -> <clinit>
com.android.systemui.volume.VolumeDialogMotion$LogDecelerateInterpolator -> com.android.systemui.volume.VolumeDialogMotion$LogDecelerateInterpolator:
    float mBase -> mBase
    float mDrift -> mDrift
    float mOutputScale -> mOutputScale
    float mTimeScale -> mTimeScale
    void <init>() -> <init>
    void <init>(float,float,float) -> <init>
    float computeLog(float) -> computeLog
    float getInterpolation(float) -> getInterpolation
com.android.settingslib.bluetooth.HfpClientProfile$HfpClientServiceListener -> com.android.settingslib.bluetooth.HfpClientProfile$HfpClientServiceListener:
    com.android.settingslib.bluetooth.HfpClientProfile this$0 -> this$0
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void <init>(com.android.settingslib.bluetooth.HfpClientProfile,com.android.settingslib.bluetooth.HfpClientProfile$HfpClientServiceListener) -> <init>
    void onServiceDisconnected(int) -> onServiceDisconnected
    void <init>(com.android.settingslib.bluetooth.HfpClientProfile) -> <init>
com.android.settingslib.bluetooth.HeadsetProfile -> com.android.settingslib.bluetooth.HeadsetProfile:
    android.bluetooth.BluetoothHeadset mService -> mService
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    android.os.ParcelUuid[] UUIDS -> UUIDS
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get3(com.android.settingslib.bluetooth.HeadsetProfile) -> -get3
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    android.bluetooth.BluetoothHeadset -get4(com.android.settingslib.bluetooth.HeadsetProfile) -> -get4
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> <init>
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    boolean isConnectable() -> isConnectable
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.settingslib.bluetooth.HeadsetProfile) -> -get2
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean -set0(com.android.settingslib.bluetooth.HeadsetProfile,boolean) -> -set0
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    void finalize() -> finalize
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.HeadsetProfile) -> -get1
    android.bluetooth.BluetoothHeadset -set1(com.android.settingslib.bluetooth.HeadsetProfile,android.bluetooth.BluetoothHeadset) -> -set1
com.android.systemui.qs.CellTileView -> com.android.systemui.qs.CellTileView:
    com.android.systemui.statusbar.phone.SignalDrawable mSignalDrawable -> mSignalDrawable
    void <init>(android.content.Context) -> <init>
    void updateIcon(android.widget.ImageView,com.android.systemui.plugins.qs.QSTile$State) -> updateIcon
com.android.systemui.recents.views.RecentsView$2 -> com.android.systemui.recents.views.RecentsView$2:
    com.android.systemui.recents.views.RecentsView this$0 -> this$0
    com.android.systemui.recents.events.ui.dragndrop.DragEndEvent val$event -> val$event
    void <init>(com.android.systemui.recents.views.RecentsView,com.android.systemui.recents.events.ui.dragndrop.DragEndEvent) -> <init>
    void onAnimationStarted() -> onAnimationStarted
android.support.v7.view.menu.CascadingMenuPopup -> android.support.v7.view.menu.CascadingMenuPopup:
    int mRawDropDownGravity -> mRawDropDownGravity
    android.view.View mAnchorView -> mAnchorView
    android.content.Context mContext -> mContext
    int mYOffset -> mYOffset
    boolean mOverflowOnly -> mOverflowOnly
    android.view.View mShownAnchorView -> mShownAnchorView
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> mAttachStateChangeListener
    android.support.v7.widget.MenuItemHoverListener mMenuItemHoverListener -> mMenuItemHoverListener
    boolean mForceShowIcon -> mForceShowIcon
    int mMenuMaxWidth -> mMenuMaxWidth
    int mDropDownGravity -> mDropDownGravity
    boolean mShouldCloseImmediately -> mShouldCloseImmediately
    int mXOffset -> mXOffset
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    int mLastPosition -> mLastPosition
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    int mPopupStyleAttr -> mPopupStyleAttr
    boolean mHasYOffset -> mHasYOffset
    java.util.List mPendingMenus -> mPendingMenus
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> mGlobalLayoutListener
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    java.util.List mShowingMenus -> mShowingMenus
    int mPopupStyleRes -> mPopupStyleRes
    boolean mHasXOffset -> mHasXOffset
    android.os.Handler mSubMenuHoverHandler -> mSubMenuHoverHandler
    boolean mShowTitle -> mShowTitle
    android.view.ViewTreeObserver -get1(android.support.v7.view.menu.CascadingMenuPopup) -> -get1
    void setShowTitle(boolean) -> setShowTitle
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    void setForceShowIcon(boolean) -> setForceShowIcon
    void dismiss() -> dismiss
    android.widget.ListView getListView() -> getListView
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    int getNextMenuPosition(int) -> getNextMenuPosition
    void updateMenuView(boolean) -> updateMenuView
    void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    boolean isShowing() -> isShowing
    android.view.ViewTreeObserver -set0(android.support.v7.view.menu.CascadingMenuPopup,android.view.ViewTreeObserver) -> -set0
    void setAnchorView(android.view.View) -> setAnchorView
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setVerticalOffset(int) -> setVerticalOffset
    void setHorizontalOffset(int) -> setHorizontalOffset
    android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder) -> findParentViewForSubmenu
    void onDismiss() -> onDismiss
    android.support.v7.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    boolean flagActionItems() -> flagActionItems
    void show() -> show
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    void showMenu(android.support.v7.view.menu.MenuBuilder) -> showMenu
    int findIndexOfAddedMenu(android.support.v7.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    android.view.MenuItem findMenuItemForSubmenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    void setGravity(int) -> setGravity
    boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    int getInitialMenuPosition() -> getInitialMenuPosition
    android.view.ViewTreeObserver$OnGlobalLayoutListener -get0(android.support.v7.view.menu.CascadingMenuPopup) -> -get0
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.android.systemui.statusbar.phone.NotificationIconContainer -> com.android.systemui.statusbar.phone.NotificationIconContainer:
    com.android.systemui.statusbar.stack.AnimationProperties ADD_ICON_PROPERTIES -> ADD_ICON_PROPERTIES
    com.android.systemui.statusbar.stack.AnimationProperties DOT_ANIMATION_PROPERTIES -> DOT_ANIMATION_PROPERTIES
    com.android.systemui.statusbar.stack.AnimationProperties ICON_ANIMATION_PROPERTIES -> ICON_ANIMATION_PROPERTIES
    int mActualLayoutWidth -> mActualLayoutWidth
    float mActualPaddingEnd -> mActualPaddingEnd
    float mActualPaddingStart -> mActualPaddingStart
    int mAddAnimationStartIndex -> mAddAnimationStartIndex
    boolean mAnimationsEnabled -> mAnimationsEnabled
    int mCannedAnimationStartIndex -> mCannedAnimationStartIndex
    boolean mChangingViewPositions -> mChangingViewPositions
    boolean mDark -> mDark
    int mDarkOffsetX -> mDarkOffsetX
    boolean mDisallowNextAnimation -> mDisallowNextAnimation
    int mDotPadding -> mDotPadding
    int mIconSize -> mIconSize
    java.util.HashMap mIconStates -> mIconStates
    float mOpenedAmount -> mOpenedAmount
    android.support.v4.util.ArrayMap mReplacingIcons -> mReplacingIcons
    boolean mShowAllIcons -> mShowAllIcons
    int mSpeedBumpIndex -> mSpeedBumpIndex
    int mStaticDotRadius -> mStaticDotRadius
    boolean mVibrateOnAnimation -> mVibrateOnAnimation
    android.os.Vibrator mVibrator -> mVibrator
    float mVisualOverflowAdaption -> mVisualOverflowAdaption
    com.android.systemui.statusbar.stack.AnimationProperties sTempProperties -> sTempProperties
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void applyIconStates() -> applyIconStates
    void calculateIconTranslations() -> calculateIconTranslations
    int findFirstViewIndexAfter(float) -> findFirstViewIndexAfter
    float getActualPaddingEnd() -> getActualPaddingEnd
    float getActualPaddingStart() -> getActualPaddingStart
    int getActualWidth() -> getActualWidth
    int getIconSize() -> getIconSize
    com.android.systemui.statusbar.phone.NotificationIconContainer$IconState getIconState(com.android.systemui.statusbar.StatusBarIconView) -> getIconState
    float getLayoutEnd() -> getLayoutEnd
    float getVisualOverflowAdaption() -> getVisualOverflowAdaption
    boolean hasOverflow() -> hasOverflow
    void initDimens() -> initDimens
    boolean isReplacingIcon(android.view.View) -> isReplacingIcon
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onViewAdded(android.view.View) -> onViewAdded
    void onViewRemoved(android.view.View) -> onViewRemoved
    void resetViewStates() -> resetViewStates
    void setActualLayoutWidth(int) -> setActualLayoutWidth
    void setActualPaddingEnd(float) -> setActualPaddingEnd
    void setActualPaddingStart(float) -> setActualPaddingStart
    void setAnimationsEnabled(boolean) -> setAnimationsEnabled
    void setChangingViewPositions(boolean) -> setChangingViewPositions
    void setDark(boolean,boolean,long) -> setDark
    void setDarkOffsetX(int) -> setDarkOffsetX
    void setOpenedAmount(float) -> setOpenedAmount
    void setReplacingIcons(android.support.v4.util.ArrayMap) -> setReplacingIcons
    void setShowAllIcons(boolean) -> setShowAllIcons
    void setSpeedBumpIndex(int) -> setSpeedBumpIndex
    void setVibrateOnAnimation(boolean) -> setVibrateOnAnimation
    void setVisualOverflowAdaption(float) -> setVisualOverflowAdaption
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_phone_NotificationIconContainer_10028(com.android.systemui.statusbar.StatusBarIconView) -> lambda$-com_android_systemui_statusbar_phone_NotificationIconContainer_10028
    com.android.systemui.statusbar.stack.AnimationProperties -get0() -> -get0
    com.android.systemui.statusbar.stack.AnimationProperties -get1() -> -get1
    com.android.systemui.statusbar.stack.AnimationProperties -get2() -> -get2
    int -get3(com.android.systemui.statusbar.phone.NotificationIconContainer) -> -get3
    boolean -get4(com.android.systemui.statusbar.phone.NotificationIconContainer) -> -get4
    int -get5(com.android.systemui.statusbar.phone.NotificationIconContainer) -> -get5
    android.content.Context -get6(com.android.systemui.statusbar.phone.NotificationIconContainer) -> -get6
    boolean -get7(com.android.systemui.statusbar.phone.NotificationIconContainer) -> -get7
    boolean -get8(com.android.systemui.statusbar.phone.NotificationIconContainer) -> -get8
    android.os.Vibrator -get9(com.android.systemui.statusbar.phone.NotificationIconContainer) -> -get9
    com.android.systemui.statusbar.stack.AnimationProperties -get10() -> -get10
    int -set0(com.android.systemui.statusbar.phone.NotificationIconContainer,int) -> -set0
android.support.v7.widget.ScrollingTabContainerView$1 -> android.support.v7.widget.ScrollingTabContainerView$1:
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void <init>(android.support.v7.widget.ScrollingTabContainerView,android.view.View) -> <init>
    void run() -> run
com.android.systemui.recents.misc.ReferenceCountedTrigger$2 -> com.android.systemui.recents.misc.ReferenceCountedTrigger$2:
    com.android.systemui.recents.misc.ReferenceCountedTrigger this$0 -> this$0
    void <init>(com.android.systemui.recents.misc.ReferenceCountedTrigger) -> <init>
    void run() -> run
com.android.systemui.statusbar.NotificationSnooze -> com.android.systemui.statusbar.NotificationSnooze:
    android.metrics.LogMaker OPTIONS_CLOSE_LOG -> OPTIONS_CLOSE_LOG
    android.metrics.LogMaker OPTIONS_OPEN_LOG -> OPTIONS_OPEN_LOG
    android.metrics.LogMaker UNDO_LOG -> UNDO_LOG
    int mCollapsedHeight -> mCollapsedHeight
    com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption mDefaultOption -> mDefaultOption
    android.view.View mDivider -> mDivider
    android.animation.AnimatorSet mExpandAnimation -> mExpandAnimation
    android.widget.ImageView mExpandButton -> mExpandButton
    boolean mExpanded -> mExpanded
    com.android.systemui.statusbar.NotificationGuts mGutsContainer -> mGutsContainer
    com.android.internal.logging.MetricsLogger mMetricsLogger -> mMetricsLogger
    android.util.KeyValueListParser mParser -> mParser
    android.service.notification.StatusBarNotification mSbn -> mSbn
    com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption mSelectedOption -> mSelectedOption
    android.widget.TextView mSelectedOptionText -> mSelectedOptionText
    com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper mSnoozeListener -> mSnoozeListener
    android.view.ViewGroup mSnoozeOptionContainer -> mSnoozeOptionContainer
    java.util.List mSnoozeOptions -> mSnoozeOptions
    boolean mSnoozing -> mSnoozing
    android.widget.TextView mUndoButton -> mUndoButton
    int[] sAccessibilityActions -> sAccessibilityActions
    void setSnoozeListener(com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper) -> setSnoozeListener
    void setStatusBarNotification(android.service.notification.StatusBarNotification) -> setStatusBarNotification
    void setSnoozeOptions(java.util.List) -> setSnoozeOptions
    boolean isExpanded() -> isExpanded
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateSnoozeOptions(boolean) -> animateSnoozeOptions
    com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption createOption(int,int) -> createOption
    void createOptionViews() -> createOptionViews
    int getActualHeight() -> getActualHeight
    android.view.View getContentView() -> getContentView
    com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption getDefaultOption() -> getDefaultOption
    java.util.ArrayList getDefaultSnoozeOptions() -> getDefaultSnoozeOptions
    boolean handleCloseControls(boolean,boolean) -> handleCloseControls
    void hideSelectedOption() -> hideSelectedOption
    boolean isLeavebehind() -> isLeavebehind
    void logOptionSelection(int,com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption) -> logOptionSelection
    void onAttachedToWindow() -> onAttachedToWindow
    void onClick(android.view.View) -> onClick
    void onFinishInflate() -> onFinishInflate
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    int[] parseIntArray(java.lang.String,int[]) -> parseIntArray
    boolean performAccessibilityActionInternal(int,android.os.Bundle) -> performAccessibilityActionInternal
    void setGutsParent(com.android.systemui.statusbar.NotificationGuts) -> setGutsParent
    void setKeyValueListParser(android.util.KeyValueListParser) -> setKeyValueListParser
    void setSelected(com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption,boolean) -> setSelected
    void showSnoozeOptions(boolean) -> showSnoozeOptions
    void undoSnooze(android.view.View) -> undoSnooze
    boolean willBeRemoved() -> willBeRemoved
    void <clinit>() -> <clinit>
    java.lang.String -com_android_systemui_statusbar_NotificationSnooze-mthref-0(java.lang.String) -> -com_android_systemui_statusbar_NotificationSnooze-mthref-0
    int -com_android_systemui_statusbar_NotificationSnooze-mthref-1(java.lang.String) -> -com_android_systemui_statusbar_NotificationSnooze-mthref-1
    android.view.ViewGroup -get0(com.android.systemui.statusbar.NotificationSnooze) -> -get0
com.android.settingslib.wifi.WifiTracker$Scanner -> com.android.settingslib.wifi.WifiTracker$Scanner:
    int mRetry -> mRetry
    com.android.settingslib.wifi.WifiTracker this$0 -> this$0
    boolean isScanning() -> isScanning
    void resume() -> resume
    void handleMessage(android.os.Message) -> handleMessage
    void pause() -> pause
    void <init>(com.android.settingslib.wifi.WifiTracker) -> <init>
com.android.systemui.doze.-$Lambda$Pm-oMEZzS1-hcTDyMO0UqLPF_kM$1 -> com.android.systemui.doze.-$Lambda$Pm-oMEZzS1-hcTDyMO0UqLPF_kM$1:
    com.android.systemui.doze.-$Lambda$Pm-oMEZzS1-hcTDyMO0UqLPF_kM$1 $INST$0 -> $INST$0
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    int $m$0(java.lang.Object) -> $m$0
    int applyAsInt(java.lang.Object) -> applyAsInt
com.android.systemui.qs.car.CarStatusBarHeader -> com.android.systemui.qs.car.CarStatusBarHeader:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void applyDarkness(int,android.graphics.Rect,float,int) -> applyDarkness
    void onFinishInflate() -> onFinishInflate
com.android.systemui.classifier.PointerCountEvaluator -> com.android.systemui.classifier.PointerCountEvaluator:
    float evaluate(int) -> evaluate
    void <init>() -> <init>
com.android.systemui.plugins.R -> com.android.systemui.plugins.R:
    void <init>() -> <init>
com.android.systemui.stackdivider.Divider$1 -> com.android.systemui.stackdivider.Divider$1:
    com.android.systemui.stackdivider.Divider this$0 -> this$0
    boolean val$visible -> val$visible
    void <init>(com.android.systemui.stackdivider.Divider,boolean) -> <init>
    void run() -> run
android.support.v7.media.RemoteControlClientCompat$PlaybackInfo -> android.support.v7.media.RemoteControlClientCompat$PlaybackInfo:
    int volumeMax -> volumeMax
    int playbackStream -> playbackStream
    int volume -> volume
    int volumeHandling -> volumeHandling
    int playbackType -> playbackType
    void <init>() -> <init>
android.support.v7.widget.helper.ItemTouchUIUtil -> android.support.v7.widget.helper.ItemTouchUIUtil:
    void clearView(android.view.View) -> clearView
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    void onSelected(android.view.View) -> onSelected
com.android.systemui.egg.MLand$Building -> com.android.systemui.egg.MLand$Building:
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context) -> <init>
com.android.systemui.recents.events.EventBus$5 -> com.android.systemui.recents.events.EventBus$5:
    com.android.systemui.recents.events.EventBus this$0 -> this$0
    com.android.systemui.recents.events.EventBus$Event val$event -> val$event
    void <init>(com.android.systemui.recents.events.EventBus,com.android.systemui.recents.events.EventBus$Event) -> <init>
    void run() -> run
com.android.systemui.qs.QSFooterImpl$2 -> com.android.systemui.qs.QSFooterImpl$2:
    com.android.systemui.qs.QSFooterImpl this$0 -> this$0
    void <init>(com.android.systemui.qs.QSFooterImpl) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.systemui.qs.QSSecurityFooter -> com.android.systemui.qs.QSSecurityFooter:
    boolean DEBUG -> DEBUG
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    com.android.systemui.qs.QSSecurityFooter$Callback mCallback -> mCallback
    android.content.Context mContext -> mContext
    android.app.AlertDialog mDialog -> mDialog
    android.view.View mDivider -> mDivider
    android.widget.ImageView mFooterIcon -> mFooterIcon
    int mFooterIconId -> mFooterIconId
    android.widget.TextView mFooterText -> mFooterText
    java.lang.CharSequence mFooterTextContent -> mFooterTextContent
    com.android.systemui.qs.QSSecurityFooter$H mHandler -> mHandler
    com.android.systemui.qs.QSTileHost mHost -> mHost
    boolean mIsVisible -> mIsVisible
    android.os.Handler mMainHandler -> mMainHandler
    android.view.View mRootView -> mRootView
    com.android.systemui.statusbar.policy.SecurityController mSecurityController -> mSecurityController
    android.os.UserManager mUm -> mUm
    java.lang.Runnable mUpdateDisplayState -> mUpdateDisplayState
    java.lang.Runnable mUpdateIcon -> mUpdateIcon
    android.view.View getView() -> getView
    void <init>(com.android.systemui.qs.QSPanel,android.content.Context) -> <init>
    void configSubtitleVisibility(boolean,boolean,boolean,boolean,android.view.View) -> configSubtitleVisibility
    void createDialog() -> createDialog
    java.lang.CharSequence getCaCertsMessage(boolean,boolean,boolean) -> getCaCertsMessage
    java.lang.CharSequence getFooterText(boolean,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.CharSequence) -> getFooterText
    java.lang.CharSequence getManagementMessage(boolean,java.lang.CharSequence) -> getManagementMessage
    java.lang.CharSequence getNetworkLoggingMessage(boolean) -> getNetworkLoggingMessage
    java.lang.String getPositiveButton() -> getPositiveButton
    java.lang.String getSettingsButton() -> getSettingsButton
    java.lang.CharSequence getVpnMessage(boolean,boolean,java.lang.String,java.lang.String) -> getVpnMessage
    void handleClick() -> handleClick
    void handleRefreshState() -> handleRefreshState
    void onClick(android.view.View) -> onClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void onConfigurationChanged() -> onConfigurationChanged
    void refreshState() -> refreshState
    void setHostEnvironment(com.android.systemui.qs.QSTileHost) -> setHostEnvironment
    void setListening(boolean) -> setListening
    void showDeviceMonitoringDialog() -> showDeviceMonitoringDialog
    void <clinit>() -> <clinit>
    com.android.systemui.plugins.ActivityStarter -get0(com.android.systemui.qs.QSSecurityFooter) -> -get0
    android.app.AlertDialog -get1(com.android.systemui.qs.QSSecurityFooter) -> -get1
    android.view.View -get2(com.android.systemui.qs.QSSecurityFooter) -> -get2
    android.widget.ImageView -get3(com.android.systemui.qs.QSSecurityFooter) -> -get3
    int -get4(com.android.systemui.qs.QSSecurityFooter) -> -get4
    android.widget.TextView -get5(com.android.systemui.qs.QSSecurityFooter) -> -get5
    java.lang.CharSequence -get6(com.android.systemui.qs.QSSecurityFooter) -> -get6
    com.android.systemui.qs.QSTileHost -get7(com.android.systemui.qs.QSSecurityFooter) -> -get7
    boolean -get8(com.android.systemui.qs.QSSecurityFooter) -> -get8
    android.view.View -get9(com.android.systemui.qs.QSSecurityFooter) -> -get9
    void -wrap0(com.android.systemui.qs.QSSecurityFooter) -> -wrap0
    void -wrap1(com.android.systemui.qs.QSSecurityFooter) -> -wrap1
android.support.v7.widget.OrientationHelper -> android.support.v7.widget.OrientationHelper:
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> mLayoutManager
    android.graphics.Rect mTmpRect -> mTmpRect
    int mLastTotalSpace -> mLastTotalSpace
    int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    int getMode() -> getMode
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper) -> <init>
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getTotalSpace() -> getTotalSpace
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getStartAfterPadding() -> getStartAfterPadding
    int getEnd() -> getEnd
    int getModeInOther() -> getModeInOther
    android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    int getEndPadding() -> getEndPadding
    android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    int getTotalSpaceChange() -> getTotalSpaceChange
    int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    int getEndAfterPadding() -> getEndAfterPadding
    void offsetChildren(int) -> offsetChildren
    void onLayoutComplete() -> onLayoutComplete
android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14 -> android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14:
    android.support.v7.app.AppCompatDelegateImplV14 this$0 -> this$0
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
    void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.view.Window$Callback) -> <init>
com.android.systemui.statusbar.phone.HeadsUpTouchHelper -> com.android.systemui.statusbar.phone.HeadsUpTouchHelper:
    boolean mCollapseSnoozes -> mCollapseSnoozes
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    com.android.systemui.statusbar.phone.NotificationPanelView mPanel -> mPanel
    com.android.systemui.statusbar.ExpandableNotificationRow mPickedChild -> mPickedChild
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mStackScroller -> mStackScroller
    float mTouchSlop -> mTouchSlop
    boolean mTouchingHeadsUpView -> mTouchingHeadsUpView
    boolean mTrackingHeadsUp -> mTrackingHeadsUp
    int mTrackingPointer -> mTrackingPointer
    void <init>(com.android.systemui.statusbar.policy.HeadsUpManager,com.android.systemui.statusbar.stack.NotificationStackScrollLayout,com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void endMotion() -> endMotion
    boolean isTrackingHeadsUp() -> isTrackingHeadsUp
    void notifyFling(boolean) -> notifyFling
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTrackingHeadsUp(boolean) -> setTrackingHeadsUp
com.android.systemui.plugins.R$plurals -> com.android.systemui.plugins.R$plurals:
    int kg_password_default_pin_message -> kg_password_default_pin_message
    int kg_password_default_puk_message -> kg_password_default_puk_message
    int kg_password_wrong_pin_code -> kg_password_wrong_pin_code
    int kg_password_wrong_puk_code -> kg_password_wrong_puk_code
    int kg_prompt_reason_time_password -> kg_prompt_reason_time_password
    int kg_prompt_reason_time_pattern -> kg_prompt_reason_time_pattern
    int kg_prompt_reason_time_pin -> kg_prompt_reason_time_pin
    int notification_channels_list_desc_2_and_others -> notification_channels_list_desc_2_and_others
    int notification_group_overflow_description -> notification_group_overflow_description
    int notification_num_channels_desc -> notification_num_channels_desc
    int snoozeHourOptions -> snoozeHourOptions
    int snoozeMinuteOptions -> snoozeMinuteOptions
    int status_bar_accessibility_recent_apps -> status_bar_accessibility_recent_apps
    void <init>() -> <init>
com.android.systemui.doze.AlwaysOnDisplayPolicy -> com.android.systemui.doze.AlwaysOnDisplayPolicy:
    int[] dimmingScrimArray -> dimmingScrimArray
    android.content.Context mContext -> mContext
    android.util.KeyValueListParser mParser -> mParser
    com.android.systemui.doze.AlwaysOnDisplayPolicy$SettingsObserver mSettingsObserver -> mSettingsObserver
    long proxCooldownPeriodMs -> proxCooldownPeriodMs
    long proxCooldownTriggerMs -> proxCooldownTriggerMs
    long proxScreenOffDelayMs -> proxScreenOffDelayMs
    int[] screenBrightnessArray -> screenBrightnessArray
    void <init>(android.content.Context) -> <init>
    int[] parseIntArray(java.lang.String,int[]) -> parseIntArray
    java.lang.String -com_android_systemui_doze_AlwaysOnDisplayPolicy-mthref-0(java.lang.String) -> -com_android_systemui_doze_AlwaysOnDisplayPolicy-mthref-0
    int -com_android_systemui_doze_AlwaysOnDisplayPolicy-mthref-1(java.lang.String) -> -com_android_systemui_doze_AlwaysOnDisplayPolicy-mthref-1
    android.content.Context -get0(com.android.systemui.doze.AlwaysOnDisplayPolicy) -> -get0
    android.util.KeyValueListParser -get1(com.android.systemui.doze.AlwaysOnDisplayPolicy) -> -get1
    int[] -wrap0(com.android.systemui.doze.AlwaysOnDisplayPolicy,java.lang.String,int[]) -> -wrap0
android.support.v7.preference.SeekBarPreference$2 -> android.support.v7.preference.SeekBarPreference$2:
    android.support.v7.preference.SeekBarPreference this$0 -> this$0
    void <init>(android.support.v7.preference.SeekBarPreference) -> <init>
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.android.settingslib.Utils -> com.android.settingslib.Utils:
    int[] WIFI_PIE_FOR_BADGING -> WIFI_PIE_FOR_BADGING
    java.lang.String sPermissionControllerPackageName -> sPermissionControllerPackageName
    android.content.pm.Signature[] sSystemSignature -> sSystemSignature
    java.lang.String sSharedSystemSharedLibPackageName -> sSharedSystemSharedLibPackageName
    java.lang.String sServicesSystemSharedLibPackageName -> sServicesSystemSharedLibPackageName
    int getDefaultColor(android.content.Context,int) -> getDefaultColor
    boolean isDeviceProvisioningPackage(android.content.res.Resources,java.lang.String) -> isDeviceProvisioningPackage
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    int getDisabled(android.content.Context,int) -> getDisabled
    int applyAlpha(float,int) -> applyAlpha
    java.lang.String formatPercentage(double) -> formatPercentage
    int getThemeAttr(android.content.Context,int) -> getThemeAttr
    int applyAlphaAttr(android.content.Context,int,int) -> applyAlphaAttr
    android.content.pm.Signature getFirstSignature(android.content.pm.PackageInfo) -> getFirstSignature
    boolean isSystemPackage(android.content.res.Resources,android.content.pm.PackageManager,android.content.pm.PackageInfo) -> isSystemPackage
    int getColorError(android.content.Context) -> getColorError
    java.lang.String formatPercentage(int) -> formatPercentage
    void <clinit>() -> <clinit>
    int getColorAttr(android.content.Context,int) -> getColorAttr
    void <init>() -> <init>
    int getColorAccent(android.content.Context) -> getColorAccent
    android.content.pm.Signature getSystemSignature(android.content.pm.PackageManager) -> getSystemSignature
android.support.v7.view.ActionBarPolicy -> android.support.v7.view.ActionBarPolicy:
    android.content.Context mContext -> mContext
    int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    boolean showsOverflowMenuButton() -> showsOverflowMenuButton
    void <init>(android.content.Context) -> <init>
    int getMaxActionButtons() -> getMaxActionButtons
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    int getTabContainerHeight() -> getTabContainerHeight
    android.support.v7.view.ActionBarPolicy get(android.content.Context) -> get
    int getStackedTabMaxWidth() -> getStackedTabMaxWidth
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    void <init>() -> <init>
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.AutoSizeableTextView -> android.support.v4.widget.AutoSizeableTextView:
    boolean PLATFORM_SUPPORTS_AUTOSIZE -> PLATFORM_SUPPORTS_AUTOSIZE
    void <clinit>() -> <clinit>
com.android.systemui.stackdivider.WindowManagerProxy$7 -> com.android.systemui.stackdivider.WindowManagerProxy$7:
    com.android.systemui.stackdivider.WindowManagerProxy this$0 -> this$0
    boolean val$resizing -> val$resizing
    void <init>(com.android.systemui.stackdivider.WindowManagerProxy,boolean) -> <init>
    void run() -> run
com.android.systemui.qs.tiles.HotspotTile -> com.android.systemui.qs.tiles.HotspotTile:
    android.content.Intent TETHER_SETTINGS -> TETHER_SETTINGS
    com.android.systemui.qs.GlobalSetting mAirplaneMode -> mAirplaneMode
    com.android.systemui.qs.tiles.HotspotTile$Callback mCallback -> mCallback
    com.android.systemui.statusbar.policy.HotspotController mController -> mController
    com.android.systemui.plugins.qs.QSTile$Icon mEnabledStatic -> mEnabledStatic
    boolean mListening -> mListening
    com.android.systemui.plugins.qs.QSTile$Icon mUnavailable -> mUnavailable
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleDestroy() -> handleDestroy
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$AirplaneBooleanState,java.lang.Object) -> handleUpdateState
    boolean isAvailable() -> isAvailable
    com.android.systemui.plugins.qs.QSTile$AirplaneBooleanState newTileState() -> newTileState
    void <clinit>() -> <clinit>
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    void -wrap0(com.android.systemui.qs.tiles.HotspotTile,java.lang.Object) -> -wrap0
com.android.keyguard.KeyguardUpdateMonitor$1 -> com.android.keyguard.KeyguardUpdateMonitor$1:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.recents.model.TaskGrouping -> com.android.systemui.recents.model.TaskGrouping:
    int affiliation -> affiliation
    java.util.ArrayList mTaskKeys -> mTaskKeys
    long latestActiveTimeInGroup -> latestActiveTimeInGroup
    com.android.systemui.recents.model.Task$TaskKey mFrontMostTaskKey -> mFrontMostTaskKey
    android.util.ArrayMap mTaskKeyIndices -> mTaskKeyIndices
    boolean isFrontMostTask(com.android.systemui.recents.model.Task) -> isFrontMostTask
    void removeTask(com.android.systemui.recents.model.Task) -> removeTask
    int getTaskCount() -> getTaskCount
    void <init>(int) -> <init>
    void addTask(com.android.systemui.recents.model.Task) -> addTask
    com.android.systemui.recents.model.Task$TaskKey getNextTaskInGroup(com.android.systemui.recents.model.Task) -> getNextTaskInGroup
    com.android.systemui.recents.model.Task$TaskKey getPrevTaskInGroup(com.android.systemui.recents.model.Task) -> getPrevTaskInGroup
    int indexOf(com.android.systemui.recents.model.Task) -> indexOf
    boolean isTaskAboveTask(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task) -> isTaskAboveTask
    void updateTaskIndices() -> updateTaskIndices
android.support.v17.leanback.widget.ShadowHelper$ShadowHelperApi21Impl -> android.support.v17.leanback.widget.ShadowHelper$ShadowHelperApi21Impl:
    void <init>() -> <init>
    void setZ(android.view.View,float) -> setZ
android.support.v4.view.ViewParentCompat$ViewParentCompatBaseImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatBaseImpl:
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void <init>() -> <init>
android.support.v17.leanback.widget.TitleView -> android.support.v17.leanback.widget.TitleView:
    android.support.v17.leanback.widget.SearchOrbView mSearchOrbView -> mSearchOrbView
    android.widget.TextView mTextView -> mTextView
    int flags -> flags
    boolean mHasSearchListener -> mHasSearchListener
    android.widget.ImageView mBadgeView -> mBadgeView
    android.support.v17.leanback.widget.TitleViewAdapter mTitleViewAdapter -> mTitleViewAdapter
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
com.android.systemui.statusbar.stack.ViewState$7 -> com.android.systemui.statusbar.stack.ViewState$7:
    com.android.systemui.statusbar.stack.ViewState this$0 -> this$0
    android.view.View val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ViewState,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.tileimpl.QSTileImpl$ResourceIcon -> com.android.systemui.qs.tileimpl.QSTileImpl$ResourceIcon:
    android.util.SparseArray ICONS -> ICONS
    int mResId -> mResId
    com.android.systemui.plugins.qs.QSTile$Icon get(int) -> get
    void <init>(int) -> <init>
    boolean equals(java.lang.Object) -> equals
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
    android.graphics.drawable.Drawable getInvisibleDrawable(android.content.Context) -> getInvisibleDrawable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void <init>(int,com.android.systemui.qs.tileimpl.QSTileImpl$ResourceIcon) -> <init>
android.support.v7.app.OverlayListView$OverlayObject$OnAnimationEndListener -> android.support.v7.app.OverlayListView$OverlayObject$OnAnimationEndListener:
    void onAnimationEnd() -> onAnimationEnd
android.support.v7.app.AppCompatDelegateImplV9$3 -> android.support.v7.app.AppCompatDelegateImplV9$3:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
android.support.v4.media.MediaBrowserCompat -> android.support.v4.media.MediaBrowserCompat:
    boolean DEBUG -> DEBUG
    void <clinit>() -> <clinit>
com.android.systemui.ExpandHelper$1 -> com.android.systemui.ExpandHelper$1:
    com.android.systemui.ExpandHelper this$0 -> this$0
    void <init>(com.android.systemui.ExpandHelper) -> <init>
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.android.systemui.statusbar.phone.NotificationGroupManager$NotificationGroup -> com.android.systemui.statusbar.phone.NotificationGroupManager$NotificationGroup:
    java.util.HashMap children -> children
    boolean expanded -> expanded
    com.android.systemui.statusbar.NotificationData$Entry summary -> summary
    boolean suppressed -> suppressed
    void <init>() -> <init>
    java.lang.String toString() -> toString
android.support.v7.preference.R$id -> android.support.v7.preference.R$id:
    int icon_frame -> icon_frame
    int seekbar -> seekbar
    int seekbar_value -> seekbar_value
    int spinner -> spinner
    int switchWidget -> switchWidget
    void <init>() -> <init>
com.android.systemui.statusbar.phone.NavigationBarView$H -> com.android.systemui.statusbar.phone.NavigationBarView$H:
    com.android.systemui.statusbar.phone.NavigationBarView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NavigationBarView) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.android.systemui.statusbar.phone.NavigationBarView,com.android.systemui.statusbar.phone.NavigationBarView$H) -> <init>
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
android.support.v7.widget.ContentFrameLayout$OnAttachListener -> android.support.v7.widget.ContentFrameLayout$OnAttachListener:
    void onAttachedFromWindow() -> onAttachedFromWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.systemui.tuner.AutoScrollView -> com.android.systemui.tuner.AutoScrollView:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onDragEvent(android.view.DragEvent) -> onDragEvent
com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo$2 -> com.android.systemui.qs.-$Lambda$yaoR1TZhpvmB69r6KNAfnBOaAZo$2:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.View,int,int,int,int,int,int,int,int) -> $m$0
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.systemui.stackdivider.WindowManagerProxy$6 -> com.android.systemui.stackdivider.WindowManagerProxy$6:
    com.android.systemui.stackdivider.WindowManagerProxy this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.WindowManagerProxy) -> <init>
    void run() -> run
android.support.v7.graphics.Target -> android.support.v7.graphics.Target:
    android.support.v7.graphics.Target LIGHT_VIBRANT -> LIGHT_VIBRANT
    android.support.v7.graphics.Target DARK_MUTED -> DARK_MUTED
    android.support.v7.graphics.Target LIGHT_MUTED -> LIGHT_MUTED
    boolean mIsExclusive -> mIsExclusive
    android.support.v7.graphics.Target DARK_VIBRANT -> DARK_VIBRANT
    float[] mWeights -> mWeights
    float[] mSaturationTargets -> mSaturationTargets
    android.support.v7.graphics.Target MUTED -> MUTED
    float[] mLightnessTargets -> mLightnessTargets
    android.support.v7.graphics.Target VIBRANT -> VIBRANT
    void setDefaultNormalLightnessValues(android.support.v7.graphics.Target) -> setDefaultNormalLightnessValues
    float getMinimumLightness() -> getMinimumLightness
    float getMinimumSaturation() -> getMinimumSaturation
    float getMaximumLightness() -> getMaximumLightness
    void setDefaultWeights() -> setDefaultWeights
    void normalizeWeights() -> normalizeWeights
    float getLightnessWeight() -> getLightnessWeight
    float getTargetSaturation() -> getTargetSaturation
    void setDefaultLightLightnessValues(android.support.v7.graphics.Target) -> setDefaultLightLightnessValues
    float getSaturationWeight() -> getSaturationWeight
    void setDefaultMutedSaturationValues(android.support.v7.graphics.Target) -> setDefaultMutedSaturationValues
    float getMaximumSaturation() -> getMaximumSaturation
    void setDefaultVibrantSaturationValues(android.support.v7.graphics.Target) -> setDefaultVibrantSaturationValues
    float getTargetLightness() -> getTargetLightness
    float getPopulationWeight() -> getPopulationWeight
    void <clinit>() -> <clinit>
    void setTargetDefaultValues(float[]) -> setTargetDefaultValues
    boolean isExclusive() -> isExclusive
    void setDefaultDarkLightnessValues(android.support.v7.graphics.Target) -> setDefaultDarkLightnessValues
    void <init>() -> <init>
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    void <init>() -> <init>
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
com.android.systemui.stackdivider.DividerView$5 -> com.android.systemui.stackdivider.DividerView$5:
    boolean mCancelled -> mCancelled
    com.android.systemui.stackdivider.DividerView this$0 -> this$0
    long val$endDelay -> val$endDelay
    java.lang.Runnable val$notCancelledEndAction -> val$notCancelledEndAction
    java.lang.Runnable val$endAction -> val$endAction
    void <init>(com.android.systemui.stackdivider.DividerView,long,java.lang.Runnable,java.lang.Runnable) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.media.MediaRouteDiscoveryRequest -> android.support.v7.media.MediaRouteDiscoveryRequest:
    android.os.Bundle mBundle -> mBundle
    android.support.v7.media.MediaRouteSelector mSelector -> mSelector
    android.support.v7.media.MediaRouteSelector getSelector() -> getSelector
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isActiveScan() -> isActiveScan
    android.os.Bundle asBundle() -> asBundle
    void ensureSelector() -> ensureSelector
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    void <init>(android.support.v7.media.MediaRouteSelector,boolean) -> <init>
android.support.v17.leanback.widget.WindowAlignment -> android.support.v17.leanback.widget.WindowAlignment:
    android.support.v17.leanback.widget.WindowAlignment$Axis vertical -> vertical
    android.support.v17.leanback.widget.WindowAlignment$Axis mMainAxis -> mMainAxis
    int mOrientation -> mOrientation
    android.support.v17.leanback.widget.WindowAlignment$Axis horizontal -> horizontal
    android.support.v17.leanback.widget.WindowAlignment$Axis mSecondAxis -> mSecondAxis
    android.support.v17.leanback.widget.WindowAlignment$Axis mainAxis() -> mainAxis
    void setOrientation(int) -> setOrientation
    android.support.v17.leanback.widget.WindowAlignment$Axis secondAxis() -> secondAxis
    java.lang.String toString() -> toString
    void reset() -> reset
    void <init>() -> <init>
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$5$1 -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$5$1:
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView$5 this$1 -> this$1
    boolean val$launched -> val$launched
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView$5,boolean) -> <init>
    void run() -> run
android.support.v14.preference.MultiSelectListPreference -> android.support.v14.preference.MultiSelectListPreference:
    java.lang.CharSequence[] mEntries -> mEntries
    java.lang.CharSequence[] mEntryValues -> mEntryValues
    java.util.Set mValues -> mValues
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    java.lang.CharSequence[] getEntryValues() -> getEntryValues
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setValues(java.util.Set) -> setValues
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    java.util.Set getValues() -> getValues
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    java.lang.CharSequence[] getEntries() -> getEntries
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.android.systemui.statusbar.policy.KeyButtonDrawable -> com.android.systemui.statusbar.policy.KeyButtonDrawable:
    boolean mHasDarkDrawable -> mHasDarkDrawable
    void <init>(android.graphics.drawable.Drawable[]) -> <init>
    com.android.systemui.statusbar.policy.KeyButtonDrawable create(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> create
    void setDarkIntensity(float) -> setDarkIntensity
com.android.systemui.statusbar.phone.StatusBar$38 -> com.android.systemui.statusbar.phone.StatusBar$38:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    com.android.systemui.plugins.ActivityStarter$Callback val$callback -> val$callback
    void <init>(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.plugins.ActivityStarter$Callback) -> <init>
    void run() -> run
com.android.systemui.statusbar.stack.NotificationStackScrollLayout -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout:
    android.util.Property BACKGROUND_FADE -> BACKGROUND_FADE
    boolean mActivateNeedsAnimation -> mActivateNeedsAnimation
    int mActivePointerId -> mActivePointerId
    java.util.ArrayList mAddedHeadsUpChildren -> mAddedHeadsUpChildren
    com.android.systemui.statusbar.stack.AmbientState mAmbientState -> mAmbientState
    boolean mAnimateNextBackgroundBottom -> mAnimateNextBackgroundBottom
    boolean mAnimateNextBackgroundTop -> mAnimateNextBackgroundTop
    java.lang.Runnable mAnimateScroll -> mAnimateScroll
    java.util.ArrayList mAnimationEvents -> mAnimationEvents
    java.util.HashSet mAnimationFinishedRunnables -> mAnimationFinishedRunnables
    boolean mAnimationRunning -> mAnimationRunning
    boolean mAnimationsEnabled -> mAnimationsEnabled
    android.graphics.Rect mBackgroundBounds -> mBackgroundBounds
    float mBackgroundFadeAmount -> mBackgroundFadeAmount
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    boolean mBackwardScrollable -> mBackwardScrollable
    int mBgColor -> mBgColor
    android.animation.ObjectAnimator mBottomAnimator -> mBottomAnimator
    int mBottomInset -> mBottomInset
    int mBottomMargin -> mBottomMargin
    int mCachedBackgroundColor -> mCachedBackgroundColor
    boolean mChangePositionInProgress -> mChangePositionInProgress
    boolean mCheckForLeavebehind -> mCheckForLeavebehind
    boolean mChildTransferInProgress -> mChildTransferInProgress
    java.util.ArrayList mChildrenChangingPositions -> mChildrenChangingPositions
    java.util.HashSet mChildrenToAddAnimated -> mChildrenToAddAnimated
    java.util.ArrayList mChildrenToRemoveAnimated -> mChildrenToRemoveAnimated
    boolean mChildrenUpdateRequested -> mChildrenUpdateRequested
    android.view.ViewTreeObserver$OnPreDrawListener mChildrenUpdater -> mChildrenUpdater
    java.util.HashSet mClearOverlayViewsWhenFinished -> mClearOverlayViewsWhenFinished
    android.graphics.Rect mClipRect -> mClipRect
    int mCollapsedSize -> mCollapsedSize
    int mContentHeight -> mContentHeight
    boolean mContinuousShadowUpdate -> mContinuousShadowUpdate
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin mCurrMenuRow -> mCurrMenuRow
    android.graphics.Rect mCurrentBounds -> mCurrentBounds
    int mCurrentStackHeight -> mCurrentStackHeight
    com.android.systemui.statusbar.stack.StackScrollState mCurrentStackScrollState -> mCurrentStackScrollState
    int mDarkAnimationOriginIndex -> mDarkAnimationOriginIndex
    boolean mDarkNeedsAnimation -> mDarkNeedsAnimation
    float mDimAmount -> mDimAmount
    android.animation.ValueAnimator mDimAnimator -> mDimAnimator
    android.animation.Animator$AnimatorListener mDimEndListener -> mDimEndListener
    android.animation.ValueAnimator$AnimatorUpdateListener mDimUpdateListener -> mDimUpdateListener
    boolean mDimmedNeedsAnimation -> mDimmedNeedsAnimation
    boolean mDisallowDismissInThisMotion -> mDisallowDismissInThisMotion
    boolean mDisallowScrollingInThisMotion -> mDisallowScrollingInThisMotion
    boolean mDismissAllInProgress -> mDismissAllInProgress
    com.android.systemui.statusbar.DismissView mDismissView -> mDismissView
    boolean mDontClampNextScroll -> mDontClampNextScroll
    boolean mDontReportNextOverScroll -> mDontReportNextOverScroll
    int mDownX -> mDownX
    java.util.ArrayList mDragAnimPendingChildren -> mDragAnimPendingChildren
    boolean mDrawBackgroundAsSrc -> mDrawBackgroundAsSrc
    com.android.systemui.statusbar.EmptyShadeView mEmptyShadeView -> mEmptyShadeView
    android.graphics.Rect mEndAnimationRect -> mEndAnimationRect
    boolean mEverythingNeedsAnimation -> mEverythingNeedsAnimation
    com.android.systemui.ExpandHelper mExpandHelper -> mExpandHelper
    android.view.View mExpandedGroupView -> mExpandedGroupView
    float mExpandedHeight -> mExpandedHeight
    boolean mExpandedInThisMotion -> mExpandedInThisMotion
    boolean mExpandingNotification -> mExpandingNotification
    boolean mFadeNotificationsOnDismiss -> mFadeNotificationsOnDismiss
    boolean mFadingOut -> mFadingOut
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    java.lang.Runnable mFinishScrollingCallback -> mFinishScrollingCallback
    com.android.systemui.statusbar.ActivatableNotificationView mFirstVisibleBackgroundChild -> mFirstVisibleBackgroundChild
    boolean mForceNoOverlappingRendering -> mForceNoOverlappingRendering
    android.view.View mForcedScroll -> mForcedScroll
    boolean mForwardScrollable -> mForwardScrollable
    java.util.HashSet mFromMoreCardAdditions -> mFromMoreCardAdditions
    boolean mGenerateChildOrderChangedEvent -> mGenerateChildOrderChangedEvent
    long mGoToFullShadeDelay -> mGoToFullShadeDelay
    boolean mGoToFullShadeNeedsAnimation -> mGoToFullShadeNeedsAnimation
    boolean mGroupExpandedForMeasure -> mGroupExpandedForMeasure
    com.android.systemui.statusbar.phone.NotificationGroupManager mGroupManager -> mGroupManager
    boolean mHeadsUpAnimatingAway -> mHeadsUpAnimatingAway
    java.util.HashSet mHeadsUpChangeAnimations -> mHeadsUpChangeAnimations
    boolean mHeadsUpGoingAwayAnimationsAllowed -> mHeadsUpGoingAwayAnimationsAllowed
    com.android.systemui.statusbar.policy.HeadsUpManager mHeadsUpManager -> mHeadsUpManager
    boolean mHideSensitiveNeedsAnimation -> mHideSensitiveNeedsAnimation
    boolean mInHeadsUpPinnedMode -> mInHeadsUpPinnedMode
    int mIncreasedPaddingBetweenElements -> mIncreasedPaddingBetweenElements
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    int mIntrinsicPadding -> mIntrinsicPadding
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsClipped -> mIsClipped
    boolean mIsExpanded -> mIsExpanded
    boolean mIsExpansionChanging -> mIsExpansionChanging
    int mLastMotionY -> mLastMotionY
    com.android.systemui.statusbar.ActivatableNotificationView mLastVisibleBackgroundChild -> mLastVisibleBackgroundChild
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnChildLocationsChangedListener mListener -> mListener
    com.android.systemui.SwipeHelper$LongPressListener mLongPressListener -> mLongPressListener
    int mMaxDisplayedNotifications -> mMaxDisplayedNotifications
    int mMaxLayoutHeight -> mMaxLayoutHeight
    float mMaxOverScroll -> mMaxOverScroll
    int mMaxScrollAfterExpand -> mMaxScrollAfterExpand
    int mMaximumVelocity -> mMaximumVelocity
    android.view.View mMenuExposedView -> mMenuExposedView
    int mMinInteractionHeight -> mMinInteractionHeight
    float mMinTopOverScrollToEscape -> mMinTopOverScrollToEscape
    int mMinimumVelocity -> mMinimumVelocity
    boolean mNeedViewResizeAnimation -> mNeedViewResizeAnimation
    boolean mNeedsAnimation -> mNeedsAnimation
    boolean mNoAmbient -> mNoAmbient
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnEmptySpaceClickListener mOnEmptySpaceClickListener -> mOnEmptySpaceClickListener
    com.android.systemui.statusbar.ExpandableView$OnHeightChangedListener mOnHeightChangedListener -> mOnHeightChangedListener
    boolean mOnlyScrollingInThisMotion -> mOnlyScrollingInThisMotion
    float mOverScrolledBottomPixels -> mOverScrolledBottomPixels
    float mOverScrolledTopPixels -> mOverScrolledTopPixels
    int mOverflingDistance -> mOverflingDistance
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnOverscrollTopChangedListener mOverscrollTopChangedListener -> mOverscrollTopChangedListener
    int mOwnScrollY -> mOwnScrollY
    int mPaddingBetweenElements -> mPaddingBetweenElements
    boolean mPanelTracking -> mPanelTracking
    boolean mParentNotFullyVisible -> mParentNotFullyVisible
    java.util.Collection mPulsing -> mPulsing
    android.view.ViewGroup mQsContainer -> mQsContainer
    boolean mQsExpanded -> mQsExpanded
    java.lang.Runnable mReclamp -> mReclamp
    android.graphics.Rect mRequestedClipBounds -> mRequestedClipBounds
    android.view.ViewTreeObserver$OnPreDrawListener mRunningAnimationUpdater -> mRunningAnimationUpdater
    com.android.systemui.statusbar.phone.ScrimController mScrimController -> mScrimController
    boolean mScrollable -> mScrollable
    boolean mScrolledToTopOnFirstDown -> mScrolledToTopOnFirstDown
    android.widget.OverScroller mScroller -> mScroller
    boolean mScrollingEnabled -> mScrollingEnabled
    android.view.ViewTreeObserver$OnPreDrawListener mShadowUpdater -> mShadowUpdater
    com.android.systemui.statusbar.NotificationShelf mShelf -> mShelf
    boolean mShouldDrawNotificationBackground -> mShouldDrawNotificationBackground
    java.util.ArrayList mSnappedBackChildren -> mSnappedBackChildren
    android.graphics.PorterDuffXfermode mSrcMode -> mSrcMode
    com.android.systemui.statusbar.stack.StackScrollAlgorithm mStackScrollAlgorithm -> mStackScrollAlgorithm
    float mStackTranslation -> mStackTranslation
    android.graphics.Rect mStartAnimationRect -> mStartAnimationRect
    com.android.systemui.statusbar.stack.StackStateAnimator mStateAnimator -> mStateAnimator
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    int mStatusBarHeight -> mStatusBarHeight
    int mStatusBarState -> mStatusBarState
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout$NotificationSwipeHelper mSwipeHelper -> mSwipeHelper
    java.util.ArrayList mSwipedOutViews -> mSwipedOutViews
    boolean mSwipingInProgress -> mSwipingInProgress
    int[] mTempInt2 -> mTempInt2
    java.util.ArrayList mTmpList -> mTmpList
    java.util.ArrayList mTmpSortedChildren -> mTmpSortedChildren
    android.animation.ObjectAnimator mTopAnimator -> mTopAnimator
    int mTopPadding -> mTopPadding
    boolean mTopPaddingNeedsAnimation -> mTopPaddingNeedsAnimation
    float mTopPaddingOverflow -> mTopPaddingOverflow
    boolean mTouchIsClick -> mTouchIsClick
    int mTouchSlop -> mTouchSlop
    boolean mTrackingHeadsUp -> mTrackingHeadsUp
    android.view.View mTranslatingParentView -> mTranslatingParentView
    boolean mUsingLightTheme -> mUsingLightTheme
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    java.util.Comparator mViewPositionComparator -> mViewPositionComparator
    void setHeadsUpGoingAwayAnimationsAllowed(boolean) -> setHeadsUpGoingAwayAnimationsAllowed
    com.android.systemui.statusbar.ExpandableView getChildAtRawPosition(float,float) -> getChildAtRawPosition
    boolean isExpanded() -> isExpanded
    void setQsCustomizerShowing(boolean) -> setQsCustomizerShowing
    boolean isPinnedHeadsUp(android.view.View) -> isPinnedHeadsUp
    android.view.View getLastChildNotGone() -> getLastChildNotGone
    void onChildAnimationFinished() -> onChildAnimationFinished
    float getCurrentOverScrollAmount(boolean) -> getCurrentOverScrollAmount
    void setOverScrollAmount(float,boolean,boolean,boolean,boolean) -> setOverScrollAmount
    void setPulsing(java.util.Collection) -> setPulsing
    boolean isInVisibleLocation(com.android.systemui.statusbar.ExpandableNotificationRow) -> isInVisibleLocation
    void setAnimationsEnabled(boolean) -> setAnimationsEnabled
    void setLongPressListener(com.android.systemui.SwipeHelper$LongPressListener) -> setLongPressListener
    void setStatusBar(com.android.systemui.statusbar.phone.StatusBar) -> setStatusBar
    void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager) -> setGroupManager
    void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager) -> setHeadsUpManager
    void setDrawBackgroundAsSrc(boolean) -> setDrawBackgroundAsSrc
    void setScrimController(com.android.systemui.statusbar.phone.ScrimController) -> setScrimController
    void setShelf(com.android.systemui.statusbar.NotificationShelf) -> setShelf
    void setEmptyShadeView(com.android.systemui.statusbar.EmptyShadeView) -> setEmptyShadeView
    void setDismissView(com.android.systemui.statusbar.DismissView) -> setDismissView
    boolean canChildBeDismissed(android.view.View) -> canChildBeDismissed
    void setDismissAllInProgress(boolean) -> setDismissAllInProgress
    void dismissViewAnimated(android.view.View,java.lang.Runnable,int,long) -> dismissViewAnimated
    void cleanUpViewState(android.view.View) -> cleanUpViewState
    boolean hasPulsingNotifications() -> hasPulsingNotifications
    void setChildTransferInProgress(boolean) -> setChildTransferInProgress
    void changeViewPosition(android.view.View,int) -> changeViewPosition
    void notifyGroupChildAdded(android.view.View) -> notifyGroupChildAdded
    void generateChildOrderChangedEvent() -> generateChildOrderChangedEvent
    void notifyGroupChildRemoved(android.view.View,android.view.ViewGroup) -> notifyGroupChildRemoved
    void updateDismissView(boolean) -> updateDismissView
    void updateSpeedBumpIndex(int,boolean) -> updateSpeedBumpIndex
    void runAfterAnimationFinished(java.lang.Runnable) -> runAfterAnimationFinished
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void setChildLocationsChangedListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnChildLocationsChangedListener) -> setChildLocationsChangedListener
    void setParentNotFullyVisible(boolean) -> setParentNotFullyVisible
    void updateDecorViews(boolean) -> updateDecorViews
    void setDark(boolean,boolean,android.graphics.PointF) -> setDark
    void setHideSensitive(boolean,boolean) -> setHideSensitive
    void setDimmed(boolean,boolean) -> setDimmed
    void setExpandingEnabled(boolean) -> setExpandingEnabled
    com.android.systemui.statusbar.ActivatableNotificationView getActivatedChild() -> getActivatedChild
    void setActivatedChild(com.android.systemui.statusbar.ActivatableNotificationView) -> setActivatedChild
    void setStatusBarState(int) -> setStatusBarState
    void resetScrollPosition() -> resetScrollPosition
    void resetCheckSnoozeLeavebehind() -> resetCheckSnoozeLeavebehind
    void removeLongPressCallback() -> removeLongPressCallback
    void checkSnoozeLeavebehind() -> checkSnoozeLeavebehind
    void setFinishScrollingCallback(java.lang.Runnable) -> setFinishScrollingCallback
    boolean scrollTo(android.view.View) -> scrollTo
    void onGoToKeyguard() -> onGoToKeyguard
    void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean) -> onHeightChanged
    com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper getSwipeActionHelper() -> getSwipeActionHelper
    void resetExposedMenuView(boolean,boolean) -> resetExposedMenuView
    void setMaxDisplayedNotifications(int) -> setMaxDisplayedNotifications
    void generateAddAnimation(android.view.View,boolean) -> generateAddAnimation
    int getNotGoneChildCount() -> getNotGoneChildCount
    void snapViewIfNeeded(com.android.systemui.statusbar.ExpandableNotificationRow) -> snapViewIfNeeded
    void setQsContainer(android.view.ViewGroup) -> setQsContainer
    void setOnHeightChangedListener(com.android.systemui.statusbar.ExpandableView$OnHeightChangedListener) -> setOnHeightChangedListener
    void setOverscrollTopChangedListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnOverscrollTopChangedListener) -> setOverscrollTopChangedListener
    void setOnEmptySpaceClickListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnEmptySpaceClickListener) -> setOnEmptySpaceClickListener
    void setIsFullWidth(boolean) -> setIsFullWidth
    boolean isAddOrRemoveAnimationPending() -> isAddOrRemoveAnimationPending
    void setIntrinsicPadding(int) -> setIntrinsicPadding
    void setDarkShelfOffsetX(int) -> setDarkShelfOffsetX
    com.android.systemui.statusbar.NotificationShelf getNotificationShelf() -> getNotificationShelf
    void goToFullShade(long) -> goToFullShade
    void setOverScrollAmount(float,boolean,boolean,boolean) -> setOverScrollAmount
    boolean isBelowLastNotification(float,float) -> isBelowLastNotification
    float getOpeningHeight() -> getOpeningHeight
    float getBottomMostNotificationBottom() -> getBottomMostNotificationBottom
    void setQsExpanded(boolean) -> setQsExpanded
    void setScrollingEnabled(boolean) -> setScrollingEnabled
    int getIntrinsicPadding() -> getIntrinsicPadding
    void updateTopPadding(float,boolean,boolean) -> updateTopPadding
    boolean isScrolledToBottom() -> isScrolledToBottom
    int getLayoutMinHeight() -> getLayoutMinHeight
    void setShadeExpanded(boolean) -> setShadeExpanded
    int getEmptyBottomMargin() -> getEmptyBottomMargin
    float getTopPaddingOverflow() -> getTopPaddingOverflow
    int getTopPadding() -> getTopPadding
    int getEmptyShadeViewHeight() -> getEmptyShadeViewHeight
    void setAlpha(float) -> setAlpha
    int getFirstItemMinHeight() -> getFirstItemMinHeight
    float getCurrentOverScrolledPixels(boolean) -> getCurrentOverScrolledPixels
    float getAppearFraction(float) -> getAppearFraction
    float getNotificationsTopY() -> getNotificationsTopY
    void onExpansionStarted() -> onExpansionStarted
    void onExpansionStopped() -> onExpansionStopped
    void setTrackingHeadsUp(boolean) -> setTrackingHeadsUp
    void setOverScrolledPixels(float,boolean,boolean) -> setOverScrolledPixels
    void setOverScrollAmount(float,boolean,boolean) -> setOverScrollAmount
    void onPanelTrackingStarted() -> onPanelTrackingStarted
    void onPanelTrackingStopped() -> onPanelTrackingStopped
    com.android.systemui.statusbar.ExpandableView getFirstChildNotGone() -> getFirstChildNotGone
    void setHeadsUpBoundaries(int,int) -> setHeadsUpBoundaries
    void setUnlockHintRunning(boolean) -> setUnlockHintRunning
    int getPeekHeight() -> getPeekHeight
    boolean isDismissViewNotGone() -> isDismissViewNotGone
    boolean isDismissViewVisible() -> isDismissViewVisible
    int getDismissViewHeight() -> getDismissViewHeight
    void updateEmptyShadeView(boolean) -> updateEmptyShadeView
    void setInHeadsUpPinnedMode(boolean) -> setInHeadsUpPinnedMode
    void setHeadsUpAnimatingAway(boolean) -> setHeadsUpAnimatingAway
    void generateHeadsUpAnimation(com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> generateHeadsUpAnimation
    void forceNoOverlappingRendering(boolean) -> forceNoOverlappingRendering
    void setExpandingVelocity(float) -> setExpandingVelocity
    void setExpandedHeight(float) -> setExpandedHeight
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void abortBackgroundAnimators() -> abortBackgroundAnimators
    void animateDimmed(boolean) -> animateDimmed
    void animateScroll() -> animateScroll
    void applyCurrentBackgroundBounds() -> applyCurrentBackgroundBounds
    void applyCurrentState() -> applyCurrentState
    boolean areBoundsAnimating() -> areBoundsAnimating
    boolean canChildBeExpanded(android.view.View) -> canChildBeExpanded
    void cancelExpandHelper() -> cancelExpandHelper
    int clampPadding(int) -> clampPadding
    void clampScrollPosition() -> clampScrollPosition
    void clearChildFocus(android.view.View) -> clearChildFocus
    void clearHeadsUpDisappearRunning() -> clearHeadsUpDisappearRunning
    void clearTemporaryViews() -> clearTemporaryViews
    void clearTemporaryViews(android.view.ViewGroup) -> clearTemporaryViews
    void clearUserLockedViews() -> clearUserLockedViews
    void clearViewOverlays() -> clearViewOverlays
    void closeControlsIfOutsideTouch(android.view.MotionEvent) -> closeControlsIfOutsideTouch
    com.android.systemui.statusbar.stack.StackScrollAlgorithm createStackScrollAlgorithm(android.content.Context) -> createStackScrollAlgorithm
    boolean customOverScrollBy(int,int,int,int) -> customOverScrollBy
    void dispatchDownEventToScroller(android.view.MotionEvent) -> dispatchDownEventToScroller
    void endDrag() -> endDrag
    void expansionStateChanged(boolean) -> expansionStateChanged
    int findDarkAnimationOriginIndex(android.graphics.PointF) -> findDarkAnimationOriginIndex
    void fling(int) -> fling
    void focusNextViewIfFocused(android.view.View) -> focusNextViewIfFocused
    void generateActivateEvent() -> generateActivateEvent
    void generateAnimateEverythingEvent() -> generateAnimateEverythingEvent
    void generateChildAdditionEvents() -> generateChildAdditionEvents
    void generateChildHierarchyEvents() -> generateChildHierarchyEvents
    void generateChildRemovalEvents() -> generateChildRemovalEvents
    void generateDarkEvent() -> generateDarkEvent
    void generateDimmedEvent() -> generateDimmedEvent
    void generateDragEvents() -> generateDragEvents
    void generateGoToFullShadeEvent() -> generateGoToFullShadeEvent
    void generateGroupExpansionEvent() -> generateGroupExpansionEvent
    void generateHeadsUpAnimationEvents() -> generateHeadsUpAnimationEvents
    void generateHideSensitiveEvent() -> generateHideSensitiveEvent
    void generatePositionChangeEvents() -> generatePositionChangeEvents
    boolean generateRemoveAnimation(android.view.View) -> generateRemoveAnimation
    void generateSnapBackEvents() -> generateSnapBackEvents
    void generateTopPaddingEvent() -> generateTopPaddingEvent
    void generateViewResizeEvent() -> generateViewResizeEvent
    float getAppearEndPosition() -> getAppearEndPosition
    float getAppearStartPosition() -> getAppearStartPosition
    float getBackgroundFadeAmount() -> getBackgroundFadeAmount
    android.view.View getChildAtPosition(android.view.MotionEvent) -> getChildAtPosition
    com.android.systemui.statusbar.ExpandableView getChildAtPosition(float,float) -> getChildAtPosition
    com.android.systemui.statusbar.ExpandableView getChildAtPosition(float,float,boolean) -> getChildAtPosition
    com.android.systemui.statusbar.ExpandableView getClosestChildAtRawPosition(float,float) -> getClosestChildAtRawPosition
    int getContentHeight() -> getContentHeight
    float getExpandTranslationStart() -> getExpandTranslationStart
    float getFalsingThresholdFactor() -> getFalsingThresholdFactor
    android.view.View getFirstChildBelowTranlsationY(float,boolean) -> getFirstChildBelowTranlsationY
    com.android.systemui.statusbar.ActivatableNotificationView getFirstChildWithBackground() -> getFirstChildWithBackground
    android.view.View getHostView() -> getHostView
    int getImeInset() -> getImeInset
    int getIntrinsicHeight(android.view.View) -> getIntrinsicHeight
    com.android.systemui.statusbar.ActivatableNotificationView getLastChildWithBackground() -> getLastChildWithBackground
    int getLayoutHeight() -> getLayoutHeight
    int getMaxExpandHeight(com.android.systemui.statusbar.ExpandableView) -> getMaxExpandHeight
    int getMinExpansionHeight() -> getMinExpansionHeight
    int getNotGoneIndex(android.view.View) -> getNotGoneIndex
    int getPositionInLinearLayout(android.view.View) -> getPositionInLinearLayout
    float getRubberBandFactor(boolean) -> getRubberBandFactor
    int getScrollRange() -> getScrollRange
    float getStackTranslation() -> getStackTranslation
    void handleChildDismissed(android.view.View) -> handleChildDismissed
    void handleDismissAllClipping() -> handleDismissAllClipping
    void handleEmptySpaceClick(android.view.MotionEvent) -> handleEmptySpaceClick
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void initDownStates(android.view.MotionEvent) -> initDownStates
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    void initView(android.content.Context) -> initView
    boolean isAntiFalsingNeeded() -> isAntiFalsingNeeded
    boolean isChildInGroup(android.view.View) -> isChildInGroup
    boolean isChildInInvisibleGroup(android.view.View) -> isChildInInvisibleGroup
    boolean isClickedHeadsUp(android.view.View) -> isClickedHeadsUp
    boolean isCurrentlyAnimating() -> isCurrentlyAnimating
    boolean isDimmed() -> isDimmed
    boolean isHeadsUp(android.view.View) -> isHeadsUp
    boolean isInContentBounds(android.view.MotionEvent) -> isInContentBounds
    boolean isInContentBounds(float) -> isInContentBounds
    boolean isInsideQsContainer(android.view.MotionEvent) -> isInsideQsContainer
    boolean isPulsing(com.android.systemui.statusbar.NotificationData$Entry) -> isPulsing
    boolean isRubberbanded(boolean) -> isRubberbanded
    boolean isScrolledToTop() -> isScrolledToTop
    boolean isScrollingEnabled() -> isScrollingEnabled
    boolean isTouchInView(android.view.MotionEvent,android.view.View) -> isTouchInView
    void lockScrollTo(android.view.View) -> lockScrollTo
    void notifyHeightChangeListener(com.android.systemui.statusbar.ExpandableView) -> notifyHeightChangeListener
    void notifyOverscrollTopListener(float,boolean) -> notifyOverscrollTopListener
    android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    void onBeginDrag(android.view.View) -> onBeginDrag
    void onChildDismissed(android.view.View) -> onChildDismissed
    void onChildSnappedBack(android.view.View,float) -> onChildSnappedBack
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCustomOverScrolled(int,boolean) -> onCustomOverScrolled
    void onDragCancelled(android.view.View) -> onDragCancelled
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    void onGroupCreatedFromChildren(com.android.systemui.statusbar.phone.NotificationGroupManager$NotificationGroup) -> onGroupCreatedFromChildren
    void onGroupExpansionChanged(com.android.systemui.statusbar.ExpandableNotificationRow,boolean) -> onGroupExpansionChanged
    void onGroupsChanged() -> onGroupsChanged
    void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEventInternal
    void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfoInternal
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onInterceptTouchEventScroll(android.view.MotionEvent) -> onInterceptTouchEventScroll
    boolean onKeyguard() -> onKeyguard
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onMenuClicked(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem) -> onMenuClicked
    void onMenuReset(android.view.View) -> onMenuReset
    void onMenuShown(android.view.View) -> onMenuShown
    void onOverScrollFling(boolean,int) -> onOverScrollFling
    void onPreDrawDuringAnimation() -> onPreDrawDuringAnimation
    void onReset(com.android.systemui.statusbar.ExpandableView) -> onReset
    boolean onScrollTouch(android.view.MotionEvent) -> onScrollTouch
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onViewAdded(android.view.View) -> onViewAdded
    void onViewAddedInternal(android.view.View) -> onViewAddedInternal
    void onViewRemoved(android.view.View) -> onViewRemoved
    void onViewRemovedInternal(android.view.View,android.view.ViewGroup) -> onViewRemovedInternal
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    float overScrollDown(int) -> overScrollDown
    float overScrollUp(int,int) -> overScrollUp
    boolean performAccessibilityActionInternal(int,android.os.Bundle) -> performAccessibilityActionInternal
    void performDismiss(android.view.View,com.android.systemui.statusbar.phone.NotificationGroupManager,boolean) -> performDismiss
    void recycleVelocityTracker() -> recycleVelocityTracker
    boolean removeRemovedChildFromHeadsUpChangeAnimations(android.view.View) -> removeRemovedChildFromHeadsUpChangeAnimations
    void requestAnimateEverything() -> requestAnimateEverything
    void requestAnimationOnViewResize(com.android.systemui.statusbar.ExpandableNotificationRow) -> requestAnimationOnViewResize
    void requestChildrenUpdate() -> requestChildrenUpdate
    void requestDisallowDismiss() -> requestDisallowDismiss
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void requestDisallowLongPress() -> requestDisallowLongPress
    void runAnimationFinishedRunnables() -> runAnimationFinishedRunnables
    void setAnimationRunning(boolean) -> setAnimationRunning
    void setBackgroundBottom(int) -> setBackgroundBottom
    void setBackgroundFadeAmount(float) -> setBackgroundFadeAmount
    void setBackgroundTop(int) -> setBackgroundTop
    void setDimAmount(float) -> setDimAmount
    void setExpansionCancelled(android.view.View) -> setExpansionCancelled
    void setFadingOut(boolean) -> setFadingOut
    void setIsBeingDragged(boolean) -> setIsBeingDragged
    void setIsExpanded(boolean) -> setIsExpanded
    void setMaxLayoutHeight(int) -> setMaxLayoutHeight
    void setOverScrollAmountInternal(float,boolean,boolean,boolean) -> setOverScrollAmountInternal
    void setOverScrolledPixels(float,boolean) -> setOverScrolledPixels
    void setOwnScrollY(int) -> setOwnScrollY
    void setRequestedClipBounds(android.graphics.Rect) -> setRequestedClipBounds
    void setStackTranslation(float) -> setStackTranslation
    void setSwipingInProgress(boolean) -> setSwipingInProgress
    void setTopPadding(int,boolean) -> setTopPadding
    void setTouchActive(boolean) -> setTouchActive
    void setUserExpandedChild(android.view.View,boolean) -> setUserExpandedChild
    void setUserLockedChild(android.view.View,boolean) -> setUserLockedChild
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean shouldHunAppearFromBottom(com.android.systemui.statusbar.stack.ExpandableViewState) -> shouldHunAppearFromBottom
    boolean shouldOverScrollFling(int) -> shouldOverScrollFling
    void springBack() -> springBack
    void startAnimationToState() -> startAnimationToState
    void startBackgroundAnimation() -> startBackgroundAnimation
    void startBackgroundFadeIn() -> startBackgroundFadeIn
    void startBottomAnimation() -> startBottomAnimation
    void startTopAnimation() -> startTopAnimation
    int targetScrollForView(com.android.systemui.statusbar.ExpandableView,int) -> targetScrollForView
    void updateAlgorithmHeightAndPadding() -> updateAlgorithmHeightAndPadding
    void updateAlgorithmLayoutMinHeight() -> updateAlgorithmLayoutMinHeight
    void updateAnimationState(android.view.View) -> updateAnimationState
    void updateAnimationState(boolean,android.view.View) -> updateAnimationState
    void updateBackground() -> updateBackground
    void updateBackgroundBounds() -> updateBackgroundBounds
    void updateBackgroundDimming() -> updateBackgroundDimming
    void updateChildren() -> updateChildren
    void updateChronometerForChild(android.view.View) -> updateChronometerForChild
    void updateChronometers() -> updateChronometers
    void updateClipping() -> updateClipping
    void updateContentHeight() -> updateContentHeight
    void updateContinuousShadowDrawing() -> updateContinuousShadowDrawing
    void updateFadingState() -> updateFadingState
    void updateFirstAndLastBackgroundViews() -> updateFirstAndLastBackgroundViews
    void updateForcedScroll() -> updateForcedScroll
    void updateForwardAndBackwardScrollability() -> updateForwardAndBackwardScrollability
    void updateHideSensitiveForChild(android.view.View) -> updateHideSensitiveForChild
    void updateNotificationAnimationStates() -> updateNotificationAnimationStates
    void updateScrollPositionOnExpandInBottom(com.android.systemui.statusbar.ExpandableView) -> updateScrollPositionOnExpandInBottom
    void updateScrollStateForAddedChildren() -> updateScrollStateForAddedChildren
    void updateScrollStateForRemovedChild(com.android.systemui.statusbar.ExpandableView) -> updateScrollStateForRemovedChild
    void updateScrollability() -> updateScrollability
    void updateSrcDrawing() -> updateSrcDrawing
    boolean updateSwipeProgress(android.view.View,boolean,float) -> updateSwipeProgress
    void updateViewShadows() -> updateViewShadows
    void updateWillNotDraw() -> updateWillNotDraw
    void <clinit>() -> <clinit>
    void -com_android_systemui_statusbar_stack_NotificationStackScrollLayout-mthref-0() -> -com_android_systemui_statusbar_stack_NotificationStackScrollLayout-mthref-0
    void -com_android_systemui_statusbar_stack_NotificationStackScrollLayout-mthref-1() -> -com_android_systemui_statusbar_stack_NotificationStackScrollLayout-mthref-1
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin -get0(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get0
    android.graphics.Rect -get1(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get1
    boolean -get2(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get2
    android.view.View -get3(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get3
    int -get4(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get4
    int -get5(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get5
    android.widget.OverScroller -get6(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get6
    android.graphics.Rect -get7(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get7
    com.android.systemui.statusbar.phone.StatusBar -get8(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get8
    android.view.View -get9(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -get9
    android.animation.ObjectAnimator -set0(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,android.animation.ObjectAnimator) -> -set0
    boolean -set1(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,boolean) -> -set1
    com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin -set2(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin) -> -set2
    android.animation.ValueAnimator -set3(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,android.animation.ValueAnimator) -> -set3
    boolean -set4(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,boolean) -> -set4
    boolean -set5(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,boolean) -> -set5
    android.view.View -set6(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,android.view.View) -> -set6
    android.animation.ObjectAnimator -set7(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,android.animation.ObjectAnimator) -> -set7
    android.view.View -set8(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,android.view.View) -> -set8
    boolean -wrap0(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,android.view.MotionEvent,android.view.View) -> -wrap0
    int -wrap1(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -wrap2
    void -wrap3(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,android.view.View) -> -wrap3
    void -wrap4(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,com.android.systemui.statusbar.ExpandableView) -> -wrap4
    void -wrap5(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -wrap5
    void -wrap6(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,float) -> -wrap6
    void -wrap7(com.android.systemui.statusbar.stack.NotificationStackScrollLayout,float) -> -wrap7
    void -wrap8(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -wrap8
    void -wrap9(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -wrap9
    void -wrap10(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -wrap10
    void -wrap11(com.android.systemui.statusbar.stack.NotificationStackScrollLayout) -> -wrap11
com.android.systemui.statusbar.phone.UnlockMethodCache$OnUnlockMethodChangedListener -> com.android.systemui.statusbar.phone.UnlockMethodCache$OnUnlockMethodChangedListener:
    void onUnlockMethodStateChanged() -> onUnlockMethodStateChanged
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    boolean dimWhenOffset -> dimWhenOffset
    boolean slideable -> slideable
    float weight -> weight
    android.graphics.Paint dimPaint -> dimPaint
    void <clinit>() -> <clinit>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>() -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
com.android.systemui.statusbar.policy.ZenModeControllerImpl$2 -> com.android.systemui.statusbar.policy.ZenModeControllerImpl$2:
    com.android.systemui.statusbar.policy.ZenModeControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.ZenModeControllerImpl) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.app.ResourcesFlusher -> android.support.v7.app.ResourcesFlusher:
    java.lang.reflect.Field sDrawableCacheField -> sDrawableCacheField
    boolean sDrawableCacheFieldFetched -> sDrawableCacheFieldFetched
    java.lang.reflect.Field sResourcesImplField -> sResourcesImplField
    boolean sResourcesImplFieldFetched -> sResourcesImplFieldFetched
    java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField -> sThemedResourceCache_mUnthemedEntriesField
    boolean sThemedResourceCacheClazzFetched -> sThemedResourceCacheClazzFetched
    boolean sThemedResourceCache_mUnthemedEntriesFieldFetched -> sThemedResourceCache_mUnthemedEntriesFieldFetched
    java.lang.Class sThemedResourceCacheClazz -> sThemedResourceCacheClazz
    boolean flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    boolean flushNougats(android.content.res.Resources) -> flushNougats
    boolean flushLollipops(android.content.res.Resources) -> flushLollipops
    void <init>() -> <init>
    boolean flush(android.content.res.Resources) -> flush
    boolean flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
com.android.systemui.qs.tiles.DndTile$2 -> com.android.systemui.qs.tiles.DndTile$2:
    com.android.systemui.qs.tiles.DndTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.DndTile) -> <init>
    void onConfigChanged(android.service.notification.ZenModeConfig) -> onConfigChanged
    void onZenChanged(int) -> onZenChanged
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
android.support.v7.view.menu.CascadingMenuPopup$3$1 -> android.support.v7.view.menu.CascadingMenuPopup$3$1:
    android.view.MenuItem val$item -> val$item
    android.support.v7.view.menu.CascadingMenuPopup$3 this$1 -> this$1
    android.support.v7.view.menu.MenuBuilder val$menu -> val$menu
    android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> val$nextInfo
    void run() -> run
    void <init>(android.support.v7.view.menu.CascadingMenuPopup$3,android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,android.support.v7.view.menu.MenuBuilder) -> <init>
com.android.systemui.statusbar.phone.UnlockMethodCache -> com.android.systemui.statusbar.phone.UnlockMethodCache:
    com.android.keyguard.KeyguardUpdateMonitorCallback mCallback -> mCallback
    boolean mCanSkipBouncer -> mCanSkipBouncer
    boolean mFaceUnlockRunning -> mFaceUnlockRunning
    com.android.keyguard.KeyguardUpdateMonitor mKeyguardUpdateMonitor -> mKeyguardUpdateMonitor
    java.util.ArrayList mListeners -> mListeners
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    boolean mSecure -> mSecure
    boolean mTrustManaged -> mTrustManaged
    boolean mTrusted -> mTrusted
    com.android.systemui.statusbar.phone.UnlockMethodCache sInstance -> sInstance
    void <init>(android.content.Context) -> <init>
    void addListener(com.android.systemui.statusbar.phone.UnlockMethodCache$OnUnlockMethodChangedListener) -> addListener
    boolean canSkipBouncer() -> canSkipBouncer
    com.android.systemui.statusbar.phone.UnlockMethodCache getInstance(android.content.Context) -> getInstance
    boolean isFaceUnlockRunning() -> isFaceUnlockRunning
    boolean isMethodSecure() -> isMethodSecure
    boolean isTrustManaged() -> isTrustManaged
    boolean isTrusted() -> isTrusted
    void notifyListeners() -> notifyListeners
    void update(boolean) -> update
    com.android.keyguard.KeyguardUpdateMonitor -get0(com.android.systemui.statusbar.phone.UnlockMethodCache) -> -get0
    void -wrap0(com.android.systemui.statusbar.phone.UnlockMethodCache,boolean) -> -wrap0
com.android.systemui.screenshot.ScreenshotSelectorView -> com.android.systemui.screenshot.ScreenshotSelectorView:
    android.graphics.Paint mPaintBackground -> mPaintBackground
    android.graphics.Paint mPaintSelection -> mPaintSelection
    android.graphics.Rect mSelectionRect -> mSelectionRect
    android.graphics.Point mStartPoint -> mStartPoint
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void draw(android.graphics.Canvas) -> draw
    android.graphics.Rect getSelectionRect() -> getSelectionRect
    void startSelection(int,int) -> startSelection
    void stopSelection() -> stopSelection
    void updateSelection(int,int) -> updateSelection
com.android.settingslib.drawer.SettingsDrawerActivity$CategoriesUpdateTask -> com.android.settingslib.drawer.SettingsDrawerActivity$CategoriesUpdateTask:
    com.android.settingslib.drawer.CategoryManager mCategoryManager -> mCategoryManager
    com.android.settingslib.drawer.SettingsDrawerActivity this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.android.settingslib.drawer.SettingsDrawerActivity) -> <init>
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onPostExecute(java.lang.Void) -> onPostExecute
com.android.systemui.recents.views.TaskStackAnimationHelper$6 -> com.android.systemui.recents.views.TaskStackAnimationHelper$6:
    com.android.systemui.recents.views.TaskStackAnimationHelper this$0 -> this$0
    com.android.systemui.recents.misc.ReferenceCountedTrigger val$postAnimationTrigger -> val$postAnimationTrigger
    void <init>(com.android.systemui.recents.views.TaskStackAnimationHelper,com.android.systemui.recents.misc.ReferenceCountedTrigger) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.qs.QSPanel$H -> com.android.systemui.qs.QSPanel$H:
    com.android.systemui.qs.QSPanel this$0 -> this$0
    void <init>(com.android.systemui.qs.QSPanel) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.android.systemui.qs.QSPanel,com.android.systemui.qs.QSPanel$H) -> <init>
com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$BoundingBox -> com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$BoundingBox:
    int bitField0_ -> bitField0_
    float width_ -> width_
    float height_ -> height_
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int computeSerializedSize() -> computeSerializedSize
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$BoundingBox mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$TouchEvent$BoundingBox clear() -> clear
    void <init>() -> <init>
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
com.android.keyguard.PasswordTextView$CharState$6 -> com.android.keyguard.PasswordTextView$CharState$6:
    com.android.keyguard.PasswordTextView$CharState this$1 -> this$1
    void <init>(com.android.keyguard.PasswordTextView$CharState) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$7 -> com.android.systemui.tuner.-$Lambda$u6QT41_VsCImaF7Jn70surjpgFM$7:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    java.lang.Object -$f3 -> -$f3
    java.lang.Object -$f4 -> -$f4
    java.lang.Object -$f5 -> -$f5
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.content.DialogInterface,int) -> $m$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.statusbar.phone.NotificationPanelView$12 -> com.android.systemui.statusbar.phone.NotificationPanelView$12:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
    void <init>(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> <init>
android.support.v7.widget.OrientationHelper$1 -> android.support.v7.widget.OrientationHelper$1:
    int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    int getMode() -> getMode
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getTotalSpace() -> getTotalSpace
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getEnd() -> getEnd
    int getModeInOther() -> getModeInOther
    int getStartAfterPadding() -> getStartAfterPadding
    int getEndPadding() -> getEndPadding
    int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    int getEndAfterPadding() -> getEndAfterPadding
    void offsetChildren(int) -> offsetChildren
android.support.v7.media.RegisteredMediaRouteProvider$Controller -> android.support.v7.media.RegisteredMediaRouteProvider$Controller:
    int mControllerId -> mControllerId
    boolean mSelected -> mSelected
    android.support.v7.media.RegisteredMediaRouteProvider this$0 -> this$0
    int mPendingUpdateVolumeDelta -> mPendingUpdateVolumeDelta
    android.support.v7.media.RegisteredMediaRouteProvider$Connection mConnection -> mConnection
    java.lang.String mRouteId -> mRouteId
    int mPendingSetVolume -> mPendingSetVolume
    java.lang.String mRouteGroupId -> mRouteGroupId
    void onUpdateVolume(int) -> onUpdateVolume
    void detachConnection() -> detachConnection
    void onRelease() -> onRelease
    void attachConnection(android.support.v7.media.RegisteredMediaRouteProvider$Connection) -> attachConnection
    void <init>(android.support.v7.media.RegisteredMediaRouteProvider,java.lang.String,java.lang.String) -> <init>
    void onSelect() -> onSelect
    void onUnselect() -> onUnselect
    void onUnselect(int) -> onUnselect
    void onSetVolume(int) -> onSetVolume
com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState -> com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState:
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState FREEFORM_ONLY -> FREEFORM_ONLY
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState SPLIT -> SPLIT
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState STACK_ONLY -> STACK_ONLY
    int freeformBackgroundAlpha -> freeformBackgroundAlpha
    float freeformHeightPct -> freeformHeightPct
    void <init>(float,int) -> <init>
    void computeRects(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,int,int,int) -> computeRects
    com.android.systemui.recents.views.TaskStackLayoutAlgorithm$StackState getStackStateForStack(com.android.systemui.recents.model.TaskStack) -> getStackStateForStack
    void <clinit>() -> <clinit>
android.support.v14.preference.MultiSelectListPreferenceDialogFragment$1 -> android.support.v14.preference.MultiSelectListPreferenceDialogFragment$1:
    android.support.v14.preference.MultiSelectListPreferenceDialogFragment this$0 -> this$0
    void <init>(android.support.v14.preference.MultiSelectListPreferenceDialogFragment) -> <init>
    void onClick(android.content.DialogInterface,int,boolean) -> onClick
com.android.systemui.statusbar.KeyguardAffordanceView$5 -> com.android.systemui.statusbar.KeyguardAffordanceView$5:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    java.lang.Runnable val$mAnimationEndRunnable -> val$mAnimationEndRunnable
    float val$maxCircleSize -> val$maxCircleSize
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView,java.lang.Runnable,float) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.SignalDrawable$SlashArtist -> com.android.systemui.statusbar.phone.SignalDrawable$SlashArtist:
    android.graphics.Path mPath -> mPath
    android.graphics.RectF mSlashRect -> mSlashRect
    com.android.systemui.statusbar.phone.SignalDrawable this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.SignalDrawable) -> <init>
    void draw(int,int,android.graphics.Canvas,android.graphics.Paint) -> draw
    float scale(float,int) -> scale
    void updateRect(float,float,float,float) -> updateRect
    void <init>(com.android.systemui.statusbar.phone.SignalDrawable,com.android.systemui.statusbar.phone.SignalDrawable$SlashArtist) -> <init>
com.android.systemui.recents.views.AnimationProps -> com.android.systemui.recents.views.AnimationProps:
    com.android.systemui.recents.views.AnimationProps IMMEDIATE -> IMMEDIATE
    android.animation.Animator$AnimatorListener mListener -> mListener
    android.util.SparseLongArray mPropDuration -> mPropDuration
    android.util.SparseArray mPropInterpolators -> mPropInterpolators
    android.util.SparseLongArray mPropStartDelay -> mPropStartDelay
    void <init>() -> <init>
    void <init>(int,android.view.animation.Interpolator) -> <init>
    void <init>(int,android.view.animation.Interpolator,android.animation.Animator$AnimatorListener) -> <init>
    void <init>(int,int,android.view.animation.Interpolator) -> <init>
    void <init>(int,int,android.view.animation.Interpolator,android.animation.Animator$AnimatorListener) -> <init>
    android.animation.ValueAnimator apply(int,android.animation.ValueAnimator) -> apply
    android.animation.AnimatorSet createAnimator(java.util.List) -> createAnimator
    long getDuration(int) -> getDuration
    android.view.animation.Interpolator getInterpolator(int) -> getInterpolator
    android.animation.Animator$AnimatorListener getListener() -> getListener
    long getStartDelay(int) -> getStartDelay
    boolean isImmediate() -> isImmediate
    com.android.systemui.recents.views.AnimationProps setDuration(int,int) -> setDuration
    com.android.systemui.recents.views.AnimationProps setInterpolator(int,android.view.animation.Interpolator) -> setInterpolator
    com.android.systemui.recents.views.AnimationProps setListener(android.animation.Animator$AnimatorListener) -> setListener
    com.android.systemui.recents.views.AnimationProps setStartDelay(int,int) -> setStartDelay
    void <clinit>() -> <clinit>
com.android.systemui.util.-$Lambda$ciFdFM7iEa_W52MJO7CjiSPHfOo -> com.android.systemui.util.-$Lambda$ciFdFM7iEa_W52MJO7CjiSPHfOo:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord -> android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord:
    int mMaxVolume -> mMaxVolume
    android.support.v7.media.MediaRouter$GlobalMediaRouter this$1 -> this$1
    int mControlType -> mControlType
    android.support.v4.media.VolumeProviderCompat mVpCompat -> mVpCompat
    android.support.v4.media.session.MediaSessionCompat mMsCompat -> mMsCompat
    void clearVolumeHandling() -> clearVolumeHandling
    void configureVolume(int,int,int) -> configureVolume
    android.support.v4.media.session.MediaSessionCompat$Token getToken() -> getToken
com.android.systemui.qs.QSTileHost -> com.android.systemui.qs.QSTileHost:
    boolean DEBUG -> DEBUG
    com.android.systemui.statusbar.phone.AutoTileManager mAutoTiles -> mAutoTiles
    java.util.List mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    int mCurrentUser -> mCurrentUser
    com.android.systemui.statusbar.phone.StatusBarIconController mIconController -> mIconController
    java.util.ArrayList mQsFactories -> mQsFactories
    com.android.systemui.qs.external.TileServices mServices -> mServices
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    java.util.ArrayList mTileSpecs -> mTileSpecs
    java.util.LinkedHashMap mTiles -> mTiles
    void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.phone.StatusBarIconController) -> <init>
    void addCallback(com.android.systemui.qs.QSHost$Callback) -> addCallback
    void addTile(java.lang.String) -> addTile
    void addTile(android.content.ComponentName) -> addTile
    void changeTiles(java.util.List,java.util.List) -> changeTiles
    void collapsePanels() -> collapsePanels
    com.android.systemui.plugins.qs.QSTile createTile(java.lang.String) -> createTile
    com.android.systemui.plugins.qs.QSTileView createTileView(com.android.systemui.plugins.qs.QSTile,boolean) -> createTileView
    void forceCollapsePanels() -> forceCollapsePanels
    android.content.Context getContext() -> getContext
    com.android.systemui.statusbar.phone.StatusBarIconController getIconController() -> getIconController
    com.android.systemui.qs.external.TileServices getTileServices() -> getTileServices
    java.util.Collection getTiles() -> getTiles
    int indexOf(java.lang.String) -> indexOf
    java.util.List loadTileSpecs(android.content.Context,java.lang.String) -> loadTileSpecs
    void onPluginConnected(com.android.systemui.plugins.qs.QSFactory,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.qs.QSFactory) -> onPluginDisconnected
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void openPanels() -> openPanels
    void removeCallback(com.android.systemui.qs.QSHost$Callback) -> removeCallback
    void removeTile(java.lang.String) -> removeTile
    void removeTile(android.content.ComponentName) -> removeTile
    void warn(java.lang.String,java.lang.Throwable) -> warn
    void <clinit>() -> <clinit>
    boolean lambda$-com_android_systemui_qs_QSTileHost_6393(java.util.List,java.util.Map$Entry) -> lambda$-com_android_systemui_qs_QSTileHost_6393
    void lambda$-com_android_systemui_qs_QSTileHost_6462(java.util.Map$Entry) -> lambda$-com_android_systemui_qs_QSTileHost_6462
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
android.support.v4.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener:
    android.view.View mView -> mView
    void <init>(android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.NotificationPanelView$16 -> com.android.systemui.statusbar.phone.NotificationPanelView$16:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.AutoTileManager -> com.android.systemui.statusbar.phone.AutoTileManager:
    com.android.systemui.qs.AutoAddTracker mAutoTracker -> mAutoTracker
    com.android.systemui.qs.SecureSetting mColorsSetting -> mColorsSetting
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.DataSaverController$Listener mDataSaverListener -> mDataSaverListener
    android.os.Handler mHandler -> mHandler
    com.android.systemui.qs.QSTileHost mHost -> mHost
    com.android.systemui.statusbar.policy.HotspotController$Callback mHotspotCallback -> mHotspotCallback
    com.android.internal.app.NightDisplayController$Callback mNightDisplayCallback -> mNightDisplayCallback
    com.android.systemui.statusbar.phone.ManagedProfileController$Callback mProfileCallback -> mProfileCallback
    void <init>(android.content.Context,com.android.systemui.qs.QSTileHost) -> <init>
    com.android.systemui.qs.AutoAddTracker -get0(com.android.systemui.statusbar.phone.AutoTileManager) -> -get0
    com.android.systemui.qs.SecureSetting -get1(com.android.systemui.statusbar.phone.AutoTileManager) -> -get1
    com.android.systemui.statusbar.policy.DataSaverController$Listener -get2(com.android.systemui.statusbar.phone.AutoTileManager) -> -get2
    android.os.Handler -get3(com.android.systemui.statusbar.phone.AutoTileManager) -> -get3
    com.android.systemui.qs.QSTileHost -get4(com.android.systemui.statusbar.phone.AutoTileManager) -> -get4
    com.android.systemui.statusbar.policy.HotspotController$Callback -get5(com.android.systemui.statusbar.phone.AutoTileManager) -> -get5
    com.android.systemui.statusbar.phone.ManagedProfileController$Callback -get6(com.android.systemui.statusbar.phone.AutoTileManager) -> -get6
android.support.v4.view.ViewParentCompat$ViewParentCompatApi21Impl -> android.support.v4.view.ViewParentCompat$ViewParentCompatApi21Impl:
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void <init>() -> <init>
android.support.v7.widget.TintContextWrapper -> android.support.v7.widget.TintContextWrapper:
    android.content.res.Resources$Theme mTheme -> mTheme
    java.util.ArrayList sCache -> sCache
    android.content.res.Resources mResources -> mResources
    java.lang.Object CACHE_LOCK -> CACHE_LOCK
    void setTheme(int) -> setTheme
    boolean shouldWrap(android.content.Context) -> shouldWrap
    android.content.res.AssetManager getAssets() -> getAssets
    void <init>(android.content.Context) -> <init>
    android.content.res.Resources$Theme getTheme() -> getTheme
    void <clinit>() -> <clinit>
    android.content.res.Resources getResources() -> getResources
    android.content.Context wrap(android.content.Context) -> wrap
com.android.systemui.statusbar.car.UserGridView$UserSelectionListener -> com.android.systemui.statusbar.car.UserGridView$UserSelectionListener:
    void onUserSelected(com.android.systemui.statusbar.policy.UserSwitcherController$UserRecord) -> onUserSelected
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v7.app.AppCompatDelegateImplV9 -> android.support.v7.app.AppCompatDelegateImplV9:
    android.support.v7.widget.DecorContentParent mDecorContentParent -> mDecorContentParent
    java.lang.Runnable mShowActionModePopup -> mShowActionModePopup
    boolean IS_PRE_LOLLIPOP -> IS_PRE_LOLLIPOP
    boolean mEnableDefaultActionBarUp -> mEnableDefaultActionBarUp
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState[] mPanels -> mPanels
    android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState mPreparedPanel -> mPreparedPanel
    android.widget.TextView mTitleView -> mTitleView
    android.support.v7.widget.ActionBarContextView mActionModeView -> mActionModeView
    android.graphics.Rect mTempRect1 -> mTempRect1
    int mInvalidatePanelMenuFeatures -> mInvalidatePanelMenuFeatures
    android.widget.PopupWindow mActionModePopup -> mActionModePopup
    android.support.v4.view.ViewPropertyAnimatorCompat mFadeAnim -> mFadeAnim
    android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> mPanelMenuPresenterCallback
    android.support.v7.app.AppCompatViewInflater mAppCompatViewInflater -> mAppCompatViewInflater
    boolean mClosingActionMenu -> mClosingActionMenu
    boolean mFeatureProgress -> mFeatureProgress
    boolean mLongPressBackDown -> mLongPressBackDown
    boolean mFeatureIndeterminateProgress -> mFeatureIndeterminateProgress
    android.support.v7.view.ActionMode mActionMode -> mActionMode
    boolean mInvalidatePanelMenuPosted -> mInvalidatePanelMenuPosted
    android.view.ViewGroup mSubDecor -> mSubDecor
    java.lang.Runnable mInvalidatePanelMenuRunnable -> mInvalidatePanelMenuRunnable
    boolean mSubDecorInstalled -> mSubDecorInstalled
    android.view.View mStatusGuard -> mStatusGuard
    android.graphics.Rect mTempRect2 -> mTempRect2
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    void applyFixedSizeWindow() -> applyFixedSizeWindow
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    boolean performPanelShortcut(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> reopenMenu
    android.view.ViewGroup createSubDecor() -> createSubDecor
    void checkCloseActionMenu(android.support.v7.view.menu.MenuBuilder) -> checkCloseActionMenu
    void onTitleChanged(java.lang.CharSequence) -> onTitleChanged
    boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean initializePanelContent(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> initializePanelContent
    boolean requestWindowFeature(int) -> requestWindowFeature
    void dismissPopups() -> dismissPopups
    void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    boolean initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> initializePanelDecor
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void initWindowDecorActionBar() -> initWindowDecorActionBar
    void invalidatePanelMenu(int) -> invalidatePanelMenu
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    void setContentView(android.view.View) -> setContentView
    void setContentView(int) -> setContentView
    void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    void closePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,boolean) -> closePanel
    void openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent) -> openPanel
    void closePanel(int) -> closePanel
    void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    boolean onBackPressed() -> onBackPressed
    boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    void ensureSubDecor() -> ensureSubDecor
    boolean initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> initializePanelMenu
    android.view.View findViewById(int) -> findViewById
    void installViewFactory() -> installViewFactory
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    int updateStatusGuard(int) -> updateStatusGuard
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> callActivityOnCreateView
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    void <clinit>() -> <clinit>
    boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
android.support.v17.leanback.widget.ShadowHelperApi21 -> android.support.v17.leanback.widget.ShadowHelperApi21:
    android.view.ViewOutlineProvider sOutlineProvider -> sOutlineProvider
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void setZ(android.view.View,float) -> setZ
com.android.settingslib.bluetooth.LocalBluetoothAdapter -> com.android.settingslib.bluetooth.LocalBluetoothAdapter:
    com.android.settingslib.bluetooth.LocalBluetoothAdapter sInstance -> sInstance
    int mState -> mState
    android.bluetooth.BluetoothAdapter mAdapter -> mAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    boolean setBluetoothEnabled(boolean) -> setBluetoothEnabled
    int getState() -> getState
    com.android.settingslib.bluetooth.LocalBluetoothAdapter getInstance() -> getInstance
    void <init>(android.bluetooth.BluetoothAdapter) -> <init>
    java.util.Set getBondedDevices() -> getBondedDevices
    int getConnectionState() -> getConnectionState
    boolean enable() -> enable
    void getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int) -> getProfileProxy
    int getBluetoothState() -> getBluetoothState
    void setProfileManager(com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> setProfileManager
    android.os.ParcelUuid[] getUuids() -> getUuids
    void setBluetoothStateInt(int) -> setBluetoothStateInt
    boolean syncBluetoothState() -> syncBluetoothState
    android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner() -> getBluetoothLeScanner
    void cancelDiscovery() -> cancelDiscovery
    boolean isDiscovering() -> isDiscovering
android.support.v7.widget.TooltipCompatHandler -> android.support.v7.widget.TooltipCompatHandler:
    java.lang.Runnable mShowRunnable -> mShowRunnable
    java.lang.CharSequence mTooltipText -> mTooltipText
    boolean mFromTouch -> mFromTouch
    android.support.v7.widget.TooltipPopup mPopup -> mPopup
    java.lang.Runnable mHideRunnable -> mHideRunnable
    android.support.v7.widget.TooltipCompatHandler sActiveHandler -> sActiveHandler
    android.view.View mAnchor -> mAnchor
    int mAnchorX -> mAnchorX
    int mAnchorY -> mAnchorY
    boolean onLongClick(android.view.View) -> onLongClick
    void show(boolean) -> show
    void <init>(android.view.View,java.lang.CharSequence) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void hide() -> hide
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    void -wrap0(android.support.v7.widget.TooltipCompatHandler) -> -wrap0
    void -wrap1(android.support.v7.widget.TooltipCompatHandler,boolean) -> -wrap1
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    java.lang.ref.WeakReference mMediaControllerImpl -> mMediaControllerImpl
    void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21,android.os.Handler) -> <init>
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.systemui.statusbar.policy.RemoteInputView$2 -> com.android.systemui.statusbar.policy.RemoteInputView$2:
    com.android.systemui.statusbar.policy.RemoteInputView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.RemoteInputView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.preference.PreferenceCategory -> android.support.v7.preference.PreferenceCategory:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void <init>(android.content.Context) -> <init>
    boolean onPrepareAddPreference(android.support.v7.preference.Preference) -> onPrepareAddPreference
    boolean shouldDisableDependents() -> shouldDisableDependents
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    boolean isEnabled() -> isEnabled
com.android.systemui.statusbar.GestureRecorder$Gesture -> com.android.systemui.statusbar.GestureRecorder$Gesture:
    boolean mComplete -> mComplete
    long mDownTime -> mDownTime
    java.util.LinkedList mRecords -> mRecords
    java.util.HashSet mTags -> mTags
    com.android.systemui.statusbar.GestureRecorder this$0 -> this$0
    void <init>(com.android.systemui.statusbar.GestureRecorder) -> <init>
    void tag(long,java.lang.String,java.lang.String) -> tag
com.android.systemui.statusbar.stack.ViewState -> com.android.systemui.statusbar.stack.ViewState:
    float alpha -> alpha
    boolean hidden -> hidden
    float xTranslation -> xTranslation
    float yTranslation -> yTranslation
    float zTranslation -> zTranslation
    com.android.systemui.statusbar.stack.AnimationProperties NO_NEW_ANIMATIONS -> NO_NEW_ANIMATIONS
    com.android.systemui.statusbar.notification.PropertyAnimator$AnimatableProperty SCALE_X_PROPERTY -> SCALE_X_PROPERTY
    com.android.systemui.statusbar.notification.PropertyAnimator$AnimatableProperty SCALE_Y_PROPERTY -> SCALE_Y_PROPERTY
    boolean gone -> gone
    float scaleX -> scaleX
    float scaleY -> scaleY
    void <init>() -> <init>
    void applyToView(android.view.View) -> applyToView
    void animateTo(android.view.View,com.android.systemui.statusbar.stack.AnimationProperties) -> animateTo
    void initFrom(android.view.View) -> initFrom
    void cancelAnimations(android.view.View) -> cancelAnimations
    void copyFrom(com.android.systemui.statusbar.stack.ViewState) -> copyFrom
    void abortAnimation(android.view.View,int) -> abortAnimation
    java.lang.Object getChildTag(android.view.View,int) -> getChildTag
    long cancelAnimatorAndGetNewDuration(long,android.animation.ValueAnimator) -> cancelAnimatorAndGetNewDuration
    void startAnimator(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> startAnimator
    boolean isAnimatingY(android.view.View) -> isAnimatingY
    float getFinalTranslationY(android.view.View) -> getFinalTranslationY
    float getFinalTranslationZ(android.view.View) -> getFinalTranslationZ
    boolean isAnimating(android.view.View) -> isAnimating
    boolean isAnimating(android.view.View,int) -> isAnimating
    boolean isAnimating(android.view.View,com.android.systemui.statusbar.notification.PropertyAnimator$AnimatableProperty) -> isAnimating
    void onYTranslationAnimationFinished(android.view.View) -> onYTranslationAnimationFinished
    void startAlphaAnimation(android.view.View,com.android.systemui.statusbar.stack.AnimationProperties) -> startAlphaAnimation
    void startXTranslationAnimation(android.view.View,com.android.systemui.statusbar.stack.AnimationProperties) -> startXTranslationAnimation
    void startYTranslationAnimation(android.view.View,com.android.systemui.statusbar.stack.AnimationProperties) -> startYTranslationAnimation
    void startZTranslationAnimation(android.view.View,com.android.systemui.statusbar.stack.AnimationProperties) -> startZTranslationAnimation
    void updateAlphaAnimation(android.view.View) -> updateAlphaAnimation
    void updateAnimation(android.view.View,com.android.systemui.statusbar.notification.PropertyAnimator$AnimatableProperty,float) -> updateAnimation
    void updateAnimationX(android.view.View) -> updateAnimationX
    void updateAnimationY(android.view.View) -> updateAnimationY
    void updateAnimationZ(android.view.View) -> updateAnimationZ
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$RecyclerListener -> android.support.v7.widget.RecyclerView$RecyclerListener:
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
android.support.v17.leanback.widget.BrowseFrameLayout$OnFocusSearchListener -> android.support.v17.leanback.widget.BrowseFrameLayout$OnFocusSearchListener:
    android.view.View onFocusSearch(android.view.View,int) -> onFocusSearch
com.android.systemui.fragments.-$Lambda$oMjsIgzgf00ltgUahSb1q6u3kKw -> com.android.systemui.fragments.-$Lambda$oMjsIgzgf00ltgUahSb1q6u3kKw:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(byte,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void accept(java.lang.Object) -> accept
android.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> android.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    boolean mBeforeStart -> mBeforeStart
    android.arch.core.internal.SafeIterableMap this$0 -> this$0
    android.arch.core.internal.SafeIterableMap$Entry mCurrent -> mCurrent
    void <init>(android.arch.core.internal.SafeIterableMap) -> <init>
    java.util.Map$Entry next() -> next
    void <init>(android.arch.core.internal.SafeIterableMap,android.arch.core.internal.SafeIterableMap$1) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.provider.SelfDestructiveThread$2 -> android.support.v4.provider.SelfDestructiveThread$2:
    android.os.Handler val$callingHandler -> val$callingHandler
    android.support.v4.provider.SelfDestructiveThread$ReplyCallback val$reply -> val$reply
    android.support.v4.provider.SelfDestructiveThread this$0 -> this$0
    java.util.concurrent.Callable val$callable -> val$callable
    void <init>(android.support.v4.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,android.support.v4.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.PreviewInflater$WidgetInfo -> com.android.systemui.statusbar.policy.PreviewInflater$WidgetInfo:
    java.lang.String contextPackage -> contextPackage
    int layoutId -> layoutId
    void <init>() -> <init>
    void <init>(com.android.systemui.statusbar.policy.PreviewInflater$WidgetInfo) -> <init>
android.support.v7.app.MediaRouteControllerDialog$ClickListener -> android.support.v7.app.MediaRouteControllerDialog$ClickListener:
    android.support.v7.app.MediaRouteControllerDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteControllerDialog) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl -> com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl:
    android.content.ContentResolver mContentResolver -> mContentResolver
    android.content.Context mContext -> mContext
    android.net.Uri mDeviceProvisionedUri -> mDeviceProvisionedUri
    java.util.ArrayList mListeners -> mListeners
    android.database.ContentObserver mSettingsObserver -> mSettingsObserver
    android.net.Uri mUserSetupUri -> mUserSetupUri
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.DeviceProvisionedController$DeviceProvisionedListener) -> addCallback
    int getCurrentUser() -> getCurrentUser
    boolean isDeviceProvisioned() -> isDeviceProvisioned
    boolean isUserSetup(int) -> isUserSetup
    void notifyProvisionedChanged() -> notifyProvisionedChanged
    void notifySetupChanged() -> notifySetupChanged
    void notifyUserChanged() -> notifyUserChanged
    void onUserSwitched(int) -> onUserSwitched
    void removeCallback(com.android.systemui.statusbar.policy.DeviceProvisionedController$DeviceProvisionedListener) -> removeCallback
    void startListening(int) -> startListening
    void stopListening() -> stopListening
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
    android.net.Uri -get0(com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl) -> -get0
    void -wrap0(com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl) -> -wrap1
com.android.systemui.plugins.PluginInstanceManager$PluginInfo -> com.android.systemui.plugins.PluginInstanceManager$PluginInfo:
    java.lang.String mClass -> mClass
    java.lang.String mPackage -> mPackage
    java.lang.Object mPlugin -> mPlugin
    android.content.Context mPluginContext -> mPluginContext
    com.android.systemui.plugins.VersionInfo mVersion -> mVersion
    void <init>(java.lang.String,java.lang.String,java.lang.Object,android.content.Context,com.android.systemui.plugins.VersionInfo) -> <init>
    java.lang.String -get0(com.android.systemui.plugins.PluginInstanceManager$PluginInfo) -> -get0
    android.content.Context -get1(com.android.systemui.plugins.PluginInstanceManager$PluginInfo) -> -get1
    com.android.systemui.plugins.VersionInfo -get2(com.android.systemui.plugins.PluginInstanceManager$PluginInfo) -> -get2
com.android.systemui.statusbar.policy.BluetoothController$Callback -> com.android.systemui.statusbar.policy.BluetoothController$Callback:
    void onBluetoothDevicesChanged() -> onBluetoothDevicesChanged
    void onBluetoothStateChange(boolean) -> onBluetoothStateChange
com.android.systemui.power.-$Lambda$rOQQRcS4IrQ-aVKdM_fEvP6v_JI -> com.android.systemui.power.-$Lambda$rOQQRcS4IrQ-aVKdM_fEvP6v_JI:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void run() -> run
com.android.systemui.statusbar.phone.KeyguardBottomAreaView$DefaultLeftButton -> com.android.systemui.statusbar.phone.KeyguardBottomAreaView$DefaultLeftButton:
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState mIconState -> mIconState
    com.android.systemui.statusbar.phone.KeyguardBottomAreaView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView) -> <init>
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    void <init>(com.android.systemui.statusbar.phone.KeyguardBottomAreaView,com.android.systemui.statusbar.phone.KeyguardBottomAreaView$DefaultLeftButton) -> <init>
com.android.systemui.SwipeHelper$1 -> com.android.systemui.SwipeHelper$1:
    com.android.systemui.SwipeHelper this$0 -> this$0
    android.view.MotionEvent val$ev -> val$ev
    void <init>(com.android.systemui.SwipeHelper,android.view.MotionEvent) -> <init>
    void run() -> run
android.support.v4.app.FragmentHostCallback -> android.support.v4.app.FragmentHostCallback:
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    boolean mLoadersStarted -> mLoadersStarted
    boolean mRetainLoaders -> mRetainLoaders
    int mWindowAnimations -> mWindowAnimations
    void doLoaderStart() -> doLoaderStart
    void doLoaderStop(boolean) -> doLoaderStop
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    android.os.Handler getHandler() -> getHandler
    void doLoaderDestroy() -> doLoaderDestroy
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> restoreLoaderNonConfig
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    android.app.Activity getActivity() -> getActivity
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
    void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> getFragmentManagerImpl
    android.content.Context getContext() -> getContext
    boolean getRetainLoaders() -> getRetainLoaders
    void reportLoaderStart() -> reportLoaderStart
    int onGetWindowAnimations() -> onGetWindowAnimations
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    boolean onHasView() -> onHasView
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    void inactivateFragment(java.lang.String) -> inactivateFragment
    android.view.View onFindViewById(int) -> onFindViewById
    void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
android.support.v7.graphics.Palette$Filter -> android.support.v7.graphics.Palette$Filter:
    boolean isAllowed(int,float[]) -> isAllowed
com.android.systemui.recents.events.ui.StackViewScrolledEvent -> com.android.systemui.recents.events.ui.StackViewScrolledEvent:
    android.util.MutableInt yMovement -> yMovement
    void <init>() -> <init>
    void updateY(int) -> updateY
android.support.v7.media.MediaRouteProvider$Callback -> android.support.v7.media.MediaRouteProvider$Callback:
    void <init>() -> <init>
    void onDescriptorChanged(android.support.v7.media.MediaRouteProvider,android.support.v7.media.MediaRouteProviderDescriptor) -> onDescriptorChanged
com.android.systemui.recents.-$Lambda$1-q0w1UUkVikUpJp0cXkOlx4SYg -> com.android.systemui.recents.-$Lambda$1-q0w1UUkVikUpJp0cXkOlx4SYg:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void run() -> run
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    java.lang.String getMediaId(java.lang.Object) -> getMediaId
com.android.systemui.statusbar.phone.ConfigurationControllerImpl -> com.android.systemui.statusbar.phone.ConfigurationControllerImpl:
    int mDensity -> mDensity
    float mFontScale -> mFontScale
    boolean mInCarMode -> mInCarMode
    android.content.res.Configuration mLastConfig -> mLastConfig
    java.util.ArrayList mListeners -> mListeners
    android.os.LocaleList mLocaleList -> mLocaleList
    int mUiMode -> mUiMode
    void <init>(android.content.Context) -> <init>
    void addCallback(com.android.systemui.statusbar.policy.ConfigurationController$ConfigurationListener) -> addCallback
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void removeCallback(com.android.systemui.statusbar.policy.ConfigurationController$ConfigurationListener) -> removeCallback
    void lambda$-com_android_systemui_statusbar_phone_ConfigurationControllerImpl_2304(android.content.res.Configuration,com.android.systemui.statusbar.policy.ConfigurationController$ConfigurationListener) -> lambda$-com_android_systemui_statusbar_phone_ConfigurationControllerImpl_2304
    void lambda$-com_android_systemui_statusbar_phone_ConfigurationControllerImpl_2747(com.android.systemui.statusbar.policy.ConfigurationController$ConfigurationListener) -> lambda$-com_android_systemui_statusbar_phone_ConfigurationControllerImpl_2747
    void lambda$-com_android_systemui_statusbar_phone_ConfigurationControllerImpl_3173(com.android.systemui.statusbar.policy.ConfigurationController$ConfigurationListener) -> lambda$-com_android_systemui_statusbar_phone_ConfigurationControllerImpl_3173
    void lambda$-com_android_systemui_statusbar_phone_ConfigurationControllerImpl_3441(com.android.systemui.statusbar.policy.ConfigurationController$ConfigurationListener) -> lambda$-com_android_systemui_statusbar_phone_ConfigurationControllerImpl_3441
    void addCallback(java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object) -> removeCallback
com.android.systemui.statusbar.car.CarNavigationBarController -> com.android.systemui.statusbar.car.CarNavigationBarController:
    android.content.Context mContext -> mContext
    int mCurrentFacetIndex -> mCurrentFacetIndex
    java.util.List mFacetCategories -> mFacetCategories
    android.support.v4.util.SimpleArrayMap mFacetCategoryMap -> mFacetCategoryMap
    android.util.SparseBooleanArray mFacetHasMultipleAppsCache -> mFacetHasMultipleAppsCache
    android.support.v4.util.SimpleArrayMap mFacetPackageMap -> mFacetPackageMap
    java.util.List mFacetPackages -> mFacetPackages
    com.android.systemui.statusbar.car.CarNavigationBarView mNavBar -> mNavBar
    java.util.List mNavButtons -> mNavButtons
    android.content.Intent mPersistentTaskIntent -> mPersistentTaskIntent
    com.android.systemui.statusbar.car.CarStatusBar mStatusBar -> mStatusBar
    void <init>(android.content.Context,com.android.systemui.statusbar.car.CarNavigationBarView,com.android.systemui.statusbar.car.CarStatusBar) -> <init>
    void bind() -> bind
    com.android.systemui.statusbar.car.CarNavigationButton createNavButton(android.graphics.drawable.Drawable) -> createNavButton
    boolean facetHasMultiplePackages(int) -> facetHasMultiplePackages
    java.lang.String getPackageCategory(java.lang.String) -> getPackageCategory
    void initClickListeners(android.view.View,int,java.lang.String,java.lang.String) -> initClickListeners
    void initFacetFilterMaps(int,java.lang.String[],java.lang.String[]) -> initFacetFilterMaps
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onFacetClicked(android.content.Intent,int) -> onFacetClicked
    void onFacetLongClicked(android.content.Intent,int) -> onFacetLongClicked
    void onPackageChange(java.lang.String) -> onPackageChange
    void setCurrentFacet(int) -> setCurrentFacet
    void setupPersistentDockedTask() -> setupPersistentDockedTask
    void taskChanged(java.lang.String,int) -> taskChanged
    void lambda$-com_android_systemui_statusbar_car_CarNavigationBarController_13428(android.content.Intent,int,android.view.View) -> lambda$-com_android_systemui_statusbar_car_CarNavigationBarController_13428
    boolean lambda$-com_android_systemui_statusbar_car_CarNavigationBarController_13853(android.content.Intent,int,android.view.View) -> lambda$-com_android_systemui_statusbar_car_CarNavigationBarController_13853
android.support.v7.widget.RecyclerView$Orientation -> android.support.v7.widget.RecyclerView$Orientation:
com.android.systemui.egg.MLand$3 -> com.android.systemui.egg.MLand$3:
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand) -> <init>
    void run() -> run
com.android.systemui.stackdivider.Divider -> com.android.systemui.stackdivider.Divider:
    boolean mAdjustedForIme -> mAdjustedForIme
    com.android.systemui.stackdivider.DividerState mDividerState -> mDividerState
    com.android.systemui.stackdivider.Divider$DockDividerVisibilityListener mDockDividerVisibilityListener -> mDockDividerVisibilityListener
    com.android.systemui.stackdivider.ForcedResizableInfoActivityController mForcedResizableController -> mForcedResizableController
    boolean mHomeStackResizable -> mHomeStackResizable
    boolean mMinimized -> mMinimized
    com.android.systemui.stackdivider.DividerView mView -> mView
    boolean mVisible -> mVisible
    com.android.systemui.stackdivider.DividerWindowManager mWindowManager -> mWindowManager
    com.android.systemui.stackdivider.DividerView getView() -> getView
    void <init>() -> <init>
    void addDivider(android.content.res.Configuration) -> addDivider
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean isHomeStackResizable() -> isHomeStackResizable
    boolean isMinimized() -> isMinimized
    void notifyDockedStackExistsChanged(boolean) -> notifyDockedStackExistsChanged
    void onBusEvent(com.android.systemui.recents.events.ui.RecentsDrawnEvent) -> onBusEvent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void removeDivider() -> removeDivider
    void start() -> start
    void update(android.content.res.Configuration) -> update
    void updateMinimizedDockedStack(boolean,long,boolean) -> updateMinimizedDockedStack
    void updateTouchable() -> updateTouchable
    void updateVisibility(boolean) -> updateVisibility
    boolean -get0(com.android.systemui.stackdivider.Divider) -> -get0
    com.android.systemui.stackdivider.ForcedResizableInfoActivityController -get1(com.android.systemui.stackdivider.Divider) -> -get1
    boolean -get2(com.android.systemui.stackdivider.Divider) -> -get2
    boolean -get3(com.android.systemui.stackdivider.Divider) -> -get3
    com.android.systemui.stackdivider.DividerView -get4(com.android.systemui.stackdivider.Divider) -> -get4
    boolean -get5(com.android.systemui.stackdivider.Divider) -> -get5
    boolean -set0(com.android.systemui.stackdivider.Divider,boolean) -> -set0
    boolean -set1(com.android.systemui.stackdivider.Divider,boolean) -> -set1
    boolean -set2(com.android.systemui.stackdivider.Divider,boolean) -> -set2
    boolean -set3(com.android.systemui.stackdivider.Divider,boolean) -> -set3
    void -wrap0(com.android.systemui.stackdivider.Divider,boolean) -> -wrap0
    void -wrap1(com.android.systemui.stackdivider.Divider,boolean,long,boolean) -> -wrap1
    void -wrap2(com.android.systemui.stackdivider.Divider) -> -wrap2
    void -wrap3(com.android.systemui.stackdivider.Divider,boolean) -> -wrap3
com.android.systemui.statusbar.KeyguardAffordanceView$6 -> com.android.systemui.statusbar.KeyguardAffordanceView$6:
    com.android.systemui.statusbar.KeyguardAffordanceView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyguardAffordanceView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteController -> android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteController:
    java.lang.Object mRouteObj -> mRouteObj
    void onUpdateVolume(int) -> onUpdateVolume
    void <init>(java.lang.Object) -> <init>
    void onSetVolume(int) -> onSetVolume
android.support.v7.preference.UnPressableLinearLayout -> android.support.v7.preference.UnPressableLinearLayout:
    void dispatchSetPressed(boolean) -> dispatchSetPressed
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
android.support.v7.media.MediaRouterJellybeanMr2 -> android.support.v7.media.MediaRouterJellybeanMr2:
    void addCallback(java.lang.Object,int,java.lang.Object,int) -> addCallback
    void <init>() -> <init>
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
com.android.systemui.doze.DozeService -> com.android.systemui.doze.DozeService:
    boolean DEBUG -> DEBUG
    com.android.systemui.doze.DozeMachine mDozeMachine -> mDozeMachine
    com.android.systemui.plugins.DozeServicePlugin mDozePlugin -> mDozePlugin
    void <init>() -> <init>
    void dumpOnHandler(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpOnHandler
    void onCreate() -> onCreate
    void onDreamingStarted() -> onDreamingStarted
    void onDreamingStopped() -> onDreamingStopped
    void onPluginConnected(com.android.systemui.plugins.DozeServicePlugin,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.DozeServicePlugin) -> onPluginDisconnected
    void onRequestHideDoze() -> onRequestHideDoze
    void onRequestShowDoze() -> onRequestShowDoze
    void requestWakeUp() -> requestWakeUp
    void <clinit>() -> <clinit>
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
android.support.v7.appcompat.R$drawable -> android.support.v7.appcompat.R$drawable:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_dialog_material_background -> abc_dialog_material_background
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_material -> abc_ic_ab_back_material
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_indicator_material -> abc_ratingbar_indicator_material
    int abc_ratingbar_material -> abc_ratingbar_material
    int abc_ratingbar_small_material -> abc_ratingbar_small_material
    int abc_seekbar_thumb_material -> abc_seekbar_thumb_material
    int abc_seekbar_tick_mark_material -> abc_seekbar_tick_mark_material
    int abc_seekbar_track_material -> abc_seekbar_track_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_text_select_handle_left_mtrl_dark -> abc_text_select_handle_left_mtrl_dark
    int abc_text_select_handle_left_mtrl_light -> abc_text_select_handle_left_mtrl_light
    int abc_text_select_handle_middle_mtrl_dark -> abc_text_select_handle_middle_mtrl_dark
    int abc_text_select_handle_middle_mtrl_light -> abc_text_select_handle_middle_mtrl_light
    int abc_text_select_handle_right_mtrl_dark -> abc_text_select_handle_right_mtrl_dark
    int abc_text_select_handle_right_mtrl_light -> abc_text_select_handle_right_mtrl_light
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int abc_vector_test -> abc_vector_test
    void <init>() -> <init>
com.android.systemui.statusbar.car.-$Lambda$ELXiGoyPLg5ZablmtpJiw8QwRdc -> com.android.systemui.statusbar.car.-$Lambda$ELXiGoyPLg5ZablmtpJiw8QwRdc:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnOverscrollTopChangedListener -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$OnOverscrollTopChangedListener:
    void flingTopOverscroll(float,boolean) -> flingTopOverscroll
    void onOverscrollTopChanged(float,boolean) -> onOverscrollTopChanged
android.support.v7.widget.RecyclerView$6 -> android.support.v7.widget.RecyclerView$6:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
    void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    android.support.v4.app.FragmentTransitionCompat21 this$0 -> this$0
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
    void <init>(android.support.v4.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
com.android.systemui.qs.tileimpl.ButtonRelativeLayout -> com.android.systemui.qs.tileimpl.ButtonRelativeLayout:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
com.android.systemui.recents.ScreenPinningRequest$RequestWindowView$2 -> com.android.systemui.recents.ScreenPinningRequest$RequestWindowView$2:
    com.android.systemui.recents.ScreenPinningRequest$RequestWindowView this$1 -> this$1
    void <init>(com.android.systemui.recents.ScreenPinningRequest$RequestWindowView) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> mEntries
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
    void <init>(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
android.support.v7.widget.AbsActionBarView -> android.support.v7.widget.AbsActionBarView:
    boolean mEatingTouch -> mEatingTouch
    int mContentHeight -> mContentHeight
    android.support.v7.widget.ActionMenuView mMenuView -> mMenuView
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> mVisibilityAnim
    android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.content.Context mPopupContext -> mPopupContext
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    boolean mEatingHover -> mEatingHover
    int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setVisibility(int) -> setVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    void setContentHeight(int) -> setContentHeight
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int next(int,int,boolean) -> next
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    void -wrap0(android.support.v7.widget.AbsActionBarView,int) -> -wrap0
com.android.settingslib.bluetooth.BluetoothEventManager$ScanningStateChangedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$ScanningStateChangedHandler:
    boolean mStarted -> mStarted
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,boolean) -> <init>
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
com.android.systemui.statusbar.phone.LockscreenGestureLogger -> com.android.systemui.statusbar.phone.LockscreenGestureLogger:
    android.util.ArrayMap mLegacyMap -> mLegacyMap
    android.metrics.LogMaker mLogMaker -> mLogMaker
    com.android.internal.logging.MetricsLogger mMetricsLogger -> mMetricsLogger
    void <init>() -> <init>
    void write(int,int,int) -> write
    int safeLookup(int) -> safeLookup
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    android.os.IBinder asBinder() -> asBinder
    void <init>() -> <init>
    android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.systemui.qs.AutoSizingList -> com.android.systemui.qs.AutoSizingList:
    android.widget.ListAdapter mAdapter -> mAdapter
    java.lang.Runnable mBindChildren -> mBindChildren
    int mCount -> mCount
    android.database.DataSetObserver mDataObserver -> mDataObserver
    boolean mEnableAutoSizing -> mEnableAutoSizing
    android.os.Handler mHandler -> mHandler
    int mItemSize -> mItemSize
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getDesiredCount() -> getDesiredCount
    int getItemCount(int) -> getItemCount
    void onMeasure(int,int) -> onMeasure
    void postRebindChildren() -> postRebindChildren
    void rebindChildren() -> rebindChildren
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    int -get0(com.android.systemui.qs.AutoSizingList) -> -get0
    int -set0(com.android.systemui.qs.AutoSizingList,int) -> -set0
    int -wrap0(com.android.systemui.qs.AutoSizingList) -> -wrap0
    void -wrap1(com.android.systemui.qs.AutoSizingList) -> -wrap1
    void -wrap2(com.android.systemui.qs.AutoSizingList) -> -wrap2
com.android.systemui.statusbar.policy.BatteryController$BatteryStateChangeCallback -> com.android.systemui.statusbar.policy.BatteryController$BatteryStateChangeCallback:
    void onBatteryLevelChanged(int,boolean,boolean) -> onBatteryLevelChanged
    void onPowerSaveChanged(boolean) -> onPowerSaveChanged
com.android.systemui.fragments.FragmentHostManager$ExtensionFragmentManager -> com.android.systemui.fragments.FragmentHostManager$ExtensionFragmentManager:
    android.util.ArrayMap mExtensionLookup -> mExtensionLookup
    com.android.systemui.fragments.FragmentHostManager this$0 -> this$0
    void <init>(com.android.systemui.fragments.FragmentHostManager) -> <init>
    android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void reloadFragments() -> reloadFragments
    void setCurrentExtension(int,java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> setCurrentExtension
android.support.v7.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.view.menu.ActionMenuItemView$PopupCallback:
    void <init>() -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$2 -> com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$2:
    com.android.systemui.statusbar.phone.PhoneStatusBarPolicy this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> <init>
    void onHotspotChanged(boolean) -> onHotspotChanged
com.android.systemui.recents.-$Lambda$pgmD0Bxm8kFYR7cdcGYk6DUhgds -> com.android.systemui.recents.-$Lambda$pgmD0Bxm8kFYR7cdcGYk6DUhgds:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.AppCompatSpinner$DropdownPopup -> android.support.v7.widget.AppCompatSpinner$DropdownPopup:
    android.support.v7.widget.AppCompatSpinner this$0 -> this$0
    java.lang.CharSequence mHintText -> mHintText
    android.graphics.Rect mVisibleRect -> mVisibleRect
    android.widget.ListAdapter mAdapter -> mAdapter
    boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    void setPromptText(java.lang.CharSequence) -> setPromptText
    void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    void -wrap0(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> -wrap0
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void computeContentWidth() -> computeContentWidth
    java.lang.CharSequence getHintText() -> getHintText
    void show() -> show
android.arch.core.internal.SafeIterableMap$1 -> android.arch.core.internal.SafeIterableMap$1:
com.android.systemui.recents.Recents$5 -> com.android.systemui.recents.Recents$5:
    com.android.systemui.recents.Recents this$0 -> this$0
    void <init>(com.android.systemui.recents.Recents) -> <init>
    void run() -> run
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
com.android.systemui.recents.views.TaskView$1 -> com.android.systemui.recents.views.TaskView$1:
    void <init>(java.lang.String) -> <init>
    java.lang.Float get(com.android.systemui.recents.views.TaskView) -> get
    void setValue(com.android.systemui.recents.views.TaskView,float) -> setValue
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.android.systemui.qs.-$Lambda$aQqB1EGWxYUnP1gzYBQy1EITKlo -> com.android.systemui.qs.-$Lambda$aQqB1EGWxYUnP1gzYBQy1EITKlo:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void $m$3() -> $m$3
    void $m$4() -> $m$4
    void $m$5() -> $m$5
    void run() -> run
com.android.systemui.recents.views.Range -> com.android.systemui.recents.views.Range:
    float max -> max
    float min -> min
    float origin -> origin
    float relativeMax -> relativeMax
    float relativeMin -> relativeMin
    void <init>(float,float) -> <init>
    float getAbsoluteX(float) -> getAbsoluteX
    float getNormalizedX(float) -> getNormalizedX
    boolean isInRange(float) -> isInRange
    void offset(float) -> offset
com.android.systemui.statusbar.phone.KeyguardBouncer$2$1 -> com.android.systemui.statusbar.phone.KeyguardBouncer$2$1:
    com.android.systemui.statusbar.phone.KeyguardBouncer$2 this$1 -> this$1
    void <init>(com.android.systemui.statusbar.phone.KeyguardBouncer$2) -> <init>
    boolean onPreDraw() -> onPreDraw
com.android.systemui.volume.VolumeDialogComponent -> com.android.systemui.volume.VolumeDialogComponent:
    com.android.settingslib.applications.InterestingConfigChanges mConfigChanges -> mConfigChanges
    android.content.Context mContext -> mContext
    com.android.systemui.volume.VolumeDialogControllerImpl mController -> mController
    com.android.systemui.plugins.VolumeDialog mDialog -> mDialog
    com.android.systemui.statusbar.policy.ExtensionController$Extension mExtension -> mExtension
    com.android.systemui.SystemUI mSysui -> mSysui
    com.android.systemui.plugins.VolumeDialog$Callback mVolumeDialogCallback -> mVolumeDialogCallback
    android.media.VolumePolicy mVolumePolicy -> mVolumePolicy
    void <init>(com.android.systemui.SystemUI,android.content.Context,android.os.Handler) -> <init>
    void applyConfiguration() -> applyConfiguration
    com.android.systemui.plugins.VolumeDialog createDefault() -> createDefault
    void dismissNow() -> dismissNow
    void dispatchDemoCommand(java.lang.String,android.os.Bundle) -> dispatchDemoCommand
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void onUserActivity() -> onUserActivity
    void register() -> register
    void setVolumePolicy(boolean,boolean,boolean,int) -> setVolumePolicy
    void startSettings(android.content.Intent) -> startSettings
    com.android.systemui.plugins.VolumeDialog -com_android_systemui_volume_VolumeDialogComponent-mthref-0() -> -com_android_systemui_volume_VolumeDialogComponent-mthref-0
    void lambda$-com_android_systemui_volume_VolumeDialogComponent_3844(com.android.systemui.plugins.VolumeDialog) -> lambda$-com_android_systemui_volume_VolumeDialogComponent_3844
    void -wrap0(com.android.systemui.volume.VolumeDialogComponent,android.content.Intent) -> -wrap0
com.android.systemui.statusbar.phone.-$Lambda$-v8l8c9lks_ZWHIn3kV6nLWud14 -> com.android.systemui.statusbar.phone.-$Lambda$-v8l8c9lks_ZWHIn3kV6nLWud14:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.View,int,int,int,int,int,int,int,int) -> $m$0
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.systemui.statusbar.phone.DozeScrimController$3 -> com.android.systemui.statusbar.phone.DozeScrimController$3:
    com.android.systemui.statusbar.phone.DozeScrimController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.DozeScrimController) -> <init>
    void run() -> run
com.android.settingslib.wifi.AccessPointPreference$1 -> com.android.settingslib.wifi.AccessPointPreference$1:
    com.android.settingslib.wifi.AccessPointPreference this$0 -> this$0
    void run() -> run
    void <init>(com.android.settingslib.wifi.AccessPointPreference) -> <init>
com.android.systemui.volume.VolumeDialogControllerImpl$C$4 -> com.android.systemui.volume.VolumeDialogControllerImpl$C$4:
    com.android.systemui.volume.VolumeDialogControllerImpl$C this$1 -> this$1
    java.util.Map$Entry val$entry -> val$entry
    int val$layoutDirection -> val$layoutDirection
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl$C,java.util.Map$Entry,int) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    void addTarget(java.lang.Object,android.view.View) -> addTarget
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    void <init>() -> <init>
    boolean canHandle(java.lang.Object) -> canHandle
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
com.android.settingslib.drawer.DashboardCategory$1 -> com.android.settingslib.drawer.DashboardCategory$1:
    java.lang.Object[] newArray(int) -> newArray
    com.android.settingslib.drawer.DashboardCategory[] newArray(int) -> newArray
    void <init>() -> <init>
    com.android.settingslib.drawer.DashboardCategory createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.settingslib.core.lifecycle.events.OnAttach -> com.android.settingslib.core.lifecycle.events.OnAttach:
    void onAttach(android.content.Context) -> onAttach
android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1 -> android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1:
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation this$1 -> this$1
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    void <init>(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation) -> <init>
com.android.systemui.qs.tiles.IntentTile$PackageDrawableIcon -> com.android.systemui.qs.tiles.IntentTile$PackageDrawableIcon:
    java.lang.String mPackage -> mPackage
    int mResId -> mResId
    com.android.systemui.qs.tiles.IntentTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.IntentTile,java.lang.String,int) -> <init>
    boolean equals(java.lang.Object) -> equals
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
    java.lang.String toString() -> toString
android.support.v14.preference.PreferenceFragment$2 -> android.support.v14.preference.PreferenceFragment$2:
    android.support.v14.preference.PreferenceFragment this$0 -> this$0
    void <init>(android.support.v14.preference.PreferenceFragment) -> <init>
    void run() -> run
com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA$3 -> com.android.systemui.-$Lambda$I2vXdvxuaXHgW_yDfz07zk_J_pA$3:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.statusbar.ActivatableNotificationView$1 -> com.android.systemui.statusbar.ActivatableNotificationView$1:
    com.android.systemui.statusbar.ActivatableNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.ActivatableNotificationView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v7.app.AppCompatDelegate$NightMode -> android.support.v7.app.AppCompatDelegate$NightMode:
com.android.systemui.keyboard.KeyboardUI -> com.android.systemui.keyboard.KeyboardUI:
    boolean mBootCompleted -> mBootCompleted
    long mBootCompletedTime -> mBootCompletedTime
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mCachedDeviceManager -> mCachedDeviceManager
    android.content.Context mContext -> mContext
    com.android.systemui.keyboard.BluetoothDialog mDialog -> mDialog
    boolean mEnabled -> mEnabled
    com.android.systemui.keyboard.KeyboardUI$KeyboardHandler mHandler -> mHandler
    int mInTabletMode -> mInTabletMode
    java.lang.String mKeyboardName -> mKeyboardName
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalBluetoothAdapter -> mLocalBluetoothAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    int mScanAttempt -> mScanAttempt
    android.bluetooth.le.ScanCallback mScanCallback -> mScanCallback
    int mState -> mState
    com.android.systemui.keyboard.KeyboardUI$KeyboardUIHandler mUIHandler -> mUIHandler
    void <init>() -> <init>
    void bleAbortScanInternal(int) -> bleAbortScanInternal
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    com.android.settingslib.bluetooth.CachedBluetoothDevice getCachedBluetoothDevice(android.bluetooth.BluetoothDevice) -> getCachedBluetoothDevice
    com.android.settingslib.bluetooth.CachedBluetoothDevice getDiscoveredKeyboard() -> getDiscoveredKeyboard
    com.android.settingslib.bluetooth.CachedBluetoothDevice getPairedKeyboard() -> getPairedKeyboard
    void init() -> init
    boolean isUserSetupComplete() -> isUserSetupComplete
    void onBleScanFailedInternal() -> onBleScanFailedInternal
    void onBluetoothStateChangedInternal(int) -> onBluetoothStateChangedInternal
    void onBootCompleted() -> onBootCompleted
    void onBootCompletedInternal() -> onBootCompletedInternal
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDeviceAddedInternal(com.android.settingslib.bluetooth.CachedBluetoothDevice) -> onDeviceAddedInternal
    void onDeviceBondStateChangedInternal(com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> onDeviceBondStateChangedInternal
    void onShowErrorInternal(android.content.Context,java.lang.String,int) -> onShowErrorInternal
    void onTabletModeChanged(long,boolean) -> onTabletModeChanged
    void processKeyboardState() -> processKeyboardState
    void showBluetoothDialog() -> showBluetoothDialog
    void start() -> start
    void startScanning() -> startScanning
    java.lang.String stateToString(int) -> stateToString
    void stopScanning() -> stopScanning
    com.android.systemui.keyboard.BluetoothDialog -get0(com.android.systemui.keyboard.KeyboardUI) -> -get0
    com.android.systemui.keyboard.KeyboardUI$KeyboardHandler -get1(com.android.systemui.keyboard.KeyboardUI) -> -get1
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.systemui.keyboard.KeyboardUI) -> -get2
    com.android.systemui.keyboard.BluetoothDialog -set0(com.android.systemui.keyboard.KeyboardUI,com.android.systemui.keyboard.BluetoothDialog) -> -set0
    int -set1(com.android.systemui.keyboard.KeyboardUI,int) -> -set1
    com.android.settingslib.bluetooth.CachedBluetoothDevice -wrap0(com.android.systemui.keyboard.KeyboardUI,android.bluetooth.BluetoothDevice) -> -wrap0
    void -wrap1(com.android.systemui.keyboard.KeyboardUI,int) -> -wrap1
    void -wrap2(com.android.systemui.keyboard.KeyboardUI) -> -wrap2
    void -wrap3(com.android.systemui.keyboard.KeyboardUI) -> -wrap3
    void -wrap4(com.android.systemui.keyboard.KeyboardUI,int) -> -wrap4
    void -wrap5(com.android.systemui.keyboard.KeyboardUI,com.android.settingslib.bluetooth.CachedBluetoothDevice) -> -wrap5
    void -wrap6(com.android.systemui.keyboard.KeyboardUI,com.android.settingslib.bluetooth.CachedBluetoothDevice,int) -> -wrap6
    void -wrap7(com.android.systemui.keyboard.KeyboardUI,android.content.Context,java.lang.String,int) -> -wrap7
    void -wrap8(com.android.systemui.keyboard.KeyboardUI) -> -wrap8
android.support.v7.media.RemoteControlClientCompat -> android.support.v7.media.RemoteControlClientCompat:
    void setPlaybackInfo(android.support.v7.media.RemoteControlClientCompat$PlaybackInfo) -> setPlaybackInfo
com.android.systemui.statusbar.phone.PanelView$3 -> com.android.systemui.statusbar.phone.PanelView$3:
    boolean mCancelled -> mCancelled
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    boolean val$collapseWhenFinished -> val$collapseWhenFinished
    void <init>(com.android.systemui.statusbar.phone.PanelView,boolean) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.ActionMenuView$ActionMenuChildView -> android.support.v7.widget.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
com.android.systemui.util.wakelock.WakeLock -> com.android.systemui.util.wakelock.WakeLock:
    java.lang.Runnable wrap(java.lang.Runnable) -> wrap
    void acquire() -> acquire
    void release() -> release
    com.android.systemui.util.wakelock.WakeLock createPartial(android.content.Context,java.lang.String) -> createPartial
    android.os.PowerManager$WakeLock createPartialInner(android.content.Context,java.lang.String) -> createPartialInner
    com.android.systemui.util.wakelock.WakeLock wrap(android.os.PowerManager$WakeLock) -> wrap
    java.lang.Runnable wrapImpl(com.android.systemui.util.wakelock.WakeLock,java.lang.Runnable) -> wrapImpl
    void lambda$-com_android_systemui_util_wakelock_WakeLock_1570(com.android.systemui.util.wakelock.WakeLock,java.lang.Runnable) -> lambda$-com_android_systemui_util_wakelock_WakeLock_1570
com.android.systemui.statusbar.policy.UserSwitcherController$3 -> com.android.systemui.statusbar.policy.UserSwitcherController$3:
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    void run() -> run
com.android.systemui.statusbar.NotificationHeaderUtil$3 -> com.android.systemui.statusbar.NotificationHeaderUtil$3:
    void <init>() -> <init>
    boolean compare(android.view.View,android.view.View,java.lang.Object,java.lang.Object) -> compare
com.android.systemui.statusbar.phone.VelocityTrackerInterface -> com.android.systemui.statusbar.phone.VelocityTrackerInterface:
    void addMovement(android.view.MotionEvent) -> addMovement
    void computeCurrentVelocity(int) -> computeCurrentVelocity
    float getXVelocity() -> getXVelocity
    float getYVelocity() -> getYVelocity
    void recycle() -> recycle
com.android.systemui.statusbar.phone.StatusBarWindowManager -> com.android.systemui.statusbar.phone.StatusBarWindowManager:
    android.app.IActivityManager mActivityManager -> mActivityManager
    int mBarHeight -> mBarHeight
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.phone.StatusBarWindowManager$State mCurrentState -> mCurrentState
    boolean mHasTopUi -> mHasTopUi
    boolean mHasTopUiChanged -> mHasTopUiChanged
    boolean mKeyguardScreenRotation -> mKeyguardScreenRotation
    com.android.systemui.statusbar.phone.StatusBarWindowManager$OtherwisedCollapsedListener mListener -> mListener
    android.view.WindowManager$LayoutParams mLp -> mLp
    android.view.WindowManager$LayoutParams mLpChanged -> mLpChanged
    float mScreenBrightnessDoze -> mScreenBrightnessDoze
    android.view.View mStatusBarView -> mStatusBarView
    android.view.WindowManager mWindowManager -> mWindowManager
    void setDozeScreenBrightness(int) -> setDozeScreenBrightness
    void setScrimsVisible(boolean) -> setScrimsVisible
    void setBackdropShowing(boolean) -> setBackdropShowing
    void setQsExpanded(boolean) -> setQsExpanded
    void setHeadsUpShowing(boolean) -> setHeadsUpShowing
    void setForceStatusBarVisible(boolean) -> setForceStatusBarVisible
    void setForceWindowCollapsed(boolean) -> setForceWindowCollapsed
    void setPanelExpanded(boolean) -> setPanelExpanded
    void setPanelVisible(boolean) -> setPanelVisible
    void setStatusBarFocusable(boolean) -> setStatusBarFocusable
    void add(android.view.View,int) -> add
    void setBarHeight(int) -> setBarHeight
    void setKeyguardDark(boolean) -> setKeyguardDark
    void setStatusBarState(int) -> setStatusBarState
    void setDozing(boolean) -> setDozing
    void setForceDozeBrightness(boolean) -> setForceDozeBrightness
    void <init>(android.content.Context) -> <init>
    void adjustScreenOrientation(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> adjustScreenOrientation
    void apply(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> apply
    void applyBrightness(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyBrightness
    void applyFitsSystemWindows(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyFitsSystemWindows
    void applyFocusableFlag(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyFocusableFlag
    void applyForceStatusBarVisibleFlag(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyForceStatusBarVisibleFlag
    void applyHasTopUi(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyHasTopUi
    void applyHeight(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyHeight
    void applyInputFeatures(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyInputFeatures
    void applyKeyguardFlags(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyKeyguardFlags
    void applyModalFlag(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyModalFlag
    void applySleepToken(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applySleepToken
    void applyUserActivityTimeout(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> applyUserActivityTimeout
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean isExpanded(com.android.systemui.statusbar.phone.StatusBarWindowManager$State) -> isExpanded
    boolean isShowingWallpaper() -> isShowingWallpaper
    void onRemoteInputActive(boolean) -> onRemoteInputActive
    void setBouncerShowing(boolean) -> setBouncerShowing
    void setForcePluginOpen(boolean) -> setForcePluginOpen
    void setKeyguardFadingAway(boolean) -> setKeyguardFadingAway
    void setKeyguardNeedsInput(boolean) -> setKeyguardNeedsInput
    void setKeyguardOccluded(boolean) -> setKeyguardOccluded
    void setKeyguardShowing(boolean) -> setKeyguardShowing
    void setStateListener(com.android.systemui.statusbar.phone.StatusBarWindowManager$OtherwisedCollapsedListener) -> setStateListener
    boolean shouldEnableKeyguardScreenRotation() -> shouldEnableKeyguardScreenRotation
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.statusbar.phone.PanelView$9 -> com.android.systemui.statusbar.phone.PanelView$9:
    com.android.systemui.statusbar.phone.PanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PanelView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.plugins.IntentButtonProvider$IntentButton -> com.android.systemui.plugins.IntentButtonProvider$IntentButton:
    android.content.Intent getIntent() -> getIntent
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState getIcon() -> getIcon
android.support.v17.leanback.R$id -> android.support.v17.leanback.R$id:
    int bar1 -> bar1
    int bar2 -> bar2
    int bar3 -> bar3
    int description -> description
    int guidance_breadcrumb -> guidance_breadcrumb
    int guidance_description -> guidance_description
    int guidance_icon -> guidance_icon
    int guidance_title -> guidance_title
    int guidedactions_sub_list -> guidedactions_sub_list
    int icon -> icon
    int info_field -> info_field
    int lb_parallax_source -> lb_parallax_source
    int lb_row_container_header_dock -> lb_row_container_header_dock
    int lb_search_bar_badge -> lb_search_bar_badge
    int lb_search_bar_items -> lb_search_bar_items
    int lb_search_bar_speech_orb -> lb_search_bar_speech_orb
    int lb_search_text_editor -> lb_search_text_editor
    int lb_slide_transition_value -> lb_slide_transition_value
    int main_image -> main_image
    int picker -> picker
    int playback_progress -> playback_progress
    int row_content -> row_content
    int search_orb -> search_orb
    int title -> title
    int title_badge -> title_badge
    int title_orb -> title_orb
    int title_text -> title_text
    int transitionPosition -> transitionPosition
    void <init>() -> <init>
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
com.android.systemui.screenshot.GlobalScreenshot$3 -> com.android.systemui.screenshot.GlobalScreenshot$3:
    com.android.systemui.screenshot.GlobalScreenshot this$0 -> this$0
    void <init>(com.android.systemui.screenshot.GlobalScreenshot) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$3 -> com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$3:
    com.android.systemui.statusbar.phone.PhoneStatusBarPolicy this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> <init>
    void onCastDevicesChanged() -> onCastDevicesChanged
com.android.systemui.volume.VolumeDialogMotion$1 -> com.android.systemui.volume.VolumeDialogMotion$1:
    com.android.systemui.volume.VolumeDialogMotion this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogMotion) -> <init>
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.systemui.recents.views.TaskStackView$4 -> com.android.systemui.recents.views.TaskStackView$4:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskStackView) -> <init>
    void run() -> run
com.android.systemui.recents.views.TaskStackView$6 -> com.android.systemui.recents.views.TaskStackView$6:
    com.android.systemui.recents.views.TaskStackView this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskStackView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentTransitionImpl$1 -> android.support.v4.app.FragmentTransitionImpl$1:
    android.support.v4.app.FragmentTransitionImpl this$0 -> this$0
    int val$numSharedElements -> val$numSharedElements
    java.util.ArrayList val$sharedElementsOut -> val$sharedElementsOut
    java.util.ArrayList val$outNames -> val$outNames
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    java.util.ArrayList val$inNames -> val$inNames
    void <init>(android.support.v4.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    void run() -> run
android.support.v17.leanback.widget.NonOverlappingRelativeLayout -> android.support.v17.leanback.widget.NonOverlappingRelativeLayout:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$1 -> com.android.systemui.recents.misc.-$Lambda$_cQrKcY7GDLaa8hAVN9aWKF9fdw$1:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void $m$1() -> $m$1
    void $m$2() -> $m$2
    void run() -> run
com.android.systemui.recents.events.activity.LaunchMostRecentTaskRequestEvent -> com.android.systemui.recents.events.activity.LaunchMostRecentTaskRequestEvent:
    void <init>() -> <init>
com.android.systemui.pip.PipUI -> com.android.systemui.pip.PipUI:
    com.android.systemui.pip.BasePipManager mPipManager -> mPipManager
    boolean mSupportsPip -> mSupportsPip
    void <init>() -> <init>
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void showPictureInPictureMenu() -> showPictureInPictureMenu
    void start() -> start
com.android.systemui.qs.SlashDrawable -> com.android.systemui.qs.SlashDrawable:
    boolean mAnimationEnabled -> mAnimationEnabled
    float mCurrentSlashLength -> mCurrentSlashLength
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Path mPath -> mPath
    float mRotation -> mRotation
    android.util.FloatProperty mSlashLengthProp -> mSlashLengthProp
    android.graphics.RectF mSlashRect -> mSlashRect
    boolean mSlashed -> mSlashed
    android.content.res.ColorStateList mTintList -> mTintList
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    float scale(float,int) -> scale
    void setAlpha(int) -> setAlpha
    void setAnimationEnabled(boolean) -> setAnimationEnabled
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    void setDrawableTintList(android.content.res.ColorStateList) -> setDrawableTintList
    void setRotation(float) -> setRotation
    void setSlashed(boolean) -> setSlashed
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void updateRect(float,float,float,float) -> updateRect
    void lambda$-com_android_systemui_qs_SlashDrawable_4484(android.animation.ValueAnimator) -> lambda$-com_android_systemui_qs_SlashDrawable_4484
    float -get0(com.android.systemui.qs.SlashDrawable) -> -get0
    float -set0(com.android.systemui.qs.SlashDrawable,float) -> -set0
com.android.systemui.qs.NonInterceptingScrollView -> com.android.systemui.qs.NonInterceptingScrollView:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent -> com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent:
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent[] _emptyArray -> _emptyArray
    long timestamp_ -> timestamp_
    int type_ -> type_
    int bitField0_ -> bitField0_
    long timeOffsetNanos_ -> timeOffsetNanos_
    float[] values -> values
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent[] emptyArray() -> emptyArray
    void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
    int computeSerializedSize() -> computeSerializedSize
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent setTimestamp(long) -> setTimestamp
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent setTimeOffsetNanos(long) -> setTimeOffsetNanos
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent clear() -> clear
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto$Session$SensorEvent setType(int) -> setType
    void <init>() -> <init>
    com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
com.android.systemui.screenshot.GlobalScreenshot -> com.android.systemui.screenshot.GlobalScreenshot:
    android.widget.ImageView mBackgroundView -> mBackgroundView
    float mBgPadding -> mBgPadding
    float mBgPaddingScale -> mBgPaddingScale
    android.media.MediaActionSound mCameraSound -> mCameraSound
    android.content.Context mContext -> mContext
    android.view.Display mDisplay -> mDisplay
    android.graphics.Matrix mDisplayMatrix -> mDisplayMatrix
    android.util.DisplayMetrics mDisplayMetrics -> mDisplayMetrics
    int mNotificationIconSize -> mNotificationIconSize
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    int mPreviewHeight -> mPreviewHeight
    int mPreviewWidth -> mPreviewWidth
    android.os.AsyncTask mSaveInBgTask -> mSaveInBgTask
    android.graphics.Bitmap mScreenBitmap -> mScreenBitmap
    android.animation.AnimatorSet mScreenshotAnimation -> mScreenshotAnimation
    android.widget.ImageView mScreenshotFlash -> mScreenshotFlash
    android.view.View mScreenshotLayout -> mScreenshotLayout
    com.android.systemui.screenshot.ScreenshotSelectorView mScreenshotSelectorView -> mScreenshotSelectorView
    android.widget.ImageView mScreenshotView -> mScreenshotView
    android.view.WindowManager$LayoutParams mWindowLayoutParams -> mWindowLayoutParams
    android.view.WindowManager mWindowManager -> mWindowManager
    void notifyScreenshotError(android.content.Context,android.app.NotificationManager,int) -> notifyScreenshotError
    void <init>(android.content.Context) -> <init>
    android.animation.ValueAnimator createScreenshotDropInAnimation() -> createScreenshotDropInAnimation
    android.animation.ValueAnimator createScreenshotDropOutAnimation(int,int,boolean,boolean) -> createScreenshotDropOutAnimation
    float getDegreesForRotation(int) -> getDegreesForRotation
    void saveScreenshotInWorkerThread(java.lang.Runnable) -> saveScreenshotInWorkerThread
    void startAnimation(java.lang.Runnable,int,int,boolean,boolean) -> startAnimation
    void stopScreenshot() -> stopScreenshot
    void takeScreenshot(java.lang.Runnable,boolean,boolean) -> takeScreenshot
    void takeScreenshot(java.lang.Runnable,boolean,boolean,int,int,int,int) -> takeScreenshot
    void takeScreenshotPartial(java.lang.Runnable,boolean,boolean) -> takeScreenshotPartial
    android.widget.ImageView -get0(com.android.systemui.screenshot.GlobalScreenshot) -> -get0
    float -get1(com.android.systemui.screenshot.GlobalScreenshot) -> -get1
    android.media.MediaActionSound -get2(com.android.systemui.screenshot.GlobalScreenshot) -> -get2
    android.animation.AnimatorSet -get3(com.android.systemui.screenshot.GlobalScreenshot) -> -get3
    android.widget.ImageView -get4(com.android.systemui.screenshot.GlobalScreenshot) -> -get4
    android.view.View -get5(com.android.systemui.screenshot.GlobalScreenshot) -> -get5
    com.android.systemui.screenshot.ScreenshotSelectorView -get6(com.android.systemui.screenshot.GlobalScreenshot) -> -get6
    android.widget.ImageView -get7(com.android.systemui.screenshot.GlobalScreenshot) -> -get7
    android.view.WindowManager -get8(com.android.systemui.screenshot.GlobalScreenshot) -> -get8
    android.graphics.Bitmap -set0(com.android.systemui.screenshot.GlobalScreenshot,android.graphics.Bitmap) -> -set0
    void -wrap0(com.android.systemui.screenshot.GlobalScreenshot,java.lang.Runnable) -> -wrap0
com.android.keyguard.KeyguardUpdateMonitor$6 -> com.android.keyguard.KeyguardUpdateMonitor$6:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void onLockoutReset() -> onLockoutReset
com.android.systemui.statusbar.stack.ExpandableViewState$2 -> com.android.systemui.statusbar.stack.ExpandableViewState$2:
    boolean mWasCancelled -> mWasCancelled
    com.android.systemui.statusbar.stack.ExpandableViewState this$0 -> this$0
    com.android.systemui.statusbar.ExpandableView val$child -> val$child
    void <init>(com.android.systemui.statusbar.stack.ExpandableViewState,com.android.systemui.statusbar.ExpandableView) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v7.media.SystemMediaRouteProvider$JellybeanMr2Impl -> android.support.v7.media.SystemMediaRouteProvider$JellybeanMr2Impl:
    void <init>(android.content.Context,android.support.v7.media.SystemMediaRouteProvider$SyncCallback) -> <init>
    boolean isConnecting(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord) -> isConnecting
    void selectRoute(java.lang.Object) -> selectRoute
    void updateUserRouteProperties(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$UserRouteRecord) -> updateUserRouteProperties
    void updateCallback() -> updateCallback
    java.lang.Object getDefaultRoute() -> getDefaultRoute
    void onBuildSystemRouteDescriptor(android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$SystemRouteRecord,android.support.v7.media.MediaRouteDescriptor$Builder) -> onBuildSystemRouteDescriptor
android.support.v7.widget.ActivityChooserView$5 -> android.support.v7.widget.ActivityChooserView$5:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onChanged() -> onChanged
com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$5 -> com.android.systemui.statusbar.phone.KeyguardAffordanceHelper$5:
    com.android.systemui.statusbar.phone.KeyguardAffordanceHelper this$0 -> this$0
    com.android.systemui.statusbar.KeyguardAffordanceView val$targetView -> val$targetView
    boolean val$right -> val$right
    void <init>(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper,com.android.systemui.statusbar.KeyguardAffordanceView,boolean) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.volume.VolumeDialogControllerImpl$MediaSessionsCallbacks -> com.android.systemui.volume.VolumeDialogControllerImpl$MediaSessionsCallbacks:
    int mNextStream -> mNextStream
    java.util.HashMap mRemoteStreams -> mRemoteStreams
    com.android.systemui.volume.VolumeDialogControllerImpl this$0 -> this$0
    void <init>(com.android.systemui.volume.VolumeDialogControllerImpl) -> <init>
    void addStream(android.media.session.MediaSession$Token,java.lang.String) -> addStream
    android.media.session.MediaSession$Token findToken(int) -> findToken
    void onRemoteRemoved(android.media.session.MediaSession$Token) -> onRemoteRemoved
    void onRemoteUpdate(android.media.session.MediaSession$Token,java.lang.String,android.media.session.MediaController$PlaybackInfo) -> onRemoteUpdate
    void onRemoteVolumeChanged(android.media.session.MediaSession$Token,int) -> onRemoteVolumeChanged
    void setStreamVolume(int,int) -> setStreamVolume
    java.util.HashMap -get0(com.android.systemui.volume.VolumeDialogControllerImpl$MediaSessionsCallbacks) -> -get0
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
com.android.systemui.statusbar.-$Lambda$Riuh3zYDe2TsfH5PQkGwv6ei6pQ$2 -> com.android.systemui.statusbar.-$Lambda$Riuh3zYDe2TsfH5PQkGwv6ei6pQ$2:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(boolean,float,float) -> $m$0
    void onDoubleTapLog(boolean,float,float) -> onDoubleTapLog
com.android.keyguard.KeyguardUpdateMonitor$3 -> com.android.keyguard.KeyguardUpdateMonitor$3:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor) -> <init>
    void run() -> run
com.android.systemui.qs.tileimpl.QSFactoryImpl -> com.android.systemui.qs.tileimpl.QSFactoryImpl:
    com.android.systemui.qs.QSTileHost mHost -> mHost
    void <init>(com.android.systemui.qs.QSTileHost) -> <init>
    com.android.systemui.plugins.qs.QSTile createTile(java.lang.String) -> createTile
    com.android.systemui.plugins.qs.QSTileView createTileView(com.android.systemui.plugins.qs.QSTile,boolean) -> createTileView
com.android.systemui.qs.PathInterpolatorBuilder$PathInterpolator -> com.android.systemui.qs.PathInterpolatorBuilder$PathInterpolator:
    float[] mX -> mX
    float[] mY -> mY
    void <init>(float[],float[]) -> <init>
    float getInterpolation(float) -> getInterpolation
    void <init>(float[],float[],com.android.systemui.qs.PathInterpolatorBuilder$PathInterpolator) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
com.android.systemui.statusbar.phone.StatusBar$36 -> com.android.systemui.statusbar.phone.StatusBar$36:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.StatusBar) -> <init>
    void run() -> run
com.android.systemui.plugins.qs.QSTile$SignalState -> com.android.systemui.plugins.qs.QSTile$SignalState:
    boolean activityOut -> activityOut
    boolean activityIn -> activityIn
    int overlayIconId -> overlayIconId
    int VERSION -> VERSION
    boolean isOverlayIconWide -> isOverlayIconWide
    java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    com.android.systemui.plugins.qs.QSTile$State copy() -> copy
    void <init>() -> <init>
    boolean copyTo(com.android.systemui.plugins.qs.QSTile$State) -> copyTo
com.android.settingslib.graph.BluetoothDeviceLayerDrawable -> com.android.settingslib.graph.BluetoothDeviceLayerDrawable:
    com.android.settingslib.graph.BluetoothDeviceLayerDrawable$BluetoothDeviceLayerDrawableState mState -> mState
    void <init>(android.graphics.drawable.Drawable[]) -> <init>
    com.android.settingslib.graph.BluetoothDeviceLayerDrawable createLayerDrawable(android.content.Context,int,int,float) -> createLayerDrawable
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void setConstantState(android.content.Context,int,int,float) -> setConstantState
android.support.v7.app.AppCompatDelegateImplV9$4 -> android.support.v7.app.AppCompatDelegateImplV9$4:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void onAttachedFromWindow() -> onAttachedFromWindow
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onDetachedFromWindow() -> onDetachedFromWindow
com.android.systemui.recents.model.TaskKeyLruCache -> com.android.systemui.recents.model.TaskKeyLruCache:
    android.util.LruCache mCache -> mCache
    com.android.systemui.recents.model.TaskKeyLruCache$EvictionCallback mEvictionCallback -> mEvictionCallback
    void <init>(int,com.android.systemui.recents.model.TaskKeyLruCache$EvictionCallback) -> <init>
    void dump(java.lang.String,java.io.PrintWriter) -> dump
    void evictAllCache() -> evictAllCache
    java.lang.Object getCacheEntry(int) -> getCacheEntry
    void putCacheEntry(int,java.lang.Object) -> putCacheEntry
    void removeCacheEntry(int) -> removeCacheEntry
    void trimToSize(int) -> trimToSize
    com.android.systemui.recents.model.TaskKeyLruCache$EvictionCallback -get0(com.android.systemui.recents.model.TaskKeyLruCache) -> -get0
com.android.systemui.classifier.StrokeClassifier -> com.android.systemui.classifier.StrokeClassifier:
    void <init>() -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
com.android.systemui.qs.AutoAddTracker$1 -> com.android.systemui.qs.AutoAddTracker$1:
    com.android.systemui.qs.AutoAddTracker this$0 -> this$0
    void <init>(com.android.systemui.qs.AutoAddTracker,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.systemui.util.leak.LeakDetector -> com.android.systemui.util.leak.LeakDetector:
    boolean ENABLED -> ENABLED
    com.android.systemui.util.leak.TrackedCollections mTrackedCollections -> mTrackedCollections
    com.android.systemui.util.leak.TrackedGarbage mTrackedGarbage -> mTrackedGarbage
    com.android.systemui.util.leak.TrackedObjects mTrackedObjects -> mTrackedObjects
    void trackCollection(java.util.Collection,java.lang.String) -> trackCollection
    void trackGarbage(java.lang.Object) -> trackGarbage
    com.android.systemui.util.leak.TrackedGarbage getTrackedGarbage() -> getTrackedGarbage
    void trackInstance(java.lang.Object) -> trackInstance
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    com.android.systemui.util.leak.LeakDetector create() -> create
    void <init>(com.android.systemui.util.leak.TrackedCollections,com.android.systemui.util.leak.TrackedGarbage,com.android.systemui.util.leak.TrackedObjects) -> <init>
    void <clinit>() -> <clinit>
    boolean lambda$-com_android_systemui_util_leak_LeakDetector_3875(java.util.Collection) -> lambda$-com_android_systemui_util_leak_LeakDetector_3875
    boolean -com_android_systemui_util_leak_LeakDetector-mthref-0(java.util.Collection) -> -com_android_systemui_util_leak_LeakDetector-mthref-0
com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper -> com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper:
    android.view.View mActionsContainer -> mActionsContainer
    int mContentHeight -> mContentHeight
    int mMinHeightHint -> mMinHeightHint
    android.widget.ImageView mPicture -> mPicture
    android.widget.ProgressBar mProgressBar -> mProgressBar
    android.view.View mReplyAction -> mReplyAction
    android.widget.TextView mText -> mText
    android.widget.TextView mTitle -> mTitle
    android.graphics.Rect mTmpRect -> mTmpRect
    void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow) -> <init>
    void onContentUpdated(com.android.systemui.statusbar.ExpandableNotificationRow) -> onContentUpdated
    void updateTransformedTypes() -> updateTransformedTypes
    boolean disallowSingleClick(float,float) -> disallowSingleClick
    void fadeProgressDark(android.widget.ProgressBar,boolean,long) -> fadeProgressDark
    int interpolateColor(int,int,float) -> interpolateColor
    boolean isOnView(android.view.View,float,float) -> isOnView
    void resolveTemplateViews(android.service.notification.StatusBarNotification) -> resolveTemplateViews
    void setContentHeight(int,int) -> setContentHeight
    void setDark(boolean,boolean,long) -> setDark
    void setPictureDark(boolean,boolean,long) -> setPictureDark
    void setProgressBarDark(boolean,boolean,long) -> setProgressBarDark
    void updateActionOffset() -> updateActionOffset
    void updateInvertHelper() -> updateInvertHelper
    void updateProgressDark(android.widget.ProgressBar,float) -> updateProgressDark
    void updateProgressDark(android.widget.ProgressBar,boolean) -> updateProgressDark
    void lambda$-com_android_systemui_statusbar_notification_NotificationTemplateViewWrapper_9228(android.widget.ProgressBar,android.animation.ValueAnimator) -> lambda$-com_android_systemui_statusbar_notification_NotificationTemplateViewWrapper_9228
android.support.compat.R$id -> android.support.compat.R$id:
    int title -> title
    int info -> info
    int icon -> icon
    int chronometer -> chronometer
    int time -> time
    int notification_main_column_container -> notification_main_column_container
    int action_container -> action_container
    int action_image -> action_image
    int blocking -> blocking
    int normal -> normal
    int actions -> actions
    int async -> async
    int notification_background -> notification_background
    int icon_group -> icon_group
    int text -> text
    int action_divider -> action_divider
    int line3 -> line3
    int notification_main_column -> notification_main_column
    int line1 -> line1
    int right_icon -> right_icon
    int forever -> forever
    int right_side -> right_side
    int italic -> italic
    int text2 -> text2
    int action_text -> action_text
    int tag_transition_group -> tag_transition_group
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.media.MediaRouterJellybean$CallbackProxy -> android.support.v7.media.MediaRouterJellybean$CallbackProxy:
    android.support.v7.media.MediaRouterJellybean$Callback mCallback -> mCallback
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup) -> onRouteUngrouped
    void <init>(android.support.v7.media.MediaRouterJellybean$Callback) -> <init>
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
    void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int) -> onRouteGrouped
com.android.systemui.qs.tiles.HotspotTile$1 -> com.android.systemui.qs.tiles.HotspotTile$1:
    com.android.systemui.qs.tiles.HotspotTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.HotspotTile,android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void handleValueChanged(int) -> handleValueChanged
com.android.settingslib.bluetooth.LocalBluetoothManager$BluetoothManagerCallback -> com.android.settingslib.bluetooth.LocalBluetoothManager$BluetoothManagerCallback:
    void onBluetoothManagerInitialized(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager) -> onBluetoothManagerInitialized
android.support.v7.widget.helper.ItemTouchHelper$Callback -> android.support.v7.widget.helper.ItemTouchHelper$Callback:
    int mCachedMaxScrollSpeed -> mCachedMaxScrollSpeed
    android.view.animation.Interpolator sDragScrollInterpolator -> sDragScrollInterpolator
    android.support.v7.widget.helper.ItemTouchUIUtil sUICallback -> sUICallback
    android.view.animation.Interpolator sDragViewScrollCapInterpolator -> sDragViewScrollCapInterpolator
    void onMoved(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    float getMoveThreshold(android.support.v7.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    boolean hasDragFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> hasDragFlag
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    void onChildDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    int getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getMovementFlags
    void onSelectedChanged(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
    int makeMovementFlags(int,int) -> makeMovementFlags
    void onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSwiped
    float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    int interpolateOutOfBoundsScroll(android.support.v7.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    boolean onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> onMove
    int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    android.support.v7.widget.RecyclerView$ViewHolder chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    long getAnimationDuration(android.support.v7.widget.RecyclerView,int,float,float) -> getAnimationDuration
    int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    boolean canDropOver(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> canDropOver
    int getMaxDragScroll(android.support.v7.widget.RecyclerView) -> getMaxDragScroll
    float getSwipeThreshold(android.support.v7.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    int getAbsoluteMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    void onChildDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    void clearView(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> clearView
    void <clinit>() -> <clinit>
    int makeFlag(int,int) -> makeFlag
    void <init>() -> <init>
    int getBoundingBoxMargin() -> getBoundingBoxMargin
com.android.systemui.statusbar.policy.KeyguardUserSwitcher$Adapter -> com.android.systemui.statusbar.policy.KeyguardUserSwitcher$Adapter:
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.KeyguardUserSwitcher mKeyguardUserSwitcher -> mKeyguardUserSwitcher
    void <init>(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.KeyguardUserSwitcher) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.policy.BrightnessMirrorController$1 -> com.android.systemui.statusbar.policy.BrightnessMirrorController$1:
    com.android.systemui.statusbar.policy.BrightnessMirrorController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.BrightnessMirrorController) -> <init>
    void run() -> run
com.android.systemui.statusbar.ViewTransformationHelper$1 -> com.android.systemui.statusbar.ViewTransformationHelper$1:
    com.android.systemui.statusbar.ViewTransformationHelper this$0 -> this$0
    com.android.systemui.statusbar.TransformableView val$notification -> val$notification
    void <init>(com.android.systemui.statusbar.ViewTransformationHelper,com.android.systemui.statusbar.TransformableView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.settingslib.RestrictedLockUtils$EnforcedAdmin -> com.android.settingslib.RestrictedLockUtils$EnforcedAdmin:
    com.android.settingslib.RestrictedLockUtils$EnforcedAdmin MULTIPLE_ENFORCED_ADMIN -> MULTIPLE_ENFORCED_ADMIN
    int userId -> userId
    android.content.ComponentName component -> component
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean equals(java.lang.Object) -> equals
    void <init>() -> <init>
    void <init>(android.content.ComponentName,int) -> <init>
com.android.systemui.BatteryMeterView$SettingObserver -> com.android.systemui.BatteryMeterView$SettingObserver:
    com.android.systemui.BatteryMeterView this$0 -> this$0
    void <init>(com.android.systemui.BatteryMeterView,android.os.Handler) -> <init>
    void onChange(boolean,android.net.Uri) -> onChange
com.android.systemui.statusbar.phone.NavigationBarView$OnVerticalChangedListener -> com.android.systemui.statusbar.phone.NavigationBarView$OnVerticalChangedListener:
    void onVerticalChanged(boolean) -> onVerticalChanged
android.support.v4.widget.ImageViewCompat$LollipopViewCompatImpl -> android.support.v4.widget.ImageViewCompat$LollipopViewCompatImpl:
    android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    void <init>() -> <init>
    void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
    android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
com.android.systemui.tuner.TunerFragment -> com.android.systemui.tuner.TunerFragment:
    java.lang.String[] DEBUG_ONLY -> DEBUG_ONLY
    java.lang.CharSequence KEY_DOZE -> KEY_DOZE
    void <init>() -> <init>
    boolean alwaysOnAvailable() -> alwaysOnAvailable
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPause() -> onPause
    void onResume() -> onResume
    void <clinit>() -> <clinit>
com.android.settingslib.bluetooth.BluetoothEventManager$2 -> com.android.settingslib.bluetooth.BluetoothEventManager$2:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.systemui.qs.tiles.AirplaneModeTile -> com.android.systemui.qs.tiles.AirplaneModeTile:
    com.android.systemui.plugins.qs.QSTile$Icon mIcon -> mIcon
    boolean mListening -> mListening
    android.content.BroadcastReceiver mReceiver -> mReceiver
    com.android.systemui.qs.GlobalSetting mSetting -> mSetting
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void setEnabled(boolean) -> setEnabled
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    void -wrap0(com.android.systemui.qs.tiles.AirplaneModeTile,java.lang.Object) -> -wrap0
com.android.systemui.usb.StorageNotification -> com.android.systemui.usb.StorageNotification:
    android.content.BroadcastReceiver mFinishReceiver -> mFinishReceiver
    android.os.storage.StorageEventListener mListener -> mListener
    android.content.pm.PackageManager$MoveCallback mMoveCallback -> mMoveCallback
    android.util.SparseArray mMoves -> mMoves
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    android.content.BroadcastReceiver mSnoozeReceiver -> mSnoozeReceiver
    android.os.storage.StorageManager mStorageManager -> mStorageManager
    void <init>() -> <init>
    android.app.PendingIntent buildBrowsePendingIntent(android.os.storage.VolumeInfo) -> buildBrowsePendingIntent
    android.app.PendingIntent buildForgetPendingIntent(android.os.storage.VolumeRecord) -> buildForgetPendingIntent
    android.app.PendingIntent buildInitPendingIntent(android.os.storage.DiskInfo) -> buildInitPendingIntent
    android.app.PendingIntent buildInitPendingIntent(android.os.storage.VolumeInfo) -> buildInitPendingIntent
    android.app.Notification$Builder buildNotificationBuilder(android.os.storage.VolumeInfo,java.lang.CharSequence,java.lang.CharSequence) -> buildNotificationBuilder
    android.app.PendingIntent buildSnoozeIntent(java.lang.String) -> buildSnoozeIntent
    android.app.PendingIntent buildUnmountPendingIntent(android.os.storage.VolumeInfo) -> buildUnmountPendingIntent
    android.app.PendingIntent buildVolumeSettingsPendingIntent(android.os.storage.VolumeInfo) -> buildVolumeSettingsPendingIntent
    android.app.PendingIntent buildWizardMigratePendingIntent(com.android.systemui.usb.StorageNotification$MoveInfo) -> buildWizardMigratePendingIntent
    android.app.PendingIntent buildWizardMovePendingIntent(com.android.systemui.usb.StorageNotification$MoveInfo) -> buildWizardMovePendingIntent
    android.app.PendingIntent buildWizardReadyPendingIntent(android.os.storage.DiskInfo) -> buildWizardReadyPendingIntent
    int getSmallIcon(android.os.storage.DiskInfo,int) -> getSmallIcon
    boolean isTv() -> isTv
    void onDiskDestroyedInternal(android.os.storage.DiskInfo) -> onDiskDestroyedInternal
    void onDiskScannedInternal(android.os.storage.DiskInfo,int) -> onDiskScannedInternal
    void onMoveFinished(com.android.systemui.usb.StorageNotification$MoveInfo,int) -> onMoveFinished
    void onMoveProgress(com.android.systemui.usb.StorageNotification$MoveInfo,int,long) -> onMoveProgress
    void onPrivateVolumeStateChangedInternal(android.os.storage.VolumeInfo) -> onPrivateVolumeStateChangedInternal
    void onPublicVolumeStateChangedInternal(android.os.storage.VolumeInfo) -> onPublicVolumeStateChangedInternal
    android.app.Notification onVolumeBadRemoval(android.os.storage.VolumeInfo) -> onVolumeBadRemoval
    android.app.Notification onVolumeChecking(android.os.storage.VolumeInfo) -> onVolumeChecking
    android.app.Notification onVolumeEjecting(android.os.storage.VolumeInfo) -> onVolumeEjecting
    android.app.Notification onVolumeFormatting(android.os.storage.VolumeInfo) -> onVolumeFormatting
    android.app.Notification onVolumeMounted(android.os.storage.VolumeInfo) -> onVolumeMounted
    android.app.Notification onVolumeRemoved(android.os.storage.VolumeInfo) -> onVolumeRemoved
    void onVolumeStateChangedInternal(android.os.storage.VolumeInfo) -> onVolumeStateChangedInternal
    android.app.Notification onVolumeUnmountable(android.os.storage.VolumeInfo) -> onVolumeUnmountable
    android.app.Notification onVolumeUnmounted(android.os.storage.VolumeInfo) -> onVolumeUnmounted
    void start() -> start
    void updateMissingPrivateVolumes() -> updateMissingPrivateVolumes
    android.util.SparseArray -get0(com.android.systemui.usb.StorageNotification) -> -get0
    android.app.NotificationManager -get1(com.android.systemui.usb.StorageNotification) -> -get1
    android.os.storage.StorageManager -get2(com.android.systemui.usb.StorageNotification) -> -get2
    void -wrap0(com.android.systemui.usb.StorageNotification,android.os.storage.DiskInfo) -> -wrap0
    void -wrap1(com.android.systemui.usb.StorageNotification,android.os.storage.DiskInfo,int) -> -wrap1
    void -wrap2(com.android.systemui.usb.StorageNotification,com.android.systemui.usb.StorageNotification$MoveInfo,int) -> -wrap2
    void -wrap3(com.android.systemui.usb.StorageNotification,com.android.systemui.usb.StorageNotification$MoveInfo,int,long) -> -wrap3
    void -wrap4(com.android.systemui.usb.StorageNotification,android.os.storage.VolumeInfo) -> -wrap4
com.android.systemui.pip.phone.PipUtils -> com.android.systemui.pip.phone.PipUtils:
    android.util.Pair getTopPinnedActivity(android.content.Context,android.app.IActivityManager) -> getTopPinnedActivity
    void <init>() -> <init>
com.android.systemui.keyguard.KeyguardViewMediator$2 -> com.android.systemui.keyguard.KeyguardViewMediator$2:
    com.android.systemui.keyguard.KeyguardViewMediator this$0 -> this$0
    void <init>(com.android.systemui.keyguard.KeyguardViewMediator) -> <init>
    int getBouncerPromptReason() -> getBouncerPromptReason
    boolean isScreenOn() -> isScreenOn
    void keyguardDone(boolean,int) -> keyguardDone
    void keyguardDoneDrawing() -> keyguardDoneDrawing
    void keyguardDonePending(boolean,int) -> keyguardDonePending
    void keyguardGone() -> keyguardGone
    void onSecondaryDisplayShowingChanged(int) -> onSecondaryDisplayShowingChanged
    void playTrustedSound() -> playTrustedSound
    void readyForKeyguardDone() -> readyForKeyguardDone
    void resetKeyguard() -> resetKeyguard
    void setNeedsInput(boolean) -> setNeedsInput
    void userActivity() -> userActivity
com.android.keyguard.EmergencyButton$1 -> com.android.keyguard.EmergencyButton$1:
    com.android.keyguard.EmergencyButton this$0 -> this$0
    void <init>(com.android.keyguard.EmergencyButton) -> <init>
    void onPhoneStateChanged(int) -> onPhoneStateChanged
    void onServiceStateChanged(int,android.telephony.ServiceState) -> onServiceStateChanged
    void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants$State) -> onSimStateChanged
com.android.keyguard.KeyguardSecurityContainer -> com.android.keyguard.KeyguardSecurityContainer:
    com.android.keyguard.KeyguardSecurityCallback mCallback -> mCallback
    com.android.keyguard.KeyguardSecurityModel$SecurityMode mCurrentSecuritySelection -> mCurrentSecuritySelection
    com.android.internal.widget.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    com.android.keyguard.KeyguardSecurityCallback mNullCallback -> mNullCallback
    com.android.keyguard.KeyguardSecurityContainer$SecurityCallback mSecurityCallback -> mSecurityCallback
    com.android.keyguard.KeyguardSecurityModel mSecurityModel -> mSecurityModel
    com.android.keyguard.KeyguardSecurityViewFlipper mSecurityViewFlipper -> mSecurityViewFlipper
    com.android.keyguard.KeyguardUpdateMonitor mUpdateMonitor -> mUpdateMonitor
    int[] -com-android-keyguard-KeyguardSecurityModel$SecurityModeSwitchesValues -> -com-android-keyguard-KeyguardSecurityModel$SecurityModeSwitchesValues
    void showPrimarySecurityScreen(boolean) -> showPrimarySecurityScreen
    void setLockPatternUtils(com.android.internal.widget.LockPatternUtils) -> setLockPatternUtils
    void setSecurityCallback(com.android.keyguard.KeyguardSecurityContainer$SecurityCallback) -> setSecurityCallback
    void showPromptReason(int) -> showPromptReason
    void showMessage(java.lang.String,int) -> showMessage
    java.lang.CharSequence getCurrentSecurityModeContentDescription() -> getCurrentSecurityModeContentDescription
    boolean showNextSecurityScreenOrFinish(boolean,int) -> showNextSecurityScreenOrFinish
    void onPause() -> onPause
    void onResume(int) -> onResume
    void startAppearAnimation() -> startAppearAnimation
    boolean startDisappearAnimation(java.lang.Runnable) -> startDisappearAnimation
    boolean needsInput() -> needsInput
    com.android.keyguard.KeyguardSecurityModel$SecurityMode getSecurityMode() -> getSecurityMode
    com.android.keyguard.KeyguardSecurityModel$SecurityMode getCurrentSecurityMode() -> getCurrentSecurityMode
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getLayoutIdFor(com.android.keyguard.KeyguardSecurityModel$SecurityMode) -> getLayoutIdFor
    com.android.keyguard.KeyguardSecurityView getSecurityView(com.android.keyguard.KeyguardSecurityModel$SecurityMode) -> getSecurityView
    int getSecurityViewIdForMode(com.android.keyguard.KeyguardSecurityModel$SecurityMode) -> getSecurityViewIdForMode
    void onFinishInflate() -> onFinishInflate
    void reportFailedUnlockAttempt(int,int) -> reportFailedUnlockAttempt
    void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback) -> setKeyguardCallback
    void showAlmostAtWipeDialog(int,int,int) -> showAlmostAtWipeDialog
    void showDialog(java.lang.String,java.lang.String) -> showDialog
    void showSecurityScreen(com.android.keyguard.KeyguardSecurityModel$SecurityMode) -> showSecurityScreen
    void showTimeoutDialog(int,int) -> showTimeoutDialog
    void showWipeDialog(int,int) -> showWipeDialog
    void updateSecurityView(android.view.View) -> updateSecurityView
    android.content.Context -get0(com.android.keyguard.KeyguardSecurityContainer) -> -get0
    com.android.internal.widget.LockPatternUtils -get2(com.android.keyguard.KeyguardSecurityContainer) -> -get2
    com.android.keyguard.KeyguardSecurityContainer$SecurityCallback -get3(com.android.keyguard.KeyguardSecurityContainer) -> -get3
    void -wrap0(com.android.keyguard.KeyguardSecurityContainer,int,int) -> -wrap0
    int[] -getcom-android-keyguard-KeyguardSecurityModel$SecurityModeSwitchesValues() -> -getcom-android-keyguard-KeyguardSecurityModel$SecurityModeSwitchesValues
com.android.systemui.statusbar.policy.UserSwitcherController$2 -> com.android.systemui.statusbar.policy.UserSwitcherController$2:
    com.android.systemui.statusbar.policy.UserSwitcherController this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.UserSwitcherController) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void showLogoutNotification(int) -> showLogoutNotification
com.android.systemui.volume.VolumeDialogImpl$6 -> com.android.systemui.volume.VolumeDialogImpl$6:
    boolean mDragging -> mDragging
    android.graphics.Rect mSliderHitRect -> mSliderHitRect
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    com.android.systemui.volume.VolumeDialogImpl$VolumeRow val$row -> val$row
    void <init>(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.volume.VolumeDialogImpl$VolumeRow) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.systemui.recents.events.ui.DismissTaskViewEvent -> com.android.systemui.recents.events.ui.DismissTaskViewEvent:
    com.android.systemui.recents.views.TaskView taskView -> taskView
    void <init>(com.android.systemui.recents.views.TaskView) -> <init>
android.support.v17.leanback.widget.GridLayoutManager$SavedState -> android.support.v17.leanback.widget.GridLayoutManager$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Bundle childStates -> childStates
    int index -> index
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    int commit() -> commit
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
com.android.systemui.qs.tileimpl.QSIconViewImpl$1 -> com.android.systemui.qs.tileimpl.QSIconViewImpl$1:
    com.android.systemui.qs.tileimpl.QSIconViewImpl this$0 -> this$0
    android.graphics.drawable.Animatable2 val$a -> val$a
    void <init>(com.android.systemui.qs.tileimpl.QSIconViewImpl,android.graphics.drawable.Animatable2) -> <init>
    void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks -> android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks:
    void onFragmentViewCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    void onFragmentDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentDestroyed
    void onFragmentDetached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentDetached
    void onFragmentAttached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.content.Context) -> onFragmentAttached
    void onFragmentViewDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentViewDestroyed
    void onFragmentCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> onFragmentCreated
    void onFragmentPaused(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentPaused
    void onFragmentActivityCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> onFragmentActivityCreated
    void onFragmentPreAttached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.content.Context) -> onFragmentPreAttached
    void onFragmentResumed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentResumed
    void onFragmentStopped(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentStopped
    void onFragmentPreCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> onFragmentPreCreated
    void <init>() -> <init>
    void onFragmentSaveInstanceState(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> onFragmentSaveInstanceState
    void onFragmentStarted(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentStarted
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
    void <init>(android.support.v4.widget.ViewDragHelper) -> <init>
com.android.settingslib.bluetooth.OppProfile -> com.android.settingslib.bluetooth.OppProfile:
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    void <init>() -> <init>
com.android.systemui.qs.PageIndicator$1 -> com.android.systemui.qs.PageIndicator$1:
    com.android.systemui.qs.PageIndicator this$0 -> this$0
    void <init>(com.android.systemui.qs.PageIndicator) -> <init>
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.android.keyguard.KeyguardUpdateMonitor$StrongAuthTracker -> com.android.keyguard.KeyguardUpdateMonitor$StrongAuthTracker:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    boolean hasUserAuthenticatedSinceBoot() -> hasUserAuthenticatedSinceBoot
    void <init>(com.android.keyguard.KeyguardUpdateMonitor,android.content.Context) -> <init>
    boolean isUnlockingWithFingerprintAllowed() -> isUnlockingWithFingerprintAllowed
    void onStrongAuthRequiredChanged(int) -> onStrongAuthRequiredChanged
android.support.v7.app.AppCompatDelegateImplN -> android.support.v7.app.AppCompatDelegateImplN:
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl$PluginItem -> com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl$PluginItem:
    com.android.systemui.statusbar.policy.ExtensionController$PluginConverter mConverter -> mConverter
    java.lang.Object mItem -> mItem
    com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl this$1 -> this$1
    void <init>(com.android.systemui.statusbar.policy.ExtensionControllerImpl$ExtensionImpl,java.lang.String,java.lang.Class,com.android.systemui.statusbar.policy.ExtensionController$PluginConverter) -> <init>
    void destroy() -> destroy
    java.lang.Object get() -> get
    void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context) -> onPluginConnected
    void onPluginDisconnected(com.android.systemui.plugins.Plugin) -> onPluginDisconnected
    int sortOrder() -> sortOrder
com.android.systemui.statusbar.phone.NavigationBarFragment -> com.android.systemui.statusbar.phone.NavigationBarFragment:
    android.view.accessibility.AccessibilityManager$AccessibilityServicesStateChangeListener mAccessibilityListener -> mAccessibilityListener
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    com.android.systemui.assist.AssistManager mAssistManager -> mAssistManager
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    com.android.systemui.statusbar.CommandQueue mCommandQueue -> mCommandQueue
    android.content.ContentResolver mContentResolver -> mContentResolver
    int mDisabledFlags1 -> mDisabledFlags1
    com.android.systemui.stackdivider.Divider mDivider -> mDivider
    boolean mHomeBlockedThisTouch -> mHomeBlockedThisTouch
    long mLastLockToAppLongPress -> mLastLockToAppLongPress
    int mLayoutDirection -> mLayoutDirection
    com.android.systemui.statusbar.phone.LightBarController mLightBarController -> mLightBarController
    java.util.Locale mLocale -> mLocale
    com.android.systemui.statusbar.phone.NavigationBarFragment$MagnificationContentObserver mMagnificationObserver -> mMagnificationObserver
    int mNavigationBarMode -> mNavigationBarMode
    com.android.systemui.statusbar.phone.NavigationBarView mNavigationBarView -> mNavigationBarView
    int mNavigationBarWindowState -> mNavigationBarWindowState
    int mNavigationIconHints -> mNavigationIconHints
    com.android.systemui.recents.Recents mRecents -> mRecents
    android.view.IRotationWatcher$Stub mRotationWatcher -> mRotationWatcher
    com.android.systemui.statusbar.phone.StatusBar mStatusBar -> mStatusBar
    int mSystemUiVisibility -> mSystemUiVisibility
    android.view.WindowManager mWindowManager -> mWindowManager
    com.android.systemui.statusbar.phone.BarTransitions getBarTransitions() -> getBarTransitions
    void setLightBarController(com.android.systemui.statusbar.phone.LightBarController) -> setLightBarController
    void setCurrentSysuiVisibility(int) -> setCurrentSysuiVisibility
    android.view.View create(android.content.Context,com.android.systemui.fragments.FragmentHostManager$FragmentListener) -> create
    boolean isSemiTransparent() -> isSemiTransparent
    void checkNavBarModes() -> checkNavBarModes
    void finishBarAnimations() -> finishBarAnimations
    void disableAnimationsDuringHide(long) -> disableAnimationsDuringHide
    void <init>() -> <init>
    void disable(int,int,boolean) -> disable
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void notifyNavigationBarScreenOn() -> notifyNavigationBarScreenOn
    void onAccessibilityClick(android.view.View) -> onAccessibilityClick
    boolean onAccessibilityLongClick(android.view.View) -> onAccessibilityLongClick
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroy() -> onDestroy
    void onDestroyView() -> onDestroyView
    boolean onHomeLongClick(android.view.View) -> onHomeLongClick
    boolean onHomeTouch(android.view.View,android.view.MotionEvent) -> onHomeTouch
    boolean onLongPressBackRecents(android.view.View) -> onLongPressBackRecents
    boolean onLongPressRecents() -> onLongPressRecents
    boolean onNavigationTouch(android.view.View,android.view.MotionEvent) -> onNavigationTouch
    void onRecentsClick(android.view.View) -> onRecentsClick
    boolean onRecentsTouch(android.view.View,android.view.MotionEvent) -> onRecentsTouch
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onVerticalChanged(boolean) -> onVerticalChanged
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void prepareNavigationBarView() -> prepareNavigationBarView
    void refreshLayout(int) -> refreshLayout
    void repositionNavigationBar() -> repositionNavigationBar
    void setImeWindowStatus(android.os.IBinder,int,int,boolean) -> setImeWindowStatus
    void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect) -> setSystemUiVisibility
    void setWindowState(int,int) -> setWindowState
    boolean shouldDisableNavbarGestures() -> shouldDisableNavbarGestures
    void topAppWindowChanged(boolean) -> topAppWindowChanged
    void updateAccessibilityServicesState(android.view.accessibility.AccessibilityManager) -> updateAccessibilityServicesState
    void -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-0(android.view.accessibility.AccessibilityManager) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-0
    void -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-1(boolean) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-1
    boolean -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-2(android.view.View,android.view.MotionEvent) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-2
    void -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-3(android.view.View) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-3
    boolean -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-4(android.view.View,android.view.MotionEvent) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-4
    boolean -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-5(android.view.View) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-5
    boolean -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-6(android.view.View) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-6
    boolean -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-7(android.view.View,android.view.MotionEvent) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-7
    boolean -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-8(android.view.View) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-8
    void -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-9(android.view.View) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-9
    boolean -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-10(android.view.View) -> -com_android_systemui_statusbar_phone_NavigationBarFragment-mthref-10
    void lambda$-com_android_systemui_statusbar_phone_NavigationBarFragment_25313() -> lambda$-com_android_systemui_statusbar_phone_NavigationBarFragment_25313
    android.view.accessibility.AccessibilityManager -get0(com.android.systemui.statusbar.phone.NavigationBarFragment) -> -get0
    void -wrap0(com.android.systemui.statusbar.phone.NavigationBarFragment) -> -wrap0
    void -wrap1(com.android.systemui.statusbar.phone.NavigationBarFragment) -> -wrap1
    void -wrap2(com.android.systemui.statusbar.phone.NavigationBarFragment,android.view.accessibility.AccessibilityManager) -> -wrap2
com.android.systemui.plugins.NotificationListenerController -> com.android.systemui.plugins.NotificationListenerController:
    int VERSION -> VERSION
    java.lang.String ACTION -> ACTION
    boolean onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> onNotificationPosted
    android.service.notification.StatusBarNotification[] getActiveNotifications(android.service.notification.StatusBarNotification[]) -> getActiveNotifications
    android.service.notification.NotificationListenerService$RankingMap getCurrentRanking(android.service.notification.NotificationListenerService$RankingMap) -> getCurrentRanking
    void onListenerConnected(com.android.systemui.plugins.NotificationListenerController$NotificationProvider) -> onListenerConnected
    boolean onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap) -> onNotificationRemoved
com.android.systemui.pip.tv.PipControlsView$4 -> com.android.systemui.pip.tv.PipControlsView$4:
    com.android.systemui.pip.tv.PipControlsView this$0 -> this$0
    void <init>(com.android.systemui.pip.tv.PipControlsView) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.policy.OnHeadsUpChangedListener -> com.android.systemui.statusbar.policy.OnHeadsUpChangedListener:
    void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData$Entry,boolean) -> onHeadsUpStateChanged
    void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpPinned
    void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow) -> onHeadsUpUnPinned
    void onHeadsUpPinnedModeChanged(boolean) -> onHeadsUpPinnedModeChanged
com.android.systemui.statusbar.notification.HybridNotificationView -> com.android.systemui.statusbar.notification.HybridNotificationView:
    com.android.systemui.ViewInvertHelper mInvertHelper -> mInvertHelper
    android.widget.TextView mTextView -> mTextView
    android.widget.TextView mTitleView -> mTitleView
    com.android.systemui.statusbar.ViewTransformationHelper mTransformationHelper -> mTransformationHelper
    android.widget.TextView getTextView() -> getTextView
    android.widget.TextView getTitleView() -> getTitleView
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void bind(java.lang.CharSequence,java.lang.CharSequence) -> bind
    com.android.systemui.statusbar.notification.TransformState getCurrentState(int) -> getCurrentState
    void onFinishInflate() -> onFinishInflate
    void setDark(boolean,boolean,long) -> setDark
    void setVisible(boolean) -> setVisible
    void transformFrom(com.android.systemui.statusbar.TransformableView) -> transformFrom
    void transformFrom(com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable) -> transformTo
    void transformTo(com.android.systemui.statusbar.TransformableView,float) -> transformTo
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    java.util.Map colGetMap() -> colGetMap
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colClear() -> colClear
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    void <init>(android.support.v4.util.ArrayMap) -> <init>
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    int colGetSize() -> colGetSize
    void colRemoveAt(int) -> colRemoveAt
    void colPut(java.lang.Object,java.lang.Object) -> colPut
com.android.systemui.media.NotificationPlayer$Command -> com.android.systemui.media.NotificationPlayer$Command:
    android.media.AudioAttributes attributes -> attributes
    int code -> code
    android.content.Context context -> context
    boolean looping -> looping
    long requestTime -> requestTime
    android.net.Uri uri -> uri
    void <init>() -> <init>
    java.lang.String toString() -> toString
    void <init>(com.android.systemui.media.NotificationPlayer$Command) -> <init>
com.android.systemui.qs.external.TileServiceManager$2 -> com.android.systemui.qs.external.TileServiceManager$2:
    com.android.systemui.qs.external.TileServiceManager this$0 -> this$0
    void <init>(com.android.systemui.qs.external.TileServiceManager) -> <init>
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.android.systemui.keyguard.KeyguardLifecyclesDispatcher$1 -> com.android.systemui.keyguard.KeyguardLifecyclesDispatcher$1:
    com.android.systemui.keyguard.KeyguardLifecyclesDispatcher this$0 -> this$0
    void <init>(com.android.systemui.keyguard.KeyguardLifecyclesDispatcher) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.systemui.recents.views.TaskStackAnimationHelper$1 -> com.android.systemui.recents.views.TaskStackAnimationHelper$1:
    com.android.systemui.recents.views.TaskStackAnimationHelper this$0 -> this$0
    com.android.systemui.recents.misc.ReferenceCountedTrigger val$postAnimationTrigger -> val$postAnimationTrigger
    com.android.systemui.recents.views.TaskView val$tv -> val$tv
    void <init>(com.android.systemui.recents.views.TaskStackAnimationHelper,com.android.systemui.recents.misc.ReferenceCountedTrigger,com.android.systemui.recents.views.TaskView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.stackdivider.Divider$3 -> com.android.systemui.stackdivider.Divider$3:
    com.android.systemui.stackdivider.Divider this$0 -> this$0
    boolean val$exists -> val$exists
    void <init>(com.android.systemui.stackdivider.Divider,boolean) -> <init>
    void run() -> run
com.android.systemui.qs.tiles.UserDetailItemView -> com.android.systemui.qs.tiles.UserDetailItemView:
    int layoutResId -> layoutResId
    android.graphics.Typeface mActivatedTypeface -> mActivatedTypeface
    com.android.systemui.statusbar.phone.UserAvatarView mAvatar -> mAvatar
    android.widget.TextView mName -> mName
    android.graphics.Typeface mRegularTypeface -> mRegularTypeface
    android.view.View mRestrictedPadlock -> mRestrictedPadlock
    com.android.systemui.qs.tiles.UserDetailItemView convertOrInflate(android.content.Context,android.view.View,android.view.ViewGroup) -> convertOrInflate
    void bind(java.lang.String,android.graphics.drawable.Drawable,int) -> bind
    void bind(java.lang.String,android.graphics.Bitmap,int) -> bind
    void setDisabledByAdmin(boolean) -> setDisabledByAdmin
    void setEnabled(boolean) -> setEnabled
    void setAvatarEnabled(boolean) -> setAvatarEnabled
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void drawableStateChanged() -> drawableStateChanged
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onFinishInflate() -> onFinishInflate
    void updateTypeface() -> updateTypeface
    void <clinit>() -> <clinit>
android.support.v17.leanback.widget.BaseCardView$InfoOffsetAnimation -> android.support.v17.leanback.widget.BaseCardView$InfoOffsetAnimation:
    float mDelta -> mDelta
    android.support.v17.leanback.widget.BaseCardView this$0 -> this$0
    float mStartValue -> mStartValue
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void <init>(android.support.v17.leanback.widget.BaseCardView,float,float) -> <init>
android.support.v7.preference.PreferenceViewHolder -> android.support.v7.preference.PreferenceViewHolder:
    boolean mDividerAllowedBelow -> mDividerAllowedBelow
    android.util.SparseArray mCachedViews -> mCachedViews
    boolean mDividerAllowedAbove -> mDividerAllowedAbove
    android.view.View findViewById(int) -> findViewById
    void setDividerAllowedBelow(boolean) -> setDividerAllowedBelow
    void setDividerAllowedAbove(boolean) -> setDividerAllowedAbove
    void <init>(android.view.View) -> <init>
    boolean isDividerAllowedAbove() -> isDividerAllowedAbove
    boolean isDividerAllowedBelow() -> isDividerAllowedBelow
android.support.v4.media.MediaMetadataCompat$TextKey -> android.support.v4.media.MediaMetadataCompat$TextKey:
com.android.systemui.keyguard.KeyguardViewMediator$5 -> com.android.systemui.keyguard.KeyguardViewMediator$5:
    com.android.systemui.keyguard.KeyguardViewMediator this$0 -> this$0
    void <init>(com.android.systemui.keyguard.KeyguardViewMediator) -> <init>
    void run() -> run
com.android.systemui.doze.DozeMachine$Service -> com.android.systemui.doze.DozeMachine$Service:
    void finish() -> finish
    void requestWakeUp() -> requestWakeUp
    void setDozeScreenBrightness(int) -> setDozeScreenBrightness
    void setDozeScreenState(int) -> setDozeScreenState
com.android.systemui.stackdivider.events.StoppedDragingEvent -> com.android.systemui.stackdivider.events.StoppedDragingEvent:
    void <init>() -> <init>
com.android.systemui.statusbar.policy.HeadsUpManager$2 -> com.android.systemui.statusbar.policy.HeadsUpManager$2:
    com.android.systemui.statusbar.policy.HeadsUpManager this$0 -> this$0
    android.content.Context val$context -> val$context
    void <init>(com.android.systemui.statusbar.policy.HeadsUpManager,android.os.Handler,android.content.Context) -> <init>
    void onChange(boolean) -> onChange
com.android.systemui.plugins.R$animator -> com.android.systemui.plugins.R$animator:
    int lb_guidedactions_item_pressed -> lb_guidedactions_item_pressed
    int lb_guidedactions_item_unpressed -> lb_guidedactions_item_unpressed
    int lb_guidedstep_slide_down -> lb_guidedstep_slide_down
    int lb_guidedstep_slide_up -> lb_guidedstep_slide_up
    int lb_onboarding_description_enter -> lb_onboarding_description_enter
    int lb_onboarding_logo_enter -> lb_onboarding_logo_enter
    int lb_onboarding_logo_exit -> lb_onboarding_logo_exit
    int lb_onboarding_page_indicator_enter -> lb_onboarding_page_indicator_enter
    int lb_onboarding_page_indicator_fade_in -> lb_onboarding_page_indicator_fade_in
    int lb_onboarding_page_indicator_fade_out -> lb_onboarding_page_indicator_fade_out
    int lb_onboarding_start_button_fade_in -> lb_onboarding_start_button_fade_in
    int lb_onboarding_start_button_fade_out -> lb_onboarding_start_button_fade_out
    int lb_onboarding_title_enter -> lb_onboarding_title_enter
    int lb_playback_bg_fade_in -> lb_playback_bg_fade_in
    int lb_playback_bg_fade_out -> lb_playback_bg_fade_out
    int lb_playback_controls_fade_in -> lb_playback_controls_fade_in
    int lb_playback_controls_fade_out -> lb_playback_controls_fade_out
    int lb_playback_description_fade_in -> lb_playback_description_fade_in
    int lb_playback_description_fade_out -> lb_playback_description_fade_out
    int lb_playback_rows_fade_in -> lb_playback_rows_fade_in
    int lb_playback_rows_fade_out -> lb_playback_rows_fade_out
    void <init>() -> <init>
com.android.systemui.HardwareUiLayout -> com.android.systemui.HardwareUiLayout:
    android.animation.Animator mAnimator -> mAnimator
    com.android.systemui.HardwareBgDrawable mBackground -> mBackground
    android.view.View mChild -> mChild
    boolean mCollapse -> mCollapse
    android.view.View mDivision -> mDivision
    boolean mEdgeBleed -> mEdgeBleed
    int mEndPoint -> mEndPoint
    boolean mHasOutsideTouch -> mHasOutsideTouch
    android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsListener -> mInsetsListener
    int mOldHeight -> mOldHeight
    boolean mRotatedBackground -> mRotatedBackground
    int mRotation -> mRotation
    boolean mRoundedDivider -> mRoundedDivider
    int[] mTmp2 -> mTmp2
    com.android.systemui.HardwareUiLayout get(android.view.View) -> get
    void setDivisionView(android.view.View) -> setDivisionView
    void setOutsideTouchListener(android.view.View$OnClickListener) -> setOutsideTouchListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateChild(int,int) -> animateChild
    int getEdgePadding() -> getEdgePadding
    android.view.ViewOutlineProvider getOutlineProvider() -> getOutlineProvider
    void onAttachedToWindow() -> onAttachedToWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void rotate(int,int) -> rotate
    int rotateGravityLeft(int) -> rotateGravityLeft
    int rotateGravityRight(int) -> rotateGravityRight
    void rotateLeft() -> rotateLeft
    void rotateLeft(android.view.View) -> rotateLeft
    void rotateRight() -> rotateRight
    void rotateRight(android.view.View) -> rotateRight
    void setCutPoint(int) -> setCutPoint
    void swapDimens(android.view.View) -> swapDimens
    void swapOrder(android.widget.LinearLayout) -> swapOrder
    void updateEdgeMargin(int) -> updateEdgeMargin
    void updatePosition() -> updatePosition
    void updateRotation() -> updateRotation
    void updateSettings() -> updateSettings
    void lambda$-com_android_systemui_HardwareUiLayout_14855(android.view.ViewTreeObserver$InternalInsetsInfo) -> lambda$-com_android_systemui_HardwareUiLayout_14855
    void lambda$-com_android_systemui_HardwareUiLayout_4828(android.view.View,int,int,int,int,int,int,int,int) -> lambda$-com_android_systemui_HardwareUiLayout_4828
    void lambda$-com_android_systemui_HardwareUiLayout_5216() -> lambda$-com_android_systemui_HardwareUiLayout_5216
    void lambda$-com_android_systemui_HardwareUiLayout_7360(android.widget.LinearLayout,android.view.View) -> lambda$-com_android_systemui_HardwareUiLayout_7360
    void lambda$-com_android_systemui_HardwareUiLayout_11521() -> lambda$-com_android_systemui_HardwareUiLayout_11521
    void lambda$-com_android_systemui_HardwareUiLayout_12643(android.view.View,int,int,int,int,int,int,int,int) -> lambda$-com_android_systemui_HardwareUiLayout_12643
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    int mChangingConfigurations -> mChangingConfigurations
    java.util.ArrayList mAnimators -> mAnimators
    android.support.graphics.drawable.VectorDrawableCompat mVectorDrawable -> mVectorDrawable
    android.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    android.support.v4.util.ArrayMap mTargetNameMap -> mTargetNameMap
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    java.util.ArrayList -set0(android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,java.util.ArrayList) -> -set0
    void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    void setupAnimatorSet() -> setupAnimatorSet
    java.util.ArrayList -get0(android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState) -> -get0
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
com.android.systemui.statusbar.phone.ObservableScrollView$Listener -> com.android.systemui.statusbar.phone.ObservableScrollView$Listener:
    void onOverscrolled(float,float,int) -> onOverscrolled
    void onScrollChanged() -> onScrollChanged
android.support.v17.leanback.widget.BaseGridView$OnKeyInterceptListener -> android.support.v17.leanback.widget.BaseGridView$OnKeyInterceptListener:
    boolean onInterceptKeyEvent(android.view.KeyEvent) -> onInterceptKeyEvent
com.android.systemui.ImageWallpaper -> com.android.systemui.ImageWallpaper:
    com.android.systemui.ImageWallpaper$DrawableEngine mEngine -> mEngine
    boolean mIsHwAccelerated -> mIsHwAccelerated
    android.app.WallpaperManager mWallpaperManager -> mWallpaperManager
    void <init>() -> <init>
    void onCreate() -> onCreate
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    void onTrimMemory(int) -> onTrimMemory
com.android.systemui.statusbar.phone.NotificationPanelView$18 -> com.android.systemui.statusbar.phone.NotificationPanelView$18:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
com.android.systemui.SystemUISecondaryUserService -> com.android.systemui.SystemUISecondaryUserService:
    void <init>() -> <init>
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
com.android.systemui.statusbar.policy.NextAlarmController -> com.android.systemui.statusbar.policy.NextAlarmController:
com.android.systemui.statusbar.phone.DozeParameters -> com.android.systemui.statusbar.phone.DozeParameters:
    com.android.internal.hardware.AmbientDisplayConfiguration mAmbientDisplayConfiguration -> mAmbientDisplayConfiguration
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.phone.DozeParameters$IntInOutMatcher sPickupSubtypePerformsProxMatcher -> sPickupSubtypePerformsProxMatcher
    boolean getPickupSubtypePerformsProxCheck(int) -> getPickupSubtypePerformsProxCheck
    boolean getPulseOnSigMotion() -> getPulseOnSigMotion
    boolean doubleTapReportsTouchCoordinates() -> doubleTapReportsTouchCoordinates
    void <init>(android.content.Context) -> <init>
    int getPulseVisibleDuration() -> getPulseVisibleDuration
    int getPulseVisibleDurationExtended() -> getPulseVisibleDurationExtended
    int getPulseOutDuration() -> getPulseOutDuration
    boolean getAlwaysOn() -> getAlwaysOn
    int getPulseInDuration(boolean) -> getPulseInDuration
    int getPickupVibrationThreshold() -> getPickupVibrationThreshold
    boolean getProxCheckBeforePulse() -> getProxCheckBeforePulse
    boolean getDisplayStateSupported() -> getDisplayStateSupported
    boolean getBoolean(java.lang.String,int) -> getBoolean
    boolean getDozeSuspendDisplayStateSupported() -> getDozeSuspendDisplayStateSupported
    int getInt(java.lang.String,int) -> getInt
    java.lang.String getString(java.lang.String,int) -> getString
com.android.systemui.statusbar.policy.LocationController -> com.android.systemui.statusbar.policy.LocationController:
    boolean setLocationEnabled(boolean) -> setLocationEnabled
    boolean isLocationEnabled() -> isLocationEnabled
    boolean isLocationActive() -> isLocationActive
com.android.settingslib.net.DataUsageController -> com.android.settingslib.net.DataUsageController:
    java.lang.StringBuilder PERIOD_BUILDER -> PERIOD_BUILDER
    android.content.Context mContext -> mContext
    android.net.INetworkStatsService mStatsService -> mStatsService
    android.net.ConnectivityManager mConnectivityManager -> mConnectivityManager
    android.telephony.TelephonyManager mTelephonyManager -> mTelephonyManager
    android.net.NetworkPolicyManager mPolicyManager -> mPolicyManager
    com.android.settingslib.net.DataUsageController$NetworkNameProvider mNetworkController -> mNetworkController
    java.util.Formatter PERIOD_FORMATTER -> PERIOD_FORMATTER
    boolean DEBUG -> DEBUG
    com.android.settingslib.net.DataUsageController$Callback mCallback -> mCallback
    android.net.INetworkStatsSession mSession -> mSession
    void setMobileDataEnabled(boolean) -> setMobileDataEnabled
    void setNetworkController(com.android.settingslib.net.DataUsageController$NetworkNameProvider) -> setNetworkController
    long getDefaultWarningLevel() -> getDefaultWarningLevel
    com.android.settingslib.net.DataUsageController$DataUsageInfo warn(java.lang.String) -> warn
    java.lang.String formatDateRange(long,long) -> formatDateRange
    java.lang.String historyEntryToString(android.net.NetworkStatsHistory$Entry) -> historyEntryToString
    boolean isMobileDataEnabled() -> isMobileDataEnabled
    boolean isMobileDataSupported() -> isMobileDataSupported
    android.net.INetworkStatsSession getSession() -> getSession
    com.android.settingslib.net.DataUsageController$DataUsageInfo getDataUsageInfo() -> getDataUsageInfo
    void <init>(android.content.Context) -> <init>
    android.net.NetworkPolicy findNetworkPolicy(android.net.NetworkTemplate) -> findNetworkPolicy
    void <clinit>() -> <clinit>
    void setCallback(com.android.settingslib.net.DataUsageController$Callback) -> setCallback
    java.lang.String getActiveSubscriberId(android.content.Context) -> getActiveSubscriberId
    com.android.settingslib.net.DataUsageController$DataUsageInfo getDataUsageInfo(android.net.NetworkTemplate) -> getDataUsageInfo
com.android.systemui.qs.tiles.DndTile$5 -> com.android.systemui.qs.tiles.DndTile$5:
    com.android.systemui.qs.tiles.DndTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.DndTile) -> <init>
    void onZenChanged(int) -> onZenChanged
com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim -> com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim:
    int mAlpha -> mAlpha
    int mDarkColor -> mDarkColor
    int mLayoutWidth -> mLayoutWidth
    android.graphics.Paint mRadialGradientPaint -> mRadialGradientPaint
    int mTop -> mTop
    void <init>(android.content.Context) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getAlpha() -> getAlpha
    int getOpacity() -> getOpacity
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void updatePaint() -> updatePaint
com.android.systemui.pip.phone.PipMenuActivity$4 -> com.android.systemui.pip.phone.PipMenuActivity$4:
    com.android.systemui.pip.phone.PipMenuActivity this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMenuActivity) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.systemui.statusbar.phone.NotificationPanelView$17 -> com.android.systemui.statusbar.phone.NotificationPanelView$17:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
com.android.systemui.recents.views.TaskView$5 -> com.android.systemui.recents.views.TaskView$5:
    com.android.systemui.recents.views.TaskView this$0 -> this$0
    com.android.systemui.recents.views.TaskView val$tv -> val$tv
    void <init>(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskView) -> <init>
    void run() -> run
com.android.systemui.statusbar.phone.CollapsedStatusBarFragment$1 -> com.android.systemui.statusbar.phone.CollapsedStatusBarFragment$1:
    com.android.systemui.statusbar.phone.CollapsedStatusBarFragment this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.CollapsedStatusBarFragment) -> <init>
    void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController$IconState) -> setIsAirplaneMode
android.support.v17.leanback.transition.FadeAndShortSlide$5 -> android.support.v17.leanback.transition.FadeAndShortSlide$5:
    void <init>() -> <init>
    float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[]) -> getGoneY
android.support.v7.app.AppCompatDelegateImplV9$2 -> android.support.v7.app.AppCompatDelegateImplV9$2:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v7.widget.TooltipPopup -> android.support.v7.widget.TooltipPopup:
    android.content.Context mContext -> mContext
    android.widget.TextView mMessageView -> mMessageView
    android.view.WindowManager$LayoutParams mLayoutParams -> mLayoutParams
    android.view.View mContentView -> mContentView
    int[] mTmpAppPos -> mTmpAppPos
    int[] mTmpAnchorPos -> mTmpAnchorPos
    android.graphics.Rect mTmpDisplayFrame -> mTmpDisplayFrame
    void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
    void <init>(android.content.Context) -> <init>
    boolean isShowing() -> isShowing
    void hide() -> hide
    void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    android.view.View getAppRootView(android.view.View) -> getAppRootView
com.android.systemui.recents.ScreenPinningRequest$RequestWindowView$1 -> com.android.systemui.recents.ScreenPinningRequest$RequestWindowView$1:
    com.android.systemui.recents.ScreenPinningRequest$RequestWindowView this$1 -> this$1
    void <init>(com.android.systemui.recents.ScreenPinningRequest$RequestWindowView) -> <init>
    void run() -> run
android.support.v7.view.SupportMenuInflater -> android.support.v7.view.SupportMenuInflater:
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> ACTION_VIEW_CONSTRUCTOR_SIGNATURE
    android.content.Context mContext -> mContext
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.Object[] mActionViewConstructorArguments -> mActionViewConstructorArguments
    java.lang.Object[] mActionProviderConstructorArguments -> mActionProviderConstructorArguments
    void <clinit>() -> <clinit>
    java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
    void <init>(android.content.Context) -> <init>
    java.lang.Object getRealOwner() -> getRealOwner
    void inflate(int,android.view.Menu) -> inflate
com.android.systemui.classifier.SpeedAnglesClassifier -> com.android.systemui.classifier.SpeedAnglesClassifier:
    java.util.HashMap mStrokeMap -> mStrokeMap
    void <init>(com.android.systemui.classifier.ClassifierData) -> <init>
    float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke) -> getFalseTouchEvaluation
    java.lang.String getTag() -> getTag
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v17.leanback.widget.ItemAlignment -> android.support.v17.leanback.widget.ItemAlignment:
    android.support.v17.leanback.widget.ItemAlignment$Axis vertical -> vertical
    android.support.v17.leanback.widget.ItemAlignment$Axis horizontal -> horizontal
    int mOrientation -> mOrientation
    android.support.v17.leanback.widget.ItemAlignment$Axis mMainAxis -> mMainAxis
    android.support.v17.leanback.widget.ItemAlignment$Axis mSecondAxis -> mSecondAxis
    void setOrientation(int) -> setOrientation
    void <init>() -> <init>
com.android.systemui.volume.VolumeDialogImpl$7 -> com.android.systemui.volume.VolumeDialogImpl$7:
    com.android.systemui.volume.VolumeDialogImpl this$0 -> this$0
    com.android.systemui.volume.VolumeDialogImpl$VolumeRow val$row -> val$row
    int val$stream -> val$stream
    void <init>(com.android.systemui.volume.VolumeDialogImpl,com.android.systemui.volume.VolumeDialogImpl$VolumeRow,int) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.view.menu.MenuBuilder$Callback -> android.support.v7.view.menu.MenuBuilder$Callback:
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
android.support.v4.media.MediaMetadataCompat$BitmapKey -> android.support.v4.media.MediaMetadataCompat$BitmapKey:
android.support.v4.view.ViewCompat$ScrollAxis -> android.support.v4.view.ViewCompat$ScrollAxis:
android.support.v17.leanback.widget.ParallaxTarget -> android.support.v17.leanback.widget.ParallaxTarget:
    void update(float) -> update
    void <init>() -> <init>
    void directUpdate(java.lang.Number) -> directUpdate
    boolean isDirectMapping() -> isDirectMapping
com.android.systemui.egg.MLandActivity -> com.android.systemui.egg.MLandActivity:
    com.android.systemui.egg.MLand mLand -> mLand
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void playerMinus(android.view.View) -> playerMinus
    void playerPlus(android.view.View) -> playerPlus
    void startButtonPressed(android.view.View) -> startButtonPressed
    void updateSplashPlayers() -> updateSplashPlayers
com.android.systemui.qs.QSDetail$5 -> com.android.systemui.qs.QSDetail$5:
    com.android.systemui.qs.QSDetail this$0 -> this$0
    com.android.systemui.plugins.qs.DetailAdapter val$adapter -> val$adapter
    void <init>(com.android.systemui.qs.QSDetail,com.android.systemui.plugins.qs.DetailAdapter) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.pip.tv.PipManager$MediaListener -> com.android.systemui.pip.tv.PipManager$MediaListener:
    void onMediaControllerChanged() -> onMediaControllerChanged
android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation -> android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation:
    int mActionState -> mActionState
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> mViewHolder
    float mStartDy -> mStartDy
    float mX -> mX
    float mStartDx -> mStartDx
    float mY -> mY
    int mAnimationType -> mAnimationType
    boolean mEnded -> mEnded
    float mTargetX -> mTargetX
    boolean mIsPendingCleanup -> mIsPendingCleanup
    boolean mOverridden -> mOverridden
    android.animation.ValueAnimator mValueAnimator -> mValueAnimator
    float mTargetY -> mTargetY
    float mFraction -> mFraction
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void setFraction(float) -> setFraction
    void start() -> start
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void cancel() -> cancel
    void update() -> update
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void setDuration(long) -> setDuration
com.android.systemui.GuestResumeSessionReceiver$ResetSessionDialog -> com.android.systemui.GuestResumeSessionReceiver$ResetSessionDialog:
    int mUserId -> mUserId
    void <init>(android.content.Context,int) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.recents.views.FreeformWorkspaceLayoutAlgorithm -> com.android.systemui.recents.views.FreeformWorkspaceLayoutAlgorithm:
    int mTaskPadding -> mTaskPadding
    android.util.ArrayMap mTaskRectMap -> mTaskRectMap
    void <init>(android.content.Context) -> <init>
    void reloadOnConfigurationChange(android.content.Context) -> reloadOnConfigurationChange
    void update(java.util.List,com.android.systemui.recents.views.TaskStackLayoutAlgorithm) -> update
    boolean isTransformAvailable(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskStackLayoutAlgorithm) -> isTransformAvailable
    com.android.systemui.recents.views.TaskViewTransform getTransform(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm) -> getTransform
com.android.settingslib.core.lifecycle.ObservablePreferenceFragment -> com.android.settingslib.core.lifecycle.ObservablePreferenceFragment:
    com.android.settingslib.core.lifecycle.Lifecycle mLifecycle -> mLifecycle
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onAttach(android.content.Context) -> onAttach
    void onDestroy() -> onDestroy
    void setPreferenceScreen(android.support.v7.preference.PreferenceScreen) -> setPreferenceScreen
    void onPause() -> onPause
    void <init>() -> <init>
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
com.android.systemui.qs.tiles.HotspotTile$Callback -> com.android.systemui.qs.tiles.HotspotTile$Callback:
    com.android.systemui.qs.tiles.HotspotTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.HotspotTile) -> <init>
    void onHotspotChanged(boolean) -> onHotspotChanged
    void <init>(com.android.systemui.qs.tiles.HotspotTile,com.android.systemui.qs.tiles.HotspotTile$Callback) -> <init>
com.android.settingslib.wifi.AccessPoint$AccessPointListener -> com.android.settingslib.wifi.AccessPoint$AccessPointListener:
    void onLevelChanged(com.android.settingslib.wifi.AccessPoint) -> onLevelChanged
    void onAccessPointChanged(com.android.settingslib.wifi.AccessPoint) -> onAccessPointChanged
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$UserRouteRecord -> android.support.v7.media.SystemMediaRouteProvider$JellybeanImpl$UserRouteRecord:
    android.support.v7.media.MediaRouter$RouteInfo mRoute -> mRoute
    java.lang.Object mRouteObj -> mRouteObj
    void <init>(android.support.v7.media.MediaRouter$RouteInfo,java.lang.Object) -> <init>
com.android.keyguard.KeyguardPinBasedInputView$1 -> com.android.keyguard.KeyguardPinBasedInputView$1:
    com.android.keyguard.KeyguardPinBasedInputView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPinBasedInputView) -> <init>
    void onUserActivity() -> onUserActivity
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    void <init>() -> <init>
    int getIcon(java.lang.Object) -> getIcon
    java.lang.String getAction(java.lang.Object) -> getAction
    java.lang.CharSequence getName(java.lang.Object) -> getName
android.support.v7.preference.PreferenceGroupAdapter$2 -> android.support.v7.preference.PreferenceGroupAdapter$2:
    java.util.List val$visiblePreferenceList -> val$visiblePreferenceList
    java.util.List val$oldVisibleList -> val$oldVisibleList
    android.support.v7.preference.PreferenceManager$PreferenceComparisonCallback val$comparisonCallback -> val$comparisonCallback
    android.support.v7.preference.PreferenceGroupAdapter this$0 -> this$0
    boolean areContentsTheSame(int,int) -> areContentsTheSame
    int getOldListSize() -> getOldListSize
    void <init>(android.support.v7.preference.PreferenceGroupAdapter,java.util.List,java.util.List,android.support.v7.preference.PreferenceManager$PreferenceComparisonCallback) -> <init>
    int getNewListSize() -> getNewListSize
    boolean areItemsTheSame(int,int) -> areItemsTheSame
com.android.systemui.AutoReinflateContainer -> com.android.systemui.AutoReinflateContainer:
    java.util.List mInflateListeners -> mInflateListeners
    int mLayout -> mLayout
    void inflateLayout() -> inflateLayout
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void inflateLayoutImpl() -> inflateLayoutImpl
    void onDensityOrFontScaleChanged() -> onDensityOrFontScaleChanged
    void onLocaleListChanged() -> onLocaleListChanged
    void onOverlayChanged() -> onOverlayChanged
com.android.systemui.statusbar.phone.StatusBar$28 -> com.android.systemui.statusbar.phone.StatusBar$28:
    com.android.systemui.statusbar.phone.StatusBar this$0 -> this$0
    java.util.ArrayList val$viewsToRemove -> val$viewsToRemove
    void <init>(com.android.systemui.statusbar.phone.StatusBar,java.util.ArrayList) -> <init>
    void run() -> run
com.android.systemui.classifier.AccelerationClassifier$Data -> com.android.systemui.classifier.AccelerationClassifier$Data:
    float maxSpeedRatio -> maxSpeedRatio
    com.android.systemui.classifier.Point previousPoint -> previousPoint
    float previousSpeed -> previousSpeed
    void <init>(com.android.systemui.classifier.Point) -> <init>
    void addPoint(com.android.systemui.classifier.Point) -> addPoint
com.android.systemui.statusbar.phone.-$Lambda$PXrt0OKsNBVrAS4QahP_X8PH96Q -> com.android.systemui.statusbar.phone.-$Lambda$PXrt0OKsNBVrAS4QahP_X8PH96Q:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0(android.graphics.Rect,float,int) -> $m$0
    void onDarkChanged(android.graphics.Rect,float,int) -> onDarkChanged
com.android.systemui.statusbar.policy.ScrollAdapter -> com.android.systemui.statusbar.policy.ScrollAdapter:
    android.view.View getHostView() -> getHostView
    boolean isScrolledToTop() -> isScrolledToTop
com.android.systemui.statusbar.notification.-$Lambda$gIHVGdltksSGhu3zzApFHCkb-NE -> com.android.systemui.statusbar.notification.-$Lambda$gIHVGdltksSGhu3zzApFHCkb-NE:
    byte $id -> $id
    com.android.systemui.statusbar.notification.-$Lambda$gIHVGdltksSGhu3zzApFHCkb-NE $INST$0 -> $INST$0
    com.android.systemui.statusbar.notification.-$Lambda$gIHVGdltksSGhu3zzApFHCkb-NE $INST$1 -> $INST$1
    void <init>(byte) -> <init>
    void <clinit>() -> <clinit>
    void $m$0(java.lang.Object) -> $m$0
    void $m$1(java.lang.Object) -> $m$1
    void accept(java.lang.Object) -> accept
com.android.systemui.pip.phone.PipMenuActivity$1 -> com.android.systemui.pip.phone.PipMenuActivity$1:
    com.android.systemui.pip.phone.PipMenuActivity this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMenuActivity) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v7.app.AlertController$CheckedItemAdapter -> android.support.v7.app.AlertController$CheckedItemAdapter:
    long getItemId(int) -> getItemId
    void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    boolean hasStableIds() -> hasStableIds
com.android.systemui.statusbar.phone.-$Lambda$N_OtJ8HKQ17eyDg8Dp9cEYfCWls$1 -> com.android.systemui.statusbar.phone.-$Lambda$N_OtJ8HKQ17eyDg8Dp9cEYfCWls$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    boolean $m$0() -> $m$0
    boolean onDoubleTap() -> onDoubleTap
com.android.systemui.statusbar.phone.NotificationPanelView$9 -> com.android.systemui.statusbar.phone.NotificationPanelView$9:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.statusbar.stack.NotificationChildrenContainer -> com.android.systemui.statusbar.stack.NotificationChildrenContainer:
    com.android.systemui.statusbar.stack.AnimationProperties ALPHA_FADE_IN -> ALPHA_FADE_IN
    int mActualHeight -> mActualHeight
    int mChildPadding -> mChildPadding
    java.util.List mChildren -> mChildren
    boolean mChildrenExpanded -> mChildrenExpanded
    int mClipBottomAmount -> mClipBottomAmount
    float mCollapsedBottompadding -> mCollapsedBottompadding
    com.android.systemui.statusbar.ExpandableNotificationRow mContainingNotification -> mContainingNotification
    android.view.ViewGroup mCurrentHeader -> mCurrentHeader
    float mDividerAlpha -> mDividerAlpha
    int mDividerHeight -> mDividerHeight
    java.util.List mDividers -> mDividers
    boolean mEnableShadowOnChildNotifications -> mEnableShadowOnChildNotifications
    com.android.systemui.statusbar.stack.ViewState mGroupOverFlowState -> mGroupOverFlowState
    android.view.View$OnClickListener mHeaderClickListener -> mHeaderClickListener
    int mHeaderHeight -> mHeaderHeight
    com.android.systemui.statusbar.NotificationHeaderUtil mHeaderUtil -> mHeaderUtil
    com.android.systemui.statusbar.stack.ViewState mHeaderViewState -> mHeaderViewState
    boolean mHideDividersDuringExpand -> mHideDividersDuringExpand
    com.android.systemui.statusbar.notification.HybridGroupManager mHybridGroupManager -> mHybridGroupManager
    boolean mIsLowPriority -> mIsLowPriority
    boolean mNeverAppliedGroupState -> mNeverAppliedGroupState
    android.view.NotificationHeaderView mNotificationHeader -> mNotificationHeader
    android.view.ViewGroup mNotificationHeaderAmbient -> mNotificationHeaderAmbient
    android.view.NotificationHeaderView mNotificationHeaderLowPriority -> mNotificationHeaderLowPriority
    int mNotificationHeaderMargin -> mNotificationHeaderMargin
    com.android.systemui.statusbar.notification.NotificationViewWrapper mNotificationHeaderWrapper -> mNotificationHeaderWrapper
    com.android.systemui.statusbar.notification.NotificationViewWrapper mNotificationHeaderWrapperAmbient -> mNotificationHeaderWrapperAmbient
    com.android.systemui.statusbar.notification.NotificationViewWrapper mNotificationHeaderWrapperLowPriority -> mNotificationHeaderWrapperLowPriority
    int mNotificatonTopPadding -> mNotificatonTopPadding
    android.widget.TextView mOverflowNumber -> mOverflowNumber
    int mRealHeight -> mRealHeight
    boolean mShowDividersWhenExpanded -> mShowDividersWhenExpanded
    boolean mUserLocked -> mUserLocked
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void addNotification(com.android.systemui.statusbar.ExpandableNotificationRow,int) -> addNotification
    boolean applyChildOrder(java.util.List,com.android.systemui.statusbar.notification.VisualStabilityManager,com.android.systemui.statusbar.notification.VisualStabilityManager$Callback) -> applyChildOrder
    void applyState(com.android.systemui.statusbar.stack.StackScrollState) -> applyState
    android.view.ViewGroup calculateDesiredHeader() -> calculateDesiredHeader
    int getCollapsedHeight() -> getCollapsedHeight
    android.view.ViewGroup getCurrentHeaderView() -> getCurrentHeaderView
    float getGroupExpandFraction() -> getGroupExpandFraction
    android.view.NotificationHeaderView getHeaderView() -> getHeaderView
    float getIncreasedPaddingAmount() -> getIncreasedPaddingAmount
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicHeight(float) -> getIntrinsicHeight
    android.view.NotificationHeaderView getLowPriorityHeaderView() -> getLowPriorityHeaderView
    int getMaxAllowedVisibleChildren() -> getMaxAllowedVisibleChildren
    int getMaxAllowedVisibleChildren(boolean) -> getMaxAllowedVisibleChildren
    int getMaxContentHeight() -> getMaxContentHeight
    int getMinHeight() -> getMinHeight
    int getMinHeight(int,boolean) -> getMinHeight
    int getNotificationChildCount() -> getNotificationChildCount
    java.util.List getNotificationChildren() -> getNotificationChildren
    int getPositionInLinearLayout(android.view.View) -> getPositionInLinearLayout
    void getState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.ExpandableViewState) -> getState
    com.android.systemui.statusbar.ExpandableNotificationRow getViewAtPosition(float) -> getViewAtPosition
    int getVisibleChildrenExpandHeight() -> getVisibleChildrenExpandHeight
    android.view.NotificationHeaderView getVisibleHeader() -> getVisibleHeader
    com.android.systemui.statusbar.notification.NotificationViewWrapper getWrapperForView(android.view.View) -> getWrapperForView
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    android.view.View inflateDivider() -> inflateDivider
    void initDimens() -> initDimens
    boolean isUserLocked() -> isUserLocked
    void notifyShowAmbientChanged() -> notifyShowAmbientChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onExpansionChanged() -> onExpansionChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onNotificationUpdated() -> onNotificationUpdated
    boolean pointInView(float,float,float) -> pointInView
    void prepareExpansionChanged(com.android.systemui.statusbar.stack.StackScrollState) -> prepareExpansionChanged
    void reInflateViews(android.view.View$OnClickListener,android.service.notification.StatusBarNotification) -> reInflateViews
    void recreateAmbientHeader(android.app.Notification$Builder) -> recreateAmbientHeader
    void recreateLowPriorityHeader(android.app.Notification$Builder) -> recreateLowPriorityHeader
    void recreateNotificationHeader(android.view.View$OnClickListener) -> recreateNotificationHeader
    void removeNotification(com.android.systemui.statusbar.ExpandableNotificationRow) -> removeNotification
    void resetHeaderVisibilityIfNeeded(android.view.View,android.view.View) -> resetHeaderVisibilityIfNeeded
    void setActualHeight(int) -> setActualHeight
    void setChildrenExpanded(boolean) -> setChildrenExpanded
    void setClipBottomAmount(int) -> setClipBottomAmount
    void setContainingNotification(com.android.systemui.statusbar.ExpandableNotificationRow) -> setContainingNotification
    void setDark(boolean,boolean,long) -> setDark
    void setIconsVisible(boolean) -> setIconsVisible
    void setIsLowPriority(boolean) -> setIsLowPriority
    void setUserLocked(boolean) -> setUserLocked
    boolean showingAsLowPriority() -> showingAsLowPriority
    void startAnimationToState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.AnimationProperties) -> startAnimationToState
    void startChildAlphaAnimations(boolean) -> startChildAlphaAnimations
    void updateChildrenClipping() -> updateChildrenClipping
    void updateChildrenHeaderAppearance() -> updateChildrenHeaderAppearance
    void updateExpansionStates() -> updateExpansionStates
    void updateGroupOverflow() -> updateGroupOverflow
    void updateHeaderForExpansion(boolean) -> updateHeaderForExpansion
    void updateHeaderTransformation() -> updateHeaderTransformation
    void updateHeaderVisibility(boolean) -> updateHeaderVisibility
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_statusbar_stack_NotificationChildrenContainer_38618() -> lambda$-com_android_systemui_statusbar_stack_NotificationChildrenContainer_38618
android.arch.lifecycle.GenericLifecycleObserver -> android.arch.lifecycle.GenericLifecycleObserver:
    void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> onStateChanged
com.android.keyguard.KeyguardPinBasedInputView$4 -> com.android.keyguard.KeyguardPinBasedInputView$4:
    com.android.keyguard.KeyguardPinBasedInputView this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardPinBasedInputView) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    boolean add(java.lang.Object) -> add
    void clear() -> clear
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object[] toArray() -> toArray
    boolean remove(java.lang.Object) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.Iterator iterator() -> iterator
    boolean addAll(java.util.Collection) -> addAll
    void <init>(android.support.v4.util.MapCollections) -> <init>
com.android.systemui.plugins.VolumeDialogController$StreamState -> com.android.systemui.plugins.VolumeDialogController$StreamState:
    java.lang.String remoteLabel -> remoteLabel
    boolean dynamic -> dynamic
    boolean muteSupported -> muteSupported
    boolean routedToBluetooth -> routedToBluetooth
    int level -> level
    boolean muted -> muted
    int name -> name
    int VERSION -> VERSION
    int levelMax -> levelMax
    int levelMin -> levelMin
    void <init>() -> <init>
    com.android.systemui.plugins.VolumeDialogController$StreamState copy() -> copy
android.support.v7.preference.TwoStatePreference$SavedState -> android.support.v7.preference.TwoStatePreference$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean checked -> checked
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
com.android.settingslib.core.lifecycle.events.OnPrepareOptionsMenu -> com.android.settingslib.core.lifecycle.events.OnPrepareOptionsMenu:
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
com.android.systemui.statusbar.phone.KeyguardBouncer$1 -> com.android.systemui.statusbar.phone.KeyguardBouncer$1:
    com.android.systemui.statusbar.phone.KeyguardBouncer this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.KeyguardBouncer) -> <init>
    void onStrongAuthStateChanged(int) -> onStrongAuthStateChanged
com.android.systemui.recents.RecentsSystemUserService -> com.android.systemui.recents.RecentsSystemUserService:
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide -> android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide:
    float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[]) -> getGoneX
    void <init>() -> <init>
    float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[]) -> getGoneY
com.android.systemui.stackdivider.-$Lambda$SF-WjuMwvPZk9i1dL9BXDQtwNzU$1 -> com.android.systemui.stackdivider.-$Lambda$SF-WjuMwvPZk9i1dL9BXDQtwNzU$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
android.support.v7.widget.ChildHelper -> android.support.v7.widget.ChildHelper:
    java.util.List mHiddenViews -> mHiddenViews
    android.support.v7.widget.ChildHelper$Callback mCallback -> mCallback
    android.support.v7.widget.ChildHelper$Bucket mBucket -> mBucket
    android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    boolean isHidden(android.view.View) -> isHidden
    int indexOfChild(android.view.View) -> indexOfChild
    void addView(android.view.View,boolean) -> addView
    void removeView(android.view.View) -> removeView
    int getUnfilteredChildCount() -> getUnfilteredChildCount
    android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    android.view.View getChildAt(int) -> getChildAt
    void addView(android.view.View,int,boolean) -> addView
    void removeViewAt(int) -> removeViewAt
    boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    void hideViewInternal(android.view.View) -> hideViewInternal
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    void detachViewFromParent(int) -> detachViewFromParent
    boolean unhideViewInternal(android.view.View) -> unhideViewInternal
    void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    int getChildCount() -> getChildCount
    void hide(android.view.View) -> hide
    java.lang.String toString() -> toString
    int getOffset(int) -> getOffset
    void <init>(android.support.v7.widget.ChildHelper$Callback) -> <init>
    void unhide(android.view.View) -> unhide
com.android.systemui.screenshot.ScreenshotServiceErrorReceiver -> com.android.systemui.screenshot.ScreenshotServiceErrorReceiver:
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.media.MediaRouterJellybeanMr1$IsConnectingWorkaround -> android.support.v7.media.MediaRouterJellybeanMr1$IsConnectingWorkaround:
    int mStatusConnecting -> mStatusConnecting
    java.lang.reflect.Method mGetStatusCodeMethod -> mGetStatusCodeMethod
    void <init>() -> <init>
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v7.widget.AdapterHelper$UpdateOp -> android.support.v7.widget.AdapterHelper$UpdateOp:
    int cmd -> cmd
    java.lang.Object payload -> payload
    int positionStart -> positionStart
    int itemCount -> itemCount
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <init>(int,int,int,java.lang.Object) -> <init>
    java.lang.String cmdToString() -> cmdToString
android.support.v7.media.MediaRouteProviderDescriptor$Builder -> android.support.v7.media.MediaRouteProviderDescriptor$Builder:
    android.os.Bundle mBundle -> mBundle
    java.util.ArrayList mRoutes -> mRoutes
    android.support.v7.media.MediaRouteProviderDescriptor$Builder addRoute(android.support.v7.media.MediaRouteDescriptor) -> addRoute
    android.support.v7.media.MediaRouteProviderDescriptor build() -> build
    void <init>() -> <init>
com.android.systemui.statusbar.phone.StatusBarWindowView -> com.android.systemui.statusbar.phone.StatusBarWindowView:
    android.view.View mBrightnessMirror -> mBrightnessMirror
    com.android.systemui.statusbar.phone.DoubleTapHelper mDoubleTapHelper -> mDoubleTapHelper
    com.android.systemui.statusbar.DragDownHelper mDragDownHelper -> mDragDownHelper
    android.view.Window mFakeWindow -> mFakeWindow
    com.android.systemui.classifier.FalsingManager mFalsingManager -> mFalsingManager
    android.view.ActionMode mFloatingActionMode -> mFloatingActionMode
    android.view.View mFloatingActionModeOriginatingView -> mFloatingActionModeOriginatingView
    com.android.internal.widget.FloatingToolbar mFloatingToolbar -> mFloatingToolbar
    android.view.ViewTreeObserver$OnPreDrawListener mFloatingToolbarPreDrawListener -> mFloatingToolbarPreDrawListener
    int mLeftInset -> mLeftInset
    com.android.systemui.statusbar.phone.NotificationPanelView mNotificationPanel -> mNotificationPanel
    int mRightInset -> mRightInset
    com.android.systemui.statusbar.phone.StatusBar mService -> mService
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout mStackScrollLayout -> mStackScrollLayout
    boolean mTouchActive -> mTouchActive
    boolean mTouchCancelled -> mTouchCancelled
    android.graphics.Paint mTransparentSrcPaint -> mTransparentSrcPaint
    void cancelCurrentTouch() -> cancelCurrentTouch
    void setService(com.android.systemui.statusbar.phone.StatusBar) -> setService
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelExpandHelper() -> cancelExpandHelper
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void applyMargins() -> applyMargins
    void cleanupFloatingActionModeViews() -> cleanupFloatingActionModeViews
    android.view.ActionMode createFloatingActionMode(android.view.View,android.view.ActionMode$Callback2) -> createFloatingActionMode
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void log(java.lang.String) -> log
    void onAttachedToWindow() -> onAttachedToWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onFinishInflate() -> onFinishInflate
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onViewAdded(android.view.View) -> onViewAdded
    void setDragDownHelper(com.android.systemui.statusbar.DragDownHelper) -> setDragDownHelper
    void setHandledFloatingActionMode(android.view.ActionMode) -> setHandledFloatingActionMode
    void setTouchActive(boolean) -> setTouchActive
    android.view.ActionMode startActionMode(android.view.View,android.view.ActionMode$Callback,int) -> startActionMode
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    void lambda$-com_android_systemui_statusbar_phone_StatusBarWindowView_3956(boolean) -> lambda$-com_android_systemui_statusbar_phone_StatusBarWindowView_3956
    boolean lambda$-com_android_systemui_statusbar_phone_StatusBarWindowView_3970() -> lambda$-com_android_systemui_statusbar_phone_StatusBarWindowView_3970
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ActionMode -get0(com.android.systemui.statusbar.phone.StatusBarWindowView) -> -get0
    android.view.ActionMode -set0(com.android.systemui.statusbar.phone.StatusBarWindowView,android.view.ActionMode) -> -set0
    void -wrap0(com.android.systemui.statusbar.phone.StatusBarWindowView) -> -wrap0
    void -wrap1(java.lang.String) -> -wrap1
android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperStateBase -> android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperStateBase:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
com.android.systemui.statusbar.notification.HybridNotificationView$1 -> com.android.systemui.statusbar.notification.HybridNotificationView$1:
    com.android.systemui.statusbar.notification.HybridNotificationView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.notification.HybridNotificationView) -> <init>
    boolean transformFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float) -> transformFrom
    boolean transformTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float) -> transformTo
com.android.systemui.pip.tv.PipControlButtonView -> com.android.systemui.pip.tv.PipControlButtonView:
    android.animation.Animator mButtonFocusGainAnimator -> mButtonFocusGainAnimator
    android.animation.Animator mButtonFocusLossAnimator -> mButtonFocusLossAnimator
    android.widget.ImageView mButtonImageView -> mButtonImageView
    android.widget.TextView mDescriptionTextView -> mDescriptionTextView
    android.view.View$OnFocusChangeListener mFocusChangeListener -> mFocusChangeListener
    android.widget.ImageView mIconImageView -> mIconImageView
    android.view.View$OnFocusChangeListener mInternalFocusChangeListener -> mInternalFocusChangeListener
    android.animation.Animator mTextFocusGainAnimator -> mTextFocusGainAnimator
    android.animation.Animator mTextFocusLossAnimator -> mTextFocusLossAnimator
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void cancelAnimator(android.animation.Animator) -> cancelAnimator
    void onFinishInflate() -> onFinishInflate
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setOnFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnFocusChangeListener
    void setText(java.lang.CharSequence) -> setText
    void setText(int) -> setText
    void startFocusGainAnimation() -> startFocusGainAnimation
    void startFocusLossAnimation() -> startFocusLossAnimation
    android.view.View$OnFocusChangeListener -get0(com.android.systemui.pip.tv.PipControlButtonView) -> -get0
com.android.systemui.Dumpable -> com.android.systemui.Dumpable:
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
com.android.systemui.qs.tileimpl.QSTileImpl$DrawableIcon -> com.android.systemui.qs.tileimpl.QSTileImpl$DrawableIcon:
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    void <init>(android.graphics.drawable.Drawable) -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
com.android.systemui.statusbar.phone.NearestTouchFrame -> com.android.systemui.statusbar.phone.NearestTouchFrame:
    java.util.ArrayList mClickableChildren -> mClickableChildren
    boolean mIsActive -> mIsActive
    int[] mOffset -> mOffset
    int[] mTmpInt -> mTmpInt
    android.view.View mTouchingChild -> mTouchingChild
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,android.content.res.Configuration) -> <init>
    void addClickableChildren(android.view.ViewGroup) -> addClickableChildren
    int distance(android.view.View,android.view.MotionEvent) -> distance
    android.view.View findNearestChild(android.view.MotionEvent) -> findNearestChild
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.util.Pair lambda$-com_android_systemui_statusbar_phone_NearestTouchFrame_3467(android.view.MotionEvent,android.view.View) -> lambda$-com_android_systemui_statusbar_phone_NearestTouchFrame_3467
    int lambda$-com_android_systemui_statusbar_phone_NearestTouchFrame_3552(android.util.Pair) -> lambda$-com_android_systemui_statusbar_phone_NearestTouchFrame_3552
com.android.systemui.assist.AssistManager -> com.android.systemui.assist.AssistManager:
    com.android.systemui.assist.AssistDisclosure mAssistDisclosure -> mAssistDisclosure
    com.android.internal.app.AssistUtils mAssistUtils -> mAssistUtils
    android.content.Context mContext -> mContext
    com.android.systemui.statusbar.policy.DeviceProvisionedController mDeviceProvisionedController -> mDeviceProvisionedController
    java.lang.Runnable mHideRunnable -> mHideRunnable
    com.android.settingslib.applications.InterestingConfigChanges mInterestingConfigChanges -> mInterestingConfigChanges
    boolean mShouldEnableOrb -> mShouldEnableOrb
    com.android.internal.app.IVoiceInteractionSessionShowCallback mShowCallback -> mShowCallback
    com.android.systemui.assist.AssistOrbContainer mView -> mView
    android.view.WindowManager mWindowManager -> mWindowManager
    void <init>(com.android.systemui.statusbar.policy.DeviceProvisionedController,android.content.Context) -> <init>
    boolean canVoiceAssistBeLaunchedFromKeyguard() -> canVoiceAssistBeLaunchedFromKeyguard
    android.content.ComponentName getAssistInfo() -> getAssistInfo
    android.view.WindowManager$LayoutParams getLayoutParams() -> getLayoutParams
    android.content.ComponentName getVoiceInteractorComponentName() -> getVoiceInteractorComponentName
    void hideAssist() -> hideAssist
    boolean isVoiceSessionRunning() -> isVoiceSessionRunning
    void launchVoiceAssistFromKeyguard() -> launchVoiceAssistFromKeyguard
    void maybeSwapSearchIcon(android.content.ComponentName,boolean) -> maybeSwapSearchIcon
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLockscreenShown() -> onLockscreenShown
    void registerVoiceInteractionSessionListener() -> registerVoiceInteractionSessionListener
    void replaceDrawable(android.widget.ImageView,android.content.ComponentName,java.lang.String,boolean) -> replaceDrawable
    boolean shouldShowOrb() -> shouldShowOrb
    void showDisclosure() -> showDisclosure
    void showOrb(android.content.ComponentName,boolean) -> showOrb
    void startAssist(android.os.Bundle) -> startAssist
    void startAssistActivity(android.os.Bundle,android.content.ComponentName) -> startAssistActivity
    void startAssistInternal(android.os.Bundle,android.content.ComponentName,boolean) -> startAssistInternal
    void startVoiceInteractor(android.os.Bundle) -> startVoiceInteractor
    java.lang.Runnable -get0(com.android.systemui.assist.AssistManager) -> -get0
    com.android.systemui.assist.AssistOrbContainer -get1(com.android.systemui.assist.AssistManager) -> -get1
com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable$ConstantState -> com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable$ConstantState:
    android.graphics.Bitmap mBackground -> mBackground
    void <init>(android.graphics.Bitmap) -> <init>
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    android.graphics.Bitmap -get0(com.android.systemui.statusbar.phone.LockscreenWallpaper$WallpaperDrawable$ConstantState) -> -get0
android.support.v4.graphics.TypefaceCompat -> android.support.v4.graphics.TypefaceCompat:
    android.support.v4.graphics.TypefaceCompat$TypefaceCompatImpl sTypefaceCompatImpl -> sTypefaceCompatImpl
    android.support.v4.util.LruCache sTypefaceCache -> sTypefaceCache
    void <clinit>() -> <clinit>
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.widget.TextView) -> createFromResourcesFamilyXml
    void <init>() -> <init>
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
com.android.systemui.pip.phone.PipMotionHelper$2 -> com.android.systemui.pip.phone.PipMotionHelper$2:
    com.android.systemui.pip.phone.PipMotionHelper this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMotionHelper) -> <init>
    android.animation.AnimationHandler getAnimationHandler() -> getAnimationHandler
android.support.v17.leanback.R$integer -> android.support.v17.leanback.R$integer:
    int lb_card_activated_animation_duration -> lb_card_activated_animation_duration
    int lb_card_selected_animation_delay -> lb_card_selected_animation_delay
    int lb_card_selected_animation_duration -> lb_card_selected_animation_duration
    int lb_search_bar_speech_mode_background_alpha -> lb_search_bar_speech_mode_background_alpha
    int lb_search_bar_text_mode_background_alpha -> lb_search_bar_text_mode_background_alpha
    int lb_search_orb_pulse_duration_ms -> lb_search_orb_pulse_duration_ms
    int lb_search_orb_scale_duration_ms -> lb_search_orb_scale_duration_ms
    void <init>() -> <init>
com.android.systemui.statusbar.stack.NotificationStackScrollLayout$NotificationSwipeHelper$1 -> com.android.systemui.statusbar.stack.NotificationStackScrollLayout$NotificationSwipeHelper$1:
    com.android.systemui.statusbar.stack.NotificationStackScrollLayout$NotificationSwipeHelper this$1 -> this$1
    void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout$NotificationSwipeHelper) -> <init>
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback -> android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.android.systemui.qs.tiles.CastTile -> com.android.systemui.qs.tiles.CastTile:
    android.content.Intent CAST_SETTINGS -> CAST_SETTINGS
    com.android.systemui.plugins.ActivityStarter mActivityStarter -> mActivityStarter
    com.android.systemui.qs.tiles.CastTile$Callback mCallback -> mCallback
    com.android.systemui.statusbar.policy.CastController mController -> mController
    com.android.systemui.qs.tiles.CastTile$CastDetailAdapter mDetailAdapter -> mDetailAdapter
    android.app.Dialog mDialog -> mDialog
    com.android.systemui.statusbar.policy.KeyguardMonitor mKeyguard -> mKeyguard
    void <init>(com.android.systemui.qs.QSHost) -> <init>
    java.lang.String composeChangeAnnouncement() -> composeChangeAnnouncement
    com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter() -> getDetailAdapter
    java.lang.String getDeviceName(com.android.systemui.statusbar.policy.CastController$CastDevice) -> getDeviceName
    android.content.Intent getLongClickIntent() -> getLongClickIntent
    int getMetricsCategory() -> getMetricsCategory
    java.lang.CharSequence getTileLabel() -> getTileLabel
    void handleClick() -> handleClick
    void handleSecondaryClick() -> handleSecondaryClick
    void handleSetListening(boolean) -> handleSetListening
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$BooleanState,java.lang.Object) -> handleUpdateState
    void handleUserSwitch(int) -> handleUserSwitch
    com.android.systemui.plugins.qs.QSTile$BooleanState newTileState() -> newTileState
    void showDetail(boolean) -> showDetail
    void <clinit>() -> <clinit>
    void lambda$-com_android_systemui_qs_tiles_CastTile_4474() -> lambda$-com_android_systemui_qs_tiles_CastTile_4474
    void lambda$-com_android_systemui_qs_tiles_CastTile_4676() -> lambda$-com_android_systemui_qs_tiles_CastTile_4676
    void lambda$-com_android_systemui_qs_tiles_CastTile_4802(android.view.View) -> lambda$-com_android_systemui_qs_tiles_CastTile_4802
    void lambda$-com_android_systemui_qs_tiles_CastTile_5312() -> lambda$-com_android_systemui_qs_tiles_CastTile_5312
    com.android.systemui.plugins.qs.QSTile$State newTileState() -> newTileState
    void handleUpdateState(com.android.systemui.plugins.qs.QSTile$State,java.lang.Object) -> handleUpdateState
    android.content.Intent -get0() -> -get0
    boolean -get1() -> -get1
    java.lang.String -get2(com.android.systemui.qs.tiles.CastTile) -> -get2
    android.content.Context -get3(com.android.systemui.qs.tiles.CastTile) -> -get3
    com.android.systemui.statusbar.policy.CastController -get4(com.android.systemui.qs.tiles.CastTile) -> -get4
    java.lang.String -wrap0(com.android.systemui.qs.tiles.CastTile,com.android.systemui.statusbar.policy.CastController$CastDevice) -> -wrap0
com.android.systemui.pip.tv.PipControlsView$Listener -> com.android.systemui.pip.tv.PipControlsView$Listener:
    void onClosed() -> onClosed
com.android.systemui.plugins.VersionInfo$InvalidVersionException -> com.android.systemui.plugins.VersionInfo$InvalidVersionException:
    boolean mTooNew -> mTooNew
    void <init>(java.lang.String,boolean) -> <init>
    void <init>(java.lang.Class,boolean,int,int) -> <init>
    boolean isTooNew() -> isTooNew
com.android.systemui.volume.ZenFooter$2 -> com.android.systemui.volume.ZenFooter$2:
    com.android.systemui.volume.ZenFooter this$0 -> this$0
    void <init>(com.android.systemui.volume.ZenFooter) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.widget.TextViewCompat$TextViewCompatApi16Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi16Impl:
    void <init>() -> <init>
android.support.v17.leanback.widget.SearchBar$7 -> android.support.v17.leanback.widget.SearchBar$7:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.plugins.R$bool -> com.android.systemui.plugins.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_allow_stacked_button_bar -> abc_allow_stacked_button_bar
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_closeDialogWhenTouchOutside -> abc_config_closeDialogWhenTouchOutside
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int config_alwaysExpandNonGroupedNotifications -> config_alwaysExpandNonGroupedNotifications
    int config_clipNotificationScrollToTop -> config_clipNotificationScrollToTop
    int config_clipNotificationsToOutline -> config_clipNotificationsToOutline
    int config_dead_zone_flash -> config_dead_zone_flash
    int config_disableMenuKeyInLockScreen -> config_disableMenuKeyInLockScreen
    int config_display_rat -> config_display_rat
    int config_drawNotificationBackground -> config_drawNotificationBackground
    int config_enableFullscreenUserSwitcher -> config_enableFullscreenUserSwitcher
    int config_enableKeyguardService -> config_enableKeyguardService
    int config_enableLockScreenRotation -> config_enableLockScreenRotation
    int config_enableLockScreenTranslucentDecor -> config_enableLockScreenTranslucentDecor
    int config_enableNonGroupedNotificationExpand -> config_enableNonGroupedNotificationExpand
    int config_enableNotificationShadeDrag -> config_enableNotificationShadeDrag
    int config_enableNotificationsClearAll -> config_enableNotificationsClearAll
    int config_enablePersistentDockedActivity -> config_enablePersistentDockedActivity
    int config_enableShadowOnChildNotifications -> config_enableShadowOnChildNotifications
    int config_fadeDependingOnAmountSwiped -> config_fadeDependingOnAmountSwiped
    int config_fadeNotificationsOnDismiss -> config_fadeNotificationsOnDismiss
    int config_hideDividersDuringExpand -> config_hideDividersDuringExpand
    int config_hideLtePlus -> config_hideLtePlus
    int config_hspa_data_distinguishable -> config_hspa_data_distinguishable
    int config_inflateSignalStrength -> config_inflateSignalStrength
    int config_keyguardShowCameraAffordance -> config_keyguardShowCameraAffordance
    int config_keyguardUserSwitcher -> config_keyguardUserSwitcher
    int config_lockscreenAntiFalsingClassifierEnabled -> config_lockscreenAntiFalsingClassifierEnabled
    int config_monitor_locale_change -> config_monitor_locale_change
    int config_notifications_round_rect_clipping -> config_notifications_round_rect_clipping
    int config_read_icons_from_xml -> config_read_icons_from_xml
    int config_recents_fake_shadows -> config_recents_fake_shadows
    int config_recents_use_hardware_layers -> config_recents_use_hardware_layers
    int config_show4GForLTE -> config_show4GForLTE
    int config_showActivity -> config_showActivity
    int config_showAmpm -> config_showAmpm
    int config_showDividersWhenGroupNotificationExpanded -> config_showDividersWhenGroupNotificationExpanded
    int config_showEmergencyButton -> config_showEmergencyButton
    int config_showGroupNotificationBgWhenExpanded -> config_showGroupNotificationBgWhenExpanded
    int config_showMin3G -> config_showMin3G
    int config_showNotificationExpandButtonAtEnd -> config_showNotificationExpandButtonAtEnd
    int config_showNotificationGear -> config_showNotificationGear
    int config_showNotificationShelf -> config_showNotificationShelf
    int config_showPhoneRSSIForData -> config_showPhoneRSSIForData
    int config_showRotationLock -> config_showRotationLock
    int config_showRsrpSignalLevelforLTE -> config_showRsrpSignalLevelforLTE
    int config_showWifiActivity -> config_showWifiActivity
    int config_showWifiIndicatorWhenEnabled -> config_showWifiIndicatorWhenEnabled
    int config_statusBarShowNumber -> config_statusBarShowNumber
    int config_status_bar_scrim_behind_use_src -> config_status_bar_scrim_behind_use_src
    int config_translateNotificationContentsOnSwipe -> config_translateNotificationContentsOnSwipe
    int config_vibrateOnIconAnimation -> config_vibrateOnIconAnimation
    int doze_display_state_supported -> doze_display_state_supported
    int doze_double_tap_reports_touch_coordinates -> doze_double_tap_reports_touch_coordinates
    int doze_pickup_performs_proximity_check -> doze_pickup_performs_proximity_check
    int doze_proximity_check_before_pulse -> doze_proximity_check_before_pulse
    int doze_pulse_on_notifications -> doze_pulse_on_notifications
    int doze_pulse_on_significant_motion -> doze_pulse_on_significant_motion
    int doze_suspend_display_state_supported -> doze_suspend_display_state_supported
    int enable_volume_ui -> enable_volume_ui
    int kg_hide_emgcy_btn_when_oos -> kg_hide_emgcy_btn_when_oos
    int kg_show_ime_at_screen_on -> kg_show_ime_at_screen_on
    int kg_sim_puk_account_full_screen -> kg_sim_puk_account_full_screen
    int kg_use_all_caps -> kg_use_all_caps
    int quick_settings_rssi_tile_capitalization -> quick_settings_rssi_tile_capitalization
    int quick_settings_show_full_alarm -> quick_settings_show_full_alarm
    int quick_settings_wide -> quick_settings_wide
    int recents_grow_in_multiwindow -> recents_grow_in_multiwindow
    void <init>() -> <init>
com.android.systemui.pip.phone.-$Lambda$ZB0vTH4BRyAQB1FhTXfcOlTpmPY$1 -> com.android.systemui.pip.phone.-$Lambda$ZB0vTH4BRyAQB1FhTXfcOlTpmPY$1:
    boolean -$f0 -> -$f0
    int -$f1 -> -$f1
    void <init>(boolean,int) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.statusbar.phone.KeyguardStatusBarView$1$1 -> com.android.systemui.statusbar.phone.KeyguardStatusBarView$1$1:
    com.android.systemui.statusbar.phone.KeyguardStatusBarView$1 this$1 -> this$1
    void <init>(com.android.systemui.statusbar.phone.KeyguardStatusBarView$1) -> <init>
    void run() -> run
com.android.systemui.qs.QSDetailClipper$3 -> com.android.systemui.qs.QSDetailClipper$3:
    com.android.systemui.qs.QSDetailClipper this$0 -> this$0
    void <init>(com.android.systemui.qs.QSDetailClipper) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.view.menu.StandardMenuPopup$2 -> android.support.v7.view.menu.StandardMenuPopup$2:
    android.support.v7.view.menu.StandardMenuPopup this$0 -> this$0
    void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v7.app.AppCompatDelegateImplV9$6 -> android.support.v7.app.AppCompatDelegateImplV9$6:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.view.menu.MenuPresenter -> android.support.v7.view.menu.MenuPresenter:
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    void updateMenuView(boolean) -> updateMenuView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
android.support.v7.media.MediaRouter$GlobalMediaRouter -> android.support.v7.media.MediaRouter$GlobalMediaRouter:
    android.support.v7.media.SystemMediaRouteProvider mSystemProvider -> mSystemProvider
    android.support.v7.media.MediaRouter$RouteInfo mBluetoothRoute -> mBluetoothRoute
    android.support.v7.media.RemoteControlClientCompat$PlaybackInfo mPlaybackInfo -> mPlaybackInfo
    android.support.v7.media.MediaRouter$GlobalMediaRouter$MediaSessionRecord mMediaSession -> mMediaSession
    android.support.v7.media.MediaRouter$GlobalMediaRouter$ProviderCallback mProviderCallback -> mProviderCallback
    android.support.v7.media.MediaRouteProvider$RouteController mSelectedRouteController -> mSelectedRouteController
    android.support.v7.media.MediaRouteDiscoveryRequest mDiscoveryRequest -> mDiscoveryRequest
    android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener mSessionActiveListener -> mSessionActiveListener
    android.support.v7.media.MediaRouter$RouteInfo mDefaultRoute -> mDefaultRoute
    android.support.v7.media.RegisteredMediaRouteProviderWatcher mRegisteredProviderWatcher -> mRegisteredProviderWatcher
    android.content.Context mApplicationContext -> mApplicationContext
    android.support.v4.hardware.display.DisplayManagerCompat mDisplayManager -> mDisplayManager
    java.util.ArrayList mRoutes -> mRoutes
    java.util.Map mUniqueIdMap -> mUniqueIdMap
    java.util.Map mRouteControllerMap -> mRouteControllerMap
    android.support.v7.media.MediaRouter$GlobalMediaRouter$CallbackHandler mCallbackHandler -> mCallbackHandler
    boolean mLowRam -> mLowRam
    android.support.v7.media.MediaRouter$RouteInfo mSelectedRoute -> mSelectedRoute
    java.util.ArrayList mRouters -> mRouters
    android.support.v4.media.session.MediaSessionCompat mCompatSession -> mCompatSession
    java.util.ArrayList mRemoteControlClients -> mRemoteControlClients
    java.util.ArrayList mProviders -> mProviders
    void updateSelectedRouteIfNeeded(boolean) -> updateSelectedRouteIfNeeded
    void updateProviderContents(android.support.v7.media.MediaRouter$ProviderInfo,android.support.v7.media.MediaRouteProviderDescriptor) -> updateProviderContents
    boolean isSystemLiveAudioOnlyRoute(android.support.v7.media.MediaRouter$RouteInfo) -> isSystemLiveAudioOnlyRoute
    android.support.v7.media.MediaRouter$RouteInfo getDefaultRoute() -> getDefaultRoute
    void removeProvider(android.support.v7.media.MediaRouteProvider) -> removeProvider
    android.support.v7.media.MediaRouter$RouteInfo getBluetoothRoute() -> getBluetoothRoute
    android.support.v7.media.MediaRouter getRouter(android.content.Context) -> getRouter
    void selectRoute(android.support.v7.media.MediaRouter$RouteInfo) -> selectRoute
    void selectRoute(android.support.v7.media.MediaRouter$RouteInfo,int) -> selectRoute
    int findProviderInfo(android.support.v7.media.MediaRouteProvider) -> findProviderInfo
    void requestUpdateVolume(android.support.v7.media.MediaRouter$RouteInfo,int) -> requestUpdateVolume
    void setSelectedRouteInternal(android.support.v7.media.MediaRouter$RouteInfo,int) -> setSelectedRouteInternal
    android.support.v7.media.MediaRouter$RouteInfo getRoute(java.lang.String) -> getRoute
    void updatePlaybackInfoFromSelectedRoute() -> updatePlaybackInfoFromSelectedRoute
    boolean isRouteAvailable(android.support.v7.media.MediaRouteSelector,int) -> isRouteAvailable
    void updateDiscoveryRequest() -> updateDiscoveryRequest
    android.support.v7.media.MediaRouter$RouteInfo getSelectedRoute() -> getSelectedRoute
    java.lang.String getUniqueId(android.support.v7.media.MediaRouter$ProviderInfo,java.lang.String) -> getUniqueId
    java.lang.String -wrap0(android.support.v7.media.MediaRouter$GlobalMediaRouter,android.support.v7.media.MediaRouter$ProviderInfo,java.lang.String) -> -wrap0
    void updateProviderDescriptor(android.support.v7.media.MediaRouteProvider,android.support.v7.media.MediaRouteProviderDescriptor) -> updateProviderDescriptor
    java.util.List getRoutes() -> getRoutes
    boolean isSystemDefaultRoute(android.support.v7.media.MediaRouter$RouteInfo) -> isSystemDefaultRoute
    android.support.v7.media.MediaRouter$RouteInfo chooseFallbackRoute() -> chooseFallbackRoute
    int findRouteByUniqueId(java.lang.String) -> findRouteByUniqueId
    void start() -> start
    int updateRouteDescriptorAndNotify(android.support.v7.media.MediaRouter$RouteInfo,android.support.v7.media.MediaRouteDescriptor) -> updateRouteDescriptorAndNotify
    void -wrap1(android.support.v7.media.MediaRouter$GlobalMediaRouter,boolean) -> -wrap1
    void onSystemRouteSelectedByDescriptorId(java.lang.String) -> onSystemRouteSelectedByDescriptorId
    void <init>(android.content.Context) -> <init>
    void addProvider(android.support.v7.media.MediaRouteProvider) -> addProvider
    void requestSetVolume(android.support.v7.media.MediaRouter$RouteInfo,int) -> requestSetVolume
    android.support.v4.media.session.MediaSessionCompat$Token getMediaSessionToken() -> getMediaSessionToken
    java.lang.String assignRouteUniqueId(android.support.v7.media.MediaRouter$ProviderInfo,java.lang.String) -> assignRouteUniqueId
android.support.v7.view.menu.ActionMenuItemView -> android.support.v7.view.menu.ActionMenuItemView:
    android.support.v7.widget.ForwardingListener mForwardingListener -> mForwardingListener
    android.support.v7.view.menu.MenuItemImpl mItemData -> mItemData
    int mMinWidth -> mMinWidth
    android.graphics.drawable.Drawable mIcon -> mIcon
    boolean mAllowTextWithIcon -> mAllowTextWithIcon
    android.support.v7.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> mItemInvoker
    android.support.v7.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> mPopupCallback
    java.lang.CharSequence mTitle -> mTitle
    int mMaxIconSize -> mMaxIconSize
    int mSavedPaddingLeft -> mSavedPaddingLeft
    boolean mExpandedFormat -> mExpandedFormat
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean needsDividerAfter() -> needsDividerAfter
    void updateTextButtonVisibility() -> updateTextButtonVisibility
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void onMeasure(int,int) -> onMeasure
    boolean needsDividerBefore() -> needsDividerBefore
    boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    void setPadding(int,int,int,int) -> setPadding
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setItemInvoker(android.support.v7.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    void setTitle(java.lang.CharSequence) -> setTitle
    void setPopupCallback(android.support.v7.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.android.systemui.volume.ConfigurableTexts$2 -> com.android.systemui.volume.ConfigurableTexts$2:
    com.android.systemui.volume.ConfigurableTexts this$0 -> this$0
    android.widget.TextView val$text -> val$text
    int val$sp -> val$sp
    void <init>(com.android.systemui.volume.ConfigurableTexts,android.widget.TextView,int) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
com.android.systemui.pip.phone.PipManager$PinnedStackListener -> com.android.systemui.pip.phone.PipManager$PinnedStackListener:
    com.android.systemui.pip.phone.PipManager this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipManager) -> <init>
    void onActionsChanged(android.content.pm.ParceledListSlice) -> onActionsChanged
    void onImeVisibilityChanged(boolean,int) -> onImeVisibilityChanged
    void onListenerRegistered(android.view.IPinnedStackController) -> onListenerRegistered
    void onMinimizedStateChanged(boolean) -> onMinimizedStateChanged
    void onMovementBoundsChanged(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,int) -> onMovementBoundsChanged
    void lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_4801(android.view.IPinnedStackController) -> lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_4801
    void lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_5028(boolean,int) -> lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_5028
    void lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_5251(boolean) -> lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_5251
    void lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_5589(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,int) -> lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_5589
    void lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_5894(android.content.pm.ParceledListSlice) -> lambda$-com_android_systemui_pip_phone_PipManager$PinnedStackListener_5894
    void <init>(com.android.systemui.pip.phone.PipManager,com.android.systemui.pip.phone.PipManager$PinnedStackListener) -> <init>
com.android.systemui.statusbar.notification.-$Lambda$kbUh6o7p-qtGMUyEvwvvHTaPWcM -> com.android.systemui.statusbar.notification.-$Lambda$kbUh6o7p-qtGMUyEvwvvHTaPWcM:
    byte $id -> $id
    java.lang.Object -$f0 -> -$f0
    void <init>(byte,java.lang.Object) -> <init>
    void $m$0(android.animation.ValueAnimator) -> $m$0
    void $m$1(android.animation.ValueAnimator) -> $m$1
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.systemui.-$Lambda$LNq66TT8jS0-kRjuflAuQa45E9s$1 -> com.android.systemui.-$Lambda$LNq66TT8jS0-kRjuflAuQa45E9s$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.ViewTreeObserver$InternalInsetsInfo) -> $m$0
    void onComputeInternalInsets(android.view.ViewTreeObserver$InternalInsetsInfo) -> onComputeInternalInsets
com.android.systemui.volume.-$Lambda$vM5D88JNNgGAVWmVTcPK7FEgNVw -> com.android.systemui.volume.-$Lambda$vM5D88JNNgGAVWmVTcPK7FEgNVw:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(java.lang.Object) -> $m$0
    void accept(java.lang.Object) -> accept
com.android.systemui.statusbar.policy.ExtensionController -> com.android.systemui.statusbar.policy.ExtensionController:
    com.android.systemui.statusbar.policy.ExtensionController$ExtensionBuilder newExtension(java.lang.Class) -> newExtension
android.support.v7.widget.AdapterHelper -> android.support.v7.widget.AdapterHelper:
    java.util.ArrayList mPendingUpdates -> mPendingUpdates
    java.util.ArrayList mPostponedList -> mPostponedList
    android.support.v7.widget.AdapterHelper$Callback mCallback -> mCallback
    int mExistingUpdateTypes -> mExistingUpdateTypes
    boolean mDisableRecycler -> mDisableRecycler
    android.support.v4.util.Pools$Pool mUpdateOpPool -> mUpdateOpPool
    java.lang.Runnable mOnItemProcessedCallback -> mOnItemProcessedCallback
    android.support.v7.widget.OpReorderer mOpReorderer -> mOpReorderer
    boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    void <init>(android.support.v7.widget.AdapterHelper$Callback,boolean) -> <init>
    int findPositionOffset(int,int) -> findPositionOffset
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
    boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    boolean canFindInPreLayout(int) -> canFindInPreLayout
    boolean hasUpdates() -> hasUpdates
    boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    void preProcess() -> preProcess
    void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyRemove
    void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyUpdate
    void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    void <init>(android.support.v7.widget.AdapterHelper$Callback) -> <init>
    void consumePostponedUpdates() -> consumePostponedUpdates
    int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyAdd
    void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyMove
    boolean hasPendingUpdates() -> hasPendingUpdates
    void reset() -> reset
    void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    int findPositionOffset(int) -> findPositionOffset
    boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
android.support.v4.graphics.TypefaceCompatApi24Impl -> android.support.v4.graphics.TypefaceCompatApi24Impl:
    java.lang.Class sFontFamily -> sFontFamily
    java.lang.reflect.Constructor sFontFamilyCtor -> sFontFamilyCtor
    java.lang.reflect.Method sAddFontWeightStyle -> sAddFontWeightStyle
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> sCreateFromFamiliesWithDefault
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    boolean isUsable() -> isUsable
    java.lang.Object newFamily() -> newFamily
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
android.support.graphics.drawable.ArgbEvaluator -> android.support.graphics.drawable.ArgbEvaluator:
    android.support.graphics.drawable.ArgbEvaluator sInstance -> sInstance
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    android.support.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
android.support.v7.recyclerview.R$id -> android.support.v7.recyclerview.R$id:
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    void <init>() -> <init>
com.android.settingslib.bluetooth.BluetoothA2dpWrapperImpl$Factory -> com.android.settingslib.bluetooth.BluetoothA2dpWrapperImpl$Factory:
    void <init>() -> <init>
    com.android.settingslib.bluetooth.BluetoothA2dpWrapper getInstance(android.bluetooth.BluetoothA2dp) -> getInstance
com.android.systemui.recents.views.TaskView$TaskViewCallbacks -> com.android.systemui.recents.views.TaskView$TaskViewCallbacks:
    void onTaskViewClipStateChanged(com.android.systemui.recents.views.TaskView) -> onTaskViewClipStateChanged
android.support.v17.leanback.widget.PlaybackControlsRowView -> android.support.v17.leanback.widget.PlaybackControlsRowView:
    android.support.v17.leanback.widget.PlaybackControlsRowView$OnUnhandledKeyListener mOnUnhandledKeyListener -> mOnUnhandledKeyListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.settingslib.wifi.TimestampedScoredNetwork -> com.android.settingslib.wifi.TimestampedScoredNetwork:
    android.net.ScoredNetwork mScore -> mScore
    android.os.Parcelable$Creator CREATOR -> CREATOR
    long mUpdatedTimestampMillis -> mUpdatedTimestampMillis
    void <init>(android.net.ScoredNetwork,long) -> <init>
    int describeContents() -> describeContents
    android.net.ScoredNetwork getScore() -> getScore
    void <clinit>() -> <clinit>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void update(android.net.ScoredNetwork,long) -> update
    void <init>(android.os.Parcel) -> <init>
    long getUpdatedTimestampMillis() -> getUpdatedTimestampMillis
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$1 -> this$1
    void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    void run() -> run
com.android.systemui.pip.tv.PipMenuActivity -> com.android.systemui.pip.tv.PipMenuActivity:
    android.animation.Animator mFadeInAnimation -> mFadeInAnimation
    android.animation.Animator mFadeOutAnimation -> mFadeOutAnimation
    com.android.systemui.pip.tv.PipControlsView mPipControlsView -> mPipControlsView
    com.android.systemui.pip.tv.PipManager mPipManager -> mPipManager
    boolean mRestorePipSizeWhenClose -> mRestorePipSizeWhenClose
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onMoveToFullscreen() -> onMoveToFullscreen
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    void onPipActivityClosed() -> onPipActivityClosed
    void onPipEntered() -> onPipEntered
    void onPipMenuActionsChanged(android.content.pm.ParceledListSlice) -> onPipMenuActionsChanged
    void onPipResizeAboutToStart() -> onPipResizeAboutToStart
    void onResume() -> onResume
    void onShowPipMenu() -> onShowPipMenu
    void restorePipAndFinish() -> restorePipAndFinish
com.android.systemui.statusbar.policy.Clock$3 -> com.android.systemui.statusbar.policy.Clock$3:
    com.android.systemui.statusbar.policy.Clock this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.Clock) -> <init>
    void run() -> run
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    boolean isInPool(java.lang.Object) -> isInPool
    boolean release(java.lang.Object) -> release
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
android.support.v7.widget.ViewBoundsCheck -> android.support.v7.widget.ViewBoundsCheck:
    android.support.v7.widget.ViewBoundsCheck$BoundFlags mBoundFlags -> mBoundFlags
    android.support.v7.widget.ViewBoundsCheck$Callback mCallback -> mCallback
    android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
    void <init>(android.support.v7.widget.ViewBoundsCheck$Callback) -> <init>
com.android.systemui.statusbar.GestureRecorder -> com.android.systemui.statusbar.GestureRecorder:
    java.lang.String TAG -> TAG
    com.android.systemui.statusbar.GestureRecorder$Gesture mCurrentGesture -> mCurrentGesture
    java.util.LinkedList mGestures -> mGestures
    android.os.Handler mHandler -> mHandler
    void saveLater() -> saveLater
    void tag(java.lang.String,java.lang.String) -> tag
    void tag(long,java.lang.String,java.lang.String) -> tag
    void <clinit>() -> <clinit>
android.support.v17.leanback.widget.RowHeaderView -> android.support.v17.leanback.widget.RowHeaderView:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
android.support.v17.leanback.widget.ControlBar -> android.support.v17.leanback.widget.ControlBar:
    int mChildMarginFromCenter -> mChildMarginFromCenter
    int mLastFocusIndex -> mLastFocusIndex
    android.support.v17.leanback.widget.ControlBar$OnChildFocusedListener mOnChildFocusedListener -> mOnChildFocusedListener
    boolean mDefaultFocusToMiddle -> mDefaultFocusToMiddle
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onMeasure(int,int) -> onMeasure
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    int getDefaultFocusIndex() -> getDefaultFocusIndex
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
com.android.systemui.classifier.Classifier -> com.android.systemui.classifier.Classifier:
    com.android.systemui.classifier.ClassifierData mClassifierData -> mClassifierData
    void <init>() -> <init>
    java.lang.String getTag() -> getTag
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.systemui.recents.events.ui.DraggingInRecentsEvent -> com.android.systemui.recents.events.ui.DraggingInRecentsEvent:
    float distanceFromTop -> distanceFromTop
    void <init>(float) -> <init>
com.android.systemui.recents.events.ui.TaskViewDismissedEvent -> com.android.systemui.recents.events.ui.TaskViewDismissedEvent:
    com.android.systemui.recents.model.Task task -> task
    com.android.systemui.recents.views.AnimationProps animation -> animation
    com.android.systemui.recents.views.TaskView taskView -> taskView
    void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.AnimationProps) -> <init>
com.android.systemui.tuner.LockscreenFragment$ActivityButton -> com.android.systemui.tuner.LockscreenFragment$ActivityButton:
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState mIconState -> mIconState
    android.content.Intent mIntent -> mIntent
    void <init>(android.content.Context,android.content.pm.ActivityInfo) -> <init>
    com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
com.android.keyguard.KeyguardDisplayManager$1 -> com.android.keyguard.KeyguardDisplayManager$1:
    com.android.keyguard.KeyguardDisplayManager this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardDisplayManager) -> <init>
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
android.support.v7.view.menu.MenuItemImpl -> android.support.v7.view.menu.MenuItemImpl:
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    android.graphics.PorterDuff$Mode mIconTintMode -> mIconTintMode
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v4.view.ActionProvider mActionProvider -> mActionProvider
    int mShowAsAction -> mShowAsAction
    int mId -> mId
    java.lang.Runnable mItemCallback -> mItemCallback
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> mOnActionExpandListener
    int mOrdering -> mOrdering
    int mIconResId -> mIconResId
    boolean mIsActionViewExpanded -> mIsActionViewExpanded
    int mShortcutAlphabeticModifiers -> mShortcutAlphabeticModifiers
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> mMenuInfo
    android.content.res.ColorStateList mIconTintList -> mIconTintList
    int mGroup -> mGroup
    android.support.v7.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    android.view.View mActionView -> mActionView
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    java.lang.CharSequence mTitle -> mTitle
    boolean mNeedToApplyIconTint -> mNeedToApplyIconTint
    java.lang.String sPrependShortcutLabel -> sPrependShortcutLabel
    java.lang.String sEnterShortcutLabel -> sEnterShortcutLabel
    int mCategoryOrder -> mCategoryOrder
    boolean mHasIconTintMode -> mHasIconTintMode
    char mShortcutNumericChar -> mShortcutNumericChar
    int mFlags -> mFlags
    boolean mHasIconTint -> mHasIconTint
    java.lang.CharSequence mTooltipText -> mTooltipText
    java.lang.CharSequence mContentDescription -> mContentDescription
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    android.content.Intent mIntent -> mIntent
    java.lang.String sSpaceShortcutLabel -> sSpaceShortcutLabel
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    int mShortcutNumericModifiers -> mShortcutNumericModifiers
    java.lang.String sDeleteShortcutLabel -> sDeleteShortcutLabel
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    java.lang.CharSequence getTitle() -> getTitle
    boolean shouldShowIcon() -> shouldShowIcon
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setVisible(boolean) -> setVisible
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    java.lang.CharSequence getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView) -> getTitleForItemView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    boolean shouldShowShortcut() -> shouldShowShortcut
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean collapseActionView() -> collapseActionView
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isActionButton() -> isActionButton
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    java.lang.String getShortcutLabel() -> getShortcutLabel
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    boolean isEnabled() -> isEnabled
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    boolean expandActionView() -> expandActionView
    android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    java.lang.String toString() -> toString
    int getOrder() -> getOrder
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    void setCheckedInt(boolean) -> setCheckedInt
    android.view.MenuItem setActionView(int) -> setActionView
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    java.lang.CharSequence getTooltipText() -> getTooltipText
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    boolean isActionViewExpanded() -> isActionViewExpanded
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    void setShowAsAction(int) -> setShowAsAction
    boolean isVisible() -> isVisible
    int getGroupId() -> getGroupId
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    char getNumericShortcut() -> getNumericShortcut
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean setVisibleInt(boolean) -> setVisibleInt
    char getShortcut() -> getShortcut
    android.view.View getActionView() -> getActionView
    void setIsActionButton(boolean) -> setIsActionButton
    int getOrdering() -> getOrdering
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean showsTextAsAction() -> showsTextAsAction
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    int getItemId() -> getItemId
    void <init>(android.support.v7.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    boolean isChecked() -> isChecked
    boolean invoke() -> invoke
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setSubMenu(android.support.v7.view.menu.SubMenuBuilder) -> setSubMenu
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean hasSubMenu() -> hasSubMenu
    android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    int getNumericModifiers() -> getNumericModifiers
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
com.android.systemui.volume.car.CarVolumeDialogController$1 -> com.android.systemui.volume.car.CarVolumeDialogController$1:
    com.android.systemui.volume.car.CarVolumeDialogController this$0 -> this$0
    void <init>(com.android.systemui.volume.car.CarVolumeDialogController) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
android.support.v7.widget.ActionBarContextView -> android.support.v7.widget.ActionBarContextView:
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.view.View mClose -> mClose
    android.view.View mCustomView -> mCustomView
    java.lang.CharSequence mTitle -> mTitle
    android.widget.TextView mSubtitleView -> mSubtitleView
    android.widget.TextView mTitleView -> mTitleView
    boolean mTitleOptional -> mTitleOptional
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    int mCloseItemLayout -> mCloseItemLayout
    java.lang.CharSequence getTitle() -> getTitle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean showOverflowMenu() -> showOverflowMenu
    void initForMode(android.support.v7.view.ActionMode) -> initForMode
    void setTitleOptional(boolean) -> setTitleOptional
    void setContentHeight(int) -> setContentHeight
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean isTitleOptional() -> isTitleOptional
    void setTitle(java.lang.CharSequence) -> setTitle
    void killMode() -> killMode
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void onMeasure(int,int) -> onMeasure
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void initTitle() -> initTitle
    void closeMode() -> closeMode
    void setVisibility(int) -> setVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void <init>(android.content.Context) -> <init>
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.android.systemui.qs.QSSecurityFooter$VpnSpan -> com.android.systemui.qs.QSSecurityFooter$VpnSpan:
    com.android.systemui.qs.QSSecurityFooter this$0 -> this$0
    void <init>(com.android.systemui.qs.QSSecurityFooter) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void onClick(android.view.View) -> onClick
android.support.v7.app.ToolbarActionBar -> android.support.v7.app.ToolbarActionBar:
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.lang.Runnable mMenuInvalidator -> mMenuInvalidator
    android.view.Window$Callback mWindowCallback -> mWindowCallback
    boolean mMenuCallbackSet -> mMenuCallbackSet
    android.support.v7.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    boolean collapseActionView() -> collapseActionView
    android.content.Context getThemedContext() -> getThemedContext
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    android.view.Menu getMenu() -> getMenu
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
com.android.systemui.recents.RecentsImpl$2 -> com.android.systemui.recents.RecentsImpl$2:
    com.android.systemui.recents.RecentsImpl this$0 -> this$0
    void <init>(com.android.systemui.recents.RecentsImpl) -> <init>
    void run() -> run
com.android.systemui.statusbar.policy.DeadZone$1 -> com.android.systemui.statusbar.policy.DeadZone$1:
    com.android.systemui.statusbar.policy.DeadZone this$0 -> this$0
    void <init>(com.android.systemui.statusbar.policy.DeadZone) -> <init>
    void run() -> run
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    void <init>() -> <init>
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.statusbar.notification.ProgressTransformState -> com.android.systemui.statusbar.notification.ProgressTransformState:
    android.util.Pools$SimplePool sInstancePool -> sInstancePool
    com.android.systemui.statusbar.notification.ProgressTransformState obtain() -> obtain
    void <init>() -> <init>
    void recycle() -> recycle
    boolean sameAs(com.android.systemui.statusbar.notification.TransformState) -> sameAs
    void <clinit>() -> <clinit>
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    void <init>() -> <init>
android.support.v7.widget.AppCompatMultiAutoCompleteTextView -> android.support.v7.widget.AppCompatMultiAutoCompleteTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setBackgroundResource(int) -> setBackgroundResource
    void <clinit>() -> <clinit>
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
com.android.systemui.stackdivider.DividerState -> com.android.systemui.stackdivider.DividerState:
    boolean animateAfterRecentsDrawn -> animateAfterRecentsDrawn
    boolean growAfterRecentsDrawn -> growAfterRecentsDrawn
    float mRatioPositionBeforeMinimized -> mRatioPositionBeforeMinimized
    void <init>() -> <init>
android.support.v7.widget.ListPopupWindow -> android.support.v7.widget.ListPopupWindow:
    boolean mDropDownVerticalOffsetSet -> mDropDownVerticalOffsetSet
    android.os.Handler mHandler -> mHandler
    boolean mForceIgnoreOutsideTouch -> mForceIgnoreOutsideTouch
    android.support.v7.widget.ListPopupWindow$ListSelectorHider mHideSelector -> mHideSelector
    int mDropDownGravity -> mDropDownGravity
    boolean mIsAnimatedFromAnchor -> mIsAnimatedFromAnchor
    android.support.v7.widget.ListPopupWindow$PopupScrollListener mScrollListener -> mScrollListener
    android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> mTouchInterceptor
    boolean mDropDownAlwaysVisible -> mDropDownAlwaysVisible
    int mDropDownHeight -> mDropDownHeight
    int mDropDownWidth -> mDropDownWidth
    java.lang.Runnable mShowDropDownRunnable -> mShowDropDownRunnable
    android.content.Context mContext -> mContext
    int mDropDownVerticalOffset -> mDropDownVerticalOffset
    java.lang.reflect.Method sClipToWindowEnabledMethod -> sClipToWindowEnabledMethod
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> sGetMaxAvailableHeightMethod
    int mListItemExpandMaximum -> mListItemExpandMaximum
    android.database.DataSetObserver mObserver -> mObserver
    android.support.v7.widget.DropDownListView mDropDownList -> mDropDownList
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> sSetEpicenterBoundsMethod
    boolean mOverlapAnchor -> mOverlapAnchor
    android.view.View mPromptView -> mPromptView
    android.graphics.drawable.Drawable mDropDownListHighlight -> mDropDownListHighlight
    int mDropDownHorizontalOffset -> mDropDownHorizontalOffset
    android.graphics.Rect mEpicenterBounds -> mEpicenterBounds
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    boolean mModal -> mModal
    android.widget.ListAdapter mAdapter -> mAdapter
    int mDropDownWindowLayoutType -> mDropDownWindowLayoutType
    int mPromptPosition -> mPromptPosition
    android.view.View mDropDownAnchorView -> mDropDownAnchorView
    android.graphics.Rect mTempRect -> mTempRect
    boolean mOverlapAnchorSet -> mOverlapAnchorSet
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> mResizePopupRunnable
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> mItemClickListener
    android.widget.PopupWindow mPopup -> mPopup
    int getVerticalOffset() -> getVerticalOffset
    void setContentWidth(int) -> setContentWidth
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setOverlapAnchor(boolean) -> setOverlapAnchor
    void dismiss() -> dismiss
    android.widget.ListView getListView() -> getListView
    void setPromptPosition(int) -> setPromptPosition
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean isShowing() -> isShowing
    void clearListSelection() -> clearListSelection
    void setVerticalOffset(int) -> setVerticalOffset
    int getHorizontalOffset() -> getHorizontalOffset
    void setWidth(int) -> setWidth
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    void setAnimationStyle(int) -> setAnimationStyle
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setDropDownGravity(int) -> setDropDownGravity
    boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    void setAnchorView(android.view.View) -> setAnchorView
    void setInputMethodMode(int) -> setInputMethodMode
    void setHorizontalOffset(int) -> setHorizontalOffset
    void removePromptView() -> removePromptView
    void setModal(boolean) -> setModal
    boolean isModal() -> isModal
    void setSelection(int) -> setSelection
    void show() -> show
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getWidth() -> getWidth
    void <init>(android.content.Context) -> <init>
    android.view.View getAnchorView() -> getAnchorView
    android.graphics.drawable.Drawable getBackground() -> getBackground
    void <clinit>() -> <clinit>
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    int buildDropDown() -> buildDropDown
com.android.systemui.volume.ZenModePanel$5 -> com.android.systemui.volume.ZenModePanel$5:
    com.android.systemui.volume.ZenModePanel this$0 -> this$0
    android.view.View val$row -> val$row
    com.android.systemui.volume.ZenModePanel$ConditionTag val$tag -> val$tag
    int val$rowId -> val$rowId
    void <init>(com.android.systemui.volume.ZenModePanel,android.view.View,com.android.systemui.volume.ZenModePanel$ConditionTag,int) -> <init>
    void onClick(android.view.View) -> onClick
com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$7 -> com.android.systemui.statusbar.phone.PhoneStatusBarPolicy$7:
    com.android.systemui.statusbar.phone.PhoneStatusBarPolicy this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarPolicy) -> <init>
    void run() -> run
android.support.v17.leanback.widget.picker.TimePicker -> android.support.v17.leanback.widget.picker.TimePicker:
    int mCurrentAmPmIndex -> mCurrentAmPmIndex
    android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant -> mConstant
    int mColHourIndex -> mColHourIndex
    android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn -> mAmPmColumn
    boolean mIs24hFormat -> mIs24hFormat
    int mColAmPmIndex -> mColAmPmIndex
    android.support.v17.leanback.widget.picker.PickerColumn mHourColumn -> mHourColumn
    int mColMinuteIndex -> mColMinuteIndex
    android.support.v17.leanback.widget.picker.PickerColumn mMinuteColumn -> mMinuteColumn
    int mCurrentHour -> mCurrentHour
    int mCurrentMinute -> mCurrentMinute
    java.lang.String mTimePickerFormat -> mTimePickerFormat
    void setAmPmValue() -> setAmPmValue
    java.lang.String getBestHourMinutePattern() -> getBestHourMinutePattern
    void updateColumns() -> updateColumns
    void setMinute(int) -> setMinute
    void onColumnValueChanged(int,int) -> onColumnValueChanged
    boolean updateMax(android.support.v17.leanback.widget.picker.PickerColumn,int) -> updateMax
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean isAnyOf(char,char[]) -> isAnyOf
    void setHour(int) -> setHour
    java.lang.String extractTimeFields() -> extractTimeFields
    void updateColumnsRange() -> updateColumnsRange
    boolean is24Hour() -> is24Hour
    boolean updateMin(android.support.v17.leanback.widget.picker.PickerColumn,int) -> updateMin
    java.util.List extractSeparators() -> extractSeparators
android.support.v7.preference.PreferenceManager$OnPreferenceTreeClickListener -> android.support.v7.preference.PreferenceManager$OnPreferenceTreeClickListener:
    boolean onPreferenceTreeClick(android.support.v7.preference.Preference) -> onPreferenceTreeClick
com.android.systemui.recents.events.ui.ShowIncompatibleAppOverlayEvent -> com.android.systemui.recents.events.ui.ShowIncompatibleAppOverlayEvent:
    void <init>() -> <init>
com.android.systemui.tuner.ShortcutParser$Shortcut -> com.android.systemui.tuner.ShortcutParser$Shortcut:
    android.graphics.drawable.Icon icon -> icon
    java.lang.String label -> label
    android.content.Intent intent -> intent
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String pkg -> pkg
    java.lang.String toString() -> toString
    com.android.systemui.tuner.ShortcutParser$Shortcut create(android.content.Context,java.lang.String) -> create
    void <init>() -> <init>
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    void <init>() -> <init>
    void setMediaUri(java.lang.Object,android.net.Uri) -> setMediaUri
com.android.systemui.statusbar.phone.NotificationPanelView$4 -> com.android.systemui.statusbar.phone.NotificationPanelView$4:
    com.android.systemui.statusbar.phone.NotificationPanelView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.NotificationPanelView) -> <init>
    void run() -> run
android.support.v7.view.menu.MenuItemImpl$1 -> android.support.v7.view.menu.MenuItemImpl$1:
    android.support.v7.view.menu.MenuItemImpl this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuItemImpl) -> <init>
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
com.android.systemui.statusbar.stack.ViewState$4 -> com.android.systemui.statusbar.stack.ViewState$4:
    boolean mWasCancelled -> mWasCancelled
    com.android.systemui.statusbar.stack.ViewState this$0 -> this$0
    android.view.View val$child -> val$child
    float val$newEndValue -> val$newEndValue
    void <init>(com.android.systemui.statusbar.stack.ViewState,android.view.View,float) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.systemui.statusbar.NotificationGuts$2 -> com.android.systemui.statusbar.NotificationGuts$2:
    com.android.systemui.statusbar.NotificationGuts this$0 -> this$0
    void <init>(com.android.systemui.statusbar.NotificationGuts) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.graphics.ColorUtils -> android.support.v4.graphics.ColorUtils:
    java.lang.ThreadLocal TEMP_ARRAY -> TEMP_ARRAY
    double calculateContrast(int,int) -> calculateContrast
    int compositeAlpha(int,int) -> compositeAlpha
    double[] getTempDouble3Array() -> getTempDouble3Array
    float circularInterpolate(float,float,float) -> circularInterpolate
    int compositeComponent(int,int,int,int,int) -> compositeComponent
    void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    double calculateLuminance(int) -> calculateLuminance
    void colorToXYZ(int,double[]) -> colorToXYZ
    void colorToHSL(int,float[]) -> colorToHSL
    int constrain(int,int,int) -> constrain
    int blendARGB(int,int,float) -> blendARGB
    void <clinit>() -> <clinit>
    int HSLToColor(float[]) -> HSLToColor
    void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    int setAlphaComponent(int,int) -> setAlphaComponent
    float constrain(float,float,float) -> constrain
    int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    void <init>() -> <init>
    int compositeColors(int,int) -> compositeColors
android.support.v17.leanback.widget.BaseCardView$InfoHeightAnimation -> android.support.v17.leanback.widget.BaseCardView$InfoHeightAnimation:
    float mDelta -> mDelta
    android.support.v17.leanback.widget.BaseCardView this$0 -> this$0
    float mStartValue -> mStartValue
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void <init>(android.support.v17.leanback.widget.BaseCardView,float,float) -> <init>
android.support.v7.view.menu.CascadingMenuPopup$2 -> android.support.v7.view.menu.CascadingMenuPopup$2:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> this$0
    void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.android.systemui.plugins.R$drawable -> com.android.systemui.plugins.R$drawable:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background -> abc_dialog_material_background
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_material -> abc_ic_ab_back_material
    int abc_ic_arrow_drop_right_black_24dp -> abc_ic_arrow_drop_right_black_24dp
    int abc_ic_clear_material -> abc_ic_clear_material
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_material -> abc_ic_go_search_api_material
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_overflow_material -> abc_ic_menu_overflow_material
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_material -> abc_ic_search_api_material
    int abc_ic_star_black_16dp -> abc_ic_star_black_16dp
    int abc_ic_star_black_36dp -> abc_ic_star_black_36dp
    int abc_ic_star_black_48dp -> abc_ic_star_black_48dp
    int abc_ic_star_half_black_16dp -> abc_ic_star_half_black_16dp
    int abc_ic_star_half_black_36dp -> abc_ic_star_half_black_36dp
    int abc_ic_star_half_black_48dp -> abc_ic_star_half_black_48dp
    int abc_ic_voice_search_api_material -> abc_ic_voice_search_api_material
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_indicator_material -> abc_ratingbar_indicator_material
    int abc_ratingbar_material -> abc_ratingbar_material
    int abc_ratingbar_small_material -> abc_ratingbar_small_material
    int abc_scrubber_control_off_mtrl_alpha -> abc_scrubber_control_off_mtrl_alpha
    int abc_scrubber_control_to_pressed_mtrl_000 -> abc_scrubber_control_to_pressed_mtrl_000
    int abc_scrubber_control_to_pressed_mtrl_005 -> abc_scrubber_control_to_pressed_mtrl_005
    int abc_scrubber_primary_mtrl_alpha -> abc_scrubber_primary_mtrl_alpha
    int abc_scrubber_track_mtrl_alpha -> abc_scrubber_track_mtrl_alpha
    int abc_seekbar_thumb_material -> abc_seekbar_thumb_material
    int abc_seekbar_tick_mark_material -> abc_seekbar_tick_mark_material
    int abc_seekbar_track_material -> abc_seekbar_track_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_text_select_handle_left_mtrl_dark -> abc_text_select_handle_left_mtrl_dark
    int abc_text_select_handle_left_mtrl_light -> abc_text_select_handle_left_mtrl_light
    int abc_text_select_handle_middle_mtrl_dark -> abc_text_select_handle_middle_mtrl_dark
    int abc_text_select_handle_middle_mtrl_light -> abc_text_select_handle_middle_mtrl_light
    int abc_text_select_handle_right_mtrl_dark -> abc_text_select_handle_right_mtrl_dark
    int abc_text_select_handle_right_mtrl_light -> abc_text_select_handle_right_mtrl_light
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int abc_vector_test -> abc_vector_test
    int android -> android
    int assist_orb_navbar_scrim -> assist_orb_navbar_scrim
    int assist_orb_scrim -> assist_orb_scrim
    int brightness_mirror_background -> brightness_mirror_background
    int btn_borderless_rect -> btn_borderless_rect
    int cactus1 -> cactus1
    int cactus2 -> cactus2
    int cactus3 -> cactus3
    int car_ic_arrow -> car_ic_arrow
    int car_progress_bar -> car_progress_bar
    int car_round_button -> car_round_button
    int car_stat_sys_data_bluetooth_indicator -> car_stat_sys_data_bluetooth_indicator
    int clipboard_empty -> clipboard_empty
    int clipboard_full -> clipboard_full
    int cloud -> cloud
    int cloud_off -> cloud_off
    int dessert_android -> dessert_android
    int dessert_cupcake -> dessert_cupcake
    int dessert_dandroid -> dessert_dandroid
    int dessert_donut -> dessert_donut
    int dessert_donutburger -> dessert_donutburger
    int dessert_eclair -> dessert_eclair
    int dessert_flan -> dessert_flan
    int dessert_froyo -> dessert_froyo
    int dessert_gingerbread -> dessert_gingerbread
    int dessert_honeycomb -> dessert_honeycomb
    int dessert_ics -> dessert_ics
    int dessert_jandycane -> dessert_jandycane
    int dessert_jellybean -> dessert_jellybean
    int dessert_keylimepie -> dessert_keylimepie
    int dessert_kitkat -> dessert_kitkat
    int dessert_petitfour -> dessert_petitfour
    int dessert_zombiegingerbread -> dessert_zombiegingerbread
    int dismiss_all_shape -> dismiss_all_shape
    int dismiss_all_shape_animation -> dismiss_all_shape_animation
    int error_to_trustedstate -> error_to_trustedstate
    int error_to_trustedstate_animation -> error_to_trustedstate_animation
    int forced_resizable_background -> forced_resizable_background
    int header_dot -> header_dot
    int heads_up_notification_bg_pressed -> heads_up_notification_bg_pressed
    int heads_up_scrim -> heads_up_scrim
    int home -> home
    int ic_access_alarms_big -> ic_access_alarms_big
    int ic_access_alarms_small -> ic_access_alarms_small
    int ic_activity_down -> ic_activity_down
    int ic_activity_up -> ic_activity_up
    int ic_add -> ic_add
    int ic_add_circle_qs -> ic_add_circle_qs
    int ic_android -> ic_android
    int ic_aod_charging_24dp -> ic_aod_charging_24dp
    int ic_audiotrack_dark -> ic_audiotrack_dark
    int ic_audiotrack_light -> ic_audiotrack_light
    int ic_backspace_black_24dp -> ic_backspace_black_24dp
    int ic_bluetooth_transient -> ic_bluetooth_transient
    int ic_bluetooth_transient_animation -> ic_bluetooth_transient_animation
    int ic_brightness_thumb -> ic_brightness_thumb
    int ic_bt_cellphone -> ic_bt_cellphone
    int ic_bt_headphones_a2dp -> ic_bt_headphones_a2dp
    int ic_bt_headset_hfp -> ic_bt_headset_hfp
    int ic_bt_misc_hid -> ic_bt_misc_hid
    int ic_bt_network_pan -> ic_bt_network_pan
    int ic_bt_pointing_hid -> ic_bt_pointing_hid
    int ic_camera_alt_24dp -> ic_camera_alt_24dp
    int ic_cancel_white_24dp -> ic_cancel_white_24dp
    int ic_chevron_left -> ic_chevron_left
    int ic_close -> ic_close
    int ic_close_white -> ic_close_white
    int ic_close_white_rounded -> ic_close_white_rounded
    int ic_data_off -> ic_data_off
    int ic_data_on -> ic_data_on
    int ic_data_saver -> ic_data_saver
    int ic_data_saver_off -> ic_data_saver_off
    int ic_data_unavailable -> ic_data_unavailable
    int ic_delete -> ic_delete
    int ic_device_thermostat_24 -> ic_device_thermostat_24
    int ic_dialog_close_dark -> ic_dialog_close_dark
    int ic_dialog_close_light -> ic_dialog_close_light
    int ic_dismiss_outline -> ic_dismiss_outline
    int ic_dnd -> ic_dnd
    int ic_dnd_disable -> ic_dnd_disable
    int ic_dnd_total_silence -> ic_dnd_total_silence
    int ic_dnd_total_silence_disable -> ic_dnd_total_silence_disable
    int ic_done_black_24dp -> ic_done_black_24dp
    int ic_drag_handle -> ic_drag_handle
    int ic_expand_less -> ic_expand_less
    int ic_expand_more -> ic_expand_more
    int ic_fingerprint -> ic_fingerprint
    int ic_fingerprint_error -> ic_fingerprint_error
    int ic_fullscreen_white_24dp -> ic_fullscreen_white_24dp
    int ic_group_collapse_00 -> ic_group_collapse_00
    int ic_group_collapse_01 -> ic_group_collapse_01
    int ic_group_collapse_02 -> ic_group_collapse_02
    int ic_group_collapse_03 -> ic_group_collapse_03
    int ic_group_collapse_04 -> ic_group_collapse_04
    int ic_group_collapse_05 -> ic_group_collapse_05
    int ic_group_collapse_06 -> ic_group_collapse_06
    int ic_group_collapse_07 -> ic_group_collapse_07
    int ic_group_collapse_08 -> ic_group_collapse_08
    int ic_group_collapse_09 -> ic_group_collapse_09
    int ic_group_collapse_10 -> ic_group_collapse_10
    int ic_group_collapse_11 -> ic_group_collapse_11
    int ic_group_collapse_12 -> ic_group_collapse_12
    int ic_group_collapse_13 -> ic_group_collapse_13
    int ic_group_collapse_14 -> ic_group_collapse_14
    int ic_group_collapse_15 -> ic_group_collapse_15
    int ic_group_expand_00 -> ic_group_expand_00
    int ic_group_expand_01 -> ic_group_expand_01
    int ic_group_expand_02 -> ic_group_expand_02
    int ic_group_expand_03 -> ic_group_expand_03
    int ic_group_expand_04 -> ic_group_expand_04
    int ic_group_expand_05 -> ic_group_expand_05
    int ic_group_expand_06 -> ic_group_expand_06
    int ic_group_expand_07 -> ic_group_expand_07
    int ic_group_expand_08 -> ic_group_expand_08
    int ic_group_expand_09 -> ic_group_expand_09
    int ic_group_expand_10 -> ic_group_expand_10
    int ic_group_expand_11 -> ic_group_expand_11
    int ic_group_expand_12 -> ic_group_expand_12
    int ic_group_expand_13 -> ic_group_expand_13
    int ic_group_expand_14 -> ic_group_expand_14
    int ic_group_expand_15 -> ic_group_expand_15
    int ic_headset -> ic_headset
    int ic_headset_mic -> ic_headset_mic
    int ic_help_actionbar -> ic_help_actionbar
    int ic_history -> ic_history
    int ic_hotspot -> ic_hotspot
    int ic_hotspot_transient -> ic_hotspot_transient
    int ic_hotspot_transient_animation -> ic_hotspot_transient_animation
    int ic_hotspot_unavailable -> ic_hotspot_unavailable
    int ic_ime_switcher_default -> ic_ime_switcher_default
    int ic_info -> ic_info
    int ic_info_outline -> ic_info_outline
    int ic_info_outline_24dp -> ic_info_outline_24dp
    int ic_invert_colors -> ic_invert_colors
    int ic_ksh_key_backspace -> ic_ksh_key_backspace
    int ic_ksh_key_down -> ic_ksh_key_down
    int ic_ksh_key_enter -> ic_ksh_key_enter
    int ic_ksh_key_left -> ic_ksh_key_left
    int ic_ksh_key_meta -> ic_ksh_key_meta
    int ic_ksh_key_right -> ic_ksh_key_right
    int ic_ksh_key_up -> ic_ksh_key_up
    int ic_landscape_from_auto_rotate -> ic_landscape_from_auto_rotate
    int ic_landscape_from_auto_rotate_animation -> ic_landscape_from_auto_rotate_animation
    int ic_landscape_to_auto_rotate -> ic_landscape_to_auto_rotate
    int ic_landscape_to_auto_rotate_animation -> ic_landscape_to_auto_rotate_animation
    int ic_left -> ic_left
    int ic_lock_24dp -> ic_lock_24dp
    int ic_lock_open_24dp -> ic_lock_open_24dp
    int ic_lock_to_app_24dp -> ic_lock_to_app_24dp
    int ic_lockscreen_ime -> ic_lockscreen_ime
    int ic_lockscreen_sim -> ic_lockscreen_sim
    int ic_media_pause_dark -> ic_media_pause_dark
    int ic_media_pause_light -> ic_media_pause_light
    int ic_media_play_dark -> ic_media_play_dark
    int ic_media_play_light -> ic_media_play_light
    int ic_media_stop_dark -> ic_media_stop_dark
    int ic_media_stop_light -> ic_media_stop_light
    int ic_menu -> ic_menu
    int ic_mic_26dp -> ic_mic_26dp
    int ic_mode_edit -> ic_mode_edit
    int ic_mr_button_connected_00_dark -> ic_mr_button_connected_00_dark
    int ic_mr_button_connected_00_light -> ic_mr_button_connected_00_light
    int ic_mr_button_connected_01_dark -> ic_mr_button_connected_01_dark
    int ic_mr_button_connected_01_light -> ic_mr_button_connected_01_light
    int ic_mr_button_connected_02_dark -> ic_mr_button_connected_02_dark
    int ic_mr_button_connected_02_light -> ic_mr_button_connected_02_light
    int ic_mr_button_connected_03_dark -> ic_mr_button_connected_03_dark
    int ic_mr_button_connected_03_light -> ic_mr_button_connected_03_light
    int ic_mr_button_connected_04_dark -> ic_mr_button_connected_04_dark
    int ic_mr_button_connected_04_light -> ic_mr_button_connected_04_light
    int ic_mr_button_connected_05_dark -> ic_mr_button_connected_05_dark
    int ic_mr_button_connected_05_light -> ic_mr_button_connected_05_light
    int ic_mr_button_connected_06_dark -> ic_mr_button_connected_06_dark
    int ic_mr_button_connected_06_light -> ic_mr_button_connected_06_light
    int ic_mr_button_connected_07_dark -> ic_mr_button_connected_07_dark
    int ic_mr_button_connected_07_light -> ic_mr_button_connected_07_light
    int ic_mr_button_connected_08_dark -> ic_mr_button_connected_08_dark
    int ic_mr_button_connected_08_light -> ic_mr_button_connected_08_light
    int ic_mr_button_connected_09_dark -> ic_mr_button_connected_09_dark
    int ic_mr_button_connected_09_light -> ic_mr_button_connected_09_light
    int ic_mr_button_connected_10_dark -> ic_mr_button_connected_10_dark
    int ic_mr_button_connected_10_light -> ic_mr_button_connected_10_light
    int ic_mr_button_connected_11_dark -> ic_mr_button_connected_11_dark
    int ic_mr_button_connected_11_light -> ic_mr_button_connected_11_light
    int ic_mr_button_connected_12_dark -> ic_mr_button_connected_12_dark
    int ic_mr_button_connected_12_light -> ic_mr_button_connected_12_light
    int ic_mr_button_connected_13_dark -> ic_mr_button_connected_13_dark
    int ic_mr_button_connected_13_light -> ic_mr_button_connected_13_light
    int ic_mr_button_connected_14_dark -> ic_mr_button_connected_14_dark
    int ic_mr_button_connected_14_light -> ic_mr_button_connected_14_light
    int ic_mr_button_connected_15_dark -> ic_mr_button_connected_15_dark
    int ic_mr_button_connected_15_light -> ic_mr_button_connected_15_light
    int ic_mr_button_connected_16_dark -> ic_mr_button_connected_16_dark
    int ic_mr_button_connected_16_light -> ic_mr_button_connected_16_light
    int ic_mr_button_connected_17_dark -> ic_mr_button_connected_17_dark
    int ic_mr_button_connected_17_light -> ic_mr_button_connected_17_light
    int ic_mr_button_connected_18_dark -> ic_mr_button_connected_18_dark
    int ic_mr_button_connected_18_light -> ic_mr_button_connected_18_light
    int ic_mr_button_connected_19_dark -> ic_mr_button_connected_19_dark
    int ic_mr_button_connected_19_light -> ic_mr_button_connected_19_light
    int ic_mr_button_connected_20_dark -> ic_mr_button_connected_20_dark
    int ic_mr_button_connected_20_light -> ic_mr_button_connected_20_light
    int ic_mr_button_connected_21_dark -> ic_mr_button_connected_21_dark
    int ic_mr_button_connected_21_light -> ic_mr_button_connected_21_light
    int ic_mr_button_connected_22_dark -> ic_mr_button_connected_22_dark
    int ic_mr_button_connected_22_light -> ic_mr_button_connected_22_light
    int ic_mr_button_connected_23_dark -> ic_mr_button_connected_23_dark
    int ic_mr_button_connected_23_light -> ic_mr_button_connected_23_light
    int ic_mr_button_connected_24_dark -> ic_mr_button_connected_24_dark
    int ic_mr_button_connected_24_light -> ic_mr_button_connected_24_light
    int ic_mr_button_connected_25_dark -> ic_mr_button_connected_25_dark
    int ic_mr_button_connected_25_light -> ic_mr_button_connected_25_light
    int ic_mr_button_connected_26_dark -> ic_mr_button_connected_26_dark
    int ic_mr_button_connected_26_light -> ic_mr_button_connected_26_light
    int ic_mr_button_connected_27_dark -> ic_mr_button_connected_27_dark
    int ic_mr_button_connected_27_light -> ic_mr_button_connected_27_light
    int ic_mr_button_connected_28_dark -> ic_mr_button_connected_28_dark
    int ic_mr_button_connected_28_light -> ic_mr_button_connected_28_light
    int ic_mr_button_connected_29_dark -> ic_mr_button_connected_29_dark
    int ic_mr_button_connected_29_light -> ic_mr_button_connected_29_light
    int ic_mr_button_connected_30_dark -> ic_mr_button_connected_30_dark
    int ic_mr_button_connected_30_light -> ic_mr_button_connected_30_light
    int ic_mr_button_connecting_00_dark -> ic_mr_button_connecting_00_dark
    int ic_mr_button_connecting_00_light -> ic_mr_button_connecting_00_light
    int ic_mr_button_connecting_01_dark -> ic_mr_button_connecting_01_dark
    int ic_mr_button_connecting_01_light -> ic_mr_button_connecting_01_light
    int ic_mr_button_connecting_02_dark -> ic_mr_button_connecting_02_dark
    int ic_mr_button_connecting_02_light -> ic_mr_button_connecting_02_light
    int ic_mr_button_connecting_03_dark -> ic_mr_button_connecting_03_dark
    int ic_mr_button_connecting_03_light -> ic_mr_button_connecting_03_light
    int ic_mr_button_connecting_04_dark -> ic_mr_button_connecting_04_dark
    int ic_mr_button_connecting_04_light -> ic_mr_button_connecting_04_light
    int ic_mr_button_connecting_05_dark -> ic_mr_button_connecting_05_dark
    int ic_mr_button_connecting_05_light -> ic_mr_button_connecting_05_light
    int ic_mr_button_connecting_06_dark -> ic_mr_button_connecting_06_dark
    int ic_mr_button_connecting_06_light -> ic_mr_button_connecting_06_light
    int ic_mr_button_connecting_07_dark -> ic_mr_button_connecting_07_dark
    int ic_mr_button_connecting_07_light -> ic_mr_button_connecting_07_light
    int ic_mr_button_connecting_08_dark -> ic_mr_button_connecting_08_dark
    int ic_mr_button_connecting_08_light -> ic_mr_button_connecting_08_light
    int ic_mr_button_connecting_09_dark -> ic_mr_button_connecting_09_dark
    int ic_mr_button_connecting_09_light -> ic_mr_button_connecting_09_light
    int ic_mr_button_connecting_10_dark -> ic_mr_button_connecting_10_dark
    int ic_mr_button_connecting_10_light -> ic_mr_button_connecting_10_light
    int ic_mr_button_connecting_11_dark -> ic_mr_button_connecting_11_dark
    int ic_mr_button_connecting_11_light -> ic_mr_button_connecting_11_light
    int ic_mr_button_connecting_12_dark -> ic_mr_button_connecting_12_dark
    int ic_mr_button_connecting_12_light -> ic_mr_button_connecting_12_light
    int ic_mr_button_connecting_13_dark -> ic_mr_button_connecting_13_dark
    int ic_mr_button_connecting_13_light -> ic_mr_button_connecting_13_light
    int ic_mr_button_connecting_14_dark -> ic_mr_button_connecting_14_dark
    int ic_mr_button_connecting_14_light -> ic_mr_button_connecting_14_light
    int ic_mr_button_connecting_15_dark -> ic_mr_button_connecting_15_dark
    int ic_mr_button_connecting_15_light -> ic_mr_button_connecting_15_light
    int ic_mr_button_connecting_16_dark -> ic_mr_button_connecting_16_dark
    int ic_mr_button_connecting_16_light -> ic_mr_button_connecting_16_light
    int ic_mr_button_connecting_17_dark -> ic_mr_button_connecting_17_dark
    int ic_mr_button_connecting_17_light -> ic_mr_button_connecting_17_light
    int ic_mr_button_connecting_18_dark -> ic_mr_button_connecting_18_dark
    int ic_mr_button_connecting_18_light -> ic_mr_button_connecting_18_light
    int ic_mr_button_connecting_19_dark -> ic_mr_button_connecting_19_dark
    int ic_mr_button_connecting_19_light -> ic_mr_button_connecting_19_light
    int ic_mr_button_connecting_20_dark -> ic_mr_button_connecting_20_dark
    int ic_mr_button_connecting_20_light -> ic_mr_button_connecting_20_light
    int ic_mr_button_connecting_21_dark -> ic_mr_button_connecting_21_dark
    int ic_mr_button_connecting_21_light -> ic_mr_button_connecting_21_light
    int ic_mr_button_connecting_22_dark -> ic_mr_button_connecting_22_dark
    int ic_mr_button_connecting_22_light -> ic_mr_button_connecting_22_light
    int ic_mr_button_connecting_23_dark -> ic_mr_button_connecting_23_dark
    int ic_mr_button_connecting_23_light -> ic_mr_button_connecting_23_light
    int ic_mr_button_connecting_24_dark -> ic_mr_button_connecting_24_dark
    int ic_mr_button_connecting_24_light -> ic_mr_button_connecting_24_light
    int ic_mr_button_connecting_25_dark -> ic_mr_button_connecting_25_dark
    int ic_mr_button_connecting_25_light -> ic_mr_button_connecting_25_light
    int ic_mr_button_connecting_26_dark -> ic_mr_button_connecting_26_dark
    int ic_mr_button_connecting_26_light -> ic_mr_button_connecting_26_light
    int ic_mr_button_connecting_27_dark -> ic_mr_button_connecting_27_dark
    int ic_mr_button_connecting_27_light -> ic_mr_button_connecting_27_light
    int ic_mr_button_connecting_28_dark -> ic_mr_button_connecting_28_dark
    int ic_mr_button_connecting_28_light -> ic_mr_button_connecting_28_light
    int ic_mr_button_connecting_29_dark -> ic_mr_button_connecting_29_dark
    int ic_mr_button_connecting_29_light -> ic_mr_button_connecting_29_light
    int ic_mr_button_connecting_30_dark -> ic_mr_button_connecting_30_dark
    int ic_mr_button_connecting_30_light -> ic_mr_button_connecting_30_light
    int ic_mr_button_disabled_dark -> ic_mr_button_disabled_dark
    int ic_mr_button_disabled_light -> ic_mr_button_disabled_light
    int ic_mr_button_disconnected_dark -> ic_mr_button_disconnected_dark
    int ic_mr_button_disconnected_light -> ic_mr_button_disconnected_light
    int ic_mr_button_grey -> ic_mr_button_grey
    int ic_notification_overlay -> ic_notification_overlay
    int ic_notify_button_bg -> ic_notify_button_bg
    int ic_pause_white -> ic_pause_white
    int ic_person -> ic_person
    int ic_phone_24dp -> ic_phone_24dp
    int ic_play_arrow_white -> ic_play_arrow_white
    int ic_portrait_from_auto_rotate -> ic_portrait_from_auto_rotate
    int ic_portrait_from_auto_rotate_animation -> ic_portrait_from_auto_rotate_animation
    int ic_portrait_to_auto_rotate -> ic_portrait_to_auto_rotate
    int ic_portrait_to_auto_rotate_animation -> ic_portrait_to_auto_rotate_animation
    int ic_power_low -> ic_power_low
    int ic_power_saver -> ic_power_saver
    int ic_qs_back -> ic_qs_back
    int ic_qs_battery_saver -> ic_qs_battery_saver
    int ic_qs_bluetooth_connected -> ic_qs_bluetooth_connected
    int ic_qs_bluetooth_connecting -> ic_qs_bluetooth_connecting
    int ic_qs_bluetooth_detail_empty -> ic_qs_bluetooth_detail_empty
    int ic_qs_bluetooth_on -> ic_qs_bluetooth_on
    int ic_qs_branded_vpn -> ic_qs_branded_vpn
    int ic_qs_brightness_auto_off -> ic_qs_brightness_auto_off
    int ic_qs_brightness_auto_off_alpha -> ic_qs_brightness_auto_off_alpha
    int ic_qs_brightness_auto_on -> ic_qs_brightness_auto_on
    int ic_qs_brightness_auto_on_alpha -> ic_qs_brightness_auto_on_alpha
    int ic_qs_cancel -> ic_qs_cancel
    int ic_qs_cast_detail_empty -> ic_qs_cast_detail_empty
    int ic_qs_cast_off -> ic_qs_cast_off
    int ic_qs_cast_on -> ic_qs_cast_on
    int ic_qs_circle -> ic_qs_circle
    int ic_qs_data_disabled -> ic_qs_data_disabled
    int ic_qs_dnd_detail_empty -> ic_qs_dnd_detail_empty
    int ic_qs_dnd_on -> ic_qs_dnd_on
    int ic_qs_dnd_on_total_silence -> ic_qs_dnd_on_total_silence
    int ic_qs_lock -> ic_qs_lock
    int ic_qs_lock_open -> ic_qs_lock_open
    int ic_qs_minus -> ic_qs_minus
    int ic_qs_network_logging -> ic_qs_network_logging
    int ic_qs_nfc_disabled -> ic_qs_nfc_disabled
    int ic_qs_nfc_enabled -> ic_qs_nfc_enabled
    int ic_qs_night_display_on -> ic_qs_night_display_on
    int ic_qs_no_sim -> ic_qs_no_sim
    int ic_qs_plus -> ic_qs_plus
    int ic_qs_ringer_audible -> ic_qs_ringer_audible
    int ic_qs_ringer_silent -> ic_qs_ringer_silent
    int ic_qs_ringer_vibrate -> ic_qs_ringer_vibrate
    int ic_qs_signal_0 -> ic_qs_signal_0
    int ic_qs_signal_1x -> ic_qs_signal_1x
    int ic_qs_signal_2g -> ic_qs_signal_2g
    int ic_qs_signal_3g -> ic_qs_signal_3g
    int ic_qs_signal_4g -> ic_qs_signal_4g
    int ic_qs_signal_4g_plus -> ic_qs_signal_4g_plus
    int ic_qs_signal_disabled -> ic_qs_signal_disabled
    int ic_qs_signal_e -> ic_qs_signal_e
    int ic_qs_signal_full_2g -> ic_qs_signal_full_2g
    int ic_qs_signal_full_hp -> ic_qs_signal_full_hp
    int ic_qs_signal_g -> ic_qs_signal_g
    int ic_qs_signal_h -> ic_qs_signal_h
    int ic_qs_signal_hp -> ic_qs_signal_hp
    int ic_qs_signal_in -> ic_qs_signal_in
    int ic_qs_signal_lte -> ic_qs_signal_lte
    int ic_qs_signal_lte_plus -> ic_qs_signal_lte_plus
    int ic_qs_signal_no_signal -> ic_qs_signal_no_signal
    int ic_qs_signal_out -> ic_qs_signal_out
    int ic_qs_vpn -> ic_qs_vpn
    int ic_qs_wifi_0 -> ic_qs_wifi_0
    int ic_qs_wifi_1 -> ic_qs_wifi_1
    int ic_qs_wifi_2 -> ic_qs_wifi_2
    int ic_qs_wifi_3 -> ic_qs_wifi_3
    int ic_qs_wifi_4 -> ic_qs_wifi_4
    int ic_qs_wifi_detail_empty -> ic_qs_wifi_detail_empty
    int ic_qs_wifi_disabled -> ic_qs_wifi_disabled
    int ic_qs_wifi_disconnected -> ic_qs_wifi_disconnected
    int ic_qs_wifi_full_0 -> ic_qs_wifi_full_0
    int ic_qs_wifi_full_1 -> ic_qs_wifi_full_1
    int ic_qs_wifi_full_2 -> ic_qs_wifi_full_2
    int ic_qs_wifi_full_3 -> ic_qs_wifi_full_3
    int ic_qs_wifi_full_4 -> ic_qs_wifi_full_4
    int ic_qs_wifi_no_network -> ic_qs_wifi_no_network
    int ic_remove -> ic_remove
    int ic_remove_circle -> ic_remove_circle
    int ic_right -> ic_right
    int ic_screenshot_delete -> ic_screenshot_delete
    int ic_screenshot_share -> ic_screenshot_share
    int ic_send -> ic_send
    int ic_settings -> ic_settings
    int ic_settings_16dp -> ic_settings_16dp
    int ic_signal_airplane -> ic_signal_airplane
    int ic_signal_flashlight -> ic_signal_flashlight
    int ic_signal_location -> ic_signal_location
    int ic_signal_wifi_transient -> ic_signal_wifi_transient
    int ic_signal_wifi_transient_animation -> ic_signal_wifi_transient_animation
    int ic_signal_workmode_disable -> ic_signal_workmode_disable
    int ic_signal_workmode_disable_animation -> ic_signal_workmode_disable_animation
    int ic_signal_workmode_enable -> ic_signal_workmode_enable
    int ic_signal_workmode_enable_animation -> ic_signal_workmode_enable_animation
    int ic_sim -> ic_sim
    int ic_skip_next_white -> ic_skip_next_white
    int ic_skip_previous_white -> ic_skip_previous_white
    int ic_snooze -> ic_snooze
    int ic_sysbar_accessibility_button -> ic_sysbar_accessibility_button
    int ic_sysbar_accessibility_button_dark -> ic_sysbar_accessibility_button_dark
    int ic_sysbar_back -> ic_sysbar_back
    int ic_sysbar_back_carmode -> ic_sysbar_back_carmode
    int ic_sysbar_back_dark -> ic_sysbar_back_dark
    int ic_sysbar_back_ime -> ic_sysbar_back_ime
    int ic_sysbar_back_ime_carmode -> ic_sysbar_back_ime_carmode
    int ic_sysbar_back_ime_dark -> ic_sysbar_back_ime_dark
    int ic_sysbar_back_light_old -> ic_sysbar_back_light_old
    int ic_sysbar_docked -> ic_sysbar_docked
    int ic_sysbar_docked_dark -> ic_sysbar_docked_dark
    int ic_sysbar_home -> ic_sysbar_home
    int ic_sysbar_home_carmode -> ic_sysbar_home_carmode
    int ic_sysbar_home_dark -> ic_sysbar_home_dark
    int ic_sysbar_ime_dark -> ic_sysbar_ime_dark
    int ic_sysbar_lights_out_dot_large -> ic_sysbar_lights_out_dot_large
    int ic_sysbar_lights_out_dot_small -> ic_sysbar_lights_out_dot_small
    int ic_sysbar_menu -> ic_sysbar_menu
    int ic_sysbar_menu_dark -> ic_sysbar_menu_dark
    int ic_sysbar_recent -> ic_sysbar_recent
    int ic_sysbar_recent_dark -> ic_sysbar_recent_dark
    int ic_vol_type_speaker_dark -> ic_vol_type_speaker_dark
    int ic_vol_type_speaker_group_dark -> ic_vol_type_speaker_group_dark
    int ic_vol_type_speaker_group_light -> ic_vol_type_speaker_group_light
    int ic_vol_type_speaker_light -> ic_vol_type_speaker_light
    int ic_vol_type_tv_dark -> ic_vol_type_tv_dark
    int ic_vol_type_tv_light -> ic_vol_type_tv_light
    int ic_volume_accessibility -> ic_volume_accessibility
    int ic_volume_alarm -> ic_volume_alarm
    int ic_volume_alarm_mute -> ic_volume_alarm_mute
    int ic_volume_bt_sco -> ic_volume_bt_sco
    int ic_volume_collapse -> ic_volume_collapse
    int ic_volume_collapse_animation -> ic_volume_collapse_animation
    int ic_volume_expand -> ic_volume_expand
    int ic_volume_expand_animation -> ic_volume_expand_animation
    int ic_volume_media -> ic_volume_media
    int ic_volume_media_bt -> ic_volume_media_bt
    int ic_volume_media_bt_mute -> ic_volume_media_bt_mute
    int ic_volume_media_mute -> ic_volume_media_mute
    int ic_volume_remote -> ic_volume_remote
    int ic_volume_remote_mute -> ic_volume_remote_mute
    int ic_volume_ringer -> ic_volume_ringer
    int ic_volume_ringer_mute -> ic_volume_ringer_mute
    int ic_volume_ringer_vibrate -> ic_volume_ringer_vibrate
    int ic_volume_system -> ic_volume_system
    int ic_volume_system_mute -> ic_volume_system_mute
    int ic_volume_voice -> ic_volume_voice
    int ic_width -> ic_width
    int ic_zen_all -> ic_zen_all
    int ic_zen_important -> ic_zen_important
    int ic_zen_none -> ic_zen_none
    int icon -> icon
    int indeterminate -> indeterminate
    int indeterminate_anim -> indeterminate_anim
    int instant_icon -> instant_icon
    int keyguard_overflow_number_background -> keyguard_overflow_number_background
    int kg_security_lock_normal -> kg_security_lock_normal
    int ksh_key_item_background -> ksh_key_item_background
    int lb_action_bg -> lb_action_bg
    int lb_action_bg_focused -> lb_action_bg_focused
    int lb_background -> lb_background
    int lb_card_foreground -> lb_card_foreground
    int lb_card_shadow_focused -> lb_card_shadow_focused
    int lb_card_shadow_normal -> lb_card_shadow_normal
    int lb_control_button_primary -> lb_control_button_primary
    int lb_control_button_secondary -> lb_control_button_secondary
    int lb_headers_right_fading -> lb_headers_right_fading
    int lb_ic_actions_right_arrow -> lb_ic_actions_right_arrow
    int lb_ic_cc -> lb_ic_cc
    int lb_ic_fast_forward -> lb_ic_fast_forward
    int lb_ic_fast_rewind -> lb_ic_fast_rewind
    int lb_ic_guidedactions_item_chevron -> lb_ic_guidedactions_item_chevron
    int lb_ic_hq -> lb_ic_hq
    int lb_ic_in_app_search -> lb_ic_in_app_search
    int lb_ic_loop -> lb_ic_loop
    int lb_ic_loop_one -> lb_ic_loop_one
    int lb_ic_more -> lb_ic_more
    int lb_ic_nav_arrow -> lb_ic_nav_arrow
    int lb_ic_pause -> lb_ic_pause
    int lb_ic_pip -> lb_ic_pip
    int lb_ic_play -> lb_ic_play
    int lb_ic_play_fit -> lb_ic_play_fit
    int lb_ic_playback_loop -> lb_ic_playback_loop
    int lb_ic_replay -> lb_ic_replay
    int lb_ic_sad_cloud -> lb_ic_sad_cloud
    int lb_ic_search_mic -> lb_ic_search_mic
    int lb_ic_search_mic_out -> lb_ic_search_mic_out
    int lb_ic_shuffle -> lb_ic_shuffle
    int lb_ic_skip_next -> lb_ic_skip_next
    int lb_ic_skip_previous -> lb_ic_skip_previous
    int lb_ic_stop -> lb_ic_stop
    int lb_ic_thumb_down -> lb_ic_thumb_down
    int lb_ic_thumb_down_outline -> lb_ic_thumb_down_outline
    int lb_ic_thumb_up -> lb_ic_thumb_up
    int lb_ic_thumb_up_outline -> lb_ic_thumb_up_outline
    int lb_in_app_search_bg -> lb_in_app_search_bg
    int lb_in_app_search_shadow_focused -> lb_in_app_search_shadow_focused
    int lb_in_app_search_shadow_normal -> lb_in_app_search_shadow_normal
    int lb_onboarding_start_button_background -> lb_onboarding_start_button_background
    int lb_playback_now_playing_bar -> lb_playback_now_playing_bar
    int lb_playback_progress_bar -> lb_playback_progress_bar
    int lb_search_orb -> lb_search_orb
    int lb_selectable_item_rounded_rect -> lb_selectable_item_rounded_rect
    int lb_speech_orb -> lb_speech_orb
    int lb_text_dot_one -> lb_text_dot_one
    int lb_text_dot_one_small -> lb_text_dot_one_small
    int lb_text_dot_two -> lb_text_dot_two
    int lb_text_dot_two_small -> lb_text_dot_two_small
    int list_divider_dark -> list_divider_dark
    int lockscreen_fingerprint_draw_off -> lockscreen_fingerprint_draw_off
    int lockscreen_fingerprint_draw_off_animation -> lockscreen_fingerprint_draw_off_animation
    int lockscreen_fingerprint_draw_on -> lockscreen_fingerprint_draw_on
    int lockscreen_fingerprint_draw_on_animation -> lockscreen_fingerprint_draw_on_animation
    int lockscreen_fingerprint_error_state_to_fp -> lockscreen_fingerprint_error_state_to_fp
    int lockscreen_fingerprint_error_state_to_fp_animation -> lockscreen_fingerprint_error_state_to_fp_animation
    int lockscreen_fingerprint_fp_to_error_state -> lockscreen_fingerprint_fp_to_error_state
    int lockscreen_fingerprint_fp_to_error_state_animation -> lockscreen_fingerprint_fp_to_error_state_animation
    int major_a_b -> major_a_b
    int major_a_b_animation -> major_a_b_animation
    int major_b_a -> major_b_a
    int major_b_a_animation -> major_b_a_animation
    int major_b_c -> major_b_c
    int major_b_c_animation -> major_b_c_animation
    int major_c_b -> major_c_b
    int major_c_b_animation -> major_c_b_animation
    int minor_a_b -> minor_a_b
    int minor_a_b_animation -> minor_a_b_animation
    int minor_b_a -> minor_b_a
    int minor_b_a_animation -> minor_b_a_animation
    int minor_b_c -> minor_b_c
    int minor_b_c_animation -> minor_b_c_animation
    int minor_c_b -> minor_c_b
    int minor_c_b_animation -> minor_c_b_animation
    int minus -> minus
    int mm_antennae -> mm_antennae
    int mm_antennae2 -> mm_antennae2
    int mm_eyes -> mm_eyes
    int mm_eyes2 -> mm_eyes2
    int mm_head -> mm_head
    int mm_mouth1 -> mm_mouth1
    int mm_mouth2 -> mm_mouth2
    int mm_mouth3 -> mm_mouth3
    int mm_mouth4 -> mm_mouth4
    int moon -> moon
    int mountain1 -> mountain1
    int mountain2 -> mountain2
    int mountain3 -> mountain3
    int mr_button_connected_dark -> mr_button_connected_dark
    int mr_button_connected_light -> mr_button_connected_light
    int mr_button_connecting_dark -> mr_button_connecting_dark
    int mr_button_connecting_light -> mr_button_connecting_light
    int mr_button_dark -> mr_button_dark
    int mr_button_light -> mr_button_light
    int mr_dialog_close_dark -> mr_dialog_close_dark
    int mr_dialog_close_light -> mr_dialog_close_light
    int mr_dialog_material_background_dark -> mr_dialog_material_background_dark
    int mr_dialog_material_background_light -> mr_dialog_material_background_light
    int mr_group_collapse -> mr_group_collapse
    int mr_group_expand -> mr_group_expand
    int mr_media_pause_dark -> mr_media_pause_dark
    int mr_media_pause_light -> mr_media_pause_light
    int mr_media_play_dark -> mr_media_play_dark
    int mr_media_play_light -> mr_media_play_light
    int mr_media_stop_dark -> mr_media_stop_dark
    int mr_media_stop_light -> mr_media_stop_light
    int mr_vol_type_audiotrack_dark -> mr_vol_type_audiotrack_dark
    int mr_vol_type_audiotrack_light -> mr_vol_type_audiotrack_light
    int nav_background -> nav_background
    int notification_auto_importance -> notification_auto_importance
    int notification_expand_more -> notification_expand_more
    int notification_guts_bg -> notification_guts_bg
    int notification_material_bg -> notification_material_bg
    int notification_material_bg_dim -> notification_material_bg_dim
    int notification_number_text_color -> notification_number_text_color
    int pin_divider -> pin_divider
    int pip_dismiss -> pip_dismiss
    int pip_dismiss_scrim -> pip_dismiss_scrim
    int pip_expand -> pip_expand
    int pip_icon -> pip_icon
    int pip_notification_icon -> pip_notification_icon
    int play -> play
    int plus -> plus
    int pop_ball -> pop_ball
    int pop_belt -> pop_belt
    int pop_droid -> pop_droid
    int pop_pizza -> pop_pizza
    int pop_stripes -> pop_stripes
    int pop_swirl -> pop_swirl
    int pop_vortex -> pop_vortex
    int pop_vortex2 -> pop_vortex2
    int preference_list_divider_material -> preference_list_divider_material
    int qs_background_primary -> qs_background_primary
    int qs_btn_borderless_rect -> qs_btn_borderless_rect
    int qs_customizer_background -> qs_customizer_background
    int qs_detail_background -> qs_detail_background
    int qs_dual_tile_caret -> qs_dual_tile_caret
    int qs_ic_wifi_lock -> qs_ic_wifi_lock
    int qs_navbar_scrim -> qs_navbar_scrim
    int qs_subhead_caret -> qs_subhead_caret
    int qs_tile_background -> qs_tile_background
    int quick_header_bg -> quick_header_bg
    int recents_dismiss_all_history -> recents_dismiss_all_history
    int recents_dismiss_dark -> recents_dismiss_dark
    int recents_dismiss_light -> recents_dismiss_light
    int recents_empty -> recents_empty
    int recents_freeform_workspace_bg -> recents_freeform_workspace_bg
    int recents_grid_task_view_focus_frame_background -> recents_grid_task_view_focus_frame_background
    int recents_info_dark -> recents_info_dark
    int recents_info_light -> recents_info_light
    int recents_lock_to_app_pin -> recents_lock_to_app_pin
    int recents_lock_to_task_button_bg -> recents_lock_to_task_button_bg
    int recents_low_ram_stack_button_background -> recents_low_ram_stack_button_background
    int recents_lower_gradient -> recents_lower_gradient
    int recents_move_task_freeform_dark -> recents_move_task_freeform_dark
    int recents_move_task_freeform_light -> recents_move_task_freeform_light
    int recents_move_task_fullscreen_dark -> recents_move_task_fullscreen_dark
    int recents_move_task_fullscreen_light -> recents_move_task_fullscreen_light
    int recents_stack_action_background -> recents_stack_action_background
    int recents_status_gradient -> recents_status_gradient
    int recents_task_shadow -> recents_task_shadow
    int remote -> remote
    int ripple_drawable -> ripple_drawable
    int ripple_drawable_20dp -> ripple_drawable_20dp
    int ripplebg -> ripplebg
    int rounded -> rounded
    int rounded_bg -> rounded_bg
    int rounded_bg_bottom -> rounded_bg_bottom
    int rounded_bg_full -> rounded_bg_full
    int rounded_full_bg_bottom -> rounded_full_bg_bottom
    int scorecard -> scorecard
    int scorecard_gameover -> scorecard_gameover
    int screen_pinning_bg_circ -> screen_pinning_bg_circ
    int screen_pinning_light_bg_circ -> screen_pinning_light_bg_circ
    int screenshot_panel -> screenshot_panel
    int search_bg_transparent -> search_bg_transparent
    int search_panel_scrim -> search_panel_scrim
    int segmented_buttons_background -> segmented_buttons_background
    int star -> star
    int stat_notify_image -> stat_notify_image
    int stat_notify_image_error -> stat_notify_image_error
    int stat_notify_more -> stat_notify_more
    int stat_sys_airplane_mode -> stat_sys_airplane_mode
    int stat_sys_alarm -> stat_sys_alarm
    int stat_sys_alarm_dim -> stat_sys_alarm_dim
    int stat_sys_auto_rotate_landscape -> stat_sys_auto_rotate_landscape
    int stat_sys_auto_rotate_portrait -> stat_sys_auto_rotate_portrait
    int stat_sys_branded_vpn -> stat_sys_branded_vpn
    int stat_sys_cast -> stat_sys_cast
    int stat_sys_data_bluetooth -> stat_sys_data_bluetooth
    int stat_sys_data_bluetooth_connected -> stat_sys_data_bluetooth_connected
    int stat_sys_data_connected_1x -> stat_sys_data_connected_1x
    int stat_sys_data_connected_3g -> stat_sys_data_connected_3g
    int stat_sys_data_connected_4g -> stat_sys_data_connected_4g
    int stat_sys_data_connected_e -> stat_sys_data_connected_e
    int stat_sys_data_connected_g -> stat_sys_data_connected_g
    int stat_sys_data_connected_h -> stat_sys_data_connected_h
    int stat_sys_data_connected_hp -> stat_sys_data_connected_hp
    int stat_sys_data_disabled -> stat_sys_data_disabled
    int stat_sys_data_fully_connected_1x -> stat_sys_data_fully_connected_1x
    int stat_sys_data_fully_connected_3g -> stat_sys_data_fully_connected_3g
    int stat_sys_data_fully_connected_4g -> stat_sys_data_fully_connected_4g
    int stat_sys_data_fully_connected_4g_plus -> stat_sys_data_fully_connected_4g_plus
    int stat_sys_data_fully_connected_e -> stat_sys_data_fully_connected_e
    int stat_sys_data_fully_connected_g -> stat_sys_data_fully_connected_g
    int stat_sys_data_fully_connected_h -> stat_sys_data_fully_connected_h
    int stat_sys_data_fully_connected_hp -> stat_sys_data_fully_connected_hp
    int stat_sys_data_fully_connected_lte -> stat_sys_data_fully_connected_lte
    int stat_sys_data_fully_connected_lte_plus -> stat_sys_data_fully_connected_lte_plus
    int stat_sys_data_idle_1x -> stat_sys_data_idle_1x
    int stat_sys_data_idle_3g -> stat_sys_data_idle_3g
    int stat_sys_data_idle_4g -> stat_sys_data_idle_4g
    int stat_sys_data_idle_4g_plus -> stat_sys_data_idle_4g_plus
    int stat_sys_data_idle_e -> stat_sys_data_idle_e
    int stat_sys_data_idle_g -> stat_sys_data_idle_g
    int stat_sys_data_idle_h -> stat_sys_data_idle_h
    int stat_sys_data_in_1x -> stat_sys_data_in_1x
    int stat_sys_data_in_3g -> stat_sys_data_in_3g
    int stat_sys_data_in_4g -> stat_sys_data_in_4g
    int stat_sys_data_in_4g_plus -> stat_sys_data_in_4g_plus
    int stat_sys_data_in_e -> stat_sys_data_in_e
    int stat_sys_data_in_g -> stat_sys_data_in_g
    int stat_sys_data_in_h -> stat_sys_data_in_h
    int stat_sys_data_inandout_4g -> stat_sys_data_inandout_4g
    int stat_sys_data_inandout_4g_plus -> stat_sys_data_inandout_4g_plus
    int stat_sys_data_inandout_e -> stat_sys_data_inandout_e
    int stat_sys_data_inandout_h -> stat_sys_data_inandout_h
    int stat_sys_data_inout_1x -> stat_sys_data_inout_1x
    int stat_sys_data_inout_3g -> stat_sys_data_inout_3g
    int stat_sys_data_inout_g -> stat_sys_data_inout_g
    int stat_sys_data_out_1x -> stat_sys_data_out_1x
    int stat_sys_data_out_3g -> stat_sys_data_out_3g
    int stat_sys_data_out_4g -> stat_sys_data_out_4g
    int stat_sys_data_out_4g_plus -> stat_sys_data_out_4g_plus
    int stat_sys_data_out_e -> stat_sys_data_out_e
    int stat_sys_data_out_g -> stat_sys_data_out_g
    int stat_sys_data_out_h -> stat_sys_data_out_h
    int stat_sys_data_saver -> stat_sys_data_saver
    int stat_sys_dnd -> stat_sys_dnd
    int stat_sys_dnd_total_silence -> stat_sys_dnd_total_silence
    int stat_sys_ethernet -> stat_sys_ethernet
    int stat_sys_ethernet_fully -> stat_sys_ethernet_fully
    int stat_sys_hotspot -> stat_sys_hotspot
    int stat_sys_location -> stat_sys_location
    int stat_sys_managed_profile_status -> stat_sys_managed_profile_status
    int stat_sys_managed_profile_status_off -> stat_sys_managed_profile_status_off
    int stat_sys_no_sim1_new -> stat_sys_no_sim1_new
    int stat_sys_no_sim2_new -> stat_sys_no_sim2_new
    int stat_sys_no_sim_1 -> stat_sys_no_sim_1
    int stat_sys_no_sims -> stat_sys_no_sims
    int stat_sys_r_signal_0_fully_sim1_3g -> stat_sys_r_signal_0_fully_sim1_3g
    int stat_sys_r_signal_0_fully_sim1_4g -> stat_sys_r_signal_0_fully_sim1_4g
    int stat_sys_r_signal_0_fully_sim1_g -> stat_sys_r_signal_0_fully_sim1_g
    int stat_sys_r_signal_0_fully_sim1_h -> stat_sys_r_signal_0_fully_sim1_h
    int stat_sys_r_signal_0_fully_sim1_hp -> stat_sys_r_signal_0_fully_sim1_hp
    int stat_sys_r_signal_0_fully_sim2_3g -> stat_sys_r_signal_0_fully_sim2_3g
    int stat_sys_r_signal_0_fully_sim2_4g -> stat_sys_r_signal_0_fully_sim2_4g
    int stat_sys_r_signal_0_fully_sim2_g -> stat_sys_r_signal_0_fully_sim2_g
    int stat_sys_r_signal_0_fully_sim2_h -> stat_sys_r_signal_0_fully_sim2_h
    int stat_sys_r_signal_0_fully_sim2_hp -> stat_sys_r_signal_0_fully_sim2_hp
    int stat_sys_r_signal_0_sim1_3g -> stat_sys_r_signal_0_sim1_3g
    int stat_sys_r_signal_0_sim1_4g -> stat_sys_r_signal_0_sim1_4g
    int stat_sys_r_signal_0_sim1_g -> stat_sys_r_signal_0_sim1_g
    int stat_sys_r_signal_0_sim1_h -> stat_sys_r_signal_0_sim1_h
    int stat_sys_r_signal_0_sim1_hp -> stat_sys_r_signal_0_sim1_hp
    int stat_sys_r_signal_0_sim2_3g -> stat_sys_r_signal_0_sim2_3g
    int stat_sys_r_signal_0_sim2_4g -> stat_sys_r_signal_0_sim2_4g
    int stat_sys_r_signal_0_sim2_g -> stat_sys_r_signal_0_sim2_g
    int stat_sys_r_signal_0_sim2_h -> stat_sys_r_signal_0_sim2_h
    int stat_sys_r_signal_0_sim2_hp -> stat_sys_r_signal_0_sim2_hp
    int stat_sys_r_signal_1_fully_sim1_3g -> stat_sys_r_signal_1_fully_sim1_3g
    int stat_sys_r_signal_1_fully_sim1_4g -> stat_sys_r_signal_1_fully_sim1_4g
    int stat_sys_r_signal_1_fully_sim1_g -> stat_sys_r_signal_1_fully_sim1_g
    int stat_sys_r_signal_1_fully_sim1_h -> stat_sys_r_signal_1_fully_sim1_h
    int stat_sys_r_signal_1_fully_sim1_hp -> stat_sys_r_signal_1_fully_sim1_hp
    int stat_sys_r_signal_1_fully_sim2_3g -> stat_sys_r_signal_1_fully_sim2_3g
    int stat_sys_r_signal_1_fully_sim2_4g -> stat_sys_r_signal_1_fully_sim2_4g
    int stat_sys_r_signal_1_fully_sim2_g -> stat_sys_r_signal_1_fully_sim2_g
    int stat_sys_r_signal_1_fully_sim2_h -> stat_sys_r_signal_1_fully_sim2_h
    int stat_sys_r_signal_1_fully_sim2_hp -> stat_sys_r_signal_1_fully_sim2_hp
    int stat_sys_r_signal_1_sim1_3g -> stat_sys_r_signal_1_sim1_3g
    int stat_sys_r_signal_1_sim1_4g -> stat_sys_r_signal_1_sim1_4g
    int stat_sys_r_signal_1_sim1_g -> stat_sys_r_signal_1_sim1_g
    int stat_sys_r_signal_1_sim1_h -> stat_sys_r_signal_1_sim1_h
    int stat_sys_r_signal_1_sim1_hp -> stat_sys_r_signal_1_sim1_hp
    int stat_sys_r_signal_1_sim2_3g -> stat_sys_r_signal_1_sim2_3g
    int stat_sys_r_signal_1_sim2_4g -> stat_sys_r_signal_1_sim2_4g
    int stat_sys_r_signal_1_sim2_g -> stat_sys_r_signal_1_sim2_g
    int stat_sys_r_signal_1_sim2_h -> stat_sys_r_signal_1_sim2_h
    int stat_sys_r_signal_1_sim2_hp -> stat_sys_r_signal_1_sim2_hp
    int stat_sys_r_signal_2_fully_sim1_3g -> stat_sys_r_signal_2_fully_sim1_3g
    int stat_sys_r_signal_2_fully_sim1_4g -> stat_sys_r_signal_2_fully_sim1_4g
    int stat_sys_r_signal_2_fully_sim1_g -> stat_sys_r_signal_2_fully_sim1_g
    int stat_sys_r_signal_2_fully_sim1_h -> stat_sys_r_signal_2_fully_sim1_h
    int stat_sys_r_signal_2_fully_sim1_hp -> stat_sys_r_signal_2_fully_sim1_hp
    int stat_sys_r_signal_2_fully_sim2_3g -> stat_sys_r_signal_2_fully_sim2_3g
    int stat_sys_r_signal_2_fully_sim2_4g -> stat_sys_r_signal_2_fully_sim2_4g
    int stat_sys_r_signal_2_fully_sim2_g -> stat_sys_r_signal_2_fully_sim2_g
    int stat_sys_r_signal_2_fully_sim2_h -> stat_sys_r_signal_2_fully_sim2_h
    int stat_sys_r_signal_2_fully_sim2_hp -> stat_sys_r_signal_2_fully_sim2_hp
    int stat_sys_r_signal_2_sim1_3g -> stat_sys_r_signal_2_sim1_3g
    int stat_sys_r_signal_2_sim1_4g -> stat_sys_r_signal_2_sim1_4g
    int stat_sys_r_signal_2_sim1_g -> stat_sys_r_signal_2_sim1_g
    int stat_sys_r_signal_2_sim1_h -> stat_sys_r_signal_2_sim1_h
    int stat_sys_r_signal_2_sim1_hp -> stat_sys_r_signal_2_sim1_hp
    int stat_sys_r_signal_2_sim2_3g -> stat_sys_r_signal_2_sim2_3g
    int stat_sys_r_signal_2_sim2_4g -> stat_sys_r_signal_2_sim2_4g
    int stat_sys_r_signal_2_sim2_g -> stat_sys_r_signal_2_sim2_g
    int stat_sys_r_signal_2_sim2_h -> stat_sys_r_signal_2_sim2_h
    int stat_sys_r_signal_2_sim2_hp -> stat_sys_r_signal_2_sim2_hp
    int stat_sys_r_signal_3_fully_sim1_3g -> stat_sys_r_signal_3_fully_sim1_3g
    int stat_sys_r_signal_3_fully_sim1_4g -> stat_sys_r_signal_3_fully_sim1_4g
    int stat_sys_r_signal_3_fully_sim1_g -> stat_sys_r_signal_3_fully_sim1_g
    int stat_sys_r_signal_3_fully_sim1_h -> stat_sys_r_signal_3_fully_sim1_h
    int stat_sys_r_signal_3_fully_sim1_hp -> stat_sys_r_signal_3_fully_sim1_hp
    int stat_sys_r_signal_3_fully_sim2_3g -> stat_sys_r_signal_3_fully_sim2_3g
    int stat_sys_r_signal_3_fully_sim2_4g -> stat_sys_r_signal_3_fully_sim2_4g
    int stat_sys_r_signal_3_fully_sim2_g -> stat_sys_r_signal_3_fully_sim2_g
    int stat_sys_r_signal_3_fully_sim2_h -> stat_sys_r_signal_3_fully_sim2_h
    int stat_sys_r_signal_3_fully_sim2_hp -> stat_sys_r_signal_3_fully_sim2_hp
    int stat_sys_r_signal_3_sim1_3g -> stat_sys_r_signal_3_sim1_3g
    int stat_sys_r_signal_3_sim1_4g -> stat_sys_r_signal_3_sim1_4g
    int stat_sys_r_signal_3_sim1_g -> stat_sys_r_signal_3_sim1_g
    int stat_sys_r_signal_3_sim1_h -> stat_sys_r_signal_3_sim1_h
    int stat_sys_r_signal_3_sim1_hp -> stat_sys_r_signal_3_sim1_hp
    int stat_sys_r_signal_3_sim2_3g -> stat_sys_r_signal_3_sim2_3g
    int stat_sys_r_signal_3_sim2_4g -> stat_sys_r_signal_3_sim2_4g
    int stat_sys_r_signal_3_sim2_g -> stat_sys_r_signal_3_sim2_g
    int stat_sys_r_signal_3_sim2_h -> stat_sys_r_signal_3_sim2_h
    int stat_sys_r_signal_3_sim2_hp -> stat_sys_r_signal_3_sim2_hp
    int stat_sys_r_signal_4_fully_sim1_3g -> stat_sys_r_signal_4_fully_sim1_3g
    int stat_sys_r_signal_4_fully_sim1_4g -> stat_sys_r_signal_4_fully_sim1_4g
    int stat_sys_r_signal_4_fully_sim1_g -> stat_sys_r_signal_4_fully_sim1_g
    int stat_sys_r_signal_4_fully_sim1_h -> stat_sys_r_signal_4_fully_sim1_h
    int stat_sys_r_signal_4_fully_sim1_hp -> stat_sys_r_signal_4_fully_sim1_hp
    int stat_sys_r_signal_4_fully_sim2_3g -> stat_sys_r_signal_4_fully_sim2_3g
    int stat_sys_r_signal_4_fully_sim2_4g -> stat_sys_r_signal_4_fully_sim2_4g
    int stat_sys_r_signal_4_fully_sim2_g -> stat_sys_r_signal_4_fully_sim2_g
    int stat_sys_r_signal_4_fully_sim2_h -> stat_sys_r_signal_4_fully_sim2_h
    int stat_sys_r_signal_4_fully_sim2_hp -> stat_sys_r_signal_4_fully_sim2_hp
    int stat_sys_r_signal_4_sim1_3g -> stat_sys_r_signal_4_sim1_3g
    int stat_sys_r_signal_4_sim1_4g -> stat_sys_r_signal_4_sim1_4g
    int stat_sys_r_signal_4_sim1_g -> stat_sys_r_signal_4_sim1_g
    int stat_sys_r_signal_4_sim1_h -> stat_sys_r_signal_4_sim1_h
    int stat_sys_r_signal_4_sim1_hp -> stat_sys_r_signal_4_sim1_hp
    int stat_sys_r_signal_4_sim2_3g -> stat_sys_r_signal_4_sim2_3g
    int stat_sys_r_signal_4_sim2_4g -> stat_sys_r_signal_4_sim2_4g
    int stat_sys_r_signal_4_sim2_g -> stat_sys_r_signal_4_sim2_g
    int stat_sys_r_signal_4_sim2_h -> stat_sys_r_signal_4_sim2_h
    int stat_sys_r_signal_4_sim2_hp -> stat_sys_r_signal_4_sim2_hp
    int stat_sys_ringer_silent -> stat_sys_ringer_silent
    int stat_sys_ringer_vibrate -> stat_sys_ringer_vibrate
    int stat_sys_roaming -> stat_sys_roaming
    int stat_sys_rotate_landscape -> stat_sys_rotate_landscape
    int stat_sys_rotate_portrait -> stat_sys_rotate_portrait
    int stat_sys_signal_0_1x -> stat_sys_signal_0_1x
    int stat_sys_signal_0_1x_fully -> stat_sys_signal_0_1x_fully
    int stat_sys_signal_0_1x_fully_roam -> stat_sys_signal_0_1x_fully_roam
    int stat_sys_signal_0_1x_only -> stat_sys_signal_0_1x_only
    int stat_sys_signal_0_1x_only_fully -> stat_sys_signal_0_1x_only_fully
    int stat_sys_signal_0_1x_only_fully_roam -> stat_sys_signal_0_1x_only_fully_roam
    int stat_sys_signal_0_1x_only_roam -> stat_sys_signal_0_1x_only_roam
    int stat_sys_signal_0_1x_roam -> stat_sys_signal_0_1x_roam
    int stat_sys_signal_0_2g -> stat_sys_signal_0_2g
    int stat_sys_signal_0_2g_default -> stat_sys_signal_0_2g_default
    int stat_sys_signal_0_2g_default_fully -> stat_sys_signal_0_2g_default_fully
    int stat_sys_signal_0_2g_default_fully_roam -> stat_sys_signal_0_2g_default_fully_roam
    int stat_sys_signal_0_2g_default_roam -> stat_sys_signal_0_2g_default_roam
    int stat_sys_signal_0_2g_fully -> stat_sys_signal_0_2g_fully
    int stat_sys_signal_0_3g -> stat_sys_signal_0_3g
    int stat_sys_signal_0_3g_default -> stat_sys_signal_0_3g_default
    int stat_sys_signal_0_3g_default_fully -> stat_sys_signal_0_3g_default_fully
    int stat_sys_signal_0_3g_default_fully_roam -> stat_sys_signal_0_3g_default_fully_roam
    int stat_sys_signal_0_3g_default_roam -> stat_sys_signal_0_3g_default_roam
    int stat_sys_signal_0_3g_fully -> stat_sys_signal_0_3g_fully
    int stat_sys_signal_0_3g_fully_roam -> stat_sys_signal_0_3g_fully_roam
    int stat_sys_signal_0_3g_roam -> stat_sys_signal_0_3g_roam
    int stat_sys_signal_0_4g -> stat_sys_signal_0_4g
    int stat_sys_signal_0_4g_default -> stat_sys_signal_0_4g_default
    int stat_sys_signal_0_4g_default_fully -> stat_sys_signal_0_4g_default_fully
    int stat_sys_signal_0_4g_default_fully_roam -> stat_sys_signal_0_4g_default_fully_roam
    int stat_sys_signal_0_4g_default_roam -> stat_sys_signal_0_4g_default_roam
    int stat_sys_signal_0_4g_fully -> stat_sys_signal_0_4g_fully
    int stat_sys_signal_0_4g_plus_default -> stat_sys_signal_0_4g_plus_default
    int stat_sys_signal_0_4g_plus_default_fully -> stat_sys_signal_0_4g_plus_default_fully
    int stat_sys_signal_0_default_fully_roam -> stat_sys_signal_0_default_fully_roam
    int stat_sys_signal_0_default_roam -> stat_sys_signal_0_default_roam
    int stat_sys_signal_0_e -> stat_sys_signal_0_e
    int stat_sys_signal_0_e_fully -> stat_sys_signal_0_e_fully
    int stat_sys_signal_0_e_fully_roam -> stat_sys_signal_0_e_fully_roam
    int stat_sys_signal_0_e_roam -> stat_sys_signal_0_e_roam
    int stat_sys_signal_0_fully_sim -> stat_sys_signal_0_fully_sim
    int stat_sys_signal_0_fully_sim1_3g -> stat_sys_signal_0_fully_sim1_3g
    int stat_sys_signal_0_fully_sim1_4g -> stat_sys_signal_0_fully_sim1_4g
    int stat_sys_signal_0_fully_sim1_g -> stat_sys_signal_0_fully_sim1_g
    int stat_sys_signal_0_fully_sim1_h -> stat_sys_signal_0_fully_sim1_h
    int stat_sys_signal_0_fully_sim1_hp -> stat_sys_signal_0_fully_sim1_hp
    int stat_sys_signal_0_fully_sim2_3g -> stat_sys_signal_0_fully_sim2_3g
    int stat_sys_signal_0_fully_sim2_4g -> stat_sys_signal_0_fully_sim2_4g
    int stat_sys_signal_0_fully_sim2_g -> stat_sys_signal_0_fully_sim2_g
    int stat_sys_signal_0_fully_sim2_h -> stat_sys_signal_0_fully_sim2_h
    int stat_sys_signal_0_fully_sim2_hp -> stat_sys_signal_0_fully_sim2_hp
    int stat_sys_signal_0_g -> stat_sys_signal_0_g
    int stat_sys_signal_0_g_fully -> stat_sys_signal_0_g_fully
    int stat_sys_signal_0_g_fully_roam -> stat_sys_signal_0_g_fully_roam
    int stat_sys_signal_0_g_roam -> stat_sys_signal_0_g_roam
    int stat_sys_signal_0_gsm -> stat_sys_signal_0_gsm
    int stat_sys_signal_0_gsm_fully -> stat_sys_signal_0_gsm_fully
    int stat_sys_signal_0_sim -> stat_sys_signal_0_sim
    int stat_sys_signal_0_sim1_3g -> stat_sys_signal_0_sim1_3g
    int stat_sys_signal_0_sim1_4g -> stat_sys_signal_0_sim1_4g
    int stat_sys_signal_0_sim1_g -> stat_sys_signal_0_sim1_g
    int stat_sys_signal_0_sim1_h -> stat_sys_signal_0_sim1_h
    int stat_sys_signal_0_sim1_hp -> stat_sys_signal_0_sim1_hp
    int stat_sys_signal_0_sim2_3g -> stat_sys_signal_0_sim2_3g
    int stat_sys_signal_0_sim2_4g -> stat_sys_signal_0_sim2_4g
    int stat_sys_signal_0_sim2_g -> stat_sys_signal_0_sim2_g
    int stat_sys_signal_0_sim2_h -> stat_sys_signal_0_sim2_h
    int stat_sys_signal_0_sim2_hp -> stat_sys_signal_0_sim2_hp
    int stat_sys_signal_1_1x -> stat_sys_signal_1_1x
    int stat_sys_signal_1_1x_fully -> stat_sys_signal_1_1x_fully
    int stat_sys_signal_1_1x_fully_roam -> stat_sys_signal_1_1x_fully_roam
    int stat_sys_signal_1_1x_only -> stat_sys_signal_1_1x_only
    int stat_sys_signal_1_1x_only_fully -> stat_sys_signal_1_1x_only_fully
    int stat_sys_signal_1_1x_only_fully_roam -> stat_sys_signal_1_1x_only_fully_roam
    int stat_sys_signal_1_1x_only_roam -> stat_sys_signal_1_1x_only_roam
    int stat_sys_signal_1_1x_roam -> stat_sys_signal_1_1x_roam
    int stat_sys_signal_1_2g -> stat_sys_signal_1_2g
    int stat_sys_signal_1_2g_default -> stat_sys_signal_1_2g_default
    int stat_sys_signal_1_2g_default_fully -> stat_sys_signal_1_2g_default_fully
    int stat_sys_signal_1_2g_default_fully_roam -> stat_sys_signal_1_2g_default_fully_roam
    int stat_sys_signal_1_2g_default_roam -> stat_sys_signal_1_2g_default_roam
    int stat_sys_signal_1_2g_fully -> stat_sys_signal_1_2g_fully
    int stat_sys_signal_1_3g -> stat_sys_signal_1_3g
    int stat_sys_signal_1_3g_default -> stat_sys_signal_1_3g_default
    int stat_sys_signal_1_3g_default_fully -> stat_sys_signal_1_3g_default_fully
    int stat_sys_signal_1_3g_default_fully_roam -> stat_sys_signal_1_3g_default_fully_roam
    int stat_sys_signal_1_3g_default_roam -> stat_sys_signal_1_3g_default_roam
    int stat_sys_signal_1_3g_fully -> stat_sys_signal_1_3g_fully
    int stat_sys_signal_1_3g_fully_roam -> stat_sys_signal_1_3g_fully_roam
    int stat_sys_signal_1_3g_roam -> stat_sys_signal_1_3g_roam
    int stat_sys_signal_1_4g -> stat_sys_signal_1_4g
    int stat_sys_signal_1_4g_default -> stat_sys_signal_1_4g_default
    int stat_sys_signal_1_4g_default_fully -> stat_sys_signal_1_4g_default_fully
    int stat_sys_signal_1_4g_default_fully_roam -> stat_sys_signal_1_4g_default_fully_roam
    int stat_sys_signal_1_4g_default_roam -> stat_sys_signal_1_4g_default_roam
    int stat_sys_signal_1_4g_fully -> stat_sys_signal_1_4g_fully
    int stat_sys_signal_1_4g_plus_default -> stat_sys_signal_1_4g_plus_default
    int stat_sys_signal_1_4g_plus_default_fully -> stat_sys_signal_1_4g_plus_default_fully
    int stat_sys_signal_1_default_fully_roam -> stat_sys_signal_1_default_fully_roam
    int stat_sys_signal_1_default_roam -> stat_sys_signal_1_default_roam
    int stat_sys_signal_1_e -> stat_sys_signal_1_e
    int stat_sys_signal_1_e_fully -> stat_sys_signal_1_e_fully
    int stat_sys_signal_1_e_fully_roam -> stat_sys_signal_1_e_fully_roam
    int stat_sys_signal_1_e_roam -> stat_sys_signal_1_e_roam
    int stat_sys_signal_1_fully_sim -> stat_sys_signal_1_fully_sim
    int stat_sys_signal_1_fully_sim1_3g -> stat_sys_signal_1_fully_sim1_3g
    int stat_sys_signal_1_fully_sim1_4g -> stat_sys_signal_1_fully_sim1_4g
    int stat_sys_signal_1_fully_sim1_g -> stat_sys_signal_1_fully_sim1_g
    int stat_sys_signal_1_fully_sim1_h -> stat_sys_signal_1_fully_sim1_h
    int stat_sys_signal_1_fully_sim1_hp -> stat_sys_signal_1_fully_sim1_hp
    int stat_sys_signal_1_fully_sim2_3g -> stat_sys_signal_1_fully_sim2_3g
    int stat_sys_signal_1_fully_sim2_4g -> stat_sys_signal_1_fully_sim2_4g
    int stat_sys_signal_1_fully_sim2_g -> stat_sys_signal_1_fully_sim2_g
    int stat_sys_signal_1_fully_sim2_h -> stat_sys_signal_1_fully_sim2_h
    int stat_sys_signal_1_fully_sim2_hp -> stat_sys_signal_1_fully_sim2_hp
    int stat_sys_signal_1_g -> stat_sys_signal_1_g
    int stat_sys_signal_1_g_fully -> stat_sys_signal_1_g_fully
    int stat_sys_signal_1_g_fully_roam -> stat_sys_signal_1_g_fully_roam
    int stat_sys_signal_1_g_roam -> stat_sys_signal_1_g_roam
    int stat_sys_signal_1_gsm -> stat_sys_signal_1_gsm
    int stat_sys_signal_1_gsm_fully -> stat_sys_signal_1_gsm_fully
    int stat_sys_signal_1_sim -> stat_sys_signal_1_sim
    int stat_sys_signal_1_sim1_3g -> stat_sys_signal_1_sim1_3g
    int stat_sys_signal_1_sim1_4g -> stat_sys_signal_1_sim1_4g
    int stat_sys_signal_1_sim1_g -> stat_sys_signal_1_sim1_g
    int stat_sys_signal_1_sim1_h -> stat_sys_signal_1_sim1_h
    int stat_sys_signal_1_sim1_hp -> stat_sys_signal_1_sim1_hp
    int stat_sys_signal_1_sim2_3g -> stat_sys_signal_1_sim2_3g
    int stat_sys_signal_1_sim2_4g -> stat_sys_signal_1_sim2_4g
    int stat_sys_signal_1_sim2_g -> stat_sys_signal_1_sim2_g
    int stat_sys_signal_1_sim2_h -> stat_sys_signal_1_sim2_h
    int stat_sys_signal_1_sim2_hp -> stat_sys_signal_1_sim2_hp
    int stat_sys_signal_1x_in -> stat_sys_signal_1x_in
    int stat_sys_signal_1x_inout -> stat_sys_signal_1x_inout
    int stat_sys_signal_1x_no -> stat_sys_signal_1x_no
    int stat_sys_signal_1x_out -> stat_sys_signal_1x_out
    int stat_sys_signal_2_1x -> stat_sys_signal_2_1x
    int stat_sys_signal_2_1x_fully -> stat_sys_signal_2_1x_fully
    int stat_sys_signal_2_1x_fully_roam -> stat_sys_signal_2_1x_fully_roam
    int stat_sys_signal_2_1x_only -> stat_sys_signal_2_1x_only
    int stat_sys_signal_2_1x_only_fully -> stat_sys_signal_2_1x_only_fully
    int stat_sys_signal_2_1x_only_fully_roam -> stat_sys_signal_2_1x_only_fully_roam
    int stat_sys_signal_2_1x_only_roam -> stat_sys_signal_2_1x_only_roam
    int stat_sys_signal_2_1x_roam -> stat_sys_signal_2_1x_roam
    int stat_sys_signal_2_2g -> stat_sys_signal_2_2g
    int stat_sys_signal_2_2g_default -> stat_sys_signal_2_2g_default
    int stat_sys_signal_2_2g_default_fully -> stat_sys_signal_2_2g_default_fully
    int stat_sys_signal_2_2g_default_fully_roam -> stat_sys_signal_2_2g_default_fully_roam
    int stat_sys_signal_2_2g_default_roam -> stat_sys_signal_2_2g_default_roam
    int stat_sys_signal_2_2g_fully -> stat_sys_signal_2_2g_fully
    int stat_sys_signal_2_3g -> stat_sys_signal_2_3g
    int stat_sys_signal_2_3g_default -> stat_sys_signal_2_3g_default
    int stat_sys_signal_2_3g_default_fully -> stat_sys_signal_2_3g_default_fully
    int stat_sys_signal_2_3g_default_fully_roam -> stat_sys_signal_2_3g_default_fully_roam
    int stat_sys_signal_2_3g_default_roam -> stat_sys_signal_2_3g_default_roam
    int stat_sys_signal_2_3g_fully -> stat_sys_signal_2_3g_fully
    int stat_sys_signal_2_3g_fully_roam -> stat_sys_signal_2_3g_fully_roam
    int stat_sys_signal_2_3g_roam -> stat_sys_signal_2_3g_roam
    int stat_sys_signal_2_4g -> stat_sys_signal_2_4g
    int stat_sys_signal_2_4g_default -> stat_sys_signal_2_4g_default
    int stat_sys_signal_2_4g_default_fully -> stat_sys_signal_2_4g_default_fully
    int stat_sys_signal_2_4g_default_fully_roam -> stat_sys_signal_2_4g_default_fully_roam
    int stat_sys_signal_2_4g_default_roam -> stat_sys_signal_2_4g_default_roam
    int stat_sys_signal_2_4g_fully -> stat_sys_signal_2_4g_fully
    int stat_sys_signal_2_4g_plus_default -> stat_sys_signal_2_4g_plus_default
    int stat_sys_signal_2_4g_plus_default_fully -> stat_sys_signal_2_4g_plus_default_fully
    int stat_sys_signal_2_default_fully_roam -> stat_sys_signal_2_default_fully_roam
    int stat_sys_signal_2_default_roam -> stat_sys_signal_2_default_roam
    int stat_sys_signal_2_e -> stat_sys_signal_2_e
    int stat_sys_signal_2_e_fully -> stat_sys_signal_2_e_fully
    int stat_sys_signal_2_e_fully_roam -> stat_sys_signal_2_e_fully_roam
    int stat_sys_signal_2_e_roam -> stat_sys_signal_2_e_roam
    int stat_sys_signal_2_fully_sim -> stat_sys_signal_2_fully_sim
    int stat_sys_signal_2_fully_sim1_3g -> stat_sys_signal_2_fully_sim1_3g
    int stat_sys_signal_2_fully_sim1_4g -> stat_sys_signal_2_fully_sim1_4g
    int stat_sys_signal_2_fully_sim1_g -> stat_sys_signal_2_fully_sim1_g
    int stat_sys_signal_2_fully_sim1_h -> stat_sys_signal_2_fully_sim1_h
    int stat_sys_signal_2_fully_sim1_hp -> stat_sys_signal_2_fully_sim1_hp
    int stat_sys_signal_2_fully_sim2_3g -> stat_sys_signal_2_fully_sim2_3g
    int stat_sys_signal_2_fully_sim2_4g -> stat_sys_signal_2_fully_sim2_4g
    int stat_sys_signal_2_fully_sim2_g -> stat_sys_signal_2_fully_sim2_g
    int stat_sys_signal_2_fully_sim2_h -> stat_sys_signal_2_fully_sim2_h
    int stat_sys_signal_2_fully_sim2_hp -> stat_sys_signal_2_fully_sim2_hp
    int stat_sys_signal_2_g -> stat_sys_signal_2_g
    int stat_sys_signal_2_g_fully -> stat_sys_signal_2_g_fully
    int stat_sys_signal_2_g_fully_roam -> stat_sys_signal_2_g_fully_roam
    int stat_sys_signal_2_g_roam -> stat_sys_signal_2_g_roam
    int stat_sys_signal_2_gsm -> stat_sys_signal_2_gsm
    int stat_sys_signal_2_gsm_fully -> stat_sys_signal_2_gsm_fully
    int stat_sys_signal_2_sim -> stat_sys_signal_2_sim
    int stat_sys_signal_2_sim1_3g -> stat_sys_signal_2_sim1_3g
    int stat_sys_signal_2_sim1_4g -> stat_sys_signal_2_sim1_4g
    int stat_sys_signal_2_sim1_g -> stat_sys_signal_2_sim1_g
    int stat_sys_signal_2_sim1_h -> stat_sys_signal_2_sim1_h
    int stat_sys_signal_2_sim1_hp -> stat_sys_signal_2_sim1_hp
    int stat_sys_signal_2_sim2_3g -> stat_sys_signal_2_sim2_3g
    int stat_sys_signal_2_sim2_4g -> stat_sys_signal_2_sim2_4g
    int stat_sys_signal_2_sim2_g -> stat_sys_signal_2_sim2_g
    int stat_sys_signal_2_sim2_h -> stat_sys_signal_2_sim2_h
    int stat_sys_signal_2_sim2_hp -> stat_sys_signal_2_sim2_hp
    int stat_sys_signal_2g_in -> stat_sys_signal_2g_in
    int stat_sys_signal_2g_inout -> stat_sys_signal_2g_inout
    int stat_sys_signal_2g_no -> stat_sys_signal_2g_no
    int stat_sys_signal_2g_out -> stat_sys_signal_2g_out
    int stat_sys_signal_3_1x -> stat_sys_signal_3_1x
    int stat_sys_signal_3_1x_fully -> stat_sys_signal_3_1x_fully
    int stat_sys_signal_3_1x_fully_roam -> stat_sys_signal_3_1x_fully_roam
    int stat_sys_signal_3_1x_only -> stat_sys_signal_3_1x_only
    int stat_sys_signal_3_1x_only_fully -> stat_sys_signal_3_1x_only_fully
    int stat_sys_signal_3_1x_only_fully_roam -> stat_sys_signal_3_1x_only_fully_roam
    int stat_sys_signal_3_1x_only_roam -> stat_sys_signal_3_1x_only_roam
    int stat_sys_signal_3_1x_roam -> stat_sys_signal_3_1x_roam
    int stat_sys_signal_3_2g -> stat_sys_signal_3_2g
    int stat_sys_signal_3_2g_default -> stat_sys_signal_3_2g_default
    int stat_sys_signal_3_2g_default_fully -> stat_sys_signal_3_2g_default_fully
    int stat_sys_signal_3_2g_default_fully_roam -> stat_sys_signal_3_2g_default_fully_roam
    int stat_sys_signal_3_2g_default_roam -> stat_sys_signal_3_2g_default_roam
    int stat_sys_signal_3_2g_fully -> stat_sys_signal_3_2g_fully
    int stat_sys_signal_3_3g -> stat_sys_signal_3_3g
    int stat_sys_signal_3_3g_default -> stat_sys_signal_3_3g_default
    int stat_sys_signal_3_3g_default_fully -> stat_sys_signal_3_3g_default_fully
    int stat_sys_signal_3_3g_default_fully_roam -> stat_sys_signal_3_3g_default_fully_roam
    int stat_sys_signal_3_3g_default_roam -> stat_sys_signal_3_3g_default_roam
    int stat_sys_signal_3_3g_fully -> stat_sys_signal_3_3g_fully
    int stat_sys_signal_3_3g_fully_roam -> stat_sys_signal_3_3g_fully_roam
    int stat_sys_signal_3_3g_roam -> stat_sys_signal_3_3g_roam
    int stat_sys_signal_3_4g -> stat_sys_signal_3_4g
    int stat_sys_signal_3_4g_default -> stat_sys_signal_3_4g_default
    int stat_sys_signal_3_4g_default_fully -> stat_sys_signal_3_4g_default_fully
    int stat_sys_signal_3_4g_default_fully_roam -> stat_sys_signal_3_4g_default_fully_roam
    int stat_sys_signal_3_4g_default_roam -> stat_sys_signal_3_4g_default_roam
    int stat_sys_signal_3_4g_fully -> stat_sys_signal_3_4g_fully
    int stat_sys_signal_3_4g_plus_default -> stat_sys_signal_3_4g_plus_default
    int stat_sys_signal_3_4g_plus_default_fully -> stat_sys_signal_3_4g_plus_default_fully
    int stat_sys_signal_3_default_fully_roam -> stat_sys_signal_3_default_fully_roam
    int stat_sys_signal_3_default_roam -> stat_sys_signal_3_default_roam
    int stat_sys_signal_3_e -> stat_sys_signal_3_e
    int stat_sys_signal_3_e_fully -> stat_sys_signal_3_e_fully
    int stat_sys_signal_3_e_fully_roam -> stat_sys_signal_3_e_fully_roam
    int stat_sys_signal_3_e_roam -> stat_sys_signal_3_e_roam
    int stat_sys_signal_3_fully_sim -> stat_sys_signal_3_fully_sim
    int stat_sys_signal_3_fully_sim1_3g -> stat_sys_signal_3_fully_sim1_3g
    int stat_sys_signal_3_fully_sim1_4g -> stat_sys_signal_3_fully_sim1_4g
    int stat_sys_signal_3_fully_sim1_g -> stat_sys_signal_3_fully_sim1_g
    int stat_sys_signal_3_fully_sim1_h -> stat_sys_signal_3_fully_sim1_h
    int stat_sys_signal_3_fully_sim1_hp -> stat_sys_signal_3_fully_sim1_hp
    int stat_sys_signal_3_fully_sim2_3g -> stat_sys_signal_3_fully_sim2_3g
    int stat_sys_signal_3_fully_sim2_4g -> stat_sys_signal_3_fully_sim2_4g
    int stat_sys_signal_3_fully_sim2_g -> stat_sys_signal_3_fully_sim2_g
    int stat_sys_signal_3_fully_sim2_h -> stat_sys_signal_3_fully_sim2_h
    int stat_sys_signal_3_fully_sim2_hp -> stat_sys_signal_3_fully_sim2_hp
    int stat_sys_signal_3_g -> stat_sys_signal_3_g
    int stat_sys_signal_3_g_fully -> stat_sys_signal_3_g_fully
    int stat_sys_signal_3_g_fully_roam -> stat_sys_signal_3_g_fully_roam
    int stat_sys_signal_3_g_roam -> stat_sys_signal_3_g_roam
    int stat_sys_signal_3_gsm -> stat_sys_signal_3_gsm
    int stat_sys_signal_3_gsm_fully -> stat_sys_signal_3_gsm_fully
    int stat_sys_signal_3_sim -> stat_sys_signal_3_sim
    int stat_sys_signal_3_sim1_3g -> stat_sys_signal_3_sim1_3g
    int stat_sys_signal_3_sim1_4g -> stat_sys_signal_3_sim1_4g
    int stat_sys_signal_3_sim1_g -> stat_sys_signal_3_sim1_g
    int stat_sys_signal_3_sim1_h -> stat_sys_signal_3_sim1_h
    int stat_sys_signal_3_sim1_hp -> stat_sys_signal_3_sim1_hp
    int stat_sys_signal_3_sim2_3g -> stat_sys_signal_3_sim2_3g
    int stat_sys_signal_3_sim2_4g -> stat_sys_signal_3_sim2_4g
    int stat_sys_signal_3_sim2_g -> stat_sys_signal_3_sim2_g
    int stat_sys_signal_3_sim2_h -> stat_sys_signal_3_sim2_h
    int stat_sys_signal_3_sim2_hp -> stat_sys_signal_3_sim2_hp
    int stat_sys_signal_3g_in -> stat_sys_signal_3g_in
    int stat_sys_signal_3g_inout -> stat_sys_signal_3g_inout
    int stat_sys_signal_3g_no -> stat_sys_signal_3g_no
    int stat_sys_signal_3g_out -> stat_sys_signal_3g_out
    int stat_sys_signal_4_1x -> stat_sys_signal_4_1x
    int stat_sys_signal_4_1x_fully -> stat_sys_signal_4_1x_fully
    int stat_sys_signal_4_1x_fully_roam -> stat_sys_signal_4_1x_fully_roam
    int stat_sys_signal_4_1x_only -> stat_sys_signal_4_1x_only
    int stat_sys_signal_4_1x_only_fully -> stat_sys_signal_4_1x_only_fully
    int stat_sys_signal_4_1x_only_fully_roam -> stat_sys_signal_4_1x_only_fully_roam
    int stat_sys_signal_4_1x_only_roam -> stat_sys_signal_4_1x_only_roam
    int stat_sys_signal_4_1x_roam -> stat_sys_signal_4_1x_roam
    int stat_sys_signal_4_2g -> stat_sys_signal_4_2g
    int stat_sys_signal_4_2g_default -> stat_sys_signal_4_2g_default
    int stat_sys_signal_4_2g_default_fully -> stat_sys_signal_4_2g_default_fully
    int stat_sys_signal_4_2g_default_fully_roam -> stat_sys_signal_4_2g_default_fully_roam
    int stat_sys_signal_4_2g_default_roam -> stat_sys_signal_4_2g_default_roam
    int stat_sys_signal_4_2g_fully -> stat_sys_signal_4_2g_fully
    int stat_sys_signal_4_3g -> stat_sys_signal_4_3g
    int stat_sys_signal_4_3g_default -> stat_sys_signal_4_3g_default
    int stat_sys_signal_4_3g_default_fully -> stat_sys_signal_4_3g_default_fully
    int stat_sys_signal_4_3g_default_fully_roam -> stat_sys_signal_4_3g_default_fully_roam
    int stat_sys_signal_4_3g_default_roam -> stat_sys_signal_4_3g_default_roam
    int stat_sys_signal_4_3g_fully -> stat_sys_signal_4_3g_fully
    int stat_sys_signal_4_3g_fully_roam -> stat_sys_signal_4_3g_fully_roam
    int stat_sys_signal_4_3g_roam -> stat_sys_signal_4_3g_roam
    int stat_sys_signal_4_4g -> stat_sys_signal_4_4g
    int stat_sys_signal_4_4g_default -> stat_sys_signal_4_4g_default
    int stat_sys_signal_4_4g_default_fully -> stat_sys_signal_4_4g_default_fully
    int stat_sys_signal_4_4g_default_fully_roam -> stat_sys_signal_4_4g_default_fully_roam
    int stat_sys_signal_4_4g_default_roam -> stat_sys_signal_4_4g_default_roam
    int stat_sys_signal_4_4g_fully -> stat_sys_signal_4_4g_fully
    int stat_sys_signal_4_4g_plus_default -> stat_sys_signal_4_4g_plus_default
    int stat_sys_signal_4_4g_plus_default_fully -> stat_sys_signal_4_4g_plus_default_fully
    int stat_sys_signal_4_default_fully_roam -> stat_sys_signal_4_default_fully_roam
    int stat_sys_signal_4_default_roam -> stat_sys_signal_4_default_roam
    int stat_sys_signal_4_e -> stat_sys_signal_4_e
    int stat_sys_signal_4_e_fully -> stat_sys_signal_4_e_fully
    int stat_sys_signal_4_e_fully_roam -> stat_sys_signal_4_e_fully_roam
    int stat_sys_signal_4_e_roam -> stat_sys_signal_4_e_roam
    int stat_sys_signal_4_fully_sim -> stat_sys_signal_4_fully_sim
    int stat_sys_signal_4_fully_sim1_3g -> stat_sys_signal_4_fully_sim1_3g
    int stat_sys_signal_4_fully_sim1_4g -> stat_sys_signal_4_fully_sim1_4g
    int stat_sys_signal_4_fully_sim1_g -> stat_sys_signal_4_fully_sim1_g
    int stat_sys_signal_4_fully_sim1_h -> stat_sys_signal_4_fully_sim1_h
    int stat_sys_signal_4_fully_sim1_hp -> stat_sys_signal_4_fully_sim1_hp
    int stat_sys_signal_4_fully_sim2_3g -> stat_sys_signal_4_fully_sim2_3g
    int stat_sys_signal_4_fully_sim2_4g -> stat_sys_signal_4_fully_sim2_4g
    int stat_sys_signal_4_fully_sim2_g -> stat_sys_signal_4_fully_sim2_g
    int stat_sys_signal_4_fully_sim2_h -> stat_sys_signal_4_fully_sim2_h
    int stat_sys_signal_4_fully_sim2_hp -> stat_sys_signal_4_fully_sim2_hp
    int stat_sys_signal_4_g -> stat_sys_signal_4_g
    int stat_sys_signal_4_g_fully -> stat_sys_signal_4_g_fully
    int stat_sys_signal_4_g_fully_roam -> stat_sys_signal_4_g_fully_roam
    int stat_sys_signal_4_g_roam -> stat_sys_signal_4_g_roam
    int stat_sys_signal_4_gsm -> stat_sys_signal_4_gsm
    int stat_sys_signal_4_gsm_fully -> stat_sys_signal_4_gsm_fully
    int stat_sys_signal_4_sim -> stat_sys_signal_4_sim
    int stat_sys_signal_4_sim1_3g -> stat_sys_signal_4_sim1_3g
    int stat_sys_signal_4_sim1_4g -> stat_sys_signal_4_sim1_4g
    int stat_sys_signal_4_sim1_g -> stat_sys_signal_4_sim1_g
    int stat_sys_signal_4_sim1_h -> stat_sys_signal_4_sim1_h
    int stat_sys_signal_4_sim1_hp -> stat_sys_signal_4_sim1_hp
    int stat_sys_signal_4_sim2_3g -> stat_sys_signal_4_sim2_3g
    int stat_sys_signal_4_sim2_4g -> stat_sys_signal_4_sim2_4g
    int stat_sys_signal_4_sim2_g -> stat_sys_signal_4_sim2_g
    int stat_sys_signal_4_sim2_h -> stat_sys_signal_4_sim2_h
    int stat_sys_signal_4_sim2_hp -> stat_sys_signal_4_sim2_hp
    int stat_sys_signal_4g_in -> stat_sys_signal_4g_in
    int stat_sys_signal_4g_inout -> stat_sys_signal_4g_inout
    int stat_sys_signal_4g_no -> stat_sys_signal_4g_no
    int stat_sys_signal_4g_out -> stat_sys_signal_4g_out
    int stat_sys_signal_4g_plus_in -> stat_sys_signal_4g_plus_in
    int stat_sys_signal_4g_plus_inout -> stat_sys_signal_4g_plus_inout
    int stat_sys_signal_4g_plus_no -> stat_sys_signal_4g_plus_no
    int stat_sys_signal_4g_plus_out -> stat_sys_signal_4g_plus_out
    int stat_sys_signal_e_in -> stat_sys_signal_e_in
    int stat_sys_signal_e_inout -> stat_sys_signal_e_inout
    int stat_sys_signal_e_no -> stat_sys_signal_e_no
    int stat_sys_signal_e_out -> stat_sys_signal_e_out
    int stat_sys_signal_g_in -> stat_sys_signal_g_in
    int stat_sys_signal_g_inout -> stat_sys_signal_g_inout
    int stat_sys_signal_g_no -> stat_sys_signal_g_no
    int stat_sys_signal_g_out -> stat_sys_signal_g_out
    int stat_sys_signal_h_in -> stat_sys_signal_h_in
    int stat_sys_signal_h_inout -> stat_sys_signal_h_inout
    int stat_sys_signal_h_no -> stat_sys_signal_h_no
    int stat_sys_signal_h_out -> stat_sys_signal_h_out
    int stat_sys_signal_hp_in -> stat_sys_signal_hp_in
    int stat_sys_signal_hp_inout -> stat_sys_signal_hp_inout
    int stat_sys_signal_hp_no -> stat_sys_signal_hp_no
    int stat_sys_signal_hp_out -> stat_sys_signal_hp_out
    int stat_sys_signal_in -> stat_sys_signal_in
    int stat_sys_signal_inout -> stat_sys_signal_inout
    int stat_sys_signal_null -> stat_sys_signal_null
    int stat_sys_signal_null_1 -> stat_sys_signal_null_1
    int stat_sys_signal_null_sim1 -> stat_sys_signal_null_sim1
    int stat_sys_signal_null_sim2 -> stat_sys_signal_null_sim2
    int stat_sys_signal_out -> stat_sys_signal_out
    int stat_sys_signal_r_in -> stat_sys_signal_r_in
    int stat_sys_signal_r_inout -> stat_sys_signal_r_inout
    int stat_sys_signal_r_no -> stat_sys_signal_r_no
    int stat_sys_signal_r_out -> stat_sys_signal_r_out
    int stat_sys_tty_mode -> stat_sys_tty_mode
    int stat_sys_vpn_ic -> stat_sys_vpn_ic
    int stat_sys_wifi_in -> stat_sys_wifi_in
    int stat_sys_wifi_inout -> stat_sys_wifi_inout
    int stat_sys_wifi_out -> stat_sys_wifi_out
    int stat_sys_wifi_signal_0 -> stat_sys_wifi_signal_0
    int stat_sys_wifi_signal_0_fully -> stat_sys_wifi_signal_0_fully
    int stat_sys_wifi_signal_1 -> stat_sys_wifi_signal_1
    int stat_sys_wifi_signal_1_fully -> stat_sys_wifi_signal_1_fully
    int stat_sys_wifi_signal_2 -> stat_sys_wifi_signal_2
    int stat_sys_wifi_signal_2_fully -> stat_sys_wifi_signal_2_fully
    int stat_sys_wifi_signal_3 -> stat_sys_wifi_signal_3
    int stat_sys_wifi_signal_3_fully -> stat_sys_wifi_signal_3_fully
    int stat_sys_wifi_signal_4 -> stat_sys_wifi_signal_4
    int stat_sys_wifi_signal_4_fully -> stat_sys_wifi_signal_4_fully
    int stat_sys_wifi_signal_null -> stat_sys_wifi_signal_null
    int stat_sys_zen_important -> stat_sys_zen_important
    int stat_sys_zen_none -> stat_sys_zen_none
    int status_background -> status_background
    int status_bar_notification_row_background_color -> status_bar_notification_row_background_color
    int sun -> sun
    int sun2 -> sun2
    int switchbar_background -> switchbar_background
    int system_bar_background -> system_bar_background
    int ticker_background_color -> ticker_background_color
    int tooltip_frame_dark -> tooltip_frame_dark
    int tooltip_frame_light -> tooltip_frame_light
    int trusted_state_to_error -> trusted_state_to_error
    int trusted_state_to_error_animation -> trusted_state_to_error_animation
    int tuner -> tuner
    int tv_pip_button_focused -> tv_pip_button_focused
    int tv_pip_outline -> tv_pip_outline
    int volume_dialog_background -> volume_dialog_background
    int zen_introduction_message_background -> zen_introduction_message_background
    void <init>() -> <init>
com.android.systemui.recents.views.RecentsTransitionHelper$5 -> com.android.systemui.recents.views.RecentsTransitionHelper$5:
    com.android.systemui.recents.views.RecentsTransitionHelper this$0 -> this$0
    com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer val$composer -> val$composer
    void <init>(com.android.systemui.recents.views.RecentsTransitionHelper,com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer) -> <init>
    android.view.AppTransitionAnimationSpec[] get() -> get
    void lambda$-com_android_systemui_recents_views_RecentsTransitionHelper$5_11842(com.android.systemui.recents.views.RecentsTransitionHelper$AnimationSpecComposer) -> lambda$-com_android_systemui_recents_views_RecentsTransitionHelper$5_11842
com.android.systemui.assist.AssistOrbView$1 -> com.android.systemui.assist.AssistOrbView$1:
    com.android.systemui.assist.AssistOrbView this$0 -> this$0
    void <init>(com.android.systemui.assist.AssistOrbView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v7.preference.TwoStatePreference$SavedState$1 -> android.support.v7.preference.TwoStatePreference$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v7.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.preference.TwoStatePreference$SavedState[] newArray(int) -> newArray
    void <init>() -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.DessertCaseView$1 -> com.android.systemui.DessertCaseView$1:
    com.android.systemui.DessertCaseView this$0 -> this$0
    void <init>(com.android.systemui.DessertCaseView) -> <init>
    void run() -> run
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
com.android.systemui.classifier.DurationCountEvaluator -> com.android.systemui.classifier.DurationCountEvaluator:
    void <init>() -> <init>
    float evaluate(float) -> evaluate
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void run() -> run
android.support.v4.media.session.IMediaControllerCallback -> android.support.v4.media.session.IMediaControllerCallback:
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    void onShuffleModeChangedDeprecated(boolean) -> onShuffleModeChangedDeprecated
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
    void onRepeatModeChanged(int) -> onRepeatModeChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionReady() -> onSessionReady
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onShuffleModeChanged(int) -> onShuffleModeChanged
com.android.systemui.recents.misc.ForegroundThread -> com.android.systemui.recents.misc.ForegroundThread:
    android.os.Handler sHandler -> sHandler
    com.android.systemui.recents.misc.ForegroundThread sInstance -> sInstance
    void <init>() -> <init>
    void ensureThreadLocked() -> ensureThreadLocked
    com.android.systemui.recents.misc.ForegroundThread get() -> get
    android.os.Handler getHandler() -> getHandler
com.android.systemui.tuner.TunablePadding -> com.android.systemui.tuner.TunablePadding:
    int mDefaultSize -> mDefaultSize
    float mDensity -> mDensity
    int mFlags -> mFlags
    android.view.View mView -> mView
    void <init>(java.lang.String,int,int,android.view.View) -> <init>
    com.android.systemui.tuner.TunablePadding addTunablePadding(android.view.View,java.lang.String,int,int) -> addTunablePadding
    void destroy() -> destroy
    int getPadding(int,int) -> getPadding
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void <init>(java.lang.String,int,int,android.view.View,com.android.systemui.tuner.TunablePadding) -> <init>
com.android.systemui.tuner.LockscreenFragment$Holder -> com.android.systemui.tuner.LockscreenFragment$Holder:
    com.android.systemui.statusbar.phone.ExpandableIndicator expand -> expand
    android.widget.ImageView icon -> icon
    android.widget.TextView title -> title
    void <init>(android.view.View) -> <init>
com.android.systemui.analytics.DataCollector$1 -> com.android.systemui.analytics.DataCollector$1:
    com.android.systemui.analytics.DataCollector this$0 -> this$0
    void <init>(com.android.systemui.analytics.DataCollector,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.systemui.plugins.PluginManagerImpl$ClassLoaderFilter -> com.android.systemui.plugins.PluginManagerImpl$ClassLoaderFilter:
    java.lang.ClassLoader mBase -> mBase
    java.lang.String mPackage -> mPackage
    void <init>(java.lang.ClassLoader,java.lang.String) -> <init>
    java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
android.support.v7.media.MediaRouterJellybeanMr2$RouteInfo -> android.support.v7.media.MediaRouterJellybeanMr2$RouteInfo:
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    void <init>() -> <init>
    boolean isConnecting(java.lang.Object) -> isConnecting
com.android.systemui.fragments.FragmentHostManager$HostCallbacks -> com.android.systemui.fragments.FragmentHostManager$HostCallbacks:
    com.android.systemui.fragments.FragmentHostManager this$0 -> this$0
    void <init>(com.android.systemui.fragments.FragmentHostManager) -> <init>
    android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void onAttachFragment(android.app.Fragment) -> onAttachFragment
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    android.view.View onFindViewById(int) -> onFindViewById
    com.android.systemui.fragments.FragmentHostManager onGetHost() -> onGetHost
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    int onGetWindowAnimations() -> onGetWindowAnimations
    boolean onHasView() -> onHasView
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    boolean onShouldSaveFragmentState(android.app.Fragment) -> onShouldSaveFragmentState
    boolean onUseFragmentManagerInflaterFactory() -> onUseFragmentManagerInflaterFactory
    java.lang.Object onGetHost() -> onGetHost
com.android.systemui.qs.tileimpl.SlashImageView -> com.android.systemui.qs.tileimpl.SlashImageView:
    boolean mAnimationEnabled -> mAnimationEnabled
    com.android.systemui.qs.SlashDrawable mSlash -> mSlash
    void setAnimationEnabled(boolean) -> setAnimationEnabled
    void setState(com.android.systemui.plugins.qs.QSTile$SlashState,android.graphics.drawable.Drawable) -> setState
    void <init>(android.content.Context) -> <init>
    void ensureSlashDrawable() -> ensureSlashDrawable
    boolean getAnimationEnabled() -> getAnimationEnabled
    com.android.systemui.qs.SlashDrawable getSlash() -> getSlash
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageViewDrawable(com.android.systemui.qs.SlashDrawable) -> setImageViewDrawable
    void setSlash(com.android.systemui.qs.SlashDrawable) -> setSlash
    void setSlashState(com.android.systemui.plugins.qs.QSTile$SlashState) -> setSlashState
com.android.systemui.statusbar.notification.NotificationInflater$InflationExecutor$1 -> com.android.systemui.statusbar.notification.NotificationInflater$InflationExecutor$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    void <init>() -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.android.systemui.doze.DozeScreenState -> com.android.systemui.doze.DozeScreenState:
    java.lang.Runnable mApplyPendingScreenState -> mApplyPendingScreenState
    com.android.systemui.doze.DozeMachine$Service mDozeService -> mDozeService
    android.os.Handler mHandler -> mHandler
    int mPendingScreenState -> mPendingScreenState
    void <init>(com.android.systemui.doze.DozeMachine$Service,android.os.Handler) -> <init>
    void applyPendingScreenState() -> applyPendingScreenState
    void applyScreenState(int) -> applyScreenState
    void transitionTo(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State) -> transitionTo
    void -com_android_systemui_doze_DozeScreenState-mthref-0() -> -com_android_systemui_doze_DozeScreenState-mthref-0
com.android.settingslib.CustomDialogPreference -> com.android.settingslib.CustomDialogPreference:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.android.settingslib.bluetooth.PbapClientProfile -> com.android.settingslib.bluetooth.PbapClientProfile:
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    android.bluetooth.BluetoothPbapClient mService -> mService
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    android.os.ParcelUuid[] SRC_UUIDS -> SRC_UUIDS
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.PbapClientProfile) -> -get1
    java.util.List getConnectedDevices() -> getConnectedDevices
    boolean -set0(com.android.settingslib.bluetooth.PbapClientProfile,boolean) -> -set0
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    android.bluetooth.BluetoothPbapClient -get4(com.android.settingslib.bluetooth.PbapClientProfile) -> -get4
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.settingslib.bluetooth.PbapClientProfile) -> -get2
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> <init>
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    android.bluetooth.BluetoothPbapClient -set1(com.android.settingslib.bluetooth.PbapClientProfile,android.bluetooth.BluetoothPbapClient) -> -set1
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get3(com.android.settingslib.bluetooth.PbapClientProfile) -> -get3
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    boolean isConnectable() -> isConnectable
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    void finalize() -> finalize
com.android.systemui.pip.phone.PipMediaController$3 -> com.android.systemui.pip.phone.PipMediaController$3:
    com.android.systemui.pip.phone.PipMediaController this$0 -> this$0
    void <init>(com.android.systemui.pip.phone.PipMediaController) -> <init>
    void onActiveSessionsChanged(java.util.List) -> onActiveSessionsChanged
android.support.v7.app.MediaRouteChooserDialog$1 -> android.support.v7.app.MediaRouteChooserDialog$1:
    android.support.v7.app.MediaRouteChooserDialog this$0 -> this$0
    void <init>(android.support.v7.app.MediaRouteChooserDialog) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.android.keyguard.KeyguardUpdateMonitor$10 -> com.android.keyguard.KeyguardUpdateMonitor$10:
    com.android.keyguard.KeyguardUpdateMonitor this$0 -> this$0
    void <init>(com.android.keyguard.KeyguardUpdateMonitor,android.os.Handler) -> <init>
    void onChange(boolean) -> onChange
com.android.settingslib.core.lifecycle.events.SetPreferenceScreen -> com.android.settingslib.core.lifecycle.events.SetPreferenceScreen:
    void setPreferenceScreen(android.support.v7.preference.PreferenceScreen) -> setPreferenceScreen
com.android.systemui.keyguard.WakefulnessLifecycle -> com.android.systemui.keyguard.WakefulnessLifecycle:
    int mWakefulness -> mWakefulness
    void <init>() -> <init>
    void dispatchFinishedGoingToSleep() -> dispatchFinishedGoingToSleep
    void dispatchFinishedWakingUp() -> dispatchFinishedWakingUp
    void dispatchStartedGoingToSleep() -> dispatchStartedGoingToSleep
    void dispatchStartedWakingUp() -> dispatchStartedWakingUp
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    int getWakefulness() -> getWakefulness
    void setWakefulness(int) -> setWakefulness
    void -com_android_systemui_keyguard_WakefulnessLifecycle-mthref-0(com.android.systemui.keyguard.WakefulnessLifecycle$Observer) -> -com_android_systemui_keyguard_WakefulnessLifecycle-mthref-0
    void -com_android_systemui_keyguard_WakefulnessLifecycle-mthref-1(com.android.systemui.keyguard.WakefulnessLifecycle$Observer) -> -com_android_systemui_keyguard_WakefulnessLifecycle-mthref-1
    void -com_android_systemui_keyguard_WakefulnessLifecycle-mthref-2(com.android.systemui.keyguard.WakefulnessLifecycle$Observer) -> -com_android_systemui_keyguard_WakefulnessLifecycle-mthref-2
    void -com_android_systemui_keyguard_WakefulnessLifecycle-mthref-3(com.android.systemui.keyguard.WakefulnessLifecycle$Observer) -> -com_android_systemui_keyguard_WakefulnessLifecycle-mthref-3
com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback -> com.android.systemui.statusbar.notification.NotificationInflater$InflationCallback:
    void handleInflationException(android.service.notification.StatusBarNotification,java.lang.Exception) -> handleInflationException
    void onAsyncInflationFinished(com.android.systemui.statusbar.NotificationData$Entry) -> onAsyncInflationFinished
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    boolean SET_DRAWER_SHADOW_FROM_ELEVATION -> SET_DRAWER_SHADOW_FROM_ELEVATION
    boolean mFirstLayout -> mFirstLayout
    int mMinDrawerMargin -> mMinDrawerMargin
    android.graphics.drawable.Drawable mShadowRightResolved -> mShadowRightResolved
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    int mLockModeLeft -> mLockModeLeft
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    int mLockModeRight -> mLockModeRight
    int mScrimColor -> mScrimColor
    android.graphics.drawable.Drawable mShadowStart -> mShadowStart
    java.lang.Object mLastInsets -> mLastInsets
    int mLockModeStart -> mLockModeStart
    float mScrimOpacity -> mScrimOpacity
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    java.util.ArrayList mNonDrawerViews -> mNonDrawerViews
    float mInitialMotionY -> mInitialMotionY
    boolean mInLayout -> mInLayout
    float mInitialMotionX -> mInitialMotionX
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    java.lang.CharSequence mTitleRight -> mTitleRight
    android.graphics.drawable.Drawable mShadowEnd -> mShadowEnd
    boolean CAN_HIDE_DESCENDANTS -> CAN_HIDE_DESCENDANTS
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    int mDrawerState -> mDrawerState
    int mLockModeEnd -> mLockModeEnd
    android.graphics.Paint mScrimPaint -> mScrimPaint
    java.util.List mListeners -> mListeners
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.graphics.drawable.Drawable mShadowLeftResolved -> mShadowLeftResolved
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    float mDrawerElevation -> mDrawerElevation
    int[] THEME_ATTRS -> THEME_ATTRS
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    void openDrawer(android.view.View) -> openDrawer
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean isContentView(android.view.View) -> isContentView
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    void closeDrawers() -> closeDrawers
    int getDrawerLockMode(int) -> getDrawerLockMode
    void onAttachedToWindow() -> onAttachedToWindow
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isDrawerView(android.view.View) -> isDrawerView
    void resolveShadowDrawables() -> resolveShadowDrawables
    void requestLayout() -> requestLayout
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    void closeDrawer(android.view.View,boolean) -> closeDrawer
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void cancelChildViewTouch() -> cancelChildViewTouch
    java.lang.String gravityToString(int) -> gravityToString
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void openDrawer(android.view.View,boolean) -> openDrawer
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers(boolean) -> closeDrawers
    void computeScroll() -> computeScroll
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void closeDrawer(android.view.View) -> closeDrawer
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    void <clinit>() -> <clinit>
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void onDraw(android.graphics.Canvas) -> onDraw
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment$2 -> com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment$2:
    com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment this$1 -> this$1
    void <init>(com.android.systemui.tuner.CustomListPreference$CustomListPreferenceDialogFragment) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.systemui.statusbar.KeyboardShortcuts$ShortcutKeyAccessibilityDelegate -> com.android.systemui.statusbar.KeyboardShortcuts$ShortcutKeyAccessibilityDelegate:
    java.lang.String mContentDescription -> mContentDescription
    com.android.systemui.statusbar.KeyboardShortcuts this$0 -> this$0
    void <init>(com.android.systemui.statusbar.KeyboardShortcuts,java.lang.String) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.android.systemui.volume.ZenModePanel$ConditionTag -> com.android.systemui.volume.ZenModePanel$ConditionTag:
    android.service.notification.Condition condition -> condition
    android.widget.TextView line1 -> line1
    android.widget.TextView line2 -> line2
    android.view.View lines -> lines
    android.widget.RadioButton rb -> rb
    void <init>() -> <init>
android.support.v7.media.MediaRouterJellybeanMr1$RouteInfo -> android.support.v7.media.MediaRouterJellybeanMr1$RouteInfo:
    android.view.Display getPresentationDisplay(java.lang.Object) -> getPresentationDisplay
    void <init>() -> <init>
    boolean isEnabled(java.lang.Object) -> isEnabled
com.android.systemui.recents.-$Lambda$pgmD0Bxm8kFYR7cdcGYk6DUhgds$1 -> com.android.systemui.recents.-$Lambda$pgmD0Bxm8kFYR7cdcGYk6DUhgds$1:
    java.lang.Object -$f0 -> -$f0
    java.lang.Object -$f1 -> -$f1
    java.lang.Object -$f2 -> -$f2
    void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    void $m$0() -> $m$0
    void run() -> run
com.android.systemui.qs.tiles.AirplaneModeTile$2 -> com.android.systemui.qs.tiles.AirplaneModeTile$2:
    com.android.systemui.qs.tiles.AirplaneModeTile this$0 -> this$0
    void <init>(com.android.systemui.qs.tiles.AirplaneModeTile,android.content.Context,android.os.Handler,java.lang.String) -> <init>
    void handleValueChanged(int) -> handleValueChanged
com.android.systemui.stackdivider.WindowManagerProxy$3 -> com.android.systemui.stackdivider.WindowManagerProxy$3:
    com.android.systemui.stackdivider.WindowManagerProxy this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.WindowManagerProxy) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator -> android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator:
    android.animation.Animator animator -> animator
    android.view.animation.Animation animation -> animation
    void <init>(android.animation.Animator) -> <init>
    void <init>(android.view.animation.Animation,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> <init>
    void <init>(android.view.animation.Animation) -> <init>
    void <init>(android.animation.Animator,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> <init>
com.android.systemui.power.PowerNotificationWarnings$1$1 -> com.android.systemui.power.PowerNotificationWarnings$1$1:
    com.android.systemui.power.PowerNotificationWarnings$1 this$1 -> this$1
    void <init>(com.android.systemui.power.PowerNotificationWarnings$1) -> <init>
    void run() -> run
com.android.systemui.qs.QuickQSPanel -> com.android.systemui.qs.QuickQSPanel:
    com.android.systemui.qs.QSPanel mFullPanel -> mFullPanel
    int mMaxTiles -> mMaxTiles
    com.android.systemui.tuner.TunerService$Tunable mNumTiles -> mNumTiles
    int getNumQuickTiles(android.content.Context) -> getNumQuickTiles
    void setQSPanelAndHeader(com.android.systemui.qs.QSPanel,android.view.View) -> setQSPanelAndHeader
    void setHost(com.android.systemui.qs.QSTileHost,com.android.systemui.qs.customize.QSCustomizer) -> setHost
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addDivider() -> addDivider
    void drawTile(com.android.systemui.qs.QSPanel$TileRecord,com.android.systemui.plugins.qs.QSTile$State) -> drawTile
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onTuningChanged(java.lang.String,java.lang.String) -> onTuningChanged
    void setMaxTiles(int) -> setMaxTiles
    void setPadding(int,int,int,int) -> setPadding
    void setTiles(java.util.Collection) -> setTiles
    boolean shouldShowDetail() -> shouldShowDetail
android.support.v14.preference.PreferenceFragment$1 -> android.support.v14.preference.PreferenceFragment$1:
    android.support.v14.preference.PreferenceFragment this$0 -> this$0
    void <init>(android.support.v14.preference.PreferenceFragment) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.annotation.FloatRange -> android.support.annotation.FloatRange:
    double from() -> from
    double to() -> to
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    java.lang.Object[] newArray(int) -> newArray
    android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    void <init>() -> <init>
    android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.android.systemui.recents.events.ui.dragndrop.DragEndEvent -> com.android.systemui.recents.events.ui.dragndrop.DragEndEvent:
    com.android.systemui.recents.views.DropTarget dropTarget -> dropTarget
    com.android.systemui.recents.views.TaskView taskView -> taskView
    com.android.systemui.recents.model.Task task -> task
    void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.DropTarget) -> <init>
com.android.systemui.recents.views.TaskView$4 -> com.android.systemui.recents.views.TaskView$4:
    com.android.systemui.recents.views.TaskView this$0 -> this$0
    void <init>(com.android.systemui.recents.views.TaskView) -> <init>
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.settingslib.bluetooth.HfpClientProfile -> com.android.settingslib.bluetooth.HfpClientProfile:
    boolean V -> V
    boolean mIsProfileReady -> mIsProfileReady
    com.android.settingslib.bluetooth.LocalBluetoothAdapter mLocalAdapter -> mLocalAdapter
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager mProfileManager -> mProfileManager
    android.bluetooth.BluetoothHeadsetClient mService -> mService
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager mDeviceManager -> mDeviceManager
    android.os.ParcelUuid[] SRC_UUIDS -> SRC_UUIDS
    boolean -set0(com.android.settingslib.bluetooth.HfpClientProfile,boolean) -> -set0
    java.util.List getConnectedDevices() -> getConnectedDevices
    com.android.settingslib.bluetooth.LocalBluetoothAdapter -get2(com.android.settingslib.bluetooth.HfpClientProfile) -> -get2
    void setPreferred(android.bluetooth.BluetoothDevice,boolean) -> setPreferred
    void <init>(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.CachedBluetoothDeviceManager,com.android.settingslib.bluetooth.LocalBluetoothProfileManager) -> <init>
    boolean disconnect(android.bluetooth.BluetoothDevice) -> disconnect
    android.bluetooth.BluetoothHeadsetClient -get4(com.android.settingslib.bluetooth.HfpClientProfile) -> -get4
    boolean isPreferred(android.bluetooth.BluetoothDevice) -> isPreferred
    int getConnectionStatus(android.bluetooth.BluetoothDevice) -> getConnectionStatus
    com.android.settingslib.bluetooth.CachedBluetoothDeviceManager -get1(com.android.settingslib.bluetooth.HfpClientProfile) -> -get1
    boolean isConnectable() -> isConnectable
    com.android.settingslib.bluetooth.LocalBluetoothProfileManager -get3(com.android.settingslib.bluetooth.HfpClientProfile) -> -get3
    boolean isAutoConnectable() -> isAutoConnectable
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    boolean connect(android.bluetooth.BluetoothDevice) -> connect
    boolean -get0() -> -get0
    void finalize() -> finalize
    android.bluetooth.BluetoothHeadsetClient -set1(com.android.settingslib.bluetooth.HfpClientProfile,android.bluetooth.BluetoothHeadsetClient) -> -set1
android.support.v17.leanback.widget.SearchBar$10 -> android.support.v17.leanback.widget.SearchBar$10:
    android.support.v17.leanback.widget.SearchBar this$0 -> this$0
    void onReadyForSpeech(android.os.Bundle) -> onReadyForSpeech
    void onEvent(int,android.os.Bundle) -> onEvent
    void onResults(android.os.Bundle) -> onResults
    void onBufferReceived(byte[]) -> onBufferReceived
    void onEndOfSpeech() -> onEndOfSpeech
    void <init>(android.support.v17.leanback.widget.SearchBar) -> <init>
    void onBeginningOfSpeech() -> onBeginningOfSpeech
    void onError(int) -> onError
    void onPartialResults(android.os.Bundle) -> onPartialResults
    void onRmsChanged(float) -> onRmsChanged
com.android.systemui.stackdivider.ForcedResizableInfoActivityController$1 -> com.android.systemui.stackdivider.ForcedResizableInfoActivityController$1:
    com.android.systemui.stackdivider.ForcedResizableInfoActivityController this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.ForcedResizableInfoActivityController) -> <init>
    void run() -> run
android.support.v7.app.AlertController$ButtonHandler -> android.support.v7.app.AlertController$ButtonHandler:
    java.lang.ref.WeakReference mDialog -> mDialog
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(android.content.DialogInterface) -> <init>
android.support.v7.widget.ActionBarContextView$1 -> android.support.v7.widget.ActionBarContextView$1:
    android.support.v7.view.ActionMode val$mode -> val$mode
    android.support.v7.widget.ActionBarContextView this$0 -> this$0
    void <init>(android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.media.MediaBrowserCompat$CustomActionCallback -> android.support.v4.media.MediaBrowserCompat$CustomActionCallback:
    void onError(java.lang.String,android.os.Bundle,android.os.Bundle) -> onError
    void onProgressUpdate(java.lang.String,android.os.Bundle,android.os.Bundle) -> onProgressUpdate
    void <init>() -> <init>
    void onResult(java.lang.String,android.os.Bundle,android.os.Bundle) -> onResult
com.android.systemui.qs.tiles.DataUsageDetailView -> com.android.systemui.qs.tiles.DataUsageDetailView:
    java.text.DecimalFormat FORMAT -> FORMAT
    void bind(com.android.settingslib.net.DataUsageController$DataUsageInfo) -> bind
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.String formatBytes(long) -> formatBytes
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v17.leanback.widget.picker.PickerColumn -> android.support.v17.leanback.widget.picker.PickerColumn:
    int mMinValue -> mMinValue
    int mCurrentValue -> mCurrentValue
    java.lang.String mLabelFormat -> mLabelFormat
    int mMaxValue -> mMaxValue
    java.lang.CharSequence[] mStaticLabels -> mStaticLabels
    void setMaxValue(int) -> setMaxValue
    int getCount() -> getCount
    void setLabelFormat(java.lang.String) -> setLabelFormat
    void setStaticLabels(java.lang.CharSequence[]) -> setStaticLabels
    void setCurrentValue(int) -> setCurrentValue
    int getMinValue() -> getMinValue
    void setMinValue(int) -> setMinValue
    java.lang.CharSequence getLabelFor(int) -> getLabelFor
    void <init>() -> <init>
    int getCurrentValue() -> getCurrentValue
    int getMaxValue() -> getMaxValue
com.android.systemui.power.PowerUI$Receiver -> com.android.systemui.power.PowerUI$Receiver:
    com.android.systemui.power.PowerUI this$0 -> this$0
    void <init>(com.android.systemui.power.PowerUI) -> <init>
    void init() -> init
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(com.android.systemui.power.PowerUI,com.android.systemui.power.PowerUI$Receiver) -> <init>
android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback -> android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.android.systemui.volume.ConfigurableTexts$1 -> com.android.systemui.volume.ConfigurableTexts$1:
    com.android.systemui.volume.ConfigurableTexts this$0 -> this$0
    void <init>(com.android.systemui.volume.ConfigurableTexts) -> <init>
    void run() -> run
com.android.settingslib.bluetooth.BluetoothEventManager$BatteryLevelChangedHandler -> com.android.settingslib.bluetooth.BluetoothEventManager$BatteryLevelChangedHandler:
    com.android.settingslib.bluetooth.BluetoothEventManager this$0 -> this$0
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager,com.android.settingslib.bluetooth.BluetoothEventManager$BatteryLevelChangedHandler) -> <init>
    void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice) -> onReceive
    void <init>(com.android.settingslib.bluetooth.BluetoothEventManager) -> <init>
com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA$1 -> com.android.systemui.globalactions.-$Lambda$XtPoP8MHkpsFyV9ZUE9Cn-i2bpA$1:
    java.lang.Object -$f0 -> -$f0
    void <init>(java.lang.Object) -> <init>
    void $m$0(android.view.View) -> $m$0
    void onClick(android.view.View) -> onClick
com.android.systemui.stackdivider.ForcedResizableInfoActivityController$2 -> com.android.systemui.stackdivider.ForcedResizableInfoActivityController$2:
    com.android.systemui.stackdivider.ForcedResizableInfoActivityController this$0 -> this$0
    void <init>(com.android.systemui.stackdivider.ForcedResizableInfoActivityController) -> <init>
    void onActivityDismissingDockedStack() -> onActivityDismissingDockedStack
    void onActivityForcedResizable(java.lang.String,int,int) -> onActivityForcedResizable
    void onActivityLaunchOnSecondaryDisplayFailed() -> onActivityLaunchOnSecondaryDisplayFailed
com.android.systemui.ImageWallpaper$DrawableEngine -> com.android.systemui.ImageWallpaper$DrawableEngine:
    android.graphics.Bitmap mBackground -> mBackground
    int mBackgroundHeight -> mBackgroundHeight
    int mBackgroundWidth -> mBackgroundWidth
    android.view.Display mDefaultDisplay -> mDefaultDisplay
    int mDisplayHeightAtLastSurfaceSizeUpdate -> mDisplayHeightAtLastSurfaceSizeUpdate
    int mDisplayWidthAtLastSurfaceSizeUpdate -> mDisplayWidthAtLastSurfaceSizeUpdate
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    int mLastRequestedHeight -> mLastRequestedHeight
    int mLastRequestedWidth -> mLastRequestedWidth
    int mLastRotation -> mLastRotation
    int mLastSurfaceHeight -> mLastSurfaceHeight
    int mLastSurfaceWidth -> mLastSurfaceWidth
    int mLastXTranslation -> mLastXTranslation
    int mLastYTranslation -> mLastYTranslation
    android.os.AsyncTask mLoader -> mLoader
    boolean mNeedsDrawAfterLoadingWallpaper -> mNeedsDrawAfterLoadingWallpaper
    boolean mOffsetsChanged -> mOffsetsChanged
    int mRotationAtLastSurfaceSizeUpdate -> mRotationAtLastSurfaceSizeUpdate
    float mScale -> mScale
    boolean mSurfaceValid -> mSurfaceValid
    android.view.DisplayInfo mTmpDisplayInfo -> mTmpDisplayInfo
    boolean mVisible -> mVisible
    float mXOffset -> mXOffset
    float mYOffset -> mYOffset
    com.android.systemui.ImageWallpaper this$0 -> this$0
    void <init>(com.android.systemui.ImageWallpaper) -> <init>
    int buildProgram(java.lang.String,java.lang.String) -> buildProgram
    int buildShader(java.lang.String,int) -> buildShader
    void checkEglError() -> checkEglError
    void checkGlError() -> checkGlError
    javax.microedition.khronos.egl.EGLConfig chooseEglConfig() -> chooseEglConfig
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    java.nio.FloatBuffer createMesh(int,int,float,float) -> createMesh
    void drawFrame() -> drawFrame
    void drawWallpaperWithCanvas(android.view.SurfaceHolder,int,int,int,int) -> drawWallpaperWithCanvas
    boolean drawWallpaperWithOpenGL(android.view.SurfaceHolder,int,int,int,int) -> drawWallpaperWithOpenGL
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void finishGL(int,int) -> finishGL
    int[] getConfig() -> getConfig
    android.view.DisplayInfo getDefaultDisplayInfo() -> getDefaultDisplayInfo
    boolean initGL(android.view.SurfaceHolder) -> initGL
    int loadTexture(android.graphics.Bitmap) -> loadTexture
    void loadWallpaper(boolean,boolean) -> loadWallpaper
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onDestroy() -> onDestroy
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
    void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    void onSurfaceRedrawNeeded(android.view.SurfaceHolder) -> onSurfaceRedrawNeeded
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void trimMemory(int) -> trimMemory
    void unloadWallpaper(boolean) -> unloadWallpaper
    boolean updateSurfaceSize(android.view.SurfaceHolder,android.view.DisplayInfo,boolean) -> updateSurfaceSize
    boolean -get0(com.android.systemui.ImageWallpaper$DrawableEngine) -> -get0
    android.os.AsyncTask -set0(com.android.systemui.ImageWallpaper$DrawableEngine,android.os.AsyncTask) -> -set0
    boolean -set1(com.android.systemui.ImageWallpaper$DrawableEngine,boolean) -> -set1
    android.view.DisplayInfo -wrap0(com.android.systemui.ImageWallpaper$DrawableEngine) -> -wrap0
android.support.v7.widget.helper.ItemTouchHelper$2 -> android.support.v7.widget.helper.ItemTouchHelper$2:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
com.android.systemui.egg.MLand$Cloud -> com.android.systemui.egg.MLand$Cloud:
    com.android.systemui.egg.MLand this$0 -> this$0
    void <init>(com.android.systemui.egg.MLand,android.content.Context) -> <init>
com.android.systemui.DessertCaseView -> com.android.systemui.DessertCaseView:
    float[] ALPHA_MASK -> ALPHA_MASK
    float[] MASK -> MASK
    int NUM_PASTRIES -> NUM_PASTRIES
    int[] PASTRIES -> PASTRIES
    int[] RARE_PASTRIES -> RARE_PASTRIES
    java.lang.String TAG -> TAG
    float[] WHITE_MASK -> WHITE_MASK
    int[] XRARE_PASTRIES -> XRARE_PASTRIES
    int[] XXRARE_PASTRIES -> XXRARE_PASTRIES
    float[] hsv -> hsv
    int mCellSize -> mCellSize
    android.view.View[] mCells -> mCells
    int mColumns -> mColumns
    android.util.SparseArray mDrawables -> mDrawables
    java.util.Set mFreeList -> mFreeList
    android.os.Handler mHandler -> mHandler
    int mHeight -> mHeight
    java.lang.Runnable mJuggle -> mJuggle
    int mRows -> mRows
    boolean mStarted -> mStarted
    int mWidth -> mWidth
    java.util.HashSet tmpSet -> tmpSet
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.graphics.Bitmap convertToAlphaMask(android.graphics.Bitmap) -> convertToAlphaMask
    void fillFreeList() -> fillFreeList
    void fillFreeList(int) -> fillFreeList
    float frand() -> frand
    float frand(float,float) -> frand
    android.graphics.Point[] getOccupied(android.view.View) -> getOccupied
    int irand(int,int) -> irand
    android.animation.Animator$AnimatorListener makeHardwareLayerListener(android.view.View) -> makeHardwareLayerListener
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int pick(int[]) -> pick
    void place(android.view.View,boolean) -> place
    void place(android.view.View,android.graphics.Point,boolean) -> place
    int random_color() -> random_color
    void start() -> start
    void stop() -> stop
    void <clinit>() -> <clinit>
    android.os.Handler -get0(com.android.systemui.DessertCaseView) -> -get0
    java.lang.Runnable -get1(com.android.systemui.DessertCaseView) -> -get1
    boolean -get2(com.android.systemui.DessertCaseView) -> -get2
com.android.systemui.statusbar.phone.PhoneStatusBarView$1 -> com.android.systemui.statusbar.phone.PhoneStatusBarView$1:
    com.android.systemui.statusbar.phone.PhoneStatusBarView this$0 -> this$0
    void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarView) -> <init>
    void run() -> run
android.support.v17.leanback.widget.ShadowHelper$ShadowHelperVersionImpl -> android.support.v17.leanback.widget.ShadowHelper$ShadowHelperVersionImpl:
    void setZ(android.view.View,float) -> setZ
com.android.systemui.qs.tiles.WifiTile$CallbackInfo -> com.android.systemui.qs.tiles.WifiTile$CallbackInfo:
    boolean activityIn -> activityIn
    boolean activityOut -> activityOut
    boolean connected -> connected
    boolean enabled -> enabled
    java.lang.String enabledDesc -> enabledDesc
    boolean isTransient -> isTransient
    java.lang.String wifiSignalContentDescription -> wifiSignalContentDescription
    int wifiSignalIconId -> wifiSignalIconId
    void <init>() -> <init>
    java.lang.String toString() -> toString
com.android.systemui.doze.DozeUi -> com.android.systemui.doze.DozeUi:
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.android.systemui.doze.DozeHost mHost -> mHost
    long mLastTimeTickElapsed -> mLastTimeTickElapsed
    com.android.systemui.doze.DozeMachine mMachine -> mMachine
    com.android.systemui.util.AlarmTimeout mTimeTicker -> mTimeTicker
    com.android.systemui.util.wakelock.WakeLock mWakeLock -> mWakeLock
    int[] -com-android-systemui-doze-DozeMachine$StateSwitchesValues -> -com-android-systemui-doze-DozeMachine$StateSwitchesValues
    void <init>(android.content.Context,android.app.AlarmManager,com.android.systemui.doze.DozeMachine,com.android.systemui.util.wakelock.WakeLock,com.android.systemui.doze.DozeHost,android.os.Handler) -> <init>
    void onTimeTick() -> onTimeTick
    void pulseWhileDozing(int) -> pulseWhileDozing
    long roundToNextMinute(long) -> roundToNextMinute
    void scheduleTimeTick() -> scheduleTimeTick
    void transitionTo(com.android.systemui.doze.DozeMachine$State,com.android.systemui.doze.DozeMachine$State) -> transitionTo
    void unscheduleTimeTick() -> unscheduleTimeTick
    void updateAnimateWakeup(com.android.systemui.doze.DozeMachine$State) -> updateAnimateWakeup
    void verifyLastTimeTick() -> verifyLastTimeTick
    void -com_android_systemui_doze_DozeUi-mthref-0() -> -com_android_systemui_doze_DozeUi-mthref-0
    void lambda$-com_android_systemui_doze_DozeUi_5067() -> lambda$-com_android_systemui_doze_DozeUi_5067
    com.android.systemui.doze.DozeMachine -get0(com.android.systemui.doze.DozeUi) -> -get0
    int[] -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues() -> -getcom-android-systemui-doze-DozeMachine$StateSwitchesValues
android.support.v7.widget.SimpleItemAnimator -> android.support.v7.widget.SimpleItemAnimator:
    boolean mSupportsChangeAnimations -> mSupportsChangeAnimations
    void dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveFinished
    boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    void dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    boolean animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    void onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveStarting
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    void dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    void dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    void dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddFinished
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemove
    void onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddStarting
    void onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAdd
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    void <init>() -> <init>
    void dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    void onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    void dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    void dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
